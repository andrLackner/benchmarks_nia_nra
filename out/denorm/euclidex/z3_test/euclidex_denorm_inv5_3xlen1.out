unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x424 (* q00 a00 s!0)))
 (let ((?x402 (* r00 b00 q!3)))
 (let ((?x251 (* p00 s00 b!2)))
 (let ((?x485 (+ ?x251 (* (- 1) (* p00 b00 s!0)) ?x402 (* (- 1) (* s00 a00 q!3)) ?x424 (* (- 1) (* q00 r00 b!2)))))
 (let (($x383 (>= ?x485 0)))
 (let (($x486 (= ?x485 0)))
 (let ((?x135 (* (- 1) (* s00 a00 p!5))))
 (let ((?x518 (* q00 r00 b!2)))
 (let ((?x517 (* q00 a00 r!1)))
 (let ((?x503 (* (- 1) (* q00 r00 a!4))))
 (let ((?x385 (* (- 1) (* p00 b00 r!1))))
 (let ((?x506 (* r00 b00 p!5)))
 (let ((?x433 (* (- 1) ?x424)))
 (let ((?x408 (* s00 a00 q!3)))
 (let ((?x418 (* (- 1) ?x402)))
 (let ((?x298 (* p00 b00 s!0)))
 (let ((?x140 (* (- 1) ?x251)))
 (let ((?x249 (* p00 s00 a!4)))
 (let ((?x382 (* (- 1) p!5)))
 (let ((?x527 (+ q!3 ?x382)))
 (let ((?x255 (* (- 1) a!4)))
 (let ((?x520 (+ b!2 ?x255)))
 (let ((?x122 (+ (* (- 1) r!1) s!0)))
 (let ((?x568 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x520 ?x520 ?x520 ?x527 ?x527 ?x527 (+ ?x249 ?x140 ?x298 ?x418 ?x408 ?x433 ?x506 ?x385 ?x503 ?x517 ?x518 ?x135) r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5)))
 (let (($x537 (= ?x568 0)))
 (let ((?x435 (* (- 1) q!3)))
 (let ((?x562 (+ ?x435 p!5)))
 (let ((?x574 (* (- 1) b!2)))
 (let ((?x549 (+ ?x574 a!4)))
 (let ((?x570 (+ r!1 (* (- 1) s!0))))
 (let ((?x195 (* ?x570 ?x570 ?x570 ?x570 ?x570 ?x549 ?x549 ?x549 ?x549 ?x549 ?x549 ?x562 ?x562 ?x562 ?x562 (+ ?x140 ?x298 ?x418 ?x408 ?x433 ?x518) s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let (($x191 (= ?x195 0)))
 (let (($x192 (not $x191)))
 (let (($x591 (or $x192 (not $x537))))
 (let ((?x458 (+ ?x249 ?x506 ?x385 ?x503 ?x517 ?x135)))
 (let (($x373 (= ?x458 0)))
 (let ((?x129 (* q00 a00)))
 (let ((?x822 (+ ?x129 (* (- 1) (* p00 b00)) (* (- 1) (* q!3 a!4)) (* b!2 p!5))))
 (let ((?x492 (* b!2 r!1)))
 (let ((?x125 (* s00 a00)))
 (let (($x528 (= (+ ?x125 (* (- 1) (* r00 b00)) ?x492 (* (- 1) (* a!4 s!0))) 0)))
 (let ((?x498 (* q!3 r!1)))
 (let ((?x37 (* p00 s00)))
 (let (($x228 (= (+ ?x37 (* (- 1) (* q00 r00)) (* (- 1) (* p!5 s!0)) ?x498) 0)))
 (let (($x154 (and $x228 $x528 (= ?x822 0) $x373 $x486 $x591)))
 (let ((?x815 (* (- 1) (* s!0 q00 a00))))
 (let ((?x332 (* q!3 s00 a00)))
 (let ((?x326 (* (- 1) (* q!3 r00 b00))))
 (let ((?x430 (* s!0 p00 b00)))
 (let ((?x429 (* (- 1) (* b!2 p00 s00))))
 (let ((?x415 (* b!2 q00 r00)))
 (let ((?x830 (+ ?x415 ?x429 ?x430 ?x326 ?x332 ?x815)))
 (let ((?x805 (+ p!5 ?x435)))
 (let ((?x561 (+ a!4 ?x574)))
 (let ((?x808 (* ?x570 ?x570 ?x570 ?x570 ?x570 ?x561 ?x561 ?x561 ?x561 ?x561 ?x561 ?x805 ?x805 ?x805 ?x805 ?x830 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let ((?x165 (* r!1 q00 a00)))
 (let ((?x166 (* (- 1) (* p!5 s00 a00))))
 (let ((?x178 (* (- 1) (* r!1 p00 b00))))
 (let ((?x463 (* p!5 r00 b00)))
 (let ((?x543 (* (- 1) (* a!4 q00 r00))))
 (let ((?x567 (* a!4 p00 s00)))
 (let ((?x401 (+ ?x382 q!3)))
 (let ((?x379 (+ ?x255 b!2)))
 (let ((?x508 (* ?x122 ?x122 ?x122 ?x122 ?x122 ?x379 ?x379 ?x379 ?x401 ?x401 ?x401 (+ ?x567 ?x543 ?x415 ?x429 ?x463 ?x178 ?x166 ?x165 ?x430 ?x326 ?x332 ?x815) r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5)))
 (let ((?x130 (* p00 b00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x504 (= (+ (* a!4 s!0) (* (- 1) ?x492) (* (- 1) ?x125) (* r00 b00)) 0)))
 (let (($x474 (= (+ (* p!5 s!0) (* (- 1) ?x37) (* q00 r00) (* (- 1) ?x498)) 0)))
 (let (($x806 (and $x474 $x504 (= (+ (* a!4 q!3) ?x173 ?x130 (* (- 1) (* p!5 b!2))) 0) (= (+ ?x567 ?x543 ?x463 ?x178 ?x166 ?x165) 0) (= ?x830 0) (or (not (= ?x508 0)) (not (= ?x808 0))))))
 (let (($x803 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x432 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x305 s s s s s b b b q q q)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x388 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x548 (* (- 1) p)))
 (let ((?x544 (+ ?x548 q)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x331 (+ ?x325 b)))
 (let ((?x585 (* (- 1) r)))
 (let ((?x580 (+ ?x585 s)))
 (let ((?x144 (* ?x580 ?x580 ?x580 ?x580 ?x580 ?x331 ?x331 ?x331 ?x544 ?x544 ?x544 ?x388 r r r r r a a a a a a p p p p)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (and $x153 $x158 $x176 $x242 $x310 (or (not (= ?x144 0)) (not (= ?x432 0))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x304 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x548 (* (- 1) p)))
 (let ((?x292 (+ q ?x548)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x261 (+ b ?x325)))
 (let ((?x585 (* (- 1) r)))
 (let ((?x287 (+ s ?x585)))
 (let ((?x223 (* ?x287 ?x287 ?x287 ?x287 ?x287 ?x261 ?x261 ?x261 ?x292 ?x292 ?x292 ?x196 r r r r r a a a a a a p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x275 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x559 s s s s s b b b q q q)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x579 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x457 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x469 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x469 0) $x457 (= ?x579 0) (= ?x559 0) (or (not (= ?x275 0)) (not (= ?x223 0)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x807 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x299 (* (- 1) (* s q00 a00))))
 (let ((?x282 (* q s00 a00)))
 (let ((?x257 (* (- 1) (* q r00 b00))))
 (let ((?x247 (* s p00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x271 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x305 (+ ?x72 ?x271 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x432 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x305 s s s s s b b b q q q)))
 (let ((?x218 (* r q00 a00)))
 (let ((?x240 (* (- 1) (* p s00 a00))))
 (let ((?x239 (* (- 1) (* r p00 b00))))
 (let ((?x184 (* p r00 b00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x238 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x388 (+ ?x63 ?x238 ?x72 ?x271 ?x184 ?x239 ?x240 ?x218 ?x247 ?x257 ?x282 ?x299)))
 (let ((?x548 (* (- 1) p)))
 (let ((?x544 (+ ?x548 q)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x331 (+ ?x325 b)))
 (let ((?x585 (* (- 1) r)))
 (let ((?x580 (+ ?x585 s)))
 (let ((?x144 (* ?x580 ?x580 ?x580 ?x580 ?x580 ?x331 ?x331 ?x331 ?x544 ?x544 ?x544 ?x388 r r r r r a a a a a a p p p p)))
 (let (($x310 (= ?x305 0)))
 (let (($x242 (= (+ ?x63 ?x238 ?x184 ?x239 ?x240 ?x218) 0)))
 (let ((?x130 (* p00 b00)))
 (let ((?x129 (* q00 a00)))
 (let ((?x173 (* (- 1) ?x129)))
 (let (($x176 (= (+ (* a q) ?x173 ?x130 (* (- 1) (* p b))) 0)))
 (let ((?x143 (* r00 b00)))
 (let ((?x125 (* s00 a00)))
 (let ((?x132 (* (- 1) ?x125)))
 (let ((?x49 (* a s)))
 (let (($x158 (= (+ ?x49 (* (- 1) (* b r)) ?x132 ?x143) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x153 (= (+ ?x33 ?x134 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x829 (and $x153 $x158 $x176 $x242 $x310 (or (not (= ?x144 0)) (not (= ?x432 0))))))
 (let ((?x196 (+ (* q00 r00 (+ b ?x325)) (* b00 p00 (+ s ?x585)) (* (- 1) (* b00 r00 (+ q ?x548))) (* (- 1) (* p00 s00 (+ b ?x325))) (* a00 s00 (+ q ?x548)) (* (- 1) (* a00 q00 (+ s ?x585))))))
 (let ((?x292 (+ q ?x548)))
 (let ((?x261 (+ b ?x325)))
 (let ((?x287 (+ s ?x585)))
 (let ((?x223 (* ?x287 ?x287 ?x287 ?x287 ?x287 ?x261 ?x261 ?x261 ?x292 ?x292 ?x292 ?x196 r r r r r a a a a a a p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x275 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x559 s s s s s b b b q q q)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x579 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x457 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x469 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x139 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x469 0) $x457 (= ?x579 0) (= ?x559 0) (or (not (= ?x275 0)) (not (= ?x223 0))))))
 (rewrite (= $x139 $x829)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x109 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x92 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x90 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 ?x95 r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 ?x95 s00)) (* a00 q00 ?x92))))
 (let ((?x104 (* ?x103 ?x31 a a ?x90 p ?x95 r ?x92 a a a ?x90 r r ?x92 ?x92 ?x92 a ?x90 p p p ?x95 ?x95 r r ?x92)))
 (let ((?x86 (- r s)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x82 (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81)))
 (let ((?x87 (* ?x82 ?x31 ?x84 ?x84 b ?x85 q ?x86 s ?x84 ?x84 ?x84 b ?x86 ?x86 s s s ?x84 b ?x85 ?x85 ?x85 q q ?x86 ?x86 s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not (= ?x104 0))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x273 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x196 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x548 (* (- 1) p)))
 (let ((?x292 (+ q ?x548)))
 (let ((?x325 (* (- 1) a)))
 (let ((?x261 (+ b ?x325)))
 (let ((?x585 (* (- 1) r)))
 (let ((?x287 (+ s ?x585)))
 (let ((?x223 (* ?x287 ?x287 ?x287 ?x287 ?x287 ?x261 ?x261 ?x261 ?x292 ?x292 ?x292 ?x196 r r r r r a a a a a a p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x318 (+ p (* (- 1) q))))
 (let ((?x314 (+ a (* (- 1) b))))
 (let ((?x322 (+ r (* (- 1) s))))
 (let ((?x275 (* ?x322 ?x322 ?x322 ?x322 ?x322 ?x314 ?x314 ?x314 ?x314 ?x314 ?x314 ?x318 ?x318 ?x318 ?x318 ?x559 s s s s s b b b q q q)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x579 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x457 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x469 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x134 (* (- 1) ?x37)))
 (let (($x139 (and (= (+ (* (- 1) (* r q)) (* s p) ?x134 ?x41) 0) (= ?x469 0) $x457 (= ?x579 0) (= ?x559 0) (or (not (= ?x275 0)) (not (= ?x223 0))))))
 (let ((?x92 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x90 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x98 (- (+ (* ?x90 q00 r00) (* b00 p00 ?x92)) (* b00 ?x95 r00))))
 (let ((?x103 (- (+ (- ?x98 (* ?x90 p00 s00)) (* a00 ?x95 s00)) (* a00 q00 ?x92))))
 (let ((?x104 (* ?x103 ?x31 a a ?x90 p ?x95 r ?x92 a a a ?x90 r r ?x92 ?x92 ?x92 a ?x90 p p p ?x95 ?x95 r r ?x92)))
 (let ((?x86 (- r s)))
 (let ((?x85 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x82 (- ?x80 ?x81)))
 (let ((?x87 (* ?x82 ?x31 ?x84 ?x84 b ?x85 q ?x86 s ?x84 ?x84 ?x84 b ?x86 ?x86 s s s ?x84 b ?x85 ?x85 ?x85 q q ?x86 ?x86 s)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x108 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= ?x82 0) (or (not (= ?x87 0)) (not (= ?x104 0))))))
 (rewrite (= $x108 $x139))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x110 (asserted $x109)))
 (let ((@x476 (mp (mp @x110 (quant-intro (proof-bind ?x273) (= $x109 $x304)) $x304) (rewrite (= $x304 $x304)) $x304)))
 (let ((@x422 (mp~ (mp @x476 (quant-intro (proof-bind ?x807) (= $x304 $x803)) $x803) (sk (~ $x803 $x806)) $x806)))
 (let ((@x202 (mp @x422 (rewrite (= $x806 $x154)) $x154)))
 (let ((@x203 (and-elim @x202 $x486)))
 (let ((@x509 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x486) $x383)) @x203 $x383)))
 (let (($x376 (<= ?x485 0)))
 (let ((@x478 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x486) $x376)) @x203 $x376)))
 (let (($x136 (not (<= ?x195 0))))
 (let (($x421 (>= ?x568 0)))
 (let (($x254 (<= ?x458 0)))
 (let ((@x211 (and-elim @x202 $x373)))
 (let ((@x156 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x373) $x254)) @x211 $x254)))
 (let (($x465 (>= ?x458 0)))
 (let ((@x515 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x373) $x465)) @x211 $x465)))
 (let ((@x428 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x421)) @x515 @x478 @x156 @x509 false) $x421)))
 (let (($x419 (<= ?x568 0)))
 (let ((@x598 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x419)) @x515 @x478 @x156 @x509 false) $x419)))
 (let ((@x826 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x537 (not $x419) (not $x421))) @x598 @x428 $x537)))
 (let (($x381 (>= ?x195 0)))
 (let ((@x323 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x191 $x136 (not $x381))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x381)) @x478 @x509 false) $x381) (unit-resolution (and-elim @x202 $x591) @x826 $x192) $x136)))
 ((_ th-lemma arith farkas 1 1 1) @x323 @x478 @x509 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 14
 :arith-assert-diseq        3
 :arith-assert-lower        23
 :arith-assert-upper        22
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           10
 :arith-grobner             4
 :arith-max-min             360
 :arith-nonlinear-horner    44
 :arith-num-rows            13
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      3
 :arith-tableau-max-columns 52
 :arith-tableau-max-rows    13
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                19.61
 :memory                    19.15
 :mk-bool-var               33
 :mk-clause                 40
 :num-allocs                532631
 :num-checks                1
 :propagations              19
 :rlimit-count              10411
 :time                      0.01
 :total-time                0.03)
