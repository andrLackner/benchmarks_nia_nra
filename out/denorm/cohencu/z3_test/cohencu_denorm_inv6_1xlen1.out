unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun y!2 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1717 (* x!3 z!1)))
 (let ((?x1076 (* 108 ?x1717)))
 (let ((?x1654 (* y!2 y!2)))
 (let ((?x817 (* 240 ?x1654)))
 (let ((?x1772 (* (- 2) (* z00 z00 z00 x!3))))
 (let ((?x1082 (* (- 12) (* y!2 z!1 z!1))))
 (let ((?x1361 (* z00 z00 x!3)))
 (let ((?x1585 (* 18 ?x1361)))
 (let ((?x1249 (* 108 (* x00 x00))))
 (let ((?x1097 (* (- 216) (* x00 x!3))))
 (let ((?x1146 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1142 (* z00 z00 z00 y00)))
 (let ((?x359 (* 108 (* x!3 x!3))))
 (let ((?x1052 (* (- 36) (* z00 y00 x00))))
 (let ((?x1083 (* (- 12) (* y00 y!2 y!2))))
 (let ((?x950 (* 16 (* y00 y00 y00))))
 (let ((?x941 (* y00 x!3)))
 (let ((?x965 (* (- 216) ?x941)))
 (let ((?x847 (* z00 z00 x00)))
 (let ((?x1102 (* (- 18) ?x847)))
 (let ((?x810 (* y!2 y!2 z!1)))
 (let ((?x381 (* (- 12) ?x810)))
 (let ((?x771 (* z00 y!2 y!2)))
 (let ((?x1544 (* (- 6) ?x771)))
 (let ((?x726 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x692 (* z00 x!3)))
 (let ((?x1515 (* (- 36) ?x692)))
 (let ((?x661 (* z00 z00 y00)))
 (let ((?x1203 (* (- 10) ?x661)))
 (let ((?x636 (* z00 y00 y00)))
 (let ((?x678 (* (- 12) ?x636)))
 (let ((?x631 (* y!2 z!1)))
 (let ((?x388 (* 156 ?x631)))
 (let ((?x562 (* z00 z00 y!2 y!2)))
 (let ((?x1743 (* (- 4) (* z!1 z!1 z!1))))
 (let ((?x527 (* y00 y00)))
 (let ((?x1002 (* 96 ?x527)))
 (let ((?x497 (* z00 x00)))
 (let ((?x415 (* 36 ?x497)))
 (let ((?x460 (* z00 y00)))
 (let ((?x841 (* 24 ?x460)))
 (let ((?x457 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x428 (* z!1 z!1)))
 (let ((?x1262 (* 24 ?x428)))
 (let ((?x292 (* 36 (* z00 y00 x!3))))
 (let ((?x407 (* y00 x00)))
 (let ((?x398 (* 216 ?x407)))
 (let ((?x1723 (+ (* 28 (* z00 z00 y!2)) (* (- 24) (* z00 z!1)) (* 18 (* z00 y00 z!1)) ?x398 ?x292 ?x1262 ?x457 ?x841 ?x415 (* z00 z00 z!1 z!1) ?x1002 ?x1743 (* (- 24) (* y00 y!2 z!1)) ?x562 (* (- 336) (* y00 y!2)) ?x388 ?x678 ?x1203 ?x1515 ?x726 (* (- 1) (* z00 z00 z00 z!1)) ?x1544 ?x381 ?x1102 (* (- 12) (* z00 y!2 z!1)) ?x965 ?x950 (* 54 (* z00 y00 y!2)) ?x1083 (* 2 (* z00 z00 y!2 z!1)) (* (- 324) (* x00 y!2)) ?x1052 ?x359 (* (- 12) (* y00 z!1 z!1)) (* (- 3) (* z00 z00 z00 y!2)) ?x1142 ?x1146 ?x1097 ?x1249 (* (- 6) (* z00 z!1 z!1)) (* 324 (* y!2 x!3)) (* 10 (* z00 z00 z!1)) (* (- 120) (* y00 z!1)) ?x1585 (* (- 108) (* x00 z!1)) ?x1082 ?x1772 (* (- 60) (* z00 y!2)) ?x817 ?x1076)))
 (let (($x1437 (<= ?x1723 0)))
 (let ((?x319 (* z00 z00)))
 (let ((?x1132 (* (- 1) ?x319)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x1191 (+ ?x49 ?x43 ?x1132 ?x428 (* (- 12) y!2) (* (- 6) z!1))))
 (let (($x618 (<= ?x1191 0)))
 (let (($x1192 (= ?x1191 0)))
 (let ((?x558 (+ y!2 x!3)))
 (let ((?x1247 (+ y!2 z!1)))
 (let ((?x851 (* ?x1247 ?x558 ?x558 ?x558 ?x1723)))
 (let (($x1753 (= ?x851 0)))
 (let (($x1068 (not $x1753)))
 (let ((?x1718 (* 24 ?x1654)))
 (let ((?x1414 (+ (* 10 (* z00 z00 y!2)) ?x398 ?x292 ?x457 ?x841 ?x415 ?x1002 ?x562 (* (- 120) (* y00 y!2)) ?x678 ?x1203 ?x1515 ?x726 ?x1544 ?x1102 ?x965 ?x950 (* 18 (* z00 y00 y!2)) ?x1083 (* (- 108) (* x00 y!2)) ?x1052 ?x359 (* (- 1) (* z00 z00 z00 y!2)) ?x1142 ?x1146 ?x1097 ?x1249 (* 108 (* y!2 x!3)) ?x1585 ?x1772 (* (- 24) (* z00 y!2)) ?x1718)))
 (let (($x417 (= ?x1414 0)))
 (let ((?x1539 (* 18 ?x1717)))
 (let ((?x1461 (* x00 z!1)))
 (let ((?x1536 (* (- 18) ?x1461)))
 (let ((?x1330 (* y00 z!1)))
 (let ((?x1332 (* (- 12) ?x1330)))
 (let ((?x963 (* z00 y00 y!2)))
 (let ((?x938 (* (- 108) x!3)))
 (let ((?x937 (* (- 72) y!2)))
 (let ((?x584 (* 12 ?x631)))
 (let ((?x576 (* 6 ?x460)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x802 (+ ?x67 ?x74 (* 3 (* z00 z00 y!2)) (* 18 ?x407) (* 3 (* z00 x!3 z!1)) ?x576 (* 36 ?x527) (* (- 1) (* y00 y!2 z!1)) (* (- 36) (* y00 y!2)) ?x584 ?x636 (* (- 3) ?x661) (* (- 3) (* z00 x00 z!1)) (* (- 2) ?x771) ?x937 (* (- 1) ?x810) ?x938 (* (- 3) ?x847) (* (- 18) ?x941) ?x963 (* (- 18) (* x00 y!2)) (* 18 (* y!2 x!3)) ?x1332 (* 3 ?x1361) ?x1536 (* (- 6) (* z00 y!2)) (* 2 (* y00 y00 z!1)) ?x1539)))
 (let (($x628 (= ?x802 0)))
 (let ((?x735 (* (- 6) ?x460)))
 (let ((?x343 (* z00 y00 z!1)))
 (let ((?x295 (* z00 z00 y!2)))
 (let ((?x1255 (+ ?x67 ?x74 ?x295 ?x343 ?x735 (* (- 18) ?x497) (* 24 ?x527) (* (- 12) (* y00 y!2)) ?x584 (* (- 1) ?x661) (* 18 ?x692) ?x937 ?x938 (* (- 1) (* z00 y!2 z!1)) ?x1332 ?x1536 (* 6 (* z00 y!2)) (* (- 12) ?x1654) ?x1539)))
 (let (($x1264 (= ?x1255 0)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1501 (+ ?x67 ?x55 ?x74 (* (- 6) ?x319) (* 6 (* z00 z!1)) (* (- 18) ?x460) (* 6 ?x631) ?x937 ?x938 (* (- 1) (* z00 z00 z!1)) (* 12 ?x1330))))
 (let (($x1567 (= ?x1501 0)))
 (let ((?x365 (* (- 6) n00)))
 (let ((?x818 (+ z00 ?x365 (* 6 n!0) (* (- 1) z!1))))
 (let (($x604 (= ?x818 0)))
 (let (($x1584 (and $x604 $x1192 $x1567 $x1264 $x628 $x417 $x1068)))
 (let ((?x1503 (* 36 (* x!3 z00 y00))))
 (let ((?x1494 (* (- 216) (* x!3 x00))))
 (let ((?x1199 (* (- 12) (* y!2 y!2 y00))))
 (let ((?x1415 (* x!3 y00)))
 (let ((?x439 (* (- 216) ?x1415)))
 (let ((?x1086 (* y!2 y!2 z00)))
 (let ((?x1254 (* (- 6) ?x1086)))
 (let ((?x1788 (* x!3 z00)))
 (let ((?x1134 (* (- 36) ?x1788)))
 (let ((?x811 (* x!3 z00 z00)))
 (let ((?x708 (* 18 ?x811)))
 (let ((?x474 (* (- 2) (* x!3 z00 z00 z00))))
 (let ((?x694 (* y!2 y!2 z00 z00)))
 (let ((?x872 (+ ?x1262 (* 10 (* z!1 z00 z00)) (* (- 12) (* y!2 z!1 z00)) (* 28 (* y!2 z00 z00)) ?x381 ?x694 (* (- 3) (* y!2 z00 z00 z00)) (* 18 (* z!1 z00 y00)) ?x388 ?x474 ?x398 (* 324 (* x!3 y!2)) ?x1076 (* (- 120) (* z!1 y00)) ?x841 (* (- 24) (* z!1 z00)) ?x415 ?x817 ?x1002 (* (- 108) (* z!1 x00)) (* (- 336) (* y!2 y00)) ?x708 (* (- 60) (* y!2 z00)) ?x678 ?x1203 ?x1134 (* 54 (* y!2 z00 y00)) ?x726 ?x359 ?x457 ?x1254 (* (- 324) (* y!2 x00)) ?x1102 ?x439 (* (- 24) (* y!2 z!1 y00)) ?x950 ?x1199 ?x1052 ?x1082 ?x1743 ?x1494 ?x1142 ?x1146 ?x1503 ?x1249 (* (- 6) (* z!1 z!1 z00)) (* (- 12) (* z!1 z!1 y00)) (* 2 (* y!2 z!1 z00 z00)) (* z!1 z!1 z00 z00) (* (- 1) (* z!1 z00 z00 z00)))))
 (let ((?x1261 (+ x!3 y!2)))
 (let ((?x958 (+ (* 10 (* y!2 z00 z00)) ?x694 (* (- 1) (* y!2 z00 z00 z00)) ?x474 ?x398 (* 108 (* x!3 y!2)) ?x841 ?x415 ?x1718 ?x1002 (* (- 120) (* y!2 y00)) ?x708 (* (- 24) (* y!2 z00)) ?x678 ?x1203 ?x1134 (* 18 (* y!2 z00 y00)) ?x726 ?x359 ?x457 ?x1254 (* (- 108) (* y!2 x00)) ?x1102 ?x439 ?x950 ?x1199 ?x1052 ?x1494 ?x1142 ?x1146 ?x1503 ?x1249)))
 (let ((?x691 (* y!2 z!1 y00)))
 (let ((?x848 (* 3 ?x847)))
 (let ((?x910 (* 3 ?x661)))
 (let ((?x643 (* (- 1) ?x636)))
 (let ((?x1656 (* z!1 x00)))
 (let ((?x1657 (* 18 ?x1656)))
 (let ((?x830 (* (- 36) ?x527)))
 (let ((?x729 (* z!1 y00)))
 (let ((?x1653 (* 12 ?x729)))
 (let ((?x1234 (* (- 18) ?x1717)))
 (let ((?x408 (* (- 18) ?x407)))
 (let ((?x1061 (* (- 12) ?x631)))
 (let ((?x539 (* (- 108) x00)))
 (let ((?x482 (* (- 72) y00)))
 (let ((?x500 (* 72 y!2)))
 (let ((?x465 (* 108 x!3)))
 (let ((?x693 (+ ?x465 ?x500 ?x482 ?x539 (* (- 3) (* y!2 z00 z00)) ?x810 ?x1061 ?x408 (* (- 18) (* x!3 y!2)) ?x1234 ?x1653 ?x735 ?x830 ?x1657 (* 36 (* y!2 y00)) (* (- 3) ?x811) (* 6 (* y!2 z00)) ?x643 ?x910 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 ?x1086) (* 18 (* y!2 x00)) ?x848 (* 18 ?x1415) ?x691 (* (- 2) (* z!1 y00 y00)))))
 (let ((?x556 (* (- 24) ?x527)))
 (let ((?x498 (* 18 ?x497)))
 (let ((?x1839 (* y!2 z!1 z00)))
 (let ((?x1290 (+ ?x465 ?x500 ?x482 ?x539 ?x1839 (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x1061 ?x1234 ?x1653 ?x576 ?x498 (* 12 ?x1654) ?x556 ?x1657 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x661 (* (- 18) ?x1788))))
 (let ((?x461 (* 18 ?x460)))
 (let ((?x423 (* 6 ?x319)))
 (let ((?x624 (* z!1 z00 z00)))
 (let ((?x412 (* (- 1) ?x55)))
 (let ((?x519 (+ ?x465 ?x500 ?x482 ?x412 ?x539 ?x624 ?x423 (* (- 6) ?x631) (* (- 12) ?x729) ?x461 (* (- 6) (* z!1 z00)))))
 (let ((?x390 (* (- 12) y00)))
 (let ((?x389 (* (- 6) z00)))
 (let (($x445 (= (+ (* 12 y!2) (* 6 z!1) ?x389 ?x390 (* (- 1) ?x428) ?x319) 0)))
 (let (($x1343 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x445 (= ?x519 0) (= ?x1290 0) (= ?x693 0) (= ?x958 0) (not (= (* ?x1247 ?x1261 ?x1261 ?x1261 ?x872) 0)))))
 (let (($x1469 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x1838 (* (- 1) (* z z00 z00 z00))))
 (let ((?x1710 (* z z z00 z00)))
 (let ((?x1719 (* 2 (* y z z00 z00))))
 (let ((?x1500 (* (- 12) (* z z y00))))
 (let ((?x1428 (* (- 6) (* z z z00))))
 (let ((?x1249 (* 108 (* x00 x00))))
 (let ((?x1242 (* 36 (* x z00 y00))))
 (let ((?x1146 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1142 (* z00 z00 z00 y00)))
 (let ((?x1129 (* (- 216) (* x x00))))
 (let ((?x1257 (* (- 4) (* z z z))))
 (let ((?x1266 (* (- 12) (* y z z))))
 (let ((?x1052 (* (- 36) (* z00 y00 x00))))
 (let ((?x1026 (* (- 12) (* y y y00))))
 (let ((?x950 (* 16 (* y00 y00 y00))))
 (let ((?x907 (* y z y00)))
 (let ((?x1506 (* (- 24) ?x907)))
 (let ((?x877 (* x y00)))
 (let ((?x1169 (* (- 216) ?x877)))
 (let ((?x847 (* z00 z00 x00)))
 (let ((?x1102 (* (- 18) ?x847)))
 (let ((?x843 (* y x00)))
 (let ((?x1652 (* (- 324) ?x843)))
 (let ((?x805 (* y y z00)))
 (let ((?x989 (* (- 6) ?x805)))
 (let ((?x809 (* (- 4) (* y y y))))
 (let ((?x756 (* 108 (* x x))))
 (let ((?x726 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x672 (* x z00)))
 (let ((?x1228 (* (- 36) ?x672)))
 (let ((?x661 (* z00 z00 y00)))
 (let ((?x1203 (* (- 10) ?x661)))
 (let ((?x636 (* z00 y00 y00)))
 (let ((?x678 (* (- 12) ?x636)))
 (let ((?x609 (* y z00)))
 (let ((?x1785 (* (- 60) ?x609)))
 (let ((?x582 (* x z00 z00)))
 (let ((?x595 (* 18 ?x582)))
 (let ((?x579 (* y y00)))
 (let ((?x1700 (* (- 336) ?x579)))
 (let ((?x572 (* z x00)))
 (let ((?x1577 (* (- 108) ?x572)))
 (let ((?x527 (* y00 y00)))
 (let ((?x1002 (* 96 ?x527)))
 (let ((?x501 (* y y)))
 (let ((?x1050 (* 240 ?x501)))
 (let ((?x497 (* z00 x00)))
 (let ((?x415 (* 36 ?x497)))
 (let ((?x495 (* z z00)))
 (let ((?x1364 (* (- 24) ?x495)))
 (let ((?x460 (* z00 y00)))
 (let ((?x841 (* 24 ?x460)))
 (let ((?x434 (* z y00)))
 (let ((?x1326 (* (- 120) ?x434)))
 (let ((?x433 (* x z)))
 (let ((?x444 (* 108 ?x433)))
 (let ((?x407 (* y00 x00)))
 (let ((?x398 (* 216 ?x407)))
 (let ((?x525 (* (- 2) (* x z00 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x1845 (* (- 3) ?x212)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x135 (* y y z)))
 (let ((?x1265 (* (- 12) ?x135)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x1817 (* 28 ?x105)))
 (let ((?x103 (* y z z00)))
 (let ((?x1434 (* (- 12) ?x103)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x1804 (* 10 ?x76)))
 (let ((?x50 (* z z)))
 (let ((?x988 (* 24 ?x50)))
 (let ((?x835 (+ ?x988 ?x1804 ?x1434 ?x1817 ?x1265 ?x201 ?x1845 (* 18 (* z z00 y00)) (* 156 (* y z)) ?x525 ?x398 (* 324 (* x y)) ?x444 ?x1326 ?x841 ?x1364 ?x415 ?x1050 ?x1002 ?x1577 ?x1700 ?x595 ?x1785 ?x678 ?x1203 ?x1228 (* 54 (* y z00 y00)) ?x726 ?x756 ?x809 ?x989 ?x1652 ?x1102 ?x1169 ?x1506 ?x950 ?x1026 ?x1052 ?x1266 ?x1257 ?x1129 ?x1142 ?x1146 ?x1242 ?x1249 ?x1428 ?x1500 ?x1719 ?x1710 ?x1838)))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x751 (* 24 ?x501)))
 (let ((?x1269 (+ (* 10 ?x105) ?x201 (* (- 1) ?x212) ?x525 ?x398 (* 108 (* x y)) ?x841 ?x415 ?x751 ?x1002 (* (- 120) ?x579) ?x595 (* (- 24) ?x609) ?x678 ?x1203 ?x1228 (* 18 (* y z00 y00)) ?x726 ?x756 ?x809 ?x989 (* (- 108) ?x843) ?x1102 ?x1169 ?x950 ?x1026 ?x1052 ?x1129 ?x1142 ?x1146 ?x1242 ?x1249)))
 (let (($x1274 (= ?x1269 0)))
 (let ((?x848 (* 3 ?x847)))
 (let ((?x910 (* 3 ?x661)))
 (let ((?x643 (* (- 1) ?x636)))
 (let ((?x573 (* 18 ?x572)))
 (let ((?x830 (* (- 36) ?x527)))
 (let ((?x735 (* (- 6) ?x460)))
 (let ((?x435 (* 12 ?x434)))
 (let ((?x468 (* (- 18) ?x433)))
 (let ((?x408 (* (- 18) ?x407)))
 (let ((?x403 (* y z)))
 (let ((?x427 (* (- 12) ?x403)))
 (let ((?x539 (* (- 108) x00)))
 (let ((?x482 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x966 (+ ?x64 ?x71 ?x482 ?x539 (* (- 3) ?x105) ?x135 ?x427 ?x408 (* (- 18) (* x y)) ?x468 ?x435 ?x735 ?x830 ?x573 (* 36 ?x579) (* (- 3) ?x582) (* 6 ?x609) ?x643 ?x910 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 ?x805) (* 18 ?x843) ?x848 (* 18 ?x877) ?x907 (* (- 2) (* z y00 y00)))))
 (let (($x973 (= ?x966 0)))
 (let ((?x556 (* (- 24) ?x527)))
 (let ((?x504 (* 12 ?x501)))
 (let ((?x498 (* 18 ?x497)))
 (let ((?x576 (* 6 ?x460)))
 (let ((?x715 (+ ?x64 ?x71 ?x482 ?x539 ?x103 (* (- 1) ?x105) (* (- 1) (* z z00 y00)) ?x427 ?x468 ?x435 ?x576 ?x498 ?x504 ?x556 ?x573 (* 12 ?x579) (* (- 6) ?x609) ?x661 (* (- 18) ?x672))))
 (let (($x720 (= ?x715 0)))
 (let ((?x461 (* 18 ?x460)))
 (let ((?x319 (* z00 z00)))
 (let ((?x423 (* 6 ?x319)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x412 (* (- 1) ?x55)))
 (let ((?x555 (+ ?x64 ?x71 ?x482 ?x412 ?x539 ?x76 ?x423 (* (- 6) ?x403) (* (- 12) ?x434) ?x461 (* (- 6) ?x495))))
 (let (($x560 (= ?x555 0)))
 (let ((?x390 (* (- 12) y00)))
 (let ((?x389 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x393 (= (+ ?x45 ?x46 ?x389 ?x390 (* (- 1) ?x50) ?x319) 0)))
 (let (($x311 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x311 $x393 $x560 $x720 $x973 $x1274 (not (= (* ?x216 ?x215 ?x215 ?x215 ?x835) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x422 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x1249 (* 108 (* x00 x00))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1758 (* (- 10) ?x99)))
 (let ((?x473 (* 2 (* x00 z00 z00 z00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x518 (* x00 z00 z00)))
 (let ((?x1334 (* (- 18) ?x518)))
 (let ((?x1377 (* (- 36) (* x00 y00 z00))))
 (let ((?x527 (* y00 y00)))
 (let ((?x1002 (* 96 ?x527)))
 (let ((?x950 (* 16 (* y00 y00 y00))))
 (let ((?x1747 (* y00 z00)))
 (let ((?x540 (* 24 ?x1747)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x1232 (* (- 1) ?x161)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1056 (* (- 12) ?x113)))
 (let ((?x1090 (* x00 z00)))
 (let ((?x814 (* 36 ?x1090)))
 (let ((?x1220 (* x00 y00)))
 (let ((?x372 (* 216 ?x1220)))
 (let ((?x676 (+ ?x372 (* 108 (* (+ y z) (+ x y))) ?x814 (* (- 2) (* z00 z00 z00 (+ x y))) (* 18 (* z00 z00 (+ x y))) ?x1056 ?x1232 (* 24 (* (+ y z) (+ y z))) (* 108 (* (+ x y) (+ x y))) (* (- 4) (* (+ y z) (+ y z) (+ y z))) (* 18 (* y00 z00 (+ y z))) ?x540 (* (- 120) (* y00 (+ y z))) (* (- 24) (* z00 (+ y z))) ?x950 (* (- 6) (* z00 (+ y z) (+ y z))) ?x1002 (* (- 12) (* y00 (+ y z) (+ y z))) ?x1377 (* (- 108) (* x00 (+ y z))) ?x1334 (* (- 216) (* x00 (+ x y))) ?x196 ?x473 (* (- 216) (* y00 (+ x y))) (* z00 z00 (+ y z) (+ y z)) ?x1758 (* (- 36) (* z00 (+ x y))) (* 36 (* y00 z00 (+ x y))) (* 10 (* z00 z00 (+ y z))) ?x1249 (* (- 1) (* z00 z00 z00 (+ y z))))))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x809 (* (- 4) (* y y y))))
 (let ((?x756 (* 108 (* x x))))
 (let ((?x501 (* y y)))
 (let ((?x751 (* 24 ?x501)))
 (let ((?x1012 (* y x)))
 (let ((?x1015 (* 108 ?x1012)))
 (let ((?x1805 (+ ?x372 ?x1015 ?x814 (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) ?x1056 ?x1232 ?x751 ?x756 ?x809 (* 18 (* y00 z00 y)) ?x540 (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x950 (* (- 6) (* z00 y y)) ?x1002 (* (- 12) (* y00 y y)) ?x1377 (* (- 108) (* x00 y)) ?x1334 (* (- 216) (* x00 x)) ?x196 ?x473 (* (- 216) (* y00 x)) (* z00 z00 y y) ?x1758 (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1249 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x539 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x482 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1424 (* 18 (* x00 z))))
 (let ((?x830 (* (- 36) ?x527)))
 (let ((?x985 (* z y)))
 (let ((?x599 (* (- 12) ?x985)))
 (let ((?x606 (* y00 z)))
 (let ((?x642 (* 12 ?x606)))
 (let ((?x550 (* (- 18) (* z x))))
 (let ((?x885 (+ (* (- 18) ?x1220) (* (- 18) ?x1012) ?x550 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x642 (* (- 6) ?x1747) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x599 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x830 ?x1424 (* z y y) (* 18 (* x00 y)) (* 3 ?x518) ?x64 ?x482 (* 18 (* y00 x)) ?x71 ?x539 (* y00 z y) (* 3 ?x99) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x556 (* (- 24) ?x527)))
 (let ((?x504 (* 12 ?x501)))
 (let ((?x704 (+ (* (- 1) (* y00 z00 z)) ?x599 ?x550 (* 18 ?x1090) ?x504 ?x556 ?x1424 ?x642 (* 6 ?x1747) (* 12 (* y00 y)) ?x64 ?x482 (* (- 6) (* z00 y)) ?x71 ?x539 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x319 (* z00 z00)))
 (let ((?x423 (* 6 ?x319)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x412 (* (- 1) ?x55)))
 (let ((?x1390 (+ (* (- 6) ?x985) ?x412 ?x423 (* (- 12) ?x606) (* 18 ?x1747) ?x64 ?x482 (* (- 6) (* z00 z)) ?x71 ?x539 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1132 (* (- 1) ?x319)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1132 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1390 0) (= ?x704 0) (= ?x885 0) (= ?x1805 0) (not (= (* ?x216 ?x215 ?x215 ?x215 ?x676) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x409 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x1838 (* (- 1) (* z z00 z00 z00))))
 (let ((?x1710 (* z z z00 z00)))
 (let ((?x1719 (* 2 (* y z z00 z00))))
 (let ((?x1500 (* (- 12) (* z z y00))))
 (let ((?x1428 (* (- 6) (* z z z00))))
 (let ((?x1249 (* 108 (* x00 x00))))
 (let ((?x1242 (* 36 (* x z00 y00))))
 (let ((?x1146 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1142 (* z00 z00 z00 y00)))
 (let ((?x1129 (* (- 216) (* x x00))))
 (let ((?x1257 (* (- 4) (* z z z))))
 (let ((?x1266 (* (- 12) (* y z z))))
 (let ((?x1052 (* (- 36) (* z00 y00 x00))))
 (let ((?x1026 (* (- 12) (* y y y00))))
 (let ((?x950 (* 16 (* y00 y00 y00))))
 (let ((?x907 (* y z y00)))
 (let ((?x1506 (* (- 24) ?x907)))
 (let ((?x877 (* x y00)))
 (let ((?x1169 (* (- 216) ?x877)))
 (let ((?x847 (* z00 z00 x00)))
 (let ((?x1102 (* (- 18) ?x847)))
 (let ((?x843 (* y x00)))
 (let ((?x1652 (* (- 324) ?x843)))
 (let ((?x805 (* y y z00)))
 (let ((?x989 (* (- 6) ?x805)))
 (let ((?x809 (* (- 4) (* y y y))))
 (let ((?x756 (* 108 (* x x))))
 (let ((?x726 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x672 (* x z00)))
 (let ((?x1228 (* (- 36) ?x672)))
 (let ((?x661 (* z00 z00 y00)))
 (let ((?x1203 (* (- 10) ?x661)))
 (let ((?x636 (* z00 y00 y00)))
 (let ((?x678 (* (- 12) ?x636)))
 (let ((?x609 (* y z00)))
 (let ((?x1785 (* (- 60) ?x609)))
 (let ((?x582 (* x z00 z00)))
 (let ((?x595 (* 18 ?x582)))
 (let ((?x579 (* y y00)))
 (let ((?x1700 (* (- 336) ?x579)))
 (let ((?x572 (* z x00)))
 (let ((?x1577 (* (- 108) ?x572)))
 (let ((?x527 (* y00 y00)))
 (let ((?x1002 (* 96 ?x527)))
 (let ((?x501 (* y y)))
 (let ((?x1050 (* 240 ?x501)))
 (let ((?x497 (* z00 x00)))
 (let ((?x415 (* 36 ?x497)))
 (let ((?x495 (* z z00)))
 (let ((?x1364 (* (- 24) ?x495)))
 (let ((?x460 (* z00 y00)))
 (let ((?x841 (* 24 ?x460)))
 (let ((?x434 (* z y00)))
 (let ((?x1326 (* (- 120) ?x434)))
 (let ((?x433 (* x z)))
 (let ((?x444 (* 108 ?x433)))
 (let ((?x407 (* y00 x00)))
 (let ((?x398 (* 216 ?x407)))
 (let ((?x525 (* (- 2) (* x z00 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x1845 (* (- 3) ?x212)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x135 (* y y z)))
 (let ((?x1265 (* (- 12) ?x135)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x1817 (* 28 ?x105)))
 (let ((?x103 (* y z z00)))
 (let ((?x1434 (* (- 12) ?x103)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x1804 (* 10 ?x76)))
 (let ((?x50 (* z z)))
 (let ((?x988 (* 24 ?x50)))
 (let ((?x835 (+ ?x988 ?x1804 ?x1434 ?x1817 ?x1265 ?x201 ?x1845 (* 18 (* z z00 y00)) (* 156 (* y z)) ?x525 ?x398 (* 324 (* x y)) ?x444 ?x1326 ?x841 ?x1364 ?x415 ?x1050 ?x1002 ?x1577 ?x1700 ?x595 ?x1785 ?x678 ?x1203 ?x1228 (* 54 (* y z00 y00)) ?x726 ?x756 ?x809 ?x989 ?x1652 ?x1102 ?x1169 ?x1506 ?x950 ?x1026 ?x1052 ?x1266 ?x1257 ?x1129 ?x1142 ?x1146 ?x1242 ?x1249 ?x1428 ?x1500 ?x1719 ?x1710 ?x1838)))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x751 (* 24 ?x501)))
 (let ((?x1269 (+ (* 10 ?x105) ?x201 (* (- 1) ?x212) ?x525 ?x398 (* 108 (* x y)) ?x841 ?x415 ?x751 ?x1002 (* (- 120) ?x579) ?x595 (* (- 24) ?x609) ?x678 ?x1203 ?x1228 (* 18 (* y z00 y00)) ?x726 ?x756 ?x809 ?x989 (* (- 108) ?x843) ?x1102 ?x1169 ?x950 ?x1026 ?x1052 ?x1129 ?x1142 ?x1146 ?x1242 ?x1249)))
 (let (($x1274 (= ?x1269 0)))
 (let ((?x848 (* 3 ?x847)))
 (let ((?x910 (* 3 ?x661)))
 (let ((?x643 (* (- 1) ?x636)))
 (let ((?x573 (* 18 ?x572)))
 (let ((?x830 (* (- 36) ?x527)))
 (let ((?x735 (* (- 6) ?x460)))
 (let ((?x435 (* 12 ?x434)))
 (let ((?x468 (* (- 18) ?x433)))
 (let ((?x408 (* (- 18) ?x407)))
 (let ((?x403 (* y z)))
 (let ((?x427 (* (- 12) ?x403)))
 (let ((?x539 (* (- 108) x00)))
 (let ((?x482 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x966 (+ ?x64 ?x71 ?x482 ?x539 (* (- 3) ?x105) ?x135 ?x427 ?x408 (* (- 18) (* x y)) ?x468 ?x435 ?x735 ?x830 ?x573 (* 36 ?x579) (* (- 3) ?x582) (* 6 ?x609) ?x643 ?x910 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 ?x805) (* 18 ?x843) ?x848 (* 18 ?x877) ?x907 (* (- 2) (* z y00 y00)))))
 (let (($x973 (= ?x966 0)))
 (let ((?x556 (* (- 24) ?x527)))
 (let ((?x504 (* 12 ?x501)))
 (let ((?x498 (* 18 ?x497)))
 (let ((?x576 (* 6 ?x460)))
 (let ((?x715 (+ ?x64 ?x71 ?x482 ?x539 ?x103 (* (- 1) ?x105) (* (- 1) (* z z00 y00)) ?x427 ?x468 ?x435 ?x576 ?x498 ?x504 ?x556 ?x573 (* 12 ?x579) (* (- 6) ?x609) ?x661 (* (- 18) ?x672))))
 (let (($x720 (= ?x715 0)))
 (let ((?x461 (* 18 ?x460)))
 (let ((?x319 (* z00 z00)))
 (let ((?x423 (* 6 ?x319)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x412 (* (- 1) ?x55)))
 (let ((?x555 (+ ?x64 ?x71 ?x482 ?x412 ?x539 ?x76 ?x423 (* (- 6) ?x403) (* (- 12) ?x434) ?x461 (* (- 6) ?x495))))
 (let (($x560 (= ?x555 0)))
 (let ((?x390 (* (- 12) y00)))
 (let ((?x389 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x393 (= (+ ?x45 ?x46 ?x389 ?x390 (* (- 1) ?x50) ?x319) 0)))
 (let (($x311 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x929 (and $x311 $x393 $x560 $x720 $x973 $x1274 (not (= (* ?x216 ?x215 ?x215 ?x215 ?x835) 0)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1758 (* (- 10) ?x99)))
 (let ((?x473 (* 2 (* x00 z00 z00 z00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x518 (* x00 z00 z00)))
 (let ((?x1334 (* (- 18) ?x518)))
 (let ((?x1377 (* (- 36) (* x00 y00 z00))))
 (let ((?x1747 (* y00 z00)))
 (let ((?x540 (* 24 ?x1747)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x1232 (* (- 1) ?x161)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1056 (* (- 12) ?x113)))
 (let ((?x1090 (* x00 z00)))
 (let ((?x814 (* 36 ?x1090)))
 (let ((?x1220 (* x00 y00)))
 (let ((?x372 (* 216 ?x1220)))
 (let ((?x676 (+ ?x372 (* 108 (* ?x216 ?x215)) ?x814 (* (- 2) (* z00 z00 z00 ?x215)) (* 18 (* z00 z00 ?x215)) ?x1056 ?x1232 (* 24 (* ?x216 ?x216)) (* 108 (* ?x215 ?x215)) (* (- 4) (* ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x216)) ?x540 (* (- 120) (* y00 ?x216)) (* (- 24) (* z00 ?x216)) ?x950 (* (- 6) (* z00 ?x216 ?x216)) ?x1002 (* (- 12) (* y00 ?x216 ?x216)) ?x1377 (* (- 108) (* x00 ?x216)) ?x1334 (* (- 216) (* x00 ?x215)) ?x196 ?x473 (* (- 216) (* y00 ?x215)) (* z00 z00 ?x216 ?x216) ?x1758 (* (- 36) (* z00 ?x215)) (* 36 (* y00 z00 ?x215)) (* 10 (* z00 z00 ?x216)) ?x1249 (* (- 1) (* z00 z00 z00 ?x216)))))
 (let ((?x1012 (* y x)))
 (let ((?x1015 (* 108 ?x1012)))
 (let ((?x1805 (+ ?x372 ?x1015 ?x814 (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) ?x1056 ?x1232 ?x751 ?x756 ?x809 (* 18 (* y00 z00 y)) ?x540 (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x950 (* (- 6) (* z00 y y)) ?x1002 (* (- 12) (* y00 y y)) ?x1377 (* (- 108) (* x00 y)) ?x1334 (* (- 216) (* x00 x)) ?x196 ?x473 (* (- 216) (* y00 x)) (* z00 z00 y y) ?x1758 (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1249 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x1424 (* 18 (* x00 z))))
 (let ((?x985 (* z y)))
 (let ((?x599 (* (- 12) ?x985)))
 (let ((?x606 (* y00 z)))
 (let ((?x642 (* 12 ?x606)))
 (let ((?x550 (* (- 18) (* z x))))
 (let ((?x885 (+ (* (- 18) ?x1220) (* (- 18) ?x1012) ?x550 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x642 (* (- 6) ?x1747) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x599 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x830 ?x1424 (* z y y) (* 18 (* x00 y)) (* 3 ?x518) ?x64 ?x482 (* 18 (* y00 x)) ?x71 ?x539 (* y00 z y) (* 3 ?x99) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x704 (+ (* (- 1) (* y00 z00 z)) ?x599 ?x550 (* 18 ?x1090) ?x504 ?x556 ?x1424 ?x642 (* 6 ?x1747) (* 12 (* y00 y)) ?x64 ?x482 (* (- 6) (* z00 y)) ?x71 ?x539 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x1390 (+ (* (- 6) ?x985) ?x412 ?x423 (* (- 12) ?x606) (* 18 ?x1747) ?x64 ?x482 (* (- 6) (* z00 z)) ?x71 ?x539 (* z00 z00 z))))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1132 (* (- 1) ?x319)))
 (let (($x1511 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1132 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1390 0) (= ?x704 0) (= ?x885 0) (= ?x1805 0) (not (= (* ?x216 ?x215 ?x215 ?x215 ?x676) 0)))))
 (rewrite (= $x1511 $x929))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x266 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ y z)))
 (let ((?x215 (+ x y)))
 (let ((?x210 (* 108 x00 x00)))
 (let ((?x204 (* 10 y00 z00 z00)))
 (let ((?x197 (* 2 x00 z00 z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x189 (* 18 x00 z00 z00)))
 (let ((?x187 (* 36 x00 y00 z00)))
 (let ((?x184 (* 96 y00 y00)))
 (let ((?x179 (* 16 y00 y00 y00)))
 (let ((?x171 (* 24 y00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x160 (* 12 y00 y00 z00)))
 (let ((?x220 (- (+ (* 216 x00 y00) (* 108 ?x215 ?x216) (* 36 x00 z00)) (* 2 ?x215 z00 z00 z00))))
 (let ((?x227 (+ (- (- (+ ?x220 (* 18 ?x215 z00 z00)) ?x160) ?x161) (* 24 ?x216 ?x216) (* 108 ?x215 ?x215))))
 (let ((?x231 (+ (- ?x227 (* 4 ?x216 ?x216 ?x216)) (* 18 ?x216 y00 z00) ?x171)))
 (let ((?x238 (- (+ (- (- ?x231 (* 120 ?x216 y00)) (* 24 ?x216 z00)) ?x179) (* 6 ?x216 ?x216 z00))))
 (let ((?x245 (- (- (- (+ ?x238 ?x184) (* 12 ?x216 ?x216 y00)) ?x187) (* 108 x00 ?x216))))
 (let ((?x250 (- (+ (- (- ?x245 ?x189) (* 216 ?x215 x00)) ?x196 ?x197) (* 216 ?x215 y00))))
 (let ((?x255 (- (- (+ ?x250 (* ?x216 ?x216 z00 z00)) ?x204) (* 36 ?x215 z00))))
 (let ((?x260 (- (+ ?x255 (* 36 ?x215 y00 z00) (* 10 ?x216 z00 z00) ?x210) (* ?x216 z00 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x166 (+ (- (- (+ ?x157 (* 18 x z00 z00)) ?x160) ?x161) (* 24 y y) (* 108 x x))))
 (let ((?x172 (+ (- ?x166 (* 4 y y y)) (* 18 y y00 z00) ?x171)))
 (let ((?x182 (- (+ (- (- ?x172 (* 120 y y00)) (* 24 y z00)) ?x179) (* 6 y y z00))))
 (let ((?x193 (- (- (- (+ ?x182 ?x184) (* 12 y y y00)) ?x187) (* 108 x00 y))))
 (let ((?x200 (- (+ (- (- ?x193 ?x189) (* 216 x x00)) ?x196 ?x197) (* 216 x y00))))
 (let ((?x211 (+ (- (- (+ ?x200 ?x201) ?x204) (* 36 x z00)) (* 36 x y00 z00) (* 10 y z00 z00) ?x210)))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x120 (* y y00 z00)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x123 (- (+ (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) ?x120) ?x59) ?x91)))
 (let ((?x129 (- (- (+ ?x123 (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (* ?x260 ?x215 ?x215 ?x215 ?x216) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1103 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x1249 (* 108 (* x00 x00))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1758 (* (- 10) ?x99)))
 (let ((?x473 (* 2 (* x00 z00 z00 z00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x518 (* x00 z00 z00)))
 (let ((?x1334 (* (- 18) ?x518)))
 (let ((?x1377 (* (- 36) (* x00 y00 z00))))
 (let ((?x527 (* y00 y00)))
 (let ((?x1002 (* 96 ?x527)))
 (let ((?x950 (* 16 (* y00 y00 y00))))
 (let ((?x1747 (* y00 z00)))
 (let ((?x540 (* 24 ?x1747)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x1232 (* (- 1) ?x161)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1056 (* (- 12) ?x113)))
 (let ((?x1090 (* x00 z00)))
 (let ((?x814 (* 36 ?x1090)))
 (let ((?x1220 (* x00 y00)))
 (let ((?x372 (* 216 ?x1220)))
 (let ((?x676 (+ ?x372 (* 108 (* (+ y z) (+ x y))) ?x814 (* (- 2) (* z00 z00 z00 (+ x y))) (* 18 (* z00 z00 (+ x y))) ?x1056 ?x1232 (* 24 (* (+ y z) (+ y z))) (* 108 (* (+ x y) (+ x y))) (* (- 4) (* (+ y z) (+ y z) (+ y z))) (* 18 (* y00 z00 (+ y z))) ?x540 (* (- 120) (* y00 (+ y z))) (* (- 24) (* z00 (+ y z))) ?x950 (* (- 6) (* z00 (+ y z) (+ y z))) ?x1002 (* (- 12) (* y00 (+ y z) (+ y z))) ?x1377 (* (- 108) (* x00 (+ y z))) ?x1334 (* (- 216) (* x00 (+ x y))) ?x196 ?x473 (* (- 216) (* y00 (+ x y))) (* z00 z00 (+ y z) (+ y z)) ?x1758 (* (- 36) (* z00 (+ x y))) (* 36 (* y00 z00 (+ x y))) (* 10 (* z00 z00 (+ y z))) ?x1249 (* (- 1) (* z00 z00 z00 (+ y z))))))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x809 (* (- 4) (* y y y))))
 (let ((?x756 (* 108 (* x x))))
 (let ((?x501 (* y y)))
 (let ((?x751 (* 24 ?x501)))
 (let ((?x1012 (* y x)))
 (let ((?x1015 (* 108 ?x1012)))
 (let ((?x1805 (+ ?x372 ?x1015 ?x814 (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) ?x1056 ?x1232 ?x751 ?x756 ?x809 (* 18 (* y00 z00 y)) ?x540 (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x950 (* (- 6) (* z00 y y)) ?x1002 (* (- 12) (* y00 y y)) ?x1377 (* (- 108) (* x00 y)) ?x1334 (* (- 216) (* x00 x)) ?x196 ?x473 (* (- 216) (* y00 x)) (* z00 z00 y y) ?x1758 (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1249 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x539 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x482 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1424 (* 18 (* x00 z))))
 (let ((?x830 (* (- 36) ?x527)))
 (let ((?x985 (* z y)))
 (let ((?x599 (* (- 12) ?x985)))
 (let ((?x606 (* y00 z)))
 (let ((?x642 (* 12 ?x606)))
 (let ((?x550 (* (- 18) (* z x))))
 (let ((?x885 (+ (* (- 18) ?x1220) (* (- 18) ?x1012) ?x550 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x642 (* (- 6) ?x1747) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x599 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x830 ?x1424 (* z y y) (* 18 (* x00 y)) (* 3 ?x518) ?x64 ?x482 (* 18 (* y00 x)) ?x71 ?x539 (* y00 z y) (* 3 ?x99) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x556 (* (- 24) ?x527)))
 (let ((?x504 (* 12 ?x501)))
 (let ((?x704 (+ (* (- 1) (* y00 z00 z)) ?x599 ?x550 (* 18 ?x1090) ?x504 ?x556 ?x1424 ?x642 (* 6 ?x1747) (* 12 (* y00 y)) ?x64 ?x482 (* (- 6) (* z00 y)) ?x71 ?x539 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x319 (* z00 z00)))
 (let ((?x423 (* 6 ?x319)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x412 (* (- 1) ?x55)))
 (let ((?x1390 (+ (* (- 6) ?x985) ?x412 ?x423 (* (- 12) ?x606) (* 18 ?x1747) ?x64 ?x482 (* (- 6) (* z00 z)) ?x71 ?x539 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1132 (* (- 1) ?x319)))
 (let (($x1511 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1132 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1390 0) (= ?x704 0) (= ?x885 0) (= ?x1805 0) (not (= (* ?x216 ?x215 ?x215 ?x215 ?x676) 0)))))
 (let ((?x210 (* 108 x00 x00)))
 (let ((?x204 (* 10 y00 z00 z00)))
 (let ((?x197 (* 2 x00 z00 z00 z00)))
 (let ((?x189 (* 18 x00 z00 z00)))
 (let ((?x187 (* 36 x00 y00 z00)))
 (let ((?x184 (* 96 y00 y00)))
 (let ((?x179 (* 16 y00 y00 y00)))
 (let ((?x171 (* 24 y00 z00)))
 (let ((?x160 (* 12 y00 y00 z00)))
 (let ((?x220 (- (+ (* 216 x00 y00) (* 108 ?x215 ?x216) (* 36 x00 z00)) (* 2 ?x215 z00 z00 z00))))
 (let ((?x227 (+ (- (- (+ ?x220 (* 18 ?x215 z00 z00)) ?x160) ?x161) (* 24 ?x216 ?x216) (* 108 ?x215 ?x215))))
 (let ((?x231 (+ (- ?x227 (* 4 ?x216 ?x216 ?x216)) (* 18 ?x216 y00 z00) ?x171)))
 (let ((?x238 (- (+ (- (- ?x231 (* 120 ?x216 y00)) (* 24 ?x216 z00)) ?x179) (* 6 ?x216 ?x216 z00))))
 (let ((?x245 (- (- (- (+ ?x238 ?x184) (* 12 ?x216 ?x216 y00)) ?x187) (* 108 x00 ?x216))))
 (let ((?x250 (- (+ (- (- ?x245 ?x189) (* 216 ?x215 x00)) ?x196 ?x197) (* 216 ?x215 y00))))
 (let ((?x255 (- (- (+ ?x250 (* ?x216 ?x216 z00 z00)) ?x204) (* 36 ?x215 z00))))
 (let ((?x260 (- (+ ?x255 (* 36 ?x215 y00 z00) (* 10 ?x216 z00 z00) ?x210) (* ?x216 z00 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x166 (+ (- (- (+ ?x157 (* 18 x z00 z00)) ?x160) ?x161) (* 24 y y) (* 108 x x))))
 (let ((?x172 (+ (- ?x166 (* 4 y y y)) (* 18 y y00 z00) ?x171)))
 (let ((?x182 (- (+ (- (- ?x172 (* 120 y y00)) (* 24 y z00)) ?x179) (* 6 y y z00))))
 (let ((?x193 (- (- (- (+ ?x182 ?x184) (* 12 y y y00)) ?x187) (* 108 x00 y))))
 (let ((?x200 (- (+ (- (- ?x193 ?x189) (* 216 x x00)) ?x196 ?x197) (* 216 x y00))))
 (let ((?x211 (+ (- (- (+ ?x200 ?x201) ?x204) (* 36 x z00)) (* 36 x y00 z00) (* 10 y z00 z00) ?x210)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x120 (* y y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x123 (- (+ (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) ?x120) ?x59) ?x91)))
 (let ((?x129 (- (- (+ ?x123 (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x265 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (* ?x260 ?x215 ?x215 ?x215 ?x216) 0))))))
 (rewrite (= $x265 $x1511)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x267 (asserted $x266)))
 (let ((@x897 (mp (mp @x267 (quant-intro (proof-bind ?x1103) (= $x266 $x422)) $x422) (rewrite (= $x422 $x422)) $x422)))
 (let ((@x1348 (mp~ (mp @x897 (quant-intro (proof-bind ?x409) (= $x422 $x1469)) $x1469) (sk (~ $x1469 $x1343)) $x1343)))
 (let ((@x1432 (mp @x1348 (rewrite (= $x1343 $x1584)) $x1584)))
 (let ((@x475 (and-elim @x1432 $x1192)))
 (let ((@x523 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1192) $x618)) @x475 $x618)))
 (let (($x296 (>= ?x1191 0)))
 (let ((@x922 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1192) $x296)) @x475 $x296)))
 (let (($x1151 (<= ?x1255 0)))
 (let ((@x1336 (and-elim @x1432 $x1264)))
 (let ((@x827 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1264) $x1151)) @x1336 $x1151)))
 (let (($x1566 (>= ?x1255 0)))
 (let ((@x1019 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1264) $x1566)) @x1336 $x1566)))
 (let (($x1646 (<= ?x818 0)))
 (let ((@x1372 (and-elim @x1432 $x604)))
 (let ((@x1016 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x604) $x1646)) @x1372 $x1646)))
 (let (($x458 (>= ?x818 0)))
 (let ((@x1442 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x604) $x458)) @x1372 $x458)))
 (let (($x1204 (<= ?x802 0)))
 (let ((@x1337 (and-elim @x1432 $x628)))
 (let ((@x1339 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x628) $x1204)) @x1337 $x1204)))
 (let (($x1190 (>= ?x802 0)))
 (let ((@x345 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x628) $x1190)) @x1337 $x1190)))
 (let (($x349 (<= ?x1501 0)))
 (let ((@x1746 (and-elim @x1432 $x1567)))
 (let ((@x1200 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1567) $x349)) @x1746 $x349)))
 (let (($x570 (>= ?x1501 0)))
 (let ((@x394 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1567) $x570)) @x1746 $x570)))
 (let (($x285 (<= ?x1414 0)))
 (let ((@x1130 (and-elim @x1432 $x417)))
 (let ((@x488 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x417) $x285)) @x1130 $x285)))
 (let (($x1455 (>= ?x1414 0)))
 (let ((@x1246 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x417) $x1455)) @x1130 $x1455)))
 (let ((@x1362 ((_ th-lemma arith) (hypothesis (not $x1437)) @x1442 @x1016 @x1246 @x488 @x922 @x523 @x1442 @x1016 @x1246 @x488 @x345 @x1339 @x345 @x1339 @x1019 @x827 @x1246 @x488 @x1246 @x488 @x394 @x1200 @x1019 @x827 @x345 @x1339 @x1019 @x827 @x345 @x1339 @x1442 @x1016 @x1019 @x827 @x922 @x523 false)))
 (let ((@x297 (lemma @x1362 $x1437)))
 (let (($x1595 (>= ?x1723 0)))
 (let ((@x1327 ((_ th-lemma arith) (hypothesis (not $x1595)) @x1442 @x1016 @x1246 @x488 @x922 @x523 @x1442 @x1016 @x1246 @x488 @x345 @x1339 @x345 @x1339 @x1019 @x827 @x1246 @x488 @x1246 @x488 @x394 @x1200 @x1019 @x827 @x345 @x1339 @x1019 @x827 @x345 @x1339 @x1442 @x1016 @x1019 @x827 @x922 @x523 false)))
 (let ((@x1107 (lemma @x1327 $x1595)))
 (let (($x1186 (not (<= ?x851 0))))
 (let (($x1211 (>= ?x851 0)))
 (let (($x1663 (= ?x1723 0)))
 (let ((@x821 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1663 (not $x1437) (not $x1595))) @x1107 (or $x1663 (not $x1437)))))
 (let ((@x687 (hypothesis $x1663)))
 (let ((@x1613 ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1211)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1663) $x1595)) @x687 $x1595) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1663) $x1437)) @x687 $x1437) false)))
 (let ((@x1111 (unit-resolution (lemma @x1613 (or (not $x1663) $x1211)) (unit-resolution @x821 @x297 $x1663) $x1211)))
 (let ((@x1195 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1753 $x1186 (not $x1211))) (and-elim @x1432 $x1068) (or $x1186 (not $x1211)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x1195 @x1111 $x1186) @x1107 @x297 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 8
 :arith-assert-diseq        3
 :arith-assert-lower        31
 :arith-assert-upper        15
 :arith-conflicts           4
 :arith-eq-adapter          9
 :arith-gcd-tests           3
 :arith-grobner             3
 :arith-max-min             615
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    27
 :arith-num-rows            9
 :arith-patches             3
 :arith-patches_succ        3
 :arith-pivots              7
 :arith-pseudo-nonlinear    2
 :arith-row-summations      14
 :arith-tableau-max-columns 108
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 4
 :del-clause                26
 :final-checks              7
 :max-memory                20.04
 :memory                    19.31
 :mk-bool-var               27
 :mk-clause                 31
 :num-allocs                2061997
 :num-checks                1
 :propagations              22
 :rlimit-count              88349
 :time                      0.04
 :total-time                0.06)
