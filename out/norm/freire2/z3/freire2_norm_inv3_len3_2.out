unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x3893 (* (- 1) s!1)))
 (let ((?x332 (* r00 r00)))
 (let ((?x5736 (* (- 3) ?x332)))
 (let ((?x1344 (+ s00 ?x5736 (* 3 (* r!2 r!2)) ?x3893)))
 (let (($x4985 (<= ?x1344 0)))
 (let (($x1347 (= ?x1344 0)))
 (let ((?x6471 (+ 3 (* 6 r!2) s!1)))
 (let ((?x673 (+ x!0 ?x3893)))
 (let ((?x6515 (+ 1 r!2)))
 (let ((?x3924 (+ (* 24 (* r00 r!2 r!2 s!1 s!1 s!1)) (* (- 54) (* r00 r00 r!2 s!1 s!1)) (* 9 (* r00 ?x673 ?x673 ?x6471 ?x6471 ?x6471 ?x6471)) (* 18 (* r00 x00 r!2 r!2 s!1 s!1)) (* 24 (* s00 s00 r!2 r!2 r!2 s!1)) (* (- 18) (* x00 r!2 r!2 r!2 x!0 s!1)) (* 378 (* x00 r!2 r!2 r!2 s!1)) (* (- 108) (* r00 x00 r!2 r!2 r!2 x!0)) (* (- 6) (* r00 r00 s00 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* 6 (* s00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 39) (* r00 x!0 x!0 s!1)) (* 60 (* s00 s00 r!2 r!2 s!1)) (* (- 15) (* r00 r!2 x!0 x!0 s!1)) (* (- 18) (* s00 r00 r!2 s!1)) (* 54 (* r00 x00 s!1)) (* 18 (* x00 r!2 x!0 s!1)) (* 21 (* r00 r!2 s!1 s!1 s!1)) (* 24 (* r00 x!0 s!1 s!1)) (* 2 (* ?x6515 ?x673 ?x673 ?x6471 ?x6471)) (* (- 6) (* s00 r00 r!2 r!2 r!2 x!0 s!1)) (* 198 (* s00 r!2 r!2 x!0)) (* (- 9) (* s00 r!2 r!2 r!2 s!1 s!1)) (* 45 (* r00 x!0 x!0)) (* 207 (* r00 r!2 x!0 x!0)) (* (- 612) (* r00 r!2 r!2 x!0 s!1)) (* 99 (* s00 r!2 x!0)) (* (- 3) (* s00 r!2 r!2 s!1 s!1)) (* 6 (* r00 s00 ?x6515 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* 12 (* s00 r!2 s!1 s!1)) (* (- 9) (* s00 ?x6515 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* 6 (* s00 r00 r!2 x!0 s!1)) (* (- 18) (* r00 ?x673 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* 72 (* r00 r00 r!2 r!2 x!0 s!1)) (* (- 6) (* r00 r00 ?x6515 ?x6515 ?x673 ?x6471 ?x6471)) (* (- 6) (* r00 ?x6515 ?x673 ?x673 ?x6471 ?x6471 ?x6471 ?x6471)) (* (- 4) (* s00 s00 x!0 x!0)) (* (- 171) (* s00 r!2 r!2 r!2 s!1)) (* (- 18) (* r00 x00 r!2 x!0 x!0)) (* (- 6) (* s00 r00 r!2 r!2 x!0 x!0)) (* (- 12) (* s00 s00 x!0)) (* (- 378) (* x00 r!2 r!2 r!2 x!0)) (* 171 (* s00 r!2 r!2 r!2 x!0)) (* 4 (* s00 s00 r!2 r!2 s!1 s!1)) (* (- 123) (* r!2 x!0 x!0 s!1)) (* 12 (* s00 s00 s!1)) (* (- 48) (* s00 s00 r!2 x!0)) (* (- 60) (* x!0 x!0 s!1)) (* (- 198) (* s00 r!2 r!2 s!1)) (* 54 (* s00 r!2 r!2 r!2 r!2 x!0)) (* (- 18) (* r00 x00 r!2 r!2 x!0 s!1)) (* 3 (* s00 r00 r!2 r!2 s!1 s!1)) (* 36 (* x00 r!2 r!2 s!1 s!1)) (* 18 (* s00 r00 r!2 x!0)) (* (- 72) (* s00 r00 r!2 r!2 r!2 x!0)) (* (- 4) (* s00 s00 r!2 r!2 x!0 s!1)) (* 66 (* x!0 s!1 s!1)) (* 18 (* r00 x!0 x!0 x!0)) (* (- 270) (* r00 x00 r!2 r!2 x!0)) (* 144 (* r00 r!2 r!2 r!2 s!1 s!1)) (* 108 (* r00 r00 r!2 x!0 s!1)) (* (- 18) (* r00 r00 s!1 s!1)) (* 6 (* s00 r00 r00 x!0 x!0)) (* (- 3) (* s00 r00 x!0 s!1)) (* 138 (* r!2 x!0 s!1 s!1)) (* (- 60) (* s00 s00 r!2 r!2 x!0)) (* 18 (* ?x6515 ?x6515 ?x6515 ?x673 ?x673 ?x6471)) (* (- 18) (* r00 x00 x!0 x!0)) (* (- 54) (* s00 r!2 r!2 r!2 r!2 s!1)) (* 27 (* s00 r00 r!2 r!2 s!1)) (* 6 (* s00 r00 r00 r!2 x!0 x!0)) (* 54 (* x00 s!1)) (* 18 (* r00 r!2 x!0 x!0 x!0)) (* (- 18) (* ?x6515 ?x673 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* 108 (* r!2 r!2 r!2 x!0 s!1)) (* 270 (* r00 x00 r!2 r!2 s!1)) (* (- 18) (* s00 s!1)) (* 6 (* r00 r00 ?x673 ?x673 ?x6471 ?x6471 ?x6471 ?x6471)) (* (- 270) (* x00 r!2 x!0)) (* 18 (* x00 x!0 s!1)) (* 36 (* r00 r00 x!0 s!1)) (* (- 54) (* x00 x!0)) (* (- 18) (* x!0 x!0)) (* 2 (* s00 ?x6515 ?x6515 ?x673 ?x6471 ?x6471)) (* 6 (* r00 ?x6515 ?x6515 ?x6515 ?x673 ?x6471 ?x6471)) (* (- 3) (* r00 s!1 s!1 s!1)) (* (- 36) (* s00 r00 r!2 r!2 r!2 r!2 x!0)) (* (- 486) (* x00 r!2 r!2 x!0)) (* (- 3) (* s00 r00 r!2 x!0 x!0)) (* (- 3) (* s00 r00 r!2 s!1 s!1)) (* 3 (* s00 r00 x!0 x!0)) (* (- 18) (* s!1 s!1)) (* 18 (* r00 x00 x!0 s!1)) (* (- 18) (* s00 x!0 s!1)) (* 36 (* x!0 s!1)) (* (- 99) (* s00 r!2 s!1)) (* 45 (* r00 s!1 s!1)) (* (- 24) (* s!1 s!1 s!1)) (* 486 (* x00 r!2 r!2 s!1)) (* 216 (* r00 x00 r!2 s!1)) (* 72 (* r!2 r!2 x!0 s!1 s!1)) (* (- 9) (* s00 r00 s!1)) (* (- 117) (* r!2 r!2 x!0 x!0)) (* (- 24) (* r00 r!2 x!0 s!1 s!1)) (* 4 (* s00 s00 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* (- 18) (* x00 r!2 r!2 x!0 s!1)) (* 9 (* s00 r!2 r!2 r!2 x!0 s!1)) (* (- 45) (* s00 r!2 x!0 s!1)) (* (- 18) (* s00 r!2 r!2 x!0 s!1)) (* (- 18) (* r00 r00 x!0 x!0)) (* 9 (* s00 r00 x!0)) (* (- 54) (* r!2 r!2 r!2 x!0 x!0)) (* 306 (* r00 r!2 r!2 s!1 s!1)) (* (- 81) (* r!2 s!1 s!1)) (* 6 (* s00 s!1 s!1)) (* 18 (* r00 x00 r!2 s!1 s!1)) (* 4 (* s00 s00 r!2 s!1 s!1)) (* (- 63) (* r!2 r!2 x!0 x!0 s!1)) (* (- 54) (* r00 r00 r!2 x!0 x!0)) (* (- 81) (* r!2 x!0 x!0)) (* (- 117) (* r!2 r!2 s!1 s!1)) (* 18 (* x!0 x!0 x!0)) (* (- 54) (* r!2 r!2 r!2 s!1 s!1)) (* 18 (* r!2 r!2 x!0 x!0 x!0)) (* 36 (* r!2 x!0 x!0 x!0)) (* (- 27) (* r!2 r!2 s!1 s!1 s!1)) (* (- 51) (* r!2 s!1 s!1 s!1)) (* 9 (* ?x6515 ?x673 ?x673 ?x6471 ?x6471 ?x6471 ?x6471)) (* (- 2) (* s00 ?x673 ?x673 ?x6471 ?x6471 ?x6471 ?x6471)) (* (- 4) (* s00 x!0 s!1 s!1)) (* 12 (* r00 r00 x!0 s!1 s!1)) (* (- 3) (* ?x673 ?x673 ?x6471 ?x6471 ?x6471 ?x6471)) (* (- 2) (* ?x673 ?x673 ?x6471 ?x6471 ?x6471 ?x6471 ?x6471)) (* (- 90) (* s00 r00 r00 r!2 r!2 s!1)) (* 108 (* r00 x00 r!2 r!2 r!2 s!1)) (* 12 (* r00 r00 r!2 x!0 s!1 s!1)) (* (- 6) (* r00 r00 x!0 x!0 s!1)) (* 3 (* s00 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* (- 6) (* r00 r00 r!2 s!1 s!1 s!1)) (* 6 (* s00 r00 r00 r!2 r!2 x!0 s!1)) (* (- 72) (* s00 r00 r00 r!2 s!1)) (* (- 36) (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* 270 (* x00 r!2 s!1)) (* (- 108) (* x00 r!2 r!2 r!2 r!2 x!0)) (* 18 (* s00 x!0)) (* (- 6) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* 18 (* r00 x00 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* 18 (* s00 r00 r00 x!0)) (* 90 (* s00 r00 r00 r!2 r!2 x!0)) (* 72 (* s00 r00 r00 r!2 x!0)) (* (- 4) (* s00 r!2 x!0 s!1 s!1)) (* 36 (* s00 r00 r00 r!2 r!2 r!2 x!0)) (* (- 6) (* s00 r00 r00 x!0 s!1)) (* (- 36) (* r00 r00 r!2 r!2 s!1 s!1)) (* (- 9) (* r00 ?x6515 ?x6515 ?x673 ?x6471 ?x6471)) (* 33 (* s00 r!2 x!0 x!0)) (* 12 (* s00 x!0 x!0)) (* (- 9) (* r00 s00 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* (- 6) (* r00 r00 s!1 s!1 s!1)) (* 18 (* x00 r!2 s!1 s!1)) (* (- 6) (* s00 r00 r00 r!2 s!1 s!1)) (* 162 (* r!2 x!0 s!1)) (* 234 (* r!2 r!2 x!0 s!1)) (* 108 (* x00 r!2 r!2 r!2 r!2 s!1)) (* (- 6) (* r00 r00 r!2 x!0 x!0 s!1)) (* (- 24) (* s00 s00 r!2 r!2 r!2 x!0)) (* (- 18) (* s00 r00 r00 s!1)) (* (- 54) (* r00 x00 x!0)) (* 2 (* s00 s!1 s!1 s!1)) (* 2 (* s00 r!2 s!1 s!1 s!1)) (* 2 (* s00 r!2 x!0 x!0 s!1)) (* 2 (* s00 x!0 x!0 s!1)) (* 21 (* s00 r!2 r!2 x!0 x!0)) (* 36 (* s00 r00 r!2 r!2 r!2 r!2 s!1)) (* (- 36) (* r00 r00 r!2 r!2 x!0 x!0)) (* 18 (* x00 r!2 r!2 r!2 s!1 s!1)) (* (- 18) (* x00 x!0 x!0)) (* (- 36) (* x00 r!2 x!0 x!0)) (* (- 18) (* x00 r!2 r!2 x!0 x!0)) (* (- 216) (* r00 x00 r!2 x!0)) (* 207 (* r00 r!2 s!1 s!1)) (* 24 (* r00 r!2 r!2 x!0 x!0 s!1)) (* 3 (* s00 r00 r!2 r!2 x!0 s!1)) (* 72 (* s00 r00 r!2 r!2 r!2 s!1)) (* 4 (* s00 s00 x!0 s!1)) (* (- 27) (* s00 r00 r!2 r!2 x!0)) (* 18 (* x00 ?x6515 ?x673 ?x673 ?x6471 ?x6471 ?x6471)) (* 2 (* ?x6515 ?x6515 ?x673 ?x6471 ?x6471 ?x6471)) (* (- 9) (* ?x6515 ?x6515 ?x6515 ?x673 ?x6471 ?x6471)) (* 144 (* r00 r!2 r!2 r!2 x!0 x!0)) (* (- 48) (* r00 r!2 r!2 x!0 s!1 s!1)) (* (- 288) (* r00 r!2 r!2 r!2 x!0 s!1)) (* 48 (* s00 s00 r!2 s!1)) (* 306 (* r00 r!2 r!2 x!0 x!0)) (* (- 414) (* r00 r!2 x!0 s!1)) (* (- 90) (* r00 x!0 s!1)) (* 3 (* ?x6515 ?x6515 ?x673 ?x6471 ?x6471)) (* (- 4) (* s00 s00 r!2 x!0 x!0)))))
 (let (($x3925 (= ?x3924 0)))
 (let (($x1355 (not $x3925)))
 (let ((?x1862 (* (- 9) s!1)))
 (let ((?x3220 (* r00 r00 s!1)))
 (let ((?x3391 (* 36 ?x3220)))
 (let ((?x1377 (* x00 x00)))
 (let ((?x3955 (* 108 ?x1377)))
 (let ((?x1215 (* s00 s00 s00)))
 (let ((?x5524 (* 16 ?x1215)))
 (let ((?x913 (* r00 r00 r00 x00)))
 (let ((?x1501 (* (- 432) ?x913)))
 (let ((?x836 (* s00 x00)))
 (let ((?x5704 (* (- 108) ?x836)))
 (let ((?x678 (* s00 r00 r00)))
 (let ((?x3362 (* (- 36) ?x678)))
 (let ((?x622 (* s00 s00)))
 (let ((?x4720 (* 51 ?x622)))
 (let ((?x553 (* r00 x00)))
 (let ((?x5724 (* 108 ?x553)))
 (let ((?x137 (* 9 s00)))
 (let ((?x902 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x5724 ?x4720 ?x3362 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x5704 ?x1501 (* 216 (* s00 r00 r00 r00)) ?x5524 ?x3955 (* 36 (* r00 r00 s!1 s!1)) ?x3391 (* 108 (* x00 s!1)) (* (- 66) (* s00 s!1)) (* (- 216) (* x00 x!0)) (* 108 (* x!0 x!0)) ?x1862 (* 15 (* s!1 s!1)) (* 54 (* r00 s!1)) (* (- 108) (* x!0 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* s00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 108 (* s00 x!0)) (* (- 108) (* r00 x!0)))))
 (let ((?x908 (* r00 r00 x00)))
 (let ((?x6175 (* 36 ?x908)))
 (let ((?x5799 (* (- 6) ?x836)))
 (let ((?x6189 (* 15 ?x622)))
 (let ((?x1632 (* 54 ?x553)))
 (let ((?x5616 (+ ?x137 (* (- 24) (* s00 r00)) ?x1632 ?x6189 ?x3362 (* 2 (* s00 s00 r00)) ?x5799 ?x6175 (* (- 24) (* s00 r!2)) ?x3391 (* (- 36) (* r00 r!2 x!0)) (* 24 (* r!2 s!1)) (* (- 54) (* r!2 x!0)) (* 6 (* x00 s!1)) (* (- 12) (* s00 s!1)) ?x1862 (* 54 (* x00 r!2)) (* (- 3) (* s!1 s!1)) (* 24 (* r00 s!1)) (* (- 6) (* x!0 s!1)) (* (- 2) (* s00 r!2 s!1)) (* 4 (* s00 s00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 2 (* s00 r00 s!1)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* r!2 s!1 s!1)) (* 6 (* s00 x!0)) (* (- 54) (* r00 x!0)))))
 (let (($x5611 (= ?x5616 0)))
 (let ((?x4830 (* (- 3) s!1)))
 (let ((?x3182 (* 4 ?x622)))
 (let ((?x3444 (* 18 ?x553)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3013 (+ ?x44 (* (- 9) (* s00 r00)) ?x3444 ?x3182 (* (- 6) ?x678) (* (- 9) (* s00 r!2)) (* 6 ?x3220) (* (- 6) (* r00 r!2 s!1)) (* 9 (* r!2 s!1)) (* 6 (* s00 r00 r!2)) (* (- 18) (* r!2 x!0)) (* (- 2) (* s00 s!1)) ?x4830 (* 18 (* x00 r!2)) (* (- 2) (* s!1 s!1)) (* 9 (* r00 s!1)) (* (- 18) (* r00 x!0)))))
 (let (($x3080 (= ?x3013 0)))
 (let ((?x4828 (* 6 x!0)))
 (let ((?x3643 (* r!2 s!1)))
 (let ((?x2132 (* 2 ?x3643)))
 (let ((?x4836 (* 3 r!2)))
 (let ((?x500 (* r00 r00 r00)))
 (let ((?x501 (* 12 ?x500)))
 (let ((?x457 (* s00 r00)))
 (let ((?x535 (* (- 6) ?x457)))
 (let ((?x532 (* (- 6) x00)))
 (let ((?x531 (* (- 3) r00)))
 (let ((?x597 (+ ?x44 ?x531 ?x532 ?x535 ?x501 ?x4836 (* 4 (* s00 r!2)) ?x2132 ?x4828 ?x4830 (* (- 12) (* r00 r00 r!2)))))
 (let (($x4529 (= ?x597 0)))
 (let (($x904 (and $x1347 $x4529 $x3080 $x5611 (= ?x902 0) $x1355)))
 (let ((?x5921 (* 9 (* s00 ?x6515 (+ ?x3893 x!0) (+ ?x3893 x!0) ?x6471 ?x6471 ?x6471))))
 (let ((?x1422 (* 6 (* r00 ?x6515 (+ ?x3893 x!0) (+ ?x3893 x!0) ?x6471 ?x6471 ?x6471 ?x6471))))
 (let ((?x3649 (* (- 9) (* r00 (+ ?x3893 x!0) (+ ?x3893 x!0) ?x6471 ?x6471 ?x6471 ?x6471))))
 (let ((?x3896 (+ ?x3893 x!0)))
 (let ((?x6335 (+ (* 18 (* s!1 s!1)) (* (- 18) (* x!0 s00)) (* (- 45) (* s!1 s!1 r00)) (* 18 (* s!1 s00)) (* (- 54) (* s!1 x00)) (* (- 486) (* r!2 r!2 s!1 x00)) (* 9 (* s!1 s00 r00)) (* 24 (* s!1 s!1 s!1)) (* 81 (* r!2 s!1 s!1)) (* (- 36) (* s!1 x!0)) (* 18 (* x!0 x!0)) (* 99 (* r!2 s!1 s00)) (* (- 6) (* s!1 s!1 s00)) (* 108 (* r!2 r!2 r!2 x!0 r00 x00)) (* 6 (* r00 r00 s00 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* 378 (* r!2 r!2 r!2 x!0 x00)) (* (- 9) (* x!0 s00 r00)) (* 18 (* s!1 s!1 r00 r00)) (* 270 (* r!2 x!0 x00)) (* 54 (* r!2 r!2 r!2 s!1 s!1)) (* (- 270) (* r!2 r!2 s!1 r00 x00)) (* (- 108) (* r!2 r!2 r!2 s!1 x!0)) (* 54 (* x!0 x00)) (* 48 (* r!2 x!0 s00 s00)) (* 54 (* r!2 r!2 r!2 x!0 x!0)) (* 36 (* r!2 r!2 r!2 r!2 x!0 s00 r00)) (* 3 (* s!1 s!1 s!1 r00)) (* (- 18) (* x!0 x!0 x!0 r00)) (* (- 60) (* r!2 r!2 s!1 s00 s00)) (* 15 (* r!2 s!1 x!0 x!0 r00)) (* 39 (* s!1 x!0 x!0 r00)) (* (- 6) (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* 24 (* r!2 s!1 s!1 x!0 r00)) (* (- 24) (* s!1 s!1 x!0 r00)) (* (- 21) (* r!2 s!1 s!1 s!1 r00)) (* 6 (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* (- 2) (* ?x6515 ?x3896 ?x3896 ?x6471 ?x6471)) (* (- 6) (* r00 s00 ?x6515 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* (- 18) (* r!2 x!0 x!0 x!0 r00)) (* 60 (* s!1 x!0 x!0)) (* 123 (* r!2 s!1 x!0 x!0)) (* 63 (* r!2 r!2 s!1 x!0 x!0)) (* (- 18) (* r!2 r!2 x!0 x!0 x!0)) (* (- 36) (* r!2 x!0 x!0 x!0)) (* (- 18) (* x!0 x!0 x!0)) (* (- 72) (* r!2 r!2 s!1 s!1 x!0)) (* (- 138) (* r!2 s!1 s!1 x!0)) (* (- 66) (* s!1 s!1 x!0)) (* 27 (* r!2 r!2 s!1 s!1 s!1)) (* 51 (* r!2 s!1 s!1 s!1)) (* (- 12) (* s!1 s00 s00)) (* 12 (* x!0 s00 s00)) (* (- 18) (* r!2 s!1 s!1 r00 x00)) (* (- 2) (* s00 ?x6515 ?x6515 ?x3896 ?x6471 ?x6471)) (* 18 (* ?x6515 ?x3896 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* (- 4) (* s00 s00 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* (- 9) (* r!2 r!2 r!2 s!1 x!0 s00)) (* 18 (* r!2 r!2 s!1 x!0 s00)) (* 45 (* r!2 s!1 x!0 s00)) (* 18 (* s!1 x!0 s00)) (* (- 18) (* s!1 x!0 r00 x00)) (* (- 54) (* r!2 r!2 r!2 r!2 x!0 s00)) (* (- 171) (* r!2 r!2 r!2 x!0 s00)) (* 198 (* r!2 r!2 s!1 s00)) (* 18 (* r!2 x!0 x!0 r00 x00)) (* 18 (* x!0 x!0 r00 x00)) (* 171 (* r!2 r!2 r!2 s!1 s00)) (* (- 18) (* ?x6515 ?x6515 ?x6515 ?x3896 ?x3896 ?x6471)) (* (- 6) (* r00 r00 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471 ?x6471)) (* (- 6) (* r!2 s!1 x!0 s00 r00)) (* 54 (* r!2 r!2 r!2 r!2 s!1 s00)) (* (- 12) (* r!2 s!1 s!1 s00)) (* 3 (* r!2 r!2 s!1 s!1 s00)) (* 9 (* r!2 r!2 r!2 s!1 s!1 s00)) (* (- 99) (* r!2 x!0 s00)) (* (- 198) (* r!2 r!2 x!0 s00)) (* (- 108) (* r!2 s!1 x!0 r00 r00)) (* (- 36) (* s!1 x!0 r00 r00)) (* (- 18) (* s!1 x!0 x00)) (* (- 18) (* r!2 s!1 x!0 x00)) (* 18 (* r!2 r!2 r!2 s!1 x!0 x00)) (* 18 (* r!2 r!2 s!1 x!0 x00)) (* (- 378) (* r!2 r!2 r!2 s!1 x00)) (* 18 (* x!0 x!0 r00 r00)) (* (- 18) (* r!2 r!2 s!1 s!1 r00 x00)) (* 54 (* r!2 s!1 s!1 r00 r00)) (* 3 (* r!2 s!1 s!1 s00 r00)) (* (- 3) (* x!0 x!0 s00 r00)) (* 486 (* r!2 r!2 x!0 x00)) (* 3 (* r!2 x!0 x!0 s00 r00)) (* 54 (* r!2 x!0 x!0 r00 r00)) (* 3 (* s!1 x!0 s00 r00)) (* (- 72) (* r!2 r!2 s!1 x!0 r00 r00)) (* (- 9) (* ?x6515 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471 ?x6471)) (* 2 (* s00 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471 ?x6471)) (* 36 (* r!2 r!2 s!1 s!1 r00 r00)) (* 9 (* r00 ?x6515 ?x6515 ?x3896 ?x6471 ?x6471)) (* (- 6) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* 6 (* s!1 x!0 s00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 90) (* r!2 r!2 x!0 s00 r00 r00)) (* (- 72) (* r!2 x!0 s00 r00 r00)) (* (- 18) (* x!0 s00 r00 r00)) (* (- 18) (* r00 x00 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* 6 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 3) (* s00 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* 6 (* r!2 s!1 s!1 s00 r00 r00)) (* (- 270) (* r!2 s!1 x00)) (* 36 (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* 90 (* r!2 r!2 s!1 s00 r00 r00)) (* 72 (* r!2 s!1 s00 r00 r00)) (* 2 (* ?x3896 ?x3896 ?x6471 ?x6471 ?x6471 ?x6471 ?x6471)) (* 3 (* ?x3896 ?x3896 ?x6471 ?x6471 ?x6471 ?x6471)) (* 18 (* s!1 s00 r00 r00)) (* 4 (* s!1 s!1 x!0 s00)) (* 4 (* r!2 s!1 s!1 x!0 s00)) (* (- 33) (* r!2 x!0 x!0 s00)) (* 6 (* r!2 s!1 s!1 s!1 r00 r00)) (* (- 12) (* x!0 x!0 s00)) (* 9 (* r00 s00 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* 6 (* s!1 s!1 s!1 r00 r00)) (* 36 (* r!2 r!2 x!0 x!0 r00 r00)) (* (- 36) (* r!2 r!2 r!2 r!2 s!1 s00 r00)) (* (- 21) (* r!2 r!2 x!0 x!0 s00)) (* (- 2) (* s!1 x!0 x!0 s00)) (* (- 2) (* r!2 s!1 x!0 x!0 s00)) (* (- 108) (* r!2 r!2 r!2 s!1 r00 x00)) (* (- 2) (* r!2 s!1 s!1 s!1 s00)) (* (- 2) (* s!1 s!1 s!1 s00)) (* 54 (* x!0 r00 x00)) (* (- 12) (* s!1 s!1 x!0 r00 r00)) (* (- 12) (* r!2 s!1 s!1 x!0 r00 r00)) (* 24 (* r!2 r!2 r!2 x!0 s00 s00)) (* 6 (* s!1 x!0 x!0 r00 r00)) (* 6 (* r!2 s!1 x!0 x!0 r00 r00)) (* (- 108) (* r!2 r!2 r!2 r!2 s!1 x00)) (* 117 (* r!2 r!2 x!0 x!0)) (* 81 (* r!2 x!0 x!0)) (* (- 234) (* r!2 r!2 s!1 x!0)) (* (- 162) (* r!2 s!1 x!0)) (* 108 (* r!2 r!2 r!2 r!2 x!0 x00)) (* (- 18) (* r!2 s!1 s!1 x00)) (* 117 (* r!2 r!2 s!1 s!1)) (* (- 36) (* r!2 r!2 s!1 s!1 x00)) (* (- 18) (* r!2 r!2 r!2 s!1 s!1 x00)) (* 18 (* x!0 x!0 x00)) (* 36 (* r!2 x!0 x!0 x00)) (* 18 (* r!2 r!2 x!0 x!0 x00)) (* 216 (* r!2 x!0 r00 x00)) (* 270 (* r!2 r!2 x!0 r00 x00)) (* (- 6) (* x!0 x!0 s00 r00 r00)) (* (- 6) (* r!2 x!0 x!0 s00 r00 r00)) (* 60 (* r!2 r!2 x!0 s00 s00)) (* (- 6) (* r00 ?x6515 ?x6515 ?x6515 ?x3896 ?x6471 ?x6471)) (* (- 216) (* r!2 s!1 r00 x00)) (* (- 2) (* ?x6515 ?x6515 ?x3896 ?x6471 ?x6471 ?x6471)) (* (- 54) (* s!1 r00 x00)) (* 6 (* r!2 r!2 x!0 x!0 s00 r00)) (* 18 (* r!2 r!2 s!1 x!0 r00 x00)) (* (- 4) (* r!2 s!1 s!1 s00 s00)) (* 18 (* r!2 s!1 s00 r00)) (* (- 27) (* r!2 r!2 s!1 s00 r00)) (* (- 72) (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 4) (* r!2 r!2 s!1 s!1 s00 s00)) (* (- 3) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 18) (* r!2 x!0 s00 r00)) (* (- 4) (* s!1 x!0 s00 s00)) (* 27 (* r!2 r!2 x!0 s00 r00)) (* 72 (* r!2 r!2 r!2 x!0 s00 r00)) (* 4 (* r!2 r!2 s!1 x!0 s00 s00)) (* (- 3) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 24) (* r!2 r!2 r!2 s!1 s00 s00)) (* (- 18) (* x00 ?x6515 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* (- 306) (* r!2 r!2 s!1 s!1 r00)) (* (- 207) (* r!2 s!1 s!1 r00)) (* 90 (* s!1 x!0 r00)) (* 414 (* r!2 s!1 x!0 r00)) (* 612 (* r!2 r!2 s!1 x!0 r00)) (* (- 45) (* x!0 x!0 r00)) (* (- 207) (* r!2 x!0 x!0 r00)) (* (- 306) (* r!2 r!2 x!0 x!0 r00)) (* (- 48) (* r!2 s!1 s00 s00)) (* (- 144) (* r!2 r!2 r!2 s!1 s!1 r00)) (* (- 24) (* r!2 r!2 s!1 s!1 s!1 r00)) (* 288 (* r!2 r!2 r!2 s!1 x!0 r00)) (* 48 (* r!2 r!2 s!1 s!1 x!0 r00)) (* (- 144) (* r!2 r!2 r!2 x!0 x!0 r00)) (* (- 24) (* r!2 r!2 s!1 x!0 x!0 r00)) (* 4 (* x!0 x!0 s00 s00)) (* 18 (* r00 ?x3896 ?x3896 ?x3896 ?x6471 ?x6471 ?x6471)) (* 9 (* ?x6515 ?x6515 ?x6515 ?x3896 ?x6471 ?x6471)) (* 4 (* r!2 x!0 x!0 s00 s00)) (* (- 3) (* ?x6515 ?x6515 ?x3896 ?x6471 ?x6471)) ?x3649 ?x1422 ?x5921 (* 6 (* r00 r00 ?x6515 ?x6515 ?x3896 ?x6471 ?x6471)))))
 (let ((?x1407 (* (- 108) ?x1377)))
 (let ((?x1406 (* (- 16) ?x1215)))
 (let ((?x1087 (* s00 r00 r00 r00)))
 (let ((?x1402 (* (- 216) ?x1087)))
 (let ((?x914 (* 432 ?x913)))
 (let ((?x1160 (* 108 ?x836)))
 (let ((?x762 (* s00 s00 r00 r00)))
 (let ((?x763 (* 36 ?x762)))
 (let ((?x699 (* s00 s00 r00)))
 (let ((?x1043 (* 108 ?x699)))
 (let ((?x1031 (* 36 ?x678)))
 (let ((?x1396 (* (- 51) ?x622)))
 (let ((?x3697 (* s!1 r00 r00)))
 (let ((?x2159 (* (- 36) ?x3697)))
 (let ((?x1393 (* (- 108) ?x553)))
 (let ((?x544 (* s00 r00 x00)))
 (let ((?x1392 (* (- 216) ?x544)))
 (let ((?x551 (* 54 ?x457)))
 (let ((?x1018 (* (- 9) s00)))
 (let ((?x2411 (* 9 s!1)))
 (let ((?x3216 (+ ?x2411 ?x1018 ?x551 ?x1392 ?x1393 (* (- 15) (* s!1 s!1)) ?x2159 ?x1396 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1031 ?x1043 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x763 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1160 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x914 (* 12 (* s!1 s!1 s00)) ?x1402 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1406 (* 216 (* x!0 x00)) ?x1407)))
 (let ((?x921 (* (- 36) ?x908)))
 (let ((?x837 (* 6 ?x836)))
 (let ((?x727 (* (- 2) ?x699)))
 (let ((?x947 (* (- 15) ?x622)))
 (let ((?x582 (* (- 54) ?x553)))
 (let ((?x595 (* 24 ?x457)))
 (let ((?x4422 (+ ?x2411 ?x1018 (* (- 24) ?x3643) (* 24 (* r!2 s00)) ?x595 ?x582 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x2159 ?x947 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1031 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x727 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x837 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x921 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x679 (* 6 ?x678)))
 (let ((?x635 (* (- 4) ?x622)))
 (let ((?x567 (* (- 18) ?x553)))
 (let ((?x572 (* 9 ?x457)))
 (let ((?x409 (* (- 3) s00)))
 (let ((?x2192 (+ (* 3 s!1) ?x409 (* (- 9) ?x3643) (* 9 (* r!2 s00)) ?x572 ?x567 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x3697) ?x635 (* 18 (* x!0 r00)) ?x679 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x526 (+ ?x4836 ?x4830 ?x4828 ?x44 ?x531 ?x532 ?x2132 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x535 ?x501)))
 (let (($x5110 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x332)) 0)))
 (let (($x3092 (and $x5110 (= ?x526 0) (= ?x2192 0) (= ?x4422 0) (= ?x3216 0) (not (= ?x6335 0)))))
 (let (($x1907 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1414 (+ 3 ?x211 s)))
 (let ((?x311 (* (- 1) s)))
 (let ((?x1420 (+ ?x311 x)))
 (let ((?x1567 (+ 1 r)))
 (let ((?x6307 (* (- 24) (* r r s x x r00))))
 (let ((?x6294 (* (- 144) (* r r r x x r00))))
 (let ((?x6334 (* 48 (* r r s s x r00))))
 (let ((?x6333 (* 288 (* r r r s x r00))))
 (let ((?x6190 (* (- 24) (* r r s s s r00))))
 (let ((?x6176 (* (- 144) (* r r r s s r00))))
 (let ((?x4595 (* (- 6) (* r x x s00 r00 r00))))
 (let ((?x4582 (* (- 6) (* x x s00 r00 r00))))
 (let ((?x4420 (* 18 (* r r x x x00))))
 (let ((?x4414 (* 18 (* x x x00))))
 (let ((?x3971 (* (- 2) (* s s s s00))))
 (let ((?x3961 (* (- 2) (* r s s s s00))))
 (let ((?x3886 (* (- 2) (* r s x x s00))))
 (let ((?x3875 (* (- 2) (* s x x s00))))
 (let ((?x5093 (* (- 21) (* r r x x s00))))
 (let ((?x4007 (* 4 (* r s s x s00))))
 (let ((?x4005 (* 4 (* s s x s00))))
 (let ((?x3589 (* 18 (* s s00 r00 r00))))
 (let ((?x3604 (* 72 (* r s s00 r00 r00))))
 (let ((?x3602 (* 90 (* r r s s00 r00 r00))))
 (let ((?x3533 (* 36 (* r r r s s00 r00 r00))))
 (let ((?x3509 (* 6 (* r s s s00 r00 r00))))
 (let ((?x3499 (* 6 (* r r s s s00 r00 r00))))
 (let ((?x3485 (* (- 18) (* x s00 r00 r00))))
 (let ((?x3599 (* (- 72) (* r x s00 r00 r00))))
 (let ((?x3597 (* (- 90) (* r r x s00 r00 r00))))
 (let ((?x3433 (* (- 36) (* r r r x s00 r00 r00))))
 (let ((?x4747 (* 6 (* s x s00 r00 r00))))
 (let ((?x3395 (* (- 6) (* r r s x s00 r00 r00))))
 (let ((?x2839 (* 18 (* r r s x x00))))
 (let ((?x2840 (* 18 (* r r r s x x00))))
 (let ((?x2580 (* 9 (* r r r s s s00))))
 (let ((?x2517 (* 54 (* r r r r s s00))))
 (let ((?x2410 (* (- 54) (* r r r r x s00))))
 (let ((?x5086 (* 45 (* r s x s00))))
 (let ((?x2349 (* (- 9) (* r r r s x s00))))
 (let ((?x2091 (* 12 (* x s00 s00))))
 (let ((?x2082 (* (- 12) (* s s00 s00))))
 (let ((?x1721 (* (- 18) (* x x x))))
 (let ((?x1992 (* (- 36) (* r x x x))))
 (let ((?x1729 (* (- 18) (* r r x x x))))
 (let ((?x4545 (* 63 (* r r s x x))))
 (let ((?x4541 (* 60 (* s x x))))
 (let ((?x1664 (* (- 18) (* r x x x r00))))
 (let ((?x1645 (* (- 18) (* x x x r00))))
 (let ((?x1351 (* x x00)))
 (let ((?x2853 (* 54 ?x1351)))
 (let ((?x971 (* s s s00)))
 (let ((?x3674 (* (- 6) ?x971)))
 (let ((?x885 (* x x)))
 (let ((?x4539 (* 18 ?x885)))
 (let ((?x844 (* s x)))
 (let ((?x4538 (* (- 36) ?x844)))
 (let ((?x755 (* s x00)))
 (let ((?x2849 (* (- 54) ?x755)))
 (let ((?x719 (* s s00)))
 (let ((?x5477 (* 18 ?x719)))
 (let ((?x631 (* x s00)))
 (let ((?x5476 (* (- 18) ?x631)))
 (let ((?x576 (* s s)))
 (let ((?x4537 (* 18 ?x576)))
 (let ((?x7642 (+ ?x4537 ?x5476 (* (- 45) (* s s r00)) ?x5477 ?x2849 (* (- 486) (* r r s x00)) (* 9 (* s s00 r00)) (* 24 (* s s s)) (* 81 (* r s s)) ?x4538 ?x4539 (* 99 (* r s s00)) ?x3674 (* 108 (* r r r x r00 x00)) (* 6 (* r00 r00 s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 378 (* r r r x x00)) (* (- 9) (* x s00 r00)) (* 18 (* s s r00 r00)) (* 270 (* r x x00)) (* 54 (* r r r s s)) (* (- 270) (* r r s r00 x00)) (* (- 108) (* r r r s x)) ?x2853 (* 48 (* r x s00 s00)) (* 54 (* r r r x x)) (* 36 (* r r r r x s00 r00)) (* 3 (* s s s r00)) ?x1645 (* (- 60) (* r r s s00 s00)) (* 15 (* r s x x r00)) (* 39 (* s x x r00)) (* (- 6) (* r r r s s s00 r00)) (* 24 (* r s s x r00)) (* (- 24) (* s s x r00)) (* (- 21) (* r s s s r00)) (* 6 (* r r r s x s00 r00)) (* (- 2) (* ?x1567 ?x1420 ?x1420 ?x1414 ?x1414)) (* (- 6) (* r00 s00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x1664 ?x4541 (* 123 (* r s x x)) ?x4545 ?x1729 ?x1992 ?x1721 (* (- 72) (* r r s s x)) (* (- 138) (* r s s x)) (* (- 66) (* s s x)) (* 27 (* r r s s s)) (* 51 (* r s s s)) ?x2082 ?x2091 (* (- 18) (* r s s r00 x00)) (* (- 2) (* s00 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* 18 (* ?x1567 ?x1420 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* (- 4) (* s00 s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x2349 (* 18 (* r r s x s00)) ?x5086 (* 18 (* s x s00)) (* (- 18) (* s x r00 x00)) ?x2410 (* (- 171) (* r r r x s00)) (* 198 (* r r s s00)) (* 18 (* r x x r00 x00)) (* 18 (* x x r00 x00)) (* 171 (* r r r s s00)) (* (- 18) (* ?x1567 ?x1567 ?x1567 ?x1420 ?x1420 ?x1414)) (* (- 6) (* r00 r00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* (- 6) (* r s x s00 r00)) ?x2517 (* (- 12) (* r s s s00)) (* 3 (* r r s s s00)) ?x2580 (* (- 99) (* r x s00)) (* (- 198) (* r r x s00)) (* (- 108) (* r s x r00 r00)) (* (- 36) (* s x r00 r00)) (* (- 18) (* s x x00)) (* (- 18) (* r s x x00)) ?x2840 ?x2839 (* (- 378) (* r r r s x00)) (* 18 (* x x r00 r00)) (* (- 18) (* r r s s r00 x00)) (* 54 (* r s s r00 r00)) (* 3 (* r s s s00 r00)) (* (- 3) (* x x s00 r00)) (* 486 (* r r x x00)) (* 3 (* r x x s00 r00)) (* 54 (* r x x r00 r00)) (* 3 (* s x s00 r00)) (* (- 72) (* r r s x r00 r00)) (* (- 9) (* ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 2 (* s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 36 (* r r s s r00 r00)) (* 9 (* r00 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) ?x3395 ?x4747 ?x3433 ?x3597 ?x3599 ?x3485 (* (- 18) (* r00 x00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x3499 (* (- 3) (* s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x3509 (* (- 270) (* r s x00)) ?x3533 ?x3602 ?x3604 (* 2 (* ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414 ?x1414)) (* 3 (* ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) ?x3589 ?x4005 ?x4007 (* (- 33) (* r x x s00)) (* 6 (* r s s s r00 r00)) (* (- 12) (* x x s00)) (* 9 (* r00 s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 6 (* s s s r00 r00)) (* 36 (* r r x x r00 r00)) (* (- 36) (* r r r r s s00 r00)) ?x5093 ?x3875 ?x3886 (* (- 108) (* r r r s r00 x00)) ?x3961 ?x3971 (* 54 (* x r00 x00)) (* (- 12) (* s s x r00 r00)) (* (- 12) (* r s s x r00 r00)) (* 24 (* r r r x s00 s00)) (* 6 (* s x x r00 r00)) (* 6 (* r s x x r00 r00)) (* (- 108) (* r r r r s x00)) (* 117 (* r r x x)) (* 81 (* r x x)) (* (- 234) (* r r s x)) (* (- 162) (* r s x)) (* 108 (* r r r r x x00)) (* (- 18) (* r s s x00)) (* 117 (* r r s s)) (* (- 36) (* r r s s x00)) (* (- 18) (* r r r s s x00)) ?x4414 (* 36 (* r x x x00)) ?x4420 (* 216 (* r x r00 x00)) (* 270 (* r r x r00 x00)) ?x4582 ?x4595 (* 60 (* r r x s00 s00)) (* (- 6) (* r00 ?x1567 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* (- 216) (* r s r00 x00)) (* (- 2) (* ?x1567 ?x1567 ?x1420 ?x1414 ?x1414 ?x1414)) (* (- 54) (* s r00 x00)) (* 6 (* r r x x s00 r00)) (* 18 (* r r s x r00 x00)) (* (- 4) (* r s s s00 s00)) (* 18 (* r s s00 r00)) (* (- 27) (* r r s s00 r00)) (* (- 72) (* r r r s s00 r00)) (* (- 4) (* r r s s s00 s00)) (* (- 3) (* r r s s s00 r00)) (* (- 18) (* r x s00 r00)) (* (- 4) (* s x s00 s00)) (* 27 (* r r x s00 r00)) (* 72 (* r r r x s00 r00)) (* 4 (* r r s x s00 s00)) (* (- 3) (* r r s x s00 r00)) (* (- 24) (* r r r s s00 s00)) (* (- 18) (* x00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* (- 306) (* r r s s r00)) (* (- 207) (* r s s r00)) (* 90 (* s x r00)) (* 414 (* r s x r00)) (* 612 (* r r s x r00)) (* (- 45) (* x x r00)) (* (- 207) (* r x x r00)) (* (- 306) (* r r x x r00)) (* (- 48) (* r s s00 s00)) ?x6176 ?x6190 ?x6333 ?x6334 ?x6294 ?x6307 (* 4 (* x x s00 s00)) (* 18 (* r00 ?x1420 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 9 (* ?x1567 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* 4 (* r x x s00 s00)) (* (- 3) (* ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* (- 9) (* r00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 6 (* r00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 9 (* s00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)))))
 (let ((?x1377 (* x00 x00)))
 (let ((?x1407 (* (- 108) ?x1377)))
 (let ((?x1215 (* s00 s00 s00)))
 (let ((?x1406 (* (- 16) ?x1215)))
 (let ((?x1087 (* s00 r00 r00 r00)))
 (let ((?x1402 (* (- 216) ?x1087)))
 (let ((?x913 (* r00 r00 r00 x00)))
 (let ((?x914 (* 432 ?x913)))
 (let ((?x836 (* s00 x00)))
 (let ((?x1160 (* 108 ?x836)))
 (let ((?x762 (* s00 s00 r00 r00)))
 (let ((?x763 (* 36 ?x762)))
 (let ((?x699 (* s00 s00 r00)))
 (let ((?x1043 (* 108 ?x699)))
 (let ((?x678 (* s00 r00 r00)))
 (let ((?x1031 (* 36 ?x678)))
 (let ((?x622 (* s00 s00)))
 (let ((?x1396 (* (- 51) ?x622)))
 (let ((?x596 (* s r00 r00)))
 (let ((?x895 (* (- 36) ?x596)))
 (let ((?x553 (* r00 x00)))
 (let ((?x1393 (* (- 108) ?x553)))
 (let ((?x544 (* s00 r00 x00)))
 (let ((?x1392 (* (- 216) ?x544)))
 (let ((?x457 (* s00 r00)))
 (let ((?x551 (* 54 ?x457)))
 (let ((?x1018 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1408 (+ ?x143 ?x1018 ?x551 ?x1392 ?x1393 (* (- 15) ?x576) ?x895 ?x1396 (* (- 108) ?x631) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1031 ?x1043 (* 66 ?x719) (* (- 54) (* s r00)) (* (- 108) ?x755) ?x763 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1160 (* 108 ?x844) (* (- 108) ?x885) ?x914 (* 12 ?x971) ?x1402 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1406 (* 216 ?x1351) ?x1407)))
 (let (($x1409 (= ?x1408 0)))
 (let ((?x908 (* r00 r00 x00)))
 (let ((?x921 (* (- 36) ?x908)))
 (let ((?x837 (* 6 ?x836)))
 (let ((?x727 (* (- 2) ?x699)))
 (let ((?x947 (* (- 15) ?x622)))
 (let ((?x600 (* 3 ?x576)))
 (let ((?x582 (* (- 54) ?x553)))
 (let ((?x595 (* 24 ?x457)))
 (let ((?x1110 (+ ?x143 ?x1018 (* (- 24) (* r s)) (* 24 (* r s00)) ?x595 ?x582 ?x600 (* 54 (* r x)) (* 36 (* r x r00)) ?x895 ?x947 (* (- 6) ?x631) (* 54 (* x r00)) ?x1031 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x727 (* 12 ?x719) (* (- 24) (* s r00)) (* (- 6) ?x755) (* (- 2) (* s s00 r00)) ?x837 (* 2 (* r s s)) (* 6 ?x844) (* (- 4) (* r s00 s00)) ?x921 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1115 (= ?x1110 0)))
 (let ((?x679 (* 6 ?x678)))
 (let ((?x635 (* (- 4) ?x622)))
 (let ((?x577 (* 2 ?x576)))
 (let ((?x567 (* (- 18) ?x553)))
 (let ((?x572 (* 9 ?x457)))
 (let ((?x409 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x776 (+ ?x47 ?x409 (* (- 9) (* r s)) (* 9 (* r s00)) ?x572 ?x567 ?x577 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x596) ?x635 (* 18 (* x r00)) ?x679 (* (- 18) (* r x00)) (* 2 ?x719) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x783 (= ?x776 0)))
 (let ((?x500 (* r00 r00 r00)))
 (let ((?x501 (* 12 ?x500)))
 (let ((?x535 (* (- 6) ?x457)))
 (let ((?x532 (* (- 6) x00)))
 (let ((?x531 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x530 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x536 (+ ?x43 ?x530 ?x56 ?x44 ?x531 ?x532 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x535 ?x501)))
 (let (($x537 (= ?x536 0)))
 (let ((?x332 (* r00 r00)))
 (let ((?x333 (* 3 ?x332)))
 (let ((?x362 (* (- 1) s00)))
 (let (($x365 (= (+ s ?x362 (* (- 3) (* r r)) ?x333) 0)))
 (and $x365 $x537 $x783 $x1115 $x1409 (not (= ?x7642 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x4599 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x5991 (+ 3 s ?x211)))
 (let ((?x311 (* (- 1) s)))
 (let ((?x3559 (+ x ?x311)))
 (let ((?x1567 (+ 1 r)))
 (let ((?x3493 (+ (* 2 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 3) (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* r00 ?x1567 ?x3559 ?x3559 ?x3559)) (* 9 (* r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* ?x1567 ?x1567 ?x3559 ?x3559 ?x3559)) (* 4 (* s00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 18) (* x00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 3 (* s00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* r00 x00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 3 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 2 (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* ?x1567 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x3559 ?x3559)) (* (- 4) (* s00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* ?x1567 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 3) (* ?x1567 ?x3559 ?x3559 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 9 (* ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991)) (* (- 6) (* r00 s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x3559 ?x3559)) (* 6 (* r00 r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* (- 9) (* s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 18 (* r00 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 9 (* ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 4 (* s00 s00 ?x1567 ?x3559 ?x3559)) (* (- 3) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* (- 9) (* r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* 6 (* r00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 3 (* s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 24) (* r00 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)))))
 (let (($x346 (not (= ?x3493 0))))
 (let ((?x1377 (* x00 x00)))
 (let ((?x3955 (* 108 ?x1377)))
 (let ((?x4648 (* (- 9) s)))
 (let ((?x2919 (* r00 r00 s00)))
 (let ((?x4586 (* (- 36) ?x2919)))
 (let ((?x137 (* 9 s00)))
 (let ((?x622 (* s00 s00)))
 (let ((?x4720 (* 51 ?x622)))
 (let ((?x1806 (* r00 r00 s)))
 (let ((?x6250 (* 36 ?x1806)))
 (let ((?x1215 (* s00 s00 s00)))
 (let ((?x5524 (* 16 ?x1215)))
 (let ((?x836 (* s00 x00)))
 (let ((?x5704 (* (- 108) ?x836)))
 (let ((?x913 (* r00 r00 r00 x00)))
 (let ((?x1501 (* (- 432) ?x913)))
 (let ((?x553 (* r00 x00)))
 (let ((?x5724 (* 108 ?x553)))
 (let ((?x5925 (+ (* 216 (* r00 s00 x00)) ?x5724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1501 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5704 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5524 (* (- 108) (* x s)) ?x6250 ?x4720 (* (- 108) (* r00 x)) ?x137 ?x4586 ?x4648 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3955)))
 (let (($x5931 (= ?x5925 0)))
 (let ((?x6189 (* 15 ?x622)))
 (let ((?x908 (* r00 r00 x00)))
 (let ((?x6175 (* 36 ?x908)))
 (let ((?x5799 (* (- 6) ?x836)))
 (let ((?x1632 (* 54 ?x553)))
 (let ((?x6203 (+ (* 24 (* s r)) ?x1632 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x5799 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x6250 ?x6175 ?x6189 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x4586 (* 54 (* x00 r)) ?x4648 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x530 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3182 (* 4 ?x622)))
 (let ((?x3444 (* 18 ?x553)))
 (let ((?x2337 (+ (* 9 (* s r)) ?x3444 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1806) ?x3182 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2919) (* 18 (* x00 r)) ?x530 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x500 (* r00 r00 r00)))
 (let ((?x501 (* 12 ?x500)))
 (let ((?x532 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x531 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3465 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x530 ?x531 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x532 ?x501)))
 (let (($x5662 (= (+ s00 ?x311 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5662 (= ?x3465 0) (= ?x2337 0) (= ?x6203 0) $x5931 $x346))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1909 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1414 (+ 3 ?x211 s)))
 (let ((?x311 (* (- 1) s)))
 (let ((?x1420 (+ ?x311 x)))
 (let ((?x1567 (+ 1 r)))
 (let ((?x6307 (* (- 24) (* r r s x x r00))))
 (let ((?x6294 (* (- 144) (* r r r x x r00))))
 (let ((?x6334 (* 48 (* r r s s x r00))))
 (let ((?x6333 (* 288 (* r r r s x r00))))
 (let ((?x6190 (* (- 24) (* r r s s s r00))))
 (let ((?x6176 (* (- 144) (* r r r s s r00))))
 (let ((?x4595 (* (- 6) (* r x x s00 r00 r00))))
 (let ((?x4582 (* (- 6) (* x x s00 r00 r00))))
 (let ((?x4420 (* 18 (* r r x x x00))))
 (let ((?x4414 (* 18 (* x x x00))))
 (let ((?x3971 (* (- 2) (* s s s s00))))
 (let ((?x3961 (* (- 2) (* r s s s s00))))
 (let ((?x3886 (* (- 2) (* r s x x s00))))
 (let ((?x3875 (* (- 2) (* s x x s00))))
 (let ((?x5093 (* (- 21) (* r r x x s00))))
 (let ((?x4007 (* 4 (* r s s x s00))))
 (let ((?x4005 (* 4 (* s s x s00))))
 (let ((?x3589 (* 18 (* s s00 r00 r00))))
 (let ((?x3604 (* 72 (* r s s00 r00 r00))))
 (let ((?x3602 (* 90 (* r r s s00 r00 r00))))
 (let ((?x3533 (* 36 (* r r r s s00 r00 r00))))
 (let ((?x3509 (* 6 (* r s s s00 r00 r00))))
 (let ((?x3499 (* 6 (* r r s s s00 r00 r00))))
 (let ((?x3485 (* (- 18) (* x s00 r00 r00))))
 (let ((?x3599 (* (- 72) (* r x s00 r00 r00))))
 (let ((?x3597 (* (- 90) (* r r x s00 r00 r00))))
 (let ((?x3433 (* (- 36) (* r r r x s00 r00 r00))))
 (let ((?x4747 (* 6 (* s x s00 r00 r00))))
 (let ((?x3395 (* (- 6) (* r r s x s00 r00 r00))))
 (let ((?x2839 (* 18 (* r r s x x00))))
 (let ((?x2840 (* 18 (* r r r s x x00))))
 (let ((?x2580 (* 9 (* r r r s s s00))))
 (let ((?x2517 (* 54 (* r r r r s s00))))
 (let ((?x2410 (* (- 54) (* r r r r x s00))))
 (let ((?x5086 (* 45 (* r s x s00))))
 (let ((?x2349 (* (- 9) (* r r r s x s00))))
 (let ((?x2091 (* 12 (* x s00 s00))))
 (let ((?x2082 (* (- 12) (* s s00 s00))))
 (let ((?x1721 (* (- 18) (* x x x))))
 (let ((?x1992 (* (- 36) (* r x x x))))
 (let ((?x1729 (* (- 18) (* r r x x x))))
 (let ((?x4545 (* 63 (* r r s x x))))
 (let ((?x4541 (* 60 (* s x x))))
 (let ((?x1664 (* (- 18) (* r x x x r00))))
 (let ((?x1645 (* (- 18) (* x x x r00))))
 (let ((?x1351 (* x x00)))
 (let ((?x2853 (* 54 ?x1351)))
 (let ((?x971 (* s s s00)))
 (let ((?x3674 (* (- 6) ?x971)))
 (let ((?x885 (* x x)))
 (let ((?x4539 (* 18 ?x885)))
 (let ((?x844 (* s x)))
 (let ((?x4538 (* (- 36) ?x844)))
 (let ((?x755 (* s x00)))
 (let ((?x2849 (* (- 54) ?x755)))
 (let ((?x719 (* s s00)))
 (let ((?x5477 (* 18 ?x719)))
 (let ((?x631 (* x s00)))
 (let ((?x5476 (* (- 18) ?x631)))
 (let ((?x576 (* s s)))
 (let ((?x4537 (* 18 ?x576)))
 (let ((?x7642 (+ ?x4537 ?x5476 (* (- 45) (* s s r00)) ?x5477 ?x2849 (* (- 486) (* r r s x00)) (* 9 (* s s00 r00)) (* 24 (* s s s)) (* 81 (* r s s)) ?x4538 ?x4539 (* 99 (* r s s00)) ?x3674 (* 108 (* r r r x r00 x00)) (* 6 (* r00 r00 s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 378 (* r r r x x00)) (* (- 9) (* x s00 r00)) (* 18 (* s s r00 r00)) (* 270 (* r x x00)) (* 54 (* r r r s s)) (* (- 270) (* r r s r00 x00)) (* (- 108) (* r r r s x)) ?x2853 (* 48 (* r x s00 s00)) (* 54 (* r r r x x)) (* 36 (* r r r r x s00 r00)) (* 3 (* s s s r00)) ?x1645 (* (- 60) (* r r s s00 s00)) (* 15 (* r s x x r00)) (* 39 (* s x x r00)) (* (- 6) (* r r r s s s00 r00)) (* 24 (* r s s x r00)) (* (- 24) (* s s x r00)) (* (- 21) (* r s s s r00)) (* 6 (* r r r s x s00 r00)) (* (- 2) (* ?x1567 ?x1420 ?x1420 ?x1414 ?x1414)) (* (- 6) (* r00 s00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x1664 ?x4541 (* 123 (* r s x x)) ?x4545 ?x1729 ?x1992 ?x1721 (* (- 72) (* r r s s x)) (* (- 138) (* r s s x)) (* (- 66) (* s s x)) (* 27 (* r r s s s)) (* 51 (* r s s s)) ?x2082 ?x2091 (* (- 18) (* r s s r00 x00)) (* (- 2) (* s00 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* 18 (* ?x1567 ?x1420 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* (- 4) (* s00 s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x2349 (* 18 (* r r s x s00)) ?x5086 (* 18 (* s x s00)) (* (- 18) (* s x r00 x00)) ?x2410 (* (- 171) (* r r r x s00)) (* 198 (* r r s s00)) (* 18 (* r x x r00 x00)) (* 18 (* x x r00 x00)) (* 171 (* r r r s s00)) (* (- 18) (* ?x1567 ?x1567 ?x1567 ?x1420 ?x1420 ?x1414)) (* (- 6) (* r00 r00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* (- 6) (* r s x s00 r00)) ?x2517 (* (- 12) (* r s s s00)) (* 3 (* r r s s s00)) ?x2580 (* (- 99) (* r x s00)) (* (- 198) (* r r x s00)) (* (- 108) (* r s x r00 r00)) (* (- 36) (* s x r00 r00)) (* (- 18) (* s x x00)) (* (- 18) (* r s x x00)) ?x2840 ?x2839 (* (- 378) (* r r r s x00)) (* 18 (* x x r00 r00)) (* (- 18) (* r r s s r00 x00)) (* 54 (* r s s r00 r00)) (* 3 (* r s s s00 r00)) (* (- 3) (* x x s00 r00)) (* 486 (* r r x x00)) (* 3 (* r x x s00 r00)) (* 54 (* r x x r00 r00)) (* 3 (* s x s00 r00)) (* (- 72) (* r r s x r00 r00)) (* (- 9) (* ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 2 (* s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 36 (* r r s s r00 r00)) (* 9 (* r00 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) ?x3395 ?x4747 ?x3433 ?x3597 ?x3599 ?x3485 (* (- 18) (* r00 x00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x3499 (* (- 3) (* s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) ?x3509 (* (- 270) (* r s x00)) ?x3533 ?x3602 ?x3604 (* 2 (* ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414 ?x1414)) (* 3 (* ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) ?x3589 ?x4005 ?x4007 (* (- 33) (* r x x s00)) (* 6 (* r s s s r00 r00)) (* (- 12) (* x x s00)) (* 9 (* r00 s00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 6 (* s s s r00 r00)) (* 36 (* r r x x r00 r00)) (* (- 36) (* r r r r s s00 r00)) ?x5093 ?x3875 ?x3886 (* (- 108) (* r r r s r00 x00)) ?x3961 ?x3971 (* 54 (* x r00 x00)) (* (- 12) (* s s x r00 r00)) (* (- 12) (* r s s x r00 r00)) (* 24 (* r r r x s00 s00)) (* 6 (* s x x r00 r00)) (* 6 (* r s x x r00 r00)) (* (- 108) (* r r r r s x00)) (* 117 (* r r x x)) (* 81 (* r x x)) (* (- 234) (* r r s x)) (* (- 162) (* r s x)) (* 108 (* r r r r x x00)) (* (- 18) (* r s s x00)) (* 117 (* r r s s)) (* (- 36) (* r r s s x00)) (* (- 18) (* r r r s s x00)) ?x4414 (* 36 (* r x x x00)) ?x4420 (* 216 (* r x r00 x00)) (* 270 (* r r x r00 x00)) ?x4582 ?x4595 (* 60 (* r r x s00 s00)) (* (- 6) (* r00 ?x1567 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* (- 216) (* r s r00 x00)) (* (- 2) (* ?x1567 ?x1567 ?x1420 ?x1414 ?x1414 ?x1414)) (* (- 54) (* s r00 x00)) (* 6 (* r r x x s00 r00)) (* 18 (* r r s x r00 x00)) (* (- 4) (* r s s s00 s00)) (* 18 (* r s s00 r00)) (* (- 27) (* r r s s00 r00)) (* (- 72) (* r r r s s00 r00)) (* (- 4) (* r r s s s00 s00)) (* (- 3) (* r r s s s00 r00)) (* (- 18) (* r x s00 r00)) (* (- 4) (* s x s00 s00)) (* 27 (* r r x s00 r00)) (* 72 (* r r r x s00 r00)) (* 4 (* r r s x s00 s00)) (* (- 3) (* r r s x s00 r00)) (* (- 24) (* r r r s s00 s00)) (* (- 18) (* x00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* (- 306) (* r r s s r00)) (* (- 207) (* r s s r00)) (* 90 (* s x r00)) (* 414 (* r s x r00)) (* 612 (* r r s x r00)) (* (- 45) (* x x r00)) (* (- 207) (* r x x r00)) (* (- 306) (* r r x x r00)) (* (- 48) (* r s s00 s00)) ?x6176 ?x6190 ?x6333 ?x6334 ?x6294 ?x6307 (* 4 (* x x s00 s00)) (* 18 (* r00 ?x1420 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 9 (* ?x1567 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* 4 (* r x x s00 s00)) (* (- 3) (* ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)) (* (- 9) (* r00 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 6 (* r00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414 ?x1414)) (* 9 (* s00 ?x1567 ?x1420 ?x1420 ?x1414 ?x1414 ?x1414)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x1420 ?x1414 ?x1414)))))
 (let ((?x1377 (* x00 x00)))
 (let ((?x1407 (* (- 108) ?x1377)))
 (let ((?x1215 (* s00 s00 s00)))
 (let ((?x1406 (* (- 16) ?x1215)))
 (let ((?x1087 (* s00 r00 r00 r00)))
 (let ((?x1402 (* (- 216) ?x1087)))
 (let ((?x913 (* r00 r00 r00 x00)))
 (let ((?x914 (* 432 ?x913)))
 (let ((?x836 (* s00 x00)))
 (let ((?x1160 (* 108 ?x836)))
 (let ((?x762 (* s00 s00 r00 r00)))
 (let ((?x763 (* 36 ?x762)))
 (let ((?x699 (* s00 s00 r00)))
 (let ((?x1043 (* 108 ?x699)))
 (let ((?x678 (* s00 r00 r00)))
 (let ((?x1031 (* 36 ?x678)))
 (let ((?x622 (* s00 s00)))
 (let ((?x1396 (* (- 51) ?x622)))
 (let ((?x596 (* s r00 r00)))
 (let ((?x895 (* (- 36) ?x596)))
 (let ((?x553 (* r00 x00)))
 (let ((?x1393 (* (- 108) ?x553)))
 (let ((?x544 (* s00 r00 x00)))
 (let ((?x1392 (* (- 216) ?x544)))
 (let ((?x457 (* s00 r00)))
 (let ((?x551 (* 54 ?x457)))
 (let ((?x1018 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1408 (+ ?x143 ?x1018 ?x551 ?x1392 ?x1393 (* (- 15) ?x576) ?x895 ?x1396 (* (- 108) ?x631) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1031 ?x1043 (* 66 ?x719) (* (- 54) (* s r00)) (* (- 108) ?x755) ?x763 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1160 (* 108 ?x844) (* (- 108) ?x885) ?x914 (* 12 ?x971) ?x1402 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1406 (* 216 ?x1351) ?x1407)))
 (let (($x1409 (= ?x1408 0)))
 (let ((?x908 (* r00 r00 x00)))
 (let ((?x921 (* (- 36) ?x908)))
 (let ((?x837 (* 6 ?x836)))
 (let ((?x727 (* (- 2) ?x699)))
 (let ((?x947 (* (- 15) ?x622)))
 (let ((?x600 (* 3 ?x576)))
 (let ((?x582 (* (- 54) ?x553)))
 (let ((?x595 (* 24 ?x457)))
 (let ((?x1110 (+ ?x143 ?x1018 (* (- 24) (* r s)) (* 24 (* r s00)) ?x595 ?x582 ?x600 (* 54 (* r x)) (* 36 (* r x r00)) ?x895 ?x947 (* (- 6) ?x631) (* 54 (* x r00)) ?x1031 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x727 (* 12 ?x719) (* (- 24) (* s r00)) (* (- 6) ?x755) (* (- 2) (* s s00 r00)) ?x837 (* 2 (* r s s)) (* 6 ?x844) (* (- 4) (* r s00 s00)) ?x921 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1115 (= ?x1110 0)))
 (let ((?x679 (* 6 ?x678)))
 (let ((?x635 (* (- 4) ?x622)))
 (let ((?x577 (* 2 ?x576)))
 (let ((?x567 (* (- 18) ?x553)))
 (let ((?x572 (* 9 ?x457)))
 (let ((?x409 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x776 (+ ?x47 ?x409 (* (- 9) (* r s)) (* 9 (* r s00)) ?x572 ?x567 ?x577 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x596) ?x635 (* 18 (* x r00)) ?x679 (* (- 18) (* r x00)) (* 2 ?x719) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x783 (= ?x776 0)))
 (let ((?x500 (* r00 r00 r00)))
 (let ((?x501 (* 12 ?x500)))
 (let ((?x535 (* (- 6) ?x457)))
 (let ((?x532 (* (- 6) x00)))
 (let ((?x531 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x530 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x536 (+ ?x43 ?x530 ?x56 ?x44 ?x531 ?x532 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x535 ?x501)))
 (let (($x537 (= ?x536 0)))
 (let ((?x332 (* r00 r00)))
 (let ((?x333 (* 3 ?x332)))
 (let ((?x362 (* (- 1) s00)))
 (let (($x365 (= (+ s ?x362 (* (- 3) (* r r)) ?x333) 0)))
 (let (($x7648 (and $x365 $x537 $x783 $x1115 $x1409 (not (= ?x7642 0)))))
 (let ((?x5991 (+ 3 s ?x211)))
 (let ((?x3559 (+ x ?x311)))
 (let ((?x3493 (+ (* 2 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 3) (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* r00 ?x1567 ?x3559 ?x3559 ?x3559)) (* 9 (* r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* ?x1567 ?x1567 ?x3559 ?x3559 ?x3559)) (* 4 (* s00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 18) (* x00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 3 (* s00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* r00 x00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 3 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 2 (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* ?x1567 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x3559 ?x3559)) (* (- 4) (* s00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* ?x1567 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 3) (* ?x1567 ?x3559 ?x3559 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 9 (* ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991)) (* (- 6) (* r00 s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x3559 ?x3559)) (* 6 (* r00 r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* (- 9) (* s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 18 (* r00 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 9 (* ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 4 (* s00 s00 ?x1567 ?x3559 ?x3559)) (* (- 3) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* (- 9) (* r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* 6 (* r00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 3 (* s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 24) (* r00 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)))))
 (let (($x346 (not (= ?x3493 0))))
 (let ((?x3955 (* 108 ?x1377)))
 (let ((?x4648 (* (- 9) s)))
 (let ((?x2919 (* r00 r00 s00)))
 (let ((?x4586 (* (- 36) ?x2919)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4720 (* 51 ?x622)))
 (let ((?x1806 (* r00 r00 s)))
 (let ((?x6250 (* 36 ?x1806)))
 (let ((?x5524 (* 16 ?x1215)))
 (let ((?x5704 (* (- 108) ?x836)))
 (let ((?x1501 (* (- 432) ?x913)))
 (let ((?x5724 (* 108 ?x553)))
 (let ((?x5925 (+ (* 216 (* r00 s00 x00)) ?x5724 (* (- 54) (* r00 s00)) (* 15 ?x576) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 ?x885) ?x1501 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5704 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5524 (* (- 108) (* x s)) ?x6250 ?x4720 (* (- 108) (* r00 x)) ?x137 ?x4586 ?x4648 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3955)))
 (let (($x5931 (= ?x5925 0)))
 (let ((?x6189 (* 15 ?x622)))
 (let ((?x6175 (* 36 ?x908)))
 (let ((?x5799 (* (- 6) ?x836)))
 (let ((?x1632 (* 54 ?x553)))
 (let ((?x6203 (+ (* 24 (* s r)) ?x1632 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x576) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x5799 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x6250 ?x6175 ?x6189 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x4586 (* 54 (* x00 r)) ?x4648 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3182 (* 4 ?x622)))
 (let ((?x3444 (* 18 ?x553)))
 (let ((?x2337 (+ (* 9 (* s r)) ?x3444 (* (- 9) (* r00 s00)) (* (- 2) ?x576) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1806) ?x3182 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2919) (* 18 (* x00 r)) ?x530 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x3465 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x530 ?x531 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x532 ?x501)))
 (let (($x5662 (= (+ s00 ?x311 (* 3 (* r r)) (* (- 3) ?x332)) 0)))
 (let (($x5506 (and $x5662 (= ?x3465 0) (= ?x2337 0) (= ?x6203 0) $x5931 $x346)))
 (rewrite (= $x5506 $x7648))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x4800 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x5991 (+ 3 s ?x211)))
 (let ((?x311 (* (- 1) s)))
 (let ((?x3559 (+ x ?x311)))
 (let ((?x1567 (+ 1 r)))
 (let ((?x3493 (+ (* 2 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 3) (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* r00 ?x1567 ?x3559 ?x3559 ?x3559)) (* 9 (* r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* ?x1567 ?x1567 ?x3559 ?x3559 ?x3559)) (* 4 (* s00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 18) (* x00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 3 (* s00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* r00 x00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 3 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 2 (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* ?x1567 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x3559 ?x3559)) (* (- 4) (* s00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* ?x1567 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 3) (* ?x1567 ?x3559 ?x3559 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 9 (* ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991)) (* (- 6) (* r00 s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x3559 ?x3559)) (* 6 (* r00 r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* (- 9) (* s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 18 (* r00 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 9 (* ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 4 (* s00 s00 ?x1567 ?x3559 ?x3559)) (* (- 3) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* (- 9) (* r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* 6 (* r00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 3 (* s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 24) (* r00 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)))))
 (let (($x346 (not (= ?x3493 0))))
 (let ((?x1377 (* x00 x00)))
 (let ((?x3955 (* 108 ?x1377)))
 (let ((?x4648 (* (- 9) s)))
 (let ((?x2919 (* r00 r00 s00)))
 (let ((?x4586 (* (- 36) ?x2919)))
 (let ((?x137 (* 9 s00)))
 (let ((?x622 (* s00 s00)))
 (let ((?x4720 (* 51 ?x622)))
 (let ((?x1806 (* r00 r00 s)))
 (let ((?x6250 (* 36 ?x1806)))
 (let ((?x1215 (* s00 s00 s00)))
 (let ((?x5524 (* 16 ?x1215)))
 (let ((?x836 (* s00 x00)))
 (let ((?x5704 (* (- 108) ?x836)))
 (let ((?x913 (* r00 r00 r00 x00)))
 (let ((?x1501 (* (- 432) ?x913)))
 (let ((?x553 (* r00 x00)))
 (let ((?x5724 (* 108 ?x553)))
 (let ((?x5925 (+ (* 216 (* r00 s00 x00)) ?x5724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1501 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5704 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5524 (* (- 108) (* x s)) ?x6250 ?x4720 (* (- 108) (* r00 x)) ?x137 ?x4586 ?x4648 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3955)))
 (let (($x5931 (= ?x5925 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1018 (* (- 9) s00)))
 (let ((?x947 (* (- 15) ?x622)))
 (let ((?x908 (* r00 r00 x00)))
 (let ((?x921 (* (- 36) ?x908)))
 (let ((?x837 (* 6 ?x836)))
 (let ((?x576 (* s s)))
 (let ((?x600 (* 3 ?x576)))
 (let ((?x582 (* (- 54) ?x553)))
 (let ((?x5638 (+ (* (- 24) (* s r)) ?x582 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x600 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x837 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1806) ?x921 ?x947 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1018 (* 36 ?x2919) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x409 (* (- 3) s00)))
 (let ((?x635 (* (- 4) ?x622)))
 (let ((?x577 (* 2 ?x576)))
 (let ((?x567 (* (- 18) ?x553)))
 (let ((?x1675 (+ (* (- 9) (* s r)) ?x567 (* 9 (* r00 s00)) ?x577 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1806) ?x635 (* 18 (* r00 x)) ?x409 (* 6 ?x2919) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1016 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x409 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5662 (= (+ s00 ?x311 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x5662 (= ?x1016 0) (= ?x1675 0) (= ?x5638 0) $x5931 $x346)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1968 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x5991 (+ 3 s ?x211)))
 (let ((?x311 (* (- 1) s)))
 (let ((?x3559 (+ x ?x311)))
 (let ((?x1567 (+ 1 r)))
 (let ((?x3493 (+ (* 2 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 3) (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* r00 ?x1567 ?x3559 ?x3559 ?x3559)) (* 9 (* r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* ?x1567 ?x1567 ?x3559 ?x3559 ?x3559)) (* 4 (* s00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 18) (* x00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 3 (* s00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* r00 x00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 3 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 2 (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* ?x1567 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x3559 ?x3559)) (* (- 4) (* s00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* ?x1567 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 3) (* ?x1567 ?x3559 ?x3559 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 9 (* ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991)) (* (- 6) (* r00 s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x3559 ?x3559)) (* 6 (* r00 r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* (- 9) (* s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 18 (* r00 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 9 (* ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 4 (* s00 s00 ?x1567 ?x3559 ?x3559)) (* (- 3) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* (- 9) (* r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* 6 (* r00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 3 (* s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 24) (* r00 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)))))
 (let (($x346 (not (= ?x3493 0))))
 (let ((?x1377 (* x00 x00)))
 (let ((?x3955 (* 108 ?x1377)))
 (let ((?x4648 (* (- 9) s)))
 (let ((?x2919 (* r00 r00 s00)))
 (let ((?x4586 (* (- 36) ?x2919)))
 (let ((?x137 (* 9 s00)))
 (let ((?x622 (* s00 s00)))
 (let ((?x4720 (* 51 ?x622)))
 (let ((?x1806 (* r00 r00 s)))
 (let ((?x6250 (* 36 ?x1806)))
 (let ((?x1215 (* s00 s00 s00)))
 (let ((?x5524 (* 16 ?x1215)))
 (let ((?x836 (* s00 x00)))
 (let ((?x5704 (* (- 108) ?x836)))
 (let ((?x913 (* r00 r00 r00 x00)))
 (let ((?x1501 (* (- 432) ?x913)))
 (let ((?x553 (* r00 x00)))
 (let ((?x5724 (* 108 ?x553)))
 (let ((?x5925 (+ (* 216 (* r00 s00 x00)) ?x5724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1501 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5704 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5524 (* (- 108) (* x s)) ?x6250 ?x4720 (* (- 108) (* r00 x)) ?x137 ?x4586 ?x4648 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3955)))
 (let (($x5931 (= ?x5925 0)))
 (let ((?x6189 (* 15 ?x622)))
 (let ((?x908 (* r00 r00 x00)))
 (let ((?x6175 (* 36 ?x908)))
 (let ((?x5799 (* (- 6) ?x836)))
 (let ((?x1632 (* 54 ?x553)))
 (let ((?x6203 (+ (* 24 (* s r)) ?x1632 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x5799 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x6250 ?x6175 ?x6189 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x4586 (* 54 (* x00 r)) ?x4648 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x530 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3182 (* 4 ?x622)))
 (let ((?x3444 (* 18 ?x553)))
 (let ((?x2337 (+ (* 9 (* s r)) ?x3444 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1806) ?x3182 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2919) (* 18 (* x00 r)) ?x530 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x500 (* r00 r00 r00)))
 (let ((?x501 (* 12 ?x500)))
 (let ((?x532 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x531 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3465 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x530 ?x531 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x532 ?x501)))
 (let (($x5662 (= (+ s00 ?x311 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x5506 (and $x5662 (= ?x3465 0) (= ?x2337 0) (= ?x6203 0) $x5931 $x346)))
 (let ((?x143 (* 9 s)))
 (let ((?x1018 (* (- 9) s00)))
 (let ((?x947 (* (- 15) ?x622)))
 (let ((?x921 (* (- 36) ?x908)))
 (let ((?x837 (* 6 ?x836)))
 (let ((?x576 (* s s)))
 (let ((?x600 (* 3 ?x576)))
 (let ((?x582 (* (- 54) ?x553)))
 (let ((?x5638 (+ (* (- 24) (* s r)) ?x582 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x600 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x837 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1806) ?x921 ?x947 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1018 (* 36 ?x2919) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x409 (* (- 3) s00)))
 (let ((?x635 (* (- 4) ?x622)))
 (let ((?x577 (* 2 ?x576)))
 (let ((?x567 (* (- 18) ?x553)))
 (let ((?x1675 (+ (* (- 9) (* s r)) ?x567 (* 9 (* r00 s00)) ?x577 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1806) ?x635 (* 18 (* r00 x)) ?x409 (* 6 ?x2919) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1016 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x409 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x500))))
 (let (($x943 (and $x5662 (= ?x1016 0) (= ?x1675 0) (= ?x5638 0) $x5931 $x346)))
 (rewrite (= $x943 $x5506)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x308 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x217 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x222 (+ (- ?x219 (* 18 ?x217 r00 ?x213 ?x213 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x226 (+ (- ?x222 (* 18 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 4 ?x217 ?x217 ?x212 s00 s00 ?x213))))
 (let ((?x230 (- (- ?x226 (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 9 ?x217 ?x217 ?x217 ?x212 s00 ?x213))))
 (let ((?x235 (- (+ ?x230 (* 3 ?x217 s00 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 x00))))
 (let ((?x242 (+ (- ?x235 (* 9 ?x217 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x217 ?x217 r00 ?x212 ?x212 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 18 ?x217 ?x217 ?x217 ?x212 ?x213 x00) (* 18 ?x217 r00 ?x213 ?x213 x00))))
 (let ((?x248 (- (- ?x242 (* 18 ?x217 ?x217 ?x217 ?x212 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x250 (- (- ?x248 (* 9 ?x217 r00 s00 ?x213 ?x213)) (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let ((?x254 (- (+ ?x250 (* 6 ?x217 ?x217 ?x217 r00 ?x212 s00 ?x213)) (* 6 ?x217 ?x217 r00 r00 ?x212 s00 ?x213))))
 (let ((?x258 (- (+ ?x254 (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x217 ?x217 ?x212 ?x212 s00 ?x213))))
 (let ((?x263 (- (+ ?x258 (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 2 ?x217 ?x212 s00 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x263 (* 2 ?x217 ?x217 ?x212 ?x212 ?x212 ?x213)) (* 18 ?x217 ?x217 r00 ?x212 ?x213 x00))))
 (let ((?x271 (+ (- ?x266 (* 3 ?x217 ?x212 ?x213 ?x213)) (* 18 ?x217 ?x217 ?x213 ?x213 x00) (* 9 ?x217 ?x217 ?x212 ?x213 ?x213))))
 (let ((?x276 (- (- ?x271 (* 2 ?x217 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x217 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x279 (+ (- ?x276 (* 6 ?x217 r00 r00 s00 ?x213 ?x213)) (* 6 ?x217 r00 r00 ?x212 ?x213 ?x213))))
 (let ((?x283 (+ (- ?x279 (* 6 ?x217 ?x217 ?x217 r00 ?x212 ?x212 ?x213)) (* 6 ?x217 ?x217 r00 s00 ?x213 ?x213))))
 (let ((?x289 (+ (- ?x283 (* 9 ?x217 ?x217 s00 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x217 ?x217 ?x217 ?x212 ?x212 ?x213) (* 4 ?x217 s00 s00 ?x213 ?x213))))
 (let ((?x293 (- (- ?x289 (* 3 ?x217 ?x217 ?x212 ?x212 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x299 (+ ?x293 (* 9 ?x217 r00 ?x212 ?x213 ?x213) (* 6 ?x217 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x217 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x217 ?x217 r00 r00 ?x212 ?x212 ?x213) (* 3 ?x217 ?x217 ?x212 s00 ?x213))))
 (let ((?x303 (- (- ?x299 (* 9 ?x217 ?x217 r00 ?x212 s00 ?x213)) (* 24 ?x217 ?x217 r00 ?x212 ?x213 ?x213))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x303 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1783 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x5991 (+ 3 s ?x211)))
 (let ((?x311 (* (- 1) s)))
 (let ((?x3559 (+ x ?x311)))
 (let ((?x1567 (+ 1 r)))
 (let ((?x3493 (+ (* 2 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 3) (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* r00 ?x1567 ?x3559 ?x3559 ?x3559)) (* 9 (* r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 18) (* ?x1567 ?x1567 ?x3559 ?x3559 ?x3559)) (* 4 (* s00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 18) (* x00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 3 (* s00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* r00 x00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 9) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 3 (* ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 2 (* s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x3559 ?x3559)) (* (- 18) (* ?x1567 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x3559 ?x3559)) (* (- 4) (* s00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* 18 (* ?x1567 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 r00 s00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 2) (* s00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991 ?x5991)) (* 18 (* r00 x00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 3) (* ?x1567 ?x3559 ?x3559 ?x5991)) (* 18 (* x00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 9 (* ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 2) (* ?x1567 ?x3559 ?x3559 ?x5991 ?x5991)) (* (- 6) (* r00 s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* (- 6) (* r00 r00 s00 ?x1567 ?x3559 ?x3559)) (* 6 (* r00 r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* (- 6) (* r00 ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 6 (* r00 s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* (- 9) (* s00 ?x1567 ?x1567 ?x3559 ?x3559)) (* 18 (* r00 ?x3559 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 9 (* ?x1567 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 4 (* s00 s00 ?x1567 ?x3559 ?x3559)) (* (- 3) (* ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* (- 9) (* r00 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* r00 ?x1567 ?x3559 ?x3559 ?x5991)) (* 6 (* r00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991 ?x5991)) (* 9 (* s00 ?x1567 ?x3559 ?x3559 ?x5991 ?x5991 ?x5991)) (* 6 (* r00 r00 ?x1567 ?x1567 ?x3559 ?x5991 ?x5991)) (* 3 (* s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 9) (* r00 s00 ?x1567 ?x1567 ?x3559 ?x5991)) (* (- 24) (* r00 ?x1567 ?x1567 ?x3559 ?x3559 ?x5991)))))
 (let (($x346 (not (= ?x3493 0))))
 (let ((?x1377 (* x00 x00)))
 (let ((?x3955 (* 108 ?x1377)))
 (let ((?x4648 (* (- 9) s)))
 (let ((?x2919 (* r00 r00 s00)))
 (let ((?x4586 (* (- 36) ?x2919)))
 (let ((?x137 (* 9 s00)))
 (let ((?x622 (* s00 s00)))
 (let ((?x4720 (* 51 ?x622)))
 (let ((?x1806 (* r00 r00 s)))
 (let ((?x6250 (* 36 ?x1806)))
 (let ((?x1215 (* s00 s00 s00)))
 (let ((?x5524 (* 16 ?x1215)))
 (let ((?x836 (* s00 x00)))
 (let ((?x5704 (* (- 108) ?x836)))
 (let ((?x913 (* r00 r00 r00 x00)))
 (let ((?x1501 (* (- 432) ?x913)))
 (let ((?x553 (* r00 x00)))
 (let ((?x5724 (* 108 ?x553)))
 (let ((?x5925 (+ (* 216 (* r00 s00 x00)) ?x5724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1501 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x5704 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5524 (* (- 108) (* x s)) ?x6250 ?x4720 (* (- 108) (* r00 x)) ?x137 ?x4586 ?x4648 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3955)))
 (let (($x5931 (= ?x5925 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1018 (* (- 9) s00)))
 (let ((?x947 (* (- 15) ?x622)))
 (let ((?x908 (* r00 r00 x00)))
 (let ((?x921 (* (- 36) ?x908)))
 (let ((?x837 (* 6 ?x836)))
 (let ((?x576 (* s s)))
 (let ((?x600 (* 3 ?x576)))
 (let ((?x582 (* (- 54) ?x553)))
 (let ((?x5638 (+ (* (- 24) (* s r)) ?x582 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x600 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x837 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1806) ?x921 ?x947 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1018 (* 36 ?x2919) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x409 (* (- 3) s00)))
 (let ((?x635 (* (- 4) ?x622)))
 (let ((?x577 (* 2 ?x576)))
 (let ((?x567 (* (- 18) ?x553)))
 (let ((?x1675 (+ (* (- 9) (* s r)) ?x567 (* 9 (* r00 s00)) ?x577 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1806) ?x635 (* 18 (* r00 x)) ?x409 (* 6 ?x2919) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1016 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x409 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x5662 (= (+ s00 ?x311 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x943 (and $x5662 (= ?x1016 0) (= ?x1675 0) (= ?x5638 0) $x5931 $x346)))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x217 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x222 (+ (- ?x219 (* 18 ?x217 r00 ?x213 ?x213 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x226 (+ (- ?x222 (* 18 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 4 ?x217 ?x217 ?x212 s00 s00 ?x213))))
 (let ((?x230 (- (- ?x226 (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 x00)) (* 9 ?x217 ?x217 ?x217 ?x212 s00 ?x213))))
 (let ((?x235 (- (+ ?x230 (* 3 ?x217 s00 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 x00))))
 (let ((?x242 (+ (- ?x235 (* 9 ?x217 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x217 ?x217 r00 ?x212 ?x212 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 18 ?x217 ?x217 ?x217 ?x212 ?x213 x00) (* 18 ?x217 r00 ?x213 ?x213 x00))))
 (let ((?x248 (- (- ?x242 (* 18 ?x217 ?x217 ?x217 ?x212 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x250 (- (- ?x248 (* 9 ?x217 r00 s00 ?x213 ?x213)) (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let ((?x254 (- (+ ?x250 (* 6 ?x217 ?x217 ?x217 r00 ?x212 s00 ?x213)) (* 6 ?x217 ?x217 r00 r00 ?x212 s00 ?x213))))
 (let ((?x258 (- (+ ?x254 (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 2 ?x217 ?x217 ?x212 ?x212 s00 ?x213))))
 (let ((?x263 (- (+ ?x258 (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213)) (* 2 ?x217 ?x212 s00 ?x213 ?x213))))
 (let ((?x266 (+ (- ?x263 (* 2 ?x217 ?x217 ?x212 ?x212 ?x212 ?x213)) (* 18 ?x217 ?x217 r00 ?x212 ?x213 x00))))
 (let ((?x271 (+ (- ?x266 (* 3 ?x217 ?x212 ?x213 ?x213)) (* 18 ?x217 ?x217 ?x213 ?x213 x00) (* 9 ?x217 ?x217 ?x212 ?x213 ?x213))))
 (let ((?x276 (- (- ?x271 (* 2 ?x217 ?x212 ?x212 ?x213 ?x213)) (* 6 ?x217 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x279 (+ (- ?x276 (* 6 ?x217 r00 r00 s00 ?x213 ?x213)) (* 6 ?x217 r00 r00 ?x212 ?x213 ?x213))))
 (let ((?x283 (+ (- ?x279 (* 6 ?x217 ?x217 ?x217 r00 ?x212 ?x212 ?x213)) (* 6 ?x217 ?x217 r00 s00 ?x213 ?x213))))
 (let ((?x289 (+ (- ?x283 (* 9 ?x217 ?x217 s00 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x217 ?x217 ?x217 ?x212 ?x212 ?x213) (* 4 ?x217 s00 s00 ?x213 ?x213))))
 (let ((?x293 (- (- ?x289 (* 3 ?x217 ?x217 ?x212 ?x212 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213))))
 (let ((?x299 (+ ?x293 (* 9 ?x217 r00 ?x212 ?x213 ?x213) (* 6 ?x217 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213) (* 9 ?x217 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 6 ?x217 ?x217 r00 r00 ?x212 ?x212 ?x213) (* 3 ?x217 ?x217 ?x212 s00 ?x213))))
 (let ((?x303 (- (- ?x299 (* 9 ?x217 ?x217 r00 ?x212 s00 ?x213)) (* 24 ?x217 ?x217 r00 ?x212 ?x213 ?x213))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x307 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x303 0))))))
 (rewrite (= $x307 $x943))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x309 (asserted $x308)))
 (let ((@x3057 (mp (mp @x309 (quant-intro (proof-bind ?x1783) (= $x308 $x4800)) $x4800) (rewrite (= $x4800 $x4800)) $x4800)))
 (let ((@x7059 (mp (mp @x3057 (quant-intro (proof-bind ?x1968) (= $x4800 $x4599)) $x4599) (quant-intro (proof-bind ?x1909) (= $x4599 $x1907)) $x1907)))
 (let ((@x1356 (mp (mp~ @x7059 (sk (~ $x1907 $x3092)) $x3092) (rewrite (= $x3092 $x904)) $x904)))
 (let ((@x1363 (and-elim @x1356 $x1347)))
 (let ((@x6633 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1347) $x4985)) @x1363 $x4985)))
 (let (($x3108 (>= ?x1344 0)))
 (let ((@x3600 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1347) $x3108)) @x1363 $x3108)))
 (let (($x3119 (<= ?x597 0)))
 (let ((@x5628 (and-elim @x1356 $x4529)))
 (let ((@x6660 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4529) $x3119)) @x5628 $x3119)))
 (let (($x3060 (>= ?x597 0)))
 (let ((@x2089 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4529) $x3060)) @x5628 $x3060)))
 (let (($x2046 (<= ?x3013 0)))
 (let ((@x5625 (and-elim @x1356 $x3080)))
 (let ((@x5973 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3080) $x2046)) @x5625 $x2046)))
 (let (($x6341 (>= ?x3013 0)))
 (let ((@x3823 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3080) $x6341)) @x5625 $x6341)))
 (let (($x6342 (<= ?x5616 0)))
 (let ((@x5620 (and-elim @x1356 $x5611)))
 (let ((@x1735 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5611) $x6342)) @x5620 $x6342)))
 (let (($x1765 (>= ?x5616 0)))
 (let ((@x6669 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5611) $x1765)) @x5620 $x1765)))
 (let (($x1165 (not (<= ?x3924 0))))
 (let (($x5679 (>= ?x3924 0)))
 (let ((@x7425 ((_ th-lemma arith) (hypothesis (not $x5679)) @x3600 @x6633 @x6669 @x1735 @x3823 @x5973 @x6669 @x1735 @x3823 @x5973 @x2089 @x6660 @x3600 @x6633 false)))
 (let ((@x1822 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3925 $x1165 (not $x5679))) (and-elim @x1356 $x1355) (or $x1165 (not $x5679)))))
 ((_ th-lemma arith) (unit-resolution @x1822 (lemma @x7425 $x5679) $x1165) @x3600 @x6633 @x6669 @x1735 @x3823 @x5973 @x6669 @x1735 @x3823 @x5973 @x2089 @x6660 @x3600 @x6633 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        41
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1870
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 320
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.11
 :memory                    3.99
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                4197079
 :num-checks                1
 :propagations              12
 :rlimit-count              65951
 :time                      0.06
 :total-time                0.09)
