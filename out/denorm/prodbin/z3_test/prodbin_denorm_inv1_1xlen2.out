unsat
((set-logic NRA)
(proof
(let (($x249 (exists ((x Real) (y Real) )(! (let ((?x237 (* y x)))
 (let ((?x238 (* (- 1.0) ?x237)))
 (let ((?x232 (* (/ 1.0 2.0) y)))
 (let ((?x236 (+ (- (/ 1.0 2.0)) ?x232)))
 (let ((?x221 (* ?x236 x)))
 (let ((?x243 (* 2.0 ?x221)))
 (let ((?x245 (+ ?x243 ?x238 x)))
 (let ((?x67 (* x00 y00)))
 (let ((?x217 (+ ?x238 ?x67 z00 x)))
 (let ((?x202 (* ?x236 ?x217 ?x217 x)))
 (let ((?x203 (* 2.0 ?x202)))
 (let ((?x198 (* ?x236 ?x236 ?x217 x)))
 (let ((?x199 (* (- 2.0) ?x198)))
 (let ((?x225 (+ ?x199 ?x203)))
 (let ((?x246 (* ?x225 ?x245)))
 (let (($x247 (= ?x246 0.0)))
 (not $x247))))))))))))))))) :qid k!28))
 ))
 (let (($x892 (exists ((x Real) (y Real) )(! false :qid k!28))
 ))
 (let ((?x893 (lambda ((x Real) (y Real) )(let ((?x237 (* y x)))
 (let ((?x238 (* (- 1.0) ?x237)))
 (let ((?x232 (* (/ 1.0 2.0) y)))
 (let ((?x236 (+ (- (/ 1.0 2.0)) ?x232)))
 (let ((?x221 (* ?x236 x)))
 (let ((?x243 (* 2.0 ?x221)))
 (let ((?x245 (+ ?x243 ?x238 x)))
 (let ((?x67 (* x00 y00)))
 (let ((?x217 (+ ?x238 ?x67 z00 x)))
 (let ((?x202 (* ?x236 ?x217 ?x217 x)))
 (let ((?x203 (* 2.0 ?x202)))
 (let ((?x198 (* ?x236 ?x236 ?x217 x)))
 (let ((?x199 (* (- 2.0) ?x198)))
 (let ((?x225 (+ ?x199 ?x203)))
 (let ((?x246 (* ?x225 ?x245)))
 (let (($x247 (= ?x246 0.0)))
 (let (($x248 (not $x247)))
 (let ((?x759 (* (- 1.0) (* x x00 x00 y00 y00))))
 (let ((?x723 (* x x00 y00 z00)))
 (let ((?x823 (* (- 2.0) ?x723)))
 (let ((?x714 (* (- 1.0) (* x z00 z00))))
 (let ((?x691 (* x x x00 y00)))
 (let ((?x820 (* (- 2.0) ?x691)))
 (let ((?x679 (* x x z00)))
 (let ((?x819 (* (- 2.0) ?x679)))
 (let ((?x620 (* y y y x x x)))
 (let ((?x586 (* y y x x x00 y00)))
 (let ((?x811 (* (- 2.0) ?x586)))
 (let ((?x578 (* y x x00 x00 y00 y00)))
 (let ((?x568 (* y y x x z00)))
 (let ((?x806 (* (- 2.0) ?x568)))
 (let ((?x560 (* y x x00 y00 z00)))
 (let ((?x663 (* 2.0 ?x560)))
 (let ((?x556 (* y x z00 z00)))
 (let ((?x550 (* y y x x x)))
 (let ((?x828 (* (- 3.0) ?x550)))
 (let ((?x546 (* y x x x00 y00)))
 (let ((?x826 (* 4.0 ?x546)))
 (let ((?x542 (* y x x z00)))
 (let ((?x825 (* 4.0 ?x542)))
 (let ((?x538 (* y x x x)))
 (let ((?x822 (* 3.0 ?x538)))
 (let ((?x485 (* x x x)))
 (let ((?x673 (* (- 1.0) ?x485)))
 (let ((?x377 (* y y y x x)))
 (let ((?x465 (* (/ 1.0 2.0) ?x377)))
 (let ((?x374 (* y y x x00 y00)))
 (let ((?x462 (* (- (/ 1.0 2.0)) ?x374)))
 (let ((?x352 (* y x x)))
 (let ((?x474 (* (/ 3.0 2.0) ?x352)))
 (let ((?x334 (* y y x x)))
 (let ((?x472 (* (- (/ 3.0 2.0)) ?x334)))
 (let ((?x331 (* x z00)))
 (let ((?x454 (* (- (/ 1.0 2.0)) ?x331)))
 (let ((?x325 (* y x x00 y00)))
 (let ((?x310 (* x x00 y00)))
 (let ((?x449 (* (- (/ 1.0 2.0)) ?x310)))
 (let ((?x274 (* y y x z00)))
 (let ((?x446 (* (- (/ 1.0 2.0)) ?x274)))
 (let ((?x258 (* x x)))
 (let ((?x259 (* (- (/ 1.0 2.0)) ?x258)))
 (let ((?x160 (* y x z00)))
 (let ((?x839 (+ ?x160 ?x259 ?x446 ?x449 ?x325 ?x454 ?x472 ?x474 ?x462 ?x465 ?x673 ?x822 ?x825 ?x826 ?x828 ?x556 ?x663 ?x806 ?x578 ?x811 ?x620 ?x819 ?x820 ?x714 ?x823 ?x759)))
 (let ((?x878 (* ?x839 0.0)))
 (let ((?x870 (+ (* (- 1.0) x) ?x237)))
 (let ((?x860 (+ (* 2.0 (* (- (/ 1.0 2.0)) x)) (* 2.0 (* (/ 1.0 2.0) ?x237)))))
 (let ((?x849 (* (/ 1.0 2.0) ?x237)))
 (let ((?x844 (* (- (/ 1.0 2.0)) x)))
 (let ((?x852 (+ ?x844 ?x849)))
 (let ((?x846 (+ ?x844 (* ?x232 x))))
 (let ((@x851 (trans (rewrite (= ?x221 ?x846)) (rewrite (= ?x846 ?x852)) (= ?x221 ?x852))))
 (let ((@x864 (trans (monotonicity @x851 (= ?x243 (* 2.0 ?x852))) (rewrite (= (* 2.0 ?x852) ?x860)) (= ?x243 ?x860))))
 (let ((@x872 (monotonicity (trans @x864 (rewrite (= ?x860 ?x870)) (= ?x243 ?x870)) (= ?x245 (+ ?x870 ?x238 x)))))
 (let ((?x829 (+ ?x673 ?x822 ?x825 ?x826 ?x828 ?x556 ?x663 ?x806 ?x578 ?x811 ?x620 ?x819 ?x820 ?x714 ?x823 ?x759)))
 (let ((?x475 (+ ?x160 ?x259 ?x446 ?x449 ?x325 ?x454 ?x472 ?x474 ?x462 ?x465)))
 (let ((?x836 (+ ?x475 ?x829)))
 (let ((?x623 (* (/ 1.0 2.0) ?x620)))
 (let ((?x667 (* 2.0 ?x623)))
 (let ((?x631 (* (- 1.0) ?x586)))
 (let ((?x666 (* 2.0 ?x631)))
 (let ((?x579 (* (/ 1.0 2.0) ?x578)))
 (let ((?x665 (* 2.0 ?x579)))
 (let ((?x630 (* (- 1.0) ?x568)))
 (let ((?x664 (* 2.0 ?x630)))
 (let ((?x557 (* (/ 1.0 2.0) ?x556)))
 (let ((?x662 (* 2.0 ?x557)))
 (let ((?x629 (* (- 1.0) ?x550)))
 (let ((?x661 (* 2.0 ?x629)))
 (let ((?x660 (* 2.0 ?x546)))
 (let ((?x659 (* 2.0 ?x542)))
 (let ((?x539 (* (/ 1.0 2.0) ?x538)))
 (let ((?x658 (* 2.0 ?x539)))
 (let ((?x531 (* (- (/ 1.0 2.0)) (* ?x238 ?x238 x))))
 (let ((?x657 (* 2.0 ?x531)))
 (let ((?x528 (* (- (/ 1.0 2.0)) (* ?x67 ?x238 x))))
 (let ((?x656 (* 2.0 ?x528)))
 (let ((?x525 (* (- (/ 1.0 2.0)) (* z00 ?x238 x))))
 (let ((?x655 (* 2.0 ?x525)))
 (let ((?x522 (* (- (/ 1.0 2.0)) (* x ?x238 x))))
 (let ((?x654 (* 2.0 ?x522)))
 (let ((?x519 (* (- (/ 1.0 2.0)) (* ?x238 ?x67 x))))
 (let ((?x653 (* 2.0 ?x519)))
 (let ((?x516 (* (- (/ 1.0 2.0)) (* ?x67 ?x67 x))))
 (let ((?x652 (* 2.0 ?x516)))
 (let ((?x513 (* (- (/ 1.0 2.0)) (* z00 ?x67 x))))
 (let ((?x651 (* 2.0 ?x513)))
 (let ((?x510 (* (- (/ 1.0 2.0)) (* x ?x67 x))))
 (let ((?x650 (* 2.0 ?x510)))
 (let ((?x507 (* (- (/ 1.0 2.0)) (* ?x238 z00 x))))
 (let ((?x649 (* 2.0 ?x507)))
 (let ((?x504 (* (- (/ 1.0 2.0)) (* ?x67 z00 x))))
 (let ((?x648 (* 2.0 ?x504)))
 (let ((?x500 (* z00 z00 x)))
 (let ((?x501 (* (- (/ 1.0 2.0)) ?x500)))
 (let ((?x647 (* 2.0 ?x501)))
 (let ((?x497 (* x z00 x)))
 (let ((?x498 (* (- (/ 1.0 2.0)) ?x497)))
 (let ((?x646 (* 2.0 ?x498)))
 (let ((?x495 (* (- (/ 1.0 2.0)) (* ?x238 x x))))
 (let ((?x645 (* 2.0 ?x495)))
 (let ((?x492 (* (- (/ 1.0 2.0)) (* ?x67 x x))))
 (let ((?x644 (* 2.0 ?x492)))
 (let ((?x488 (* z00 x x)))
 (let ((?x489 (* (- (/ 1.0 2.0)) ?x488)))
 (let ((?x643 (* 2.0 ?x489)))
 (let ((?x486 (* (- (/ 1.0 2.0)) ?x485)))
 (let ((?x642 (* 2.0 ?x486)))
 (let ((?x668 (+ ?x642 ?x643 ?x644 ?x645 ?x646 ?x647 ?x648 ?x649 ?x650 ?x651 ?x652 ?x653 ?x654 ?x655 ?x656 ?x657 ?x658 ?x659 ?x660 ?x661 ?x662 ?x663 ?x664 ?x665 ?x666 ?x667)))
 (let ((?x801 (* (- 2.0) ?x550)))
 (let ((?x726 (* (- 1.0) ?x723)))
 (let ((?x694 (* (- 1.0) ?x691)))
 (let ((?x682 (* (- 1.0) ?x679)))
 (let ((?x816 (+ ?x673 ?x682 ?x694 ?x538 ?x682 ?x714 ?x726 ?x542 ?x694 ?x726 ?x759 ?x546 ?x538 ?x542 ?x546 ?x629 ?x538 ?x659 ?x660 ?x801 ?x556 ?x663 ?x806 ?x578 ?x811 ?x620)))
 (let ((@x798 (trans (rewrite (= ?x657 (* (- 1.0) (* y x y x x)))) (rewrite (= (* (- 1.0) (* y x y x x)) ?x629)) (= ?x657 ?x629))))
 (let ((@x789 (trans (rewrite (= ?x656 (* x00 y00 y x x))) (rewrite (= (* x00 y00 y x x) ?x546)) (= ?x656 ?x546))))
 (let ((@x782 (trans (rewrite (= ?x655 (* z00 y x x))) (rewrite (= (* z00 y x x) ?x542)) (= ?x655 ?x542))))
 (let ((@x775 (trans (rewrite (= ?x654 (* x y x x))) (rewrite (= (* x y x x) ?x538)) (= ?x654 ?x538))))
 (let ((@x768 (trans (rewrite (= ?x653 (* y x x00 y00 x))) (rewrite (= (* y x x00 y00 x) ?x546)) (= ?x653 ?x546))))
 (let ((@x758 (trans (rewrite (= ?x652 (* (- 1.0) (* x00 y00 x00 y00 x)))) (rewrite (= (* (- 1.0) (* x00 y00 x00 y00 x)) ?x759)) (= ?x652 ?x759))))
 (let ((@x749 (trans (rewrite (= ?x651 (* (- 1.0) (* z00 x00 y00 x)))) (rewrite (= (* (- 1.0) (* z00 x00 y00 x)) ?x726)) (= ?x651 ?x726))))
 (let ((@x741 (trans (rewrite (= ?x650 (* (- 1.0) (* x x00 y00 x)))) (rewrite (= (* (- 1.0) (* x x00 y00 x)) ?x694)) (= ?x650 ?x694))))
 (let ((@x735 (trans (rewrite (= ?x649 (* y x z00 x))) (rewrite (= (* y x z00 x) ?x542)) (= ?x649 ?x542))))
 (let ((@x725 (trans (rewrite (= ?x648 (* (- 1.0) (* x00 y00 z00 x)))) (rewrite (= (* (- 1.0) (* x00 y00 z00 x)) ?x726)) (= ?x648 ?x726))))
 (let ((@x718 (trans (rewrite (= ?x647 (* (- 1.0) ?x500))) (rewrite (= (* (- 1.0) ?x500) ?x714)) (= ?x647 ?x714))))
 (let ((@x707 (trans (rewrite (= ?x646 (* (- 1.0) ?x497))) (rewrite (= (* (- 1.0) ?x497) ?x682)) (= ?x646 ?x682))))
 (let ((@x693 (trans (rewrite (= ?x644 (* (- 1.0) (* x00 y00 x x)))) (rewrite (= (* (- 1.0) (* x00 y00 x x)) ?x694)) (= ?x644 ?x694))))
 (let ((@x686 (trans (rewrite (= ?x643 (* (- 1.0) ?x488))) (rewrite (= (* (- 1.0) ?x488) ?x682)) (= ?x643 ?x682))))
 (let ((@x818 (monotonicity (rewrite (= ?x642 ?x673)) @x686 @x693 (rewrite (= ?x645 ?x538)) @x707 @x718 @x725 @x735 @x741 @x749 @x758 @x768 @x775 @x782 @x789 @x798 (rewrite (= ?x658 ?x538)) (rewrite (= ?x661 ?x801)) (rewrite (= ?x662 ?x556)) (rewrite (= ?x664 ?x806)) (rewrite (= ?x665 ?x578)) (rewrite (= ?x666 ?x811)) (rewrite (= ?x667 ?x620)) (= ?x668 ?x816))))
 (let ((?x632 (+ ?x486 ?x489 ?x492 ?x495 ?x498 ?x501 ?x504 ?x507 ?x510 ?x513 ?x516 ?x519 ?x522 ?x525 ?x528 ?x531 ?x539 ?x542 ?x546 ?x629 ?x557 ?x560 ?x630 ?x579 ?x631 ?x623)))
 (let ((?x639 (* 2.0 ?x632)))
 (let ((?x532 (* ?x232 ?x238 ?x238 x)))
 (let ((?x529 (* ?x232 ?x67 ?x238 x)))
 (let ((?x526 (* ?x232 z00 ?x238 x)))
 (let ((?x523 (* ?x232 x ?x238 x)))
 (let ((?x520 (* ?x232 ?x238 ?x67 x)))
 (let ((?x517 (* ?x232 ?x67 ?x67 x)))
 (let ((?x514 (* ?x232 z00 ?x67 x)))
 (let ((?x511 (* ?x232 x ?x67 x)))
 (let ((?x508 (* ?x232 ?x238 z00 x)))
 (let ((?x505 (* ?x232 ?x67 z00 x)))
 (let ((?x502 (* ?x232 z00 z00 x)))
 (let ((?x499 (* ?x232 x z00 x)))
 (let ((?x496 (* ?x232 ?x238 x x)))
 (let ((?x493 (* ?x232 ?x67 x x)))
 (let ((?x490 (* ?x232 z00 x x)))
 (let ((?x487 (* ?x232 x x x)))
 (let ((?x533 (+ ?x486 ?x487 ?x489 ?x490 ?x492 ?x493 ?x495 ?x496 ?x498 ?x499 ?x501 ?x502 ?x504 ?x505 ?x507 ?x508 ?x510 ?x511 ?x513 ?x514 ?x516 ?x517 ?x519 ?x520 ?x522 ?x523 ?x525 ?x526 ?x528 ?x529 ?x531 ?x532)))
 (let ((?x589 (* (- (/ 1.0 2.0)) ?x586)))
 (let ((?x571 (* (- (/ 1.0 2.0)) ?x568)))
 (let ((?x551 (* (- (/ 1.0 2.0)) ?x550)))
 (let ((?x561 (* (/ 1.0 2.0) ?x560)))
 (let ((?x547 (* (/ 1.0 2.0) ?x546)))
 (let ((?x543 (* (/ 1.0 2.0) ?x542)))
 (let ((?x625 (+ ?x486 ?x539 ?x489 ?x543 ?x492 ?x547 ?x495 ?x551 ?x498 ?x543 ?x501 ?x557 ?x504 ?x561 ?x507 ?x571 ?x510 ?x547 ?x513 ?x561 ?x516 ?x579 ?x519 ?x589 ?x522 ?x551 ?x525 ?x571 ?x528 ?x589 ?x531 ?x623)))
 (let ((@x622 (trans (rewrite (= ?x532 (* (/ 1.0 2.0) (* y y x y x x)))) (rewrite (= (* (/ 1.0 2.0) (* y y x y x x)) ?x623)) (= ?x532 ?x623))))
 (let ((@x613 (trans (rewrite (= ?x529 (* (- (/ 1.0 2.0)) (* y x00 y00 y x x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y x00 y00 y x x)) ?x589)) (= ?x529 ?x589))))
 (let ((@x605 (trans (rewrite (= ?x526 (* (- (/ 1.0 2.0)) (* y z00 y x x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y z00 y x x)) ?x571)) (= ?x526 ?x571))))
 (let ((@x597 (trans (rewrite (= ?x523 (* (- (/ 1.0 2.0)) (* y x y x x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y x y x x)) ?x551)) (= ?x523 ?x551))))
 (let ((@x588 (trans (rewrite (= ?x520 (* (- (/ 1.0 2.0)) (* y y x x00 y00 x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y y x x00 y00 x)) ?x589)) (= ?x520 ?x589))))
 (let ((@x570 (trans (rewrite (= ?x508 (* (- (/ 1.0 2.0)) (* y y x z00 x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y y x z00 x)) ?x571)) (= ?x508 ?x571))))
 (let ((@x628 (monotonicity (rewrite (= ?x487 ?x539)) (rewrite (= ?x490 ?x543)) (rewrite (= ?x493 ?x547)) (rewrite (= ?x496 ?x551)) (rewrite (= ?x499 ?x543)) (rewrite (= ?x502 ?x557)) (rewrite (= ?x505 ?x561)) @x570 (rewrite (= ?x511 ?x547)) (rewrite (= ?x514 ?x561)) (rewrite (= ?x517 ?x579)) @x588 @x597 @x605 @x613 @x622 (= ?x533 ?x625))))
 (let ((?x280 (+ x z00 ?x67 ?x238)))
 (let ((?x482 (* ?x236 ?x280 ?x280 x)))
 (let ((@x253 (rewrite (= ?x217 ?x280))))
 (let ((@x537 (trans (monotonicity @x253 @x253 (= ?x202 ?x482)) (rewrite (= ?x482 ?x533)) (= ?x202 ?x533))))
 (let ((@x638 (trans @x537 (trans @x628 (rewrite (= ?x625 ?x632)) (= ?x533 ?x632)) (= ?x202 ?x632))))
 (let ((@x672 (trans (monotonicity @x638 (= ?x203 ?x639)) (rewrite (= ?x639 ?x668)) (= ?x203 ?x668))))
 (let ((@x835 (trans @x672 (trans @x818 (rewrite (= ?x816 ?x829)) (= ?x668 ?x829)) (= ?x203 ?x829))))
 (let ((?x379 (* (- (/ 1.0 4.0)) ?x377)))
 (let ((?x410 (* (- 2.0) ?x379)))
 (let ((?x366 (* (/ 1.0 4.0) ?x374)))
 (let ((?x409 (* (- 2.0) ?x366)))
 (let ((?x385 (* (- (/ 1.0 2.0)) ?x352)))
 (let ((?x408 (* (- 2.0) ?x385)))
 (let ((?x386 (* (/ 1.0 2.0) ?x334)))
 (let ((?x407 (* (- 2.0) ?x386)))
 (let ((?x132 (* (/ 1.0 4.0) ?x331)))
 (let ((?x406 (* (- 2.0) ?x132)))
 (let ((?x152 (* (- (/ 1.0 4.0)) ?x325)))
 (let ((?x405 (* (- 2.0) ?x152)))
 (let ((?x121 (* (/ 1.0 4.0) ?x310)))
 (let ((?x404 (* (- 2.0) ?x121)))
 (let ((?x298 (* (/ 1.0 4.0) ?x274)))
 (let ((?x403 (* (- 2.0) ?x298)))
 (let ((?x263 (* (- (/ 1.0 2.0)) (* ?x232 x x))))
 (let ((?x402 (* (- 2.0) ?x263)))
 (let ((?x143 (* (/ 1.0 4.0) ?x258)))
 (let ((?x401 (* (- 2.0) ?x143)))
 (let ((?x329 (* (- (/ 1.0 4.0)) ?x160)))
 (let ((?x400 (* (- 2.0) ?x329)))
 (let ((?x96 (* (- (/ 1.0 2.0)) (* ?x232 ?x67 x))))
 (let ((?x399 (* (- 2.0) ?x96)))
 (let ((?x106 (* (- (/ 1.0 2.0)) (* ?x232 ?x238 x))))
 (let ((?x398 (* (- 2.0) ?x106)))
 (let ((?x159 (* (- (/ 1.0 2.0)) (* ?x232 z00 x))))
 (let ((?x397 (* (- 2.0) ?x159)))
 (let ((?x411 (+ ?x397 ?x398 ?x399 ?x400 ?x401 ?x402 ?x403 ?x404 ?x405 ?x406 ?x407 ?x408 ?x409 ?x410)))
 (let ((?x457 (* (- 1.0) ?x334)))
 (let ((?x434 (* (/ 1.0 2.0) ?x325)))
 (let ((?x443 (* (/ 1.0 2.0) ?x352)))
 (let ((?x421 (* (/ 1.0 2.0) ?x160)))
 (let ((?x426 (* (- (/ 1.0 2.0)) ?x334)))
 (let ((?x468 (+ ?x421 ?x426 ?x434 ?x421 ?x259 ?x443 ?x446 ?x449 ?x434 ?x454 ?x457 ?x352 ?x462 ?x465)))
 (let ((@x438 (trans (rewrite (= ?x399 (* (/ 1.0 2.0) (* y x00 y00 x)))) (rewrite (= (* (/ 1.0 2.0) (* y x00 y00 x)) ?x434)) (= ?x399 ?x434))))
 (let ((@x425 (trans (rewrite (= ?x397 (* (/ 1.0 2.0) (* y z00 x)))) (rewrite (= (* (/ 1.0 2.0) (* y z00 x)) ?x421)) (= ?x397 ?x421))))
 (let ((@x470 (monotonicity @x425 (rewrite (= ?x398 ?x426)) @x438 (rewrite (= ?x400 ?x421)) (rewrite (= ?x401 ?x259)) (rewrite (= ?x402 ?x443)) (rewrite (= ?x403 ?x446)) (rewrite (= ?x404 ?x449)) (rewrite (= ?x405 ?x434)) (rewrite (= ?x406 ?x454)) (rewrite (= ?x407 ?x457)) (rewrite (= ?x408 ?x352)) (rewrite (= ?x409 ?x462)) (rewrite (= ?x410 ?x465)) (= ?x411 ?x468))))
 (let ((?x387 (+ ?x159 ?x106 ?x96 ?x329 ?x143 ?x263 ?x298 ?x121 ?x152 ?x132 ?x386 ?x385 ?x366 ?x379)))
 (let ((?x394 (* (- 2.0) ?x387)))
 (let ((?x104 (* ?x232 ?x232 ?x238 x)))
 (let ((?x151 (* ?x232 (- (/ 1.0 2.0)) ?x238 x)))
 (let ((?x118 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) (* ?x238 x)))))
 (let ((?x120 (* ?x232 ?x232 ?x67 x)))
 (let ((?x92 (* ?x232 (- (/ 1.0 2.0)) ?x67 x)))
 (let ((?x295 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) (* ?x67 x)))))
 (let ((?x147 (* ?x232 ?x232 z00 x)))
 (let ((?x279 (* ?x232 (- (/ 1.0 2.0)) z00 x)))
 (let ((?x284 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) (* z00 x)))))
 (let ((?x264 (* ?x232 ?x232 x x)))
 (let ((?x261 (* ?x232 (- (/ 1.0 2.0)) x x)))
 (let ((?x260 (* (- (/ 1.0 2.0)) ?x259)))
 (let ((?x150 (+ ?x260 ?x261 ?x263 ?x264 ?x284 ?x279 ?x159 ?x147 ?x295 ?x92 ?x96 ?x120 ?x118 ?x151 ?x106 ?x104)))
 (let ((?x300 (* (/ 1.0 4.0) ?x334)))
 (let ((?x359 (* (- (/ 1.0 4.0)) ?x352)))
 (let ((?x382 (+ ?x143 ?x359 ?x263 ?x300 ?x132 ?x329 ?x159 ?x298 ?x121 ?x152 ?x96 ?x366 ?x359 ?x300 ?x106 ?x379)))
 (let ((@x371 (trans (rewrite (= ?x120 (* (/ 1.0 4.0) (* y y x00 y00 x)))) (rewrite (= (* (/ 1.0 4.0) (* y y x00 y00 x)) ?x366)) (= ?x120 ?x366))))
 (let ((@x148 (trans (rewrite (= ?x92 (* (- (/ 1.0 4.0)) (* y x00 y00 x)))) (rewrite (= (* (- (/ 1.0 4.0)) (* y x00 y00 x)) ?x152)) (= ?x92 ?x152))))
 (let ((@x312 (trans (rewrite (= ?x295 (* (/ 1.0 4.0) (* x00 y00 x)))) (rewrite (= (* (/ 1.0 4.0) (* x00 y00 x)) ?x121)) (= ?x295 ?x121))))
 (let ((@x101 (trans (rewrite (= ?x147 (* (/ 1.0 4.0) (* y y z00 x)))) (rewrite (= (* (/ 1.0 4.0) (* y y z00 x)) ?x298)) (= ?x147 ?x298))))
 (let ((@x330 (trans (rewrite (= ?x279 (* (- (/ 1.0 4.0)) (* y z00 x)))) (rewrite (= (* (- (/ 1.0 4.0)) (* y z00 x)) ?x329)) (= ?x279 ?x329))))
 (let ((@x369 (trans (rewrite (= ?x284 (* (/ 1.0 4.0) (* z00 x)))) (rewrite (= (* (/ 1.0 4.0) (* z00 x)) ?x132)) (= ?x284 ?x132))))
 (let ((@x384 (monotonicity (rewrite (= ?x260 ?x143)) (rewrite (= ?x261 ?x359)) (rewrite (= ?x264 ?x300)) @x369 @x330 @x101 @x312 @x148 @x371 (rewrite (= ?x118 ?x359)) (rewrite (= ?x151 ?x300)) (rewrite (= ?x104 ?x379)) (= ?x150 ?x382))))
 (let ((@x77 (trans (monotonicity @x253 (= ?x198 (* ?x236 ?x236 ?x280 x))) (rewrite (= (* ?x236 ?x236 ?x280 x) ?x150)) (= ?x198 ?x150))))
 (let ((@x393 (trans @x77 (trans @x384 (rewrite (= ?x382 ?x387)) (= ?x150 ?x387)) (= ?x198 ?x387))))
 (let ((@x415 (trans (monotonicity @x393 (= ?x199 ?x394)) (rewrite (= ?x394 ?x411)) (= ?x199 ?x411))))
 (let ((@x481 (trans @x415 (trans @x470 (rewrite (= ?x468 ?x475)) (= ?x411 ?x475)) (= ?x199 ?x475))))
 (let ((@x843 (trans (monotonicity @x481 @x835 (= ?x225 ?x836)) (rewrite (= ?x836 ?x839)) (= ?x225 ?x839))))
 (let ((@x880 (monotonicity @x843 (trans @x872 (rewrite (= (+ ?x870 ?x238 x) 0.0)) (= ?x245 0.0)) (= ?x246 ?x878))))
 (let ((@x885 (monotonicity (trans @x880 (rewrite (= ?x878 0.0)) $x247) (= $x247 (= 0.0 0.0)))))
 (let ((@x889 (monotonicity (trans @x885 (rewrite (= (= 0.0 0.0) true)) (= $x247 true)) (= $x248 (not true)))))
 (trans @x889 (rewrite (= (not true) false)) (= $x248 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x900 (trans (quant-intro (proof-bind ?x893) (= $x249 $x892)) (elim-unused (= $x892 false)) (= $x249 false))))
 (let (($x186 (exists ((x Real) (y Real) (z Real) )(! (let ((?x87 (* (- 1.0) z00)))
 (let ((?x73 (* y x)))
 (let ((?x67 (* x00 y00)))
 (let ((?x68 (* (- 1.0) ?x67)))
 (let ((?x80 (+ ?x68 ?x73 z ?x87)))
 (let ((?x231 (* (+ (* (- (/ 1.0 2.0)) (* z y y x)) (* z z y x)) ?x80)))
 (let ((?x181 (+ ?x68 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x87)))
 (let ((?x214 (* 2.0 (* (+ z x) (+ z x) (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x))))
 (let ((?x109 (* (/ 1.0 2.0) y)))
 (let ((?x164 (+ (- (/ 1.0 2.0)) ?x109)))
 (let ((?x40 (+ z x)))
 (let (($x183 (not (= (* (+ (* (- 2.0) (* ?x40 ?x164 ?x164 x)) ?x214) ?x181) 0.0))))
 (and (= ?x80 0.0) (or $x183 (not (= ?x231 0.0)))))))))))))))) :qid k!28))
 ))
 (let (($x59 (exists ((x Real) (y Real) (z Real) )(! (let ((?x53 (+ (* (- 1.0) 2.0 x (/ y 2.0) (/ y 2.0) z) (* 2.0 x (/ y 2.0) z z))))
 (let ((?x50 (- (+ (* (- 1.0) x00 y00) (* 2.0 x (/ y 2.0)) z) z00)))
 (let ((?x40 (+ z x)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x43 (+ (* (- 1.0) 2.0 x ?x36 ?x36 ?x40) (* 2.0 x ?x36 ?x40 ?x40))))
 (let ((?x39 (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x36) z x) z00)))
 (let (($x33 (= (- (+ (* (- 1.0) x00 y00) (* x y) z) z00) 0.0)))
 (and $x33 (or (not (= (* ?x39 ?x43) 0.0)) (not (= (* ?x50 ?x53) 0.0))))))))))) :qid k!28))
 ))
 (let ((?x170 (lambda ((x Real) (y Real) (z Real) )(let ((?x87 (* (- 1.0) z00)))
 (let ((?x73 (* y x)))
 (let ((?x67 (* x00 y00)))
 (let ((?x68 (* (- 1.0) ?x67)))
 (let ((?x80 (+ ?x68 ?x73 z ?x87)))
 (let ((?x231 (* (+ (* (- (/ 1.0 2.0)) (* z y y x)) (* z z y x)) ?x80)))
 (let ((?x181 (+ ?x68 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x87)))
 (let ((?x214 (* 2.0 (* (+ z x) (+ z x) (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x))))
 (let ((?x109 (* (/ 1.0 2.0) y)))
 (let ((?x164 (+ (- (/ 1.0 2.0)) ?x109)))
 (let ((?x40 (+ z x)))
 (let (($x183 (not (= (* (+ (* (- 2.0) (* ?x40 ?x164 ?x164 x)) ?x214) ?x181) 0.0))))
 (let (($x184 (and (= ?x80 0.0) (or $x183 (not (= ?x231 0.0))))))
 (let ((?x53 (+ (* (- 1.0) 2.0 x (/ y 2.0) (/ y 2.0) z) (* 2.0 x (/ y 2.0) z z))))
 (let ((?x50 (- (+ (* (- 1.0) x00 y00) (* 2.0 x (/ y 2.0)) z) z00)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x24 (- 1.0)))
 (let ((?x43 (+ (* ?x24 2.0 x ?x36 ?x36 ?x40) (* 2.0 x ?x36 ?x40 ?x40))))
 (let ((?x44 (* (- (+ (* ?x24 x00 y00) (* 2.0 x ?x36) z x) z00) ?x43)))
 (let (($x58 (and (= (- (+ (* ?x24 x00 y00) (* x y) z) z00) 0.0) (or (not (= ?x44 0.0)) (not (= (* ?x50 ?x53) 0.0))))))
 (rewrite (= $x58 $x184)))))))))))))))))))))))
 ))
 (let ((@x60 (asserted $x59)))
 (let ((@x63 (mp (mp @x60 (quant-intro (proof-bind ?x170) (= $x59 $x186)) $x186) (rewrite (= $x186 $x249)) $x249)))
 (mp @x63 @x900 false))))))))))))

(:max-memory   17.68
 :memory       17.40
 :num-allocs   63752
 :num-checks   1
 :rlimit-count 1129
 :time         0.00
 :total-time   0.01)
