unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun n!0 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(proof
(let ((?x963 (* (- 1) z!1)))
 (let ((?x786 (* 6 n!0)))
 (let ((?x261 (* (- 6) n00)))
 (let ((?x997 (+ z00 ?x261 ?x786 ?x963)))
 (let (($x755 (<= ?x997 0)))
 (let (($x517 (= ?x997 0)))
 (let ((?x1398 (* (- 108) z!1)))
 (let ((?x423 (* (- 36) y!2)))
 (let ((?x949 (* (- 36) x!3)))
 (let ((?x1083 (* x!3 z!1)))
 (let ((?x270 (* (- 12) ?x1083)))
 (let ((?x1069 (* (- 36) (* x!3 n!0 n!0))))
 (let ((?x895 (* (- 1) (* y!2 z!1 z!1))))
 (let ((?x1055 (+ x!3 y!2)))
 (let ((?x1405 (+ y!2 z!1)))
 (let ((?x271 (+ 6 z!1)))
 (let ((?x1410 (+ 1 n!0)))
 (let ((?x1068 (* ?x1410 ?x1410 ?x271 ?x1405 ?x1405 ?x1055 ?x1055)))
 (let ((?x1072 (* (- 1) (* ?x1410 ?x271 ?x271 ?x271 ?x1405 ?x1405 ?x1405 ?x1055))))
 (let ((?x1404 (* (- 72) (* x!3 n!0))))
 (let ((?x908 (* (- 72) (* y!2 n!0))))
 (let ((?x934 (* y!2 z!1)))
 (let ((?x1085 (* (- 12) ?x934)))
 (let ((?x488 (* (- 36) (* y!2 n!0 n!0))))
 (let ((?x729 (* (- 1) (* z!1 z!1 z!1))))
 (let ((?x907 (* (- 1) (* x!3 z!1 z!1))))
 (let ((?x390 (* z!1 z!1)))
 (let ((?x1332 (* (- 18) ?x390)))
 (let ((?x1073 (+ (- 216) ?x1332 (* (- 12) (* x!3 n!0 n!0 z!1)) (* (- 24) (* y!2 n!0 z!1)) ?x907 (* (- 12) (* y!2 n!0 n!0 z!1)) (* (- 24) (* x!3 n!0 z!1)) ?x729 (* (- 1) (* x!3 n!0 n!0 z!1 z!1)) ?x488 ?x1085 (* (- 2) (* x!3 n!0 z!1 z!1)) ?x908 ?x1404 ?x1072 ?x1068 ?x895 ?x1069 ?x270 (* (- 2) (* y!2 n!0 z!1 z!1)) ?x949 ?x423 (* (- 1) (* y!2 n!0 n!0 z!1 z!1)) ?x1398)))
 (let ((?x1236 (* ?x997 ?x1073)))
 (let (($x514 (= ?x1236 0)))
 (let (($x811 (not $x514)))
 (let ((?x673 (* z00 z00 y00 y00)))
 (let ((?x787 (+ (* 2 (* z00 z00 z00 x!3)) (* (- 216) (* y00 x00)) (* (- 18) (* z00 y00 y!2)) (* (- 24) (* z00 y00)) (* (- 36) (* z00 x00)) (* (- 96) (* y00 y00)) (* 4 (* y!2 y!2 y!2)) (* 24 (* z00 y!2)) (* (- 36) (* z00 y00 x!3)) (* 216 (* x00 x!3)) (* 12 (* y00 y!2 y!2)) (* 12 (* z00 y00 y00)) (* 10 (* z00 z00 y00)) (* 36 (* z00 x!3)) ?x673 (* z00 z00 z00 y!2) (* (- 108) (* x!3 y!2)) (* 18 (* z00 z00 x00)) (* 108 (* x00 y!2)) (* 6 (* z00 y!2 y!2)) (* (- 16) (* y00 y00 y00)) (* 36 (* z00 y00 x00)) (* (- 24) (* y!2 y!2)) (* (- 108) (* x!3 x!3)) (* (- 1) (* z00 z00 z00 y00)) (* (- 2) (* z00 z00 z00 x00)) (* (- 18) (* z00 z00 x!3)) (* 216 (* y00 x!3)) (* (- 108) (* x00 x00)) (* (- 1) (* z00 z00 y!2 y!2)) (* 120 (* y00 y!2)) (* (- 10) (* z00 z00 y!2)))))
 (let ((?x269 (* (- 72) y!2)))
 (let ((?x268 (* (- 108) x!3)))
 (let ((?x484 (* 18 ?x1083)))
 (let ((?x889 (* 12 ?x934)))
 (let ((?x605 (* z00 y00 y00)))
 (let ((?x495 (* y00 z!1)))
 (let ((?x1124 (* (- 12) ?x495)))
 (let ((?x429 (* z00 y00)))
 (let ((?x545 (* 6 ?x429)))
 (let ((?x378 (* z00 y00 y!2)))
 (let ((?x457 (* (- 18) (* x00 z!1))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1058 (+ ?x67 ?x74 ?x457 (* 18 (* y00 x00)) ?x378 ?x545 ?x1124 (* 36 (* y00 y00)) (* (- 6) (* z00 y!2)) ?x605 (* (- 3) (* z00 z00 y00)) (* 18 (* x!3 y!2)) (* 3 (* z00 x!3 z!1)) (* (- 3) (* z00 z00 x00)) (* (- 18) (* x00 y!2)) (* (- 2) (* z00 y!2 y!2)) (* (- 3) (* z00 x00 z!1)) ?x889 (* 2 (* y00 y00 z!1)) ?x484 (* 3 (* z00 z00 x!3)) ?x268 ?x269 (* (- 18) (* y00 x!3)) (* (- 1) (* y!2 y!2 z!1)) (* (- 36) (* y00 y!2)) (* 3 (* z00 z00 y!2)) (* (- 1) (* y00 y!2 z!1)))))
 (let ((?x1333 (* z00 z00 y!2)))
 (let ((?x704 (* (- 6) ?x429)))
 (let ((?x877 (+ ?x67 ?x74 ?x457 ?x704 (* (- 18) (* z00 x00)) ?x1124 (* 24 (* y00 y00)) (* 6 (* z00 y!2)) (* (- 1) (* z00 z00 y00)) (* 18 (* z00 x!3)) ?x889 ?x484 (* (- 12) (* y!2 y!2)) ?x268 ?x269 (* z00 y00 z!1) (* (- 12) (* y00 y!2)) ?x1333 (* (- 1) (* z00 y!2 z!1)))))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1183 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* (- 18) ?x429) (* (- 1) (* z00 z00 z!1)) (* 12 ?x495) (* 6 (* z00 z!1)) (* 6 ?x934) ?x268 ?x269)))
 (let ((?x288 (* z00 z00)))
 (let ((?x289 (* (- 1) ?x288)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let (($x1150 (and $x517 (= (+ ?x49 ?x43 ?x289 ?x390 (* (- 12) y!2) (* (- 6) z!1)) 0) (= ?x1183 0) (= ?x877 0) (= ?x1058 0) (= ?x787 0) $x811)))
 (let ((?x950 (+ (- 216) ?x949 ?x423 ?x1398 ?x1332 ?x1085 ?x270 ?x1068 ?x1072 ?x1069 ?x1404 ?x895 ?x907 ?x908 ?x488 (* (- 24) (* x!3 z!1 n!0)) (* (- 12) (* x!3 z!1 n!0 n!0)) (* (- 24) (* y!2 z!1 n!0)) (* (- 12) (* y!2 z!1 n!0 n!0)) (* (- 2) (* x!3 z!1 z!1 n!0)) (* (- 1) (* x!3 z!1 z!1 n!0 n!0)) (* (- 2) (* y!2 z!1 z!1 n!0)) (* (- 1) (* y!2 z!1 z!1 n!0 n!0)) ?x729)))
 (let ((?x1213 (* x00 x00)))
 (let ((?x1214 (* 108 ?x1213)))
 (let ((?x1110 (* z00 z00 z00 x00)))
 (let ((?x1111 (* 2 ?x1110)))
 (let ((?x1107 (* z00 z00 z00 y00)))
 (let ((?x1004 (* z00 y00 x00)))
 (let ((?x1017 (* (- 36) ?x1004)))
 (let ((?x901 (* y00 y00 y00)))
 (let ((?x902 (* 16 ?x901)))
 (let ((?x816 (* z00 z00 x00)))
 (let ((?x1067 (* (- 18) ?x816)))
 (let ((?x688 (* (- 1) ?x673)))
 (let ((?x630 (* z00 z00 y00)))
 (let ((?x1168 (* (- 10) ?x630)))
 (let ((?x640 (* (- 12) ?x605)))
 (let ((?x496 (* y00 y00)))
 (let ((?x967 (* 96 ?x496)))
 (let ((?x466 (* z00 x00)))
 (let ((?x384 (* 36 ?x466)))
 (let ((?x794 (* 24 ?x429)))
 (let ((?x376 (* y00 x00)))
 (let ((?x367 (* 216 ?x376)))
 (let ((?x1400 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x367 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x794 ?x384 (* 24 (* y!2 y!2)) ?x967 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x640 ?x1168 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x688 (* 108 (* x!3 x!3)) (* (- 4) (* y!2 y!2 y!2)) (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1067 (* (- 216) (* x!3 y00)) ?x902 (* (- 12) (* y!2 y!2 y00)) ?x1017 (* (- 216) (* x!3 x00)) ?x1107 ?x1111 (* 36 (* x!3 z00 y00)) ?x1214)))
 (let ((?x817 (* 3 ?x816)))
 (let ((?x879 (* 3 ?x630)))
 (let ((?x612 (* (- 1) ?x605)))
 (let ((?x1064 (* 18 (* z!1 x00))))
 (let ((?x799 (* (- 36) ?x496)))
 (let ((?x918 (* z!1 y00)))
 (let ((?x1130 (* 12 ?x918)))
 (let ((?x1082 (* (- 18) ?x1083)))
 (let ((?x377 (* (- 18) ?x376)))
 (let ((?x1263 (* y!2 y!2 z!1)))
 (let ((?x508 (* (- 108) x00)))
 (let ((?x451 (* (- 72) y00)))
 (let ((?x1118 (* 72 y!2)))
 (let ((?x516 (* 108 x!3)))
 (let ((?x1358 (+ ?x516 ?x1118 ?x451 ?x508 (* (- 3) (* y!2 z00 z00)) ?x1263 ?x1085 ?x377 (* (- 18) (* x!3 y!2)) ?x1082 ?x1130 ?x704 ?x799 ?x1064 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x612 ?x879 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x817 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x525 (* (- 24) ?x496)))
 (let ((?x467 (* 18 ?x466)))
 (let ((?x730 (+ ?x516 ?x1118 ?x451 ?x508 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x1085 ?x1082 ?x1130 ?x545 ?x467 (* 12 (* y!2 y!2)) ?x525 ?x1064 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x630 (* (- 18) (* x!3 z00)))))
 (let ((?x430 (* 18 ?x429)))
 (let ((?x392 (* 6 ?x288)))
 (let ((?x381 (* (- 1) ?x55)))
 (let ((?x1029 (+ ?x516 ?x1118 ?x451 ?x381 ?x508 (* z!1 z00 z00) ?x392 (* (- 6) ?x934) (* (- 12) ?x918) ?x430 (* (- 6) (* z!1 z00)))))
 (let ((?x359 (* (- 12) y00)))
 (let ((?x358 (* (- 6) z00)))
 (let (($x1187 (= (+ (* 12 y!2) (* 6 z!1) ?x358 ?x359 (* (- 1) ?x390) ?x288) 0)))
 (let (($x754 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x1187 (= ?x1029 0) (= ?x730 0) (= ?x1358 0) (= ?x1400 0) (not (= (* (+ ?x963 ?x786 z00 ?x261) ?x950) 0)))))
 (let (($x297 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x1266 (* (- 1) (* z z z))))
 (let ((?x1314 (* (- 1) (* y z z n n))))
 (let ((?x1274 (* (- 2) (* y z z n))))
 (let ((?x1316 (* (- 1) (* x z z n n))))
 (let ((?x1277 (* (- 2) (* x z z n))))
 (let ((?x1280 (* (- 12) (* y z n n))))
 (let ((?x1283 (* (- 24) (* y z n))))
 (let ((?x1286 (* (- 12) (* x z n n))))
 (let ((?x1289 (* (- 24) (* x z n))))
 (let ((?x1292 (* (- 36) (* y n n))))
 (let ((?x1295 (* (- 72) (* y n))))
 (let ((?x1324 (* (- 1) (* x z z))))
 (let ((?x1325 (* (- 1) (* y z z))))
 (let ((?x1298 (* (- 72) (* x n))))
 (let ((?x1301 (* (- 36) (* x n n))))
 (let ((?x221 (+ x y)))
 (let ((?x222 (+ y z)))
 (let ((?x397 (+ 6 z)))
 (let ((?x564 (+ 1 n)))
 (let ((?x1139 (* (- 1) (* ?x564 ?x397 ?x397 ?x397 ?x222 ?x222 ?x222 ?x221))))
 (let ((?x600 (* ?x564 ?x564 ?x397 ?x222 ?x222 ?x221 ?x221)))
 (let ((?x402 (* x z)))
 (let ((?x1304 (* (- 12) ?x402)))
 (let ((?x372 (* y z)))
 (let ((?x396 (* (- 12) ?x372)))
 (let ((?x50 (* z z)))
 (let ((?x1300 (* (- 18) ?x50)))
 (let ((?x1397 (* (- 108) z)))
 (let ((?x1307 (* (- 36) y)))
 (let ((?x1310 (* (- 36) x)))
 (let ((?x1037 (+ (- 216) ?x1310 ?x1307 ?x1397 ?x1300 ?x396 ?x1304 ?x600 ?x1139 ?x1301 ?x1298 ?x1325 ?x1324 ?x1295 ?x1292 ?x1289 ?x1286 ?x1283 ?x1280 ?x1277 ?x1316 ?x1274 ?x1314 ?x1266)))
 (let ((?x261 (* (- 6) n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x240 (* (- 1) z)))
 (let ((?x267 (+ ?x240 ?x33 z00 ?x261)))
 (let ((?x1213 (* x00 x00)))
 (let ((?x1214 (* 108 ?x1213)))
 (let ((?x1110 (* z00 z00 z00 x00)))
 (let ((?x1111 (* 2 ?x1110)))
 (let ((?x1107 (* z00 z00 z00 y00)))
 (let ((?x1004 (* z00 y00 x00)))
 (let ((?x1017 (* (- 36) ?x1004)))
 (let ((?x901 (* y00 y00 y00)))
 (let ((?x902 (* 16 ?x901)))
 (let ((?x816 (* z00 z00 x00)))
 (let ((?x1067 (* (- 18) ?x816)))
 (let ((?x772 (* (- 4) (* y y y))))
 (let ((?x720 (* 108 (* x x))))
 (let ((?x673 (* z00 z00 y00 y00)))
 (let ((?x688 (* (- 1) ?x673)))
 (let ((?x630 (* z00 z00 y00)))
 (let ((?x1168 (* (- 10) ?x630)))
 (let ((?x605 (* z00 y00 y00)))
 (let ((?x640 (* (- 12) ?x605)))
 (let ((?x496 (* y00 y00)))
 (let ((?x967 (* 96 ?x496)))
 (let ((?x470 (* y y)))
 (let ((?x715 (* 24 ?x470)))
 (let ((?x466 (* z00 x00)))
 (let ((?x384 (* 36 ?x466)))
 (let ((?x429 (* z00 y00)))
 (let ((?x794 (* 24 ?x429)))
 (let ((?x376 (* y00 x00)))
 (let ((?x367 (* 216 ?x376)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1234 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x367 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x794 ?x384 ?x715 ?x967 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x640 ?x1168 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x688 ?x720 ?x772 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1067 (* (- 216) (* x y00)) ?x902 (* (- 12) (* y y y00)) ?x1017 (* (- 216) (* x x00)) ?x1107 ?x1111 (* 36 (* x z00 y00)) ?x1214)))
 (let (($x1239 (= ?x1234 0)))
 (let ((?x817 (* 3 ?x816)))
 (let ((?x879 (* 3 ?x630)))
 (let ((?x612 (* (- 1) ?x605)))
 (let ((?x542 (* 18 (* z x00))))
 (let ((?x799 (* (- 36) ?x496)))
 (let ((?x704 (* (- 6) ?x429)))
 (let ((?x403 (* z y00)))
 (let ((?x404 (* 12 ?x403)))
 (let ((?x437 (* (- 18) ?x402)))
 (let ((?x377 (* (- 18) ?x376)))
 (let ((?x135 (* y y z)))
 (let ((?x508 (* (- 108) x00)))
 (let ((?x451 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x935 (+ ?x64 ?x71 ?x451 ?x508 (* (- 3) (* y z00 z00)) ?x135 ?x396 ?x377 (* (- 18) (* x y)) ?x437 ?x404 ?x704 ?x799 ?x542 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x612 ?x879 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x817 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x942 (= ?x935 0)))
 (let ((?x525 (* (- 24) ?x496)))
 (let ((?x473 (* 12 ?x470)))
 (let ((?x467 (* 18 ?x466)))
 (let ((?x545 (* 6 ?x429)))
 (let ((?x103 (* y z z00)))
 (let ((?x684 (+ ?x64 ?x71 ?x451 ?x508 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x396 ?x437 ?x404 ?x545 ?x467 ?x473 ?x525 ?x542 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x630 (* (- 18) (* x z00)))))
 (let (($x689 (= ?x684 0)))
 (let ((?x430 (* 18 ?x429)))
 (let ((?x288 (* z00 z00)))
 (let ((?x392 (* 6 ?x288)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x381 (* (- 1) ?x55)))
 (let ((?x524 (+ ?x64 ?x71 ?x451 ?x381 ?x508 ?x76 ?x392 (* (- 6) ?x372) (* (- 12) ?x403) ?x430 (* (- 6) (* z z00)))))
 (let (($x529 (= ?x524 0)))
 (let ((?x359 (* (- 12) y00)))
 (let ((?x358 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x362 (= (+ ?x45 ?x46 ?x358 ?x359 (* (- 1) ?x50) ?x288) 0)))
 (let (($x280 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x280 $x362 $x529 $x689 $x942 $x1239 (not (= (* ?x267 ?x1037) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x500 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x221 (+ x y)))
 (let ((?x222 (+ y z)))
 (let ((?x397 (+ 6 z)))
 (let ((?x564 (+ 1 n)))
 (let ((?x1139 (* (- 1) (* ?x564 ?x397 ?x397 ?x397 ?x222 ?x222 ?x222 ?x221))))
 (let ((?x600 (* ?x564 ?x564 ?x397 ?x222 ?x222 ?x221 ?x221)))
 (let ((?x438 (+ ?x600 (* (- 1) (* ?x564 ?x564 ?x397 ?x397 ?x221)) ?x1139 (* (- 1) (* ?x397 ?x397 ?x397)))))
 (let ((?x261 (* (- 6) n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x240 (* (- 1) z)))
 (let ((?x436 (+ ?x240 z00 ?x33 ?x261)))
 (let ((?x1213 (* x00 x00)))
 (let ((?x1214 (* 108 ?x1213)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x496 (* y00 y00)))
 (let ((?x967 (* 96 ?x496)))
 (let ((?x901 (* y00 y00 y00)))
 (let ((?x902 (* 16 ?x901)))
 (let ((?x772 (* (- 4) (* y y y))))
 (let ((?x720 (* 108 (* x x))))
 (let ((?x470 (* y y)))
 (let ((?x715 (* 24 ?x470)))
 (let ((?x242 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x715 ?x720 ?x772 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x902 (* (- 6) (* z00 y y)) ?x967 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1214 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x508 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x451 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x825 (* 18 (* x00 z))))
 (let ((?x799 (* (- 36) ?x496)))
 (let ((?x341 (* z y)))
 (let ((?x563 (* (- 12) ?x341)))
 (let ((?x574 (* y00 z)))
 (let ((?x575 (* 12 ?x574)))
 (let ((?x1346 (* (- 18) (* z x))))
 (let ((?x1387 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1346 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x575 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x563 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x799 ?x825 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x451 (* 18 (* y00 x)) ?x71 ?x508 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x525 (* (- 24) ?x496)))
 (let ((?x473 (* 12 ?x470)))
 (let ((?x1186 (+ (* (- 1) (* y00 z00 z)) ?x563 ?x1346 (* 18 (* x00 z00)) ?x473 ?x525 ?x825 ?x575 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x451 (* (- 6) (* z00 y)) ?x71 ?x508 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x288 (* z00 z00)))
 (let ((?x392 (* 6 ?x288)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x381 (* (- 1) ?x55)))
 (let ((?x1061 (+ (* (- 6) ?x341) ?x381 ?x392 (* (- 12) ?x574) (* 18 (* y00 z00)) ?x64 ?x451 (* (- 6) (* z00 z)) ?x71 ?x508 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x289 (* (- 1) ?x288)))
 (and (= ?x436 0) (= (+ ?x289 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1061 0) (= ?x1186 0) (= ?x1387 0) (= ?x242 0) (not (= (* ?x436 ?x438) 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x520 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x1266 (* (- 1) (* z z z))))
 (let ((?x1314 (* (- 1) (* y z z n n))))
 (let ((?x1274 (* (- 2) (* y z z n))))
 (let ((?x1316 (* (- 1) (* x z z n n))))
 (let ((?x1277 (* (- 2) (* x z z n))))
 (let ((?x1280 (* (- 12) (* y z n n))))
 (let ((?x1283 (* (- 24) (* y z n))))
 (let ((?x1286 (* (- 12) (* x z n n))))
 (let ((?x1289 (* (- 24) (* x z n))))
 (let ((?x1292 (* (- 36) (* y n n))))
 (let ((?x1295 (* (- 72) (* y n))))
 (let ((?x1324 (* (- 1) (* x z z))))
 (let ((?x1325 (* (- 1) (* y z z))))
 (let ((?x1298 (* (- 72) (* x n))))
 (let ((?x1301 (* (- 36) (* x n n))))
 (let ((?x221 (+ x y)))
 (let ((?x222 (+ y z)))
 (let ((?x397 (+ 6 z)))
 (let ((?x564 (+ 1 n)))
 (let ((?x1139 (* (- 1) (* ?x564 ?x397 ?x397 ?x397 ?x222 ?x222 ?x222 ?x221))))
 (let ((?x600 (* ?x564 ?x564 ?x397 ?x222 ?x222 ?x221 ?x221)))
 (let ((?x402 (* x z)))
 (let ((?x1304 (* (- 12) ?x402)))
 (let ((?x372 (* y z)))
 (let ((?x396 (* (- 12) ?x372)))
 (let ((?x50 (* z z)))
 (let ((?x1300 (* (- 18) ?x50)))
 (let ((?x1397 (* (- 108) z)))
 (let ((?x1307 (* (- 36) y)))
 (let ((?x1310 (* (- 36) x)))
 (let ((?x1037 (+ (- 216) ?x1310 ?x1307 ?x1397 ?x1300 ?x396 ?x1304 ?x600 ?x1139 ?x1301 ?x1298 ?x1325 ?x1324 ?x1295 ?x1292 ?x1289 ?x1286 ?x1283 ?x1280 ?x1277 ?x1316 ?x1274 ?x1314 ?x1266)))
 (let ((?x261 (* (- 6) n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x240 (* (- 1) z)))
 (let ((?x267 (+ ?x240 ?x33 z00 ?x261)))
 (let ((?x1213 (* x00 x00)))
 (let ((?x1214 (* 108 ?x1213)))
 (let ((?x1110 (* z00 z00 z00 x00)))
 (let ((?x1111 (* 2 ?x1110)))
 (let ((?x1107 (* z00 z00 z00 y00)))
 (let ((?x1004 (* z00 y00 x00)))
 (let ((?x1017 (* (- 36) ?x1004)))
 (let ((?x901 (* y00 y00 y00)))
 (let ((?x902 (* 16 ?x901)))
 (let ((?x816 (* z00 z00 x00)))
 (let ((?x1067 (* (- 18) ?x816)))
 (let ((?x772 (* (- 4) (* y y y))))
 (let ((?x720 (* 108 (* x x))))
 (let ((?x673 (* z00 z00 y00 y00)))
 (let ((?x688 (* (- 1) ?x673)))
 (let ((?x630 (* z00 z00 y00)))
 (let ((?x1168 (* (- 10) ?x630)))
 (let ((?x605 (* z00 y00 y00)))
 (let ((?x640 (* (- 12) ?x605)))
 (let ((?x496 (* y00 y00)))
 (let ((?x967 (* 96 ?x496)))
 (let ((?x470 (* y y)))
 (let ((?x715 (* 24 ?x470)))
 (let ((?x466 (* z00 x00)))
 (let ((?x384 (* 36 ?x466)))
 (let ((?x429 (* z00 y00)))
 (let ((?x794 (* 24 ?x429)))
 (let ((?x376 (* y00 x00)))
 (let ((?x367 (* 216 ?x376)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1234 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x367 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x794 ?x384 ?x715 ?x967 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x640 ?x1168 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x688 ?x720 ?x772 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1067 (* (- 216) (* x y00)) ?x902 (* (- 12) (* y y y00)) ?x1017 (* (- 216) (* x x00)) ?x1107 ?x1111 (* 36 (* x z00 y00)) ?x1214)))
 (let (($x1239 (= ?x1234 0)))
 (let ((?x817 (* 3 ?x816)))
 (let ((?x879 (* 3 ?x630)))
 (let ((?x612 (* (- 1) ?x605)))
 (let ((?x542 (* 18 (* z x00))))
 (let ((?x799 (* (- 36) ?x496)))
 (let ((?x704 (* (- 6) ?x429)))
 (let ((?x403 (* z y00)))
 (let ((?x404 (* 12 ?x403)))
 (let ((?x437 (* (- 18) ?x402)))
 (let ((?x377 (* (- 18) ?x376)))
 (let ((?x135 (* y y z)))
 (let ((?x508 (* (- 108) x00)))
 (let ((?x451 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x935 (+ ?x64 ?x71 ?x451 ?x508 (* (- 3) (* y z00 z00)) ?x135 ?x396 ?x377 (* (- 18) (* x y)) ?x437 ?x404 ?x704 ?x799 ?x542 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x612 ?x879 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x817 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x942 (= ?x935 0)))
 (let ((?x525 (* (- 24) ?x496)))
 (let ((?x473 (* 12 ?x470)))
 (let ((?x467 (* 18 ?x466)))
 (let ((?x545 (* 6 ?x429)))
 (let ((?x103 (* y z z00)))
 (let ((?x684 (+ ?x64 ?x71 ?x451 ?x508 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x396 ?x437 ?x404 ?x545 ?x467 ?x473 ?x525 ?x542 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x630 (* (- 18) (* x z00)))))
 (let (($x689 (= ?x684 0)))
 (let ((?x430 (* 18 ?x429)))
 (let ((?x288 (* z00 z00)))
 (let ((?x392 (* 6 ?x288)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x381 (* (- 1) ?x55)))
 (let ((?x524 (+ ?x64 ?x71 ?x451 ?x381 ?x508 ?x76 ?x392 (* (- 6) ?x372) (* (- 12) ?x403) ?x430 (* (- 6) (* z z00)))))
 (let (($x529 (= ?x524 0)))
 (let ((?x359 (* (- 12) y00)))
 (let ((?x358 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x362 (= (+ ?x45 ?x46 ?x358 ?x359 (* (- 1) ?x50) ?x288) 0)))
 (let (($x280 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x459 (and $x280 $x362 $x529 $x689 $x942 $x1239 (not (= (* ?x267 ?x1037) 0)))))
 (let ((?x438 (+ ?x600 (* (- 1) (* ?x564 ?x564 ?x397 ?x397 ?x221)) ?x1139 (* (- 1) (* ?x397 ?x397 ?x397)))))
 (let ((?x436 (+ ?x240 z00 ?x33 ?x261)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x242 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x715 ?x720 ?x772 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x902 (* (- 6) (* z00 y y)) ?x967 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1214 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x825 (* 18 (* x00 z))))
 (let ((?x341 (* z y)))
 (let ((?x563 (* (- 12) ?x341)))
 (let ((?x574 (* y00 z)))
 (let ((?x575 (* 12 ?x574)))
 (let ((?x1346 (* (- 18) (* z x))))
 (let ((?x1387 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1346 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x575 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x563 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x799 ?x825 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x451 (* 18 (* y00 x)) ?x71 ?x508 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1186 (+ (* (- 1) (* y00 z00 z)) ?x563 ?x1346 (* 18 (* x00 z00)) ?x473 ?x525 ?x825 ?x575 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x451 (* (- 6) (* z00 y)) ?x71 ?x508 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x1061 (+ (* (- 6) ?x341) ?x381 ?x392 (* (- 12) ?x574) (* 18 (* y00 z00)) ?x64 ?x451 (* (- 6) (* z00 z)) ?x71 ?x508 (* z00 z00 z))))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x289 (* (- 1) ?x288)))
 (let (($x841 (and (= ?x436 0) (= (+ ?x289 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1061 0) (= ?x1186 0) (= ?x1387 0) (= ?x242 0) (not (= (* ?x436 ?x438) 0)))))
 (rewrite (= $x841 $x459)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x235 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x215 (+ z 6)))
 (let ((?x222 (+ y z)))
 (let ((?x221 (+ x y)))
 (let ((?x217 (+ n 1)))
 (let ((?x227 (- (* ?x217 ?x217 ?x221 ?x221 ?x222 ?x222 ?x215) (* ?x217 ?x217 ?x221 ?x215 ?x215))))
 (let ((?x229 (- (- ?x227 (* ?x217 ?x221 ?x222 ?x222 ?x222 ?x215 ?x215 ?x215)) (* ?x215 ?x215 ?x215))))
 (let ((?x230 (* (- (+ (* (- 1) ?x215) z00 (* 6 ?x217)) (* 6 n00)) ?x229)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x230 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x705 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x221 (+ x y)))
 (let ((?x222 (+ y z)))
 (let ((?x397 (+ 6 z)))
 (let ((?x564 (+ 1 n)))
 (let ((?x1139 (* (- 1) (* ?x564 ?x397 ?x397 ?x397 ?x222 ?x222 ?x222 ?x221))))
 (let ((?x600 (* ?x564 ?x564 ?x397 ?x222 ?x222 ?x221 ?x221)))
 (let ((?x438 (+ ?x600 (* (- 1) (* ?x564 ?x564 ?x397 ?x397 ?x221)) ?x1139 (* (- 1) (* ?x397 ?x397 ?x397)))))
 (let ((?x261 (* (- 6) n00)))
 (let ((?x33 (* 6 n)))
 (let ((?x240 (* (- 1) z)))
 (let ((?x436 (+ ?x240 z00 ?x33 ?x261)))
 (let ((?x1213 (* x00 x00)))
 (let ((?x1214 (* 108 ?x1213)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x496 (* y00 y00)))
 (let ((?x967 (* 96 ?x496)))
 (let ((?x901 (* y00 y00 y00)))
 (let ((?x902 (* 16 ?x901)))
 (let ((?x772 (* (- 4) (* y y y))))
 (let ((?x720 (* 108 (* x x))))
 (let ((?x470 (* y y)))
 (let ((?x715 (* 24 ?x470)))
 (let ((?x242 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x715 ?x720 ?x772 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x902 (* (- 6) (* z00 y y)) ?x967 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1214 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x508 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x451 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x825 (* 18 (* x00 z))))
 (let ((?x799 (* (- 36) ?x496)))
 (let ((?x341 (* z y)))
 (let ((?x563 (* (- 12) ?x341)))
 (let ((?x574 (* y00 z)))
 (let ((?x575 (* 12 ?x574)))
 (let ((?x1346 (* (- 18) (* z x))))
 (let ((?x1387 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1346 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x575 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x563 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x799 ?x825 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x451 (* 18 (* y00 x)) ?x71 ?x508 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x525 (* (- 24) ?x496)))
 (let ((?x473 (* 12 ?x470)))
 (let ((?x1186 (+ (* (- 1) (* y00 z00 z)) ?x563 ?x1346 (* 18 (* x00 z00)) ?x473 ?x525 ?x825 ?x575 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x451 (* (- 6) (* z00 y)) ?x71 ?x508 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x288 (* z00 z00)))
 (let ((?x392 (* 6 ?x288)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x381 (* (- 1) ?x55)))
 (let ((?x1061 (+ (* (- 6) ?x341) ?x381 ?x392 (* (- 12) ?x574) (* 18 (* y00 z00)) ?x64 ?x451 (* (- 6) (* z00 z)) ?x71 ?x508 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x289 (* (- 1) ?x288)))
 (let (($x841 (and (= ?x436 0) (= (+ ?x289 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1061 0) (= ?x1186 0) (= ?x1387 0) (= ?x242 0) (not (= (* ?x436 ?x438) 0)))))
 (let ((?x215 (+ z 6)))
 (let ((?x217 (+ n 1)))
 (let ((?x227 (- (* ?x217 ?x217 ?x221 ?x221 ?x222 ?x222 ?x215) (* ?x217 ?x217 ?x221 ?x215 ?x215))))
 (let ((?x229 (- (- ?x227 (* ?x217 ?x221 ?x222 ?x222 ?x222 ?x215 ?x215 ?x215)) (* ?x215 ?x215 ?x215))))
 (let ((?x230 (* (- (+ (* (- 1) ?x215) z00 (* 6 ?x217)) (* 6 n00)) ?x229)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x234 (and (= (- (+ (* (- 1) z) z00 ?x33) (* 6 n00)) 0) (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x230 0))))))
 (rewrite (= $x234 $x841)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x236 (asserted $x235)))
 (let ((@x1229 (mp (mp @x236 (quant-intro (proof-bind ?x705) (= $x235 $x500)) $x500) (rewrite (= $x500 $x500)) $x500)))
 (let ((@x814 (mp~ (mp @x1229 (quant-intro (proof-bind ?x520) (= $x500 $x297)) $x297) (sk (~ $x297 $x754)) $x754)))
 (let ((@x583 (mp @x814 (rewrite (= $x754 $x1150)) $x1150)))
 (let ((@x773 (and-elim @x583 $x517)))
 (let ((@x824 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x517) $x755)) @x773 $x755)))
 (let (($x1323 (>= ?x997 0)))
 (let ((@x762 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x517) $x1323)) @x773 $x1323)))
 (let (($x1224 (not (<= ?x1236 0))))
 (let (($x1341 (>= ?x1236 0)))
 (let ((@x1041 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x514 $x1224 (not $x1341))) (and-elim @x583 $x811) (or $x1224 (not $x1341)))))
 (let ((@x1254 (unit-resolution @x1041 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1341)) @x762 @x824 false) $x1341) $x1224)))
 ((_ th-lemma arith farkas 1 1 1) @x1254 @x762 @x824 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        10
 :arith-assert-upper        9
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-num-rows            11
 :arith-pseudo-nonlinear    2
 :arith-tableau-max-columns 113
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                20
 :max-memory                19.83
 :memory                    19.24
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                593935
 :num-checks                1
 :propagations              14
 :rlimit-count              7404
 :time                      0.01
 :total-time                0.02)
