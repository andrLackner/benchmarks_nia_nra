unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x4440 (* (- 1) s!1)))
 (let ((?x331 (* r00 r00)))
 (let ((?x3188 (* (- 3) ?x331)))
 (let ((?x830 (+ s00 ?x3188 (* 3 (* r!2 r!2)) ?x4440)))
 (let (($x3525 (<= ?x830 0)))
 (let (($x4655 (= ?x830 0)))
 (let ((?x603 (* 6 r!2)))
 (let ((?x4752 (+ 3 s!1 ?x603)))
 (let ((?x4740 (+ x!0 ?x4440)))
 (let ((?x4937 (* (- 9) (* (+ 1 r!2) (+ 1 r!2) ?x4740 ?x4740 ?x4752 ?x4752 ?x4752))))
 (let ((?x5377 (* (- 6) (* r00 s00 (+ 1 r!2) (+ 1 r!2) ?x4740 ?x4740 ?x4752 ?x4752))))
 (let ((?x3719 (* 6 (* r00 (+ 1 r!2) ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752))))
 (let ((?x5327 (+ 1 r!2)))
 (let ((?x677 (* s00 r00 r00)))
 (let ((?x4858 (* (- 54) ?x677)))
 (let ((?x621 (* s00 s00)))
 (let ((?x4247 (* 36 ?x621)))
 (let ((?x552 (* r00 x00)))
 (let ((?x4332 (* 162 ?x552)))
 (let ((?x456 (* s00 r00)))
 (let ((?x5387 (* (- 81) ?x456)))
 (let ((?x2942 (* 27 s00)))
 (let ((?x4541 (+ ?x2942 (* (- 3) (* ?x5327 ?x5327 ?x4752 ?x4752 ?x4752)) ?x5387 (* (- 4) (* s00 s00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* (- 36) (* s00 r00 r00 s!1)) ?x4332 (* (- 486) (* s00 r00 r!2)) (* 18 (* s00 s!1)) ?x4247 ?x4858 (* (- 6) (* r00 r00 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 2 (* s00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752)) (* 90 (* s00 s!1 r!2 r!2)) (* (- 18) (* ?x5327 ?x5327 ?x5327 ?x4740 ?x4752 ?x4752)) (* (- 54) (* s00 r00 s!1)) (* 216 (* s00 s00 r!2)) (* 72 (* s00 s!1 r!2)) (* 972 (* r00 x00 r!2)) (* 6 (* r00 r00 s00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 2106 (* r00 x00 r!2 r!2)) (* 108 (* r00 x00 s!1)) (* 18 (* ?x5327 ?x4740 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 468 (* s00 s00 r!2 r!2)) (* 4 (* s00 s00 s!1 s!1)) (* 24 (* s00 s00 s!1)) (* (- 9) (* r00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752)) (* 9 (* s00 ?x5327 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752)) (* (- 3) (* s00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 18 (* ?x5327 ?x5327 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752)) (* 36 (* s00 r00 r00 x!0 x!0 s!1)) (* 258 (* s00 r00 r00 s!1 s!1 r!2)) (* 120 (* s00 s00 s!1 r!2 r!2)) (* 351 (* s00 r!2 r!2)) (* 6 (* s00 r00 r00 x!0 x!0 s!1 s!1 r!2)) (* 540 (* r00 x00 s!1 r!2 r!2)) (* 324 (* s00 r!2 r!2 r!2)) (* (- 18) (* r00 x00 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752)) (* 48 (* s00 s00 s!1 r!2 r!2 r!2)) (* (- 180) (* s00 r00 r00 s!1 r!2 r!2)) (* (- 2) (* ?x5327 ?x5327 ?x4752 ?x4752 ?x4752 ?x4752)) (* (- 12) (* s00 r00 r00 x!0 s!1 s!1 s!1)) (* (- 72) (* s00 r00 r00 x!0 s!1 s!1)) (* 72 (* s00 r00 r00 x!0 x!0 s!1 r!2 r!2)) (* 3 (* s00 s!1 s!1)) (* 18 (* r00 x00 s!1 s!1)) (* 6 (* r00 r00 ?x5327 ?x5327 ?x4752 ?x4752 ?x4752)) (* (- 702) (* s00 r00 r00 r!2 r!2)) (* 144 (* s00 s00 r!2 r!2 r!2 r!2)) (* 96 (* s00 s00 s!1 r!2)) (* (- 108) (* s00 r00 s!1 r!2 r!2 r!2)) (* (- 6) (* r00 s00 ?x5327 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 36 (* r00 x00 s!1 s!1 r!2)) (* (- 144) (* s00 r00 r00 s!1 r!2)) (* 1944 (* r00 x00 r!2 r!2 r!2)) (* (- 4) (* s00 s00 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752)) (* 216 (* s00 r00 r00 x!0 x!0 r!2 r!2 r!2)) (* 2 (* ?x5327 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752)) (* 4 (* s00 s00 s!1 s!1 r!2 r!2)) (* (- 2) (* s00 ?x5327 ?x5327 ?x4752 ?x4752 ?x4752)) (* 108 (* s00 r00 r00 x!0 x!0 s!1 r!2)) (* 648 (* r00 x00 r!2 r!2 r!2 r!2)) (* 3 (* ?x5327 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* (- 9) (* s00 ?x5327 ?x5327 ?x5327 ?x4752 ?x4752)) (* 6 (* s00 s!1 s!1 r!2)) (* 9 (* r00 s00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 18 (* r00 ?x5327 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752)) (* 18 (* x00 ?x5327 ?x5327 ?x5327 ?x4752 ?x4752)) (* 432 (* s00 r00 r00 x!0 x!0 r!2 r!2)) (* 6 (* r00 ?x5327 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* (- 144) (* s00 r00 r00 x!0 s!1 s!1 r!2 r!2)) (* 432 (* s00 s00 r!2 r!2 r!2)) (* (- 972) (* s00 r00 r!2 r!2 r!2)) (* (- 9) (* s00 r00 s!1 s!1)) (* (- 864) (* s00 r00 r00 x!0 s!1 r!2 r!2)) (* (- 324) (* s00 r00 r00 r!2)) (* 216 (* r00 x00 s!1 r!2 r!2 r!2)) (* 6 (* s00 r00 r00 x!0 x!0 s!1 s!1)) (* 48 (* s00 r00 r00 s!1 s!1)) (* (- 1053) (* s00 r00 r!2 r!2)) (* (- 648) (* s00 r00 r00 r!2 r!2 r!2)) (* (- 216) (* s00 r00 r00 x!0 s!1 s!1 r!2)) (* 2 (* s00 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* (- 9) (* r00 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 9 (* r00 ?x5327 ?x5327 ?x4752 ?x4752 ?x4752)) (* 9 (* s00 ?x5327 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 9 (* r00 s00 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752)) (* 8 (* s00 s00 s!1 s!1 r!2)) (* (- 432) (* s00 r00 r00 x!0 s!1 r!2 r!2 r!2)) (* (- 9) (* s00 r00 s!1 s!1 r!2 r!2)) (* (- 18) (* s00 r00 s!1 s!1 r!2)) (* 6 (* s00 r00 r00 s!1 s!1 s!1 s!1 r!2)) (* 108 (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* (- 18) (* r00 ?x5327 ?x5327 ?x4740 ?x4752 ?x4752)) (* 3 (* ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752)) (* 9 (* ?x5327 ?x5327 ?x5327 ?x4752 ?x4752 ?x4752)) (* 3 (* s00 s!1 s!1 r!2 r!2)) (* 2 (* ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752 ?x4752)) (* (- 18) (* x00 ?x5327 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752)) (* 162 (* s00 r!2)) (* (- 6) (* r00 ?x5327 ?x5327 ?x5327 ?x4752 ?x4752 ?x4752)) (* 72 (* s00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 108) (* s00 r00 r00 x!0 s!1)) (* 6 (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* 426 (* s00 r00 r00 s!1 s!1 r!2 r!2)) (* (- 18) (* r00 x00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 6 (* r00 s00 ?x5327 ?x5327 ?x5327 ?x4752 ?x4752)) (* 432 (* r00 x00 s!1 r!2)) (* (- 9) (* ?x5327 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752)) (* (- 18) (* x00 ?x5327 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) ?x3719 (* 18 (* r00 x00 s!1 s!1 r!2 r!2)) (* (- 3) (* s00 ?x5327 ?x4740 ?x4740 ?x4752 ?x4752)) (* (- 12) (* s00 r00 r00 x!0 s!1 s!1 s!1 r!2)) (* 36 (* s00 r00 r00 s!1 s!1 s!1)) ?x5377 (* (- 540) (* s00 r00 r00 x!0 s!1 r!2)) (* 54 (* s00 r00 r00 x!0 x!0)) (* (- 216) (* s00 r00 s!1 r!2)) (* (- 324) (* s00 r00 r!2 r!2 r!2 r!2)) (* (- 270) (* s00 r00 s!1 r!2 r!2)) (* 18 (* r00 ?x4740 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752)) (* 270 (* s00 r00 r00 x!0 x!0 r!2)) (* 216 (* s00 r00 r00 s!1 s!1 r!2 r!2 r!2)) ?x4937 (* 108 (* s00 r!2 r!2 r!2 r!2)) (* 36 (* s00 s!1 r!2 r!2 r!2)) (* (- 6) (* r00 r00 ?x4740 ?x4740 ?x4740 ?x4752 ?x4752 ?x4752 ?x4752)) (* (- 216) (* s00 r00 r00 r!2 r!2 r!2 r!2)) (* (- 72) (* s00 r00 r00 s!1 r!2 r!2 r!2)))))
 (let (($x2239 (= ?x4541 0)))
 (let (($x3269 (not $x2239)))
 (let ((?x2235 (* (- 9) s!1)))
 (let ((?x4238 (* r00 r00 s!1)))
 (let ((?x4942 (* 36 ?x4238)))
 (let ((?x1376 (* x00 x00)))
 (let ((?x4953 (* 108 ?x1376)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x3403 (* 16 ?x1214)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x3717 (* (- 432) ?x912)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3927 (* (- 108) ?x835)))
 (let ((?x4585 (* (- 36) ?x677)))
 (let ((?x5006 (* 51 ?x621)))
 (let ((?x1724 (* 108 ?x552)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3313 (+ ?x137 (* 108 (* s00 x!0)) (* (- 54) ?x456) (* 216 (* s00 r00 x00)) ?x1724 (* (- 66) (* s00 s!1)) ?x5006 ?x4585 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x3927 ?x3717 (* 54 (* r00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x3403 (* (- 108) (* r00 x!0)) ?x4953 (* 108 (* x!0 x!0)) (* (- 108) (* x!0 s!1)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* (- 12) (* s00 s!1 s!1)) ?x4942 (* 432 (* r00 r00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x2235 (* 15 (* s!1 s!1)))))
 (let (($x3412 (= ?x3313 0)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x4845 (* 36 ?x907)))
 (let ((?x4832 (* (- 6) ?x835)))
 (let ((?x4846 (* 15 ?x621)))
 (let ((?x2938 (* 54 ?x552)))
 (let ((?x4943 (+ ?x137 (* 6 (* s00 x!0)) (* (- 24) ?x456) ?x2938 (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) ?x4846 ?x4585 (* 2 (* s00 s00 r00)) (* (- 36) (* r00 x!0 r!2)) ?x4832 ?x4845 (* 24 (* r00 s!1)) (* (- 54) (* r00 x!0)) (* 24 (* s!1 r!2)) (* (- 6) (* x!0 s!1)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) ?x4942 (* (- 54) (* x!0 r!2)) (* (- 24) (* s00 r!2)) (* (- 4) (* r00 s!1 s!1)) ?x2235 (* (- 3) (* s!1 s!1)))))
 (let (($x4941 (= ?x4943 0)))
 (let ((?x3408 (* (- 3) s!1)))
 (let ((?x3584 (* 4 ?x621)))
 (let ((?x3353 (* 18 ?x552)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2425 (+ ?x44 (* (- 9) ?x456) ?x3353 (* 6 (* s00 r00 r!2)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) ?x3584 (* (- 6) ?x677) (* 9 (* r00 s!1)) (* (- 18) (* r00 x!0)) (* 9 (* s!1 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x4238) (* (- 18) (* x!0 r!2)) (* (- 9) (* s00 r!2)) ?x3408 (* (- 2) (* s!1 s!1)))))
 (let (($x2354 (= ?x2425 0)))
 (let ((?x5390 (* 3 r!2)))
 (let ((?x1664 (* 6 x!0)))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x534 (* (- 6) ?x456)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x4244 (+ ?x44 ?x530 ?x531 ?x534 ?x500 (* (- 12) (* r00 r00 r!2)) (* 2 (* s!1 r!2)) ?x1664 (* 4 (* s00 r!2)) ?x3408 ?x5390)))
 (let (($x4243 (= ?x4244 0)))
 (let (($x3771 (and $x4655 $x4243 $x2354 $x4941 $x3412 $x3269)))
 (let ((?x3610 (+ 3 ?x603 s!1)))
 (let ((?x610 (+ ?x4440 x!0)))
 (let ((?x1247 (+ ?x2942 (* (- 18) (* x00 ?x5327 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* 6 (* r00 ?x5327 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610)) (* 162 (* r!2 s00)) ?x5387 (* 9 (* s00 ?x5327 ?x5327 ?x610 ?x610 ?x3610 ?x3610)) ?x4332 ?x4247 ?x4858 (* 18 (* s!1 s00)) (* (- 486) (* r!2 s00 r00)) (* (- 18) (* r00 x00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 18) (* x00 ?x5327 ?x5327 ?x610 ?x610 ?x3610 ?x3610)) (* (- 54) (* s!1 s00 r00)) (* 96 (* r!2 s!1 s00 s00)) (* 216 (* r!2 s00 s00)) (* 144 (* r!2 r!2 r!2 r!2 s00 s00)) (* (- 18) (* ?x5327 ?x5327 ?x5327 ?x610 ?x3610 ?x3610)) (* 72 (* r!2 s!1 s00)) (* 3 (* s!1 s!1 s00)) (* 972 (* r!2 r00 x00)) (* (- 9) (* r00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610)) (* 6 (* r00 ?x5327 ?x5327 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* 9 (* ?x5327 ?x5327 ?x5327 ?x3610 ?x3610 ?x3610)) (* 18 (* r00 ?x610 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* 9 (* s00 ?x5327 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 9) (* ?x5327 ?x5327 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* 9 (* r00 ?x5327 ?x5327 ?x3610 ?x3610 ?x3610)) (* 48 (* r!2 r!2 r!2 s!1 s00 s00)) (* 351 (* r!2 r!2 s00)) (* 9 (* r00 s00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* 90 (* r!2 r!2 s!1 s00)) (* 468 (* r!2 r!2 s00 s00)) (* 4 (* s!1 s!1 s00 s00)) (* (- 432) (* r!2 r!2 r!2 s!1 x!0 s00 r00 r00)) (* 324 (* r!2 r!2 r!2 s00)) (* 8 (* r!2 s!1 s!1 s00 s00)) (* 54 (* x!0 x!0 s00 r00 r00)) (* 108 (* r!2 r!2 r!2 r!2 s00)) (* 36 (* r!2 r!2 r!2 s!1 s00)) (* 18 (* r00 ?x5327 ?x610 ?x610 ?x610 ?x3610 ?x3610)) (* 9 (* r00 s00 ?x5327 ?x610 ?x610 ?x3610 ?x3610)) (* 3 (* ?x5327 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 9) (* s00 ?x5327 ?x5327 ?x5327 ?x3610 ?x3610)) (* 6 (* r00 r00 ?x5327 ?x5327 ?x3610 ?x3610 ?x3610)) (* (- 2) (* s00 ?x5327 ?x5327 ?x3610 ?x3610 ?x3610)) (* 4 (* r!2 r!2 s!1 s!1 s00 s00)) (* (- 9) (* ?x5327 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610)) (* 6 (* r00 s00 ?x5327 ?x5327 ?x5327 ?x3610 ?x3610)) (* (- 6) (* r00 s00 ?x5327 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 3) (* s00 ?x5327 ?x610 ?x610 ?x3610 ?x3610)) (* 6 (* r00 r00 s00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* 18 (* ?x5327 ?x5327 ?x610 ?x610 ?x610 ?x3610 ?x3610)) (* 18 (* ?x5327 ?x610 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 6) (* r00 r00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610)) (* 2 (* ?x5327 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610)) (* (- 4) (* s00 s00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 18) (* r00 x00 ?x5327 ?x610 ?x610 ?x3610 ?x3610)) (* 6 (* r!2 s!1 s!1 s00)) (* 3 (* r!2 r!2 s!1 s!1 s00)) (* 2 (* ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610 ?x3610)) (* (- 3) (* s00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 864) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* 36 (* s!1 x!0 x!0 s00 r00 r00)) (* 18 (* s!1 s!1 r00 x00)) (* 36 (* r!2 s!1 s!1 r00 x00)) (* (- 144) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* 18 (* r!2 r!2 s!1 s!1 r00 x00)) (* 270 (* r!2 x!0 x!0 s00 r00 r00)) (* 216 (* r!2 r!2 r!2 s!1 s!1 s00 r00 r00)) (* 432 (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* 18 (* x00 ?x5327 ?x5327 ?x5327 ?x3610 ?x3610)) (* (- 6) (* r00 ?x5327 ?x5327 ?x5327 ?x3610 ?x3610 ?x3610)) (* (- 4) (* s00 s00 ?x5327 ?x610 ?x610 ?x3610 ?x3610)) (* 216 (* r!2 r!2 r!2 x!0 x!0 s00 r00 r00)) (* (- 6) (* r00 s00 ?x5327 ?x5327 ?x610 ?x610 ?x3610 ?x3610)) (* 36 (* s!1 s!1 s!1 s00 r00 r00)) (* 6 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 108) (* s!1 x!0 s00 r00 r00)) (* 108 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 6 (* r!2 s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 540) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 72) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 12) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 12) (* r!2 s!1 s!1 s!1 x!0 s00 r00 r00)) (* 24 (* s!1 s00 s00)) (* 108 (* s!1 r00 x00)) (* 432 (* r!2 s!1 r00 x00)) (* 432 (* r!2 r!2 r!2 s00 s00)) (* (- 180) (* r!2 r!2 s!1 s00 r00 r00)) (* (- 36) (* s!1 s00 r00 r00)) (* (- 3) (* ?x5327 ?x5327 ?x3610 ?x3610 ?x3610)) (* 540 (* r!2 r!2 s!1 r00 x00)) (* (- 2) (* ?x5327 ?x5327 ?x3610 ?x3610 ?x3610 ?x3610)) (* 1944 (* r!2 r!2 r!2 r00 x00)) (* 120 (* r!2 r!2 s!1 s00 s00)) (* 108 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* 648 (* r!2 r!2 r!2 r!2 r00 x00)) (* (- 144) (* r!2 s!1 s00 r00 r00)) (* (- 702) (* r!2 r!2 s00 r00 r00)) (* 72 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 648) (* r!2 r!2 r!2 s00 r00 r00)) (* (- 324) (* r!2 s00 r00 r00)) (* 216 (* r!2 r!2 r!2 s!1 r00 x00)) (* (- 216) (* r!2 r!2 r!2 r!2 s00 r00 r00)) (* (- 72) (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* 72 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* 426 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 258 (* r!2 s!1 s!1 s00 r00 r00)) (* 48 (* s!1 s!1 s00 r00 r00)) (* (- 216) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 108) (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 1053) (* r!2 r!2 s00 r00)) (* (- 972) (* r!2 r!2 r!2 s00 r00)) (* 6 (* r!2 s!1 s!1 x!0 x!0 s00 r00 r00)) (* 6 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* 2 (* s00 ?x5327 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 9) (* r00 ?x5327 ?x610 ?x610 ?x3610 ?x3610 ?x3610)) (* (- 324) (* r!2 r!2 r!2 r!2 s00 r00)) (* (- 216) (* r!2 s!1 s00 r00)) (* (- 270) (* r!2 r!2 s!1 s00 r00)) (* (- 9) (* s!1 s!1 s00 r00)) (* (- 18) (* r!2 s!1 s!1 s00 r00)) (* (- 9) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 18) (* r00 ?x5327 ?x5327 ?x610 ?x3610 ?x3610)) (* 3 (* ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610)) (* 2106 (* r!2 r!2 r00 x00)) (* 2 (* s00 ?x610 ?x610 ?x610 ?x3610 ?x3610 ?x3610 ?x3610)) (* (- 6) (* r00 r00 ?x5327 ?x610 ?x610 ?x3610 ?x3610 ?x3610)))))
 (let ((?x1406 (* (- 108) ?x1376)))
 (let ((?x1405 (* (- 16) ?x1214)))
 (let ((?x1086 (* s00 r00 r00 r00)))
 (let ((?x1401 (* (- 216) ?x1086)))
 (let ((?x913 (* 432 ?x912)))
 (let ((?x1159 (* 108 ?x835)))
 (let ((?x761 (* s00 s00 r00 r00)))
 (let ((?x762 (* 36 ?x761)))
 (let ((?x698 (* s00 s00 r00)))
 (let ((?x1042 (* 108 ?x698)))
 (let ((?x1030 (* 36 ?x677)))
 (let ((?x1395 (* (- 51) ?x621)))
 (let ((?x3979 (* s!1 r00 r00)))
 (let ((?x1958 (* (- 36) ?x3979)))
 (let ((?x1392 (* (- 108) ?x552)))
 (let ((?x543 (* s00 r00 x00)))
 (let ((?x1391 (* (- 216) ?x543)))
 (let ((?x550 (* 54 ?x456)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x3216 (* 9 s!1)))
 (let ((?x778 (+ ?x3216 ?x1017 ?x550 ?x1391 ?x1392 (* (- 15) (* s!1 s!1)) ?x1958 ?x1395 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1030 ?x1042 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x762 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1159 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x913 (* 12 (* s!1 s!1 s00)) ?x1401 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1405 (* 216 (* x!0 x00)) ?x1406)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x726 (* (- 2) ?x698)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x594 (* 24 ?x456)))
 (let ((?x4673 (+ ?x3216 ?x1017 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x594 ?x581 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1958 ?x946 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1030 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x726 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x836 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x920 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x678 (* 6 ?x677)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x571 (* 9 ?x456)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x637 (+ (* 3 s!1) ?x408 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x571 ?x566 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x3979) ?x634 (* 18 (* x!0 r00)) ?x678 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3972 (+ ?x5390 ?x3408 ?x1664 ?x44 ?x530 ?x531 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x534 ?x500)))
 (let (($x5385 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x331)) 0)))
 (let (($x816 (and $x5385 (= ?x3972 0) (= ?x637 0) (= ?x4673 0) (= ?x778 0) (not (= ?x1247 0)))))
 (let (($x5228 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1413 (+ 3 ?x211 s)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x1419 (+ ?x310 x)))
 (let ((?x1582 (+ 1 r)))
 (let ((?x5299 (* (- 9) (* r r s s s00 r00))))
 (let ((?x5402 (* (- 18) (* r s s s00 r00))))
 (let ((?x5265 (* (- 9) (* s s s00 r00))))
 (let ((?x5399 (* (- 270) (* r r s s00 r00))))
 (let ((?x5397 (* (- 216) (* r s s00 r00))))
 (let ((?x5193 (* (- 324) (* r r r r s00 r00))))
 (let ((?x5394 (* (- 972) (* r r r s00 r00))))
 (let ((?x5396 (* (- 1053) (* r r s00 r00))))
 (let ((?x5400 (* (- 108) (* r r r s s00 r00))))
 (let ((?x4908 (* (- 72) (* r r r s s00 r00 r00))))
 (let ((?x4769 (* (- 216) (* r r r r s00 r00 r00))))
 (let ((?x4907 (* (- 324) (* r s00 r00 r00))))
 (let ((?x4906 (* (- 648) (* r r r s00 r00 r00))))
 (let ((?x4905 (* (- 702) (* r r s00 r00 r00))))
 (let ((?x4903 (* (- 144) (* r s s00 r00 r00))))
 (let ((?x4512 (* (- 2) (* ?x1582 ?x1582 ?x1413 ?x1413 ?x1413 ?x1413))))
 (let ((?x4442 (* (- 3) (* ?x1582 ?x1582 ?x1413 ?x1413 ?x1413))))
 (let ((?x4902 (* (- 36) (* s s00 r00 r00))))
 (let ((?x4901 (* (- 180) (* r r s s00 r00 r00))))
 (let ((?x2868 (* 3 (* r r s s s00))))
 (let ((?x970 (* s s s00)))
 (let ((?x2864 (* 3 ?x970)))
 (let ((?x809 (* s s00 r00)))
 (let ((?x5401 (* (- 54) ?x809)))
 (let ((?x756 (* r s00 r00)))
 (let ((?x5404 (* (- 486) ?x756)))
 (let ((?x677 (* s00 r00 r00)))
 (let ((?x4858 (* (- 54) ?x677)))
 (let ((?x621 (* s00 s00)))
 (let ((?x4247 (* 36 ?x621)))
 (let ((?x552 (* r00 x00)))
 (let ((?x4332 (* 162 ?x552)))
 (let ((?x456 (* s00 r00)))
 (let ((?x5387 (* (- 81) ?x456)))
 (let ((?x2942 (* 27 s00)))
 (let ((?x753 (+ ?x2942 (* (- 18) (* x00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 6 (* r00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 162 (* r s00)) ?x5387 (* 9 (* s00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) ?x4332 ?x4247 ?x4858 (* 18 (* s s00)) ?x5404 (* (- 18) (* r00 x00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 18) (* x00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) ?x5401 (* 96 (* r s s00 s00)) (* 216 (* r s00 s00)) (* 144 (* r r r r s00 s00)) (* (- 18) (* ?x1582 ?x1582 ?x1582 ?x1419 ?x1413 ?x1413)) (* 72 (* r s s00)) ?x2864 (* 972 (* r r00 x00)) (* (- 9) (* r00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 6 (* r00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 9 (* ?x1582 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* 18 (* r00 ?x1419 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 9 (* s00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 9) (* ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 9 (* r00 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* 48 (* r r r s s00 s00)) (* 351 (* r r s00)) (* 9 (* r00 s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 90 (* r r s s00)) (* 468 (* r r s00 s00)) (* 4 (* s s s00 s00)) (* (- 432) (* r r r s x s00 r00 r00)) (* 324 (* r r r s00)) (* 8 (* r s s s00 s00)) (* 54 (* x x s00 r00 r00)) (* 108 (* r r r r s00)) (* 36 (* r r r s s00)) (* 18 (* r00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413)) (* 9 (* r00 s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 3 (* ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 9) (* s00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413)) (* 6 (* r00 r00 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* (- 2) (* s00 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* 4 (* r r s s s00 s00)) (* (- 9) (* ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 6 (* r00 s00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413)) (* (- 6) (* r00 s00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 3) (* s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 6 (* r00 r00 s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 18 (* ?x1582 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413)) (* 18 (* ?x1582 ?x1419 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 6) (* r00 r00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 2 (* ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* (- 4) (* s00 s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 18) (* r00 x00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 6 (* r s s s00)) ?x2868 (* 2 (* ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413 ?x1413)) (* (- 3) (* s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 864) (* r r s x s00 r00 r00)) (* 36 (* s x x s00 r00 r00)) (* 18 (* s s r00 x00)) (* 36 (* r s s r00 x00)) (* (- 144) (* r r s s x s00 r00 r00)) (* 18 (* r r s s r00 x00)) (* 270 (* r x x s00 r00 r00)) (* 216 (* r r r s s s00 r00 r00)) (* 432 (* r r x x s00 r00 r00)) (* 18 (* x00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413)) (* (- 6) (* r00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* (- 4) (* s00 s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 216 (* r r r x x s00 r00 r00)) (* (- 6) (* r00 s00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 36 (* s s s s00 r00 r00)) (* 6 (* s s s s s00 r00 r00)) (* (- 108) (* s x s00 r00 r00)) (* 108 (* r s s s s00 r00 r00)) (* 6 (* r s s s s s00 r00 r00)) (* (- 540) (* r s x s00 r00 r00)) (* (- 72) (* s s x s00 r00 r00)) (* (- 12) (* s s s x s00 r00 r00)) (* (- 12) (* r s s s x s00 r00 r00)) (* 24 (* s s00 s00)) (* 108 (* s r00 x00)) (* 432 (* r s r00 x00)) (* 432 (* r r r s00 s00)) ?x4901 ?x4902 ?x4442 (* 540 (* r r s r00 x00)) ?x4512 (* 1944 (* r r r r00 x00)) (* 120 (* r r s s00 s00)) (* 108 (* r s x x s00 r00 r00)) (* 648 (* r r r r r00 x00)) ?x4903 ?x4905 (* 72 (* r r s x x s00 r00 r00)) ?x4906 ?x4907 (* 216 (* r r r s r00 x00)) ?x4769 ?x4908 (* 72 (* r r s s s s00 r00 r00)) (* 426 (* r r s s s00 r00 r00)) (* 258 (* r s s s00 r00 r00)) (* 48 (* s s s00 r00 r00)) (* (- 216) (* r s s x s00 r00 r00)) ?x5400 ?x5396 ?x5394 (* 6 (* r s s x x s00 r00 r00)) (* 6 (* s s x x s00 r00 r00)) (* 2 (* s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 9) (* r00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) ?x5193 ?x5397 ?x5399 ?x5265 ?x5402 ?x5299 (* (- 18) (* r00 ?x1582 ?x1582 ?x1419 ?x1413 ?x1413)) (* 3 (* ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 2106 (* r r r00 x00)) (* 2 (* s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* (- 6) (* r00 r00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x1406 (* (- 108) ?x1376)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x1405 (* (- 16) ?x1214)))
 (let ((?x1086 (* s00 r00 r00 r00)))
 (let ((?x1401 (* (- 216) ?x1086)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x913 (* 432 ?x912)))
 (let ((?x835 (* s00 x00)))
 (let ((?x1159 (* 108 ?x835)))
 (let ((?x761 (* s00 s00 r00 r00)))
 (let ((?x762 (* 36 ?x761)))
 (let ((?x698 (* s00 s00 r00)))
 (let ((?x1042 (* 108 ?x698)))
 (let ((?x1030 (* 36 ?x677)))
 (let ((?x1395 (* (- 51) ?x621)))
 (let ((?x595 (* s r00 r00)))
 (let ((?x894 (* (- 36) ?x595)))
 (let ((?x1392 (* (- 108) ?x552)))
 (let ((?x543 (* s00 r00 x00)))
 (let ((?x1391 (* (- 216) ?x543)))
 (let ((?x550 (* 54 ?x456)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1407 (+ ?x143 ?x1017 ?x550 ?x1391 ?x1392 (* (- 15) (* s s)) ?x894 ?x1395 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1030 ?x1042 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x762 (* (- 108) ?x809) (* 4 (* s s s)) ?x1159 (* 108 (* s x)) (* (- 108) (* x x)) ?x913 (* 12 ?x970) ?x1401 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1405 (* 216 (* x x00)) ?x1406)))
 (let (($x1408 (= ?x1407 0)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x726 (* (- 2) ?x698)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x575 (* s s)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x594 (* 24 ?x456)))
 (let ((?x1109 (+ ?x143 ?x1017 (* (- 24) (* r s)) (* 24 (* r s00)) ?x594 ?x581 ?x599 (* 54 (* r x)) (* 36 (* r x r00)) ?x894 ?x946 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1030 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x726 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) ?x809) ?x836 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x920 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1114 (= ?x1109 0)))
 (let ((?x678 (* 6 ?x677)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x571 (* 9 ?x456)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x775 (+ ?x47 ?x408 (* (- 9) (* r s)) (* 9 (* r s00)) ?x571 ?x566 ?x576 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x595) ?x634 (* 18 (* x r00)) ?x678 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) ?x756))))
 (let (($x782 (= ?x775 0)))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x534 (* (- 6) ?x456)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x529 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x535 (+ ?x43 ?x529 ?x56 ?x44 ?x530 ?x531 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x534 ?x500)))
 (let (($x536 (= ?x535 0)))
 (let ((?x331 (* r00 r00)))
 (let ((?x332 (* 3 ?x331)))
 (let ((?x361 (* (- 1) s00)))
 (let (($x364 (= (+ s ?x361 (* (- 3) (* r r)) ?x332) 0)))
 (and $x364 $x536 $x782 $x1114 $x1408 (not (= ?x753 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2151 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x3211 (+ 3 s ?x211)))
 (let ((?x1582 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x3179 (+ x ?x310)))
 (let ((?x5129 (+ (* 2 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 18 (* x00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 9) (* r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 2 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 3 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 18 (* r00 x00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 3 (* s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 4 (* s00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 3 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* 6 (* r00 r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 2) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 2) (* s00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 9) (* s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 6) (* r00 r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* ?x1582 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)))))
 (let (($x3217 (not (= ?x5129 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x4953 (* 108 ?x1376)))
 (let ((?x5109 (* (- 9) s)))
 (let ((?x3480 (* r00 r00 s00)))
 (let ((?x2934 (* (- 36) ?x3480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x5006 (* 51 ?x621)))
 (let ((?x3279 (* r00 r00 s)))
 (let ((?x3673 (* 36 ?x3279)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x3403 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3927 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x3717 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x1724 (* 108 ?x552)))
 (let ((?x5039 (+ (* 216 (* r00 s00 x00)) ?x1724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3717 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3927 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3403 (* (- 108) (* x s)) ?x3673 ?x5006 (* (- 108) (* r00 x)) ?x137 ?x2934 ?x5109 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4953)))
 (let (($x5035 (= ?x5039 0)))
 (let ((?x4846 (* 15 ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x4845 (* 36 ?x907)))
 (let ((?x4832 (* (- 6) ?x835)))
 (let ((?x2938 (* 54 ?x552)))
 (let ((?x3974 (+ (* 24 (* s r)) ?x2938 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4832 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3673 ?x4845 ?x4846 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2934 (* 54 (* x00 r)) ?x5109 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x529 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3584 (* 4 ?x621)))
 (let ((?x3353 (* 18 ?x552)))
 (let ((?x2406 (+ (* 9 (* s r)) ?x3353 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3279) ?x3584 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3480) (* 18 (* x00 r)) ?x529 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3582 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x529 ?x530 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x531 ?x500)))
 (let (($x3201 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x3201 (= ?x3582 0) (= ?x2406 0) (= ?x3974 0) $x5035 $x3217))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5229 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1413 (+ 3 ?x211 s)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x1419 (+ ?x310 x)))
 (let ((?x1582 (+ 1 r)))
 (let ((?x5299 (* (- 9) (* r r s s s00 r00))))
 (let ((?x5402 (* (- 18) (* r s s s00 r00))))
 (let ((?x5265 (* (- 9) (* s s s00 r00))))
 (let ((?x5399 (* (- 270) (* r r s s00 r00))))
 (let ((?x5397 (* (- 216) (* r s s00 r00))))
 (let ((?x5193 (* (- 324) (* r r r r s00 r00))))
 (let ((?x5394 (* (- 972) (* r r r s00 r00))))
 (let ((?x5396 (* (- 1053) (* r r s00 r00))))
 (let ((?x5400 (* (- 108) (* r r r s s00 r00))))
 (let ((?x4908 (* (- 72) (* r r r s s00 r00 r00))))
 (let ((?x4769 (* (- 216) (* r r r r s00 r00 r00))))
 (let ((?x4907 (* (- 324) (* r s00 r00 r00))))
 (let ((?x4906 (* (- 648) (* r r r s00 r00 r00))))
 (let ((?x4905 (* (- 702) (* r r s00 r00 r00))))
 (let ((?x4903 (* (- 144) (* r s s00 r00 r00))))
 (let ((?x4512 (* (- 2) (* ?x1582 ?x1582 ?x1413 ?x1413 ?x1413 ?x1413))))
 (let ((?x4442 (* (- 3) (* ?x1582 ?x1582 ?x1413 ?x1413 ?x1413))))
 (let ((?x4902 (* (- 36) (* s s00 r00 r00))))
 (let ((?x4901 (* (- 180) (* r r s s00 r00 r00))))
 (let ((?x2868 (* 3 (* r r s s s00))))
 (let ((?x970 (* s s s00)))
 (let ((?x2864 (* 3 ?x970)))
 (let ((?x809 (* s s00 r00)))
 (let ((?x5401 (* (- 54) ?x809)))
 (let ((?x756 (* r s00 r00)))
 (let ((?x5404 (* (- 486) ?x756)))
 (let ((?x677 (* s00 r00 r00)))
 (let ((?x4858 (* (- 54) ?x677)))
 (let ((?x621 (* s00 s00)))
 (let ((?x4247 (* 36 ?x621)))
 (let ((?x552 (* r00 x00)))
 (let ((?x4332 (* 162 ?x552)))
 (let ((?x456 (* s00 r00)))
 (let ((?x5387 (* (- 81) ?x456)))
 (let ((?x2942 (* 27 s00)))
 (let ((?x753 (+ ?x2942 (* (- 18) (* x00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 6 (* r00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 162 (* r s00)) ?x5387 (* 9 (* s00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) ?x4332 ?x4247 ?x4858 (* 18 (* s s00)) ?x5404 (* (- 18) (* r00 x00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 18) (* x00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) ?x5401 (* 96 (* r s s00 s00)) (* 216 (* r s00 s00)) (* 144 (* r r r r s00 s00)) (* (- 18) (* ?x1582 ?x1582 ?x1582 ?x1419 ?x1413 ?x1413)) (* 72 (* r s s00)) ?x2864 (* 972 (* r r00 x00)) (* (- 9) (* r00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 6 (* r00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 9 (* ?x1582 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* 18 (* r00 ?x1419 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 9 (* s00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 9) (* ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 9 (* r00 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* 48 (* r r r s s00 s00)) (* 351 (* r r s00)) (* 9 (* r00 s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 90 (* r r s s00)) (* 468 (* r r s00 s00)) (* 4 (* s s s00 s00)) (* (- 432) (* r r r s x s00 r00 r00)) (* 324 (* r r r s00)) (* 8 (* r s s s00 s00)) (* 54 (* x x s00 r00 r00)) (* 108 (* r r r r s00)) (* 36 (* r r r s s00)) (* 18 (* r00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413)) (* 9 (* r00 s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 3 (* ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 9) (* s00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413)) (* 6 (* r00 r00 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* (- 2) (* s00 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* 4 (* r r s s s00 s00)) (* (- 9) (* ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 6 (* r00 s00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413)) (* (- 6) (* r00 s00 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 3) (* s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 6 (* r00 r00 s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* 18 (* ?x1582 ?x1582 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413)) (* 18 (* ?x1582 ?x1419 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 6) (* r00 r00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 2 (* ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* (- 4) (* s00 s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 18) (* r00 x00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 6 (* r s s s00)) ?x2868 (* 2 (* ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413 ?x1413)) (* (- 3) (* s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 864) (* r r s x s00 r00 r00)) (* 36 (* s x x s00 r00 r00)) (* 18 (* s s r00 x00)) (* 36 (* r s s r00 x00)) (* (- 144) (* r r s s x s00 r00 r00)) (* 18 (* r r s s r00 x00)) (* 270 (* r x x s00 r00 r00)) (* 216 (* r r r s s s00 r00 r00)) (* 432 (* r r x x s00 r00 r00)) (* 18 (* x00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413)) (* (- 6) (* r00 ?x1582 ?x1582 ?x1582 ?x1413 ?x1413 ?x1413)) (* (- 4) (* s00 s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 216 (* r r r x x s00 r00 r00)) (* (- 6) (* r00 s00 ?x1582 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413)) (* 36 (* s s s s00 r00 r00)) (* 6 (* s s s s s00 r00 r00)) (* (- 108) (* s x s00 r00 r00)) (* 108 (* r s s s s00 r00 r00)) (* 6 (* r s s s s s00 r00 r00)) (* (- 540) (* r s x s00 r00 r00)) (* (- 72) (* s s x s00 r00 r00)) (* (- 12) (* s s s x s00 r00 r00)) (* (- 12) (* r s s s x s00 r00 r00)) (* 24 (* s s00 s00)) (* 108 (* s r00 x00)) (* 432 (* r s r00 x00)) (* 432 (* r r r s00 s00)) ?x4901 ?x4902 ?x4442 (* 540 (* r r s r00 x00)) ?x4512 (* 1944 (* r r r r00 x00)) (* 120 (* r r s s00 s00)) (* 108 (* r s x x s00 r00 r00)) (* 648 (* r r r r r00 x00)) ?x4903 ?x4905 (* 72 (* r r s x x s00 r00 r00)) ?x4906 ?x4907 (* 216 (* r r r s r00 x00)) ?x4769 ?x4908 (* 72 (* r r s s s s00 r00 r00)) (* 426 (* r r s s s00 r00 r00)) (* 258 (* r s s s00 r00 r00)) (* 48 (* s s s00 r00 r00)) (* (- 216) (* r s s x s00 r00 r00)) ?x5400 ?x5396 ?x5394 (* 6 (* r s s x x s00 r00 r00)) (* 6 (* s s x x s00 r00 r00)) (* 2 (* s00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) (* (- 9) (* r00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)) ?x5193 ?x5397 ?x5399 ?x5265 ?x5402 ?x5299 (* (- 18) (* r00 ?x1582 ?x1582 ?x1419 ?x1413 ?x1413)) (* 3 (* ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* 2106 (* r r r00 x00)) (* 2 (* s00 ?x1419 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413 ?x1413)) (* (- 6) (* r00 r00 ?x1582 ?x1419 ?x1419 ?x1413 ?x1413 ?x1413)))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x1406 (* (- 108) ?x1376)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x1405 (* (- 16) ?x1214)))
 (let ((?x1086 (* s00 r00 r00 r00)))
 (let ((?x1401 (* (- 216) ?x1086)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x913 (* 432 ?x912)))
 (let ((?x835 (* s00 x00)))
 (let ((?x1159 (* 108 ?x835)))
 (let ((?x761 (* s00 s00 r00 r00)))
 (let ((?x762 (* 36 ?x761)))
 (let ((?x698 (* s00 s00 r00)))
 (let ((?x1042 (* 108 ?x698)))
 (let ((?x1030 (* 36 ?x677)))
 (let ((?x1395 (* (- 51) ?x621)))
 (let ((?x595 (* s r00 r00)))
 (let ((?x894 (* (- 36) ?x595)))
 (let ((?x1392 (* (- 108) ?x552)))
 (let ((?x543 (* s00 r00 x00)))
 (let ((?x1391 (* (- 216) ?x543)))
 (let ((?x550 (* 54 ?x456)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1407 (+ ?x143 ?x1017 ?x550 ?x1391 ?x1392 (* (- 15) (* s s)) ?x894 ?x1395 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1030 ?x1042 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x762 (* (- 108) ?x809) (* 4 (* s s s)) ?x1159 (* 108 (* s x)) (* (- 108) (* x x)) ?x913 (* 12 ?x970) ?x1401 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1405 (* 216 (* x x00)) ?x1406)))
 (let (($x1408 (= ?x1407 0)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x726 (* (- 2) ?x698)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x575 (* s s)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x594 (* 24 ?x456)))
 (let ((?x1109 (+ ?x143 ?x1017 (* (- 24) (* r s)) (* 24 (* r s00)) ?x594 ?x581 ?x599 (* 54 (* r x)) (* 36 (* r x r00)) ?x894 ?x946 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1030 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x726 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) ?x809) ?x836 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x920 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1114 (= ?x1109 0)))
 (let ((?x678 (* 6 ?x677)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x571 (* 9 ?x456)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x775 (+ ?x47 ?x408 (* (- 9) (* r s)) (* 9 (* r s00)) ?x571 ?x566 ?x576 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x595) ?x634 (* 18 (* x r00)) ?x678 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) ?x756))))
 (let (($x782 (= ?x775 0)))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x534 (* (- 6) ?x456)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x529 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x535 (+ ?x43 ?x529 ?x56 ?x44 ?x530 ?x531 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x534 ?x500)))
 (let (($x536 (= ?x535 0)))
 (let ((?x331 (* r00 r00)))
 (let ((?x332 (* 3 ?x331)))
 (let ((?x361 (* (- 1) s00)))
 (let (($x364 (= (+ s ?x361 (* (- 3) (* r r)) ?x332) 0)))
 (let (($x746 (and $x364 $x536 $x782 $x1114 $x1408 (not (= ?x753 0)))))
 (let ((?x3211 (+ 3 s ?x211)))
 (let ((?x2980 (* 2 (* s00 ?x1582 (+ x ?x310) (+ x ?x310) ?x3211 ?x3211 ?x3211))))
 (let ((?x3179 (+ x ?x310)))
 (let ((?x5129 (+ (* 2 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 18 (* x00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 9) (* r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 2 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 3 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 18 (* r00 x00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 3 (* s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 4 (* s00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 3 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* 6 (* r00 r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 2) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 2) (* s00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 9) (* s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 6) (* r00 r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* ?x1582 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) ?x2980 (* 9 (* r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)))))
 (let (($x3217 (not (= ?x5129 0))))
 (let ((?x4953 (* 108 ?x1376)))
 (let ((?x5109 (* (- 9) s)))
 (let ((?x3480 (* r00 r00 s00)))
 (let ((?x2934 (* (- 36) ?x3480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5006 (* 51 ?x621)))
 (let ((?x3279 (* r00 r00 s)))
 (let ((?x3673 (* 36 ?x3279)))
 (let ((?x3403 (* 16 ?x1214)))
 (let ((?x3927 (* (- 108) ?x835)))
 (let ((?x3717 (* (- 432) ?x912)))
 (let ((?x1724 (* 108 ?x552)))
 (let ((?x5039 (+ (* 216 (* r00 s00 x00)) ?x1724 (* (- 54) (* r00 s00)) (* 15 ?x575) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3717 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3927 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3403 (* (- 108) (* x s)) ?x3673 ?x5006 (* (- 108) (* r00 x)) ?x137 ?x2934 ?x5109 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4953)))
 (let (($x5035 (= ?x5039 0)))
 (let ((?x4846 (* 15 ?x621)))
 (let ((?x4845 (* 36 ?x907)))
 (let ((?x4832 (* (- 6) ?x835)))
 (let ((?x2938 (* 54 ?x552)))
 (let ((?x3974 (+ (* 24 (* s r)) ?x2938 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x575) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4832 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3673 ?x4845 ?x4846 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2934 (* 54 (* x00 r)) ?x5109 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3584 (* 4 ?x621)))
 (let ((?x3353 (* 18 ?x552)))
 (let ((?x2406 (+ (* 9 (* s r)) ?x3353 (* (- 9) (* r00 s00)) (* (- 2) ?x575) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3279) ?x3584 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3480) (* 18 (* x00 r)) ?x529 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x3582 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x529 ?x530 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x531 ?x500)))
 (let (($x3201 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) ?x331)) 0)))
 (let (($x3960 (and $x3201 (= ?x3582 0) (= ?x2406 0) (= ?x3974 0) $x5035 $x3217)))
 (rewrite (= $x3960 $x746))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3234 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x3211 (+ 3 s ?x211)))
 (let ((?x1582 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x3179 (+ x ?x310)))
 (let ((?x5129 (+ (* 2 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 18 (* x00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 9) (* r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 2 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 3 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 18 (* r00 x00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 3 (* s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 4 (* s00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 3 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* 6 (* r00 r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 2) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 2) (* s00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 9) (* s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 6) (* r00 r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* ?x1582 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)))))
 (let (($x3217 (not (= ?x5129 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x4953 (* 108 ?x1376)))
 (let ((?x5109 (* (- 9) s)))
 (let ((?x3480 (* r00 r00 s00)))
 (let ((?x2934 (* (- 36) ?x3480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x5006 (* 51 ?x621)))
 (let ((?x3279 (* r00 r00 s)))
 (let ((?x3673 (* 36 ?x3279)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x3403 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3927 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x3717 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x1724 (* 108 ?x552)))
 (let ((?x5039 (+ (* 216 (* r00 s00 x00)) ?x1724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3717 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3927 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3403 (* (- 108) (* x s)) ?x3673 ?x5006 (* (- 108) (* r00 x)) ?x137 ?x2934 ?x5109 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4953)))
 (let (($x5035 (= ?x5039 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x575 (* s s)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x3873 (+ (* (- 24) (* s r)) ?x581 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x599 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x836 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3279) ?x920 ?x946 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1017 (* 36 ?x3480) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x3576 (+ (* (- 9) (* s r)) ?x566 (* 9 (* r00 s00)) ?x576 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3279) ?x634 (* 18 (* r00 x)) ?x408 (* 6 ?x3480) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3417 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x408 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3201 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x3201 (= ?x3417 0) (= ?x3576 0) (= ?x3873 0) $x5035 $x3217)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2157 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x3211 (+ 3 s ?x211)))
 (let ((?x1582 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x3179 (+ x ?x310)))
 (let ((?x5129 (+ (* 2 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 18 (* x00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 9) (* r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 2 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 3 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 18 (* r00 x00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 3 (* s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 4 (* s00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 3 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* 6 (* r00 r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 2) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 2) (* s00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 9) (* s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 6) (* r00 r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* ?x1582 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)))))
 (let (($x3217 (not (= ?x5129 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x4953 (* 108 ?x1376)))
 (let ((?x5109 (* (- 9) s)))
 (let ((?x3480 (* r00 r00 s00)))
 (let ((?x2934 (* (- 36) ?x3480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x5006 (* 51 ?x621)))
 (let ((?x3279 (* r00 r00 s)))
 (let ((?x3673 (* 36 ?x3279)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x3403 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3927 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x3717 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x1724 (* 108 ?x552)))
 (let ((?x5039 (+ (* 216 (* r00 s00 x00)) ?x1724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3717 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3927 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3403 (* (- 108) (* x s)) ?x3673 ?x5006 (* (- 108) (* r00 x)) ?x137 ?x2934 ?x5109 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4953)))
 (let (($x5035 (= ?x5039 0)))
 (let ((?x4846 (* 15 ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x4845 (* 36 ?x907)))
 (let ((?x4832 (* (- 6) ?x835)))
 (let ((?x2938 (* 54 ?x552)))
 (let ((?x3974 (+ (* 24 (* s r)) ?x2938 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4832 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3673 ?x4845 ?x4846 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2934 (* 54 (* x00 r)) ?x5109 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x529 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3584 (* 4 ?x621)))
 (let ((?x3353 (* 18 ?x552)))
 (let ((?x2406 (+ (* 9 (* s r)) ?x3353 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x3279) ?x3584 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3480) (* 18 (* x00 r)) ?x529 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3582 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x529 ?x530 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x531 ?x500)))
 (let (($x3201 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3960 (and $x3201 (= ?x3582 0) (= ?x2406 0) (= ?x3974 0) $x5035 $x3217)))
 (let ((?x143 (* 9 s)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x575 (* s s)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x3873 (+ (* (- 24) (* s r)) ?x581 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x599 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x836 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3279) ?x920 ?x946 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1017 (* 36 ?x3480) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x3576 (+ (* (- 9) (* s r)) ?x566 (* 9 (* r00 s00)) ?x576 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3279) ?x634 (* 18 (* r00 x)) ?x408 (* 6 ?x3480) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3417 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x408 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x499))))
 (let (($x3432 (and $x3201 (= ?x3417 0) (= ?x3576 0) (= ?x3873 0) $x5035 $x3217)))
 (rewrite (= $x3432 $x3960)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x307 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x217 (+ r 1)))
 (let ((?x213 (- x s)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x222 (+ (- ?x219 (* 6 ?x217 ?x217 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 18 ?x217 ?x217 ?x217 ?x212 ?x212 x00))))
 (let ((?x226 (+ (- ?x222 (* 9 ?x217 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x230 (- (- ?x226 (* 6 ?x217 ?x217 ?x217 r00 ?x212 ?x212 ?x212)) (* 4 ?x217 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let ((?x234 (- (+ ?x230 (* 2 ?x217 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 9 ?x217 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x238 (- (+ ?x234 (* 6 ?x217 r00 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 18 ?x217 ?x217 r00 ?x212 ?x212 ?x213))))
 (let ((?x241 (+ ?x238 (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x247 (+ (- ?x241 (* 6 ?x217 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 9 ?x217 ?x217 ?x217 ?x212 ?x212 ?x212) (* 18 ?x217 ?x217 r00 ?x212 ?x212 x00) (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x253 (+ (- ?x247 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 3 ?x217 ?x217 ?x212 ?x212 s00) (* 18 ?x217 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x217 r00 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x257 (- (- ?x253 (* 18 ?x217 r00 ?x212 ?x212 ?x213 ?x213 x00)) (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x265 (+ ?x257 (* 6 ?x217 ?x217 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 4 ?x217 ?x217 ?x212 ?x212 s00 s00) (* 3 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213) (* 6 ?x217 ?x217 ?x217 r00 ?x212 ?x212 s00) (* 6 ?x217 ?x217 r00 r00 ?x212 ?x212 ?x212) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x217 ?x217 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x274 (- (- ?x265 (* 2 ?x217 ?x217 ?x212 ?x212 ?x212 ?x212)) (* 3 ?x217 ?x217 ?x212 ?x212 ?x212))))
 (let ((?x276 (- (- ?x274 (* 2 ?x217 ?x217 ?x212 ?x212 ?x212 s00)) (* 9 ?x217 ?x217 ?x217 ?x212 ?x212 s00))))
 (let ((?x278 (- (- ?x276 (* 6 ?x217 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 3 ?x217 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x282 (+ (- ?x278 (* 6 ?x217 ?x217 r00 r00 ?x212 ?x212 s00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x217 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x287 (- (- ?x282 (* 9 ?x217 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x291 (+ (- ?x287 (* 18 ?x217 ?x217 ?x217 ?x212 ?x212 ?x213)) (* 6 ?x217 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x217 ?x217 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x297 (- (- ?x291 (* 9 ?x217 ?x217 r00 ?x212 ?x212 s00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x299 (- (- ?x297 (* 18 ?x217 ?x217 ?x212 ?x212 ?x213 ?x213 x00)) (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x302 (+ ?x299 (* 2 ?x217 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 9 ?x217 ?x217 r00 ?x212 ?x212 ?x212))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x302 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3301 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x3211 (+ 3 s ?x211)))
 (let ((?x1582 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x3179 (+ x ?x310)))
 (let ((?x5129 (+ (* 2 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 18 (* x00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 9) (* r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* 2 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 3 (* ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* ?x1582 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 18 (* r00 x00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 6) (* r00 r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 3 (* s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* 9 (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 4) (* s00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 4 (* s00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 3 (* ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* 6 (* r00 r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* 6 (* r00 r00 s00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 18 (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 2) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211 ?x3211)) (* (- 3) (* ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 2) (* s00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)) (* (- 9) (* s00 ?x1582 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 6) (* r00 s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 3) (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 6) (* r00 r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* 18 (* r00 ?x3179 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 9) (* ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* ?x1582 ?x1582 ?x1582 ?x3179 ?x3211 ?x3211)) (* 6 (* r00 ?x1582 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 9 (* s00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 s00 ?x1582 ?x1582 ?x3211 ?x3211)) (* (- 18) (* r00 x00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* (- 18) (* x00 ?x1582 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211)) (* (- 9) (* r00 ?x3179 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211 ?x3211)) (* 2 (* s00 ?x1582 ?x3179 ?x3179 ?x3211 ?x3211 ?x3211)) (* 9 (* r00 ?x1582 ?x1582 ?x3211 ?x3211 ?x3211)))))
 (let (($x3217 (not (= ?x5129 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x4953 (* 108 ?x1376)))
 (let ((?x5109 (* (- 9) s)))
 (let ((?x3480 (* r00 r00 s00)))
 (let ((?x2934 (* (- 36) ?x3480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x5006 (* 51 ?x621)))
 (let ((?x3279 (* r00 r00 s)))
 (let ((?x3673 (* 36 ?x3279)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x3403 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3927 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x3717 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x1724 (* 108 ?x552)))
 (let ((?x5039 (+ (* 216 (* r00 s00 x00)) ?x1724 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3717 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3927 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3403 (* (- 108) (* x s)) ?x3673 ?x5006 (* (- 108) (* r00 x)) ?x137 ?x2934 ?x5109 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x4953)))
 (let (($x5035 (= ?x5039 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x575 (* s s)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x3873 (+ (* (- 24) (* s r)) ?x581 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x599 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x836 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3279) ?x920 ?x946 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1017 (* 36 ?x3480) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x3576 (+ (* (- 9) (* s r)) ?x566 (* 9 (* r00 s00)) ?x576 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3279) ?x634 (* 18 (* r00 x)) ?x408 (* 6 ?x3480) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x3417 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x408 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3201 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3432 (and $x3201 (= ?x3417 0) (= ?x3576 0) (= ?x3873 0) $x5035 $x3217)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x217 (+ r 1)))
 (let ((?x213 (- x s)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x222 (+ (- ?x219 (* 6 ?x217 ?x217 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 18 ?x217 ?x217 ?x217 ?x212 ?x212 x00))))
 (let ((?x226 (+ (- ?x222 (* 9 ?x217 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 9 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x230 (- (- ?x226 (* 6 ?x217 ?x217 ?x217 r00 ?x212 ?x212 ?x212)) (* 4 ?x217 ?x212 ?x212 s00 s00 ?x213 ?x213))))
 (let ((?x234 (- (+ ?x230 (* 2 ?x217 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 9 ?x217 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x238 (- (+ ?x234 (* 6 ?x217 r00 r00 ?x212 ?x212 s00 ?x213 ?x213)) (* 18 ?x217 ?x217 r00 ?x212 ?x212 ?x213))))
 (let ((?x241 (+ ?x238 (* 3 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 2 ?x212 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x247 (+ (- ?x241 (* 6 ?x217 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 9 ?x217 ?x217 ?x217 ?x212 ?x212 ?x212) (* 18 ?x217 ?x217 r00 ?x212 ?x212 x00) (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x253 (+ (- ?x247 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 3 ?x217 ?x217 ?x212 ?x212 s00) (* 18 ?x217 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x217 r00 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x257 (- (- ?x253 (* 18 ?x217 r00 ?x212 ?x212 ?x213 ?x213 x00)) (* 4 ?x212 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x265 (+ ?x257 (* 6 ?x217 ?x217 r00 ?x212 ?x212 ?x212 ?x213 ?x213) (* 4 ?x217 ?x217 ?x212 ?x212 s00 s00) (* 3 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213) (* 6 ?x217 ?x217 ?x217 r00 ?x212 ?x212 s00) (* 6 ?x217 ?x217 r00 r00 ?x212 ?x212 ?x212) (* 6 r00 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x217 ?x217 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x274 (- (- ?x265 (* 2 ?x217 ?x217 ?x212 ?x212 ?x212 ?x212)) (* 3 ?x217 ?x217 ?x212 ?x212 ?x212))))
 (let ((?x276 (- (- ?x274 (* 2 ?x217 ?x217 ?x212 ?x212 ?x212 s00)) (* 9 ?x217 ?x217 ?x217 ?x212 ?x212 s00))))
 (let ((?x278 (- (- ?x276 (* 6 ?x217 r00 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 3 ?x217 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x282 (+ (- ?x278 (* 6 ?x217 ?x217 r00 r00 ?x212 ?x212 s00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 9 ?x217 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x287 (- (- ?x282 (* 9 ?x217 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213)) (* 18 ?x217 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x291 (+ (- ?x287 (* 18 ?x217 ?x217 ?x217 ?x212 ?x212 ?x213)) (* 6 ?x217 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x217 ?x217 ?x212 ?x212 s00 ?x213 ?x213))))
 (let ((?x297 (- (- ?x291 (* 9 ?x217 ?x217 r00 ?x212 ?x212 s00)) (* 18 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x299 (- (- ?x297 (* 18 ?x217 ?x217 ?x212 ?x212 ?x213 ?x213 x00)) (* 9 r00 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x302 (+ ?x299 (* 2 ?x217 ?x212 ?x212 ?x212 s00 ?x213 ?x213) (* 9 ?x217 ?x217 r00 ?x212 ?x212 ?x212))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x306 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x302 0))))))
 (rewrite (= $x306 $x3432))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x308 (asserted $x307)))
 (let ((@x3348 (mp (mp @x308 (quant-intro (proof-bind ?x3301) (= $x307 $x3234)) $x3234) (rewrite (= $x3234 $x3234)) $x3234)))
 (let ((@x1753 (mp (mp @x3348 (quant-intro (proof-bind ?x2157) (= $x3234 $x2151)) $x2151) (quant-intro (proof-bind ?x5229) (= $x2151 $x5228)) $x5228)))
 (let ((@x3723 (mp (mp~ @x1753 (sk (~ $x5228 $x816)) $x816) (rewrite (= $x816 $x3771)) $x3771)))
 (let ((@x3248 (and-elim @x3723 $x4655)))
 (let ((@x832 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4655) $x3525)) @x3248 $x3525)))
 (let (($x3507 (>= ?x830 0)))
 (let ((@x5028 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4655) $x3507)) @x3248 $x3507)))
 (let (($x4249 (<= ?x3313 0)))
 (let ((@x2209 (and-elim @x3723 $x3412)))
 (let ((@x4362 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3412) $x4249)) @x2209 $x4249)))
 (let (($x1072 (>= ?x3313 0)))
 (let ((@x4647 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3412) $x1072)) @x2209 $x1072)))
 (let (($x3293 (<= ?x2425 0)))
 (let ((@x2200 (and-elim @x3723 $x2354)))
 (let ((@x4586 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2354) $x3293)) @x2200 $x3293)))
 (let (($x3294 (>= ?x2425 0)))
 (let ((@x4807 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2354) $x3294)) @x2200 $x3294)))
 (let (($x3524 (<= ?x4943 0)))
 (let ((@x1524 (and-elim @x3723 $x4941)))
 (let ((@x4643 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4941) $x3524)) @x1524 $x3524)))
 (let (($x609 (>= ?x4943 0)))
 (let ((@x4810 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4941) $x609)) @x1524 $x609)))
 (let (($x2202 (<= ?x4244 0)))
 (let ((@x2301 (and-elim @x3723 $x4243)))
 (let ((@x3549 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4243) $x2202)) @x2301 $x2202)))
 (let (($x3290 (>= ?x4244 0)))
 (let ((@x4626 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4243) $x3290)) @x2301 $x3290)))
 (let (($x3892 (not (<= ?x4541 0))))
 (let (($x3182 (>= ?x4541 0)))
 (let ((@x4066 ((_ th-lemma arith) (hypothesis (not $x3182)) @x5028 @x832 @x4807 @x4586 @x5028 @x832 @x4807 @x4586 @x4626 @x3549 @x5028 @x832 @x4807 @x4586 @x4810 @x4643 @x4807 @x4586 @x4647 @x4362 @x5028 @x832 false)))
 (let ((@x4252 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2239 $x3892 (not $x3182))) (and-elim @x3723 $x3269) (or $x3892 (not $x3182)))))
 ((_ th-lemma arith) (unit-resolution @x4252 (lemma @x4066 $x3182) $x3892) @x5028 @x832 @x4807 @x4586 @x5028 @x832 @x4807 @x4586 @x4626 @x3549 @x5028 @x832 @x4807 @x4586 @x4810 @x4643 @x4807 @x4586 @x4647 @x4362 @x5028 @x832 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1350
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      10
 :arith-tableau-max-columns 244
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.88
 :memory                    3.86
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                3974562
 :num-checks                1
 :propagations              12
 :rlimit-count              57782
 :time                      0.05
 :total-time                0.07)
