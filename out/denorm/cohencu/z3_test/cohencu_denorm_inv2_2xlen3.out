unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1180 (* (- 12) y!2)))
 (let ((?x1181 (* (- 6) z!1)))
 (let ((?x570 (* z!1 z!1)))
 (let ((?x293 (* z00 z00)))
 (let ((?x294 (* (- 1) ?x293)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x692 (+ ?x49 ?x43 ?x294 ?x570 ?x1181 ?x1180)))
 (let (($x691 (<= ?x692 0)))
 (let (($x742 (= ?x692 0)))
 (let ((?x1159 (+ x!3 y!2)))
 (let ((?x802 (+ 6 z!1)))
 (let ((?x816 (+ 1 n!0)))
 (let ((?x1160 (* ?x816 ?x816 ?x802 ?x1159 ?x1159 ?x1159)))
 (let ((?x309 (+ z!1 y!2)))
 (let ((?x891 (+ (* (- 1) (* ?x816 ?x309 ?x309 ?x309 ?x1159 ?x1159 ?x1159)) (* (- 1) (* ?x816 ?x816 ?x802 ?x802 ?x802 ?x309 ?x309 ?x1159 ?x1159 ?x1159)) ?x1160)))
 (let ((?x1122 (* (- 1) (* ?x816 ?x802 ?x802 ?x802 ?x1159 ?x1159 ?x1159))))
 (let ((?x626 (+ (* (- 1) (* ?x816 ?x816 ?x816 ?x802 ?x309 ?x309 ?x1159 ?x1159 ?x1159)) (* ?x816 ?x816 ?x816 ?x802 ?x802 ?x309 ?x1159) ?x1122)))
 (let ((?x1067 (* ?x626 ?x891 ?x692)))
 (let (($x1148 (= ?x1067 0)))
 (let (($x1078 (not $x1148)))
 (let ((?x1219 (* 108 (* x00 x00))))
 (let ((?x1116 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1112 (* z00 z00 z00 y00)))
 (let ((?x1022 (* (- 36) (* z00 y00 x00))))
 (let ((?x949 (* x!3 y!2)))
 (let ((?x1095 (* 108 ?x949)))
 (let ((?x907 (* 16 (* y00 y00 y00))))
 (let ((?x821 (* z00 z00 x00)))
 (let ((?x1072 (* (- 18) ?x821)))
 (let ((?x693 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x930 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x635 (* z00 z00 y00)))
 (let ((?x1173 (* (- 10) ?x635)))
 (let ((?x610 (* z00 y00 y00)))
 (let ((?x645 (* (- 12) ?x610)))
 (let ((?x501 (* y00 y00)))
 (let ((?x972 (* 96 ?x501)))
 (let ((?x471 (* z00 x00)))
 (let ((?x389 (* 36 ?x471)))
 (let ((?x434 (* z00 y00)))
 (let ((?x799 (* 24 ?x434)))
 (let ((?x652 (* 108 (* x!3 x!3))))
 (let ((?x402 (* y!2 y!2)))
 (let ((?x970 (* 24 ?x402)))
 (let ((?x381 (* y00 x00)))
 (let ((?x372 (* 216 ?x381)))
 (let ((?x426 (+ (* z00 z00 y!2 y!2) (* (- 36) (* z00 x!3)) ?x372 ?x970 ?x652 ?x799 ?x389 (* (- 216) (* x00 x!3)) ?x972 (* (- 1) (* z00 z00 z00 y!2)) (* (- 120) (* y00 y!2)) (* (- 2) (* z00 z00 z00 x!3)) (* 36 (* z00 y00 x!3)) ?x645 ?x1173 ?x930 ?x693 (* (- 24) (* z00 y!2)) (* (- 12) (* y00 y!2 y!2)) (* 10 (* z00 z00 y!2)) ?x1072 (* 18 (* z00 y00 y!2)) (* (- 6) (* z00 y!2 y!2)) ?x907 (* (- 108) (* x00 y!2)) ?x1095 ?x1022 (* (- 216) (* y00 x!3)) ?x1112 ?x1116 ?x1219 (* 18 (* z00 z00 x!3)))))
 (let ((?x847 (* z00 y00 y!2)))
 (let ((?x454 (* (- 72) y!2)))
 (let ((?x968 (* (- 18) (* x00 z!1))))
 (let ((?x602 (* y00 z!1)))
 (let ((?x605 (* (- 12) ?x602)))
 (let ((?x601 (* z!1 y!2)))
 (let ((?x273 (* 12 ?x601)))
 (let ((?x506 (* x!3 z!1)))
 (let ((?x271 (* 18 ?x506)))
 (let ((?x1012 (* (- 108) x!3)))
 (let ((?x550 (* 6 ?x434)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x861 (+ ?x67 ?x74 (* 18 ?x381) ?x550 ?x1012 (* 36 ?x501) ?x271 (* 2 (* y00 y00 z!1)) (* (- 36) (* y00 y!2)) ?x273 ?x605 ?x610 (* (- 3) ?x635) (* (- 6) (* z00 y!2)) (* 3 (* z00 z00 y!2)) ?x968 ?x454 (* (- 3) ?x821) ?x847 (* (- 2) (* z00 y!2 y!2)) (* 3 (* z00 x!3 z!1)) (* (- 3) (* z00 x00 z!1)) (* (- 18) (* x00 y!2)) (* 18 ?x949) (* (- 18) (* y00 x!3)) (* (- 1) (* y00 z!1 y!2)) (* (- 1) (* z!1 y!2 y!2)) (* 3 (* z00 z00 x!3)))))
 (let ((?x707 (* z00 z00 y!2)))
 (let ((?x709 (* (- 6) ?x434)))
 (let ((?x962 (+ ?x67 ?x74 (* 18 (* z00 x!3)) (* (- 12) ?x402) ?x709 (* (- 1) (* z00 z!1 y!2)) (* (- 18) ?x471) ?x1012 (* 24 ?x501) ?x271 (* (- 12) (* y00 y!2)) ?x273 ?x605 (* (- 1) ?x635) (* 6 (* z00 y!2)) ?x707 ?x968 (* z00 y00 z!1) ?x454)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1089 (+ ?x67 ?x55 ?x74 (* (- 6) ?x293) (* (- 18) ?x434) ?x1012 (* 6 (* z00 z!1)) (* 6 ?x601) (* 12 ?x602) ?x454 (* (- 1) (* z00 z00 z!1)))))
 (let (($x644 (and (= (+ z00 (* (- 6) n00) (* (- 1) z!1) (* 6 n!0)) 0) $x742 (= ?x1089 0) (= ?x962 0) (= ?x861 0) (= ?x426 0) $x1078)))
 (let ((?x763 (+ y!2 z!1)))
 (let ((?x1167 (+ (* (- 1) (* ?x816 ?x763 ?x763 ?x763 ?x1159 ?x1159 ?x1159)) (* (- 1) (* ?x816 ?x816 ?x802 ?x802 ?x802 ?x763 ?x763 ?x1159 ?x1159 ?x1159)) ?x1160)))
 (let ((?x445 (+ (* (- 1) (* ?x816 ?x816 ?x816 ?x802 ?x763 ?x763 ?x1159 ?x1159 ?x1159)) (* ?x816 ?x816 ?x816 ?x802 ?x802 ?x763 ?x1159) ?x1122)))
 (let ((?x1120 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x372 (* (- 2) (* x!3 z00 z00 z00)) ?x1095 ?x799 ?x389 ?x970 ?x972 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x645 ?x1173 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x693 ?x652 ?x930 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1072 (* (- 216) (* x!3 y00)) ?x907 (* (- 12) (* y!2 y!2 y00)) ?x1022 (* (- 216) (* x!3 x00)) ?x1112 ?x1116 (* 36 (* x!3 z00 y00)) ?x1219)))
 (let ((?x822 (* 3 ?x821)))
 (let ((?x884 (* 3 ?x635)))
 (let ((?x617 (* (- 1) ?x610)))
 (let ((?x1152 (* 18 (* z!1 x00))))
 (let ((?x804 (* (- 36) ?x501)))
 (let ((?x387 (* z!1 y00)))
 (let ((?x1153 (* 12 ?x387)))
 (let ((?x1157 (* (- 18) ?x506)))
 (let ((?x382 (* (- 18) ?x381)))
 (let ((?x457 (* y!2 z!1)))
 (let ((?x795 (* (- 12) ?x457)))
 (let ((?x513 (* (- 108) x00)))
 (let ((?x456 (* (- 72) y00)))
 (let ((?x1109 (* 72 y!2)))
 (let ((?x957 (* 108 x!3)))
 (let ((?x864 (+ ?x957 ?x1109 ?x456 ?x513 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x795 ?x382 (* (- 18) ?x949) ?x1157 ?x1153 ?x709 ?x804 ?x1152 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x617 ?x884 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x822 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x530 (* (- 24) ?x501)))
 (let ((?x472 (* 18 ?x471)))
 (let ((?x342 (+ ?x957 ?x1109 ?x456 ?x513 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x795 ?x1157 ?x1153 ?x550 ?x472 (* 12 ?x402) ?x530 ?x1152 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x635 (* (- 18) (* x!3 z00)))))
 (let ((?x435 (* 18 ?x434)))
 (let ((?x397 (* 6 ?x293)))
 (let ((?x386 (* (- 1) ?x55)))
 (let ((?x1131 (+ ?x957 ?x1109 ?x456 ?x386 ?x513 (* z!1 z00 z00) ?x397 (* (- 6) ?x457) (* (- 12) ?x387) ?x435 (* (- 6) (* z!1 z00)))))
 (let ((?x364 (* (- 12) y00)))
 (let ((?x363 (* (- 6) z00)))
 (let (($x1130 (= (+ (* 12 y!2) (* 6 z!1) ?x363 ?x364 (* (- 1) ?x570) ?x293) 0)))
 (let (($x292 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x1130 (= ?x1131 0) (= ?x342 0) (= ?x864 0) (= ?x1120 0) (not (= (* ?x445 ?x1167 (+ ?x1180 ?x1181 ?x49 ?x43 ?x570 ?x294)) 0)))))
 (let (($x764 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x293 (* z00 z00)))
 (let ((?x294 (* (- 1) ?x293)))
 (let ((?x50 (* z z)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x339 (* (- 6) z)))
 (let ((?x317 (* (- 12) y)))
 (let ((?x355 (+ ?x317 ?x339 ?x49 ?x43 ?x50 ?x294)))
 (let ((?x224 (+ x y)))
 (let ((?x682 (+ 6 z)))
 (let ((?x946 (+ 1 n)))
 (let ((?x990 (* ?x946 ?x946 ?x682 ?x224 ?x224 ?x224)))
 (let ((?x215 (+ y z)))
 (let ((?x351 (* (- 1) (* ?x946 ?x946 ?x682 ?x682 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x856 (* (- 1) (* ?x946 ?x215 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x1195 (* (- 1) (* ?x946 ?x682 ?x682 ?x682 ?x224 ?x224 ?x224))))
 (let ((?x688 (* ?x946 ?x946 ?x946 ?x682 ?x682 ?x215 ?x224)))
 (let ((?x277 (* (- 1) (* ?x946 ?x946 ?x946 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x1219 (* 108 (* x00 x00))))
 (let ((?x1116 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1112 (* z00 z00 z00 y00)))
 (let ((?x1022 (* (- 36) (* z00 y00 x00))))
 (let ((?x907 (* 16 (* y00 y00 y00))))
 (let ((?x821 (* z00 z00 x00)))
 (let ((?x1072 (* (- 18) ?x821)))
 (let ((?x777 (* (- 4) (* y y y))))
 (let ((?x725 (* 108 (* x x))))
 (let ((?x693 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x635 (* z00 z00 y00)))
 (let ((?x1173 (* (- 10) ?x635)))
 (let ((?x610 (* z00 y00 y00)))
 (let ((?x645 (* (- 12) ?x610)))
 (let ((?x501 (* y00 y00)))
 (let ((?x972 (* 96 ?x501)))
 (let ((?x475 (* y y)))
 (let ((?x720 (* 24 ?x475)))
 (let ((?x471 (* z00 x00)))
 (let ((?x389 (* 36 ?x471)))
 (let ((?x434 (* z00 y00)))
 (let ((?x799 (* 24 ?x434)))
 (let ((?x381 (* y00 x00)))
 (let ((?x372 (* 216 ?x381)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1239 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x372 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x799 ?x389 ?x720 ?x972 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x645 ?x1173 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x693 ?x725 ?x777 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1072 (* (- 216) (* x y00)) ?x907 (* (- 12) (* y y y00)) ?x1022 (* (- 216) (* x x00)) ?x1112 ?x1116 (* 36 (* x z00 y00)) ?x1219)))
 (let (($x1244 (= ?x1239 0)))
 (let ((?x822 (* 3 ?x821)))
 (let ((?x884 (* 3 ?x635)))
 (let ((?x617 (* (- 1) ?x610)))
 (let ((?x547 (* 18 (* z x00))))
 (let ((?x804 (* (- 36) ?x501)))
 (let ((?x709 (* (- 6) ?x434)))
 (let ((?x408 (* z y00)))
 (let ((?x409 (* 12 ?x408)))
 (let ((?x442 (* (- 18) (* x z))))
 (let ((?x382 (* (- 18) ?x381)))
 (let ((?x377 (* y z)))
 (let ((?x401 (* (- 12) ?x377)))
 (let ((?x135 (* y y z)))
 (let ((?x513 (* (- 108) x00)))
 (let ((?x456 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x940 (+ ?x64 ?x71 ?x456 ?x513 (* (- 3) (* y z00 z00)) ?x135 ?x401 ?x382 (* (- 18) (* x y)) ?x442 ?x409 ?x709 ?x804 ?x547 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x617 ?x884 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x822 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x947 (= ?x940 0)))
 (let ((?x530 (* (- 24) ?x501)))
 (let ((?x478 (* 12 ?x475)))
 (let ((?x472 (* 18 ?x471)))
 (let ((?x550 (* 6 ?x434)))
 (let ((?x103 (* y z z00)))
 (let ((?x689 (+ ?x64 ?x71 ?x456 ?x513 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x401 ?x442 ?x409 ?x550 ?x472 ?x478 ?x530 ?x547 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x635 (* (- 18) (* x z00)))))
 (let (($x694 (= ?x689 0)))
 (let ((?x435 (* 18 ?x434)))
 (let ((?x397 (* 6 ?x293)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x386 (* (- 1) ?x55)))
 (let ((?x529 (+ ?x64 ?x71 ?x456 ?x386 ?x513 ?x76 ?x397 (* (- 6) ?x377) (* (- 12) ?x408) ?x435 (* (- 6) (* z z00)))))
 (let (($x534 (= ?x529 0)))
 (let ((?x364 (* (- 12) y00)))
 (let ((?x363 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x367 (= (+ ?x45 ?x46 ?x363 ?x364 (* (- 1) ?x50) ?x293) 0)))
 (let (($x285 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x285 $x367 $x534 $x694 $x947 $x1244 (not (= (* (+ ?x277 ?x688 ?x1195) (+ ?x856 ?x351 ?x990) ?x355) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x966 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x49 (* 6 z00)))
 (let ((?x317 (* (- 12) y)))
 (let ((?x43 (* 12 y00)))
 (let ((?x293 (* z00 z00)))
 (let ((?x294 (* (- 1) ?x293)))
 (let ((?x944 (+ (- 36) ?x294 ?x43 ?x317 (* (- 18) z) ?x49 (* (+ 6 z) (+ 6 z)))))
 (let ((?x224 (+ x y)))
 (let ((?x215 (+ y z)))
 (let ((?x682 (+ 6 z)))
 (let ((?x946 (+ 1 n)))
 (let ((?x351 (* (- 1) (* ?x946 ?x946 ?x682 ?x682 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x856 (* (- 1) (* ?x946 ?x215 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x990 (* ?x946 ?x946 ?x682 ?x224 ?x224 ?x224)))
 (let ((?x688 (* ?x946 ?x946 ?x946 ?x682 ?x682 ?x215 ?x224)))
 (let ((?x1195 (* (- 1) (* ?x946 ?x682 ?x682 ?x682 ?x224 ?x224 ?x224))))
 (let ((?x277 (* (- 1) (* ?x946 ?x946 ?x946 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x1219 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x501 (* y00 y00)))
 (let ((?x972 (* 96 ?x501)))
 (let ((?x907 (* 16 (* y00 y00 y00))))
 (let ((?x777 (* (- 4) (* y y y))))
 (let ((?x725 (* 108 (* x x))))
 (let ((?x475 (* y y)))
 (let ((?x720 (* 24 ?x475)))
 (let ((?x1318 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x720 ?x725 ?x777 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x907 (* (- 6) (* z00 y y)) ?x972 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1219 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x513 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x456 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x651 (* 18 (* x00 z))))
 (let ((?x804 (* (- 36) ?x501)))
 (let ((?x739 (* z y)))
 (let ((?x579 (* (- 12) ?x739)))
 (let ((?x418 (* y00 z)))
 (let ((?x828 (* 12 ?x418)))
 (let ((?x1028 (* (- 18) (* z x))))
 (let ((?x634 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1028 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x828 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x579 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x804 ?x651 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x456 (* 18 (* y00 x)) ?x71 ?x513 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x530 (* (- 24) ?x501)))
 (let ((?x478 (* 12 ?x475)))
 (let ((?x858 (+ (* (- 1) (* y00 z00 z)) ?x579 ?x1028 (* 18 (* x00 z00)) ?x478 ?x530 ?x651 ?x828 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x456 (* (- 6) (* z00 y)) ?x71 ?x513 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x397 (* 6 ?x293)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x386 (* (- 1) ?x55)))
 (let ((?x1075 (+ (* (- 6) ?x739) ?x386 ?x397 (* (- 12) ?x418) (* 18 (* y00 z00)) ?x64 ?x456 (* (- 6) (* z00 z)) ?x71 ?x513 (* z00 z00 z))))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x294 ?x43 ?x317 (* (- 6) z) ?x49 (* z z)) 0) (= ?x1075 0) (= ?x858 0) (= ?x634 0) (= ?x1318 0) (not (= (* (+ ?x277 ?x1195 ?x688) (+ ?x990 ?x856 ?x351) ?x944) 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x736 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x293 (* z00 z00)))
 (let ((?x294 (* (- 1) ?x293)))
 (let ((?x50 (* z z)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x339 (* (- 6) z)))
 (let ((?x317 (* (- 12) y)))
 (let ((?x355 (+ ?x317 ?x339 ?x49 ?x43 ?x50 ?x294)))
 (let ((?x224 (+ x y)))
 (let ((?x682 (+ 6 z)))
 (let ((?x946 (+ 1 n)))
 (let ((?x990 (* ?x946 ?x946 ?x682 ?x224 ?x224 ?x224)))
 (let ((?x215 (+ y z)))
 (let ((?x351 (* (- 1) (* ?x946 ?x946 ?x682 ?x682 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x856 (* (- 1) (* ?x946 ?x215 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x1195 (* (- 1) (* ?x946 ?x682 ?x682 ?x682 ?x224 ?x224 ?x224))))
 (let ((?x688 (* ?x946 ?x946 ?x946 ?x682 ?x682 ?x215 ?x224)))
 (let ((?x277 (* (- 1) (* ?x946 ?x946 ?x946 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x1219 (* 108 (* x00 x00))))
 (let ((?x1116 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1112 (* z00 z00 z00 y00)))
 (let ((?x1022 (* (- 36) (* z00 y00 x00))))
 (let ((?x907 (* 16 (* y00 y00 y00))))
 (let ((?x821 (* z00 z00 x00)))
 (let ((?x1072 (* (- 18) ?x821)))
 (let ((?x777 (* (- 4) (* y y y))))
 (let ((?x725 (* 108 (* x x))))
 (let ((?x693 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x635 (* z00 z00 y00)))
 (let ((?x1173 (* (- 10) ?x635)))
 (let ((?x610 (* z00 y00 y00)))
 (let ((?x645 (* (- 12) ?x610)))
 (let ((?x501 (* y00 y00)))
 (let ((?x972 (* 96 ?x501)))
 (let ((?x475 (* y y)))
 (let ((?x720 (* 24 ?x475)))
 (let ((?x471 (* z00 x00)))
 (let ((?x389 (* 36 ?x471)))
 (let ((?x434 (* z00 y00)))
 (let ((?x799 (* 24 ?x434)))
 (let ((?x381 (* y00 x00)))
 (let ((?x372 (* 216 ?x381)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1239 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x372 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x799 ?x389 ?x720 ?x972 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x645 ?x1173 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x693 ?x725 ?x777 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1072 (* (- 216) (* x y00)) ?x907 (* (- 12) (* y y y00)) ?x1022 (* (- 216) (* x x00)) ?x1112 ?x1116 (* 36 (* x z00 y00)) ?x1219)))
 (let (($x1244 (= ?x1239 0)))
 (let ((?x822 (* 3 ?x821)))
 (let ((?x884 (* 3 ?x635)))
 (let ((?x617 (* (- 1) ?x610)))
 (let ((?x547 (* 18 (* z x00))))
 (let ((?x804 (* (- 36) ?x501)))
 (let ((?x709 (* (- 6) ?x434)))
 (let ((?x408 (* z y00)))
 (let ((?x409 (* 12 ?x408)))
 (let ((?x442 (* (- 18) (* x z))))
 (let ((?x382 (* (- 18) ?x381)))
 (let ((?x377 (* y z)))
 (let ((?x401 (* (- 12) ?x377)))
 (let ((?x135 (* y y z)))
 (let ((?x513 (* (- 108) x00)))
 (let ((?x456 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x940 (+ ?x64 ?x71 ?x456 ?x513 (* (- 3) (* y z00 z00)) ?x135 ?x401 ?x382 (* (- 18) (* x y)) ?x442 ?x409 ?x709 ?x804 ?x547 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x617 ?x884 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x822 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x947 (= ?x940 0)))
 (let ((?x530 (* (- 24) ?x501)))
 (let ((?x478 (* 12 ?x475)))
 (let ((?x472 (* 18 ?x471)))
 (let ((?x550 (* 6 ?x434)))
 (let ((?x103 (* y z z00)))
 (let ((?x689 (+ ?x64 ?x71 ?x456 ?x513 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x401 ?x442 ?x409 ?x550 ?x472 ?x478 ?x530 ?x547 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x635 (* (- 18) (* x z00)))))
 (let (($x694 (= ?x689 0)))
 (let ((?x435 (* 18 ?x434)))
 (let ((?x397 (* 6 ?x293)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x386 (* (- 1) ?x55)))
 (let ((?x529 (+ ?x64 ?x71 ?x456 ?x386 ?x513 ?x76 ?x397 (* (- 6) ?x377) (* (- 12) ?x408) ?x435 (* (- 6) (* z z00)))))
 (let (($x534 (= ?x529 0)))
 (let ((?x364 (* (- 12) y00)))
 (let ((?x363 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x367 (= (+ ?x45 ?x46 ?x363 ?x364 (* (- 1) ?x50) ?x293) 0)))
 (let (($x285 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x785 (and $x285 $x367 $x534 $x694 $x947 $x1244 (not (= (* (+ ?x277 ?x688 ?x1195) (+ ?x856 ?x351 ?x990) ?x355) 0)))))
 (let ((?x995 (* (+ ?x277 ?x1195 ?x688) (+ ?x990 ?x856 ?x351) (+ (- 36) ?x294 ?x43 ?x317 (* (- 18) z) ?x49 (* ?x682 ?x682)))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1318 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x720 ?x725 ?x777 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x907 (* (- 6) (* z00 y y)) ?x972 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1219 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x651 (* 18 (* x00 z))))
 (let ((?x739 (* z y)))
 (let ((?x579 (* (- 12) ?x739)))
 (let ((?x418 (* y00 z)))
 (let ((?x828 (* 12 ?x418)))
 (let ((?x1028 (* (- 18) (* z x))))
 (let ((?x634 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1028 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x828 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x579 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x804 ?x651 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x456 (* 18 (* y00 x)) ?x71 ?x513 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x858 (+ (* (- 1) (* y00 z00 z)) ?x579 ?x1028 (* 18 (* x00 z00)) ?x478 ?x530 ?x651 ?x828 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x456 (* (- 6) (* z00 y)) ?x71 ?x513 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x1075 (+ (* (- 6) ?x739) ?x386 ?x397 (* (- 12) ?x418) (* 18 (* y00 z00)) ?x64 ?x456 (* (- 6) (* z00 z)) ?x71 ?x513 (* z00 z00 z))))
 (let (($x1104 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x294 ?x43 ?x317 ?x339 ?x49 ?x50) 0) (= ?x1075 0) (= ?x858 0) (= ?x634 0) (= ?x1318 0) (not (= ?x995 0)))))
 (rewrite (= $x1104 $x785))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x240 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x217 (+ z 6)))
 (let ((?x215 (+ y z)))
 (let ((?x224 (+ x y)))
 (let ((?x223 (+ n 1)))
 (let ((?x232 (- (* (- 1) ?x223 ?x223 ?x223 ?x224 ?x224 ?x224 ?x215 ?x215 ?x217) (* ?x223 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x228 (- (* ?x223 ?x223 ?x224 ?x224 ?x224 ?x217) (* ?x223 ?x224 ?x224 ?x224 ?x215 ?x215 ?x215))))
 (let ((?x49 (* 6 z00)))
 (let ((?x220 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 ?x215)) (* 6 ?x217))))
 (let ((?x235 (* (+ ?x220 ?x49 (* ?x217 ?x217)) (- ?x228 (* ?x223 ?x223 ?x224 ?x224 ?x224 ?x215 ?x215 ?x217 ?x217 ?x217)) (+ ?x232 (* ?x223 ?x223 ?x223 ?x224 ?x215 ?x217 ?x217)))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x235 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x340 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x49 (* 6 z00)))
 (let ((?x317 (* (- 12) y)))
 (let ((?x43 (* 12 y00)))
 (let ((?x293 (* z00 z00)))
 (let ((?x294 (* (- 1) ?x293)))
 (let ((?x944 (+ (- 36) ?x294 ?x43 ?x317 (* (- 18) z) ?x49 (* (+ 6 z) (+ 6 z)))))
 (let ((?x224 (+ x y)))
 (let ((?x215 (+ y z)))
 (let ((?x682 (+ 6 z)))
 (let ((?x946 (+ 1 n)))
 (let ((?x351 (* (- 1) (* ?x946 ?x946 ?x682 ?x682 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x856 (* (- 1) (* ?x946 ?x215 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x990 (* ?x946 ?x946 ?x682 ?x224 ?x224 ?x224)))
 (let ((?x688 (* ?x946 ?x946 ?x946 ?x682 ?x682 ?x215 ?x224)))
 (let ((?x1195 (* (- 1) (* ?x946 ?x682 ?x682 ?x682 ?x224 ?x224 ?x224))))
 (let ((?x277 (* (- 1) (* ?x946 ?x946 ?x946 ?x682 ?x215 ?x215 ?x224 ?x224 ?x224))))
 (let ((?x1219 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x501 (* y00 y00)))
 (let ((?x972 (* 96 ?x501)))
 (let ((?x907 (* 16 (* y00 y00 y00))))
 (let ((?x777 (* (- 4) (* y y y))))
 (let ((?x725 (* 108 (* x x))))
 (let ((?x475 (* y y)))
 (let ((?x720 (* 24 ?x475)))
 (let ((?x1318 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x720 ?x725 ?x777 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x907 (* (- 6) (* z00 y y)) ?x972 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1219 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x513 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x456 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x651 (* 18 (* x00 z))))
 (let ((?x804 (* (- 36) ?x501)))
 (let ((?x739 (* z y)))
 (let ((?x579 (* (- 12) ?x739)))
 (let ((?x418 (* y00 z)))
 (let ((?x828 (* 12 ?x418)))
 (let ((?x1028 (* (- 18) (* z x))))
 (let ((?x634 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1028 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x828 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x579 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x804 ?x651 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x456 (* 18 (* y00 x)) ?x71 ?x513 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x530 (* (- 24) ?x501)))
 (let ((?x478 (* 12 ?x475)))
 (let ((?x858 (+ (* (- 1) (* y00 z00 z)) ?x579 ?x1028 (* 18 (* x00 z00)) ?x478 ?x530 ?x651 ?x828 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x456 (* (- 6) (* z00 y)) ?x71 ?x513 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x397 (* 6 ?x293)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x386 (* (- 1) ?x55)))
 (let ((?x1075 (+ (* (- 6) ?x739) ?x386 ?x397 (* (- 12) ?x418) (* 18 (* y00 z00)) ?x64 ?x456 (* (- 6) (* z00 z)) ?x71 ?x513 (* z00 z00 z))))
 (let (($x1104 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x294 ?x43 ?x317 (* (- 6) z) ?x49 (* z z)) 0) (= ?x1075 0) (= ?x858 0) (= ?x634 0) (= ?x1318 0) (not (= (* (+ ?x277 ?x1195 ?x688) (+ ?x990 ?x856 ?x351) ?x944) 0)))))
 (let ((?x217 (+ z 6)))
 (let ((?x223 (+ n 1)))
 (let ((?x232 (- (* (- 1) ?x223 ?x223 ?x223 ?x224 ?x224 ?x224 ?x215 ?x215 ?x217) (* ?x223 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x228 (- (* ?x223 ?x223 ?x224 ?x224 ?x224 ?x217) (* ?x223 ?x224 ?x224 ?x224 ?x215 ?x215 ?x215))))
 (let ((?x220 (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 ?x215)) (* 6 ?x217))))
 (let ((?x235 (* (+ ?x220 ?x49 (* ?x217 ?x217)) (- ?x228 (* ?x223 ?x223 ?x224 ?x224 ?x224 ?x215 ?x215 ?x217 ?x217 ?x217)) (+ ?x232 (* ?x223 ?x223 ?x223 ?x224 ?x215 ?x217 ?x217)))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x239 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x235 0))))))
 (rewrite (= $x239 $x1104))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x241 (asserted $x240)))
 (let ((@x548 (mp (mp @x241 (quant-intro (proof-bind ?x340) (= $x240 $x966)) $x966) (rewrite (= $x966 $x966)) $x966)))
 (let ((@x300 (mp~ (mp @x548 (quant-intro (proof-bind ?x736) (= $x966 $x764)) $x764) (sk (~ $x764 $x292)) $x292)))
 (let ((@x619 (mp @x300 (rewrite (= $x292 $x644)) $x644)))
 (let ((@x1118 (and-elim @x619 $x742)))
 (let ((@x535 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x691)) @x1118 $x691)))
 (let (($x999 (>= ?x692 0)))
 (let ((@x249 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x999)) @x1118 $x999)))
 (let (($x537 (not (<= ?x1067 0))))
 (let (($x526 (>= ?x1067 0)))
 (let ((@x752 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1148 $x537 (not $x526))) (and-elim @x619 $x1078) (or $x537 (not $x526)))))
 (let ((@x911 (unit-resolution @x752 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x526)) @x249 @x535 false) $x526) $x537)))
 ((_ th-lemma arith farkas 1 1 1) @x911 @x249 @x535 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        10
 :arith-assert-upper        9
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-num-rows            12
 :arith-pseudo-nonlinear    2
 :arith-tableau-max-columns 103
 :arith-tableau-max-rows    12
 :conflicts                 2
 :decisions                 1
 :del-clause                20
 :max-memory                19.82
 :memory                    19.23
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                597905
 :num-checks                1
 :propagations              14
 :rlimit-count              6530
 :time                      0.01
 :total-time                0.02)
