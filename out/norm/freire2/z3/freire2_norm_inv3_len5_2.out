unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2173 (* (- 1) s!1)))
 (let ((?x390 (* r00 r00)))
 (let ((?x6398 (* (- 3) ?x390)))
 (let ((?x6439 (+ s00 ?x6398 (* 3 (* r!2 r!2)) ?x2173)))
 (let (($x1686 (<= ?x6439 0)))
 (let (($x3598 (= ?x6439 0)))
 (let ((?x2180 (+ 3 (* 6 r!2) s!1)))
 (let ((?x2163 (+ ?x2173 x!0)))
 (let ((?x2630 (+ 1 r!2)))
 (let ((?x8585 (* (- 18) (* ?x2630 ?x2163 ?x2163 ?x2163 ?x2163 ?x2180))))
 (let ((?x7643 (* (- 6) (* r00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x7543 (* (- 18) (* r00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x7548 (* (- 6) (* r00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x2810 (* 6 (* r00 s00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x1785 (* 6 (* r00 r00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3568 (* (- 18) (* ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x6539 (* 18 (* r00 x00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3579 (* (- 9) (* s00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3286 (* 18 (* x00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x6360 (* 6 (* r00 r00 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x6049 (* (- 2) (* ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x6363 (* 6 (* r00 s00 ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x4093 (* (- 6) (* r00 ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x6409 (* 9 (* r00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x2857 (* 9 (* r00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x5870 (* 6 (* r00 s00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x4589 (* 4 (* s00 s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3565 (* 4 (* s00 s00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x2762 (* (- 9) (* r00 s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3908 (* 18 (* ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180))))
 (let ((?x2872 (* 6 (* r00 r00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x2888 (* (- 3) (* ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x8041 (* (- 9) (* r00 s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3611 (* (- 3) (* ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3685 (* (- 18) (* ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3577 (* 9 (* ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x3564 (* (- 9) (* ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x3549 (* (- 3) (* ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3541 (* (- 9) (* s00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3535 (* 9 (* ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3295 (* 18 (* r00 x00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3478 (* 4 (* s00 s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3474 (* (- 6) (* r00 r00 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x3479 (* 9 (* r00 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x3282 (* 18 (* x00 ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x6353 (* (- 6) (* r00 r00 s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3296 (* (- 6) (* r00 r00 s00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x2962 (* (- 2) (* ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3993 (* (- 2) (* s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x1812 (* (- 18) (* ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3590 (* (- 2) (* ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3811 (* (- 18) (* r00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x1623 (* 6 (* r00 r00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3516 (* (- 18) (* r00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x852 (* (- 2) (* ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x2805 (* (- 2) (* s00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x2896 (* (- 6) (* r00 r00 s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x2847 (* 2 (* s00 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x2870 (* 18 (* r00 x00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x2864 (* 3 (* s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3758 (* 3 (* ?x2630 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x3357 (* (- 9) (* r00 s00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x2836 (* (- 6) (* r00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x4672 (* (- 3) (* ?x2163 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x2823 (* (- 2) (* s00 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x2874 (* 6 (* r00 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x2743 (* (- 9) (* r00 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180))))
 (let ((?x2963 (* 3 (* s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x2553 (* (- 2) (* s00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x2542 (* 9 (* ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x3329 (* 9 (* ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x1033 (* 2 (* ?x2630 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x6661 (* (- 9) (* s00 ?x2630 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3555 (* 3 (* s00 ?x2630 ?x2163 ?x2163 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x3545 (* 9 (* r00 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180 ?x2180))))
 (let ((?x8008 (* 18 (* x00 ?x2630 ?x2630 ?x2630 ?x2630 ?x2163 ?x2180 ?x2180 ?x2180))))
 (let ((?x4284 (+ (* 9 (* s00 r00 x!0 x!0)) (* 54 (* x00 s!1 s!1 s!1 x!0)) (* 54 (* x00 r!2 s!1 s!1 s!1 x!0)) (* 54 (* r00 x00 s!1 s!1 s!1 x!0)) (* 360 (* r00 x00 r!2 s!1 s!1 x!0)) ?x8008 (* (- 54) (* r00 x!0 x!0 x!0 x!0)) (* (- 180) (* s00 r!2 r!2 s!1 s!1 x!0)) (* 54 (* s00 r!2 r!2 r!2 x!0 x!0)) (* (- 108) (* s00 r!2 r!2 r!2 s!1 x!0)) (* (- 324) (* r00 r!2 r!2 s!1 x!0 x!0)) ?x3545 ?x3555 ?x6661 (* (- 162) (* r00 x00 r!2 s!1 s!1)) (* 108 (* r00 x00 s!1 x!0)) (* (- 36) (* s00 r00 r!2 r!2 s!1 s!1)) (* 450 (* r00 r!2 s!1 x!0 x!0 x!0)) (* 18 (* s00 x!0 x!0)) (* (- 36) (* s00 s!1 x!0)) (* (- 9) (* s00 r00 x!0 x!0 x!0)) ?x1033 (* (- 36) (* s00 r00 r00 s!1 x!0)) (* 18 (* s00 s!1 s!1 x!0 x!0)) (* 18 (* s00 r00 r00 s!1 s!1)) ?x3329 (* 30 (* s00 r00 s!1 x!0 x!0)) (* 6 (* s00 r00 r!2 s!1 s!1 x!0)) (* (- 9) (* s00 r00 s!1 s!1 s!1 x!0)) (* (- 342) (* r00 x00 r!2 s!1 x!0 x!0)) (* (- 180) (* r00 x00 s!1 x!0 x!0)) (* 432 (* x00 r!2 s!1 x!0)) (* 540 (* x00 r!2 r!2 s!1 x!0)) (* (- 18) (* x00 r!2 s!1 s!1 s!1 s!1)) (* 108 (* r00 r!2 r!2 x!0 x!0 x!0)) (* 234 (* r00 s!1 x!0 x!0 x!0)) (* 360 (* x00 r!2 r!2 s!1 s!1 x!0)) (* (- 18) (* x00 s!1 s!1 s!1 s!1)) (* 108 (* x00 s!1 x!0)) (* 24 (* s00 s00 s!1 x!0)) (* (- 12) (* s00 s00 s!1 s!1 x!0 x!0)) (* (- 40) (* s00 s00 s!1 x!0 x!0)) (* (- 12) (* s00 s00 x!0 x!0)) (* 80 (* s00 s00 r!2 s!1 s!1 x!0)) (* (- 54) (* r00 x00 x!0 x!0)) (* 12 (* s00 s00 s!1 s!1 s!1 x!0)) (* 54 (* r00 x!0 x!0 x!0)) (* (- 702) (* r00 r!2 s!1 s!1 x!0 x!0)) (* 216 (* r00 x00 r!2 r!2 s!1 x!0)) (* (- 108) (* r00 x00 r!2 r!2 s!1 s!1)) ?x2542 ?x2553 (* 162 (* x00 r!2 x!0 x!0 x!0)) (* (- 126) (* x00 r!2 r!2 s!1 s!1 s!1)) (* 198 (* r00 x00 s!1 s!1 x!0)) (* (- 342) (* x00 r!2 r!2 s!1 x!0 x!0)) (* (- 3) (* s00 r00 r!2 s!1 s!1 s!1)) (* 108 (* x00 r!2 r!2 x!0 x!0 x!0)) (* (- 54) (* x00 r!2 s!1 s!1 x!0 x!0)) ?x2963 ?x2743 ?x2874 ?x2823 ?x4672 ?x2836 ?x3357 ?x3758 ?x2864 ?x2870 ?x2847 ?x2896 (* 324 (* r00 x00 r!2 s!1 x!0)) (* (- 162) (* r00 x00 r!2 x!0 x!0)) ?x2805 ?x852 ?x3516 ?x1623 ?x3811 ?x3590 (* (- 76) (* s00 s00 r!2 s!1 x!0 x!0)) (* (- 36) (* s00 s00 r!2 x!0 x!0)) ?x1812 (* (- 108) (* r00 x00 r!2 r!2 x!0 x!0)) ?x3993 ?x2962 ?x3296 (* 9 (* s00 r00 r!2 x!0 x!0)) ?x6353 (* (- 198) (* x00 r!2 s!1 s!1 s!1)) (* (- 54) (* x00 x!0 x!0)) ?x3282 ?x3479 ?x3474 ?x3478 ?x3295 ?x3535 ?x3541 ?x3549 ?x3564 ?x3577 ?x3685 ?x3611 (* (- 126) (* r00 r!2 s!1 s!1 s!1 s!1)) (* 81 (* s00 r!2 x!0 x!0)) (* 198 (* x00 s!1 s!1 x!0)) (* 324 (* r00 r!2 r!2 s!1 s!1 x!0)) ?x8041 ?x2888 ?x2872 ?x3908 (* (- 33) (* s00 r00 s!1 s!1 x!0)) ?x2762 (* 44 (* s00 s00 s!1 s!1 x!0)) (* 216 (* x00 r!2 r!2 r!2 s!1 x!0)) (* (- 4) (* s00 s00 s!1 s!1 s!1 s!1)) (* 120 (* s00 r00 r!2 r!2 s!1 s!1 x!0)) ?x3565 (* 162 (* r00 r!2 x!0 x!0 x!0)) (* (- 54) (* x00 s!1 s!1)) (* (- 54) (* r00 x00 s!1 s!1)) (* (- 18) (* r00 x00 s!1 s!1 s!1 s!1)) (* 9 (* s00 r00 s!1 s!1)) (* (- 36) (* s00 r00 r!2 r!2 x!0 x!0)) (* 18 (* r00 x00 s!1 x!0 x!0 x!0)) ?x4589 (* (- 36) (* s00 r00 r!2 r!2 r!2 s!1 s!1)) (* (- 72) (* s00 r00 r00 r!2 r!2 s!1 x!0)) (* 63 (* s00 r!2 r!2 s!1 s!1 s!1)) (* 42 (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* (- 18) (* s00 s!1 s!1 s!1 x!0)) (* (- 180) (* x00 s!1 x!0 x!0)) (* (- 522) (* x00 r!2 s!1 x!0 x!0)) (* 54 (* x00 x!0 x!0 x!0)) (* (- 108) (* x00 r!2 r!2 r!2 s!1 s!1)) (* 4 (* s00 s00 s!1 x!0 x!0 x!0)) (* (- 28) (* s00 s00 r!2 s!1 s!1 s!1)) ?x5870 (* (- 18) (* r00 s!1 s!1 s!1 s!1 s!1)) (* (- 270) (* x00 r!2 r!2 x!0 x!0)) (* (- 54) (* r00 s!1 s!1 s!1)) (* (- 162) (* r00 r!2 s!1 s!1 s!1)) ?x2857 ?x6409 ?x4093 ?x6363 ?x6049 (* (- 18) (* s00 r00 r!2 s!1 x!0)) (* 72 (* s00 r00 r!2 r!2 s!1 x!0)) (* 48 (* s00 s00 r!2 r!2 s!1 x!0)) ?x6360 ?x3286 ?x3579 ?x6539 ?x3568 ?x1785 (* 12 (* s00 r00 s!1 s!1 s!1)) (* 9 (* s00 r00 r!2 s!1 s!1)) (* 9 (* s00 r00 s!1 s!1 x!0 x!0)) (* (- 12) (* s00 s00 s!1 s!1)) ?x2810 (* (- 36) (* s00 r00 r!2 r!2 r!2 x!0 x!0)) ?x7548 ?x7543 (* (- 18) (* s00 r00 s!1 x!0)) (* (- 378) (* r00 s!1 s!1 x!0 x!0)) ?x7643 (* 27 (* s00 r!2 s!1 s!1 x!0 x!0)) (* (- 54) (* s00 r!2 r!2 x!0 x!0 x!0)) (* (- 108) (* r00 r!2 x!0 x!0 x!0 x!0)) (* (- 18) (* r00 s!1 x!0 x!0 x!0 x!0)) (* (- 6) (* s00 r00 r!2 s!1 s!1 s!1 s!1)) (* (- 3) (* s00 r00 s!1 x!0 x!0 x!0)) (* 36 (* s00 r00 r!2 r!2 x!0 x!0 x!0)) (* 6 (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* (- 114) (* s00 r00 r!2 r!2 s!1 x!0 x!0)) (* 171 (* s00 r!2 r!2 s!1 x!0 x!0)) (* 36 (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* 114 (* s00 r00 r00 r!2 s!1 x!0 x!0)) (* (- 270) (* x00 r!2 r!2 s!1 s!1)) (* (- 63) (* s00 r!2 x!0 x!0 x!0)) (* (- 36) (* s00 s00 r!2 s!1 s!1)) (* 18 (* x00 s!1 x!0 x!0 x!0)) (* 72 (* r00 s!1 s!1 x!0 x!0 x!0)) (* (- 216) (* x00 r!2 x!0 x!0)) (* 72 (* s00 s00 r!2 s!1 x!0)) (* (- 18) (* s00 r00 r00 s!1 s!1 s!1 x!0)) (* (- 3) (* s00 r00 r!2 s!1 x!0 x!0)) (* 558 (* x00 r!2 s!1 s!1 x!0)) (* (- 162) (* s00 r!2 s!1 x!0)) (* 6 (* s00 s!1 s!1 s!1 s!1)) (* (- 486) (* r00 r!2 s!1 x!0 x!0)) (* (- 72) (* r00 x00 s!1 s!1 s!1)) (* (- 216) (* x00 r!2 s!1 s!1)) (* (- 72) (* r00 s!1 s!1 s!1 s!1)) (* (- 54) (* r00 x00 s!1 s!1 x!0 x!0)) (* (- 108) (* x00 r!2 r!2 r!2 x!0 x!0)) (* 54 (* r00 x00 x!0 x!0 x!0)) (* 108 (* r00 x00 r!2 x!0 x!0 x!0)) (* 18 (* s00 s!1 s!1)) (* 486 (* r00 r!2 s!1 s!1 s!1 x!0)) (* 6 (* s00 r00 r!2 s!1 x!0 x!0 x!0)) (* 3 (* s00 r00 s!1 s!1 s!1 s!1)) (* (- 6) (* s00 r00 r00 s!1 x!0 x!0 x!0)) (* 78 (* s00 r!2 s!1 s!1 s!1)) (* 18 (* s00 r00 r00 s!1 s!1 x!0 x!0)) (* (- 42) (* s00 r00 r!2 r!2 s!1 s!1 s!1)) (* (- 9) (* s00 r!2 s!1 x!0 x!0 x!0)) (* (- 36) (* s00 r00 r00 r!2 x!0 x!0 x!0)) (* 18 (* s00 r00 r!2 s!1 s!1 s!1 x!0)) (* (- 18) (* s00 r00 r!2 s!1 s!1 x!0 x!0)) (* (- 18) (* s00 r00 r00 x!0 x!0 x!0)) (* (- 126) (* r00 x00 r!2 s!1 s!1 s!1)) (* (- 108) (* r00 r!2 r!2 s!1 s!1 s!1)) (* (- 27) (* s00 r!2 s!1 s!1 s!1 x!0)) (* (- 24) (* s00 s00 r!2 r!2 x!0 x!0)) (* 270 (* r00 s!1 s!1 s!1 x!0)) (* (- 108) (* r00 s!1 s!1 s!1 x!0 x!0)) (* (- 66) (* s00 r00 r00 s!1 s!1 x!0)) (* (- 16) (* s00 s00 s!1 s!1 s!1)) (* 24 (* s00 s00 r!2 x!0 x!0 x!0)) (* 72 (* s00 r00 r!2 r!2 r!2 s!1 x!0)) (* (- 24) (* s00 s00 r!2 r!2 s!1 s!1)) (* 12 (* s00 s00 x!0 x!0 x!0)) (* (- 219) (* s00 r!2 s!1 s!1 x!0)) (* (- 120) (* s00 r00 r00 r!2 s!1 s!1 x!0)) (* 60 (* s00 r00 r00 s!1 x!0 x!0)) (* 54 (* s00 r00 r00 r!2 x!0 x!0)) (* 36 (* s00 r00 r00 r!2 r!2 x!0 x!0)) (* 18 (* s00 r00 r00 x!0 x!0)) (* (- 6) (* s00 s!1 x!0 x!0 x!0)) (* 204 (* s00 r!2 s!1 x!0 x!0)) (* (- 108) (* s00 r00 r00 r!2 s!1 x!0)) (* 24 (* s00 r00 r00 s!1 s!1 s!1)) (* 54 (* s00 r00 r00 r!2 s!1 s!1)) (* 72 (* r00 s!1 s!1 s!1 s!1 x!0)) (* 162 (* r00 s!1 s!1 x!0)) (* 24 (* s00 s!1 s!1 s!1)) (* (- 66) (* s00 s!1 s!1 x!0)) (* (- 18) (* s00 x!0 x!0 x!0)) (* 486 (* r00 r!2 s!1 s!1 x!0)) (* 60 (* s00 s!1 x!0 x!0)) (* 18 (* x00 r!2 s!1 x!0 x!0 x!0)) (* (- 72) (* x00 s!1 s!1 s!1)) (* (- 54) (* x00 s!1 s!1 x!0 x!0)) (* (- 162) (* r00 s!1 x!0 x!0)) (* 117 (* s00 r!2 r!2 s!1 s!1)) (* 81 (* s00 r!2 s!1 s!1)) (* 117 (* s00 r!2 r!2 x!0 x!0)) (* 9 (* s00 r!2 s!1 s!1 s!1 s!1)) (* (- 234) (* s00 r!2 r!2 s!1 x!0)) (* 54 (* s00 r!2 r!2 r!2 s!1 s!1)) ?x8585)))
 (let (($x2907 (= ?x4284 0)))
 (let (($x7698 (not $x2907)))
 (let ((?x3150 (* r00 r00 s!1)))
 (let ((?x8069 (* 36 ?x3150)))
 (let ((?x1435 (* x00 x00)))
 (let ((?x2081 (* 108 ?x1435)))
 (let ((?x1273 (* s00 s00 s00)))
 (let ((?x4949 (* 16 ?x1273)))
 (let ((?x8096 (* (- 9) s!1)))
 (let ((?x971 (* r00 r00 r00 x00)))
 (let ((?x1671 (* (- 432) ?x971)))
 (let ((?x894 (* s00 x00)))
 (let ((?x4535 (* (- 108) ?x894)))
 (let ((?x736 (* s00 r00 r00)))
 (let ((?x7574 (* (- 36) ?x736)))
 (let ((?x680 (* s00 s00)))
 (let ((?x5898 (* 51 ?x680)))
 (let ((?x611 (* r00 x00)))
 (let ((?x6381 (* 108 ?x611)))
 (let ((?x137 (* 9 s00)))
 (let ((?x8114 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x6381 ?x5898 ?x7574 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x4535 ?x1671 (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 216 (* s00 r00 r00 r00)) (* 108 (* s00 r00 s!1)) ?x8096 ?x4949 (* 108 (* x00 s!1)) ?x2081 ?x8069 (* (- 108) (* r00 x!0)) (* 108 (* x!0 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 108) (* s!1 x!0)) (* 15 (* s!1 s!1)) (* 108 (* s00 x!0)) (* (- 216) (* s00 r00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* x00 x!0)) (* 36 (* r00 r00 s!1 s!1)))))
 (let ((?x966 (* r00 r00 x00)))
 (let ((?x6626 (* 36 ?x966)))
 (let ((?x6544 (* (- 6) ?x894)))
 (let ((?x6648 (* 15 ?x680)))
 (let ((?x5971 (* 54 ?x611)))
 (let ((?x7660 (+ ?x137 (* (- 24) (* s00 r00)) ?x5971 ?x6648 ?x7574 (* 2 (* s00 s00 r00)) (* (- 24) (* s00 r!2)) ?x6544 ?x6626 (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* 2 (* s00 r00 s!1)) ?x8096 (* 6 (* x00 s!1)) (* 54 (* x00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 24 (* r!2 s!1)) ?x8069 (* (- 36) (* r00 r!2 x!0)) (* (- 54) (* r00 x!0)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* s!1 x!0)) (* (- 54) (* r!2 x!0)) (* (- 2) (* r!2 s!1 s!1)) (* (- 3) (* s!1 s!1)) (* 4 (* s00 s00 r!2)) (* 6 (* s00 x!0)) (* 36 (* r00 x00 r!2)) (* (- 2) (* s00 r!2 s!1)))))
 (let (($x7974 (= ?x7660 0)))
 (let ((?x865 (* (- 3) s!1)))
 (let ((?x6336 (* 4 ?x680)))
 (let ((?x1554 (* 18 ?x611)))
 (let ((?x44 (* 3 s00)))
 (let ((?x5496 (+ ?x44 (* (- 9) (* s00 r00)) ?x1554 ?x6336 (* (- 6) ?x736) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) ?x865 (* 18 (* x00 r!2)) (* 9 (* r!2 s!1)) (* 6 ?x3150) (* (- 6) (* r00 r!2 s!1)) (* (- 18) (* r00 x!0)) (* (- 18) (* r!2 x!0)) (* (- 2) (* s!1 s!1)) (* 6 (* s00 r00 r!2)))))
 (let (($x4854 (= ?x5496 0)))
 (let ((?x2560 (* r!2 s!1)))
 (let ((?x535 (* 2 ?x2560)))
 (let ((?x3843 (* 6 x!0)))
 (let ((?x563 (* 3 r!2)))
 (let ((?x558 (* r00 r00 r00)))
 (let ((?x559 (* 12 ?x558)))
 (let ((?x515 (* s00 r00)))
 (let ((?x593 (* (- 6) ?x515)))
 (let ((?x590 (* (- 6) x00)))
 (let ((?x589 (* (- 3) r00)))
 (let ((?x2946 (+ ?x44 ?x589 ?x590 ?x593 ?x559 (* 4 (* s00 r!2)) ?x563 ?x865 ?x3843 ?x535 (* (- 12) (* r00 r00 r!2)))))
 (let (($x3607 (= ?x2946 0)))
 (let (($x6010 (and $x3598 $x3607 $x4854 $x7974 (= ?x8114 0) $x7698)))
 (let ((?x3581 (+ (* 27 (* r!2 s!1 s!1 x!0 x!0 s00)) (* (- 54) (* r!2 r!2 x!0 x!0 x!0 s00)) (* (- 216) (* r!2 x!0 x!0 x00)) (* 78 (* r!2 s!1 s!1 s!1 s00)) (* (- 108) (* r!2 x!0 x!0 x!0 x!0 r00)) (* 18 (* s!1 s!1 s00)) (* (- 18) (* s!1 x!0 x!0 x!0 x!0 r00)) ?x4672 (* (- 9) (* r!2 s!1 x!0 x!0 x!0 s00)) (* 72 (* r!2 s!1 x!0 s00 s00)) ?x4589 (* (- 9) (* s!1 s!1 s!1 x!0 s00 r00)) (* 6 (* r!2 s!1 s!1 x!0 s00 r00)) (* 30 (* s!1 x!0 x!0 s00 r00)) (* 120 (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* (- 33) (* s!1 s!1 x!0 s00 r00)) (* 9 (* s!1 s!1 x!0 x!0 s00 r00)) (* (- 3) (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 18) (* x!0 x!0 x!0 s00 r00 r00)) (* (- 18) (* r!2 s!1 s!1 x!0 x!0 s00 r00)) (* (- 114) (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* 18 (* r!2 s!1 s!1 s!1 x!0 s00 r00)) (* (- 36) (* r!2 x!0 x!0 x!0 s00 r00 r00)) (* 6 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 18) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* 18 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* (- 6) (* r!2 s!1 s!1 s!1 s!1 s00 r00)) (* (- 6) (* s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 42) (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* 3 (* s!1 s!1 s!1 s!1 s00 r00)) (* (- 3) (* s!1 x!0 x!0 x!0 s00 r00)) (* 6 (* r!2 s!1 x!0 x!0 x!0 s00 r00)) ?x3590 ?x3611 ?x8008 ?x2553 ?x2542 (* (- 9) (* x!0 x!0 x!0 s00 r00)) ?x7643 ?x8041 (* 36 (* r!2 r!2 x!0 x!0 x!0 s00 r00)) ?x2743 (* (- 3) (* r!2 s!1 s!1 s!1 s00 r00)) ?x1033 (* 12 (* s!1 s!1 s!1 s00 r00)) (* 9 (* s!1 s!1 s00 r00)) (* 9 (* r!2 s!1 s!1 s00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 18) (* s!1 x!0 s00 r00)) (* (- 18) (* r!2 s!1 x!0 s00 r00)) (* 72 (* r!2 r!2 s!1 x!0 s00 r00)) (* 9 (* x!0 x!0 s00 r00)) (* 9 (* r!2 x!0 x!0 s00 r00)) (* (- 36) (* r!2 r!2 x!0 x!0 s00 r00)) (* (- 12) (* s!1 s!1 s00 s00)) (* 24 (* s!1 x!0 s00 s00)) (* (- 12) (* x!0 x!0 s00 s00)) (* 108 (* s!1 x!0 x00)) (* (- 54) (* x!0 x!0 x00)) (* (- 54) (* s!1 s!1 x00)) (* (- 342) (* r!2 r!2 s!1 x!0 x!0 x00)) (* (- 270) (* r!2 r!2 x!0 x!0 x00)) ?x1812 (* 12 (* x!0 x!0 x!0 s00 s00)) (* (- 180) (* s!1 x!0 x!0 x00)) (* (- 522) (* r!2 s!1 x!0 x!0 x00)) (* (- 24) (* r!2 r!2 s!1 s!1 s00 s00)) (* 24 (* r!2 x!0 x!0 x!0 s00 s00)) (* 72 (* r!2 r!2 r!2 s!1 x!0 s00 r00)) (* (- 16) (* s!1 s!1 s!1 s00 s00)) (* 44 (* s!1 s!1 x!0 s00 s00)) (* (- 27) (* r!2 s!1 s!1 s!1 x!0 s00)) (* (- 40) (* s!1 x!0 x!0 s00 s00)) (* (- 12) (* s!1 s!1 x!0 x!0 s00 s00)) (* (- 76) (* r!2 s!1 x!0 x!0 s00 s00)) (* (- 36) (* r!2 r!2 r!2 s!1 s!1 s00 r00)) (* 12 (* s!1 s!1 s!1 x!0 s00 s00)) (* 80 (* r!2 s!1 s!1 x!0 s00 s00)) (* (- 18) (* s!1 s!1 s!1 s!1 s!1 r00)) (* (- 36) (* r!2 r!2 r!2 x!0 x!0 s00 r00)) (* (- 4) (* s!1 s!1 s!1 s!1 s00 s00)) (* (- 28) (* r!2 s!1 s!1 s!1 s00 s00)) (* 4 (* s!1 x!0 x!0 x!0 s00 s00)) ?x7548 (* 54 (* r!2 s!1 s!1 s00 r00 r00)) (* 24 (* s!1 s!1 s!1 s00 r00 r00)) (* (- 36) (* r!2 s!1 s!1 s00 s00)) (* (- 108) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 36) (* s!1 x!0 s00 r00 r00)) (* 18 (* s!1 s!1 s00 r00 r00)) ?x8585 (* 36 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 42 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 72) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 66) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 120) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* 114 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* 60 (* s!1 x!0 x!0 s00 r00 r00)) (* 54 (* r!2 x!0 x!0 s00 r00 r00)) (* 36 (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* 18 (* x!0 x!0 s00 r00 r00)) ?x3329 ?x6363 ?x3568 (* (- 18) (* x!0 x!0 x!0 s00)) ?x6539 ?x3685 (* 60 (* s!1 x!0 x!0 s00)) (* (- 66) (* s!1 s!1 x!0 s00)) (* 24 (* s!1 s!1 s!1 s00)) ?x3908 (* (- 6) (* s!1 x!0 x!0 x!0 s00)) (* (- 63) (* r!2 x!0 x!0 x!0 s00)) (* 18 (* s!1 s!1 x!0 x!0 s00)) (* 204 (* r!2 s!1 x!0 x!0 s00)) (* (- 18) (* s!1 s!1 s!1 x!0 s00)) (* (- 219) (* r!2 s!1 s!1 x!0 s00)) ?x6353 (* 6 (* s!1 s!1 s!1 s!1 s00)) (* 72 (* s!1 s!1 x!0 x!0 x!0 r00)) ?x2857 ?x3357 ?x6049 (* 18 (* x!0 x!0 s00)) (* (- 36) (* s!1 x!0 s00)) ?x2810 ?x3758 ?x2864 ?x2870 ?x2872 (* (- 108) (* s!1 s!1 s!1 x!0 x!0 r00)) ?x2874 (* 72 (* s!1 s!1 s!1 s!1 x!0 r00)) ?x2823 (* 81 (* r!2 x!0 x!0 s00)) ?x2836 (* 117 (* r!2 r!2 x!0 x!0 s00)) ?x5870 (* (- 162) (* r!2 s!1 x!0 s00)) (* (- 234) (* r!2 r!2 s!1 x!0 s00)) (* 9 (* r!2 s!1 s!1 s!1 s!1 s00)) ?x2888 ?x2847 (* 81 (* r!2 s!1 s!1 s00)) (* 117 (* r!2 r!2 s!1 s!1 s00)) ?x2896 (* 171 (* r!2 r!2 s!1 x!0 x!0 s00)) (* 54 (* r!2 r!2 r!2 x!0 x!0 s00)) (* (- 180) (* r!2 r!2 s!1 s!1 x!0 s00)) (* (- 108) (* r!2 r!2 r!2 s!1 x!0 s00)) (* (- 54) (* x!0 x!0 x!0 x!0 r00)) (* 63 (* r!2 r!2 s!1 s!1 s!1 s00)) (* 54 (* r!2 r!2 r!2 s!1 s!1 s00)) ?x2762 (* 54 (* x!0 x!0 x!0 x00)) ?x2805 (* 18 (* r!2 s!1 x!0 x!0 x!0 x00)) (* 18 (* s!1 x!0 x!0 x!0 x00)) (* (- 72) (* s!1 s!1 s!1 x00)) (* 198 (* s!1 s!1 x!0 x00)) ?x3811 (* (- 24) (* r!2 r!2 x!0 x!0 s00 s00)) (* 162 (* r!2 x!0 x!0 x!0 x00)) (* (- 54) (* r!2 s!1 s!1 x!0 x!0 x00)) (* 108 (* r!2 r!2 x!0 x!0 x!0 x00)) ?x3993 (* 558 (* r!2 s!1 s!1 x!0 x00)) (* 360 (* r!2 r!2 s!1 s!1 x!0 x00)) (* (- 18) (* s!1 s!1 s!1 s!1 x00)) (* (- 18) (* r!2 s!1 s!1 s!1 s!1 x00)) (* (- 198) (* r!2 s!1 s!1 s!1 x00)) (* (- 126) (* r!2 r!2 s!1 s!1 s!1 x00)) (* (- 54) (* s!1 s!1 x!0 x!0 x00)) ?x2963 (* 54 (* s!1 s!1 s!1 x!0 x00)) (* 54 (* r!2 s!1 s!1 s!1 x!0 x00)) ?x3282 ?x2962 ?x3479 ?x3474 (* (- 270) (* r!2 r!2 s!1 s!1 x00)) ?x7543 ?x3478 ?x6360 ?x3286 (* (- 216) (* r!2 s!1 s!1 x00)) (* (- 72) (* s!1 s!1 s!1 r00 x00)) (* (- 126) (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 18) (* s!1 s!1 s!1 s!1 r00 x00)) (* 198 (* s!1 s!1 x!0 r00 x00)) (* 360 (* r!2 s!1 s!1 x!0 r00 x00)) (* 54 (* s!1 s!1 s!1 x!0 r00 x00)) ?x1623 (* 432 (* r!2 s!1 x!0 x00)) (* (- 180) (* s!1 x!0 x!0 r00 x00)) (* (- 342) (* r!2 s!1 x!0 x!0 r00 x00)) ?x3295 (* (- 54) (* s!1 s!1 x!0 x!0 r00 x00)) ?x4093 (* 540 (* r!2 r!2 s!1 x!0 x00)) (* 54 (* x!0 x!0 x!0 r00 x00)) (* 108 (* r!2 x!0 x!0 x!0 r00 x00)) (* 18 (* s!1 x!0 x!0 x!0 r00 x00)) (* (- 108) (* r!2 r!2 r!2 s!1 s!1 x00)) (* 216 (* r!2 r!2 r!2 s!1 x!0 x00)) ?x3296 ?x3516 (* (- 54) (* s!1 s!1 s!1 r00)) (* (- 162) (* r!2 s!1 s!1 s!1 r00)) (* (- 108) (* r!2 r!2 s!1 s!1 s!1 r00)) (* (- 108) (* r!2 r!2 r!2 x!0 x!0 x00)) (* (- 72) (* s!1 s!1 s!1 s!1 r00)) (* (- 126) (* r!2 s!1 s!1 s!1 s!1 r00)) (* 162 (* s!1 s!1 x!0 r00)) (* 486 (* r!2 s!1 s!1 x!0 r00)) (* 324 (* r!2 r!2 s!1 s!1 x!0 r00)) (* 270 (* s!1 s!1 s!1 x!0 r00)) (* 486 (* r!2 s!1 s!1 s!1 x!0 r00)) (* 48 (* r!2 r!2 s!1 x!0 s00 s00)) (* (- 162) (* s!1 x!0 x!0 r00)) (* (- 486) (* r!2 s!1 x!0 x!0 r00)) (* (- 324) (* r!2 r!2 s!1 x!0 x!0 r00)) (* (- 378) (* s!1 s!1 x!0 x!0 r00)) ?x3535 (* (- 702) (* r!2 s!1 s!1 x!0 x!0 r00)) ?x3541 (* (- 36) (* r!2 x!0 x!0 s00 s00)) (* 54 (* x!0 x!0 x!0 r00)) (* 162 (* r!2 x!0 x!0 x!0 r00)) (* 108 (* r!2 r!2 x!0 x!0 x!0 r00)) (* 234 (* s!1 x!0 x!0 x!0 r00)) (* 450 (* r!2 s!1 x!0 x!0 x!0 r00)) ?x3549 ?x3545 (* 324 (* r!2 s!1 x!0 r00 x00)) (* (- 54) (* x!0 x!0 r00 x00)) (* (- 108) (* r!2 r!2 s!1 s!1 r00 x00)) (* 216 (* r!2 r!2 s!1 x!0 r00 x00)) ?x3555 (* 108 (* s!1 x!0 r00 x00)) (* (- 162) (* r!2 s!1 s!1 r00 x00)) ?x3564 ?x6661 ?x3565 (* (- 54) (* s!1 s!1 r00 x00)) ?x1785 (* (- 162) (* r!2 x!0 x!0 r00 x00)) (* (- 108) (* r!2 r!2 x!0 x!0 r00 x00)) ?x3577 ?x6409 ?x3579 ?x852)))
 (let ((?x1465 (* (- 108) ?x1435)))
 (let ((?x1464 (* (- 16) ?x1273)))
 (let ((?x1145 (* s00 r00 r00 r00)))
 (let ((?x1460 (* (- 216) ?x1145)))
 (let ((?x972 (* 432 ?x971)))
 (let ((?x1218 (* 108 ?x894)))
 (let ((?x820 (* s00 s00 r00 r00)))
 (let ((?x821 (* 36 ?x820)))
 (let ((?x757 (* s00 s00 r00)))
 (let ((?x1101 (* 108 ?x757)))
 (let ((?x1089 (* 36 ?x736)))
 (let ((?x1454 (* (- 51) ?x680)))
 (let ((?x2286 (* s!1 r00 r00)))
 (let ((?x755 (* (- 36) ?x2286)))
 (let ((?x1451 (* (- 108) ?x611)))
 (let ((?x602 (* s00 r00 x00)))
 (let ((?x1450 (* (- 216) ?x602)))
 (let ((?x609 (* 54 ?x515)))
 (let ((?x1076 (* (- 9) s00)))
 (let ((?x801 (* 9 s!1)))
 (let ((?x5047 (+ ?x801 ?x1076 ?x609 ?x1450 ?x1451 (* (- 15) (* s!1 s!1)) ?x755 ?x1454 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1089 ?x1101 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x821 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1218 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x972 (* 12 (* s!1 s!1 s00)) ?x1460 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1464 (* 216 (* x!0 x00)) ?x1465)))
 (let ((?x979 (* (- 36) ?x966)))
 (let ((?x895 (* 6 ?x894)))
 (let ((?x785 (* (- 2) ?x757)))
 (let ((?x1005 (* (- 15) ?x680)))
 (let ((?x640 (* (- 54) ?x611)))
 (let ((?x653 (* 24 ?x515)))
 (let ((?x5190 (+ ?x801 ?x1076 (* (- 24) ?x2560) (* 24 (* r!2 s00)) ?x653 ?x640 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x755 ?x1005 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1089 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x785 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x895 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x979 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x737 (* 6 ?x736)))
 (let ((?x693 (* (- 4) ?x680)))
 (let ((?x625 (* (- 18) ?x611)))
 (let ((?x630 (* 9 ?x515)))
 (let ((?x467 (* (- 3) s00)))
 (let ((?x5071 (+ (* 3 s!1) ?x467 (* (- 9) ?x2560) (* 9 (* r!2 s00)) ?x630 ?x625 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2286) ?x693 (* 18 (* x!0 r00)) ?x737 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x550 (+ ?x563 ?x865 ?x3843 ?x44 ?x589 ?x590 ?x535 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x593 ?x559)))
 (let (($x564 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x390)) 0)))
 (let (($x3584 (and $x564 (= ?x550 0) (= ?x5071 0) (= ?x5190 0) (= ?x5047 0) (not (= ?x3581 0)))))
 (let (($x4495 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1475 (+ 3 ?x213 s)))
 (let ((?x369 (* (- 1) s)))
 (let ((?x1481 (+ ?x369 x)))
 (let ((?x1472 (+ 1 r)))
 (let ((?x9098 (* 108 (* r r x x x r00))))
 (let ((?x9097 (* 162 (* r x x x r00))))
 (let ((?x9096 (* 54 (* x x x r00))))
 (let ((?x9093 (* (- 324) (* r r s x x r00))))
 (let ((?x9092 (* (- 486) (* r s x x r00))))
 (let ((?x9091 (* (- 162) (* s x x r00))))
 (let ((?x9088 (* 324 (* r r s s x r00))))
 (let ((?x9087 (* 486 (* r s s x r00))))
 (let ((?x9086 (* 162 (* s s x r00))))
 (let ((?x9083 (* (- 108) (* r r s s s r00))))
 (let ((?x9082 (* (- 162) (* r s s s r00))))
 (let ((?x9081 (* (- 54) (* s s s r00))))
 (let ((?x9080 (* 18 (* s x x x r00 x00))))
 (let ((?x9079 (* 108 (* r x x x r00 x00))))
 (let ((?x9078 (* 54 (* x x x r00 x00))))
 (let ((?x9077 (* (- 54) (* s s x x r00 x00))))
 (let ((?x9322 (* 6 (* r00 r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475))))
 (let ((?x9074 (* 54 (* s s s x r00 x00))))
 (let ((?x9071 (* (- 18) (* s s s s r00 x00))))
 (let ((?x9068 (* 54 (* r s s s x x00))))
 (let ((?x9067 (* 54 (* s s s x x00))))
 (let ((?x9066 (* (- 54) (* s s x x x00))))
 (let ((?x9063 (* (- 18) (* r s s s s x00))))
 (let ((?x9062 (* (- 18) (* s s s s x00))))
 (let ((?x9059 (* 108 (* r r x x x x00))))
 (let ((?x9058 (* (- 54) (* r s s x x x00))))
 (let ((?x9057 (* 162 (* r x x x x00))))
 (let ((?x6147 (* 18 (* s x x x x00))))
 (let ((?x5977 (* 18 (* r s x x x x00))))
 (let ((?x6253 (* 54 (* x x x x00))))
 (let ((?x8972 (* 54 (* r r r s s s00))))
 (let ((?x8970 (* (- 108) (* r r r s x s00))))
 (let ((?x8968 (* 54 (* r r r x x s00))))
 (let ((?x9287 (* (- 6) (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475))))
 (let ((?x9279 (* 6 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475))))
 (let ((?x8938 (* (- 36) (* s x s00))))
 (let ((?x8937 (* 18 (* x x s00))))
 (let ((?x8858 (* (- 18) (* x x x s00))))
 (let ((?x8857 (* 18 (* x x s00 r00 r00))))
 (let ((?x8856 (* 36 (* r r x x s00 r00 r00))))
 (let ((?x8855 (* 54 (* r x x s00 r00 r00))))
 (let ((?x8850 (* (- 72) (* r r s x s00 r00 r00))))
 (let ((?x8848 (* 36 (* r r s s s00 r00 r00))))
 (let ((?x8845 (* 18 (* s s s00 r00 r00))))
 (let ((?x8843 (* (- 36) (* s x s00 r00 r00))))
 (let ((?x8842 (* (- 108) (* r s x s00 r00 r00))))
 (let ((?x8840 (* 54 (* r s s s00 r00 r00))))
 (let ((?x9233 (* (- 6) (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475))))
 (let ((?x8815 (* 4 (* s x x x s00 s00))))
 (let ((?x8813 (* (- 4) (* s s s s s00 s00))))
 (let ((?x8811 (* 12 (* s s s x s00 s00))))
 (let ((?x8809 (* (- 12) (* s s x x s00 s00))))
 (let ((?x8808 (* 24 (* r x x x s00 s00))))
 (let ((?x8802 (* (- 180) (* s x x x00))))
 (let ((?x3158 (* 12 (* x x x s00 s00))))
 (let ((?x8793 (* (- 342) (* r r s x x x00))))
 (let ((?x8791 (* (- 54) (* s s x00))))
 (let ((?x8738 (* (- 54) (* x x x00))))
 (let ((?x8740 (* 108 (* s x x00))))
 (let ((?x8743 (* (- 12) (* x x s00 s00))))
 (let ((?x8742 (* 24 (* s x s00 s00))))
 (let ((?x8745 (* (- 12) (* s s s00 s00))))
 (let ((?x8631 (* 36 (* r r x x x s00 r00))))
 (let ((?x8630 (* 6 (* r s x x x s00 r00))))
 (let ((?x8634 (* (- 6) (* r s s s s s00 r00))))
 (let ((?x8639 (* 18 (* r s s s x s00 r00))))
 (let ((?x8636 (* (- 18) (* r s s x x s00 r00))))
 (let ((?x1029 (* s s s00)))
 (let ((?x8544 (* 18 ?x1029)))
 (let ((?x9371 (+ (* 27 (* r s s x x s00)) (* (- 54) (* r r x x x s00)) (* (- 216) (* r x x x00)) (* 78 (* r s s s s00)) (* (- 108) (* r x x x x r00)) ?x8544 (* (- 18) (* s x x x x r00)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 9) (* r s x x x s00)) (* 72 (* r s x s00 s00)) (* 4 (* s00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 9) (* s s s x s00 r00)) (* 6 (* r s s x s00 r00)) (* 30 (* s x x s00 r00)) (* 120 (* r r s s x s00 r00)) (* (- 33) (* s s x s00 r00)) (* 9 (* s s x x s00 r00)) (* (- 3) (* r s x x s00 r00)) (* (- 18) (* x x x s00 r00 r00)) ?x8636 (* (- 114) (* r r s x x s00 r00)) ?x8639 (* (- 36) (* r x x x s00 r00 r00)) (* 6 (* s s s s s00 r00 r00)) (* (- 18) (* s s s x s00 r00 r00)) (* 18 (* s s x x s00 r00 r00)) ?x8634 (* (- 6) (* s x x x s00 r00 r00)) (* (- 42) (* r r s s s s00 r00)) (* 3 (* s s s s s00 r00)) (* (- 3) (* s x x x s00 r00)) ?x8630 (* (- 2) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 3) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 18 (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 9 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 9) (* x x x s00 r00)) (* (- 6) (* r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 9) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) ?x8631 (* (- 9) (* r00 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 3) (* r s s s s00 r00)) (* 2 (* ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 12 (* s s s s00 r00)) (* 9 (* s s s00 r00)) (* 9 (* r s s s00 r00)) (* (- 36) (* r r s s s00 r00)) (* (- 18) (* s x s00 r00)) (* (- 18) (* r s x s00 r00)) (* 72 (* r r s x s00 r00)) (* 9 (* x x s00 r00)) (* 9 (* r x x s00 r00)) (* (- 36) (* r r x x s00 r00)) ?x8745 ?x8742 ?x8743 ?x8740 ?x8738 ?x8791 ?x8793 (* (- 270) (* r r x x x00)) (* (- 18) (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x3158 ?x8802 (* (- 522) (* r s x x x00)) (* (- 24) (* r r s s s00 s00)) ?x8808 (* 72 (* r r r s x s00 r00)) (* (- 16) (* s s s s00 s00)) (* 44 (* s s x s00 s00)) (* (- 27) (* r s s s x s00)) (* (- 40) (* s x x s00 s00)) ?x8809 (* (- 76) (* r s x x s00 s00)) (* (- 36) (* r r r s s s00 r00)) ?x8811 (* 80 (* r s s x s00 s00)) (* (- 18) (* s s s s s r00)) (* (- 36) (* r r r x x s00 r00)) ?x8813 (* (- 28) (* r s s s s00 s00)) ?x8815 ?x9233 ?x8840 (* 24 (* s s s s00 r00 r00)) (* (- 36) (* r s s s00 s00)) ?x8842 ?x8843 ?x8845 (* (- 18) (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1481 ?x1475)) ?x8848 (* 42 (* r s s s s00 r00 r00)) ?x8850 (* (- 66) (* s s x s00 r00 r00)) (* (- 120) (* r s s x s00 r00 r00)) (* 114 (* r s x x s00 r00 r00)) (* 60 (* s x x s00 r00 r00)) ?x8855 ?x8856 ?x8857 (* 9 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 6 (* r00 s00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 18) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x8858 (* 18 (* r00 x00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 18) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 60 (* s x x s00)) (* (- 66) (* s s x s00)) (* 24 (* s s s s00)) (* 18 (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475)) (* (- 6) (* s x x x s00)) (* (- 63) (* r x x x s00)) (* 18 (* s s x x s00)) (* 204 (* r s x x s00)) (* (- 18) (* s s s x s00)) (* (- 219) (* r s s x s00)) (* (- 6) (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* 6 (* s s s s s00)) (* 72 (* s s x x x r00)) (* 9 (* r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 9) (* r00 s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x8937 ?x8938 (* 6 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* 3 (* ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* 3 (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 18 (* r00 x00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 6 (* r00 r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 108) (* s s s x x r00)) (* 6 (* r00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* 72 (* s s s s x r00)) (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* 81 (* r x x s00)) (* (- 6) (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 117 (* r r x x s00)) ?x9279 (* (- 162) (* r s x s00)) (* (- 234) (* r r s x s00)) (* 9 (* r s s s s s00)) (* (- 3) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 2 (* s00 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* 81 (* r s s s00)) (* 117 (* r r s s s00)) ?x9287 (* 171 (* r r s x x s00)) ?x8968 (* (- 180) (* r r s s x s00)) ?x8970 (* (- 54) (* x x x x r00)) (* 63 (* r r s s s s00)) ?x8972 (* (- 9) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x6253 (* (- 2) (* s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) ?x5977 ?x6147 (* (- 72) (* s s s x00)) (* 198 (* s s x x00)) (* (- 18) (* r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 24) (* r r x x s00 s00)) ?x9057 ?x9058 ?x9059 (* (- 2) (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 558 (* r s s x x00)) (* 360 (* r r s s x x00)) ?x9062 ?x9063 (* (- 198) (* r s s s x00)) (* (- 126) (* r r s s s x00)) ?x9066 (* 3 (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) ?x9067 ?x9068 (* 18 (* x00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475 ?x1475)) (* 9 (* r00 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 6) (* r00 r00 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 270) (* r r s s x00)) (* (- 18) (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 4 (* s00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 6 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* 18 (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 216) (* r s s x00)) (* (- 72) (* s s s r00 x00)) (* (- 126) (* r s s s r00 x00)) ?x9071 (* 198 (* s s x r00 x00)) (* 360 (* r s s x r00 x00)) ?x9074 ?x9322 (* 432 (* r s x x00)) (* (- 180) (* s x x r00 x00)) (* (- 342) (* r s x x r00 x00)) (* 18 (* r00 x00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) ?x9077 (* (- 6) (* r00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 540 (* r r s x x00)) ?x9078 ?x9079 ?x9080 (* (- 108) (* r r r s s x00)) (* 216 (* r r r s x x00)) (* (- 6) (* r00 r00 s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 18) (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x9081 ?x9082 ?x9083 (* (- 108) (* r r r x x x00)) (* (- 72) (* s s s s r00)) (* (- 126) (* r s s s s r00)) ?x9086 ?x9087 ?x9088 (* 270 (* s s s x r00)) (* 486 (* r s s s x r00)) (* 48 (* r r s x s00 s00)) ?x9091 ?x9092 ?x9093 (* (- 378) (* s s x x r00)) (* 9 (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 702) (* r s s x x r00)) (* (- 9) (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 36) (* r x x s00 s00)) ?x9096 ?x9097 ?x9098 (* 234 (* s x x x r00)) (* 450 (* r s x x x r00)) (* (- 3) (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 9 (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 324 (* r s x r00 x00)) (* (- 54) (* x x r00 x00)) (* (- 108) (* r r s s r00 x00)) (* 216 (* r r s x r00 x00)) (* 3 (* s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 108 (* s x r00 x00)) (* (- 162) (* r s s r00 x00)) (* (- 9) (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 9) (* s00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 4 (* s00 s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 54) (* s s r00 x00)) (* 6 (* r00 r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 162) (* r x x r00 x00)) (* (- 108) (* r r x x r00 x00)) (* 9 (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* 9 (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 9) (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475 ?x1475)))))
 (let ((?x1435 (* x00 x00)))
 (let ((?x1465 (* (- 108) ?x1435)))
 (let ((?x1273 (* s00 s00 s00)))
 (let ((?x1464 (* (- 16) ?x1273)))
 (let ((?x1145 (* s00 r00 r00 r00)))
 (let ((?x1460 (* (- 216) ?x1145)))
 (let ((?x971 (* r00 r00 r00 x00)))
 (let ((?x972 (* 432 ?x971)))
 (let ((?x894 (* s00 x00)))
 (let ((?x1218 (* 108 ?x894)))
 (let ((?x820 (* s00 s00 r00 r00)))
 (let ((?x821 (* 36 ?x820)))
 (let ((?x757 (* s00 s00 r00)))
 (let ((?x1101 (* 108 ?x757)))
 (let ((?x736 (* s00 r00 r00)))
 (let ((?x1089 (* 36 ?x736)))
 (let ((?x680 (* s00 s00)))
 (let ((?x1454 (* (- 51) ?x680)))
 (let ((?x654 (* s r00 r00)))
 (let ((?x953 (* (- 36) ?x654)))
 (let ((?x611 (* r00 x00)))
 (let ((?x1451 (* (- 108) ?x611)))
 (let ((?x602 (* s00 r00 x00)))
 (let ((?x1450 (* (- 216) ?x602)))
 (let ((?x515 (* s00 r00)))
 (let ((?x609 (* 54 ?x515)))
 (let ((?x1076 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1466 (+ ?x143 ?x1076 ?x609 ?x1450 ?x1451 (* (- 15) (* s s)) ?x953 ?x1454 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1089 ?x1101 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x821 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1218 (* 108 (* s x)) (* (- 108) (* x x)) ?x972 (* 12 ?x1029) ?x1460 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1464 (* 216 (* x x00)) ?x1465)))
 (let (($x1467 (= ?x1466 0)))
 (let ((?x966 (* r00 r00 x00)))
 (let ((?x979 (* (- 36) ?x966)))
 (let ((?x895 (* 6 ?x894)))
 (let ((?x785 (* (- 2) ?x757)))
 (let ((?x1005 (* (- 15) ?x680)))
 (let ((?x634 (* s s)))
 (let ((?x658 (* 3 ?x634)))
 (let ((?x640 (* (- 54) ?x611)))
 (let ((?x653 (* 24 ?x515)))
 (let ((?x1168 (+ ?x143 ?x1076 (* (- 24) (* r s)) (* 24 (* r s00)) ?x653 ?x640 ?x658 (* 54 (* r x)) (* 36 (* r x r00)) ?x953 ?x1005 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1089 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x785 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x895 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x979 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1173 (= ?x1168 0)))
 (let ((?x737 (* 6 ?x736)))
 (let ((?x693 (* (- 4) ?x680)))
 (let ((?x635 (* 2 ?x634)))
 (let ((?x625 (* (- 18) ?x611)))
 (let ((?x630 (* 9 ?x515)))
 (let ((?x467 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x834 (+ ?x47 ?x467 (* (- 9) (* r s)) (* 9 (* r s00)) ?x630 ?x625 ?x635 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x654) ?x693 (* 18 (* x r00)) ?x737 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x841 (= ?x834 0)))
 (let ((?x558 (* r00 r00 r00)))
 (let ((?x559 (* 12 ?x558)))
 (let ((?x593 (* (- 6) ?x515)))
 (let ((?x590 (* (- 6) x00)))
 (let ((?x589 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x588 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x594 (+ ?x43 ?x588 ?x56 ?x44 ?x589 ?x590 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x593 ?x559)))
 (let (($x595 (= ?x594 0)))
 (let ((?x390 (* r00 r00)))
 (let ((?x391 (* 3 ?x390)))
 (let ((?x420 (* (- 1) s00)))
 (let (($x423 (= (+ s ?x420 (* (- 3) (* r r)) ?x391) 0)))
 (and $x423 $x595 $x841 $x1173 $x1467 (not (= ?x9371 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x863 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x6388 (+ 3 s ?x213)))
 (let ((?x369 (* (- 1) s)))
 (let ((?x6415 (+ x ?x369)))
 (let ((?x1472 (+ 1 r)))
 (let ((?x2910 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x7496 (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x7433 (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x6802 (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x1020 (+ (* 6 (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 9) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 4 (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) ?x6802 (* 18 (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 4) (* s00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 6 (* r00 r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 2) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 2 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 3) (* s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 9) (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* 18 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 6) (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 3) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 2) (* s00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) ?x7433 (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x7496 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 6 (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 3) (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x2910 (* 18 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 x00 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)))))
 (let (($x6604 (not (= ?x1020 0))))
 (let ((?x1435 (* x00 x00)))
 (let ((?x2081 (* 108 ?x1435)))
 (let ((?x438 (* (- 9) s)))
 (let ((?x6309 (* r00 r00 s00)))
 (let ((?x2554 (* (- 36) ?x6309)))
 (let ((?x137 (* 9 s00)))
 (let ((?x680 (* s00 s00)))
 (let ((?x5898 (* 51 ?x680)))
 (let ((?x5962 (* r00 r00 s)))
 (let ((?x1587 (* 36 ?x5962)))
 (let ((?x1273 (* s00 s00 s00)))
 (let ((?x4949 (* 16 ?x1273)))
 (let ((?x894 (* s00 x00)))
 (let ((?x4535 (* (- 108) ?x894)))
 (let ((?x971 (* r00 r00 r00 x00)))
 (let ((?x1671 (* (- 432) ?x971)))
 (let ((?x611 (* r00 x00)))
 (let ((?x6381 (* 108 ?x611)))
 (let ((?x6835 (+ (* 216 (* r00 s00 x00)) ?x6381 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1671 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4535 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4949 (* (- 108) (* x s)) ?x1587 ?x5898 (* (- 108) (* r00 x)) ?x137 ?x2554 ?x438 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2081)))
 (let (($x1786 (= ?x6835 0)))
 (let ((?x6648 (* 15 ?x680)))
 (let ((?x966 (* r00 r00 x00)))
 (let ((?x6626 (* 36 ?x966)))
 (let ((?x6544 (* (- 6) ?x894)))
 (let ((?x5971 (* 54 ?x611)))
 (let ((?x889 (+ (* 24 (* s r)) ?x5971 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6544 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1587 ?x6626 ?x6648 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2554 (* 54 (* x00 r)) ?x438 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x588 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x6336 (* 4 ?x680)))
 (let ((?x1554 (* 18 ?x611)))
 (let ((?x6610 (+ (* 9 (* s r)) ?x1554 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5962) ?x6336 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x6309) (* 18 (* x00 r)) ?x588 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x558 (* r00 r00 r00)))
 (let ((?x559 (* 12 ?x558)))
 (let ((?x590 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x589 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6606 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x588 ?x589 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x590 ?x559)))
 (let (($x6405 (= (+ s00 ?x369 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x6405 (= ?x6606 0) (= ?x6610 0) (= ?x889 0) $x1786 $x6604))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2559 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1475 (+ 3 ?x213 s)))
 (let ((?x369 (* (- 1) s)))
 (let ((?x1481 (+ ?x369 x)))
 (let ((?x1472 (+ 1 r)))
 (let ((?x9098 (* 108 (* r r x x x r00))))
 (let ((?x9097 (* 162 (* r x x x r00))))
 (let ((?x9096 (* 54 (* x x x r00))))
 (let ((?x9093 (* (- 324) (* r r s x x r00))))
 (let ((?x9092 (* (- 486) (* r s x x r00))))
 (let ((?x9091 (* (- 162) (* s x x r00))))
 (let ((?x9088 (* 324 (* r r s s x r00))))
 (let ((?x9087 (* 486 (* r s s x r00))))
 (let ((?x9086 (* 162 (* s s x r00))))
 (let ((?x9083 (* (- 108) (* r r s s s r00))))
 (let ((?x9082 (* (- 162) (* r s s s r00))))
 (let ((?x9081 (* (- 54) (* s s s r00))))
 (let ((?x9080 (* 18 (* s x x x r00 x00))))
 (let ((?x9079 (* 108 (* r x x x r00 x00))))
 (let ((?x9078 (* 54 (* x x x r00 x00))))
 (let ((?x9077 (* (- 54) (* s s x x r00 x00))))
 (let ((?x9322 (* 6 (* r00 r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475))))
 (let ((?x9074 (* 54 (* s s s x r00 x00))))
 (let ((?x9071 (* (- 18) (* s s s s r00 x00))))
 (let ((?x9068 (* 54 (* r s s s x x00))))
 (let ((?x9067 (* 54 (* s s s x x00))))
 (let ((?x9066 (* (- 54) (* s s x x x00))))
 (let ((?x9063 (* (- 18) (* r s s s s x00))))
 (let ((?x9062 (* (- 18) (* s s s s x00))))
 (let ((?x9059 (* 108 (* r r x x x x00))))
 (let ((?x9058 (* (- 54) (* r s s x x x00))))
 (let ((?x9057 (* 162 (* r x x x x00))))
 (let ((?x6147 (* 18 (* s x x x x00))))
 (let ((?x5977 (* 18 (* r s x x x x00))))
 (let ((?x6253 (* 54 (* x x x x00))))
 (let ((?x8972 (* 54 (* r r r s s s00))))
 (let ((?x8970 (* (- 108) (* r r r s x s00))))
 (let ((?x8968 (* 54 (* r r r x x s00))))
 (let ((?x9287 (* (- 6) (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475))))
 (let ((?x9279 (* 6 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475))))
 (let ((?x8938 (* (- 36) (* s x s00))))
 (let ((?x8937 (* 18 (* x x s00))))
 (let ((?x8858 (* (- 18) (* x x x s00))))
 (let ((?x8857 (* 18 (* x x s00 r00 r00))))
 (let ((?x8856 (* 36 (* r r x x s00 r00 r00))))
 (let ((?x8855 (* 54 (* r x x s00 r00 r00))))
 (let ((?x8850 (* (- 72) (* r r s x s00 r00 r00))))
 (let ((?x8848 (* 36 (* r r s s s00 r00 r00))))
 (let ((?x8845 (* 18 (* s s s00 r00 r00))))
 (let ((?x8843 (* (- 36) (* s x s00 r00 r00))))
 (let ((?x8842 (* (- 108) (* r s x s00 r00 r00))))
 (let ((?x8840 (* 54 (* r s s s00 r00 r00))))
 (let ((?x9233 (* (- 6) (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475))))
 (let ((?x8815 (* 4 (* s x x x s00 s00))))
 (let ((?x8813 (* (- 4) (* s s s s s00 s00))))
 (let ((?x8811 (* 12 (* s s s x s00 s00))))
 (let ((?x8809 (* (- 12) (* s s x x s00 s00))))
 (let ((?x8808 (* 24 (* r x x x s00 s00))))
 (let ((?x8802 (* (- 180) (* s x x x00))))
 (let ((?x3158 (* 12 (* x x x s00 s00))))
 (let ((?x8793 (* (- 342) (* r r s x x x00))))
 (let ((?x8791 (* (- 54) (* s s x00))))
 (let ((?x8738 (* (- 54) (* x x x00))))
 (let ((?x8740 (* 108 (* s x x00))))
 (let ((?x8743 (* (- 12) (* x x s00 s00))))
 (let ((?x8742 (* 24 (* s x s00 s00))))
 (let ((?x8745 (* (- 12) (* s s s00 s00))))
 (let ((?x8631 (* 36 (* r r x x x s00 r00))))
 (let ((?x8630 (* 6 (* r s x x x s00 r00))))
 (let ((?x8634 (* (- 6) (* r s s s s s00 r00))))
 (let ((?x8639 (* 18 (* r s s s x s00 r00))))
 (let ((?x8636 (* (- 18) (* r s s x x s00 r00))))
 (let ((?x1029 (* s s s00)))
 (let ((?x8544 (* 18 ?x1029)))
 (let ((?x9371 (+ (* 27 (* r s s x x s00)) (* (- 54) (* r r x x x s00)) (* (- 216) (* r x x x00)) (* 78 (* r s s s s00)) (* (- 108) (* r x x x x r00)) ?x8544 (* (- 18) (* s x x x x r00)) (* (- 3) (* ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 9) (* r s x x x s00)) (* 72 (* r s x s00 s00)) (* 4 (* s00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 9) (* s s s x s00 r00)) (* 6 (* r s s x s00 r00)) (* 30 (* s x x s00 r00)) (* 120 (* r r s s x s00 r00)) (* (- 33) (* s s x s00 r00)) (* 9 (* s s x x s00 r00)) (* (- 3) (* r s x x s00 r00)) (* (- 18) (* x x x s00 r00 r00)) ?x8636 (* (- 114) (* r r s x x s00 r00)) ?x8639 (* (- 36) (* r x x x s00 r00 r00)) (* 6 (* s s s s s00 r00 r00)) (* (- 18) (* s s s x s00 r00 r00)) (* 18 (* s s x x s00 r00 r00)) ?x8634 (* (- 6) (* s x x x s00 r00 r00)) (* (- 42) (* r r s s s s00 r00)) (* 3 (* s s s s s00 r00)) (* (- 3) (* s x x x s00 r00)) ?x8630 (* (- 2) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 3) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 18 (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 9 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 9) (* x x x s00 r00)) (* (- 6) (* r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 9) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) ?x8631 (* (- 9) (* r00 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 3) (* r s s s s00 r00)) (* 2 (* ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 12 (* s s s s00 r00)) (* 9 (* s s s00 r00)) (* 9 (* r s s s00 r00)) (* (- 36) (* r r s s s00 r00)) (* (- 18) (* s x s00 r00)) (* (- 18) (* r s x s00 r00)) (* 72 (* r r s x s00 r00)) (* 9 (* x x s00 r00)) (* 9 (* r x x s00 r00)) (* (- 36) (* r r x x s00 r00)) ?x8745 ?x8742 ?x8743 ?x8740 ?x8738 ?x8791 ?x8793 (* (- 270) (* r r x x x00)) (* (- 18) (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x3158 ?x8802 (* (- 522) (* r s x x x00)) (* (- 24) (* r r s s s00 s00)) ?x8808 (* 72 (* r r r s x s00 r00)) (* (- 16) (* s s s s00 s00)) (* 44 (* s s x s00 s00)) (* (- 27) (* r s s s x s00)) (* (- 40) (* s x x s00 s00)) ?x8809 (* (- 76) (* r s x x s00 s00)) (* (- 36) (* r r r s s s00 r00)) ?x8811 (* 80 (* r s s x s00 s00)) (* (- 18) (* s s s s s r00)) (* (- 36) (* r r r x x s00 r00)) ?x8813 (* (- 28) (* r s s s s00 s00)) ?x8815 ?x9233 ?x8840 (* 24 (* s s s s00 r00 r00)) (* (- 36) (* r s s s00 s00)) ?x8842 ?x8843 ?x8845 (* (- 18) (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1481 ?x1475)) ?x8848 (* 42 (* r s s s s00 r00 r00)) ?x8850 (* (- 66) (* s s x s00 r00 r00)) (* (- 120) (* r s s x s00 r00 r00)) (* 114 (* r s x x s00 r00 r00)) (* 60 (* s x x s00 r00 r00)) ?x8855 ?x8856 ?x8857 (* 9 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 6 (* r00 s00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 18) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x8858 (* 18 (* r00 x00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 18) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 60 (* s x x s00)) (* (- 66) (* s s x s00)) (* 24 (* s s s s00)) (* 18 (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475)) (* (- 6) (* s x x x s00)) (* (- 63) (* r x x x s00)) (* 18 (* s s x x s00)) (* 204 (* r s x x s00)) (* (- 18) (* s s s x s00)) (* (- 219) (* r s s x s00)) (* (- 6) (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* 6 (* s s s s s00)) (* 72 (* s s x x x r00)) (* 9 (* r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 9) (* r00 s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x8937 ?x8938 (* 6 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* 3 (* ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* 3 (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 18 (* r00 x00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 6 (* r00 r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 108) (* s s s x x r00)) (* 6 (* r00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* 72 (* s s s s x r00)) (* (- 2) (* s00 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* 81 (* r x x s00)) (* (- 6) (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 117 (* r r x x s00)) ?x9279 (* (- 162) (* r s x s00)) (* (- 234) (* r r s x s00)) (* 9 (* r s s s s s00)) (* (- 3) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 2 (* s00 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* 81 (* r s s s00)) (* 117 (* r r s s s00)) ?x9287 (* 171 (* r r s x x s00)) ?x8968 (* (- 180) (* r r s s x s00)) ?x8970 (* (- 54) (* x x x x r00)) (* 63 (* r r s s s s00)) ?x8972 (* (- 9) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x6253 (* (- 2) (* s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) ?x5977 ?x6147 (* (- 72) (* s s s x00)) (* 198 (* s s x x00)) (* (- 18) (* r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 24) (* r r x x s00 s00)) ?x9057 ?x9058 ?x9059 (* (- 2) (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 558 (* r s s x x00)) (* 360 (* r r s s x x00)) ?x9062 ?x9063 (* (- 198) (* r s s s x00)) (* (- 126) (* r r s s s x00)) ?x9066 (* 3 (* s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) ?x9067 ?x9068 (* 18 (* x00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475 ?x1475)) (* 9 (* r00 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 6) (* r00 r00 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 270) (* r r s s x00)) (* (- 18) (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 4 (* s00 s00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 6 (* r00 r00 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* 18 (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 216) (* r s s x00)) (* (- 72) (* s s s r00 x00)) (* (- 126) (* r s s s r00 x00)) ?x9071 (* 198 (* s s x r00 x00)) (* 360 (* r s s x r00 x00)) ?x9074 ?x9322 (* 432 (* r s x x00)) (* (- 180) (* s x x r00 x00)) (* (- 342) (* r s x x r00 x00)) (* 18 (* r00 x00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) ?x9077 (* (- 6) (* r00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 540 (* r r s x x00)) ?x9078 ?x9079 ?x9080 (* (- 108) (* r r r s s x00)) (* 216 (* r r r s x x00)) (* (- 6) (* r00 r00 s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 18) (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) ?x9081 ?x9082 ?x9083 (* (- 108) (* r r r x x x00)) (* (- 72) (* s s s s r00)) (* (- 126) (* r s s s s r00)) ?x9086 ?x9087 ?x9088 (* 270 (* s s s x r00)) (* 486 (* r s s s x r00)) (* 48 (* r r s x s00 s00)) ?x9091 ?x9092 ?x9093 (* (- 378) (* s s x x r00)) (* 9 (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 702) (* r s s x x r00)) (* (- 9) (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 36) (* r x x s00 s00)) ?x9096 ?x9097 ?x9098 (* 234 (* s x x x r00)) (* 450 (* r s x x x r00)) (* (- 3) (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 9 (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* 324 (* r s x r00 x00)) (* (- 54) (* x x r00 x00)) (* (- 108) (* r r s s r00 x00)) (* 216 (* r r s x r00 x00)) (* 3 (* s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 108 (* s x r00 x00)) (* (- 162) (* r s s r00 x00)) (* (- 9) (* ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475)) (* (- 9) (* s00 ?x1472 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* 4 (* s00 s00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 54) (* s s r00 x00)) (* 6 (* r00 r00 ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 162) (* r x x r00 x00)) (* (- 108) (* r r x x r00 x00)) (* 9 (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475)) (* 9 (* r00 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475)) (* (- 9) (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475)) (* (- 2) (* ?x1472 ?x1481 ?x1481 ?x1481 ?x1475 ?x1475 ?x1475 ?x1475 ?x1475)))))
 (let ((?x1435 (* x00 x00)))
 (let ((?x1465 (* (- 108) ?x1435)))
 (let ((?x1273 (* s00 s00 s00)))
 (let ((?x1464 (* (- 16) ?x1273)))
 (let ((?x1145 (* s00 r00 r00 r00)))
 (let ((?x1460 (* (- 216) ?x1145)))
 (let ((?x971 (* r00 r00 r00 x00)))
 (let ((?x972 (* 432 ?x971)))
 (let ((?x894 (* s00 x00)))
 (let ((?x1218 (* 108 ?x894)))
 (let ((?x820 (* s00 s00 r00 r00)))
 (let ((?x821 (* 36 ?x820)))
 (let ((?x757 (* s00 s00 r00)))
 (let ((?x1101 (* 108 ?x757)))
 (let ((?x736 (* s00 r00 r00)))
 (let ((?x1089 (* 36 ?x736)))
 (let ((?x680 (* s00 s00)))
 (let ((?x1454 (* (- 51) ?x680)))
 (let ((?x654 (* s r00 r00)))
 (let ((?x953 (* (- 36) ?x654)))
 (let ((?x611 (* r00 x00)))
 (let ((?x1451 (* (- 108) ?x611)))
 (let ((?x602 (* s00 r00 x00)))
 (let ((?x1450 (* (- 216) ?x602)))
 (let ((?x515 (* s00 r00)))
 (let ((?x609 (* 54 ?x515)))
 (let ((?x1076 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1466 (+ ?x143 ?x1076 ?x609 ?x1450 ?x1451 (* (- 15) (* s s)) ?x953 ?x1454 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1089 ?x1101 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x821 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1218 (* 108 (* s x)) (* (- 108) (* x x)) ?x972 (* 12 ?x1029) ?x1460 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1464 (* 216 (* x x00)) ?x1465)))
 (let (($x1467 (= ?x1466 0)))
 (let ((?x966 (* r00 r00 x00)))
 (let ((?x979 (* (- 36) ?x966)))
 (let ((?x895 (* 6 ?x894)))
 (let ((?x785 (* (- 2) ?x757)))
 (let ((?x1005 (* (- 15) ?x680)))
 (let ((?x634 (* s s)))
 (let ((?x658 (* 3 ?x634)))
 (let ((?x640 (* (- 54) ?x611)))
 (let ((?x653 (* 24 ?x515)))
 (let ((?x1168 (+ ?x143 ?x1076 (* (- 24) (* r s)) (* 24 (* r s00)) ?x653 ?x640 ?x658 (* 54 (* r x)) (* 36 (* r x r00)) ?x953 ?x1005 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1089 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x785 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x895 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x979 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1173 (= ?x1168 0)))
 (let ((?x737 (* 6 ?x736)))
 (let ((?x693 (* (- 4) ?x680)))
 (let ((?x635 (* 2 ?x634)))
 (let ((?x625 (* (- 18) ?x611)))
 (let ((?x630 (* 9 ?x515)))
 (let ((?x467 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x834 (+ ?x47 ?x467 (* (- 9) (* r s)) (* 9 (* r s00)) ?x630 ?x625 ?x635 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x654) ?x693 (* 18 (* x r00)) ?x737 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x841 (= ?x834 0)))
 (let ((?x558 (* r00 r00 r00)))
 (let ((?x559 (* 12 ?x558)))
 (let ((?x593 (* (- 6) ?x515)))
 (let ((?x590 (* (- 6) x00)))
 (let ((?x589 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x588 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x594 (+ ?x43 ?x588 ?x56 ?x44 ?x589 ?x590 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x593 ?x559)))
 (let (($x595 (= ?x594 0)))
 (let ((?x390 (* r00 r00)))
 (let ((?x391 (* 3 ?x390)))
 (let ((?x420 (* (- 1) s00)))
 (let (($x423 (= (+ s ?x420 (* (- 3) (* r r)) ?x391) 0)))
 (let (($x7095 (and $x423 $x595 $x841 $x1173 $x1467 (not (= ?x9371 0)))))
 (let ((?x6388 (+ 3 s ?x213)))
 (let ((?x6415 (+ x ?x369)))
 (let ((?x2910 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x7496 (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x7433 (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x6802 (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x1020 (+ (* 6 (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 9) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 4 (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) ?x6802 (* 18 (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 4) (* s00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 6 (* r00 r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 2) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 2 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 3) (* s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 9) (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* 18 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 6) (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 3) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 2) (* s00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) ?x7433 (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x7496 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 6 (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 3) (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x2910 (* 18 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 x00 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)))))
 (let (($x6604 (not (= ?x1020 0))))
 (let ((?x2081 (* 108 ?x1435)))
 (let ((?x438 (* (- 9) s)))
 (let ((?x6309 (* r00 r00 s00)))
 (let ((?x2554 (* (- 36) ?x6309)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5898 (* 51 ?x680)))
 (let ((?x5962 (* r00 r00 s)))
 (let ((?x1587 (* 36 ?x5962)))
 (let ((?x4949 (* 16 ?x1273)))
 (let ((?x4535 (* (- 108) ?x894)))
 (let ((?x1671 (* (- 432) ?x971)))
 (let ((?x6381 (* 108 ?x611)))
 (let ((?x6835 (+ (* 216 (* r00 s00 x00)) ?x6381 (* (- 54) (* r00 s00)) (* 15 ?x634) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1671 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4535 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4949 (* (- 108) (* x s)) ?x1587 ?x5898 (* (- 108) (* r00 x)) ?x137 ?x2554 ?x438 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2081)))
 (let (($x1786 (= ?x6835 0)))
 (let ((?x6648 (* 15 ?x680)))
 (let ((?x6626 (* 36 ?x966)))
 (let ((?x6544 (* (- 6) ?x894)))
 (let ((?x5971 (* 54 ?x611)))
 (let ((?x889 (+ (* 24 (* s r)) ?x5971 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x634) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6544 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1587 ?x6626 ?x6648 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2554 (* 54 (* x00 r)) ?x438 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x6336 (* 4 ?x680)))
 (let ((?x1554 (* 18 ?x611)))
 (let ((?x6610 (+ (* 9 (* s r)) ?x1554 (* (- 9) (* r00 s00)) (* (- 2) ?x634) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5962) ?x6336 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x6309) (* 18 (* x00 r)) ?x588 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x6606 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x588 ?x589 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x590 ?x559)))
 (let (($x6405 (= (+ s00 ?x369 (* 3 (* r r)) (* (- 3) ?x390)) 0)))
 (let (($x891 (and $x6405 (= ?x6606 0) (= ?x6610 0) (= ?x889 0) $x1786 $x6604)))
 (rewrite (= $x891 $x7095)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x6627 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x6388 (+ 3 s ?x213)))
 (let ((?x369 (* (- 1) s)))
 (let ((?x6415 (+ x ?x369)))
 (let ((?x1472 (+ 1 r)))
 (let ((?x2910 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x7496 (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x7433 (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x6802 (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x1020 (+ (* 6 (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 9) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 4 (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) ?x6802 (* 18 (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 4) (* s00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 6 (* r00 r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 2) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 2 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 3) (* s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 9) (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* 18 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 6) (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 3) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 2) (* s00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) ?x7433 (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x7496 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 6 (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 3) (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x2910 (* 18 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 x00 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)))))
 (let (($x6604 (not (= ?x1020 0))))
 (let ((?x1435 (* x00 x00)))
 (let ((?x2081 (* 108 ?x1435)))
 (let ((?x438 (* (- 9) s)))
 (let ((?x6309 (* r00 r00 s00)))
 (let ((?x2554 (* (- 36) ?x6309)))
 (let ((?x137 (* 9 s00)))
 (let ((?x680 (* s00 s00)))
 (let ((?x5898 (* 51 ?x680)))
 (let ((?x5962 (* r00 r00 s)))
 (let ((?x1587 (* 36 ?x5962)))
 (let ((?x1273 (* s00 s00 s00)))
 (let ((?x4949 (* 16 ?x1273)))
 (let ((?x894 (* s00 x00)))
 (let ((?x4535 (* (- 108) ?x894)))
 (let ((?x971 (* r00 r00 r00 x00)))
 (let ((?x1671 (* (- 432) ?x971)))
 (let ((?x611 (* r00 x00)))
 (let ((?x6381 (* 108 ?x611)))
 (let ((?x6835 (+ (* 216 (* r00 s00 x00)) ?x6381 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1671 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4535 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4949 (* (- 108) (* x s)) ?x1587 ?x5898 (* (- 108) (* r00 x)) ?x137 ?x2554 ?x438 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2081)))
 (let (($x1786 (= ?x6835 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1076 (* (- 9) s00)))
 (let ((?x1005 (* (- 15) ?x680)))
 (let ((?x966 (* r00 r00 x00)))
 (let ((?x979 (* (- 36) ?x966)))
 (let ((?x895 (* 6 ?x894)))
 (let ((?x634 (* s s)))
 (let ((?x658 (* 3 ?x634)))
 (let ((?x640 (* (- 54) ?x611)))
 (let ((?x3870 (+ (* (- 24) (* s r)) ?x640 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x658 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x895 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5962) ?x979 ?x1005 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1076 (* 36 ?x6309) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x467 (* (- 3) s00)))
 (let ((?x693 (* (- 4) ?x680)))
 (let ((?x635 (* 2 ?x634)))
 (let ((?x625 (* (- 18) ?x611)))
 (let ((?x6609 (+ (* (- 9) (* s r)) ?x625 (* 9 (* r00 s00)) ?x635 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5962) ?x693 (* 18 (* r00 x)) ?x467 (* 6 ?x6309) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6293 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x467 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x6405 (= (+ s00 ?x369 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x6405 (= ?x6293 0) (= ?x6609 0) (= ?x3870 0) $x1786 $x6604)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x890 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x6388 (+ 3 s ?x213)))
 (let ((?x369 (* (- 1) s)))
 (let ((?x6415 (+ x ?x369)))
 (let ((?x1472 (+ 1 r)))
 (let ((?x2910 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x7496 (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x7433 (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x6802 (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x1020 (+ (* 6 (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 9) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 4 (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) ?x6802 (* 18 (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 4) (* s00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 6 (* r00 r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 2) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 2 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 3) (* s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 9) (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* 18 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 6) (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 3) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 2) (* s00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) ?x7433 (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x7496 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 6 (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 3) (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x2910 (* 18 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 x00 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)))))
 (let (($x6604 (not (= ?x1020 0))))
 (let ((?x1435 (* x00 x00)))
 (let ((?x2081 (* 108 ?x1435)))
 (let ((?x438 (* (- 9) s)))
 (let ((?x6309 (* r00 r00 s00)))
 (let ((?x2554 (* (- 36) ?x6309)))
 (let ((?x137 (* 9 s00)))
 (let ((?x680 (* s00 s00)))
 (let ((?x5898 (* 51 ?x680)))
 (let ((?x5962 (* r00 r00 s)))
 (let ((?x1587 (* 36 ?x5962)))
 (let ((?x1273 (* s00 s00 s00)))
 (let ((?x4949 (* 16 ?x1273)))
 (let ((?x894 (* s00 x00)))
 (let ((?x4535 (* (- 108) ?x894)))
 (let ((?x971 (* r00 r00 r00 x00)))
 (let ((?x1671 (* (- 432) ?x971)))
 (let ((?x611 (* r00 x00)))
 (let ((?x6381 (* 108 ?x611)))
 (let ((?x6835 (+ (* 216 (* r00 s00 x00)) ?x6381 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1671 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4535 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4949 (* (- 108) (* x s)) ?x1587 ?x5898 (* (- 108) (* r00 x)) ?x137 ?x2554 ?x438 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2081)))
 (let (($x1786 (= ?x6835 0)))
 (let ((?x6648 (* 15 ?x680)))
 (let ((?x966 (* r00 r00 x00)))
 (let ((?x6626 (* 36 ?x966)))
 (let ((?x6544 (* (- 6) ?x894)))
 (let ((?x5971 (* 54 ?x611)))
 (let ((?x889 (+ (* 24 (* s r)) ?x5971 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x6544 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1587 ?x6626 ?x6648 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2554 (* 54 (* x00 r)) ?x438 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x588 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x6336 (* 4 ?x680)))
 (let ((?x1554 (* 18 ?x611)))
 (let ((?x6610 (+ (* 9 (* s r)) ?x1554 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5962) ?x6336 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x6309) (* 18 (* x00 r)) ?x588 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x558 (* r00 r00 r00)))
 (let ((?x559 (* 12 ?x558)))
 (let ((?x590 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x589 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6606 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x588 ?x589 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x590 ?x559)))
 (let (($x6405 (= (+ s00 ?x369 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x891 (and $x6405 (= ?x6606 0) (= ?x6610 0) (= ?x889 0) $x1786 $x6604)))
 (let ((?x143 (* 9 s)))
 (let ((?x1076 (* (- 9) s00)))
 (let ((?x1005 (* (- 15) ?x680)))
 (let ((?x979 (* (- 36) ?x966)))
 (let ((?x895 (* 6 ?x894)))
 (let ((?x634 (* s s)))
 (let ((?x658 (* 3 ?x634)))
 (let ((?x640 (* (- 54) ?x611)))
 (let ((?x3870 (+ (* (- 24) (* s r)) ?x640 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x658 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x895 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5962) ?x979 ?x1005 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1076 (* 36 ?x6309) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x467 (* (- 3) s00)))
 (let ((?x693 (* (- 4) ?x680)))
 (let ((?x635 (* 2 ?x634)))
 (let ((?x625 (* (- 18) ?x611)))
 (let ((?x6609 (+ (* (- 9) (* s r)) ?x625 (* 9 (* r00 s00)) ?x635 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5962) ?x693 (* 18 (* r00 x)) ?x467 (* 6 ?x6309) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6293 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x467 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x558))))
 (let (($x6512 (and $x6405 (= ?x6293 0) (= ?x6609 0) (= ?x3870 0) $x1786 $x6604)))
 (rewrite (= $x6512 $x891)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x366 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (+ (* 6 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x224 (- (- ?x219 (* 9 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x227 (+ (- ?x224 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215)) (* 6 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x231 (- (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215)) (* 18 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x236 (+ ?x231 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215) (* 18 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x240 (- (- ?x236 (* 6 ?x212 r00 ?x214 s00 ?x215 ?x215 ?x215)) (* 9 ?x212 r00 ?x214 s00 ?x215 ?x215))))
 (let ((?x243 (+ ?x240 (* 4 ?x212 ?x214 s00 s00 ?x215 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x246 (- ?x243 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x249 (+ (- ?x246 (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 x00)) (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x251 (- ?x249 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x254 (+ ?x251 (* 18 ?x212 ?x212 ?x214 ?x215 ?x215 x00) (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x258 (+ (- ?x254 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x262 (+ (- ?x258 (* 18 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x266 (- (- ?x262 (* 18 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215)) (* 4 ?x214 s00 s00 ?x215 ?x215 ?x215))))
 (let ((?x269 (+ ?x266 (* 6 r00 r00 ?x214 s00 ?x215 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x276 (+ (- ?x269 (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 x00)) (* 6 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215) (* 9 ?x212 r00 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x280 (+ (- ?x276 (* 2 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x283 (- ?x280 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x286 (+ (- ?x283 (* 6 ?x212 r00 r00 ?x214 s00 ?x215 ?x215)) (* 2 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x291 (+ (- ?x286 (* 3 ?x214 s00 ?x215 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x295 (- (- ?x291 (* 4 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215)) (* 6 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x299 (- (+ ?x295 (* 18 ?x212 r00 ?x214 ?x215 ?x215 x00)) (* 9 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x304 (+ ?x299 (* 9 ?x212 ?x214 s00 ?x215 ?x215 ?x215) (* 18 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215) (* 3 ?x212 ?x214 s00 ?x215 ?x215) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x309 (- (- ?x304 (* 9 ?x212 ?x212 ?x214 s00 ?x215 ?x215)) (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x315 (+ (- ?x309 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215) (* 9 r00 ?x214 s00 ?x215 ?x215 ?x215) (* 9 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 2 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x324 (- (- ?x315 (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215)) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x325 (- ?x324 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x327 (- (- ?x325 (* 3 ?x212 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x328 (- ?x327 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x332 (+ (- ?x328 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x334 (- ?x332 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x339 (+ ?x334 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 18 r00 ?x214 ?x215 ?x215 ?x215 ?x215) (* 3 ?x214 ?x214 ?x215 ?x215 ?x215) (* 6 ?x212 ?x212 r00 ?x214 s00 ?x215 ?x215))))
 (let ((?x344 (+ (- ?x339 (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 18 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x353 (- (- ?x344 (* 9 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 18 ?x212 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x355 (- (- ?x353 (* 18 r00 ?x214 ?x215 ?x215 ?x215 x00)) (* 18 ?x212 r00 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x357 (- (- ?x355 (* 6 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x358 (- ?x357 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x361 (+ ?x358 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x361 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x6553 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x6388 (+ 3 s ?x213)))
 (let ((?x369 (* (- 1) s)))
 (let ((?x6415 (+ x ?x369)))
 (let ((?x1472 (+ 1 r)))
 (let ((?x2910 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x7496 (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x7433 (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388))))
 (let ((?x6802 (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388))))
 (let ((?x1020 (+ (* 6 (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 9) (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 4 (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 18 (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) ?x6802 (* 18 (* x00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 18 (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 18) (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 4) (* s00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 6 (* r00 r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* r00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 2 (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 2) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 2 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 3) (* s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 4) (* s00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 x00 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 9) (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* 18 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* s00 ?x1472 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 6 (* r00 r00 s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 9 (* r00 s00 ?x6415 ?x6415 ?x6415 ?x6388)) (* 9 (* r00 s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* s00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 6) (* r00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* r00 x00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 3) (* ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 2) (* s00 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388)) ?x7433 (* (- 3) (* s00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x7496 (* 6 (* r00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 6) (* r00 s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6388 ?x6388 ?x6388)) (* 3 (* ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 18 (* r00 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388)) (* 3 (* ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* 6 (* r00 s00 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388)) (* (- 3) (* s00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) ?x2910 (* 18 (* ?x1472 ?x1472 ?x6415 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 x00 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 18) (* r00 ?x1472 ?x6415 ?x6415 ?x6415 ?x6388)) (* (- 6) (* r00 r00 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388)) (* (- 18) (* x00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* (- 9) (* r00 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388)) (* 9 (* s00 ?x1472 ?x1472 ?x1472 ?x1472 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388)) (* 2 (* ?x1472 ?x6415 ?x6415 ?x6415 ?x6388 ?x6388 ?x6388 ?x6388 ?x6388)))))
 (let (($x6604 (not (= ?x1020 0))))
 (let ((?x1435 (* x00 x00)))
 (let ((?x2081 (* 108 ?x1435)))
 (let ((?x438 (* (- 9) s)))
 (let ((?x6309 (* r00 r00 s00)))
 (let ((?x2554 (* (- 36) ?x6309)))
 (let ((?x137 (* 9 s00)))
 (let ((?x680 (* s00 s00)))
 (let ((?x5898 (* 51 ?x680)))
 (let ((?x5962 (* r00 r00 s)))
 (let ((?x1587 (* 36 ?x5962)))
 (let ((?x1273 (* s00 s00 s00)))
 (let ((?x4949 (* 16 ?x1273)))
 (let ((?x894 (* s00 x00)))
 (let ((?x4535 (* (- 108) ?x894)))
 (let ((?x971 (* r00 r00 r00 x00)))
 (let ((?x1671 (* (- 432) ?x971)))
 (let ((?x611 (* r00 x00)))
 (let ((?x6381 (* 108 ?x611)))
 (let ((?x6835 (+ (* 216 (* r00 s00 x00)) ?x6381 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1671 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4535 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4949 (* (- 108) (* x s)) ?x1587 ?x5898 (* (- 108) (* r00 x)) ?x137 ?x2554 ?x438 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2081)))
 (let (($x1786 (= ?x6835 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1076 (* (- 9) s00)))
 (let ((?x1005 (* (- 15) ?x680)))
 (let ((?x966 (* r00 r00 x00)))
 (let ((?x979 (* (- 36) ?x966)))
 (let ((?x895 (* 6 ?x894)))
 (let ((?x634 (* s s)))
 (let ((?x658 (* 3 ?x634)))
 (let ((?x640 (* (- 54) ?x611)))
 (let ((?x3870 (+ (* (- 24) (* s r)) ?x640 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x658 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x895 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5962) ?x979 ?x1005 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1076 (* 36 ?x6309) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x467 (* (- 3) s00)))
 (let ((?x693 (* (- 4) ?x680)))
 (let ((?x635 (* 2 ?x634)))
 (let ((?x625 (* (- 18) ?x611)))
 (let ((?x6609 (+ (* (- 9) (* s r)) ?x625 (* 9 (* r00 s00)) ?x635 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5962) ?x693 (* 18 (* r00 x)) ?x467 (* 6 ?x6309) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6293 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x467 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x6405 (= (+ s00 ?x369 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x6512 (and $x6405 (= ?x6293 0) (= ?x6609 0) (= ?x3870 0) $x1786 $x6604)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (+ (* 6 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x224 (- (- ?x219 (* 9 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x227 (+ (- ?x224 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215)) (* 6 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x231 (- (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215)) (* 18 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x236 (+ ?x231 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215) (* 18 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x240 (- (- ?x236 (* 6 ?x212 r00 ?x214 s00 ?x215 ?x215 ?x215)) (* 9 ?x212 r00 ?x214 s00 ?x215 ?x215))))
 (let ((?x243 (+ ?x240 (* 4 ?x212 ?x214 s00 s00 ?x215 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x246 (- ?x243 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x249 (+ (- ?x246 (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 x00)) (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x251 (- ?x249 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x254 (+ ?x251 (* 18 ?x212 ?x212 ?x214 ?x215 ?x215 x00) (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x258 (+ (- ?x254 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x262 (+ (- ?x258 (* 18 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x266 (- (- ?x262 (* 18 ?x212 ?x212 ?x214 ?x215 ?x215 ?x215)) (* 4 ?x214 s00 s00 ?x215 ?x215 ?x215))))
 (let ((?x269 (+ ?x266 (* 6 r00 r00 ?x214 s00 ?x215 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x276 (+ (- ?x269 (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 x00)) (* 6 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215) (* 9 ?x212 r00 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x280 (+ (- ?x276 (* 2 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x283 (- ?x280 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x286 (+ (- ?x283 (* 6 ?x212 r00 r00 ?x214 s00 ?x215 ?x215)) (* 2 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x291 (+ (- ?x286 (* 3 ?x214 s00 ?x215 ?x215 ?x215)) (* 9 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215) (* 9 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x295 (- (- ?x291 (* 4 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215)) (* 6 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x299 (- (+ ?x295 (* 18 ?x212 r00 ?x214 ?x215 ?x215 x00)) (* 9 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x304 (+ ?x299 (* 9 ?x212 ?x214 s00 ?x215 ?x215 ?x215) (* 18 ?x212 ?x214 ?x215 ?x215 ?x215 ?x215) (* 3 ?x212 ?x214 s00 ?x215 ?x215) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x309 (- (- ?x304 (* 9 ?x212 ?x212 ?x214 s00 ?x215 ?x215)) (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x315 (+ (- ?x309 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215) (* 9 r00 ?x214 s00 ?x215 ?x215 ?x215) (* 9 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215) (* 2 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x324 (- (- ?x315 (* 6 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215)) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x325 (- ?x324 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x327 (- (- ?x325 (* 3 ?x212 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x328 (- ?x327 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x332 (+ (- ?x328 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x334 (- ?x332 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x339 (+ ?x334 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 18 r00 ?x214 ?x215 ?x215 ?x215 ?x215) (* 3 ?x214 ?x214 ?x215 ?x215 ?x215) (* 6 ?x212 ?x212 r00 ?x214 s00 ?x215 ?x215))))
 (let ((?x344 (+ (- ?x339 (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 18 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x353 (- (- ?x344 (* 9 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 18 ?x212 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x355 (- (- ?x353 (* 18 r00 ?x214 ?x215 ?x215 ?x215 x00)) (* 18 ?x212 r00 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x357 (- (- ?x355 (* 6 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x358 (- ?x357 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x361 (+ ?x358 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x365 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x361 0))))))
 (rewrite (= $x365 $x6512))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x367 (asserted $x366)))
 (let ((@x1760 (mp (mp @x367 (quant-intro (proof-bind ?x6553) (= $x366 $x6627)) $x6627) (rewrite (= $x6627 $x6627)) $x6627)))
 (let ((@x8174 (mp (mp @x1760 (quant-intro (proof-bind ?x890) (= $x6627 $x863)) $x863) (quant-intro (proof-bind ?x2559) (= $x863 $x4495)) $x4495)))
 (let ((@x8120 (mp (mp~ @x8174 (sk (~ $x4495 $x3584)) $x3584) (rewrite (= $x3584 $x6010)) $x6010)))
 (let ((@x7824 (and-elim @x8120 $x3598)))
 (let ((@x3847 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3598) $x1686)) @x7824 $x1686)))
 (let (($x7668 (>= ?x6439 0)))
 (let ((@x7766 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3598) $x7668)) @x7824 $x7668)))
 (let (($x8011 (<= ?x2946 0)))
 (let ((@x7958 (and-elim @x8120 $x3607)))
 (let ((@x5326 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3607) $x8011)) @x7958 $x8011)))
 (let (($x8014 (>= ?x2946 0)))
 (let ((@x7774 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3607) $x8014)) @x7958 $x8014)))
 (let (($x7670 (<= ?x5496 0)))
 (let ((@x7959 (and-elim @x8120 $x4854)))
 (let ((@x2912 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4854) $x7670)) @x7959 $x7670)))
 (let (($x8022 (>= ?x5496 0)))
 (let ((@x8269 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4854) $x8022)) @x7959 $x8022)))
 (let (($x8023 (<= ?x7660 0)))
 (let ((@x7662 (and-elim @x8120 $x7974)))
 (let ((@x409 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7974) $x8023)) @x7662 $x8023)))
 (let (($x7810 (>= ?x7660 0)))
 (let ((@x8083 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7974) $x7810)) @x7662 $x7810)))
 (let (($x7582 (not (<= ?x4284 0))))
 (let (($x5820 (>= ?x4284 0)))
 (let ((@x5651 ((_ th-lemma arith) (hypothesis (not $x5820)) @x7766 @x3847 @x8083 @x409 @x8269 @x2912 @x8083 @x409 @x8269 @x2912 @x7774 @x5326 @x7766 @x3847 false)))
 (let ((@x875 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2907 $x7582 (not $x5820))) (and-elim @x8120 $x7698) (or $x7582 (not $x5820)))))
 ((_ th-lemma arith) (unit-resolution @x875 (lemma @x5651 $x5820) $x7582) @x7766 @x3847 @x8083 @x409 @x8269 @x2912 @x8083 @x409 @x8269 @x2912 @x7774 @x5326 @x7766 @x3847 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        39
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2424
 :arith-nonlinear-bounds    32
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 396
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.48
 :memory                    4.17
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                4766898
 :num-checks                1
 :propagations              12
 :rlimit-count              64178
 :time                      0.07
 :total-time                0.09)
