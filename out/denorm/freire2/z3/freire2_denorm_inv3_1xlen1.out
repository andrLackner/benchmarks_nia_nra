unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1806 (* r!2 s!1)))
 (let ((?x1293 (* (- 3) ?x1806)))
 (let ((?x1768 (* r!2 r!2)))
 (let ((?x661 (* 18 ?x1768)))
 (let ((?x673 (* 18 x!0)))
 (let ((?x1451 (* r!2 x!0)))
 (let ((?x1452 (* 18 ?x1451)))
 (let ((?x1450 (* s!1 s!1)))
 (let ((?x1438 (* 2 ?x1450)))
 (let ((?x665 (* (- 12) s!1)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x639 (* 9 r!2)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x570 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x736 (+ ?x1757 ?x570 ?x1681 ?x1562 ?x1859 (* (- 6) (* s00 r00 r!2)) ?x504 ?x639 ?x572 ?x616 (* 18 (* r00 x!0)) (* 6 (* r00 r!2 s!1)) (* (- 6) (* r00 r00 s!1)) (* (- 18) (* x00 r!2)) (* (- 36) (* r00 r00 r!2)) (* (- 21) (* r00 s!1)) (* 2 (* s00 s!1)) ?x665 ?x1438 ?x1452 ?x673 (* 36 (* r00 r!2 r!2)) (* 21 (* s00 r!2)) ?x661 ?x1293)))
 (let (($x1066 (<= ?x736 0)))
 (let ((?x1064 (* 2 ?x1806)))
 (let ((?x1363 (* 6 x!0)))
 (let ((?x1570 (* (- 3) s!1)))
 (let ((?x1558 (* 3 r!2)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1418 (+ ?x44 ?x468 ?x469 ?x472 ?x438 ?x1558 (* (- 12) (* r00 r00 r!2)) ?x1570 ?x1363 (* 4 (* s00 r!2)) ?x1064)))
 (let (($x529 (<= ?x1418 0)))
 (let (($x1027 (= ?x1418 0)))
 (let ((?x672 (+ 3 (* 6 r!2) s!1)))
 (let ((?x1169 (* (- 1) s!1)))
 (let ((?x666 (+ ?x1169 x!0)))
 (let ((?x577 (+ 1 r!2)))
 (let ((?x731 (* ?x577 ?x577 ?x666 ?x666 ?x672 ?x672 ?x736)))
 (let (($x1488 (= ?x731 0)))
 (let (($x591 (not $x1488)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x1539 (* (- 9) s!1)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x590 (* 16 ?x1162)))
 (let ((?x909 (* r00 r00 s!1)))
 (let ((?x1230 (* 36 ?x909)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1792 (* (- 108) ?x783)))
 (let ((?x1480 (* (- 36) ?x615)))
 (let ((?x1692 (* 51 ?x559)))
 (let ((?x1559 (* 108 ?x490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1259 (+ ?x137 (* (- 54) ?x394) (* (- 12) (* s00 s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 216 (* s00 r00 x00)) ?x1559 ?x1692 ?x1480 (* (- 216) (* r00 r00 r00 s!1)) (* (- 108) (* s00 s00 r00)) (* (- 108) (* r00 x!0)) (* (- 36) (* s00 s00 r00 r00)) (* 108 (* s00 x!0)) ?x1792 (* (- 108) (* s!1 x!0)) ?x1260 (* 108 (* x00 s!1)) ?x1230 (* 216 (* s00 r00 r00 r00)) (* 54 (* r00 s!1)) (* 108 (* x!0 x!0)) ?x590 (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)) ?x1539 ?x790 (* 15 ?x1450) (* 432 (* r00 r00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)))))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x1629 (* 36 ?x855)))
 (let ((?x1277 (* (- 6) ?x783)))
 (let ((?x764 (* 15 ?x559)))
 (let ((?x934 (* 54 ?x490)))
 (let ((?x785 (+ ?x137 (* (- 4) (* r00 s!1 s!1)) (* (- 24) ?x394) ?x934 ?x764 ?x1480 (* 2 (* s00 s00 r00)) (* (- 54) (* r00 x!0)) (* 4 (* s00 s00 r!2)) (* 6 (* s00 x!0)) (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) ?x1277 (* (- 6) (* s!1 x!0)) ?x1629 (* 6 (* x00 s!1)) (* (- 36) (* r00 r!2 x!0)) ?x1230 (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 2) (* r!2 s!1 s!1)) (* (- 12) (* s00 s!1)) ?x1539 (* (- 3) ?x1450) (* (- 54) ?x1451) (* (- 36) (* r00 r00 x!0)) (* (- 24) (* s00 r!2)) (* 24 ?x1806))))
 (let ((?x1238 (* 4 ?x559)))
 (let ((?x700 (* 18 ?x490)))
 (let ((?x958 (+ ?x44 (* (- 9) ?x394) (* 6 (* s00 r00 r!2)) ?x700 ?x1238 (* (- 6) ?x615) (* (- 18) (* r00 x!0)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x909) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* (- 2) (* s00 s!1)) ?x1570 (* (- 2) ?x1450) (* (- 18) ?x1451) (* (- 9) (* s00 r!2)) (* 9 ?x1806))))
 (let (($x630 (= ?x958 0)))
 (let ((?x1567 (* (- 3) ?x269)))
 (let ((?x941 (+ s00 ?x1567 ?x1169 (* 3 ?x1768))))
 (let (($x752 (= ?x941 0)))
 (let (($x511 (and $x752 $x1027 $x630 (= ?x785 0) (= ?x1259 0) $x591)))
 (let ((?x849 (* (- 6) (* r!2 s00 r00))))
 (let ((?x538 (* s!1 s00)))
 (let ((?x1471 (* 2 ?x538)))
 (let ((?x1743 (* r!2 x00)))
 (let ((?x1317 (* (- 18) ?x1743)))
 (let ((?x1678 (* x!0 r00)))
 (let ((?x1742 (* 18 ?x1678)))
 (let ((?x1677 (* s!1 r00 r00)))
 (let ((?x1393 (* (- 6) ?x1677)))
 (let ((?x1380 (* 6 (* r!2 s!1 r00))))
 (let ((?x1389 (+ ?x639 ?x665 ?x673 ?x1757 ?x570 ?x1681 ?x661 ?x1562 ?x1293 (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1859 ?x504 ?x1438 ?x1452 ?x1380 ?x1393 ?x572 ?x1742 ?x616 ?x1317 ?x1471 (* (- 21) (* s!1 r00)) ?x849 (* 36 (* r!2 r!2 r00)))))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x828 (* (- 36) ?x1677)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x851 (* 9 s!1)))
 (let ((?x530 (+ ?x851 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x1450) ?x828 ?x1343 (* 108 ?x1678) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x978 (* 66 ?x538) ?x990 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x726 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1107 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x861 (* 12 (* s!1 s!1 s00)) ?x1349 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1353 (* 216 (* x!0 x00)) ?x1354)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x520 (+ ?x851 ?x965 (* (- 24) ?x1806) (* 24 (* r!2 s00)) ?x542 ?x527 (* 3 ?x1450) (* 54 ?x1451) ?x828 (* 36 (* r!2 x!0 r00)) ?x894 (* 54 ?x1678) (* (- 6) (* x!0 s00)) ?x978 (* (- 54) ?x1743) (* 4 (* s!1 s!1 r00)) (* 12 ?x538) ?x678 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x784 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x868 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x850 (+ (* 3 s!1) ?x346 (* (- 9) ?x1806) (* 9 (* r!2 s00)) ?x509 ?x504 ?x1438 ?x1452 ?x1380 ?x1393 ?x572 ?x1742 ?x616 ?x1317 ?x1471 (* (- 9) (* s!1 r00)) ?x849)))
 (let ((?x915 (+ ?x1558 ?x1570 ?x1363 ?x44 ?x468 ?x469 ?x1064 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x472 ?x438)))
 (let (($x1379 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x1768) (* 3 ?x269)) 0) (= ?x915 0) (= ?x850 0) (= ?x520 0) (= ?x530 0) (not (= (* ?x577 ?x577 ?x666 ?x666 ?x672 ?x672 ?x1389) 0)))))
 (let (($x763 (exists ((r Int) (s Int) (x Int) )(! (let ((?x707 (* (- 6) (* r s00 r00))))
 (let ((?x656 (* s s00)))
 (let ((?x657 (* 2 ?x656)))
 (let ((?x627 (* r x00)))
 (let ((?x640 (* (- 18) ?x627)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x585 (* x r00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x546 (* (- 6) ?x533)))
 (let ((?x522 (* 6 (* r s r00))))
 (let ((?x517 (* r x)))
 (let ((?x518 (* 18 ?x517)))
 (let ((?x513 (* s s)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x319 (* r r00 r00)))
 (let ((?x1571 (* (- 36) ?x319)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x570 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x1489 (* 18 x)))
 (let ((?x595 (+ (* 9 r) (* (- 12) s) ?x1489 ?x1757 ?x570 ?x1681 (* 18 (* r r)) ?x1562 (* (- 3) (* r s)) ?x1571 (* 21 (* r s00)) ?x1859 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 (* (- 21) (* s r00)) ?x707 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1467 (+ ?x248 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x842 (* (- 36) ?x533)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x513) ?x842 ?x1343 (* 108 ?x585) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x978 (* 66 ?x656) ?x990 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x726 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 (* r s00)) ?x542 ?x527 ?x545 (* 54 ?x517) ?x842 (* 36 (* r x r00)) ?x894 (* 54 ?x585) (* (- 6) (* x s00)) ?x978 (* (- 54) ?x627) (* 4 (* s s r00)) (* 12 ?x656) ?x678 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x668 (* s r00)))
 (let ((?x681 (* (- 9) ?x668)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x653 (* 9 ?x367)))
 (let ((?x313 (* r s)))
 (let ((?x485 (* (- 9) ?x313)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 ?x485 ?x653 ?x509 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 ?x681 ?x707)))
 (let (($x720 (= ?x713 0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x467 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 ?x467 ?x56 ?x44 ?x468 ?x469 (* 2 ?x313) (* (- 12) ?x319) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x302 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x269)) 0)))
 (and $x302 $x474 $x720 $x1062 $x1356 (not (= (* ?x1361 ?x1361 ?x1467 ?x1467 ?x1364 ?x1364 ?x595) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1446 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1733 (* r00 r00 s00)))
 (let ((?x1741 (* 6 ?x1733)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1574 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x873 (* r00 s00)))
 (let ((?x642 (* 9 ?x873)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x985 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x642 ?x1574 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1741 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x929 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1395 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let (($x1075 (not (= (* ?x1361 ?x1361 ?x1395 ?x1395 ?x929 ?x929 ?x985) 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x1382 (* (- 9) s)))
 (let ((?x293 (* (- 36) ?x1733)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1692 (* 51 ?x559)))
 (let ((?x1017 (* r00 r00 s)))
 (let ((?x496 (* 36 ?x1017)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x590 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1792 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x860)))
 (let ((?x1559 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1559 (* (- 54) ?x873) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1792 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x590 (* (- 108) (* x s)) ?x496 ?x1692 (* (- 108) (* r00 x)) ?x137 ?x293 ?x1382 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x827 0)))
 (let ((?x764 (* 15 ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x1629 (* 36 ?x855)))
 (let ((?x1277 (* (- 6) ?x783)))
 (let ((?x934 (* 54 ?x490)))
 (let ((?x287 (+ (* 24 (* s r)) ?x934 (* (- 36) (* r00 x r)) (* (- 24) ?x873) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1277 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x496 ?x1629 ?x764 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x293 (* 54 (* x00 r)) ?x1382 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x467 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1238 (* 4 ?x559)))
 (let ((?x700 (* 18 ?x490)))
 (let ((?x686 (+ (* 9 (* s r)) ?x700 (* (- 9) ?x873) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1017) ?x1238 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1733) (* 18 (* x00 r)) ?x467 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1280 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x467 ?x468 (* 4 (* s00 r)) (* (- 6) ?x873) ?x56 ?x469 ?x438)))
 (let (($x607 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x607 (= ?x1280 0) (= ?x686 0) (= ?x287 0) $x839 $x1075))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1767 (lambda ((r Int) (s Int) (x Int) )(let ((?x707 (* (- 6) (* r s00 r00))))
 (let ((?x656 (* s s00)))
 (let ((?x657 (* 2 ?x656)))
 (let ((?x627 (* r x00)))
 (let ((?x640 (* (- 18) ?x627)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x585 (* x r00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x546 (* (- 6) ?x533)))
 (let ((?x522 (* 6 (* r s r00))))
 (let ((?x517 (* r x)))
 (let ((?x518 (* 18 ?x517)))
 (let ((?x513 (* s s)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x319 (* r r00 r00)))
 (let ((?x1571 (* (- 36) ?x319)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x570 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x1489 (* 18 x)))
 (let ((?x595 (+ (* 9 r) (* (- 12) s) ?x1489 ?x1757 ?x570 ?x1681 (* 18 (* r r)) ?x1562 (* (- 3) (* r s)) ?x1571 (* 21 (* r s00)) ?x1859 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 (* (- 21) (* s r00)) ?x707 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1467 (+ ?x248 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x842 (* (- 36) ?x533)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x513) ?x842 ?x1343 (* 108 ?x585) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x978 (* 66 ?x656) ?x990 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x726 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 (* r s00)) ?x542 ?x527 ?x545 (* 54 ?x517) ?x842 (* 36 (* r x r00)) ?x894 (* 54 ?x585) (* (- 6) (* x s00)) ?x978 (* (- 54) ?x627) (* 4 (* s s r00)) (* 12 ?x656) ?x678 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x668 (* s r00)))
 (let ((?x681 (* (- 9) ?x668)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x653 (* 9 ?x367)))
 (let ((?x313 (* r s)))
 (let ((?x485 (* (- 9) ?x313)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 ?x485 ?x653 ?x509 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 ?x681 ?x707)))
 (let (($x720 (= ?x713 0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x467 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 ?x467 ?x56 ?x44 ?x468 ?x469 (* 2 ?x313) (* (- 12) ?x319) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x302 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x269)) 0)))
 (let (($x1862 (and $x302 $x474 $x720 $x1062 $x1356 (not (= (* ?x1361 ?x1361 ?x1467 ?x1467 ?x1364 ?x1364 ?x595) 0)))))
 (let ((?x1733 (* r00 r00 s00)))
 (let ((?x1741 (* 6 ?x1733)))
 (let ((?x873 (* r00 s00)))
 (let ((?x642 (* 9 ?x873)))
 (let ((?x985 (+ 9 (* (- 9) (* ?x1361 (+ 3 s ?x213))) ?x504 ?x642 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1361 (+ x ?x248))) (* 6 (* r00 ?x1361 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x572 (* 18 (* r00 (+ x ?x248))) ?x346 ?x1741 (* (- 18) (* x00 ?x1361)) ?x47 (* 18 r) (* 9 (* s00 ?x1361)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1361)))))
 (let ((?x929 (+ 3 s ?x213)))
 (let ((?x1395 (+ x ?x248)))
 (let (($x1075 (not (= (* ?x1361 ?x1361 ?x1395 ?x1395 ?x929 ?x929 ?x985) 0))))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x1382 (* (- 9) s)))
 (let ((?x293 (* (- 36) ?x1733)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1692 (* 51 ?x559)))
 (let ((?x1017 (* r00 r00 s)))
 (let ((?x496 (* 36 ?x1017)))
 (let ((?x590 (* 16 ?x1162)))
 (let ((?x1792 (* (- 108) ?x783)))
 (let ((?x1260 (* (- 432) ?x860)))
 (let ((?x1559 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1559 (* (- 54) ?x873) (* 15 ?x513) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1792 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x590 (* (- 108) (* x s)) ?x496 ?x1692 (* (- 108) (* r00 x)) ?x137 ?x293 ?x1382 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x827 0)))
 (let ((?x764 (* 15 ?x559)))
 (let ((?x1629 (* 36 ?x855)))
 (let ((?x1277 (* (- 6) ?x783)))
 (let ((?x934 (* 54 ?x490)))
 (let ((?x287 (+ (* 24 (* s r)) ?x934 (* (- 36) (* r00 x r)) (* (- 24) ?x873) (* (- 3) ?x513) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1277 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x496 ?x1629 ?x764 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x293 (* 54 (* x00 r)) ?x1382 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1238 (* 4 ?x559)))
 (let ((?x700 (* 18 ?x490)))
 (let ((?x686 (+ (* 9 (* s r)) ?x700 (* (- 9) ?x873) (* (- 2) ?x513) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1017) ?x1238 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1733) (* 18 (* x00 r)) ?x467 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1280 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x467 ?x468 (* 4 (* s00 r)) (* (- 6) ?x873) ?x56 ?x469 ?x438)))
 (let (($x607 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) ?x269)) 0)))
 (let (($x288 (and $x607 (= ?x1280 0) (= ?x686 0) (= ?x287 0) $x839 $x1075)))
 (rewrite (= $x288 $x1862))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1078 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1733 (* r00 r00 s00)))
 (let ((?x1741 (* 6 ?x1733)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1574 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x873 (* r00 s00)))
 (let ((?x642 (* 9 ?x873)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x985 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x642 ?x1574 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1741 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x929 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1395 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let (($x1075 (not (= (* ?x1361 ?x1361 ?x1395 ?x1395 ?x929 ?x929 ?x985) 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x1382 (* (- 9) s)))
 (let ((?x293 (* (- 36) ?x1733)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1692 (* 51 ?x559)))
 (let ((?x1017 (* r00 r00 s)))
 (let ((?x496 (* 36 ?x1017)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x590 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1792 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x860)))
 (let ((?x1559 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1559 (* (- 54) ?x873) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1792 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x590 (* (- 108) (* x s)) ?x496 ?x1692 (* (- 108) (* r00 x)) ?x137 ?x293 ?x1382 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x827 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x513 (* s s)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x1597 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x873) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1017) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1733) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x699 (+ (* (- 9) (* s r)) ?x504 ?x642 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1017) ?x572 ?x1612 ?x346 ?x1741 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x456 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x873) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x607 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x607 (= ?x456 0) (= ?x699 0) (= ?x1597 0) $x839 $x1075)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x564 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1733 (* r00 r00 s00)))
 (let ((?x1741 (* 6 ?x1733)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1574 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x873 (* r00 s00)))
 (let ((?x642 (* 9 ?x873)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x985 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x642 ?x1574 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1741 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x929 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1395 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let (($x1075 (not (= (* ?x1361 ?x1361 ?x1395 ?x1395 ?x929 ?x929 ?x985) 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x1382 (* (- 9) s)))
 (let ((?x293 (* (- 36) ?x1733)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1692 (* 51 ?x559)))
 (let ((?x1017 (* r00 r00 s)))
 (let ((?x496 (* 36 ?x1017)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x590 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1792 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x860)))
 (let ((?x1559 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1559 (* (- 54) ?x873) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1792 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x590 (* (- 108) (* x s)) ?x496 ?x1692 (* (- 108) (* r00 x)) ?x137 ?x293 ?x1382 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x827 0)))
 (let ((?x764 (* 15 ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x1629 (* 36 ?x855)))
 (let ((?x1277 (* (- 6) ?x783)))
 (let ((?x934 (* 54 ?x490)))
 (let ((?x287 (+ (* 24 (* s r)) ?x934 (* (- 36) (* r00 x r)) (* (- 24) ?x873) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1277 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x496 ?x1629 ?x764 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x293 (* 54 (* x00 r)) ?x1382 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x467 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1238 (* 4 ?x559)))
 (let ((?x700 (* 18 ?x490)))
 (let ((?x686 (+ (* 9 (* s r)) ?x700 (* (- 9) ?x873) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1017) ?x1238 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1733) (* 18 (* x00 r)) ?x467 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1280 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x467 ?x468 (* 4 (* s00 r)) (* (- 6) ?x873) ?x56 ?x469 ?x438)))
 (let (($x607 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x288 (and $x607 (= ?x1280 0) (= ?x686 0) (= ?x287 0) $x839 $x1075)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x513 (* s s)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x1597 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x873) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1017) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1733) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x699 (+ (* (- 9) (* s r)) ?x504 ?x642 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1017) ?x572 ?x1612 ?x346 ?x1741 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x456 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x873) (* (- 6) x) ?x59 (* (- 12) ?x437))))
 (let (($x1040 (and $x607 (= ?x456 0) (= ?x699 0) (= ?x1597 0) $x839 $x1075)))
 (rewrite (= $x1040 $x288)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x245 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x240 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- 1) ?x212 ?x212 ?x214 ?x214 ?x218 ?x218)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x240 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1080 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1733 (* r00 r00 s00)))
 (let ((?x1741 (* 6 ?x1733)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1574 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x873 (* r00 s00)))
 (let ((?x642 (* 9 ?x873)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x985 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x642 ?x1574 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1741 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x929 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1395 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let (($x1075 (not (= (* ?x1361 ?x1361 ?x1395 ?x1395 ?x929 ?x929 ?x985) 0))))
 (let ((?x1324 (* x00 x00)))
 (let ((?x790 (* 108 ?x1324)))
 (let ((?x1382 (* (- 9) s)))
 (let ((?x293 (* (- 36) ?x1733)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1692 (* 51 ?x559)))
 (let ((?x1017 (* r00 r00 s)))
 (let ((?x496 (* 36 ?x1017)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x590 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1792 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1260 (* (- 432) ?x860)))
 (let ((?x1559 (* 108 ?x490)))
 (let ((?x827 (+ (* 216 (* r00 s00 x00)) ?x1559 (* (- 54) ?x873) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1260 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1792 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x590 (* (- 108) (* x s)) ?x496 ?x1692 (* (- 108) (* r00 x)) ?x137 ?x293 ?x1382 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x790)))
 (let (($x839 (= ?x827 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x513 (* s s)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x1597 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x873) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1017) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1733) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x699 (+ (* (- 9) (* s r)) ?x504 ?x642 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1017) ?x572 ?x1612 ?x346 ?x1741 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x456 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x873) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x607 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1040 (and $x607 (= ?x456 0) (= ?x699 0) (= ?x1597 0) $x839 $x1075)))
 (let ((?x218 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x240 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- 1) ?x212 ?x212 ?x214 ?x214 ?x218 ?x218)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x244 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x240 0))))))
 (rewrite (= $x244 $x1040)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x246 (asserted $x245)))
 (let ((@x671 (mp (mp @x246 (quant-intro (proof-bind ?x1080) (= $x245 $x1078)) $x1078) (rewrite (= $x1078 $x1078)) $x1078)))
 (let ((@x1874 (mp (mp @x671 (quant-intro (proof-bind ?x564) (= $x1078 $x1446)) $x1446) (quant-intro (proof-bind ?x1767) (= $x1446 $x763)) $x763)))
 (let ((@x314 (mp (mp~ @x1874 (sk (~ $x763 $x1379)) $x1379) (rewrite (= $x1379 $x511)) $x511)))
 (let ((@x1694 (and-elim @x314 $x1027)))
 (let ((@x355 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1027) $x529)) @x1694 $x529)))
 (let (($x635 (>= ?x1418 0)))
 (let ((@x1869 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1027) $x635)) @x1694 $x635)))
 (let (($x1638 (<= ?x941 0)))
 (let ((@x424 (and-elim @x314 $x752)))
 (let ((@x1878 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x752) $x1638)) @x424 $x1638)))
 (let (($x1889 (>= ?x941 0)))
 (let ((@x981 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x752) $x1889)) @x424 $x1889)))
 (let (($x701 (<= ?x958 0)))
 (let ((@x1777 (and-elim @x314 $x630)))
 (let ((@x383 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x630) $x701)) @x1777 $x701)))
 (let (($x955 (>= ?x958 0)))
 (let ((@x643 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x630) $x955)) @x1777 $x955)))
 (let ((@x1035 ((_ th-lemma arith) (hypothesis (not $x1066)) @x981 @x1878 @x643 @x383 @x643 @x383 @x981 @x1878 @x981 @x1878 @x1869 @x355 false)))
 (let (($x967 (>= ?x736 0)))
 (let ((@x900 ((_ th-lemma arith) (hypothesis (not $x967)) @x981 @x1878 @x643 @x383 @x643 @x383 @x981 @x1878 @x981 @x1878 @x1869 @x355 false)))
 (let ((@x458 (lemma @x900 $x967)))
 (let (($x1819 (not (<= ?x731 0))))
 (let (($x743 (>= ?x731 0)))
 (let (($x1578 (not $x1066)))
 (let (($x455 (= ?x736 0)))
 (let (($x838 (not $x455)))
 (let (($x973 (not $x743)))
 (let ((@x1415 (hypothesis $x973)))
 (let ((@x1127 ((_ th-lemma arith farkas 1 1 1) @x1415 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x838 $x967)) (hypothesis $x455) $x967) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x838 $x1066)) (hypothesis $x455) $x1066) false)))
 (let ((@x762 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x455 $x1578 (not $x967))) @x458 (or $x455 $x1578))))
 (let ((@x870 (unit-resolution @x762 (unit-resolution (lemma @x1127 (or $x838 $x743)) @x1415 $x838) $x1578)))
 (let ((@x1838 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1488 $x1819 $x973)) (and-elim @x314 $x591) (or $x1819 $x973))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x1838 (lemma ((_ th-lemma arith farkas 1 1) @x1415 @x870 false) $x743) $x1819) @x458 (lemma @x1035 $x1066) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        4
 :arith-assert-lower        38
 :arith-assert-upper        14
 :arith-conflicts           5
 :arith-eq-adapter          8
 :arith-gcd-tests           4
 :arith-grobner             3
 :arith-max-min             674
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    27
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-pseudo-nonlinear    2
 :arith-row-summations      10
 :arith-tableau-max-columns 98
 :arith-tableau-max-rows    9
 :conflicts                 5
 :decisions                 5
 :del-clause                28
 :final-checks              8
 :max-memory                4.03
 :memory                    3.33
 :mk-bool-var               30
 :mk-clause                 28
 :num-allocs                3080105
 :num-checks                1
 :propagations              20
 :rlimit-count              51281
 :time                      0.03
 :total-time                0.04)
