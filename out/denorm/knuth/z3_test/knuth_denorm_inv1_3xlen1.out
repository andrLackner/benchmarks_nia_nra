unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x409 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* q!3 d!1)) (* (- 1) (* q!3 d!1 d!1)) (* 4 (* r!2 d!1)) (* (- 4) (* x!0 d!1)) (* (- 8) r!2))))
 (let (($x394 (>= ?x409 0)))
 (let (($x1088 (= ?x409 0)))
 (let ((?x776 (* 8 r!2)))
 (let ((?x378 (* x!0 d!1)))
 (let ((?x666 (* 4 ?x378)))
 (let ((?x376 (* r!2 d!1)))
 (let ((?x287 (* (- 4) ?x376)))
 (let ((?x358 (* q!3 d!1 d!1)))
 (let ((?x302 (* q!3 d!1)))
 (let ((?x921 (* (- 2) ?x302)))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x181 (+ ?x146 ?x194 ?x178 ?x244 ?x282 ?x921 ?x358 ?x287 ?x666 ?x776)))
 (let ((?x192 (* (- 1) d!1)))
 (let ((?x313 (* 2 r!2)))
 (let ((?x374 (* (- 1) x!0)))
 (let ((?x396 (+ (- 2) q!3 ?x374 ?x313 ?x192)))
 (let ((?x380 (+ 2 d!1)))
 (let ((?x379 (+ (- 4) q!3)))
 (let ((?x1012 (* ?x379 ?x379 ?x379 ?x380 ?x396 ?x396 ?x396 ?x396 ?x396 ?x181 r!2 r!2)))
 (let (($x956 (= ?x1012 0)))
 (let (($x579 (not $x956)))
 (let ((?x550 (+ q!3 ?x374 ?x313)))
 (let ((?x404 (* ?x380 ?x550 ?x550 ?x550 ?x550 ?x550 ?x181 r!2 r!2 q!3 q!3 q!3)))
 (let (($x413 (= ?x404 0)))
 (let ((?x768 (* (- 2) d!1)))
 (let ((?x301 (+ (- 4) q!3 ?x374 ?x313 ?x768)))
 (let ((?x189 (+ (- 8) q!3)))
 (let ((?x289 (* ?x189 ?x189 ?x189 ?x380 ?x301 ?x301 ?x301 ?x301 ?x301 ?x181 r!2 r!2)))
 (let (($x329 (= ?x289 0)))
 (let ((?x357 (+ 2 q!3 ?x374 ?x313 d!1)))
 (let ((?x690 (+ 4 q!3)))
 (let ((?x598 (* ?x380 ?x690 ?x690 ?x690 ?x357 ?x357 ?x357 ?x357 ?x357 ?x181 r!2 r!2)))
 (let (($x204 (= ?x598 0)))
 (let (($x257 (not $x204)))
 (let (($x283 (or $x257 (not $x329) (not $x413) $x579)))
 (let (($x280 (and $x1088 $x283)))
 (let ((?x644 (+ ?x776 ?x146 ?x194 ?x178 ?x244 ?x282 ?x921 ?x358 (* 2 (* d!1 4)) ?x287 (* (- 8) d!1) ?x666)))
 (let ((?x607 (+ 2 q!3 ?x313 ?x374 d!1)))
 (let (($x642 (= (* ?x380 ?x690 ?x690 ?x690 ?x607 ?x607 ?x607 ?x607 ?x607 ?x644 r!2 r!2) 0)))
 (let ((?x678 (+ ?x776 ?x146 ?x194 ?x178 ?x244 ?x282 ?x921 ?x358 ?x287 (* 16 d!1) (* (- 8) (* d!1 2)) ?x666)))
 (let ((?x493 (+ (- 4) q!3 ?x313 ?x374 ?x768)))
 (let (($x841 (= (* ?x189 ?x189 ?x189 ?x380 ?x493 ?x493 ?x493 ?x493 ?x493 ?x678 r!2 r!2) 0)))
 (let ((?x344 (+ ?x776 ?x146 ?x194 ?x178 ?x244 ?x282 ?x921 ?x358 ?x287 ?x666)))
 (let ((?x852 (+ q!3 ?x313 ?x374)))
 (let ((?x853 (* ?x380 ?x852 ?x852 ?x852 ?x852 ?x852 ?x344 r!2 r!2 q!3 q!3 q!3)))
 (let ((?x1097 (+ ?x776 ?x146 ?x194 ?x178 ?x244 ?x282 ?x921 ?x358 ?x287 (* 8 d!1) (* (- 4) (* d!1 2)) ?x666)))
 (let ((?x522 (+ (- 2) q!3 ?x313 ?x374 ?x192)))
 (let (($x842 (= (* ?x379 ?x379 ?x379 ?x380 ?x522 ?x522 ?x522 ?x522 ?x522 ?x1097 r!2 r!2) 0)))
 (let (($x712 (and (= ?x344 0) (or (not $x842) (not (= ?x853 0)) (not $x841) (not $x642)))))
 (let (($x702 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x252 (* 4 (* x d))))
 (let ((?x798 (* (- 8) d)))
 (let ((?x818 (* r d)))
 (let ((?x817 (* (- 4) ?x818)))
 (let ((?x788 (* 2 (* d 4))))
 (let ((?x631 (* q d d)))
 (let ((?x819 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x845 (+ 2 q ?x117 ?x143 d)))
 (let ((?x767 (+ 4 q)))
 (let ((?x765 (+ 2 d)))
 (let ((?x427 (* ?x765 ?x767 ?x767 ?x767 ?x845 ?x845 ?x845 ?x845 ?x845 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x788 ?x817 ?x798 ?x252) r r)))
 (let ((?x906 (* 16 d)))
 (let ((?x602 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x817 ?x906 (* (- 8) (* d 2)) ?x252)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x406 (+ (- 4) q ?x117 ?x143 ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x1061 (= (* ?x914 ?x914 ?x914 ?x765 ?x406 ?x406 ?x406 ?x406 ?x406 ?x602 r r) 0)))
 (let ((?x186 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x817 ?x252)))
 (let ((?x732 (+ q ?x117 ?x143)))
 (let (($x372 (= (* ?x765 ?x732 ?x732 ?x732 ?x732 ?x732 ?x186 r r q q q) 0)))
 (let ((?x611 (* 8 d)))
 (let ((?x534 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x817 ?x611 (* (- 4) (* d 2)) ?x252)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x370 (+ (- 2) q ?x117 ?x143 ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x618 (= (* ?x847 ?x847 ?x847 ?x765 ?x370 ?x370 ?x370 ?x370 ?x370 ?x534 r r) 0)))
 (and (= ?x186 0) (or (not $x618) (not $x372) (not $x1061) (not (= ?x427 0)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x141 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x757 (* 4 (* d00 r00))))
 (let ((?x913 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x752 (* 4 (* (+ 2 d) r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x359 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x1047 (+ ?x391 ?x359 ?x30 ?x146 ?x752 ?x178 ?x194 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x244 ?x913 ?x757)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x437 (+ ?x117 ?x143 q)))
 (let ((?x765 (+ 2 d)))
 (let (($x1064 (= (* ?x765 ?x437 ?x437 ?x437 ?x437 ?x437 ?x1047 r r q q q) 0)))
 (let (($x1081 (not $x1064)))
 (let ((?x941 (+ (- 32) ?x391 ?x359 ?x30 (* (- 16) d) ?x146 ?x752 ?x178 ?x194 (* (+ (- 8) q) ?x765 ?x765) (* (- 2) (* (+ (- 8) q) ?x765)) ?x244 (* (- 4) (* ?x765 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x757)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x271 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x992 (= (* ?x914 ?x914 ?x914 ?x765 ?x271 ?x271 ?x271 ?x271 ?x271 ?x941 r r) 0)))
 (let (($x991 (not $x992)))
 (let ((?x611 (* 8 d)))
 (let ((?x418 (+ 16 ?x391 ?x359 ?x30 ?x611 ?x146 ?x752 ?x178 ?x194 (* ?x765 ?x765 (+ 4 q)) (* (- 2) (* ?x765 (+ 4 q))) ?x244 (* (- 4) (* ?x765 (+ 2 ?x117 ?x143 q d))) ?x757)))
 (let ((?x963 (+ 2 ?x117 ?x143 q d)))
 (let ((?x767 (+ 4 q)))
 (let (($x428 (= (* ?x765 ?x767 ?x767 ?x767 ?x963 ?x963 ?x963 ?x963 ?x963 ?x418 r r) 0)))
 (let (($x429 (not $x428)))
 (let ((?x798 (* (- 8) d)))
 (let ((?x320 (+ (- 16) ?x391 ?x359 ?x30 ?x798 ?x146 ?x752 ?x178 ?x194 (* (+ (- 4) q) ?x765 ?x765) (* (- 2) (* (+ (- 4) q) ?x765)) ?x244 (* (- 4) (* ?x765 (+ (- 2) ?x117 ?x143 q (* (- 1) d)))) ?x757)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x1082 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x322 (= (* ?x847 ?x847 ?x847 ?x765 ?x1082 ?x1082 ?x1082 ?x1082 ?x1082 ?x320 r r) 0)))
 (let (($x324 (not $x322)))
 (let ((?x252 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x250 (+ ?x175 ?x146 ?x252 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x757)))
 (let (($x263 (= ?x250 0)))
 (and $x263 (or $x324 $x429 $x991 $x1081))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x386 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x252 (* 4 (* x d))))
 (let ((?x798 (* (- 8) d)))
 (let ((?x818 (* r d)))
 (let ((?x817 (* (- 4) ?x818)))
 (let ((?x788 (* 2 (* d 4))))
 (let ((?x631 (* q d d)))
 (let ((?x819 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x845 (+ 2 q ?x117 ?x143 d)))
 (let ((?x767 (+ 4 q)))
 (let ((?x765 (+ 2 d)))
 (let ((?x427 (* ?x765 ?x767 ?x767 ?x767 ?x845 ?x845 ?x845 ?x845 ?x845 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x788 ?x817 ?x798 ?x252) r r)))
 (let ((?x906 (* 16 d)))
 (let ((?x602 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x817 ?x906 (* (- 8) (* d 2)) ?x252)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x406 (+ (- 4) q ?x117 ?x143 ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x1061 (= (* ?x914 ?x914 ?x914 ?x765 ?x406 ?x406 ?x406 ?x406 ?x406 ?x602 r r) 0)))
 (let ((?x186 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x817 ?x252)))
 (let ((?x732 (+ q ?x117 ?x143)))
 (let (($x372 (= (* ?x765 ?x732 ?x732 ?x732 ?x732 ?x732 ?x186 r r q q q) 0)))
 (let ((?x611 (* 8 d)))
 (let ((?x534 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x819 ?x631 ?x817 ?x611 (* (- 4) (* d 2)) ?x252)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x370 (+ (- 2) q ?x117 ?x143 ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x618 (= (* ?x847 ?x847 ?x847 ?x765 ?x370 ?x370 ?x370 ?x370 ?x370 ?x534 r r) 0)))
 (let (($x258 (and (= ?x186 0) (or (not $x618) (not $x372) (not $x1061) (not (= ?x427 0))))))
 (let ((?x757 (* 4 (* d00 r00))))
 (let ((?x752 (* 4 (* ?x765 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x359 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x1047 (+ ?x391 ?x359 ?x30 ?x146 ?x752 ?x178 ?x194 (* ?x765 ?x765 q) (* (- 2) (* ?x765 q)) ?x244 (* (- 4) (* ?x765 (+ ?x117 ?x143 q))) ?x757)))
 (let ((?x437 (+ ?x117 ?x143 q)))
 (let (($x1064 (= (* ?x765 ?x437 ?x437 ?x437 ?x437 ?x437 ?x1047 r r q q q) 0)))
 (let (($x1081 (not $x1064)))
 (let ((?x941 (+ (- 32) ?x391 ?x359 ?x30 (* (- 16) d) ?x146 ?x752 ?x178 ?x194 (* ?x914 ?x765 ?x765) (* (- 2) (* ?x914 ?x765)) ?x244 (* (- 4) (* ?x765 (+ (- 4) ?x117 ?x143 q ?x915))) ?x757)))
 (let ((?x271 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let (($x992 (= (* ?x914 ?x914 ?x914 ?x765 ?x271 ?x271 ?x271 ?x271 ?x271 ?x941 r r) 0)))
 (let (($x991 (not $x992)))
 (let ((?x418 (+ 16 ?x391 ?x359 ?x30 ?x611 ?x146 ?x752 ?x178 ?x194 (* ?x765 ?x765 ?x767) (* (- 2) (* ?x765 ?x767)) ?x244 (* (- 4) (* ?x765 (+ 2 ?x117 ?x143 q d))) ?x757)))
 (let ((?x963 (+ 2 ?x117 ?x143 q d)))
 (let (($x428 (= (* ?x765 ?x767 ?x767 ?x767 ?x963 ?x963 ?x963 ?x963 ?x963 ?x418 r r) 0)))
 (let (($x429 (not $x428)))
 (let ((?x320 (+ (- 16) ?x391 ?x359 ?x30 ?x798 ?x146 ?x752 ?x178 ?x194 (* ?x847 ?x765 ?x765) (* (- 2) (* ?x847 ?x765)) ?x244 (* (- 4) (* ?x765 (+ (- 2) ?x117 ?x143 q ?x870))) ?x757)))
 (let ((?x1082 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let (($x322 (= (* ?x847 ?x847 ?x847 ?x765 ?x1082 ?x1082 ?x1082 ?x1082 ?x1082 ?x320 r r) 0)))
 (let (($x324 (not $x322)))
 (let ((?x250 (+ ?x175 ?x146 ?x252 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x757)))
 (let (($x263 (= ?x250 0)))
 (let (($x785 (and $x263 (or $x324 $x429 $x991 $x1081))))
 (rewrite (= $x785 $x258))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x327 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x757 (* 4 (* d00 r00))))
 (let ((?x870 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x1082 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x765 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x752 (* 4 (* ?x765 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x798 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x359 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x320 (+ (- 16) ?x391 ?x359 ?x30 ?x798 ?x146 ?x752 ?x178 ?x194 (* (+ (- 4) q) ?x765 ?x765) (* (- 2) (* (+ (- 4) q) ?x765)) ?x244 (* (- 4) (* ?x765 ?x1082)) ?x757)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x322 (= (* ?x847 ?x847 ?x847 ?x765 ?x1082 ?x1082 ?x1082 ?x1082 ?x1082 ?x320 r r) 0)))
 (let (($x324 (not $x322)))
 (let ((?x1047 (+ ?x391 ?x359 ?x30 ?x146 ?x752 ?x178 ?x194 (* ?x765 ?x765 q) (* (- 2) (* ?x765 q)) ?x244 (* (- 4) (* ?x765 (+ ?x117 ?x143 q))) ?x757)))
 (let ((?x437 (+ ?x117 ?x143 q)))
 (let (($x1064 (= (* ?x765 ?x437 ?x437 ?x437 ?x437 ?x437 ?x1047 r r q q q) 0)))
 (let (($x1081 (not $x1064)))
 (let ((?x611 (* 8 d)))
 (let ((?x418 (+ 16 ?x391 ?x359 ?x30 ?x611 ?x146 ?x752 ?x178 ?x194 (* ?x765 ?x765 (+ 4 q)) (* (- 2) (* ?x765 (+ 4 q))) ?x244 (* (- 4) (* ?x765 (+ 2 ?x117 ?x143 q d))) ?x757)))
 (let ((?x963 (+ 2 ?x117 ?x143 q d)))
 (let ((?x767 (+ 4 q)))
 (let (($x428 (= (* ?x765 ?x767 ?x767 ?x767 ?x963 ?x963 ?x963 ?x963 ?x963 ?x418 r r) 0)))
 (let (($x429 (not $x428)))
 (let ((?x941 (+ (- 32) ?x391 ?x359 ?x30 (* (- 16) d) ?x146 ?x752 ?x178 ?x194 (* (+ (- 8) q) ?x765 ?x765) (* (- 2) (* (+ (- 8) q) ?x765)) ?x244 (* (- 4) (* ?x765 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x757)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x271 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x992 (= (* ?x914 ?x914 ?x914 ?x765 ?x271 ?x271 ?x271 ?x271 ?x271 ?x941 r r) 0)))
 (let (($x991 (not $x992)))
 (let ((?x252 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x250 (+ ?x175 ?x146 ?x252 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x757)))
 (let (($x263 (= ?x250 0)))
 (and $x263 (or $x991 $x429 $x1081 $x324)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x606 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x757 (* 4 (* d00 r00))))
 (let ((?x913 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x752 (* 4 (* (+ 2 d) r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x359 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x1047 (+ ?x391 ?x359 ?x30 ?x146 ?x752 ?x178 ?x194 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x244 ?x913 ?x757)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x437 (+ ?x117 ?x143 q)))
 (let ((?x765 (+ 2 d)))
 (let (($x1064 (= (* ?x765 ?x437 ?x437 ?x437 ?x437 ?x437 ?x1047 r r q q q) 0)))
 (let (($x1081 (not $x1064)))
 (let ((?x941 (+ (- 32) ?x391 ?x359 ?x30 (* (- 16) d) ?x146 ?x752 ?x178 ?x194 (* (+ (- 8) q) ?x765 ?x765) (* (- 2) (* (+ (- 8) q) ?x765)) ?x244 (* (- 4) (* ?x765 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x757)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x271 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x992 (= (* ?x914 ?x914 ?x914 ?x765 ?x271 ?x271 ?x271 ?x271 ?x271 ?x941 r r) 0)))
 (let (($x991 (not $x992)))
 (let ((?x611 (* 8 d)))
 (let ((?x418 (+ 16 ?x391 ?x359 ?x30 ?x611 ?x146 ?x752 ?x178 ?x194 (* ?x765 ?x765 (+ 4 q)) (* (- 2) (* ?x765 (+ 4 q))) ?x244 (* (- 4) (* ?x765 (+ 2 ?x117 ?x143 q d))) ?x757)))
 (let ((?x963 (+ 2 ?x117 ?x143 q d)))
 (let ((?x767 (+ 4 q)))
 (let (($x428 (= (* ?x765 ?x767 ?x767 ?x767 ?x963 ?x963 ?x963 ?x963 ?x963 ?x418 r r) 0)))
 (let (($x429 (not $x428)))
 (let ((?x798 (* (- 8) d)))
 (let ((?x320 (+ (- 16) ?x391 ?x359 ?x30 ?x798 ?x146 ?x752 ?x178 ?x194 (* (+ (- 4) q) ?x765 ?x765) (* (- 2) (* (+ (- 4) q) ?x765)) ?x244 (* (- 4) (* ?x765 (+ (- 2) ?x117 ?x143 q (* (- 1) d)))) ?x757)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x1082 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x322 (= (* ?x847 ?x847 ?x847 ?x765 ?x1082 ?x1082 ?x1082 ?x1082 ?x1082 ?x320 r r) 0)))
 (let (($x324 (not $x322)))
 (let ((?x252 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x250 (+ ?x175 ?x146 ?x252 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x757)))
 (let (($x263 (= ?x250 0)))
 (let (($x785 (and $x263 (or $x324 $x429 $x991 $x1081))))
 (let (($x326 (and $x263 (or $x991 $x429 $x1081 $x324))))
 (rewrite (= $x326 $x785))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x139 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x119 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x77 (- 1)))
 (let ((?x125 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x123 (- (+ (- (* 8 ?x119) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x130 (+ (- (+ (- ?x123 ?x41) (* ?x62 ?x62 ?x125)) (* 2 ?x62 ?x125)) ?x49)))
 (let ((?x134 (* (+ (- ?x130 (* 4 ?x62 ?x119)) ?x53) ?x77 ?x125 ?x125 ?x119 r r ?x77 ?x62 ?x125 ?x119 ?x119 ?x77 ?x119 ?x119)))
 (let ((?x99 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x105 (- q 4)))
 (let ((?x103 (- (+ (- (* 8 ?x99) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x110 (+ (- (+ (- ?x103 ?x41) (* ?x62 ?x62 ?x105)) (* 2 ?x62 ?x105)) ?x49)))
 (let ((?x114 (* (+ (- ?x110 (* 4 ?x62 ?x99)) ?x53) ?x77 ?x105 ?x105 ?x99 r r ?x77 ?x62 ?x105 ?x99 ?x99 ?x77 ?x99 ?x99)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x81 (+ ?x58 q)))
 (let ((?x85 (- (+ (- (* 8 ?x81) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x91 (+ (- (+ (- ?x85 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x95 (* (+ (- ?x91 (* 4 ?x62 ?x81)) ?x53) ?x77 q q ?x81 r r ?x77 ?x62 q ?x81 ?x81 ?x77 ?x81 ?x81)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x78 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x77 ?x67 ?x67 ?x59 r r ?x77 ?x62 ?x67 ?x59 ?x59 ?x77 ?x59 ?x59)))
 (let (($x137 (or (not (= ?x78 0)) (not (= ?x95 0)) (not (= ?x114 0)) (not (= ?x134 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x137)))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x657 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x757 (* 4 (* d00 r00))))
 (let ((?x212 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1030 (+ (- 2) ?x57 ?x143 q ?x212)))
 (let ((?x249 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x565 (* 4 (* ?x249 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x436 (* (- 8) d)))
 (let ((?x180 (* 8 q)))
 (let ((?x359 (* (- 8) x)))
 (let ((?x1010 (* 16 r)))
 (let ((?x905 (+ (- 16) ?x1010 ?x359 ?x180 ?x436 ?x146 ?x565 ?x178 ?x194 (* (+ (- 4) q) ?x249 ?x249) (* (- 2) (* (+ (- 4) q) ?x249)) ?x244 (* (- 4) (* ?x249 ?x1030)) ?x757)))
 (let ((?x840 (+ (- 4) q)))
 (let (($x1095 (= (* ?x840 ?x840 ?x840 ?x249 ?x1030 ?x1030 ?x1030 ?x1030 ?x1030 ?x905 r r) 0)))
 (let ((?x417 (+ ?x1010 ?x359 ?x180 ?x146 ?x565 ?x178 ?x194 (* ?x249 ?x249 q) (* (- 2) (* ?x249 q)) ?x244 (* (- 4) (* ?x249 (+ ?x57 ?x143 q))) ?x757)))
 (let ((?x172 (+ ?x57 ?x143 q)))
 (let (($x695 (= (* ?x249 ?x172 ?x172 ?x172 ?x172 ?x172 ?x417 r r q q q) 0)))
 (let ((?x175 (* 8 d)))
 (let ((?x833 (+ 16 ?x1010 ?x359 ?x180 ?x175 ?x146 ?x565 ?x178 ?x194 (* ?x249 ?x249 (+ 4 q)) (* (- 2) (* ?x249 (+ 4 q))) ?x244 (* (- 4) (* ?x249 (+ 2 ?x57 ?x143 q d))) ?x757)))
 (let ((?x365 (+ 2 ?x57 ?x143 q d)))
 (let ((?x333 (+ 4 q)))
 (let (($x737 (= (* ?x249 ?x333 ?x333 ?x333 ?x365 ?x365 ?x365 ?x365 ?x365 ?x833 r r) 0)))
 (let ((?x696 (+ (- 32) ?x1010 ?x359 ?x180 (* (- 16) d) ?x146 ?x565 ?x178 ?x194 (* (+ (- 8) q) ?x249 ?x249) (* (- 2) (* (+ (- 8) q) ?x249)) ?x244 (* (- 4) (* ?x249 (+ (- 4) ?x57 ?x143 q (* (- 2) d)))) ?x757)))
 (let ((?x467 (* (- 2) d)))
 (let ((?x193 (+ (- 4) ?x57 ?x143 q ?x467)))
 (let ((?x1036 (+ (- 8) q)))
 (let (($x546 (= (* ?x1036 ?x1036 ?x1036 ?x249 ?x193 ?x193 ?x193 ?x193 ?x193 ?x696 r r) 0)))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x231 (+ ?x30 ?x146 (* 4 (* x d)) ?x178 ?x194 ?x44 (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x757)))
 (and (= ?x231 0) (or (not $x546) (not $x737) (not $x695) (not $x1095)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x647 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x757 (* 4 (* d00 r00))))
 (let ((?x212 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1030 (+ (- 2) ?x57 ?x143 q ?x212)))
 (let ((?x249 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x565 (* 4 (* ?x249 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x436 (* (- 8) d)))
 (let ((?x180 (* 8 q)))
 (let ((?x359 (* (- 8) x)))
 (let ((?x1010 (* 16 r)))
 (let ((?x905 (+ (- 16) ?x1010 ?x359 ?x180 ?x436 ?x146 ?x565 ?x178 ?x194 (* (+ (- 4) q) ?x249 ?x249) (* (- 2) (* (+ (- 4) q) ?x249)) ?x244 (* (- 4) (* ?x249 ?x1030)) ?x757)))
 (let ((?x840 (+ (- 4) q)))
 (let (($x1095 (= (* ?x840 ?x840 ?x840 ?x249 ?x1030 ?x1030 ?x1030 ?x1030 ?x1030 ?x905 r r) 0)))
 (let ((?x417 (+ ?x1010 ?x359 ?x180 ?x146 ?x565 ?x178 ?x194 (* ?x249 ?x249 q) (* (- 2) (* ?x249 q)) ?x244 (* (- 4) (* ?x249 (+ ?x57 ?x143 q))) ?x757)))
 (let ((?x172 (+ ?x57 ?x143 q)))
 (let (($x695 (= (* ?x249 ?x172 ?x172 ?x172 ?x172 ?x172 ?x417 r r q q q) 0)))
 (let ((?x175 (* 8 d)))
 (let ((?x833 (+ 16 ?x1010 ?x359 ?x180 ?x175 ?x146 ?x565 ?x178 ?x194 (* ?x249 ?x249 (+ 4 q)) (* (- 2) (* ?x249 (+ 4 q))) ?x244 (* (- 4) (* ?x249 (+ 2 ?x57 ?x143 q d))) ?x757)))
 (let ((?x365 (+ 2 ?x57 ?x143 q d)))
 (let ((?x333 (+ 4 q)))
 (let (($x737 (= (* ?x249 ?x333 ?x333 ?x333 ?x365 ?x365 ?x365 ?x365 ?x365 ?x833 r r) 0)))
 (let ((?x696 (+ (- 32) ?x1010 ?x359 ?x180 (* (- 16) d) ?x146 ?x565 ?x178 ?x194 (* (+ (- 8) q) ?x249 ?x249) (* (- 2) (* (+ (- 8) q) ?x249)) ?x244 (* (- 4) (* ?x249 (+ (- 4) ?x57 ?x143 q (* (- 2) d)))) ?x757)))
 (let ((?x467 (* (- 2) d)))
 (let ((?x193 (+ (- 4) ?x57 ?x143 q ?x467)))
 (let ((?x1036 (+ (- 8) q)))
 (let (($x546 (= (* ?x1036 ?x1036 ?x1036 ?x249 ?x193 ?x193 ?x193 ?x193 ?x193 ?x696 r r) 0)))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x231 (+ ?x30 ?x146 (* 4 (* x d)) ?x178 ?x194 ?x44 (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x757)))
 (let (($x278 (and (= ?x231 0) (or (not $x546) (not $x737) (not $x695) (not $x1095)))))
 (let ((?x119 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x77 (- 1)))
 (let ((?x125 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x123 (- (+ (- (* 8 ?x119) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x130 (+ (- (+ (- ?x123 ?x41) (* ?x62 ?x62 ?x125)) (* 2 ?x62 ?x125)) ?x49)))
 (let ((?x134 (* (+ (- ?x130 (* 4 ?x62 ?x119)) ?x53) ?x77 ?x125 ?x125 ?x119 r r ?x77 ?x62 ?x125 ?x119 ?x119 ?x77 ?x119 ?x119)))
 (let ((?x99 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x105 (- q 4)))
 (let ((?x103 (- (+ (- (* 8 ?x99) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x110 (+ (- (+ (- ?x103 ?x41) (* ?x62 ?x62 ?x105)) (* 2 ?x62 ?x105)) ?x49)))
 (let ((?x114 (* (+ (- ?x110 (* 4 ?x62 ?x99)) ?x53) ?x77 ?x105 ?x105 ?x99 r r ?x77 ?x62 ?x105 ?x99 ?x99 ?x77 ?x99 ?x99)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x81 (+ ?x58 q)))
 (let ((?x85 (- (+ (- (* 8 ?x81) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x91 (+ (- (+ (- ?x85 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x95 (* (+ (- ?x91 (* 4 ?x62 ?x81)) ?x53) ?x77 q q ?x81 r r ?x77 ?x62 q ?x81 ?x81 ?x77 ?x81 ?x81)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x78 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x77 ?x67 ?x67 ?x59 r r ?x77 ?x62 ?x67 ?x59 ?x59 ?x77 ?x59 ?x59)))
 (let (($x137 (or (not (= ?x78 0)) (not (= ?x95 0)) (not (= ?x114 0)) (not (= ?x134 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x138 (and (= ?x54 0) $x137)))
 (rewrite (= $x138 $x278))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x152 (trans (quant-intro (proof-bind ?x647) (= $x139 $x657)) (elim-unused (= $x657 $x327)) (= $x139 $x327))))
 (let ((@x27 (asserted $x139)))
 (let ((@x655 (mp (mp @x27 @x152 $x327) (quant-intro (proof-bind ?x606) (= $x327 $x141)) $x141)))
 (let ((@x599 (mp (mp @x655 (rewrite (= $x141 $x141)) $x141) (quant-intro (proof-bind ?x386) (= $x141 $x702)) $x702)))
 (let ((@x1084 (mp (mp~ @x599 (sk (~ $x702 $x712)) $x712) (rewrite (= $x712 $x280)) $x280)))
 (let ((@x355 (and-elim @x1084 $x1088)))
 (let ((@x298 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1088) $x394)) @x355 $x394)))
 (let (($x1075 (<= ?x409 0)))
 (let ((@x253 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1088) $x1075)) @x355 $x1075)))
 (let (($x399 (not (<= ?x1012 0))))
 (let (($x825 (<= ?x598 0)))
 (let (($x1023 (>= ?x598 0)))
 (let ((@x849 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x204 (not $x825) (not $x1023))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1023)) @x253 @x298 false) $x1023) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x825)) @x253 @x298 false) $x825) $x204)))
 (let (($x665 (>= ?x404 0)))
 (let (($x168 (<= ?x404 0)))
 (let ((@x794 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x413 (not $x168) (not $x665))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x168)) @x253 @x298 false) $x168) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x665)) @x253 @x298 false) $x665) $x413)))
 (let (($x659 (>= ?x289 0)))
 (let (($x349 (<= ?x289 0)))
 (let ((@x286 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x329 (not $x349) (not $x659))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x349)) @x253 @x298 false) $x349) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x659)) @x253 @x298 false) $x659) $x329)))
 (let ((@x197 (unit-resolution (unit-resolution (and-elim @x1084 $x283) @x286 @x794 (or $x257 $x579)) @x849 $x579)))
 (let (($x1083 (>= ?x1012 0)))
 (let ((@x865 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x956 $x399 (not $x1083))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1083)) @x253 @x298 false) $x1083) @x197 $x399)))
 ((_ th-lemma arith farkas 1 1 1) @x865 @x253 @x298 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 12
 :arith-assert-diseq        7
 :arith-assert-lower        38
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          13
 :arith-fixed-eqs           12
 :arith-grobner             8
 :arith-max-min             432
 :arith-nonlinear-horner    58
 :arith-num-rows            10
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 37
 :arith-tableau-max-rows    10
 :conflicts                 8
 :decisions                 24
 :del-clause                39
 :final-checks              8
 :max-memory                19.65
 :memory                    19.18
 :mk-bool-var               39
 :mk-clause                 52
 :num-allocs                540099
 :num-checks                1
 :propagations              36
 :rlimit-count              6518
 :time                      0.01
 :total-time                0.03)
