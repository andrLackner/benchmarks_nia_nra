unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x282 (+ m!1 (* (- 6) n!0))))
 (let (($x287 (<= ?x282 6)))
 (let (($x269 (= ?x282 6)))
 (let ((?x236 (+ m!1 k!2)))
 (let ((?x342 (+ 6 m!1)))
 (let ((?x343 (+ 1 n!0)))
 (let ((?x424 (+ c!3 k!2)))
 (let ((?x855 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 m!1)))
 (let ((?x851 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 n!0)))
 (let ((?x646 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 m!1)))
 (let ((?x572 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236)))
 (let ((?x478 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424)))
 (let ((?x464 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424)))
 (let ((?x428 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0)))
 (let ((?x389 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 k!2)))
 (let ((?x374 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0)))
 (let ((?x367 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0 n!0)))
 (let ((?x364 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 n!0)))
 (let ((?x227 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 k!2)))
 (let ((?x226 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 m!1)))
 (let ((?x204 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 m!1)))
 (let ((?x202 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 n!0 n!0)))
 (let ((?x173 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 k!2)))
 (let ((?x172 (* ?x343 ?x343 ?x343 ?x342 ?x236 ?x236 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 n!0 n!0)))
 (let ((?x144 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236 k!2)))
 (let ((?x141 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0 n!0)))
 (let ((?x138 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x236 ?x236 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x236 ?x236 ?x236)))
 (let ((?x128 (+ (* 7 ?x138) (* (- 3) ?x141) (* (- 1) ?x144) (* (- 3) ?x172) ?x173 (* 3 ?x202) ?x204 (* (- 1) ?x226) (* (- 1) ?x227) (* 9 ?x364) (* 3 ?x367) (* 9 ?x374) ?x389 (* (- 9) ?x428) (* (- 7) ?x464) (* 7 ?x478) (* (- 7) ?x572) (* (- 1) ?x646) (* (- 9) ?x851) ?x855)))
 (let (($x326 (= ?x128 0)))
 (let (($x429 (not $x326)))
 (let ((?x351 (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0))))
 (let (($x161 (= ?x351 (- 1))))
 (let (($x181 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x450 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) (* k!2 k!2)) (* 9 (* c!3 n!0)))))
 (let (($x431 (= ?x450 4)))
 (let (($x325 (and $x269 $x431 $x181 $x161 $x429)))
 (let ((?x441 (+ k!2 m!1)))
 (let ((?x611 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 k!2)))
 (let ((?x201 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 n!0 n!0)))
 (let ((?x677 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 k!2)))
 (let ((?x310 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 m!1)))
 (let ((?x221 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 n!0)))
 (let ((?x490 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 n!0)))
 (let ((?x650 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 m!1)))
 (let ((?x573 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441)))
 (let ((?x317 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441 n!0 n!0)))
 (let ((?x619 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424)))
 (let ((?x443 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 k!2)))
 (let ((?x676 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 m!1)))
 (let ((?x866 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0)))
 (let ((?x859 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424)))
 (let ((?x867 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 k!2)))
 (let ((?x250 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 m!1)))
 (let ((?x124 (* ?x343 ?x343 ?x343 ?x342 ?x441 ?x441 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0 n!0)))
 (let ((?x841 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0)))
 (let ((?x140 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x343 ?x343 ?x342 ?x342 ?x342 ?x424 ?x424 n!0 n!0)))
 (let ((?x425 (* ?x343 ?x343 ?x343 ?x342 ?x342 ?x441 ?x441 ?x424 ?x424 ?x424 ?x343 ?x342 ?x342 ?x342 ?x441 ?x441 ?x441)))
 (let ((?x612 (+ (* 7 ?x425) (* (- 3) ?x140) (* (- 9) ?x841) (* 3 ?x124) (* (- 1) ?x250) ?x867 (* 7 ?x859) (* 9 ?x866) ?x676 (* (- 1) ?x443) (* (- 7) ?x619) (* (- 3) ?x317) (* (- 7) ?x573) (* (- 1) ?x650) (* 9 ?x490) (* (- 9) ?x221) ?x310 (* (- 1) ?x677) (* 3 ?x201) ?x611)))
 (let (($x578 (and $x269 $x431 $x181 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x612 0)))))
 (let (($x277 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ k m)))
 (let ((?x388 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x75 (+ c k)))
 (let ((?x856 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 k)))
 (let ((?x845 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n n)))
 (let ((?x682 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 k)))
 (let ((?x648 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 m)))
 (let ((?x609 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n)))
 (let ((?x586 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n)))
 (let ((?x495 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 m)))
 (let ((?x422 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71)))
 (let ((?x399 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n n)))
 (let ((?x348 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75)))
 (let ((?x338 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 k)))
 (let ((?x327 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 m)))
 (let ((?x320 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n)))
 (let ((?x283 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75)))
 (let ((?x249 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 k)))
 (let ((?x238 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 m)))
 (let ((?x200 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n n)))
 (let ((?x197 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n)))
 (let ((?x151 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n n)))
 (let ((?x148 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71)))
 (let ((?x167 (+ (* 7 ?x148) (* (- 3) ?x151) (* (- 9) ?x197) (* 3 ?x200) (* (- 1) ?x238) ?x249 (* 7 ?x283) (* 9 ?x320) ?x327 (* (- 1) ?x338) (* (- 7) ?x348) (* (- 3) ?x399) (* (- 7) ?x422) (* (- 1) ?x495) (* 9 ?x586) (* (- 9) ?x609) ?x648 (* (- 1) ?x682) (* 3 ?x845) ?x856)))
 (let (($x295 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x257 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x209 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x205 (= ?x209 4)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (and $x121 $x205 $x257 $x295 (not (= ?x167 0))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x301 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x346 (* (- 1) k)))
 (let ((?x262 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x346 (* (- 1) m) ?x65)))
 (let ((?x71 (+ k m)))
 (let ((?x388 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x211 (+ (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 (+ c k) (+ c k)) (* (- 1) (* ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71)))))
 (let ((?x75 (+ c k)))
 (let ((?x170 (+ (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75) (* (- 1) (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75)))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x165 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (and $x121 (= ?x165 (- 4)) (= (+ (* (- 3) c) (* n k) ?x346 (* 2 n)) (- 1)) (= (+ (* 3 (* n n)) ?x346 ?x65) (- 1)) (not (= (* ?x170 ?x211 ?x262) 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x432 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x71 (+ k m)))
 (let ((?x388 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x75 (+ c k)))
 (let ((?x856 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 k)))
 (let ((?x845 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n n)))
 (let ((?x682 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 k)))
 (let ((?x648 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 m)))
 (let ((?x609 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n)))
 (let ((?x586 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n)))
 (let ((?x495 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 m)))
 (let ((?x422 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71)))
 (let ((?x399 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71 n n)))
 (let ((?x348 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75)))
 (let ((?x338 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 k)))
 (let ((?x327 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 m)))
 (let ((?x320 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n)))
 (let ((?x283 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75)))
 (let ((?x249 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 k)))
 (let ((?x238 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 m)))
 (let ((?x200 (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n n)))
 (let ((?x197 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n)))
 (let ((?x151 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75 n n)))
 (let ((?x148 (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75 ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71)))
 (let ((?x167 (+ (* 7 ?x148) (* (- 3) ?x151) (* (- 9) ?x197) (* 3 ?x200) (* (- 1) ?x238) ?x249 (* 7 ?x283) (* 9 ?x320) ?x327 (* (- 1) ?x338) (* (- 7) ?x348) (* (- 3) ?x399) (* (- 7) ?x422) (* (- 1) ?x495) (* 9 ?x586) (* (- 9) ?x609) ?x648 (* (- 1) ?x682) (* 3 ?x845) ?x856)))
 (let (($x295 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x257 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x209 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x205 (= ?x209 4)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (let (($x214 (and $x121 $x205 $x257 $x295 (not (= ?x167 0)))))
 (let ((?x65 (* 3 n)))
 (let ((?x346 (* (- 1) k)))
 (let ((?x211 (+ (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 ?x75 ?x75) (* (- 1) (* ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71)))))
 (let ((?x170 (+ (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75) (* (- 1) (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75)))))
 (let ((?x98 (* ?x170 ?x211 (+ 4 (* 3 (* ?x303 ?x303)) ?x346 (* (- 1) m) ?x65))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x165 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x302 (and $x121 (= ?x165 (- 4)) (= (+ (* (- 3) c) (* n k) ?x346 (* 2 n)) (- 1)) (= (+ (* 3 (* n n)) ?x346 ?x65) (- 1)) (not (= ?x98 0)))))
 (rewrite (= $x302 $x214)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x88 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x82 (- (* (+ c k) (+ c k) ?x76 ?x76 ?x76 ?x68 ?x68 ?x68) (* ?x71 ?x71 ?x71 ?x76 ?x76 ?x76 ?x68))))
 (let ((?x75 (+ c k)))
 (let ((?x79 (- (* ?x75 ?x71 ?x71 ?x76 ?x68 ?x68 ?x68) (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x76 ?x76 ?x68 ?x68 ?x68))))
 (let ((?x83 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) ?x79 ?x82)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x83 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x286 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x346 (* (- 1) k)))
 (let ((?x262 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x346 (* (- 1) m) ?x65)))
 (let ((?x71 (+ k m)))
 (let ((?x388 (+ 6 m)))
 (let ((?x303 (+ 1 n)))
 (let ((?x211 (+ (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x388 (+ c k) (+ c k)) (* (- 1) (* ?x303 ?x388 ?x388 ?x388 ?x71 ?x71 ?x71)))))
 (let ((?x75 (+ c k)))
 (let ((?x170 (+ (* ?x303 ?x303 ?x303 ?x388 ?x71 ?x71 ?x75) (* (- 1) (* ?x303 ?x303 ?x303 ?x388 ?x388 ?x71 ?x71 ?x75 ?x75 ?x75)))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x165 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x121 (= (+ m (* (- 6) n)) 6)))
 (let (($x302 (and $x121 (= ?x165 (- 4)) (= (+ (* (- 3) c) (* n k) ?x346 (* 2 n)) (- 1)) (= (+ (* 3 (* n n)) ?x346 ?x65) (- 1)) (not (= (* ?x170 ?x211 ?x262) 0)))))
 (let ((?x68 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x82 (- (* ?x75 ?x75 ?x76 ?x76 ?x76 ?x68 ?x68 ?x68) (* ?x71 ?x71 ?x71 ?x76 ?x76 ?x76 ?x68))))
 (let ((?x79 (- (* ?x75 ?x71 ?x71 ?x76 ?x68 ?x68 ?x68) (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x76 ?x76 ?x68 ?x68 ?x68))))
 (let ((?x83 (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) ?x79 ?x82)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x87 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not (= ?x83 0))))))
 (rewrite (= $x87 $x302)))))))))))))))))))))))))))
 ))
 (let ((@x89 (asserted $x88)))
 (let ((@x95 (mp (mp @x89 (quant-intro (proof-bind ?x286) (= $x88 $x301)) $x301) (rewrite (= $x301 $x301)) $x301)))
 (let ((@x203 (mp~ (mp @x95 (quant-intro (proof-bind ?x432) (= $x301 $x277)) $x277) (sk (~ $x277 $x578)) $x578)))
 (let ((@x453 (mp @x203 (rewrite (= $x578 $x325)) $x325)))
 (let ((@x363 (and-elim @x453 $x269)))
 (let ((@x614 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x269) $x287)) @x363 $x287)))
 (let (($x865 (>= ?x282 6)))
 (let ((@x623 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x269) $x865)) @x363 $x865)))
 (let (($x452 (<= ?x351 (- 1))))
 (let ((@x158 (and-elim @x453 $x161)))
 (let ((@x350 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x161) $x452)) @x158 $x452)))
 (let (($x154 (>= ?x351 (- 1))))
 (let ((@x365 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x161) $x154)) @x158 $x154)))
 (let (($x627 (not (<= ?x128 0))))
 (let (($x93 (>= ?x128 0)))
 (let ((@x617 ((_ th-lemma arith) (hypothesis (not $x93)) @x365 @x350 @x623 @x614 @x623 @x614 false)))
 (let ((@x264 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x326 $x627 (not $x93))) (and-elim @x453 $x429) (or $x627 (not $x93)))))
 ((_ th-lemma arith) (unit-resolution @x264 (lemma @x617 $x93) $x627) @x365 @x350 @x623 @x614 @x623 @x614 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        11
 :arith-assert-upper        11
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             250
 :arith-nonlinear-bounds    4
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             3
 :arith-patches_succ        1
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                19.94
 :memory                    19.36
 :mk-bool-var               17
 :mk-clause                 16
 :num-allocs                759475
 :num-checks                1
 :propagations              10
 :rlimit-count              9556
 :time                      0.02
 :total-time                0.04)
