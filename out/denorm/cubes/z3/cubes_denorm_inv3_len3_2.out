unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x701 (* 36 (* k!2 m!1))))
 (let ((?x699 (* 36 (* c!3 m!1))))
 (let ((?x684 (* 2 (* k!2 k!2 k!2 n!0))))
 (let ((?x676 (* k!2 k!2)))
 (let ((?x606 (* 36 ?x676)))
 (let ((?x592 (* 13 (* k!2 m!1 m!1))))
 (let ((?x678 (* 13 (* c!3 m!1 m!1))))
 (let ((?x360 (* 36 (* k!2 k!2 n!0))))
 (let ((?x422 (* 14 (* k!2 k!2 m!1))))
 (let ((?x477 (* k!2 k!2 k!2)))
 (let ((?x458 (* k!2 k!2 k!2 n!0 n!0)))
 (let ((?x325 (+ k!2 c!3)))
 (let ((?x610 (+ k!2 m!1)))
 (let ((?x703 (+ 6 m!1)))
 (let ((?x463 (+ 1 n!0)))
 (let ((?x386 (* k!2 k!2 m!1 m!1)))
 (let ((?x326 (* k!2 m!1 m!1 m!1)))
 (let ((?x318 (* c!3 m!1 m!1 m!1)))
 (let ((?x559 (+ (* k!2 c!3 n!0 m!1 m!1) (* 14 (* k!2 n!0 m!1 m!1)) (* 14 (* c!3 n!0 m!1 m!1)) (* 2 (* k!2 k!2 c!3 n!0)) (* 14 (* k!2 c!3 m!1)) (* k!2 k!2 c!3) (* k!2 n!0 n!0 m!1 m!1) (* c!3 n!0 n!0 m!1 m!1) (* 2 (* k!2 k!2 n!0 n!0 m!1)) (* 2 (* k!2 c!3 n!0 n!0 m!1)) (* 36 (* k!2 n!0 m!1)) (* 36 (* c!3 n!0 m!1)) (* 36 (* k!2 c!3 n!0)) (* k!2 c!3 m!1 m!1) (* 36 (* k!2 c!3)) (* k!2 k!2 n!0 m!1 m!1) (* k!2 n!0 m!1 m!1 m!1) ?x318 ?x326 ?x386 (* (- 1) (* ?x463 ?x463 ?x463 ?x703 ?x610 ?x610 ?x325 ?x325 ?x325)) (* 16 (* k!2 c!3 n!0 m!1)) ?x458 ?x477 ?x422 (* c!3 n!0 m!1 m!1 m!1) (* 16 (* k!2 k!2 n!0 m!1)) ?x360 ?x678 ?x592 ?x606 ?x684 ?x699 ?x701 (* k!2 k!2 c!3 n!0 n!0))))
 (let (($x750 (<= ?x559 0)))
 (let ((?x454 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x328 (<= ?x454 1)))
 (let (($x557 (= ?x454 1)))
 (let ((?x584 (* k!2 n!0)))
 (let ((?x275 (* 2 n!0)))
 (let ((?x281 (* (- 3) c!3)))
 (let ((?x280 (* (- 3) k!2)))
 (let ((?x153 (* ?x559 (+ 3 (* n!0 m!1) ?x280 ?x281 ?x275 ?x584))))
 (let (($x133 (= ?x153 0)))
 (let (($x162 (not $x133)))
 (let ((?x658 (* (- 1) ?x584)))
 (let ((?x667 (* (- 2) n!0)))
 (let ((?x457 (* 3 c!3)))
 (let ((?x324 (+ k!2 ?x457 ?x667 ?x658)))
 (let (($x225 (= ?x324 1)))
 (let ((?x321 (* (- 1) ?x676)))
 (let ((?x473 (* 9 (* c!3 n!0))))
 (let ((?x322 (* (- 9) n!0)))
 (let ((?x539 (* 18 c!3)))
 (let ((?x538 (* 5 k!2)))
 (let ((?x142 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x327 (= ?x142 (- 6))))
 (let (($x132 (and $x327 (= (+ ?x538 ?x539 ?x322 ?x473 ?x321) 4) $x225 $x557 $x162)))
 (let ((?x453 (+ c!3 k!2)))
 (let ((?x282 (+ ?x606 (* (- 1) (* ?x463 ?x463 ?x463 ?x703 ?x610 ?x610 ?x453 ?x453 ?x453)) (* c!3 k!2 k!2 n!0 n!0) ?x458 (* 2 (* c!3 k!2 m!1 n!0 n!0)) (* 2 (* k!2 k!2 m!1 n!0 n!0)) (* c!3 m!1 m!1 n!0 n!0) (* k!2 m!1 m!1 n!0 n!0) (* c!3 k!2 k!2) ?x477 (* 14 (* c!3 k!2 m!1)) ?x422 ?x678 ?x592 (* 2 (* c!3 k!2 k!2 n!0)) ?x684 (* 16 (* c!3 k!2 m!1 n!0)) (* 16 (* k!2 k!2 m!1 n!0)) (* 14 (* c!3 m!1 m!1 n!0)) (* 14 (* k!2 m!1 m!1 n!0)) (* c!3 k!2 m!1 m!1 n!0) (* k!2 k!2 m!1 m!1 n!0) (* c!3 m!1 m!1 m!1 n!0) (* k!2 m!1 m!1 m!1 n!0) (* 36 (* c!3 k!2)) ?x699 ?x701 (* c!3 k!2 m!1 m!1) ?x386 ?x318 ?x326 (* 36 (* c!3 k!2 n!0)) ?x360 (* 36 (* c!3 m!1 n!0)) (* 36 (* k!2 m!1 n!0)))))
 (let (($x486 (not (= (* ?x282 (+ 3 ?x281 ?x280 ?x275 ?x584 (* m!1 n!0))) 0))))
 (let (($x382 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x539 ?x538 ?x322 ?x321 ?x473) 4) (= (+ ?x457 k!2 ?x667 ?x658) 1) $x557 $x486)))
 (let (($x419 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x407 (+ 3 ?x219 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x664 (* 36 (* k m n))))
 (let ((?x660 (* 36 (* c m n))))
 (let ((?x656 (* 36 (* k k n))))
 (let ((?x652 (* 36 (* c k n))))
 (let ((?x648 (* k m m m)))
 (let ((?x645 (* c m m m)))
 (let ((?x642 (* k k m m)))
 (let ((?x639 (* c k m m)))
 (let ((?x616 (* 36 (* k m))))
 (let ((?x612 (* 36 (* c m))))
 (let ((?x605 (* 36 (* c k))))
 (let ((?x597 (* k m m m n)))
 (let ((?x596 (* c m m m n)))
 (let ((?x595 (* k k m m n)))
 (let ((?x594 (* c k m m n)))
 (let ((?x719 (* 14 (* k m m n))))
 (let ((?x718 (* 14 (* c m m n))))
 (let ((?x717 (* 16 (* k k m n))))
 (let ((?x716 (* 16 (* c k m n))))
 (let ((?x546 (* 2 (* k k k n))))
 (let ((?x545 (* 2 (* c k k n))))
 (let ((?x714 (* 13 (* k m m))))
 (let ((?x713 (* 13 (* c m m))))
 (let ((?x711 (* 14 (* k k m))))
 (let ((?x710 (* 14 (* c k m))))
 (let ((?x455 (* k k k)))
 (let ((?x452 (* c k k)))
 (let ((?x446 (* k m m n n)))
 (let ((?x445 (* c m m n n)))
 (let ((?x552 (* 2 (* k k m n n))))
 (let ((?x551 (* 2 (* c k m n n))))
 (let ((?x440 (* k k k n n)))
 (let ((?x439 (* c k k n n)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x560 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x319 (* (- 1) (* ?x339 ?x339 ?x339 ?x560 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x49 (* k k)))
 (let ((?x608 (* 36 ?x49)))
 (let ((?x315 (+ ?x608 ?x319 ?x439 ?x440 ?x551 ?x552 ?x445 ?x446 ?x452 ?x455 ?x710 ?x711 ?x713 ?x714 ?x545 ?x546 ?x716 ?x717 ?x718 ?x719 ?x594 ?x595 ?x596 ?x597 ?x605 ?x612 ?x616 ?x639 ?x642 ?x645 ?x648 ?x652 ?x656 ?x660 ?x664)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 $x206 $x258 $x296 (not (= (* ?x315 ?x407) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x268 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x562 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x560 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x319 (* (- 1) (* ?x339 ?x339 ?x339 ?x560 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x160 (* (+ (* ?x339 ?x339 ?x71 ?x71 ?x68) (* ?x339 ?x560 ?x560 ?x71 ?x68) ?x319) ?x562)))
 (let (($x580 (not (= ?x160 0))))
 (let (($x638 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x464 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x464 $x638 $x580))))))))))))))))))) :qid k!34))
 ))
 (let ((?x571 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x407 (+ 3 ?x219 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x664 (* 36 (* k m n))))
 (let ((?x660 (* 36 (* c m n))))
 (let ((?x656 (* 36 (* k k n))))
 (let ((?x652 (* 36 (* c k n))))
 (let ((?x648 (* k m m m)))
 (let ((?x645 (* c m m m)))
 (let ((?x642 (* k k m m)))
 (let ((?x639 (* c k m m)))
 (let ((?x616 (* 36 (* k m))))
 (let ((?x612 (* 36 (* c m))))
 (let ((?x605 (* 36 (* c k))))
 (let ((?x597 (* k m m m n)))
 (let ((?x596 (* c m m m n)))
 (let ((?x595 (* k k m m n)))
 (let ((?x594 (* c k m m n)))
 (let ((?x719 (* 14 (* k m m n))))
 (let ((?x718 (* 14 (* c m m n))))
 (let ((?x717 (* 16 (* k k m n))))
 (let ((?x716 (* 16 (* c k m n))))
 (let ((?x546 (* 2 (* k k k n))))
 (let ((?x545 (* 2 (* c k k n))))
 (let ((?x714 (* 13 (* k m m))))
 (let ((?x713 (* 13 (* c m m))))
 (let ((?x711 (* 14 (* k k m))))
 (let ((?x710 (* 14 (* c k m))))
 (let ((?x455 (* k k k)))
 (let ((?x452 (* c k k)))
 (let ((?x446 (* k m m n n)))
 (let ((?x445 (* c m m n n)))
 (let ((?x552 (* 2 (* k k m n n))))
 (let ((?x551 (* 2 (* c k m n n))))
 (let ((?x440 (* k k k n n)))
 (let ((?x439 (* c k k n n)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x560 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x319 (* (- 1) (* ?x339 ?x339 ?x339 ?x560 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x49 (* k k)))
 (let ((?x608 (* 36 ?x49)))
 (let ((?x315 (+ ?x608 ?x319 ?x439 ?x440 ?x551 ?x552 ?x445 ?x446 ?x452 ?x455 ?x710 ?x711 ?x713 ?x714 ?x545 ?x546 ?x716 ?x717 ?x718 ?x719 ?x594 ?x595 ?x596 ?x597 ?x605 ?x612 ?x616 ?x639 ?x642 ?x645 ?x648 ?x652 ?x656 ?x660 ?x664)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 (* c n))) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x810 (and $x122 $x206 $x258 $x296 (not (= (* ?x315 ?x407) 0)))))
 (let ((?x160 (* (+ (* ?x339 ?x339 ?x71 ?x71 ?x68) (* ?x339 ?x560 ?x560 ?x71 ?x68) ?x319) (+ 3 ?x219 (* (- 4) k) (* ?x339 ?x71) (* (- 1) m) ?x59))))
 (let (($x580 (not (= ?x160 0))))
 (let (($x638 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x464 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x358 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x464 $x638 $x580)))
 (rewrite (= $x358 $x810))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x646 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x562 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x560 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x319 (* (- 1) (* ?x339 ?x339 ?x339 ?x560 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x160 (* (+ (* ?x339 ?x339 ?x71 ?x71 ?x68) (* ?x339 ?x560 ?x560 ?x71 ?x68) ?x319) ?x562)))
 (let (($x580 (not (= ?x160 0))))
 (let (($x638 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x550 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= ?x550 (- 4)) (= (+ ?x219 (* n k) (* (- 1) k) ?x59) (- 1)) $x638 $x580)))))))))))))))) :qid k!34))
 ))
 (let ((?x346 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x562 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x560 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x319 (* (- 1) (* ?x339 ?x339 ?x339 ?x560 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x160 (* (+ (* ?x339 ?x339 ?x71 ?x71 ?x68) (* ?x339 ?x560 ?x560 ?x71 ?x68) ?x319) ?x562)))
 (let (($x580 (not (= ?x160 0))))
 (let (($x638 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x464 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x358 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x464 $x638 $x580)))
 (let ((?x48 (* 9 n)))
 (let ((?x550 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x657 (and $x122 (= ?x550 (- 4)) (= (+ ?x219 (* n k) (* (- 1) k) ?x59) (- 1)) $x638 $x580)))
 (rewrite (= $x657 $x358)))))))))))))))))))))))))
 ))
 (let (($x89 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x79 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x83 (- (+ (* ?x68 ?x71 ?x71 ?x72 ?x72) (* ?x68 ?x71 ?x79 ?x79 ?x72)) (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x79 ?x72 ?x72 ?x72))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x83) 0))))))))))))))))) :qid k!34))
 ))
 (let ((?x581 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x562 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x560 (+ 6 m)))
 (let ((?x339 (+ 1 n)))
 (let ((?x319 (* (- 1) (* ?x339 ?x339 ?x339 ?x560 ?x71 ?x71 ?x68 ?x68 ?x68))))
 (let ((?x160 (* (+ (* ?x339 ?x339 ?x71 ?x71 ?x68) (* ?x339 ?x560 ?x560 ?x71 ?x68) ?x319) ?x562)))
 (let (($x580 (not (= ?x160 0))))
 (let (($x638 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x550 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x657 (and $x122 (= ?x550 (- 4)) (= (+ ?x219 (* n k) (* (- 1) k) ?x59) (- 1)) $x638 $x580)))
 (let ((?x72 (+ n 1)))
 (let ((?x79 (+ m 6)))
 (let ((?x83 (- (+ (* ?x68 ?x71 ?x71 ?x72 ?x72) (* ?x68 ?x71 ?x79 ?x79 ?x72)) (* ?x68 ?x68 ?x68 ?x71 ?x71 ?x79 ?x72 ?x72 ?x72))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x88 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 ?x83) 0))))))
 (rewrite (= $x88 $x657))))))))))))))))))))))))))))
 ))
 (let ((@x90 (asserted $x89)))
 (let ((@x387 (mp (mp @x90 (quant-intro (proof-bind ?x581) (= $x89 $x646)) $x646) (rewrite (= $x646 $x646)) $x646)))
 (let ((@x312 (mp (mp @x387 (quant-intro (proof-bind ?x346) (= $x646 $x268)) $x268) (quant-intro (proof-bind ?x571) (= $x268 $x419)) $x419)))
 (let ((@x706 (mp (mp~ @x312 (sk (~ $x419 $x382)) $x382) (rewrite (= $x382 $x132)) $x132)))
 (let ((@x244 (and-elim @x706 $x557)))
 (let ((@x380 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x557) $x328)) @x244 $x328)))
 (let (($x696 (>= ?x454 1)))
 (let ((@x722 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x557) $x696)) @x244 $x696)))
 (let (($x817 (<= ?x142 (- 6))))
 (let ((@x814 (and-elim @x706 $x327)))
 (let ((@x167 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x327) $x817)) @x814 $x817)))
 (let (($x727 (>= ?x142 (- 6))))
 (let ((@x620 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x327) $x727)) @x814 $x727)))
 (let (($x813 (<= ?x324 1)))
 (let ((@x530 (and-elim @x706 $x225)))
 (let ((@x235 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x225) $x813)) @x530 $x813)))
 (let (($x307 (>= ?x324 1)))
 (let ((@x582 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x225) $x307)) @x530 $x307)))
 (let ((@x888 (hypothesis (not $x750))))
 (let (($x829 (not (<= ?x153 0))))
 (let (($x636 (>= ?x153 0)))
 (let (($x434 (not $x636)))
 (let ((@x139 (hypothesis $x434)))
 (let ((@x848 ((_ th-lemma arith) @x139 @x888 @x582 @x235 @x722 @x380 @x620 @x167 @x722 @x380 @x620 @x167 @x722 @x380 false)))
 (let (($x761 (>= ?x559 0)))
 (let ((@x822 (hypothesis (not $x761))))
 (let ((@x875 ((_ th-lemma arith) @x139 @x822 @x582 @x235 @x722 @x380 @x620 @x167 @x722 @x380 @x620 @x167 @x722 @x380 false)))
 (let ((@x873 ((_ th-lemma arith farkas 1 1 1) @x139 (unit-resolution (lemma @x875 (or $x761 $x636)) @x139 $x761) (unit-resolution (lemma @x848 (or $x750 $x636)) @x139 $x750) false)))
 (let ((@x856 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x133 $x829 $x434)) (and-elim @x706 $x162) (or $x829 $x434))))
 (let ((@x860 (unit-resolution @x856 (lemma @x873 $x636) $x829)))
 (let ((@x825 ((_ th-lemma arith) @x860 @x888 @x582 @x235 @x722 @x380 @x620 @x167 @x722 @x380 @x620 @x167 @x722 @x380 false)))
 (let ((@x819 ((_ th-lemma arith) @x860 @x822 @x582 @x235 @x722 @x380 @x620 @x167 @x722 @x380 @x620 @x167 @x722 @x380 false)))
 ((_ th-lemma arith farkas 1 1 1) @x860 (lemma @x819 $x761) (lemma @x825 $x750) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 99
 :arith-assert-diseq        19
 :arith-assert-lower        831
 :arith-assert-upper        499
 :arith-bound-prop          6
 :arith-branch-var          11
 :arith-conflicts           108
 :arith-eq-adapter          11
 :arith-fixed-eqs           129
 :arith-gcd-tests           112
 :arith-gomory-cuts         7
 :arith-grobner             102
 :arith-ineq-splits         11
 :arith-max-min             6611
 :arith-nonlinear-bounds    196
 :arith-nonlinear-horner    1286
 :arith-num-rows            29
 :arith-offset-eqs          4
 :arith-patches             24
 :arith-patches_succ        3
 :arith-pivots              1557
 :arith-pseudo-nonlinear    135
 :arith-row-summations      14783
 :arith-tableau-max-columns 98
 :arith-tableau-max-rows    29
 :conflicts                 108
 :decisions                 285
 :del-clause                114
 :final-checks              145
 :max-memory                5.46
 :memory                    3.27
 :minimized-lits            84
 :mk-bool-var               354
 :mk-clause                 418
 :num-allocs                57479292
 :num-checks                1
 :propagations              508
 :restarts                  1
 :rlimit-count              1139204
 :time                      0.30
 :total-time                0.31)
