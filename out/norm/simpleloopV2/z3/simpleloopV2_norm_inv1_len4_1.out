unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x960 (+ y00 x00 (* (- 1) x!1) (* (- 1) y!0))))
 (let (($x2935 (<= ?x960 0)))
 (let (($x2143 (= ?x960 0)))
 (let ((?x2998 (* x00 y!0 y!0 y!0)))
 (let ((?x2946 (* y00 x!1 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x1423 (* 3 (* y00 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x1428 (* 3 (* y00 y!0))))
 (let ((?x2172 (* x!1 x!1 y!0 y!0)))
 (let ((?x2115 (+ 1 x!1)))
 (let ((?x2120 (+ (- 1) y!0)))
 (let ((?x2161 (* ?x2120 ?x2120 ?x2120 ?x2115 ?x2115 ?x2115)))
 (let ((?x2140 (* y!0 y!0)))
 (let ((?x2121 (* 2 ?x2140)))
 (let ((?x2138 (* x!1 y!0 y!0)))
 (let ((?x1228 (* 2 ?x2138)))
 (let ((?x2106 (* x!1 x!1 x!1 y!0)))
 (let ((?x2105 (* x!1 x!1 x!1)))
 (let ((?x1007 (* (- 1) ?x2105)))
 (let ((?x2072 (* y00 y!0 y!0 y!0)))
 (let ((?x2039 (* ?x2120 ?x2120 ?x2115 ?x2115 ?x2115 ?x2115)))
 (let ((?x1748 (* x00 x!1 x!1 x!1 y!0 y!0 y!0)))
 (let ((?x1001 (* 3 (* x00 y!0))))
 (let ((?x1152 (* x!1 x!1 y!0)))
 (let ((?x1251 (* (- 2) y!0)))
 (let ((?x928 (* x!1 x!1)))
 (let ((?x2170 (* (- 2) ?x928)))
 (let ((?x1293 (* (- 2) x!1)))
 (let ((?x1875 (* 3 (* x00 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x1789 (+ (* 14 (* y00 x!1 x!1 y!0)) ?x1875 (* (- 12) (* x00 x!1 y!0 y!0)) (* (- 4) (* y00 x!1)) (* (- 4) (* x00 x!1)) ?x1293 ?x2170 ?x1251 ?x1152 ?x1001 (* 5 (* y00 x!1 x!1 x!1 y!0)) (* (- 5) (* x00 x!1 x!1)) (* (- 1) (* ?x2120 ?x2120 ?x2120 ?x2120 ?x2115 ?x2115 ?x2115)) (* (- 4) (* y00 y!0 y!0)) (* 3 (* y00 x!1 y!0 y!0 y!0)) (* (- 2) (* y00 x!1 x!1 x!1)) ?x1748 (* (- 12) (* y00 x!1 y!0 y!0)) (* (- 12) (* y00 x!1 x!1 y!0 y!0)) (* (- 2) (* x00 x!1 x!1 x!1)) (* 13 (* x00 x!1 y!0)) (* 14 (* x00 x!1 x!1 y!0)) (* 5 (* x00 x!1 x!1 x!1 y!0)) ?x2039 (* (- 4) (* x00 y!0 y!0)) (* (- 12) (* x00 x!1 x!1 y!0 y!0)) ?x2072 ?x1007 ?x2106 (* 13 (* y00 x!1 y!0)) (* (- 4) (* x00 x!1 x!1 x!1 y!0 y!0)) ?x1228 ?x2121 (* (- 1) (* ?x2120 ?x2120 ?x2120 ?x2115 ?x2115 ?x2115 ?x2115)) ?x2161 ?x2172 ?x1428 (* (- 5) (* y00 x!1 x!1)) ?x1423 (* (- 4) (* y00 x!1 x!1 x!1 y!0 y!0)) ?x2946 (* 3 (* x00 x!1 y!0 y!0 y!0)) ?x2998)))
 (let (($x1563 (= ?x1789 0)))
 (let (($x1223 (not $x1563)))
 (let ((?x2891 (* y00 x!1 x!1)))
 (let ((?x2148 (* (- 1) ?x2172)))
 (let ((?x2154 (* (- 2) ?x2140)))
 (let ((?x973 (+ 1 y!0)))
 (let ((?x914 (+ (- 1) x!1)))
 (let ((?x2139 (* ?x914 ?x914 ?x914 ?x914 ?x973 ?x973)))
 (let ((?x2174 (* (- 1) ?x2106)))
 (let ((?x1344 (* x00 x!1 x!1)))
 (let ((?x977 (* ?x914 ?x914 ?x914 ?x973 ?x973 ?x973 ?x973)))
 (let ((?x929 (* ?x914 ?x914 ?x914 ?x914 ?x973 ?x973 ?x973)))
 (let ((?x2150 (* 2 ?x928)))
 (let ((?x1421 (+ (* 2 y00) (* 2 x00) (* 4 (* y00 x!1 x!1 y!0)) ?x1875 (* (- 6) (* x00 x!1 y!0 y!0)) (* (- 2) (* y00 x!1)) (* (- 2) (* x00 x!1)) ?x1293 ?x2150 ?x929 ?x1251 ?x977 ?x1152 ?x1001 (* (- 1) (* y00 x!1 x!1 x!1 y!0)) ?x1344 (* 2 (* y00 y!0 y!0)) (* (- 3) (* y00 x!1 y!0 y!0 y!0)) (* (- 1) ?x1748) (* (- 6) (* y00 x!1 y!0 y!0)) (* 6 (* y00 x!1 x!1 y!0 y!0)) (* (- 5) (* x00 x!1 y!0)) (* 4 (* x00 x!1 x!1 y!0)) (* (- 1) (* x00 x!1 x!1 x!1 y!0)) (* 2 (* x00 y!0 y!0)) (* 6 (* x00 x!1 x!1 y!0 y!0)) ?x2072 ?x1007 ?x2174 (* (- 1) (* ?x914 ?x914 ?x914 ?x973 ?x973 ?x973)) (* (- 5) (* y00 x!1 y!0)) (* (- 2) (* x00 x!1 x!1 x!1 y!0 y!0)) ?x1228 (* (- 1) ?x2139) ?x2154 ?x2148 ?x1428 ?x2891 ?x1423 (* (- 2) (* y00 x!1 x!1 x!1 y!0 y!0)) (* (- 1) ?x2946) (* (- 3) (* x00 x!1 y!0 y!0 y!0)) ?x2998)))
 (let (($x1102 (= ?x1421 0)))
 (let (($x2190 (or (not $x1102) $x1223)))
 (let (($x1797 (and $x2143 $x2190)))
 (let ((?x2145 (* ?x2120 ?x2120 ?x2120 ?x2115 ?x2115 ?x2115 ?x2115)))
 (let ((?x1422 (* ?x2120 ?x2120 ?x2120 ?x2120 ?x2115 ?x2115 ?x2115)))
 (let ((?x2108 (* (- 3) (* x!1 x!1 y!0 y!0 y!0 y00))))
 (let ((?x2137 (* (- 1) (* y!0 y!0 y!0 y00))))
 (let ((?x2173 (* (- 2) ?x2138)))
 (let ((?x980 (* (- 1) ?x1152)))
 (let ((?x933 (* (- 3) (* x!1 x!1 y!0 y!0 y!0 x00))))
 (let ((?x922 (* (- 1) (* y!0 y!0 y!0 x00))))
 (let ((?x891 (* (- 3) (* y!0 x00))))
 (let ((?x957 (* (- 3) (* y!0 y00))))
 (let ((?x907 (* 2 y!0)))
 (let ((?x963 (* 2 x!1)))
 (let ((?x2112 (+ ?x963 ?x907 ?x957 (* (- 13) (* x!1 y!0 y00)) (* (- 14) (* x!1 x!1 y!0 y00)) (* 4 (* x!1 y00)) (* 4 (* x!1 x00)) (* 5 (* x!1 x!1 x00)) (* 2 (* x!1 x!1 x!1 x00)) ?x891 (* (- 13) (* x!1 y!0 x00)) (* (- 14) (* x!1 x!1 y!0 x00)) (* (- 5) (* x!1 x!1 x!1 y!0 x00)) (* 4 (* y!0 y!0 x00)) (* 12 (* x!1 y!0 y!0 x00)) (* 12 (* x!1 x!1 y!0 y!0 x00)) (* 4 (* x!1 x!1 x!1 y!0 y!0 x00)) ?x922 (* (- 3) (* x!1 y!0 y!0 y!0 x00)) ?x933 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 x00)) (* (- 1) ?x2039) (* 4 (* y!0 y!0 y00)) (* 12 (* x!1 y!0 y!0 y00)) (* 12 (* x!1 x!1 y!0 y!0 y00)) (* 4 (* x!1 x!1 x!1 y!0 y!0 y00)) (* 5 (* x!1 x!1 y00)) (* 2 (* x!1 x!1 x!1 y00)) (* (- 5) (* x!1 x!1 x!1 y!0 y00)) ?x980 ?x2150 ?x2173 ?x2148 ?x2154 ?x2137 (* (- 3) (* x!1 y!0 y!0 y!0 y00)) ?x2108 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 y00)) ?x1422 (* (- 1) ?x2161) ?x2174 ?x2105 ?x2145)))
 (let ((?x2134 (* x!1 x!1 x!1 y!0 y!0 y!0 y00)))
 (let ((?x2107 (* ?x914 ?x914 ?x914 ?x973 ?x973 ?x973)))
 (let ((?x1178 (* x!1 x!1 x!1 y!0 y00)))
 (let ((?x972 (* x!1 x!1 x!1 y!0 y!0 y!0 x00)))
 (let ((?x2144 (* x!1 x!1 x!1 y!0 x00)))
 (let ((?x1390 (* (- 2) x00)))
 (let ((?x1712 (* (- 2) y00)))
 (let ((?x2130 (+ ?x963 ?x907 ?x1712 ?x1390 ?x957 (* 5 (* x!1 y!0 y00)) (* (- 4) (* x!1 x!1 y!0 y00)) (* 2 (* x!1 y00)) (* 2 (* x!1 x00)) (* (- 1) (* x!1 x!1 x00)) ?x891 (* 5 (* x!1 y!0 x00)) (* (- 4) (* x!1 x!1 y!0 x00)) ?x2144 (* (- 2) (* y!0 y!0 x00)) (* 6 (* x!1 y!0 y!0 x00)) (* (- 6) (* x!1 x!1 y!0 y!0 x00)) (* 2 (* x!1 x!1 x!1 y!0 y!0 x00)) ?x922 (* 3 (* x!1 y!0 y!0 y!0 x00)) ?x933 ?x972 (* (- 2) (* y!0 y!0 y00)) (* 6 (* x!1 y!0 y!0 y00)) (* (- 6) (* x!1 x!1 y!0 y!0 y00)) (* 2 (* x!1 x!1 x!1 y!0 y!0 y00)) (* (- 1) (* x!1 x!1 y00)) ?x1178 (* (- 1) ?x977) (* (- 1) ?x929) ?x2139 ?x980 ?x2170 ?x2173 ?x2172 ?x2121 ?x2107 ?x2137 (* 3 (* x!1 y!0 y!0 y!0 y00)) ?x2108 ?x2134 ?x2106 ?x2105)))
 (let (($x2146 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x2130 0)) (not (= ?x2112 0))))))
 (let (($x3523 (exists ((x Int) (y Int) )(! (let ((?x1722 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2222 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x1682 (* x x x)))
 (let ((?x1665 (* x x x y)))
 (let ((?x2807 (* (- 1) ?x1665)))
 (let ((?x1623 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1615 (* (- 1) ?x1623)))
 (let ((?x1606 (* ?x184 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1529 (* x x x y y y y00)))
 (let ((?x2806 (* (- 1) ?x1529)))
 (let ((?x1633 (* (- 3) (* x x y y y y00))))
 (let ((?x1523 (* x y y y y00)))
 (let ((?x2805 (* (- 3) ?x1523)))
 (let ((?x1516 (* (- 1) (* y y y y00))))
 (let ((?x1304 (* y y)))
 (let ((?x2804 (* (- 2) ?x1304)))
 (let ((?x1300 (* x x y y)))
 (let ((?x2803 (* (- 1) ?x1300)))
 (let ((?x1264 (* (- 2) (* x y y))))
 (let ((?x1289 (* x x)))
 (let ((?x2802 (* 2 ?x1289)))
 (let ((?x1664 (* (- 1) (* x x y))))
 (let ((?x961 (* x x x y y00)))
 (let ((?x2801 (* (- 5) ?x961)))
 (let ((?x2800 (* 2 (* x x x y00))))
 (let ((?x932 (* x x x y y y00)))
 (let ((?x2798 (* 4 ?x932)))
 (let ((?x930 (* x x y y y00)))
 (let ((?x2797 (* 12 ?x930)))
 (let ((?x926 (* x y y y00)))
 (let ((?x2796 (* 12 ?x926)))
 (let ((?x918 (* y y y00)))
 (let ((?x2795 (* 4 ?x918)))
 (let ((?x565 (* ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x952 (* (- 1) ?x565)))
 (let ((?x558 (* x x x y y y x00)))
 (let ((?x2794 (* (- 1) ?x558)))
 (let ((?x581 (* (- 3) (* x x y y y x00))))
 (let ((?x537 (* x y y y x00)))
 (let ((?x2793 (* (- 3) ?x537)))
 (let ((?x532 (* (- 1) (* y y y x00))))
 (let ((?x450 (* x x x y y x00)))
 (let ((?x2792 (* 4 ?x450)))
 (let ((?x433 (* x x y y x00)))
 (let ((?x2791 (* 12 ?x433)))
 (let ((?x424 (* x y y x00)))
 (let ((?x2790 (* 12 ?x424)))
 (let ((?x415 (* y y x00)))
 (let ((?x2788 (* 4 ?x415)))
 (let ((?x382 (* x x x y x00)))
 (let ((?x2787 (* (- 5) ?x382)))
 (let ((?x365 (* x x y x00)))
 (let ((?x2786 (* (- 14) ?x365)))
 (let ((?x356 (* x y x00)))
 (let ((?x2785 (* (- 13) ?x356)))
 (let ((?x569 (* (- 3) (* y x00))))
 (let ((?x2783 (* 2 (* x x x x00))))
 (let ((?x332 (* x x x00)))
 (let ((?x2782 (* 5 ?x332)))
 (let ((?x329 (* x x00)))
 (let ((?x2781 (* 4 ?x329)))
 (let ((?x157 (* x x y y00)))
 (let ((?x2779 (* (- 14) ?x157)))
 (let ((?x148 (* y y00)))
 (let ((?x1624 (* (- 3) ?x148)))
 (let ((?x1266 (* 2 y)))
 (let ((?x1698 (* 2 x)))
 (let ((?x3515 (+ ?x1698 ?x1266 ?x1624 (* (- 13) (* x y y00)) ?x2779 (* 4 (* x y00)) ?x2781 ?x2782 ?x2783 ?x569 ?x2785 ?x2786 ?x2787 ?x2788 ?x2790 ?x2791 ?x2792 ?x532 ?x2793 ?x581 ?x2794 ?x952 ?x2795 ?x2796 ?x2797 ?x2798 (* 5 (* x x y00)) ?x2800 ?x2801 ?x1664 ?x2802 ?x1264 ?x2803 ?x2804 ?x1516 ?x2805 ?x1633 ?x2806 ?x1606 ?x1615 ?x2807 ?x1682 ?x2222)))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1312 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1426 (* 2 ?x1304)))
 (let ((?x1234 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1201 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1354 (* (- 1) ?x1201)))
 (let ((?x1190 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1321 (* (- 1) ?x1190)))
 (let ((?x1715 (* 2 ?x932)))
 (let ((?x1713 (* (- 2) ?x918)))
 (let ((?x870 (* 2 ?x450)))
 (let ((?x868 (* (- 2) ?x415)))
 (let ((?x1390 (* (- 2) x00)))
 (let ((?x1712 (* (- 2) y00)))
 (let ((?x1646 (+ ?x1698 ?x1266 ?x1712 ?x1390 ?x1624 (* 5 (* x y y00)) (* (- 4) ?x157) (* 2 (* x y00)) (* 2 ?x329) (* (- 1) ?x332) ?x569 (* 5 ?x356) (* (- 4) ?x365) ?x382 ?x868 (* 6 ?x424) (* (- 6) ?x433) ?x870 ?x532 (* 3 ?x537) ?x581 ?x558 ?x1713 (* 6 ?x926) (* (- 6) ?x930) ?x1715 (* (- 1) (* x x y00)) ?x961 ?x1321 ?x1354 ?x1234 ?x1664 (* (- 2) ?x1289) ?x1264 ?x1300 ?x1426 ?x1312 ?x1516 (* 3 ?x1523) ?x1633 ?x1529 ?x1665 ?x1682)))
 (let (($x128 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x128 (or (not (= ?x1646 0)) (not (= ?x3515 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1552 (exists ((x Int) (y Int) )(! (let ((?x1722 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x1097 (* ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1112 (* y00 ?x184)))
 (let ((?x350 (* x00 ?x184)))
 (let ((?x565 (* ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x952 (* (- 1) ?x565)))
 (let ((?x2222 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x1623 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1615 (* (- 1) ?x1623)))
 (let ((?x1606 (* ?x184 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1496 (* x00 ?x184 ?x1722 ?x1722)))
 (let ((?x150 (* y00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x931 (* x00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1559 (* y00 ?x184 ?x1722 ?x1722)))
 (let ((?x1491 (+ ?x1559 (* (- 1) (* ?x184 ?x1722)) (* (- 1) (* x00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) ?x931 ?x150 ?x1496 ?x1606 ?x1615 ?x2222 (* (- 1) (* ?x184 ?x184 ?x1722 ?x1722)) (* (- 1) (* ?x184 ?x184)) ?x952 ?x350 ?x1112 (* (- 1) (* y00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) (* (- 1) ?x1097))))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1080 (* ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1620 (* y00 ?x130)))
 (let ((?x1514 (* x00 ?x130)))
 (let ((?x1201 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1190 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1571 (* x00 ?x120 ?x120 ?x130)))
 (let ((?x1457 (* y00 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1451 (* x00 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1547 (* y00 ?x120 ?x120 ?x130)))
 (let ((?x164 (+ ?x1547 (* (- 1) (* ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) ?x1451 ?x1457 ?x1571 ?x1190 (* (- 1) (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) ?x1201 (* (- 1) (* ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x1514 ?x1620 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) (* (- 1) ?x1080))))
 (let (($x1438 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1438 (or (not (= ?x164 0)) (not (= ?x1491 0))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1273 (lambda ((x Int) (y Int) )(let ((?x1722 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x2222 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x1682 (* x x x)))
 (let ((?x1665 (* x x x y)))
 (let ((?x2807 (* (- 1) ?x1665)))
 (let ((?x1623 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1615 (* (- 1) ?x1623)))
 (let ((?x1606 (* ?x184 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1529 (* x x x y y y y00)))
 (let ((?x2806 (* (- 1) ?x1529)))
 (let ((?x1633 (* (- 3) (* x x y y y y00))))
 (let ((?x1523 (* x y y y y00)))
 (let ((?x2805 (* (- 3) ?x1523)))
 (let ((?x1516 (* (- 1) (* y y y y00))))
 (let ((?x1304 (* y y)))
 (let ((?x2804 (* (- 2) ?x1304)))
 (let ((?x1300 (* x x y y)))
 (let ((?x2803 (* (- 1) ?x1300)))
 (let ((?x1264 (* (- 2) (* x y y))))
 (let ((?x1289 (* x x)))
 (let ((?x2802 (* 2 ?x1289)))
 (let ((?x1664 (* (- 1) (* x x y))))
 (let ((?x961 (* x x x y y00)))
 (let ((?x2801 (* (- 5) ?x961)))
 (let ((?x2800 (* 2 (* x x x y00))))
 (let ((?x932 (* x x x y y y00)))
 (let ((?x2798 (* 4 ?x932)))
 (let ((?x930 (* x x y y y00)))
 (let ((?x2797 (* 12 ?x930)))
 (let ((?x926 (* x y y y00)))
 (let ((?x2796 (* 12 ?x926)))
 (let ((?x918 (* y y y00)))
 (let ((?x2795 (* 4 ?x918)))
 (let ((?x565 (* ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x952 (* (- 1) ?x565)))
 (let ((?x558 (* x x x y y y x00)))
 (let ((?x2794 (* (- 1) ?x558)))
 (let ((?x581 (* (- 3) (* x x y y y x00))))
 (let ((?x537 (* x y y y x00)))
 (let ((?x2793 (* (- 3) ?x537)))
 (let ((?x532 (* (- 1) (* y y y x00))))
 (let ((?x450 (* x x x y y x00)))
 (let ((?x2792 (* 4 ?x450)))
 (let ((?x433 (* x x y y x00)))
 (let ((?x2791 (* 12 ?x433)))
 (let ((?x424 (* x y y x00)))
 (let ((?x2790 (* 12 ?x424)))
 (let ((?x415 (* y y x00)))
 (let ((?x2788 (* 4 ?x415)))
 (let ((?x382 (* x x x y x00)))
 (let ((?x2787 (* (- 5) ?x382)))
 (let ((?x365 (* x x y x00)))
 (let ((?x2786 (* (- 14) ?x365)))
 (let ((?x356 (* x y x00)))
 (let ((?x2785 (* (- 13) ?x356)))
 (let ((?x569 (* (- 3) (* y x00))))
 (let ((?x2783 (* 2 (* x x x x00))))
 (let ((?x332 (* x x x00)))
 (let ((?x2782 (* 5 ?x332)))
 (let ((?x329 (* x x00)))
 (let ((?x2781 (* 4 ?x329)))
 (let ((?x157 (* x x y y00)))
 (let ((?x2779 (* (- 14) ?x157)))
 (let ((?x148 (* y y00)))
 (let ((?x1624 (* (- 3) ?x148)))
 (let ((?x1266 (* 2 y)))
 (let ((?x1698 (* 2 x)))
 (let ((?x3515 (+ ?x1698 ?x1266 ?x1624 (* (- 13) (* x y y00)) ?x2779 (* 4 (* x y00)) ?x2781 ?x2782 ?x2783 ?x569 ?x2785 ?x2786 ?x2787 ?x2788 ?x2790 ?x2791 ?x2792 ?x532 ?x2793 ?x581 ?x2794 ?x952 ?x2795 ?x2796 ?x2797 ?x2798 (* 5 (* x x y00)) ?x2800 ?x2801 ?x1664 ?x2802 ?x1264 ?x2803 ?x2804 ?x1516 ?x2805 ?x1633 ?x2806 ?x1606 ?x1615 ?x2807 ?x1682 ?x2222)))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1312 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1426 (* 2 ?x1304)))
 (let ((?x1234 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1201 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1354 (* (- 1) ?x1201)))
 (let ((?x1190 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1321 (* (- 1) ?x1190)))
 (let ((?x1715 (* 2 ?x932)))
 (let ((?x1713 (* (- 2) ?x918)))
 (let ((?x870 (* 2 ?x450)))
 (let ((?x868 (* (- 2) ?x415)))
 (let ((?x1390 (* (- 2) x00)))
 (let ((?x1712 (* (- 2) y00)))
 (let ((?x1646 (+ ?x1698 ?x1266 ?x1712 ?x1390 ?x1624 (* 5 (* x y y00)) (* (- 4) ?x157) (* 2 (* x y00)) (* 2 ?x329) (* (- 1) ?x332) ?x569 (* 5 ?x356) (* (- 4) ?x365) ?x382 ?x868 (* 6 ?x424) (* (- 6) ?x433) ?x870 ?x532 (* 3 ?x537) ?x581 ?x558 ?x1713 (* 6 ?x926) (* (- 6) ?x930) ?x1715 (* (- 1) (* x x y00)) ?x961 ?x1321 ?x1354 ?x1234 ?x1664 (* (- 2) ?x1289) ?x1264 ?x1300 ?x1426 ?x1312 ?x1516 (* 3 ?x1523) ?x1633 ?x1529 ?x1665 ?x1682)))
 (let (($x128 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x1276 (and $x128 (or (not (= ?x1646 0)) (not (= ?x3515 0))))))
 (let ((?x1112 (* y00 ?x184)))
 (let ((?x350 (* x00 ?x184)))
 (let ((?x1496 (* x00 ?x184 ?x1722 ?x1722)))
 (let ((?x150 (* y00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x931 (* x00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1559 (* y00 ?x184 ?x1722 ?x1722)))
 (let ((?x1491 (+ ?x1559 (* (- 1) (* ?x184 ?x1722)) (* (- 1) (* x00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) ?x931 ?x150 ?x1496 ?x1606 ?x1615 ?x2222 (* (- 1) (* ?x184 ?x184 ?x1722 ?x1722)) (* (- 1) (* ?x184 ?x184)) ?x952 ?x350 ?x1112 (* (- 1) (* y00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) (* (- 1) (* ?x184 ?x1722 ?x1722 ?x1722)))))
 (let ((?x1620 (* y00 ?x130)))
 (let ((?x1514 (* x00 ?x130)))
 (let ((?x1571 (* x00 ?x120 ?x120 ?x130)))
 (let ((?x1457 (* y00 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1451 (* x00 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1547 (* y00 ?x120 ?x120 ?x130)))
 (let ((?x164 (+ ?x1547 (* (- 1) (* ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) ?x1451 ?x1457 ?x1571 ?x1190 (* (- 1) ?x1312) ?x1201 (* (- 1) (* ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x130 ?x130)) (* (- 1) ?x1234) ?x1514 ?x1620 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x130)))))
 (let (($x1438 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1603 (and $x1438 (or (not (= ?x164 0)) (not (= ?x1491 0))))))
 (rewrite (= $x1603 $x1276))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x951 (exists ((x Int) (y Int) )(! (let ((?x1722 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x1097 (* ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1177 (* y00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x565 (* ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x762 (* ?x184 ?x184)))
 (let ((?x2219 (* ?x184 ?x184 ?x1722 ?x1722)))
 (let ((?x1623 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1470 (* x00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1462 (* ?x184 ?x1722)))
 (let ((?x1185 (+ (* (- 1) (* y00 ?x184 ?x1722 ?x1722)) ?x1462 ?x1470 (* (- 1) (* x00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) (* (- 1) (* y00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) (* (- 1) (* x00 ?x184 ?x1722 ?x1722)) (* (- 1) (* ?x184 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) ?x1623 (* (- 1) (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)) ?x2219 ?x762 ?x565 (* (- 1) (* x00 ?x184)) (* (- 1) (* y00 ?x184)) ?x1177 ?x1097)))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1080 (* ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1240 (* y00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1234 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1504 (* ?x130 ?x130)))
 (let ((?x974 (* ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1201 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1354 (* (- 1) ?x1201)))
 (let ((?x1312 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1190 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1321 (* (- 1) ?x1190)))
 (let ((?x1554 (* x00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x130)))
 (let ((?x2078 (+ (* (- 1) (* y00 ?x120 ?x120 ?x130)) ?x1446 ?x1554 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x130)) ?x1321 ?x1312 ?x1354 ?x974 ?x1504 ?x1234 (* (- 1) (* x00 ?x130)) (* (- 1) (* y00 ?x130)) ?x1240 ?x1080)))
 (let (($x1438 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x1438 (or (not (= ?x2078 0)) (not (= ?x1185 0))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1628 (lambda ((x Int) (y Int) )(let ((?x1722 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x1097 (* ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1112 (* y00 ?x184)))
 (let ((?x350 (* x00 ?x184)))
 (let ((?x565 (* ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x952 (* (- 1) ?x565)))
 (let ((?x2222 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x1623 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1615 (* (- 1) ?x1623)))
 (let ((?x1606 (* ?x184 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1496 (* x00 ?x184 ?x1722 ?x1722)))
 (let ((?x150 (* y00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x931 (* x00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1559 (* y00 ?x184 ?x1722 ?x1722)))
 (let ((?x1491 (+ ?x1559 (* (- 1) (* ?x184 ?x1722)) (* (- 1) (* x00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) ?x931 ?x150 ?x1496 ?x1606 ?x1615 ?x2222 (* (- 1) (* ?x184 ?x184 ?x1722 ?x1722)) (* (- 1) (* ?x184 ?x184)) ?x952 ?x350 ?x1112 (* (- 1) (* y00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) (* (- 1) ?x1097))))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1080 (* ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1620 (* y00 ?x130)))
 (let ((?x1514 (* x00 ?x130)))
 (let ((?x1201 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1190 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1571 (* x00 ?x120 ?x120 ?x130)))
 (let ((?x1457 (* y00 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1451 (* x00 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1547 (* y00 ?x120 ?x120 ?x130)))
 (let ((?x164 (+ ?x1547 (* (- 1) (* ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) ?x1451 ?x1457 ?x1571 ?x1190 (* (- 1) (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) ?x1201 (* (- 1) (* ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* ?x130 ?x130)) (* (- 1) (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x1514 ?x1620 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)) (* (- 1) ?x1080))))
 (let (($x1438 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1603 (and $x1438 (or (not (= ?x164 0)) (not (= ?x1491 0))))))
 (let ((?x1177 (* y00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x762 (* ?x184 ?x184)))
 (let ((?x2219 (* ?x184 ?x184 ?x1722 ?x1722)))
 (let ((?x1470 (* x00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1462 (* ?x184 ?x1722)))
 (let ((?x1185 (+ (* (- 1) ?x1559) ?x1462 ?x1470 (* (- 1) ?x931) (* (- 1) ?x150) (* (- 1) ?x1496) (* (- 1) ?x1606) ?x1623 (* (- 1) ?x2222) ?x2219 ?x762 ?x565 (* (- 1) ?x350) (* (- 1) ?x1112) ?x1177 ?x1097)))
 (let ((?x1240 (* y00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1234 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1504 (* ?x130 ?x130)))
 (let ((?x974 (* ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1354 (* (- 1) ?x1201)))
 (let ((?x1312 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1321 (* (- 1) ?x1190)))
 (let ((?x1554 (* x00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x130)))
 (let ((?x2078 (+ (* (- 1) ?x1547) ?x1446 ?x1554 (* (- 1) ?x1451) (* (- 1) ?x1457) (* (- 1) ?x1571) ?x1321 ?x1312 ?x1354 ?x974 ?x1504 ?x1234 (* (- 1) ?x1514) (* (- 1) ?x1620) ?x1240 ?x1080)))
 (let (($x1472 (and $x1438 (or (not (= ?x2078 0)) (not (= ?x1185 0))))))
 (rewrite (= $x1472 $x1603))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x99 (exists ((x Int) (y Int) )(! (let ((?x67 (- y 1)))
 (let ((?x66 (+ x 1)))
 (let ((?x71 (+ (* (- 1) ?x66 ?x66 ?x67 y00) (* ?x66 ?x67) (* ?x66 ?x66 ?x66 x00 ?x67 ?x67 ?x67))))
 (let ((?x77 (- (- ?x71 (* ?x66 ?x66 ?x66 x00 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x67 ?x67 y00))))
 (let ((?x79 (- (- ?x77 (* ?x66 ?x66 x00 ?x67)) (* ?x66 ?x66 ?x66 ?x67 ?x67 ?x67 ?x67))))
 (let ((?x83 (- (+ ?x79 (* ?x66 ?x66 ?x66 ?x67 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67))))
 (let ((?x87 (+ ?x83 (* ?x66 ?x66 ?x67 ?x67) (* ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67))))
 (let ((?x94 (+ (- (- ?x87 (* x00 ?x67)) (* ?x67 y00)) (* ?x66 ?x66 ?x66 ?x67 ?x67 ?x67 y00) (* ?x66 ?x66 ?x66 ?x67))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x40 (+ (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x46 (- (- ?x40 (* ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x48 (- (- ?x46 (* ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36))))
 (let ((?x52 (- (+ ?x48 (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x56 (+ ?x52 (* ?x35 ?x35 ?x36 ?x36) (* ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36))))
 (let ((?x63 (+ (- (- ?x56 (* x00 ?x36)) (* ?x36 y00)) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x63 0)) (not (= ?x94 0)))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1448 (lambda ((x Int) (y Int) )(let ((?x1722 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x1097 (* ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1177 (* y00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x565 (* ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)))
 (let ((?x762 (* ?x184 ?x184)))
 (let ((?x2219 (* ?x184 ?x184 ?x1722 ?x1722)))
 (let ((?x1623 (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1470 (* x00 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)))
 (let ((?x1462 (* ?x184 ?x1722)))
 (let ((?x1185 (+ (* (- 1) (* y00 ?x184 ?x1722 ?x1722)) ?x1462 ?x1470 (* (- 1) (* x00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) (* (- 1) (* y00 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) (* (- 1) (* x00 ?x184 ?x1722 ?x1722)) (* (- 1) (* ?x184 ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722)) ?x1623 (* (- 1) (* ?x184 ?x184 ?x184 ?x1722 ?x1722 ?x1722 ?x1722)) ?x2219 ?x762 ?x565 (* (- 1) (* x00 ?x184)) (* (- 1) (* y00 ?x184)) ?x1177 ?x1097)))
 (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1080 (* ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1240 (* y00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1234 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1504 (* ?x130 ?x130)))
 (let ((?x974 (* ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1201 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1354 (* (- 1) ?x1201)))
 (let ((?x1312 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1190 (* ?x120 ?x120 ?x120 ?x130 ?x130 ?x130 ?x130)))
 (let ((?x1321 (* (- 1) ?x1190)))
 (let ((?x1554 (* x00 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x130)))
 (let ((?x2078 (+ (* (- 1) (* y00 ?x120 ?x120 ?x130)) ?x1446 ?x1554 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x130 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x130)) ?x1321 ?x1312 ?x1354 ?x974 ?x1504 ?x1234 (* (- 1) (* x00 ?x130)) (* (- 1) (* y00 ?x130)) ?x1240 ?x1080)))
 (let (($x1438 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x1472 (and $x1438 (or (not (= ?x2078 0)) (not (= ?x1185 0))))))
 (let ((?x67 (- y 1)))
 (let ((?x66 (+ x 1)))
 (let ((?x71 (+ (* (- 1) ?x66 ?x66 ?x67 y00) (* ?x66 ?x67) (* ?x66 ?x66 ?x66 x00 ?x67 ?x67 ?x67))))
 (let ((?x77 (- (- ?x71 (* ?x66 ?x66 ?x66 x00 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x67 ?x67 y00))))
 (let ((?x79 (- (- ?x77 (* ?x66 ?x66 x00 ?x67)) (* ?x66 ?x66 ?x66 ?x67 ?x67 ?x67 ?x67))))
 (let ((?x83 (- (+ ?x79 (* ?x66 ?x66 ?x66 ?x67 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67))))
 (let ((?x87 (+ ?x83 (* ?x66 ?x66 ?x67 ?x67) (* ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67))))
 (let ((?x94 (+ (- (- ?x87 (* x00 ?x67)) (* ?x67 y00)) (* ?x66 ?x66 ?x66 ?x67 ?x67 ?x67 y00) (* ?x66 ?x66 ?x66 ?x67))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x40 (+ (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x46 (- (- ?x40 (* ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x48 (- (- ?x46 (* ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36))))
 (let ((?x52 (- (+ ?x48 (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x56 (+ ?x52 (* ?x35 ?x35 ?x36 ?x36) (* ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36))))
 (let ((?x63 (+ (- (- ?x56 (* x00 ?x36)) (* ?x36 y00)) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36))))
 (let (($x98 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x63 0)) (not (= ?x94 0))))))
 (rewrite (= $x98 $x1472))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x100 (asserted $x99)))
 (let ((@x1163 (mp (mp @x100 (quant-intro (proof-bind ?x1448) (= $x99 $x951)) $x951) (rewrite (= $x951 $x951)) $x951)))
 (let ((@x953 (mp (mp @x1163 (quant-intro (proof-bind ?x1628) (= $x951 $x1552)) $x1552) (quant-intro (proof-bind ?x1273) (= $x1552 $x3523)) $x3523)))
 (let ((@x2191 (mp (mp~ @x953 (sk (~ $x3523 $x2146)) $x2146) (rewrite (= $x2146 $x1797)) $x1797)))
 (let ((@x589 (and-elim @x2191 $x2143)))
 (let ((@x2889 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2143) $x2935)) @x589 $x2935)))
 (let (($x1213 (>= ?x960 0)))
 (let ((@x1430 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2143) $x1213)) @x589 $x1213)))
 (let (($x1103 (not (<= ?x1789 0))))
 (let (($x1717 (>= ?x1789 0)))
 (let (($x2932 (>= ?x1421 0)))
 (let ((@x2098 (lemma ((_ th-lemma arith) (hypothesis (not $x2932)) @x1430 @x2889 @x1430 @x2889 false) $x2932)))
 (let (($x965 (<= ?x1421 0)))
 (let ((@x936 (lemma ((_ th-lemma arith) (hypothesis (not $x965)) @x1430 @x2889 @x1430 @x2889 false) $x965)))
 (let ((@x1432 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1102 (not $x965) (not $x2932))) @x936 @x2098 $x1102)))
 (let ((@x1934 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1563 $x1103 (not $x1717))) (unit-resolution (and-elim @x2191 $x2190) @x1432 $x1223) (lemma ((_ th-lemma arith) (hypothesis (not $x1717)) @x1430 @x2889 false) $x1717) $x1103)))
 ((_ th-lemma arith) @x1934 @x1430 @x2889 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        26
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             829
 :arith-nonlinear-bounds    19
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              4
 :arith-row-summations      1
 :arith-tableau-max-columns 72
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                4.15
 :memory                    3.50
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                2195762
 :num-checks                1
 :propagations              14
 :rlimit-count              16490
 :time                      0.02
 :total-time                0.03)
