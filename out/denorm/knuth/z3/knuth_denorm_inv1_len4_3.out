unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x544 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* d!1 q!3)) (* 4 (* d!1 r!2)) (* (- 4) (* d!1 x!0)) (* (- 8) r!2) (* (- 1) (* d!1 d!1 q!3)))))
 (let (($x279 (>= ?x544 0)))
 (let (($x1776 (= ?x544 0)))
 (let ((?x2132 (* d!1 d!1 q!3)))
 (let ((?x1186 (* 8 r!2)))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x330 (+ ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 2) (* d!1 q!3)) (* (- 4) (* d!1 r!2)) (* 4 (* d!1 x!0)) ?x1186 ?x2132)))
 (let ((?x1785 (* r!2 r!2)))
 (let ((?x1167 (* (- 8) ?x1785)))
 (let ((?x1229 (* 4 (* r!2 r!2 r!2))))
 (let ((?x1437 (* (- 2) (* x!0 r!2 r!2))))
 (let ((?x2372 (* 2 r!2)))
 (let ((?x1155 (* (- 1) x!0)))
 (let ((?x476 (* (- 2) d!1)))
 (let ((?x1767 (+ (- 4) ?x476 q!3 ?x1155 ?x2372)))
 (let ((?x1590 (+ 2 d!1)))
 (let ((?x947 (+ (- 8) q!3)))
 (let ((?x1671 (* (- 1) (* d!1 x!0 r!2 r!2))))
 (let ((?x2193 (* 2 (* d!1 r!2 r!2 r!2))))
 (let ((?x1878 (* 2 (* q!3 r!2 r!2))))
 (let ((?x215 (* d!1 q!3 r!2 r!2)))
 (let ((?x609 (+ ?x215 ?x1878 ?x2193 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x1767 ?x1767 r!2 r!2)) (* (- 8) (* d!1 r!2 r!2)) (* (- 1) (* ?x947 ?x947 ?x947 ?x1767 ?x1767 ?x1767 r!2 r!2 r!2)) ?x1671 (* ?x947 ?x947 ?x947 ?x1590 ?x1590 ?x1767 ?x1767 ?x1767 r!2 r!2 r!2) ?x1437 ?x1229 ?x1167 (* (- 2) (* d!1 d!1 r!2 r!2)))))
 (let ((?x2473 (* ?x609 ?x330)))
 (let (($x1160 (= ?x2473 0)))
 (let (($x2418 (not $x1160)))
 (let ((?x1166 (* (- 4) ?x1785)))
 (let ((?x1192 (* (- 1) d!1)))
 (let ((?x501 (+ (- 2) ?x1192 q!3 ?x1155 ?x2372)))
 (let ((?x1816 (+ (- 4) q!3)))
 (let ((?x880 (+ ?x215 ?x1878 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x501 ?x501 r!2 r!2)) (* (- 1) (* ?x1816 ?x1816 ?x1816 ?x501 ?x501 ?x501 r!2 r!2 r!2)) (* ?x1816 ?x1816 ?x1816 ?x1590 ?x1590 ?x501 ?x501 ?x501 r!2 r!2 r!2) ?x2193 (* (- 4) (* d!1 r!2 r!2)) ?x1671 ?x1437 ?x1229 ?x1166 (* (- 1) (* d!1 d!1 r!2 r!2)))))
 (let ((?x877 (* ?x880 ?x330)))
 (let (($x1158 (= ?x877 0)))
 (let ((?x1035 (+ 2 d!1 q!3 ?x1155 ?x2372)))
 (let ((?x514 (+ 4 q!3)))
 (let ((?x1899 (* d!1 d!1 r!2 r!2)))
 (let ((?x338 (* 4 ?x1785)))
 (let ((?x556 (+ ?x215 ?x1878 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x1035 ?x1035 r!2 r!2)) ?x2193 (* 4 (* d!1 r!2 r!2)) ?x1671 (* ?x1590 ?x1590 ?x514 ?x514 ?x514 ?x1035 ?x1035 ?x1035 r!2 r!2 r!2) ?x1437 ?x1229 ?x338 ?x1899 (* (- 1) (* ?x514 ?x514 ?x514 ?x1035 ?x1035 ?x1035 r!2 r!2 r!2)))))
 (let ((?x1873 (* ?x556 ?x330)))
 (let (($x620 (= ?x1873 0)))
 (let ((?x351 (* 18 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x2686 (* d!1 d!1 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x2366 (* d!1 d!1 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2)))
 (let ((?x750 (* 36 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x689 (+ q!3 ?x1155 ?x2372)))
 (let ((?x442 (* (- 4) (* d!1 q!3 q!3 q!3 x!0 x!0 x!0 r!2 r!2 r!2))))
 (let ((?x1934 (* 4 (* d!1 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1453 (* d!1 d!1 q!3 q!3 q!3 x!0 x!0 x!0 r!2 r!2 r!2)))
 (let ((?x1119 (* 24 (* d!1 q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2 r!2))))
 (let ((?x1332 (* d!1 d!1 q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2)))
 (let ((?x1318 (* d!1 d!1 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x530 (* (- 48) (* d!1 q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2))))
 (let ((?x1227 (* d!1 d!1 q!3 q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2)))
 (let ((?x1340 (* 12 (* d!1 q!3 q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2))))
 (let ((?x1902 (* 24 (* d!1 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1062 (* 24 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x615 (* (- 12) (* d!1 q!3 q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2))))
 (let ((?x931 (* (- 48) (* d!1 q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x740 (* d!1 d!1 q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2 r!2)))
 (let ((?x685 (* d!1 d!1 q!3 q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2)))
 (let ((?x618 (* d!1 d!1 q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2)))
 (let ((?x780 (* 3 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1660 (* 32 (* d!1 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x1184 (* 48 (* d!1 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x257 (* d!1 d!1 q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x2446 (+ ?x215 (* (- 12) ?x257) ?x1184 ?x1660 ?x780 ?x1878 (* (- 12) ?x618) (* 3 ?x685) (* 6 ?x740) ?x2193 ?x931 ?x615 ?x1062 ?x1902 (* (- 9) (* q!3 q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2)) (* 9 (* q!3 q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2)) ?x1340 (* (- 36) (* q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2 r!2)) (* (- 3) ?x1227) (* (- 36) (* q!3 q!3 q!3 q!3 x!0 r!2 r!2 r!2 r!2)) ?x530 (* (- 3) (* q!3 q!3 q!3 x!0 x!0 x!0 r!2 r!2 r!2)) ?x1671 (* 8 ?x1318) ?x1332 ?x1119 (* (- 1) ?x1453) ?x1437 ?x1229 ?x1934 ?x442 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x689 ?x689 r!2 r!2)) (* 18 (* q!3 q!3 q!3 x!0 x!0 r!2 r!2 r!2 r!2)) ?x750 (* 6 ?x2366) (* 12 ?x2686) ?x351)))
 (let ((?x1666 (* ?x2446 ?x330)))
 (let (($x757 (= ?x1666 0)))
 (let (($x184 (not $x757)))
 (let (($x194 (or $x184 (not $x620) (not $x1158) $x2418)))
 (let (($x754 (and $x1776 $x194)))
 (let ((?x1343 (+ ?x1186 ?x172 ?x220 ?x204 ?x270 ?x308 (* 4 (* x!0 d!1)) (* (- 4) (* r!2 d!1)) (* q!3 d!1 d!1) (* (- 2) (* q!3 d!1)))))
 (let ((?x471 (* 2 (* r!2 r!2 r!2 d!1))))
 (let ((?x748 (* q!3 r!2 r!2 d!1)))
 (let ((?x1614 (+ (- 4) q!3 ?x2372 ?x1155 ?x476)))
 (let ((?x1879 (* (- 1) (* r!2 r!2 x!0 d!1))))
 (let ((?x1222 (* (- 2) (* r!2 r!2 x!0))))
 (let ((?x1730 (+ ?x1167 (* ?x947 ?x947 ?x947 ?x1590 ?x1590 ?x1614 ?x1614 ?x1614 r!2 r!2 r!2) (* (- 1) (* ?x947 ?x947 ?x947 ?x1614 ?x1614 ?x1614 r!2 r!2 r!2)) ?x1222 ?x1229 ?x1879 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x1614 ?x1614 r!2 r!2)) ?x1878 ?x748 ?x471 (* (- 8) (* r!2 r!2 d!1)) (* (- 2) (* r!2 r!2 d!1 d!1)))))
 (let ((?x1226 (+ (- 2) q!3 ?x2372 ?x1155 ?x1192)))
 (let ((?x438 (+ ?x1166 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x1226 ?x1226 r!2 r!2)) (* (- 1) (* ?x1816 ?x1816 ?x1816 ?x1226 ?x1226 ?x1226 r!2 r!2 r!2)) (* ?x1816 ?x1816 ?x1816 ?x1590 ?x1590 ?x1226 ?x1226 ?x1226 r!2 r!2 r!2) ?x1222 ?x1229 ?x1879 ?x1878 ?x748 ?x471 (* (- 4) (* r!2 r!2 d!1)) (* (- 1) (* r!2 r!2 d!1 d!1)))))
 (let ((?x690 (* r!2 r!2 d!1 d!1)))
 (let ((?x1638 (+ 2 q!3 ?x2372 ?x1155 d!1)))
 (let ((?x1822 (+ ?x338 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x1638 ?x1638 r!2 r!2)) ?x1222 (* ?x1590 ?x1590 ?x514 ?x514 ?x514 ?x1638 ?x1638 ?x1638 r!2 r!2 r!2) (* (- 1) (* ?x514 ?x514 ?x514 ?x1638 ?x1638 ?x1638 r!2 r!2 r!2)) ?x1229 ?x1879 ?x1878 ?x748 ?x471 (* 4 (* r!2 r!2 d!1)) ?x690)))
 (let ((?x1605 (+ q!3 ?x2372 ?x1155)))
 (let ((?x495 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x2034 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x2298 (* 48 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x356 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1176 (* 24 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x694 (* 4 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x1018 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x985 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x1346 (* 32 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x1609 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 r!2 d!1 d!1)))
 (let ((?x1400 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1)))
 (let ((?x2326 (* 12 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1))))
 (let ((?x1052 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d!1 d!1)))
 (let ((?x2078 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d!1 d!1)))
 (let ((?x2347 (* 24 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0 d!1))))
 (let ((?x1204 (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x1054 (* (- 12) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x1604 (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0 d!1))))
 (let ((?x2156 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x1777 (* (- 48) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x2214 (+ ?x1777 (* (- 12) ?x2156) ?x780 ?x1604 ?x1054 ?x1204 ?x2347 (* (- 1) ?x2078) ?x1222 ?x1229 (* 6 ?x1052) ?x2326 (* 3 ?x1400) ?x1879 ?x1878 (* 8 ?x1609) ?x1346 ?x1062 (* (- 12) ?x985) ?x1018 ?x694 ?x351 ?x1176 (* (- 9) (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* 6 ?x356) ?x750 (* (- 36) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0)) ?x2298 (* 12 ?x2034) (* 9 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0)) (* (- 36) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r!2 x!0)) (* 18 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 x!0 x!0)) (* (- 3) ?x495) ?x748 ?x471 (* (- 1) (* ?x1590 ?x1590 ?x1590 ?x1605 ?x1605 r!2 r!2)) (* (- 3) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 x!0 x!0)))))
 (let (($x1211 (or (not (= (* ?x2214 ?x1343) 0)) (not (= (* ?x1822 ?x1343) 0)) (not (= (* ?x438 ?x1343) 0)) (not (= (* ?x1730 ?x1343) 0)))))
 (let (($x1610 (and (= ?x1343 0) $x1211)))
 (let (($x1237 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2503 (* (- 2) (* q d))))
 (let ((?x2506 (* q d d)))
 (let ((?x2505 (* r d)))
 (let ((?x2507 (* (- 4) ?x2505)))
 (let ((?x2113 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x2109 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x2113 ?x2507 ?x2506 ?x2503)))
 (let ((?x2554 (* r r d d)))
 (let ((?x2605 (* (- 2) ?x2554)))
 (let ((?x2544 (* 2 (* r r r d))))
 (let ((?x2548 (* q r r d)))
 (let ((?x2040 (* 2 (* q r r))))
 (let ((?x2606 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x332 (+ (- 4) q ?x136 ?x169 ?x2606)))
 (let ((?x2487 (+ 2 d)))
 (let ((?x1111 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x332 ?x332 r r))))
 (let ((?x2096 (* (- 1) (* r r x d))))
 (let ((?x1724 (* 4 (* r r r))))
 (let ((?x1436 (* (- 2) (* r r x))))
 (let ((?x2609 (+ (- 8) q)))
 (let ((?x1452 (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x332 ?x332 ?x332 r r r))))
 (let ((?x1120 (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x332 ?x332 ?x332 r r r)))
 (let ((?x385 (* r r)))
 (let ((?x2325 (* (- 8) ?x385)))
 (let ((?x452 (+ ?x2325 ?x1120 ?x1452 ?x1436 ?x1724 ?x2096 ?x1111 ?x2040 ?x2548 ?x2544 (* (- 8) (* r r d)) ?x2605)))
 (let ((?x2587 (* (- 1) ?x2554)))
 (let ((?x2550 (* r r d)))
 (let ((?x2604 (* (- 4) ?x2550)))
 (let ((?x2592 (* (- 1) d)))
 (let ((?x1497 (+ (- 2) q ?x136 ?x169 ?x2592)))
 (let ((?x2588 (+ (- 4) q)))
 (let ((?x1465 (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1497 ?x1497 ?x1497 r r r)))
 (let ((?x1000 (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1497 ?x1497 ?x1497 r r r))))
 (let ((?x908 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1497 ?x1497 r r))))
 (let ((?x578 (* (- 4) ?x385)))
 (let ((?x1444 (* (+ ?x578 ?x908 ?x1000 ?x1465 ?x1436 ?x1724 ?x2096 ?x2040 ?x2548 ?x2544 ?x2604 ?x2587) ?x2109)))
 (let ((?x2496 (* 4 ?x2550)))
 (let ((?x995 (+ 2 q ?x136 ?x169 d)))
 (let ((?x2489 (+ 4 q)))
 (let ((?x843 (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r))))
 (let ((?x1611 (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r)))
 (let ((?x1363 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x995 ?x995 r r))))
 (let ((?x386 (* 4 ?x385)))
 (let ((?x498 (* (+ ?x386 ?x1363 ?x1436 ?x1611 ?x843 ?x1724 ?x2096 ?x2040 ?x2548 ?x2544 ?x2496 ?x2554) ?x2109)))
 (let ((?x2578 (* (- 3) (* q q q r r r x x x))))
 (let ((?x2575 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ q ?x136 ?x169) (+ q ?x136 ?x169) r r))))
 (let ((?x2042 (* (- 3) (* q q q q q r r r x d d))))
 (let ((?x2455 (* 18 (* q q q r r r r x x))))
 (let ((?x2448 (* (- 36) (* q q q r r r r r x))))
 (let ((?x2406 (* 9 (* q q q q r r r x x))))
 (let ((?x2382 (* 12 (* q q q q r r r r r d d))))
 (let ((?x2395 (* (- 36) (* q q q q r r r r x))))
 (let ((?x2392 (* 36 (* q q q q r r r r r))))
 (let ((?x2352 (* 6 (* q q q q q r r r r d d))))
 (let ((?x2351 (* (- 9) (* q q q q q r r r x))))
 (let ((?x2345 (* 18 (* q q q q q r r r r))))
 (let ((?x2337 (* 4 (* q q q q q q r r r d))))
 (let ((?x2331 (* q q q q q q r r r d d)))
 (let ((?x2057 (* (- 12) (* q q q r r r r r x d d))))
 (let ((?x2287 (* 24 (* q q q r r r r r r))))
 (let ((?x2284 (* 8 (* q q q r r r r r r d d))))
 (let ((?x2181 (* 3 (* q q q q r r r x x d d))))
 (let ((?x2186 (* 6 (* q q q r r r r x x d d))))
 (let ((?x2052 (* (- 1) (* q q q r r r x x x d d))))
 (let ((?x637 (* 3 (* q q q q q q r r r))))
 (let ((?x2178 (* (- 12) (* q q q q r r r r x d d))))
 (let ((?x1728 (+ (* (- 48) (* q q q q r r r r x d)) ?x2178 ?x637 (* (- 4) (* q q q r r r x x x d)) (* (- 12) (* q q q q q r r r x d)) (* (- 48) (* q q q r r r r r x d)) (* 24 (* q q q r r r r x x d)) ?x2052 ?x1436 ?x1724 ?x2186 (* 12 (* q q q q r r r x x d)) ?x2181 ?x2096 ?x2040 ?x2284 (* 32 (* q q q r r r r r r d)) ?x2287 ?x2057 ?x2331 ?x2337 ?x2345 (* 24 (* q q q q q r r r r d)) ?x2351 ?x2352 ?x2392 ?x2395 (* 48 (* q q q q r r r r r d)) ?x2382 ?x2406 ?x2448 ?x2455 ?x2042 ?x2548 ?x2544 ?x2575 ?x2578)))
 (let (($x512 (or (not (= (* ?x1728 ?x2109) 0)) (not (= ?x498 0)) (not (= ?x1444 0)) (not (= (* ?x452 ?x2109) 0)))))
 (let (($x469 (= ?x2109 0)))
 (and $x469 $x512))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x776 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2503 (* (- 2) (* q d))))
 (let ((?x2506 (* q d d)))
 (let ((?x2505 (* r d)))
 (let ((?x2507 (* (- 4) ?x2505)))
 (let ((?x2567 (* 8 d)))
 (let ((?x2113 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x961 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 4) (* d 2)) ?x2113 ?x2567 ?x2507 ?x2506 ?x2503)))
 (let ((?x2589 (* 2 (* (* (- 1) d) r r))))
 (let ((?x2554 (* r r d d)))
 (let ((?x2587 (* (- 1) ?x2554)))
 (let ((?x2550 (* r r d)))
 (let ((?x2564 (* (- 2) ?x2550)))
 (let ((?x2544 (* 2 (* r r r d))))
 (let ((?x2548 (* q r r d)))
 (let ((?x2499 (* 2 (* (* (- 1) x) r r))))
 (let ((?x2495 (* 2 (* (* 2 r) r r))))
 (let ((?x2040 (* 2 (* q r r))))
 (let ((?x2096 (* (- 1) (* r r x d))))
 (let ((?x2592 (* (- 1) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x1497 (+ (- 2) q ?x136 ?x169 ?x2592)))
 (let ((?x2487 (+ 2 d)))
 (let ((?x2588 (+ (- 4) q)))
 (let ((?x1465 (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1497 ?x1497 ?x1497 r r r)))
 (let ((?x1000 (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1497 ?x1497 ?x1497 r r r))))
 (let ((?x908 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1497 ?x1497 r r))))
 (let ((?x385 (* r r)))
 (let ((?x578 (* (- 4) ?x385)))
 (let ((?x1661 (+ ?x578 ?x908 ?x1000 ?x1465 ?x2096 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2564 ?x2587 ?x2589)))
 (let ((?x2468 (* 2 (* d 4))))
 (let ((?x2513 (* (- 8) d)))
 (let ((?x2496 (* 4 ?x2550)))
 (let ((?x995 (+ 2 q ?x136 ?x169 d)))
 (let ((?x2489 (+ 4 q)))
 (let ((?x843 (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r))))
 (let ((?x1611 (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r)))
 (let ((?x1363 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x995 ?x995 r r))))
 (let ((?x386 (* 4 ?x385)))
 (let ((?x1402 (* (+ ?x386 ?x1363 ?x1611 ?x843 ?x2096 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2496 ?x2554) (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x2113 ?x2513 ?x2468 ?x2507 ?x2506 ?x2503))))
 (let ((?x2109 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x2113 ?x2507 ?x2506 ?x2503)))
 (let ((?x2578 (* (- 3) (* q q q r r r x x x))))
 (let ((?x2575 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ q ?x136 ?x169) (+ q ?x136 ?x169) r r))))
 (let ((?x2042 (* (- 3) (* q q q q q r r r x d d))))
 (let ((?x2455 (* 18 (* q q q r r r r x x))))
 (let ((?x2448 (* (- 36) (* q q q r r r r r x))))
 (let ((?x2406 (* 9 (* q q q q r r r x x))))
 (let ((?x2382 (* 12 (* q q q q r r r r r d d))))
 (let ((?x2389 (* q q q q r r r r r d)))
 (let ((?x2391 (* 24 ?x2389)))
 (let ((?x2395 (* (- 36) (* q q q q r r r r x))))
 (let ((?x2392 (* 36 (* q q q q r r r r r))))
 (let ((?x2352 (* 6 (* q q q q q r r r r d d))))
 (let ((?x2351 (* (- 9) (* q q q q q r r r x))))
 (let ((?x2343 (* q q q q q r r r r d)))
 (let ((?x2341 (* 12 ?x2343)))
 (let ((?x2345 (* 18 (* q q q q q r r r r))))
 (let ((?x2337 (* 4 (* q q q q q q r r r d))))
 (let ((?x2331 (* q q q q q q r r r d d)))
 (let ((?x2057 (* (- 12) (* q q q r r r r r x d d))))
 (let ((?x2287 (* 24 (* q q q r r r r r r))))
 (let ((?x2291 (* q q q r r r r r r d)))
 (let ((?x2281 (* 16 ?x2291)))
 (let ((?x2284 (* 8 (* q q q r r r r r r d d))))
 (let ((?x2181 (* 3 (* q q q q r r r x x d d))))
 (let ((?x2186 (* 6 (* q q q r r r r x x d d))))
 (let ((?x2052 (* (- 1) (* q q q r r r x x x d d))))
 (let ((?x637 (* 3 (* q q q q q q r r r))))
 (let ((?x2178 (* (- 12) (* q q q q r r r r x d d))))
 (let ((?x953 (+ (* 2 (* d q q ?x169 r r r q q q)) (* 2 (* d ?x169 ?x169 q r r r q q q)) (* 2 (* d ?x136 ?x136 q r r r q q q)) (* 2 (* d ?x136 q ?x136 r r r q q q)) (* 2 (* d ?x136 q ?x169 r r r q q q)) (* 2 (* d ?x169 ?x169 ?x136 r r r q q q)) (* 2 (* d ?x136 ?x169 q r r r q q q)) (* (- 24) (* q q q q r r r r x d)) ?x2178 (* 2 (* d q ?x136 ?x169 r r r q q q)) (* 2 (* d ?x169 q ?x169 r r r q q q)) ?x637 (* (- 2) (* q q q r r r x x x d)) (* 2 (* d q ?x169 q r r r q q q)) (* (- 6) (* q q q q q r r r x d)) (* 2 (* d ?x136 ?x136 ?x136 r r r q q q)) (* (- 24) (* q q q r r r r r x d)) (* 12 (* q q q r r r r x x d)) (* 2 (* d ?x136 ?x136 ?x169 r r r q q q)) (* 2 (* d ?x136 ?x169 ?x169 r r r q q q)) ?x2052 (* 2 (* d ?x169 ?x169 ?x169 r r r q q q)) (* 2 (* d q ?x136 ?x136 r r r q q q)) (* 2 (* d ?x136 ?x169 ?x136 r r r q q q)) (* 2 (* d q ?x169 ?x136 r r r q q q)) ?x2186 (* 2 (* d q ?x136 q r r r q q q)) (* 2 (* d ?x169 ?x136 ?x169 r r r q q q)) (* 6 (* q q q q r r r x x d)) (* 2 (* d q ?x169 ?x169 r r r q q q)) ?x2181 (* 2 (* d ?x169 ?x136 q r r r q q q)) (* 2 (* d ?x169 ?x136 ?x136 r r r q q q)) ?x2096 (* 2 (* d q q ?x136 r r r q q q)) ?x2040 (* 2 (* d ?x169 q q r r r q q q)) (* 2 (* d ?x136 q q r r r q q q)) (* 2 (* d ?x169 q ?x136 r r r q q q)) ?x2284 ?x2281 ?x2287 ?x2057 ?x2331 ?x2337 ?x2345 ?x2341 ?x2351 ?x2352 ?x2392 ?x2395 ?x2391 ?x2382 ?x2406 ?x2448 ?x2455 ?x2042 ?x2495 ?x2499 ?x2548 ?x2544 ?x2575 ?x2578)))
 (let ((?x2596 (* 16 d)))
 (let ((?x234 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 8) (* d 2)) ?x2113 ?x2596 ?x2507 ?x2506 ?x2503)))
 (let ((?x2616 (* 2 (* (* (- 2) d) r r))))
 (let ((?x2605 (* (- 2) ?x2554)))
 (let ((?x2604 (* (- 4) ?x2550)))
 (let ((?x2606 (* (- 2) d)))
 (let ((?x332 (+ (- 4) q ?x136 ?x169 ?x2606)))
 (let ((?x1111 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x332 ?x332 r r))))
 (let ((?x2609 (+ (- 8) q)))
 (let ((?x1452 (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x332 ?x332 ?x332 r r r))))
 (let ((?x1120 (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x332 ?x332 ?x332 r r r)))
 (let ((?x2325 (* (- 8) ?x385)))
 (let ((?x1591 (+ ?x2325 ?x1120 ?x1452 ?x2096 ?x1111 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2604 ?x2605 ?x2616)))
 (let (($x1956 (or (not (= (* ?x1591 ?x234) 0)) (not (= (* ?x953 ?x2109) 0)) (not (= ?x1402 0)) (not (= (* ?x1661 ?x961) 0)))))
 (let (($x469 (= ?x2109 0)))
 (and $x469 $x1956)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1009 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2503 (* (- 2) (* q d))))
 (let ((?x2506 (* q d d)))
 (let ((?x2505 (* r d)))
 (let ((?x2507 (* (- 4) ?x2505)))
 (let ((?x2113 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x2109 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x2113 ?x2507 ?x2506 ?x2503)))
 (let ((?x2554 (* r r d d)))
 (let ((?x2605 (* (- 2) ?x2554)))
 (let ((?x2544 (* 2 (* r r r d))))
 (let ((?x2548 (* q r r d)))
 (let ((?x2040 (* 2 (* q r r))))
 (let ((?x2606 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x332 (+ (- 4) q ?x136 ?x169 ?x2606)))
 (let ((?x2487 (+ 2 d)))
 (let ((?x1111 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x332 ?x332 r r))))
 (let ((?x2096 (* (- 1) (* r r x d))))
 (let ((?x1724 (* 4 (* r r r))))
 (let ((?x1436 (* (- 2) (* r r x))))
 (let ((?x2609 (+ (- 8) q)))
 (let ((?x1452 (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x332 ?x332 ?x332 r r r))))
 (let ((?x1120 (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x332 ?x332 ?x332 r r r)))
 (let ((?x385 (* r r)))
 (let ((?x2325 (* (- 8) ?x385)))
 (let ((?x452 (+ ?x2325 ?x1120 ?x1452 ?x1436 ?x1724 ?x2096 ?x1111 ?x2040 ?x2548 ?x2544 (* (- 8) (* r r d)) ?x2605)))
 (let ((?x2587 (* (- 1) ?x2554)))
 (let ((?x2550 (* r r d)))
 (let ((?x2604 (* (- 4) ?x2550)))
 (let ((?x2592 (* (- 1) d)))
 (let ((?x1497 (+ (- 2) q ?x136 ?x169 ?x2592)))
 (let ((?x2588 (+ (- 4) q)))
 (let ((?x1465 (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1497 ?x1497 ?x1497 r r r)))
 (let ((?x1000 (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1497 ?x1497 ?x1497 r r r))))
 (let ((?x908 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1497 ?x1497 r r))))
 (let ((?x578 (* (- 4) ?x385)))
 (let ((?x1444 (* (+ ?x578 ?x908 ?x1000 ?x1465 ?x1436 ?x1724 ?x2096 ?x2040 ?x2548 ?x2544 ?x2604 ?x2587) ?x2109)))
 (let ((?x2496 (* 4 ?x2550)))
 (let ((?x995 (+ 2 q ?x136 ?x169 d)))
 (let ((?x2489 (+ 4 q)))
 (let ((?x843 (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r))))
 (let ((?x1611 (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r)))
 (let ((?x1363 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x995 ?x995 r r))))
 (let ((?x386 (* 4 ?x385)))
 (let ((?x498 (* (+ ?x386 ?x1363 ?x1436 ?x1611 ?x843 ?x1724 ?x2096 ?x2040 ?x2548 ?x2544 ?x2496 ?x2554) ?x2109)))
 (let ((?x2578 (* (- 3) (* q q q r r r x x x))))
 (let ((?x2575 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ q ?x136 ?x169) (+ q ?x136 ?x169) r r))))
 (let ((?x2042 (* (- 3) (* q q q q q r r r x d d))))
 (let ((?x2455 (* 18 (* q q q r r r r x x))))
 (let ((?x2448 (* (- 36) (* q q q r r r r r x))))
 (let ((?x2406 (* 9 (* q q q q r r r x x))))
 (let ((?x2382 (* 12 (* q q q q r r r r r d d))))
 (let ((?x2395 (* (- 36) (* q q q q r r r r x))))
 (let ((?x2392 (* 36 (* q q q q r r r r r))))
 (let ((?x2352 (* 6 (* q q q q q r r r r d d))))
 (let ((?x2351 (* (- 9) (* q q q q q r r r x))))
 (let ((?x2345 (* 18 (* q q q q q r r r r))))
 (let ((?x2337 (* 4 (* q q q q q q r r r d))))
 (let ((?x2331 (* q q q q q q r r r d d)))
 (let ((?x2057 (* (- 12) (* q q q r r r r r x d d))))
 (let ((?x2287 (* 24 (* q q q r r r r r r))))
 (let ((?x2284 (* 8 (* q q q r r r r r r d d))))
 (let ((?x2181 (* 3 (* q q q q r r r x x d d))))
 (let ((?x2186 (* 6 (* q q q r r r r x x d d))))
 (let ((?x2052 (* (- 1) (* q q q r r r x x x d d))))
 (let ((?x637 (* 3 (* q q q q q q r r r))))
 (let ((?x2178 (* (- 12) (* q q q q r r r r x d d))))
 (let ((?x1728 (+ (* (- 48) (* q q q q r r r r x d)) ?x2178 ?x637 (* (- 4) (* q q q r r r x x x d)) (* (- 12) (* q q q q q r r r x d)) (* (- 48) (* q q q r r r r r x d)) (* 24 (* q q q r r r r x x d)) ?x2052 ?x1436 ?x1724 ?x2186 (* 12 (* q q q q r r r x x d)) ?x2181 ?x2096 ?x2040 ?x2284 (* 32 (* q q q r r r r r r d)) ?x2287 ?x2057 ?x2331 ?x2337 ?x2345 (* 24 (* q q q q q r r r r d)) ?x2351 ?x2352 ?x2392 ?x2395 (* 48 (* q q q q r r r r r d)) ?x2382 ?x2406 ?x2448 ?x2455 ?x2042 ?x2548 ?x2544 ?x2575 ?x2578)))
 (let (($x512 (or (not (= (* ?x1728 ?x2109) 0)) (not (= ?x498 0)) (not (= ?x1444 0)) (not (= (* ?x452 ?x2109) 0)))))
 (let (($x469 (= ?x2109 0)))
 (let (($x1523 (and $x469 $x512)))
 (let ((?x2567 (* 8 d)))
 (let ((?x961 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 4) (* d 2)) ?x2113 ?x2567 ?x2507 ?x2506 ?x2503)))
 (let ((?x2589 (* 2 (* ?x2592 r r))))
 (let ((?x2564 (* (- 2) ?x2550)))
 (let ((?x2499 (* 2 (* ?x169 r r))))
 (let ((?x2495 (* 2 (* ?x136 r r))))
 (let ((?x1661 (+ ?x578 ?x908 ?x1000 ?x1465 ?x2096 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2564 ?x2587 ?x2589)))
 (let ((?x2468 (* 2 (* d 4))))
 (let ((?x2513 (* (- 8) d)))
 (let ((?x1402 (* (+ ?x386 ?x1363 ?x1611 ?x843 ?x2096 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2496 ?x2554) (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x2113 ?x2513 ?x2468 ?x2507 ?x2506 ?x2503))))
 (let ((?x2389 (* q q q q r r r r r d)))
 (let ((?x2391 (* 24 ?x2389)))
 (let ((?x2343 (* q q q q q r r r r d)))
 (let ((?x2341 (* 12 ?x2343)))
 (let ((?x2291 (* q q q r r r r r r d)))
 (let ((?x2281 (* 16 ?x2291)))
 (let ((?x953 (+ (* 2 (* d q q ?x169 r r r q q q)) (* 2 (* d ?x169 ?x169 q r r r q q q)) (* 2 (* d ?x136 ?x136 q r r r q q q)) (* 2 (* d ?x136 q ?x136 r r r q q q)) (* 2 (* d ?x136 q ?x169 r r r q q q)) (* 2 (* d ?x169 ?x169 ?x136 r r r q q q)) (* 2 (* d ?x136 ?x169 q r r r q q q)) (* (- 24) (* q q q q r r r r x d)) ?x2178 (* 2 (* d q ?x136 ?x169 r r r q q q)) (* 2 (* d ?x169 q ?x169 r r r q q q)) ?x637 (* (- 2) (* q q q r r r x x x d)) (* 2 (* d q ?x169 q r r r q q q)) (* (- 6) (* q q q q q r r r x d)) (* 2 (* d ?x136 ?x136 ?x136 r r r q q q)) (* (- 24) (* q q q r r r r r x d)) (* 12 (* q q q r r r r x x d)) (* 2 (* d ?x136 ?x136 ?x169 r r r q q q)) (* 2 (* d ?x136 ?x169 ?x169 r r r q q q)) ?x2052 (* 2 (* d ?x169 ?x169 ?x169 r r r q q q)) (* 2 (* d q ?x136 ?x136 r r r q q q)) (* 2 (* d ?x136 ?x169 ?x136 r r r q q q)) (* 2 (* d q ?x169 ?x136 r r r q q q)) ?x2186 (* 2 (* d q ?x136 q r r r q q q)) (* 2 (* d ?x169 ?x136 ?x169 r r r q q q)) (* 6 (* q q q q r r r x x d)) (* 2 (* d q ?x169 ?x169 r r r q q q)) ?x2181 (* 2 (* d ?x169 ?x136 q r r r q q q)) (* 2 (* d ?x169 ?x136 ?x136 r r r q q q)) ?x2096 (* 2 (* d q q ?x136 r r r q q q)) ?x2040 (* 2 (* d ?x169 q q r r r q q q)) (* 2 (* d ?x136 q q r r r q q q)) (* 2 (* d ?x169 q ?x136 r r r q q q)) ?x2284 ?x2281 ?x2287 ?x2057 ?x2331 ?x2337 ?x2345 ?x2341 ?x2351 ?x2352 ?x2392 ?x2395 ?x2391 ?x2382 ?x2406 ?x2448 ?x2455 ?x2042 ?x2495 ?x2499 ?x2548 ?x2544 ?x2575 ?x2578)))
 (let ((?x2596 (* 16 d)))
 (let ((?x234 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 8) (* d 2)) ?x2113 ?x2596 ?x2507 ?x2506 ?x2503)))
 (let ((?x2616 (* 2 (* ?x2606 r r))))
 (let ((?x1591 (+ ?x2325 ?x1120 ?x1452 ?x2096 ?x1111 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2604 ?x2605 ?x2616)))
 (let (($x1956 (or (not (= (* ?x1591 ?x234) 0)) (not (= (* ?x953 ?x2109) 0)) (not (= ?x1402 0)) (not (= (* ?x1661 ?x961) 0)))))
 (let (($x2484 (and $x469 $x1956)))
 (rewrite (= $x2484 $x1523)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1790 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x389 (* 4 (* d00 r00))))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x2149 (+ 2 ?x136 ?x169 q d)))
 (let ((?x2487 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x2232 (* 4 (* ?x2487 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x2567 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x772 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x2403 (+ 16 ?x417 ?x772 ?x30 ?x2567 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 (+ 4 q)) (* (- 2) (* ?x2487 (+ 4 q))) ?x270 (* (- 4) (* ?x2487 ?x2149)) ?x389)))
 (let ((?x2489 (+ 4 q)))
 (let ((?x1193 (+ (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r) (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r)) (* ?x2487 ?x2149 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x2149 ?x2149 r r)))))
 (let (($x2417 (not (= (* ?x1193 ?x2403) 0))))
 (let ((?x2513 (* (- 8) d)))
 (let ((?x728 (+ (- 16) ?x417 ?x772 ?x30 ?x2513 ?x172 ?x2232 ?x204 ?x220 (* (+ (- 4) q) ?x2487 ?x2487) (* (- 2) (* (+ (- 4) q) ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 2) ?x136 ?x169 q (* (- 1) d)))) ?x389)))
 (let ((?x2592 (* (- 1) d)))
 (let ((?x1726 (+ (- 2) ?x136 ?x169 q ?x2592)))
 (let ((?x2588 (+ (- 4) q)))
 (let ((?x1086 (+ (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1726 ?x1726 ?x1726 r r r) (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1726 ?x1726 ?x1726 r r r)) (* ?x2487 ?x1726 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1726 ?x1726 r r)))))
 (let (($x2139 (not (= (* ?x1086 ?x728) 0))))
 (let ((?x1854 (+ ?x417 ?x772 ?x30 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 q) (* (- 2) (* ?x2487 q)) ?x270 (* (- 4) (* ?x2487 (+ ?x136 ?x169 q))) ?x389)))
 (let ((?x2432 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ ?x136 ?x169 q) (+ ?x136 ?x169 q) r r))))
 (let ((?x2205 (+ ?x136 ?x169 q)))
 (let ((?x631 (+ (* ?x2487 ?x2487 ?x2205 ?x2205 ?x2205 r r r q q q) (* (- 1) (* ?x2205 ?x2205 ?x2205 r r r q q q)) (* ?x2487 ?x2205 r r) ?x2432)))
 (let (($x774 (not (= (* ?x631 ?x1854) 0))))
 (let ((?x1282 (+ (- 32) ?x417 ?x772 ?x30 (* (- 16) d) ?x172 ?x2232 ?x204 ?x220 (* (+ (- 8) q) ?x2487 ?x2487) (* (- 2) (* (+ (- 8) q) ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 4) ?x136 ?x169 q (* (- 2) d)))) ?x389)))
 (let ((?x2606 (* (- 2) d)))
 (let ((?x1142 (+ (- 4) ?x136 ?x169 q ?x2606)))
 (let ((?x2609 (+ (- 8) q)))
 (let ((?x1532 (+ (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x1142 ?x1142 ?x1142 r r r) (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x1142 ?x1142 ?x1142 r r r)) (* ?x2487 ?x1142 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1142 ?x1142 r r)))))
 (let (($x725 (not (= (* ?x1532 ?x1282) 0))))
 (let ((?x2113 (* 4 (* x d))))
 (let ((?x201 (* 8 r)))
 (let ((?x820 (+ ?x201 ?x172 ?x2113 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x389)))
 (let (($x825 (= ?x820 0)))
 (and $x825 (or $x725 $x774 $x2139 $x2417))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x2006 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2503 (* (- 2) (* q d))))
 (let ((?x2506 (* q d d)))
 (let ((?x2505 (* r d)))
 (let ((?x2507 (* (- 4) ?x2505)))
 (let ((?x2567 (* 8 d)))
 (let ((?x2113 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x961 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 4) (* d 2)) ?x2113 ?x2567 ?x2507 ?x2506 ?x2503)))
 (let ((?x2589 (* 2 (* (* (- 1) d) r r))))
 (let ((?x2554 (* r r d d)))
 (let ((?x2587 (* (- 1) ?x2554)))
 (let ((?x2550 (* r r d)))
 (let ((?x2564 (* (- 2) ?x2550)))
 (let ((?x2544 (* 2 (* r r r d))))
 (let ((?x2548 (* q r r d)))
 (let ((?x2499 (* 2 (* (* (- 1) x) r r))))
 (let ((?x2495 (* 2 (* (* 2 r) r r))))
 (let ((?x2040 (* 2 (* q r r))))
 (let ((?x2096 (* (- 1) (* r r x d))))
 (let ((?x2592 (* (- 1) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x1497 (+ (- 2) q ?x136 ?x169 ?x2592)))
 (let ((?x2487 (+ 2 d)))
 (let ((?x2588 (+ (- 4) q)))
 (let ((?x1465 (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1497 ?x1497 ?x1497 r r r)))
 (let ((?x1000 (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1497 ?x1497 ?x1497 r r r))))
 (let ((?x908 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1497 ?x1497 r r))))
 (let ((?x385 (* r r)))
 (let ((?x578 (* (- 4) ?x385)))
 (let ((?x1661 (+ ?x578 ?x908 ?x1000 ?x1465 ?x2096 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2564 ?x2587 ?x2589)))
 (let ((?x2468 (* 2 (* d 4))))
 (let ((?x2513 (* (- 8) d)))
 (let ((?x2496 (* 4 ?x2550)))
 (let ((?x995 (+ 2 q ?x136 ?x169 d)))
 (let ((?x2489 (+ 4 q)))
 (let ((?x843 (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r))))
 (let ((?x1611 (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x995 ?x995 ?x995 r r r)))
 (let ((?x1363 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x995 ?x995 r r))))
 (let ((?x386 (* 4 ?x385)))
 (let ((?x1402 (* (+ ?x386 ?x1363 ?x1611 ?x843 ?x2096 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2496 ?x2554) (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x2113 ?x2513 ?x2468 ?x2507 ?x2506 ?x2503))))
 (let ((?x2109 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x2113 ?x2507 ?x2506 ?x2503)))
 (let ((?x2578 (* (- 3) (* q q q r r r x x x))))
 (let ((?x2575 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ q ?x136 ?x169) (+ q ?x136 ?x169) r r))))
 (let ((?x2042 (* (- 3) (* q q q q q r r r x d d))))
 (let ((?x2455 (* 18 (* q q q r r r r x x))))
 (let ((?x2448 (* (- 36) (* q q q r r r r r x))))
 (let ((?x2406 (* 9 (* q q q q r r r x x))))
 (let ((?x2382 (* 12 (* q q q q r r r r r d d))))
 (let ((?x2389 (* q q q q r r r r r d)))
 (let ((?x2391 (* 24 ?x2389)))
 (let ((?x2395 (* (- 36) (* q q q q r r r r x))))
 (let ((?x2392 (* 36 (* q q q q r r r r r))))
 (let ((?x2352 (* 6 (* q q q q q r r r r d d))))
 (let ((?x2351 (* (- 9) (* q q q q q r r r x))))
 (let ((?x2343 (* q q q q q r r r r d)))
 (let ((?x2341 (* 12 ?x2343)))
 (let ((?x2345 (* 18 (* q q q q q r r r r))))
 (let ((?x2337 (* 4 (* q q q q q q r r r d))))
 (let ((?x2331 (* q q q q q q r r r d d)))
 (let ((?x2057 (* (- 12) (* q q q r r r r r x d d))))
 (let ((?x2287 (* 24 (* q q q r r r r r r))))
 (let ((?x2291 (* q q q r r r r r r d)))
 (let ((?x2281 (* 16 ?x2291)))
 (let ((?x2284 (* 8 (* q q q r r r r r r d d))))
 (let ((?x2181 (* 3 (* q q q q r r r x x d d))))
 (let ((?x2186 (* 6 (* q q q r r r r x x d d))))
 (let ((?x2052 (* (- 1) (* q q q r r r x x x d d))))
 (let ((?x637 (* 3 (* q q q q q q r r r))))
 (let ((?x2178 (* (- 12) (* q q q q r r r r x d d))))
 (let ((?x953 (+ (* 2 (* d q q ?x169 r r r q q q)) (* 2 (* d ?x169 ?x169 q r r r q q q)) (* 2 (* d ?x136 ?x136 q r r r q q q)) (* 2 (* d ?x136 q ?x136 r r r q q q)) (* 2 (* d ?x136 q ?x169 r r r q q q)) (* 2 (* d ?x169 ?x169 ?x136 r r r q q q)) (* 2 (* d ?x136 ?x169 q r r r q q q)) (* (- 24) (* q q q q r r r r x d)) ?x2178 (* 2 (* d q ?x136 ?x169 r r r q q q)) (* 2 (* d ?x169 q ?x169 r r r q q q)) ?x637 (* (- 2) (* q q q r r r x x x d)) (* 2 (* d q ?x169 q r r r q q q)) (* (- 6) (* q q q q q r r r x d)) (* 2 (* d ?x136 ?x136 ?x136 r r r q q q)) (* (- 24) (* q q q r r r r r x d)) (* 12 (* q q q r r r r x x d)) (* 2 (* d ?x136 ?x136 ?x169 r r r q q q)) (* 2 (* d ?x136 ?x169 ?x169 r r r q q q)) ?x2052 (* 2 (* d ?x169 ?x169 ?x169 r r r q q q)) (* 2 (* d q ?x136 ?x136 r r r q q q)) (* 2 (* d ?x136 ?x169 ?x136 r r r q q q)) (* 2 (* d q ?x169 ?x136 r r r q q q)) ?x2186 (* 2 (* d q ?x136 q r r r q q q)) (* 2 (* d ?x169 ?x136 ?x169 r r r q q q)) (* 6 (* q q q q r r r x x d)) (* 2 (* d q ?x169 ?x169 r r r q q q)) ?x2181 (* 2 (* d ?x169 ?x136 q r r r q q q)) (* 2 (* d ?x169 ?x136 ?x136 r r r q q q)) ?x2096 (* 2 (* d q q ?x136 r r r q q q)) ?x2040 (* 2 (* d ?x169 q q r r r q q q)) (* 2 (* d ?x136 q q r r r q q q)) (* 2 (* d ?x169 q ?x136 r r r q q q)) ?x2284 ?x2281 ?x2287 ?x2057 ?x2331 ?x2337 ?x2345 ?x2341 ?x2351 ?x2352 ?x2392 ?x2395 ?x2391 ?x2382 ?x2406 ?x2448 ?x2455 ?x2042 ?x2495 ?x2499 ?x2548 ?x2544 ?x2575 ?x2578)))
 (let ((?x2596 (* 16 d)))
 (let ((?x234 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 8) (* d 2)) ?x2113 ?x2596 ?x2507 ?x2506 ?x2503)))
 (let ((?x2616 (* 2 (* (* (- 2) d) r r))))
 (let ((?x2605 (* (- 2) ?x2554)))
 (let ((?x2604 (* (- 4) ?x2550)))
 (let ((?x2606 (* (- 2) d)))
 (let ((?x332 (+ (- 4) q ?x136 ?x169 ?x2606)))
 (let ((?x1111 (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x332 ?x332 r r))))
 (let ((?x2609 (+ (- 8) q)))
 (let ((?x1452 (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x332 ?x332 ?x332 r r r))))
 (let ((?x1120 (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x332 ?x332 ?x332 r r r)))
 (let ((?x2325 (* (- 8) ?x385)))
 (let ((?x1591 (+ ?x2325 ?x1120 ?x1452 ?x2096 ?x1111 ?x2040 ?x2495 ?x2499 ?x2548 ?x2544 ?x2604 ?x2605 ?x2616)))
 (let (($x1956 (or (not (= (* ?x1591 ?x234) 0)) (not (= (* ?x953 ?x2109) 0)) (not (= ?x1402 0)) (not (= (* ?x1661 ?x961) 0)))))
 (let (($x469 (= ?x2109 0)))
 (let (($x2484 (and $x469 $x1956)))
 (let ((?x389 (* 4 (* d00 r00))))
 (let ((?x2232 (* 4 (* ?x2487 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x772 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x2403 (+ 16 ?x417 ?x772 ?x30 ?x2567 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 ?x2489) (* (- 2) (* ?x2487 ?x2489)) ?x270 (* (- 4) (* ?x2487 (+ 2 ?x136 ?x169 q d))) ?x389)))
 (let ((?x2149 (+ 2 ?x136 ?x169 q d)))
 (let ((?x1193 (+ (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r) (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r)) (* ?x2487 ?x2149 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x2149 ?x2149 r r)))))
 (let (($x2417 (not (= (* ?x1193 ?x2403) 0))))
 (let ((?x728 (+ (- 16) ?x417 ?x772 ?x30 ?x2513 ?x172 ?x2232 ?x204 ?x220 (* ?x2588 ?x2487 ?x2487) (* (- 2) (* ?x2588 ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 2) ?x136 ?x169 q ?x2592))) ?x389)))
 (let ((?x1726 (+ (- 2) ?x136 ?x169 q ?x2592)))
 (let ((?x1086 (+ (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1726 ?x1726 ?x1726 r r r) (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1726 ?x1726 ?x1726 r r r)) (* ?x2487 ?x1726 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1726 ?x1726 r r)))))
 (let (($x2139 (not (= (* ?x1086 ?x728) 0))))
 (let ((?x1854 (+ ?x417 ?x772 ?x30 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 q) (* (- 2) (* ?x2487 q)) ?x270 (* (- 4) (* ?x2487 (+ ?x136 ?x169 q))) ?x389)))
 (let ((?x2432 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ ?x136 ?x169 q) (+ ?x136 ?x169 q) r r))))
 (let ((?x2205 (+ ?x136 ?x169 q)))
 (let ((?x631 (+ (* ?x2487 ?x2487 ?x2205 ?x2205 ?x2205 r r r q q q) (* (- 1) (* ?x2205 ?x2205 ?x2205 r r r q q q)) (* ?x2487 ?x2205 r r) ?x2432)))
 (let (($x774 (not (= (* ?x631 ?x1854) 0))))
 (let ((?x1282 (+ (- 32) ?x417 ?x772 ?x30 (* (- 16) d) ?x172 ?x2232 ?x204 ?x220 (* ?x2609 ?x2487 ?x2487) (* (- 2) (* ?x2609 ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 4) ?x136 ?x169 q ?x2606))) ?x389)))
 (let ((?x1142 (+ (- 4) ?x136 ?x169 q ?x2606)))
 (let ((?x1532 (+ (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x1142 ?x1142 ?x1142 r r r) (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x1142 ?x1142 ?x1142 r r r)) (* ?x2487 ?x1142 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1142 ?x1142 r r)))))
 (let (($x725 (not (= (* ?x1532 ?x1282) 0))))
 (let ((?x820 (+ ?x201 ?x172 ?x2113 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x389)))
 (let (($x825 (= ?x820 0)))
 (let (($x1644 (and $x825 (or $x725 $x774 $x2139 $x2417))))
 (rewrite (= $x1644 $x2484))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2419 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x389 (* 4 (* d00 r00))))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x2149 (+ 2 ?x136 ?x169 q d)))
 (let ((?x2487 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x2232 (* 4 (* ?x2487 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x2567 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x772 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x2403 (+ 16 ?x417 ?x772 ?x30 ?x2567 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 (+ 4 q)) (* (- 2) (* ?x2487 (+ 4 q))) ?x270 (* (- 4) (* ?x2487 ?x2149)) ?x389)))
 (let ((?x2489 (+ 4 q)))
 (let ((?x1193 (+ (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r) (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r)) (* ?x2487 ?x2149 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x2149 ?x2149 r r)))))
 (let (($x2417 (not (= (* ?x1193 ?x2403) 0))))
 (let ((?x2513 (* (- 8) d)))
 (let ((?x728 (+ (- 16) ?x417 ?x772 ?x30 ?x2513 ?x172 ?x2232 ?x204 ?x220 (* (+ (- 4) q) ?x2487 ?x2487) (* (- 2) (* (+ (- 4) q) ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 2) ?x136 ?x169 q (* (- 1) d)))) ?x389)))
 (let ((?x2592 (* (- 1) d)))
 (let ((?x1726 (+ (- 2) ?x136 ?x169 q ?x2592)))
 (let ((?x2588 (+ (- 4) q)))
 (let ((?x1086 (+ (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1726 ?x1726 ?x1726 r r r) (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1726 ?x1726 ?x1726 r r r)) (* ?x2487 ?x1726 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1726 ?x1726 r r)))))
 (let (($x2139 (not (= (* ?x1086 ?x728) 0))))
 (let ((?x1282 (+ (- 32) ?x417 ?x772 ?x30 (* (- 16) d) ?x172 ?x2232 ?x204 ?x220 (* (+ (- 8) q) ?x2487 ?x2487) (* (- 2) (* (+ (- 8) q) ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 4) ?x136 ?x169 q (* (- 2) d)))) ?x389)))
 (let ((?x2606 (* (- 2) d)))
 (let ((?x1142 (+ (- 4) ?x136 ?x169 q ?x2606)))
 (let ((?x2609 (+ (- 8) q)))
 (let ((?x1532 (+ (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x1142 ?x1142 ?x1142 r r r) (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x1142 ?x1142 ?x1142 r r r)) (* ?x2487 ?x1142 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1142 ?x1142 r r)))))
 (let (($x725 (not (= (* ?x1532 ?x1282) 0))))
 (let ((?x1854 (+ ?x417 ?x772 ?x30 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 q) (* (- 2) (* ?x2487 q)) ?x270 (* (- 4) (* ?x2487 (+ ?x136 ?x169 q))) ?x389)))
 (let ((?x2432 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ ?x136 ?x169 q) (+ ?x136 ?x169 q) r r))))
 (let ((?x2205 (+ ?x136 ?x169 q)))
 (let ((?x631 (+ (* ?x2487 ?x2487 ?x2205 ?x2205 ?x2205 r r r q q q) (* (- 1) (* ?x2205 ?x2205 ?x2205 r r r q q q)) (* ?x2487 ?x2205 r r) ?x2432)))
 (let (($x774 (not (= (* ?x631 ?x1854) 0))))
 (let ((?x2113 (* 4 (* x d))))
 (let ((?x201 (* 8 r)))
 (let ((?x820 (+ ?x201 ?x172 ?x2113 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x389)))
 (let (($x825 (= ?x820 0)))
 (and $x825 (or $x774 $x725 $x2139 $x2417))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1386 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x389 (* 4 (* d00 r00))))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x2149 (+ 2 ?x136 ?x169 q d)))
 (let ((?x2487 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x2232 (* 4 (* ?x2487 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x2567 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x772 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x2403 (+ 16 ?x417 ?x772 ?x30 ?x2567 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 (+ 4 q)) (* (- 2) (* ?x2487 (+ 4 q))) ?x270 (* (- 4) (* ?x2487 ?x2149)) ?x389)))
 (let ((?x2489 (+ 4 q)))
 (let ((?x1193 (+ (* ?x2487 ?x2487 ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r) (* (- 1) (* ?x2489 ?x2489 ?x2489 ?x2149 ?x2149 ?x2149 r r r)) (* ?x2487 ?x2149 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x2149 ?x2149 r r)))))
 (let (($x2417 (not (= (* ?x1193 ?x2403) 0))))
 (let ((?x2513 (* (- 8) d)))
 (let ((?x728 (+ (- 16) ?x417 ?x772 ?x30 ?x2513 ?x172 ?x2232 ?x204 ?x220 (* (+ (- 4) q) ?x2487 ?x2487) (* (- 2) (* (+ (- 4) q) ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 2) ?x136 ?x169 q (* (- 1) d)))) ?x389)))
 (let ((?x2592 (* (- 1) d)))
 (let ((?x1726 (+ (- 2) ?x136 ?x169 q ?x2592)))
 (let ((?x2588 (+ (- 4) q)))
 (let ((?x1086 (+ (* ?x2588 ?x2588 ?x2588 ?x2487 ?x2487 ?x1726 ?x1726 ?x1726 r r r) (* (- 1) (* ?x2588 ?x2588 ?x2588 ?x1726 ?x1726 ?x1726 r r r)) (* ?x2487 ?x1726 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1726 ?x1726 r r)))))
 (let (($x2139 (not (= (* ?x1086 ?x728) 0))))
 (let ((?x1854 (+ ?x417 ?x772 ?x30 ?x172 ?x2232 ?x204 ?x220 (* ?x2487 ?x2487 q) (* (- 2) (* ?x2487 q)) ?x270 (* (- 4) (* ?x2487 (+ ?x136 ?x169 q))) ?x389)))
 (let ((?x2432 (* (- 1) (* ?x2487 ?x2487 ?x2487 (+ ?x136 ?x169 q) (+ ?x136 ?x169 q) r r))))
 (let ((?x2205 (+ ?x136 ?x169 q)))
 (let ((?x631 (+ (* ?x2487 ?x2487 ?x2205 ?x2205 ?x2205 r r r q q q) (* (- 1) (* ?x2205 ?x2205 ?x2205 r r r q q q)) (* ?x2487 ?x2205 r r) ?x2432)))
 (let (($x774 (not (= (* ?x631 ?x1854) 0))))
 (let ((?x1282 (+ (- 32) ?x417 ?x772 ?x30 (* (- 16) d) ?x172 ?x2232 ?x204 ?x220 (* (+ (- 8) q) ?x2487 ?x2487) (* (- 2) (* (+ (- 8) q) ?x2487)) ?x270 (* (- 4) (* ?x2487 (+ (- 4) ?x136 ?x169 q (* (- 2) d)))) ?x389)))
 (let ((?x2606 (* (- 2) d)))
 (let ((?x1142 (+ (- 4) ?x136 ?x169 q ?x2606)))
 (let ((?x2609 (+ (- 8) q)))
 (let ((?x1532 (+ (* ?x2609 ?x2609 ?x2609 ?x2487 ?x2487 ?x1142 ?x1142 ?x1142 r r r) (* (- 1) (* ?x2609 ?x2609 ?x2609 ?x1142 ?x1142 ?x1142 r r r)) (* ?x2487 ?x1142 r r) (* (- 1) (* ?x2487 ?x2487 ?x2487 ?x1142 ?x1142 r r)))))
 (let (($x725 (not (= (* ?x1532 ?x1282) 0))))
 (let ((?x2113 (* 4 (* x d))))
 (let ((?x201 (* 8 r)))
 (let ((?x820 (+ ?x201 ?x172 ?x2113 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x389)))
 (let (($x825 (= ?x820 0)))
 (let (($x1644 (and $x825 (or $x725 $x774 $x2139 $x2417))))
 (let (($x2415 (and $x825 (or $x774 $x725 $x2139 $x2417))))
 (rewrite (= $x2415 $x1644))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x165 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x138 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x144 (- q 8)))
 (let ((?x155 (- (* ?x62 ?x62 ?x144 ?x144 ?x144 ?x138 ?x138 ?x138 r r r) (* ?x144 ?x144 ?x144 ?x138 ?x138 ?x138 r r r))))
 (let ((?x159 (- (+ ?x155 (* ?x62 ?x138 r r)) (* ?x62 ?x62 ?x62 ?x138 ?x138 r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x142 (- (+ (- (* 8 ?x138) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x149 (+ (- (+ (- ?x142 ?x41) (* ?x62 ?x62 ?x144)) (* 2 ?x62 ?x144)) ?x49)))
 (let ((?x111 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x128 (- (* ?x62 ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 ?x111 r r r) (* ?x117 ?x117 ?x117 ?x111 ?x111 ?x111 r r r))))
 (let ((?x132 (- (+ ?x128 (* ?x62 ?x111 r r)) (* ?x62 ?x62 ?x62 ?x111 ?x111 r r))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x86 (+ ?x58 q)))
 (let ((?x102 (- (* ?x62 ?x62 q q q ?x86 ?x86 ?x86 r r r) (* q q q ?x86 ?x86 ?x86 r r r))))
 (let ((?x106 (- (+ ?x102 (* ?x62 ?x86 r r)) (* ?x62 ?x62 ?x62 ?x86 ?x86 r r))))
 (let ((?x90 (- (+ (- (* 8 ?x86) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x96 (+ (- (+ (- ?x90 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (- (* ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r r r) (* ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x82 (- (+ ?x78 (* ?x62 ?x59 r r)) (* ?x62 ?x62 ?x62 ?x59 ?x59 r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x163 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x82) 0)) (not (= (* (+ (- ?x96 (* 4 ?x62 ?x86)) ?x53) ?x106) 0)) (not (= (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) ?x132) 0)) (not (= (* (+ (- ?x149 (* 4 ?x62 ?x138)) ?x53) ?x159) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x163))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1384 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x389 (* 4 (* d00 r00))))
 (let ((?x169 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1891 (+ 2 ?x57 ?x169 q d)))
 (let ((?x275 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x266 (* 4 (* ?x275 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 d)))
 (let ((?x1931 (* 8 q)))
 (let ((?x772 (* (- 8) x)))
 (let ((?x2297 (* 16 r)))
 (let ((?x1780 (+ 16 ?x2297 ?x772 ?x1931 ?x201 ?x172 ?x266 ?x204 ?x220 (* ?x275 ?x275 (+ 4 q)) (* (- 2) (* ?x275 (+ 4 q))) ?x270 (* (- 4) (* ?x275 ?x1891)) ?x389)))
 (let ((?x359 (+ 4 q)))
 (let ((?x374 (+ (* ?x275 ?x275 ?x359 ?x359 ?x359 ?x1891 ?x1891 ?x1891 r r r) (* (- 1) (* ?x359 ?x359 ?x359 ?x1891 ?x1891 ?x1891 r r r)) (* ?x275 ?x1891 r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x1891 ?x1891 r r)))))
 (let ((?x462 (* (- 8) d)))
 (let ((?x1908 (+ (- 16) ?x2297 ?x772 ?x1931 ?x462 ?x172 ?x266 ?x204 ?x220 (* (+ (- 4) q) ?x275 ?x275) (* (- 2) (* (+ (- 4) q) ?x275)) ?x270 (* (- 4) (* ?x275 (+ (- 2) ?x57 ?x169 q (* (- 1) d)))) ?x389)))
 (let ((?x1003 (* (- 1) d)))
 (let ((?x2081 (+ (- 2) ?x57 ?x169 q ?x1003)))
 (let ((?x486 (+ (- 4) q)))
 (let ((?x1740 (+ (* ?x486 ?x486 ?x486 ?x275 ?x275 ?x2081 ?x2081 ?x2081 r r r) (* (- 1) (* ?x486 ?x486 ?x486 ?x2081 ?x2081 ?x2081 r r r)) (* ?x275 ?x2081 r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x2081 ?x2081 r r)))))
 (let ((?x1863 (+ (- 32) ?x2297 ?x772 ?x1931 (* (- 16) d) ?x172 ?x266 ?x204 ?x220 (* (+ (- 8) q) ?x275 ?x275) (* (- 2) (* (+ (- 8) q) ?x275)) ?x270 (* (- 4) (* ?x275 (+ (- 4) ?x57 ?x169 q (* (- 2) d)))) ?x389)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x2127 (+ (- 4) ?x57 ?x169 q ?x2438)))
 (let ((?x2092 (+ (- 8) q)))
 (let ((?x365 (+ (* ?x2092 ?x2092 ?x2092 ?x275 ?x275 ?x2127 ?x2127 ?x2127 r r r) (* (- 1) (* ?x2092 ?x2092 ?x2092 ?x2127 ?x2127 ?x2127 r r r)) (* ?x275 ?x2127 r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x2127 ?x2127 r r)))))
 (let ((?x2129 (+ ?x2297 ?x772 ?x1931 ?x172 ?x266 ?x204 ?x220 (* ?x275 ?x275 q) (* (- 2) (* ?x275 q)) ?x270 (* (- 4) (* ?x275 (+ ?x57 ?x169 q))) ?x389)))
 (let ((?x2209 (* (- 1) (* ?x275 ?x275 ?x275 (+ ?x57 ?x169 q) (+ ?x57 ?x169 q) r r))))
 (let ((?x2429 (+ ?x57 ?x169 q)))
 (let ((?x2206 (+ (* ?x275 ?x275 ?x2429 ?x2429 ?x2429 r r r q q q) (* (- 1) (* ?x2429 ?x2429 ?x2429 r r r q q q)) (* ?x275 ?x2429 r r) ?x2209)))
 (let (($x826 (or (not (= (* ?x2206 ?x2129) 0)) (not (= (* ?x365 ?x1863) 0)) (not (= (* ?x1740 ?x1908) 0)) (not (= (* ?x374 ?x1780) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x463 (+ ?x30 ?x172 (* 4 (* x d)) ?x204 ?x220 ?x44 (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x389)))
 (and (= ?x463 0) $x826)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x284 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x389 (* 4 (* d00 r00))))
 (let ((?x169 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1891 (+ 2 ?x57 ?x169 q d)))
 (let ((?x275 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x266 (* 4 (* ?x275 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 d)))
 (let ((?x1931 (* 8 q)))
 (let ((?x772 (* (- 8) x)))
 (let ((?x2297 (* 16 r)))
 (let ((?x1780 (+ 16 ?x2297 ?x772 ?x1931 ?x201 ?x172 ?x266 ?x204 ?x220 (* ?x275 ?x275 (+ 4 q)) (* (- 2) (* ?x275 (+ 4 q))) ?x270 (* (- 4) (* ?x275 ?x1891)) ?x389)))
 (let ((?x359 (+ 4 q)))
 (let ((?x374 (+ (* ?x275 ?x275 ?x359 ?x359 ?x359 ?x1891 ?x1891 ?x1891 r r r) (* (- 1) (* ?x359 ?x359 ?x359 ?x1891 ?x1891 ?x1891 r r r)) (* ?x275 ?x1891 r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x1891 ?x1891 r r)))))
 (let ((?x462 (* (- 8) d)))
 (let ((?x1908 (+ (- 16) ?x2297 ?x772 ?x1931 ?x462 ?x172 ?x266 ?x204 ?x220 (* (+ (- 4) q) ?x275 ?x275) (* (- 2) (* (+ (- 4) q) ?x275)) ?x270 (* (- 4) (* ?x275 (+ (- 2) ?x57 ?x169 q (* (- 1) d)))) ?x389)))
 (let ((?x1003 (* (- 1) d)))
 (let ((?x2081 (+ (- 2) ?x57 ?x169 q ?x1003)))
 (let ((?x486 (+ (- 4) q)))
 (let ((?x1740 (+ (* ?x486 ?x486 ?x486 ?x275 ?x275 ?x2081 ?x2081 ?x2081 r r r) (* (- 1) (* ?x486 ?x486 ?x486 ?x2081 ?x2081 ?x2081 r r r)) (* ?x275 ?x2081 r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x2081 ?x2081 r r)))))
 (let ((?x1863 (+ (- 32) ?x2297 ?x772 ?x1931 (* (- 16) d) ?x172 ?x266 ?x204 ?x220 (* (+ (- 8) q) ?x275 ?x275) (* (- 2) (* (+ (- 8) q) ?x275)) ?x270 (* (- 4) (* ?x275 (+ (- 4) ?x57 ?x169 q (* (- 2) d)))) ?x389)))
 (let ((?x2438 (* (- 2) d)))
 (let ((?x2127 (+ (- 4) ?x57 ?x169 q ?x2438)))
 (let ((?x2092 (+ (- 8) q)))
 (let ((?x365 (+ (* ?x2092 ?x2092 ?x2092 ?x275 ?x275 ?x2127 ?x2127 ?x2127 r r r) (* (- 1) (* ?x2092 ?x2092 ?x2092 ?x2127 ?x2127 ?x2127 r r r)) (* ?x275 ?x2127 r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x2127 ?x2127 r r)))))
 (let ((?x2129 (+ ?x2297 ?x772 ?x1931 ?x172 ?x266 ?x204 ?x220 (* ?x275 ?x275 q) (* (- 2) (* ?x275 q)) ?x270 (* (- 4) (* ?x275 (+ ?x57 ?x169 q))) ?x389)))
 (let ((?x2209 (* (- 1) (* ?x275 ?x275 ?x275 (+ ?x57 ?x169 q) (+ ?x57 ?x169 q) r r))))
 (let ((?x2429 (+ ?x57 ?x169 q)))
 (let ((?x2206 (+ (* ?x275 ?x275 ?x2429 ?x2429 ?x2429 r r r q q q) (* (- 1) (* ?x2429 ?x2429 ?x2429 r r r q q q)) (* ?x275 ?x2429 r r) ?x2209)))
 (let (($x826 (or (not (= (* ?x2206 ?x2129) 0)) (not (= (* ?x365 ?x1863) 0)) (not (= (* ?x1740 ?x1908) 0)) (not (= (* ?x374 ?x1780) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x463 (+ ?x30 ?x172 (* 4 (* x d)) ?x204 ?x220 ?x44 (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x389)))
 (let (($x2435 (and (= ?x463 0) $x826)))
 (let ((?x138 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x144 (- q 8)))
 (let ((?x155 (- (* ?x62 ?x62 ?x144 ?x144 ?x144 ?x138 ?x138 ?x138 r r r) (* ?x144 ?x144 ?x144 ?x138 ?x138 ?x138 r r r))))
 (let ((?x159 (- (+ ?x155 (* ?x62 ?x138 r r)) (* ?x62 ?x62 ?x62 ?x138 ?x138 r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x142 (- (+ (- (* 8 ?x138) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x149 (+ (- (+ (- ?x142 ?x41) (* ?x62 ?x62 ?x144)) (* 2 ?x62 ?x144)) ?x49)))
 (let ((?x111 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x128 (- (* ?x62 ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 ?x111 r r r) (* ?x117 ?x117 ?x117 ?x111 ?x111 ?x111 r r r))))
 (let ((?x132 (- (+ ?x128 (* ?x62 ?x111 r r)) (* ?x62 ?x62 ?x62 ?x111 ?x111 r r))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x86 (+ ?x58 q)))
 (let ((?x102 (- (* ?x62 ?x62 q q q ?x86 ?x86 ?x86 r r r) (* q q q ?x86 ?x86 ?x86 r r r))))
 (let ((?x106 (- (+ ?x102 (* ?x62 ?x86 r r)) (* ?x62 ?x62 ?x62 ?x86 ?x86 r r))))
 (let ((?x90 (- (+ (- (* 8 ?x86) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x96 (+ (- (+ (- ?x90 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (- (* ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r r r) (* ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x82 (- (+ ?x78 (* ?x62 ?x59 r r)) (* ?x62 ?x62 ?x62 ?x59 ?x59 r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x163 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x82) 0)) (not (= (* (+ (- ?x96 (* 4 ?x62 ?x86)) ?x53) ?x106) 0)) (not (= (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) ?x132) 0)) (not (= (* (+ (- ?x149 (* 4 ?x62 ?x138)) ?x53) ?x159) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x164 (and (= ?x54 0) $x163)))
 (rewrite (= $x164 $x2435)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x702 (trans (quant-intro (proof-bind ?x284) (= $x165 $x1384)) (elim-unused (= $x1384 $x2419)) (= $x165 $x2419))))
 (let ((@x27 (asserted $x165)))
 (let ((@x1416 (mp (mp @x27 @x702 $x2419) (quant-intro (proof-bind ?x1386) (= $x2419 $x1790)) $x1790)))
 (let ((@x575 (mp (mp @x1416 (rewrite (= $x1790 $x1790)) $x1790) (quant-intro (proof-bind ?x2006) (= $x1790 $x776)) $x776)))
 (let ((@x1026 (mp~ (mp @x575 (quant-intro (proof-bind ?x1009) (= $x776 $x1237)) $x1237) (sk (~ $x1237 $x1610)) $x1610)))
 (let ((@x539 (mp @x1026 (rewrite (= $x1610 $x754)) $x754)))
 (let ((@x2288 (and-elim @x539 $x1776)))
 (let ((@x2378 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1776) $x279)) @x2288 $x279)))
 (let (($x1116 (<= ?x544 0)))
 (let ((@x1986 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1776) $x1116)) @x2288 $x1116)))
 (let (($x1149 (not (<= ?x2473 0))))
 (let (($x1333 (<= ?x1666 0)))
 (let (($x230 (>= ?x1666 0)))
 (let ((@x1457 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x757 (not $x1333) (not $x230))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x230)) @x1986 @x2378 false) $x230) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1333)) @x1986 @x2378 false) $x1333) $x757)))
 (let (($x611 (>= ?x877 0)))
 (let (($x778 (<= ?x877 0)))
 (let ((@x1067 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1158 (not $x778) (not $x611))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x778)) @x1986 @x2378 false) $x778) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x611)) @x1986 @x2378 false) $x611) $x1158)))
 (let (($x325 (>= ?x1873 0)))
 (let (($x571 (<= ?x1873 0)))
 (let ((@x1022 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x620 (not $x571) (not $x325))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x571)) @x1986 @x2378 false) $x571) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x325)) @x1986 @x2378 false) $x325) $x620)))
 (let ((@x1664 (unit-resolution (unit-resolution (and-elim @x539 $x194) @x1022 @x1067 (or $x184 $x2418)) @x1457 $x2418)))
 (let (($x2146 (>= ?x2473 0)))
 (let ((@x1389 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1160 $x1149 (not $x2146))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2146)) @x1986 @x2378 false) $x2146) @x1664 $x1149)))
 ((_ th-lemma arith farkas 1 1 1) @x1389 @x1986 @x2378 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1280
 :arith-nonlinear-bounds    16
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 104
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.94
 :memory                    3.33
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1724921
 :num-checks                1
 :propagations              36
 :rlimit-count              13156
 :time                      0.02
 :total-time                0.03)
