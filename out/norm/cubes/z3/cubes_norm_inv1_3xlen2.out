unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x415 (+ m!1 (* (- 6) n!0))))
 (let (($x424 (<= ?x415 6)))
 (let (($x722 (= ?x415 6)))
 (let ((?x948 (+ c!3 k!2)))
 (let ((?x244 (+ m!1 k!2)))
 (let ((?x734 (+ 6 m!1)))
 (let ((?x724 (+ 1 n!0)))
 (let ((?x1072 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948)))
 (let ((?x1059 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948)))
 (let ((?x1022 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948)))
 (let ((?x966 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948)))
 (let ((?x798 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x787 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x740 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x948 ?x948)))
 (let ((?x696 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x692 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x678 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948)))
 (let ((?x663 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948)))
 (let ((?x658 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x948 ?x948)))
 (let ((?x620 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948)))
 (let ((?x587 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x567 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x948 ?x948)))
 (let ((?x551 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948)))
 (let ((?x442 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x376 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x243 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x244 ?x948)))
 (let ((?x204 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x185 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x154 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x143 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x244 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x121 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x244 ?x244 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x534 (+ ?x121 (* 6 ?x143) ?x154 (* (- 6) ?x185) (* (- 6) ?x204) (* (- 1) ?x243) (* 6 ?x376) (* (- 6) ?x442) (* (- 6) ?x551) (* (- 1) ?x567) (* (- 1) ?x587) ?x620 (* 6 ?x658) (* 6 ?x663) (* (- 6) ?x678) (* 6 ?x692) (* (- 6) ?x696) (* 6 ?x740) (* (- 1) ?x787) (* 6 ?x798) (* (- 6) ?x966) (* (- 6) ?x1022) (* 6 ?x1059) ?x1072)))
 (let (($x626 (= ?x534 0)))
 (let (($x661 (not $x626)))
 (let (($x136 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1)))
 (let (($x947 (= (+ (* 3 c!3) k!2 (* (- 1) (* k!2 n!0)) (* (- 2) n!0)) 1)))
 (let ((?x334 (* (- 1) (* k!2 k!2))))
 (let ((?x272 (* (- 9) n!0)))
 (let ((?x378 (* 9 (* c!3 n!0))))
 (let ((?x271 (* 5 k!2)))
 (let ((?x884 (* 18 c!3)))
 (let (($x655 (and $x722 (= (+ ?x884 ?x271 ?x378 ?x272 ?x334) 4) $x947 $x136 $x661)))
 (let ((?x940 (+ k!2 m!1)))
 (let ((?x586 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x590 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x727 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948)))
 (let ((?x515 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x948 ?x948)))
 (let ((?x1062 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948)))
 (let ((?x1017 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x1018 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x638 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x565 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948)))
 (let ((?x309 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x948 ?x948)))
 (let ((?x306 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x304 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x948 ?x948)))
 (let ((?x300 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948)))
 (let ((?x125 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948)))
 (let ((?x161 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x162 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x711 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x311 (* ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948 ?x948)))
 (let ((?x964 (* ?x724 ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948)))
 (let ((?x1070 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x756 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x888 (* ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x948 ?x948 ?x948 ?x948 ?x948)))
 (let ((?x508 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948 ?x948)))
 (let ((?x900 (* ?x724 ?x724 ?x724 ?x724 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x734 ?x940 ?x940 ?x940 ?x940 ?x940 ?x948)))
 (let ((?x315 (+ ?x900 (* 6 ?x508) (* (- 1) ?x888) (* 6 ?x756) (* 6 ?x1070) (* 6 ?x964) (* 6 ?x311) (* (- 1) ?x711) (* 6 ?x162) (* 6 ?x161) (* (- 1) ?x125) (* 6 ?x300) (* (- 6) ?x304) (* (- 6) ?x306) ?x309 (* (- 6) ?x565) (* (- 6) ?x638) ?x1018 ?x1017 (* (- 6) ?x1062) (* (- 6) ?x515) (* (- 1) ?x727) (* (- 6) ?x590) (* (- 6) ?x586))))
 (let (($x385 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x956 (and $x722 (= (+ ?x884 ?x271 ?x272 ?x334 ?x378) 4) $x385 $x136 (not (= ?x315 0)))))
 (let (($x421 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x774 (+ ?x129 ?x153 ?x183 ?x223 ?x231 ?x131 ?x259 ?x250 ?x276 ?x284 ?x321 ?x245 ?x377 ?x342 ?x500 ?x641 ?x942 ?x603 ?x748 ?x593 ?x606 ?x564 ?x733 ?x1071)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 $x235 $x287 $x325 (not (= ?x774 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x618 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x355 (+ ?x320 (* (- 6) ?x332) (* (- 6) ?x258) ?x260 (* (- 6) ?x275) (* (- 6) ?x283) ?x166 (* (- 6) ?x222) (* (- 6) ?x230) (* (- 6) ?x242) (* (- 1) ?x129) (* (- 6) ?x152) ?x823 (* 6 ?x407) (* 6 ?x537) (* 6 ?x878) (* (- 1) ?x603) (* 6 ?x1008) (* 6 ?x817) (* 6 ?x358) (* (- 1) ?x500) (* 6 ?x516) (* (- 1) ?x748) (* 6 ?x764))))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x490 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x490 $x302 (not (= ?x355 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x172 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x774 (+ ?x129 ?x153 ?x183 ?x223 ?x231 ?x131 ?x259 ?x250 ?x276 ?x284 ?x321 ?x245 ?x377 ?x342 ?x500 ?x641 ?x942 ?x603 ?x748 ?x593 ?x606 ?x564 ?x733 ?x1071)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x902 (and $x151 $x235 $x287 $x325 (not (= ?x774 0)))))
 (let ((?x355 (+ ?x320 (* (- 6) ?x332) (* (- 6) ?x258) ?x260 (* (- 6) ?x275) (* (- 6) ?x283) ?x166 (* (- 6) ?x222) (* (- 6) ?x230) (* (- 6) ?x242) (* (- 1) ?x129) (* (- 6) ?x152) ?x823 (* 6 ?x407) (* 6 ?x537) (* 6 ?x878) (* (- 1) ?x603) (* 6 ?x1008) (* 6 ?x817) (* 6 ?x358) (* (- 1) ?x500) (* 6 ?x516) (* (- 1) ?x748) (* 6 ?x764))))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x490 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x693 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x490 $x302 (not (= ?x355 0)))))
 (rewrite (= $x693 $x902))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x269 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x1021 (+ ?x321 ?x245 ?x259 ?x250 ?x276 ?x284 ?x183 ?x223 ?x231 ?x131 ?x129 ?x153 ?x564 ?x342 ?x942 ?x733 ?x603 ?x1071 ?x606 ?x377 ?x500 ?x641 ?x748 ?x593)))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x662 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x623 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= ?x623 (- 4)) $x662 $x302 (not (= ?x1021 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x788 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x355 (+ ?x320 (* (- 6) ?x332) (* (- 6) ?x258) ?x260 (* (- 6) ?x275) (* (- 6) ?x283) ?x166 (* (- 6) ?x222) (* (- 6) ?x230) (* (- 6) ?x242) (* (- 1) ?x129) (* (- 6) ?x152) ?x823 (* 6 ?x407) (* 6 ?x537) (* 6 ?x878) (* (- 1) ?x603) (* 6 ?x1008) (* 6 ?x817) (* 6 ?x358) (* (- 1) ?x500) (* 6 ?x516) (* (- 1) ?x748) (* 6 ?x764))))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x490 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x693 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x490 $x302 (not (= ?x355 0)))))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x1021 (+ ?x321 ?x245 ?x259 ?x250 ?x276 ?x284 ?x183 ?x223 ?x231 ?x131 ?x129 ?x153 ?x564 ?x342 ?x942 ?x733 ?x603 ?x1071 ?x606 ?x377 ?x500 ?x641 ?x748 ?x593)))
 (let (($x662 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x623 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x331 (and $x151 (= ?x623 (- 4)) $x662 $x302 (not (= ?x1021 0)))))
 (rewrite (= $x331 $x693))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x118 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x112 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x102 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x100 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x74 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ ?x73 ?x74 ?x75) ?x77) ?x79 ?x80) ?x82) ?x84 ?x85 ?x86 ?x87 ?x88)))
 (let ((?x104 (- (- (+ (- (- (- (- ?x89 ?x90) ?x91) ?x92) ?x93) ?x98) ?x100) ?x101)))
 (let (($x116 (or (not (= (- (+ (- (+ (- ?x104 ?x102) ?x106) ?x108) ?x110) ?x112) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x116))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x256 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x764 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x593 (* (- 6) ?x764)))
 (let ((?x748 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x516 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x641 (* (- 6) ?x516)))
 (let ((?x500 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x358 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x377 (* (- 6) ?x358)))
 (let ((?x817 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x606 (* (- 6) ?x817)))
 (let ((?x1008 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1071 (* (- 6) ?x1008)))
 (let ((?x603 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x878 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x733 (* (- 6) ?x878)))
 (let ((?x537 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x942 (* (- 6) ?x537)))
 (let ((?x407 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* (- 6) ?x407)))
 (let ((?x823 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x564 (* (- 1) ?x823)))
 (let ((?x152 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x153 (* 6 ?x152)))
 (let ((?x129 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x242 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x131 (* 6 ?x242)))
 (let ((?x230 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x231 (* 6 ?x230)))
 (let ((?x222 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x223 (* 6 ?x222)))
 (let ((?x166 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x183 (* (- 1) ?x166)))
 (let ((?x283 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x284 (* 6 ?x283)))
 (let ((?x275 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x276 (* 6 ?x275)))
 (let ((?x260 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x250 (* (- 1) ?x260)))
 (let ((?x258 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x259 (* 6 ?x258)))
 (let ((?x332 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x245 (* 6 ?x332)))
 (let ((?x320 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x321 (* (- 1) ?x320)))
 (let ((?x1021 (+ ?x321 ?x245 ?x259 ?x250 ?x276 ?x284 ?x183 ?x223 ?x231 ?x131 ?x129 ?x153 ?x564 ?x342 ?x942 ?x733 ?x603 ?x1071 ?x606 ?x377 ?x500 ?x641 ?x748 ?x593)))
 (let (($x302 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x662 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x623 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x331 (and $x151 (= ?x623 (- 4)) $x662 $x302 (not (= ?x1021 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x112 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 6 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x102 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x100 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 6 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 6 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* 6 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x74 (* 6 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ ?x73 ?x74 ?x75) ?x77) ?x79 ?x80) ?x82) ?x84 ?x85 ?x86 ?x87 ?x88)))
 (let ((?x104 (- (- (+ (- (- (- (- ?x89 ?x90) ?x91) ?x92) ?x93) ?x98) ?x100) ?x101)))
 (let (($x116 (or (not (= (- (+ (- (+ (- ?x104 ?x102) ?x106) ?x108) ?x110) ?x112) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x117 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x116)))
 (rewrite (= $x117 $x331))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x119 (asserted $x118)))
 (let ((@x184 (mp (mp @x119 (quant-intro (proof-bind ?x256) (= $x118 $x269)) $x269) (rewrite (= $x269 $x269)) $x269)))
 (let ((@x353 (mp (mp @x184 (quant-intro (proof-bind ?x788) (= $x269 $x618)) $x618) (quant-intro (proof-bind ?x172) (= $x618 $x421)) $x421)))
 (let ((@x135 (mp (mp~ @x353 (sk (~ $x421 $x956)) $x956) (rewrite (= $x956 $x655)) $x655)))
 (let ((@x142 (and-elim @x135 $x722)))
 (let ((@x186 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x722) $x424)) @x142 $x424)))
 (let (($x660 (>= ?x415 6)))
 (let ((@x433 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x722) $x660)) @x142 $x660)))
 (let (($x347 (not (<= ?x534 0))))
 (let (($x126 (>= ?x534 0)))
 (let ((@x893 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x626 $x347 (not $x126))) (and-elim @x135 $x661) (or $x347 (not $x126)))))
 (let ((@x179 (unit-resolution @x893 (lemma ((_ th-lemma arith) (hypothesis (not $x126)) @x433 @x186 false) $x126) $x347)))
 ((_ th-lemma arith) @x179 @x433 @x186 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        15
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             341
 :arith-nonlinear-bounds    9
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 53
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.97
 :memory                    3.47
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1390913
 :num-checks                1
 :propagations              11
 :rlimit-count              6219
 :time                      0.03
 :total-time                0.05)
