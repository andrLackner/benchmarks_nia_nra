unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(declare-fun s!1 () Int)
(proof
(let ((?x3399 (* 3 r!2)))
 (let ((?x2691 (* 6 x!0)))
 (let ((?x2826 (* (- 3) s!1)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x429 (* s00 r00)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3219 (+ ?x44 ?x503 ?x504 ?x507 ?x473 (* 2 (* s!1 r!2)) ?x2826 ?x2691 (* 4 (* s00 r!2)) ?x3399 (* (- 12) (* r00 r00 r!2)))))
 (let (($x3291 (<= ?x3219 0)))
 (let (($x3196 (= ?x3219 0)))
 (let ((?x3145 (* 6 r!2)))
 (let ((?x2017 (+ 3 s!1 ?x3145)))
 (let ((?x1905 (* (- 1) s!1)))
 (let ((?x3144 (+ ?x1905 x!0)))
 (let ((?x3143 (+ 1 r!2)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x594 (* s00 s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x525 (* r00 x00)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x2050 (+ (* 12 s00) (* (- 9) r00) (* (- 18) x00) (* (- 18) (* r00 r00)) (* (- 18) (* ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3144 ?x2017)) (* 3 ?x429) (* (- 72) (* x00 r!2 r!2 r!2)) (* 18 (* r00 x!0)) (* (- 6) (* r00 r00 s!1)) ?x539 ?x607 ?x651 (* 9 (* r00 r!2 r!2)) (* (- 297) (* r!2 r!2)) (* 3 (* s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* (- 54) (* r00 x00 r!2 r!2)) (* (- 9) (* s00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* 99 (* s00 r!2 r!2)) (* (- 6) (* r00 r00 s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* (- 6) (* s00 r00 r!2 r!2 r!2 r!2)) (* (- 3) (* r00 s!1 r!2 r!2 r!2)) (* 18 (* s00 r00 r00 r!2)) (* 18 (* s00 r00 r00 r!2 r!2)) (* 6 (* s00 r00 r00 r!2 r!2 r!2)) (* 18 (* r00 x00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* 2 (* ?x3143 ?x3143 ?x3143 ?x2017 ?x2017)) (* (- 6) (* r00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017 ?x2017)) (* (- 3) (* ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017 ?x2017)) (* (- 9) (* r00 s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* 6 (* r00 s!1 r!2 r!2 r!2 r!2)) (* (- 45) (* r00 s!1 r!2 r!2)) (* (- 2) (* s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017 ?x2017)) (* 54 (* r00 x!0 r!2 r!2)) (* (- 18) (* x00 r!2 r!2 r!2 r!2)) (* 99 (* r00 r!2 r!2 r!2)) (* 75 (* s00 r!2 r!2 r!2)) (* 6 (* r00 s00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* 9 (* ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017 ?x2017)) (* 6 (* s00 s!1 r!2)) (* (- 12) (* s00 s00 r!2)) (* (- 2) (* ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017 ?x2017 ?x2017)) (* (- 18) (* r00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3144 ?x2017)) (* (- 99) (* s!1 r!2)) (* (- 36) (* r00 r00 r!2 r!2 r!2 r!2)) (* 21 (* s00 r!2 r!2 r!2 r!2)) (* 9 (* r00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017 ?x2017)) (* (- 54) (* r!2 r!2 r!2 r!2 r!2)) (* 2 (* s00 s!1 r!2 r!2 r!2)) (* 6 (* s00 s!1 r!2 r!2)) (* (- 18) (* r00 x00 r!2 r!2 r!2)) (* 108 (* r00 r!2 r!2 r!2 r!2)) (* (- 369) (* r!2 r!2 r!2)) (* (- 108) (* x00 r!2 r!2)) (* 18 (* x00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* 36 (* r00 r!2 r!2 r!2 r!2 r!2)) (* (- 9) (* s00 r00 r!2 r!2)) (* (- 15) (* s00 r00 r!2 r!2 r!2)) (* 72 (* x!0 r!2 r!2 r!2)) (* 108 (* x!0 r!2 r!2)) (* (- 6) (* r00 r00 s!1 r!2 r!2 r!2)) (* (- 27) (* r00 r!2)) (* 4 (* s00 s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017)) (* (- 24) s!1) (* 18 (* r00 x!0 r!2 r!2 r!2)) (* 18 (* x!0 r!2 r!2 r!2 r!2)) (* (- 105) (* s!1 r!2 r!2 r!2)) (* (- 54) (* r00 x00 r!2)) (* (- 153) (* s!1 r!2 r!2)) (* (- 27) (* s!1 r!2 r!2 r!2 r!2)) (* 18 x!0) (* 57 (* s00 r!2)) (* (- 18) (* r00 r00 s!1 r!2)) (* (- 117) r!2) (* (- 57) (* r00 s!1 r!2)) (* 72 (* x!0 r!2)) (* (- 72) (* x00 r!2)) (* (- 18) (* r00 r00 s!1 r!2 r!2)) (* (- 162) (* r00 r00 r!2 r!2)) (* (- 4) (* s00 s00 r!2 r!2 r!2)) (* 2 (* s00 s!1)) (* (- 21) (* r00 s!1)) (* 6 (* r00 r00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x2017 ?x2017)) (* (- 225) (* r!2 r!2 r!2 r!2)) (* (- 90) (* r00 r00 r!2)) (* (- 12) (* s00 s00 r!2 r!2)) (* 3 (* s00 r00 r!2)) (* (- 126) (* r00 r00 r!2 r!2 r!2)) (* 54 (* r00 x!0 r!2)))))
 (let (($x2055 (= ?x2050 18)))
 (let (($x2060 (not $x2055)))
 (let ((?x546 (* (- 9) s!1)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1823 (* 108 ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1587 (* 16 ?x1187)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x3232 (* (- 432) ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x2213 (* (- 108) ?x808)))
 (let ((?x528 (* (- 36) ?x650)))
 (let ((?x1653 (* 51 ?x594)))
 (let ((?x3418 (* 108 ?x525)))
 (let ((?x495 (* r00 r00 s!1)))
 (let ((?x1411 (* 36 ?x495)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3297 (+ ?x137 (* 36 (* r00 r00 s!1 s!1)) (* (- 54) ?x429) (* (- 108) (* r00 x!0)) (* 108 (* s00 x!0)) ?x1411 (* 216 (* s00 r00 x00)) ?x3418 ?x1653 ?x528 (* (- 216) (* r00 r00 r00 s!1)) (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x2213 (* (- 216) (* x00 x!0)) ?x3232 (* 216 (* s00 r00 r00 r00)) ?x1587 ?x1823 (* 108 (* x!0 x!0)) (* (- 108) (* s!1 x!0)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* 15 (* s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) ?x546 (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)))))
 (let (($x3249 (= ?x3297 0)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x2714 (* 36 ?x880)))
 (let ((?x2512 (* (- 6) ?x808)))
 (let ((?x2717 (* 15 ?x594)))
 (let ((?x3701 (* 54 ?x525)))
 (let ((?x600 (+ ?x137 (* (- 36) (* r00 r00 x!0)) (* (- 24) ?x429) (* (- 54) (* r00 x!0)) (* 6 (* s00 x!0)) ?x1411 ?x3701 ?x2717 ?x528 (* 2 (* s00 s00 r00)) ?x2512 ?x2714 (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* 24 (* s!1 r!2)) (* (- 6) (* s!1 x!0)) (* 6 (* x00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 2 (* s00 r00 s!1)) (* (- 3) (* s!1 s!1)) ?x546 (* 36 (* r00 x00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* (- 24) (* s00 r!2)) (* (- 54) (* x!0 r!2)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 x!0 r!2)))))
 (let (($x605 (= ?x600 0)))
 (let ((?x2372 (* (- 6) ?x650)))
 (let ((?x595 (* 4 ?x594)))
 (let ((?x526 (* 18 ?x525)))
 (let ((?x1473 (* (- 9) ?x429)))
 (let ((?x3477 (+ ?x44 ?x1473 (* (- 18) (* r00 x!0)) (* 6 ?x495) ?x526 ?x595 ?x2372 (* 9 (* s!1 r!2)) (* (- 2) (* s!1 s!1)) ?x2826 (* (- 9) (* s00 r!2)) (* (- 6) (* r00 s!1 r!2)) (* (- 18) (* x!0 r!2)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)))))
 (let (($x3120 (= ?x3477 0)))
 (let ((?x304 (* r00 r00)))
 (let ((?x3459 (* (- 3) ?x304)))
 (let ((?x2972 (+ s00 ?x3459 (* 3 (* r!2 r!2)) ?x1905)))
 (let (($x3180 (= ?x2972 0)))
 (let (($x3240 (and $x3180 $x3196 $x3120 $x605 $x3249 $x2060)))
 (let ((?x3146 (+ 3 ?x3145 s!1)))
 (let ((?x2873 (* (- 3) ?x429)))
 (let ((?x1692 (* 18 ?x304)))
 (let ((?x3907 (* 18 x00)))
 (let ((?x2721 (* 9 r00)))
 (let ((?x2519 (* (- 12) s00)))
 (let ((?x359 (+ (* 117 r!2) (* 24 s!1) (* (- 18) x!0) ?x2519 ?x2721 ?x3907 (* 297 (* r!2 r!2)) (* 18 (* r!2 s!1 r00 r00)) ?x1692 (* 18 (* r!2 r!2 s!1 r00 r00)) (* 162 (* r!2 r!2 r00 r00)) (* 99 (* r!2 s!1)) (* 90 (* r!2 r00 r00)) (* 126 (* r!2 r!2 r!2 r00 r00)) (* (- 57) (* r!2 s00)) ?x2873 (* 36 (* r!2 r!2 r!2 r!2 r00 r00)) ?x526 (* (- 72) (* r!2 x!0)) (* 57 (* r!2 s!1 r00)) (* (- 54) (* r!2 x!0 r00)) (* 6 (* s!1 r00 r00)) ?x595 (* (- 18) (* x!0 r00)) ?x2372 (* 72 (* r!2 x00)) (* (- 2) (* s!1 s00)) (* 21 (* s!1 r00)) (* (- 3) (* r!2 s00 r00)) (* 6 (* r!2 r!2 r!2 r!2 s00 r00)) (* 12 (* r!2 s00 s00)) (* (- 6) (* r!2 s!1 s00)) (* 54 (* r!2 r00 x00)) (* 18 (* ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3144 ?x3146)) (* (- 9) (* ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146 ?x3146)) (* (- 4) (* s00 s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* (- 99) (* r!2 r!2 s00)) (* (- 75) (* r!2 r!2 r!2 s00)) (* (- 6) (* r00 s00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* 6 (* r00 r00 s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* 6 (* r!2 r!2 r!2 s!1 r00 r00)) (* 9 (* r!2 r!2 s00 r00)) (* 15 (* r!2 r!2 r!2 s00 r00)) (* 27 (* r!2 r!2 r!2 r!2 s!1)) (* 153 (* r!2 r!2 s!1)) (* 105 (* r!2 r!2 r!2 s!1)) (* (- 18) (* r!2 r!2 r!2 r!2 x!0)) (* (- 72) (* r!2 r!2 r!2 x!0)) (* (- 108) (* r!2 r!2 x!0)) (* (- 6) (* r00 r00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146 ?x3146)) (* 9 (* s00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* (- 6) (* r!2 r!2 s!1 s00)) (* (- 2) (* r!2 r!2 r!2 s!1 s00)) (* 54 (* r!2 r!2 r00 x00)) (* 18 (* r!2 r!2 r!2 r00 x00)) (* 2 (* ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146 ?x3146 ?x3146)) (* (- 21) (* r!2 r!2 r!2 r!2 s00)) (* 54 (* r!2 r!2 r!2 r!2 r!2)) (* (- 6) (* r!2 r!2 r!2 s00 r00 r00)) (* (- 18) (* r!2 r!2 s00 r00 r00)) (* (- 18) (* r!2 s00 r00 r00)) (* 12 (* r!2 r!2 s00 s00)) (* 4 (* r!2 r!2 r!2 s00 s00)) (* 18 (* r00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3144 ?x3146)) (* (- 9) (* r00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146 ?x3146)) (* (- 18) (* r00 x00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* (- 2) (* ?x3143 ?x3143 ?x3143 ?x3146 ?x3146)) (* (- 3) (* s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* 27 (* r!2 r00)) (* (- 9) (* r!2 r!2 r00)) (* (- 99) (* r!2 r!2 r!2 r00)) (* (- 108) (* r!2 r!2 r!2 r!2 r00)) (* (- 18) (* x00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* (- 36) (* r!2 r!2 r!2 r!2 r!2 r00)) (* 45 (* r!2 r!2 s!1 r00)) (* 3 (* r!2 r!2 r!2 s!1 r00)) (* (- 6) (* r!2 r!2 r!2 r!2 s!1 r00)) (* 9 (* r00 s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146)) (* 3 (* ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146 ?x3146)) (* 2 (* s00 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146 ?x3146)) (* 6 (* r00 ?x3143 ?x3143 ?x3143 ?x3143 ?x3144 ?x3144 ?x3146 ?x3146)) (* 369 (* r!2 r!2 r!2)) (* 225 (* r!2 r!2 r!2 r!2)) (* (- 54) (* r!2 r!2 x!0 r00)) (* (- 18) (* r!2 r!2 r!2 x!0 r00)) (* 108 (* r!2 r!2 x00)) (* 72 (* r!2 r!2 r!2 x00)) (* 18 (* r!2 r!2 r!2 r!2 x00)))))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x1775 (* s!1 r00 r00)))
 (let ((?x765 (* (- 36) ?x1775)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x1681 (* 9 s!1)))
 (let ((?x1849 (+ ?x1681 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s!1 s!1)) ?x765 ?x1368 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1003 ?x1015 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x735 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1132 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x886 (* 12 (* s!1 s!1 s00)) ?x1374 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1378 (* 216 (* x!0 x00)) ?x1379)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x2560 (+ ?x1681 ?x990 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x567 ?x554 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x765 ?x919 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1003 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x699 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x809 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x893 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x1684 (+ (* 3 s!1) ?x381 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x544 ?x539 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1775) ?x607 (* 18 (* x!0 r00)) ?x651 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2373 (+ ?x3399 ?x2826 ?x2691 ?x44 ?x503 ?x504 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x507 ?x473)))
 (let (($x3387 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x304)) 0)))
 (let (($x440 (and $x3387 (= ?x2373 0) (= ?x1684 0) (= ?x2560 0) (= ?x1849 0) (not (= ?x359 (- 18))))))
 (let (($x1559 (exists ((r Int) (s Int) (x Int) )(! (let ((?x3901 (* 18 (* r r r r x00))))
 (let ((?x3781 (* (- 18) (* r r r x r00))))
 (let ((?x3792 (* (- 54) (* r r x r00))))
 (let ((?x216 (* 6 r)))
 (let ((?x1549 (+ 3 ?x216 s)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x1555 (+ ?x283 x)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x3325 (* (- 6) (* r r r r s r00))))
 (let ((?x3230 (* (- 36) (* r r r r r r00))))
 (let ((?x2819 (* (- 2) (* ?x1386 ?x1386 ?x1386 ?x1549 ?x1549))))
 (let ((?x2408 (* 4 (* r r r s00 s00))))
 (let ((?x2269 (* (- 18) (* r s00 r00 r00))))
 (let ((?x2272 (* (- 18) (* r r s00 r00 r00))))
 (let ((?x2261 (* (- 6) (* r r r s00 r00 r00))))
 (let ((?x2511 (* (- 21) (* r r r r s00))))
 (let ((?x1960 (* 18 (* r r r r00 x00))))
 (let ((?x1974 (* (- 2) (* r r r s s00))))
 (let ((?x2108 (* (- 6) (* r r s s00))))
 (let ((?x1821 (* (- 108) (* r r x))))
 (let ((?x1820 (* (- 72) (* r r r x))))
 (let ((?x1590 (* (- 18) (* r r r r x))))
 (let ((?x2303 (* 27 (* r r r r s))))
 (let ((?x2513 (* (- 75) (* r r r s00))))
 (let ((?x932 (* r s s00)))
 (let ((?x2084 (* (- 6) ?x932)))
 (let ((?x691 (* s s00)))
 (let ((?x2045 (* (- 2) ?x691)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x2372 (* (- 6) ?x650)))
 (let ((?x620 (* x r00)))
 (let ((?x3733 (* (- 18) ?x620)))
 (let ((?x594 (* s00 s00)))
 (let ((?x595 (* 4 ?x594)))
 (let ((?x561 (* r x r00)))
 (let ((?x3791 (* (- 54) ?x561)))
 (let ((?x552 (* r x)))
 (let ((?x1819 (* (- 72) ?x552)))
 (let ((?x525 (* r00 x00)))
 (let ((?x526 (* 18 ?x525)))
 (let ((?x429 (* s00 r00)))
 (let ((?x2873 (* (- 3) ?x429)))
 (let ((?x304 (* r00 r00)))
 (let ((?x1692 (* 18 ?x304)))
 (let ((?x3907 (* 18 x00)))
 (let ((?x2721 (* 9 r00)))
 (let ((?x2519 (* (- 12) s00)))
 (let ((?x1584 (* (- 18) x)))
 (let ((?x3525 (* 24 s)))
 (let ((?x2598 (+ (* 117 r) ?x3525 ?x1584 ?x2519 ?x2721 ?x3907 (* 297 (* r r)) (* 18 (* r s r00 r00)) ?x1692 (* 18 (* r r s r00 r00)) (* 162 (* r r r00 r00)) (* 99 (* r s)) (* 90 (* r r00 r00)) (* 126 (* r r r r00 r00)) (* (- 57) (* r s00)) ?x2873 (* 36 (* r r r r r00 r00)) ?x526 ?x1819 (* 57 (* r s r00)) ?x3791 (* 6 (* s r00 r00)) ?x595 ?x3733 ?x2372 (* 72 (* r x00)) ?x2045 (* 21 (* s r00)) (* (- 3) (* r s00 r00)) (* 6 (* r r r r s00 r00)) (* 12 (* r s00 s00)) ?x2084 (* 54 (* r r00 x00)) (* 18 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1555 ?x1549)) (* (- 9) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* (- 4) (* s00 s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* (- 99) (* r r s00)) ?x2513 (* (- 6) (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 6 (* r00 r00 s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 6 (* r r r s r00 r00)) (* 9 (* r r s00 r00)) (* 15 (* r r r s00 r00)) ?x2303 (* 153 (* r r s)) (* 105 (* r r r s)) ?x1590 ?x1820 ?x1821 (* (- 6) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 9 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) ?x2108 ?x1974 (* 54 (* r r r00 x00)) ?x1960 (* 2 (* ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549 ?x1549)) ?x2511 (* 54 (* r r r r r)) ?x2261 ?x2272 ?x2269 (* 12 (* r r s00 s00)) ?x2408 (* 18 (* r00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1555 ?x1549)) (* (- 9) (* r00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* (- 18) (* r00 x00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) ?x2819 (* (- 3) (* s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 27 (* r r00)) (* (- 9) (* r r r00)) (* (- 99) (* r r r r00)) (* (- 108) (* r r r r r00)) (* (- 18) (* x00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) ?x3230 (* 45 (* r r s r00)) (* 3 (* r r r s r00)) ?x3325 (* 9 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 2 (* s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 6 (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 369 (* r r r)) (* 225 (* r r r r)) ?x3792 ?x3781 (* 108 (* r r x00)) (* 72 (* r r r x00)) ?x3901)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x568 (* s r00 r00)))
 (let ((?x867 (* (- 36) ?x568)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1380 (+ ?x143 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s s)) ?x867 ?x1368 (* (- 108) (* x s00)) (* 108 ?x620) (* 216 (* s r00 r00 r00)) ?x1003 ?x1015 (* 66 ?x691) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1132 (* 108 (* s x)) (* (- 108) (* x x)) ?x886 (* 12 (* s s s00)) ?x1374 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1378 (* 216 (* x x00)) ?x1379)))
 (let (($x1381 (= ?x1380 0)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x1082 (+ ?x143 ?x990 (* (- 24) (* r s)) (* 24 (* r s00)) ?x567 ?x554 ?x572 (* 54 ?x552) (* 36 ?x561) ?x867 ?x919 (* (- 6) (* x s00)) (* 54 ?x620) ?x1003 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x699 (* 12 ?x691) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x809 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x893 (* 2 ?x932) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1087 (= ?x1082 0)))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x748 (+ ?x47 ?x381 (* (- 9) (* r s)) (* 9 (* r s00)) ?x544 ?x539 ?x549 (* 18 ?x552) (* 6 (* r s r00)) (* (- 6) ?x568) ?x607 (* 18 ?x620) ?x651 (* (- 18) (* r x00)) (* 2 ?x691) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x755 (= ?x748 0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x508 (+ ?x43 ?x502 ?x56 ?x44 ?x503 ?x504 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x507 ?x473)))
 (let (($x509 (= ?x508 0)))
 (let (($x337 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x304)) 0)))
 (and $x337 $x509 $x755 $x1087 $x1381 (not (= ?x2598 (- 18)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3674 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (* 6 r)))
 (let ((?x3619 (+ 3 s ?x216)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x3716 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x3402 (+ (* 3 (* s00 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 s00 ?x1386 ?x1386 ?x1386)) (* 18 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)) (* (- 9) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 2 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619 ?x3619)) (* (- 18) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716)) (* (- 4) (* s00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 18 (* r00 x00 ?x1386 ?x1386 ?x1386)) (* 9 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 2 (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 6 (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 3) (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* s00 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 6) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 9 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 9 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 18) (* x00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 4 (* s00 s00 ?x1386 ?x1386 ?x1386)) (* (- 6) (* r00 r00 s00 ?x1386 ?x1386 ?x1386)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 9) (* s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 18) (* r00 x00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* ?x1386 ?x1386 ?x1386 ?x3619 ?x3619)) (* 6 (* r00 r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x3619)) (* 9 (* r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 6 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 18) (* r00 ?x1386 ?x1386 ?x1386 ?x3716)) (* 6 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 18 (* x00 ?x1386 ?x1386 ?x1386 ?x1386)) (* 18 (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)))))
 (let (($x3451 (not (= ?x3402 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1823 (* 108 ?x1349)))
 (let ((?x1795 (* (- 9) s)))
 (let ((?x2119 (* r00 r00 s00)))
 (let ((?x1632 (* (- 36) ?x2119)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1653 (* 51 ?x594)))
 (let ((?x3848 (* r00 r00 s)))
 (let ((?x3777 (* 36 ?x3848)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1587 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x2213 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x3232 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x3418 (* 108 ?x525)))
 (let ((?x1014 (+ (* 216 (* r00 s00 x00)) ?x3418 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3232 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1587 (* (- 108) (* x s)) ?x3777 ?x1653 (* (- 108) (* r00 x)) ?x137 ?x1632 ?x1795 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1823)))
 (let (($x1029 (= ?x1014 0)))
 (let ((?x2717 (* 15 ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x2714 (* 36 ?x880)))
 (let ((?x2512 (* (- 6) ?x808)))
 (let ((?x3701 (* 54 ?x525)))
 (let ((?x1633 (+ (* 24 (* s r)) ?x3701 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2512 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3777 ?x2714 ?x2717 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1632 (* 54 (* x00 r)) ?x1795 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3005 (* r00 s)))
 (let ((?x3554 (* 9 ?x3005)))
 (let ((?x502 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x595 (* 4 ?x594)))
 (let ((?x3849 (* 6 ?x3848)))
 (let ((?x526 (* 18 ?x525)))
 (let ((?x3664 (+ (* 9 (* s r)) ?x526 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) ?x3849 ?x595 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2119) (* 18 (* x00 r)) ?x502 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) ?x3554 (* 6 (* r00 s00 r)))))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3707 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x502 ?x503 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x504 ?x473)))
 (let (($x3426 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x3426 (= ?x3707 0) (= ?x3664 0) (= ?x1633 0) $x1029 $x3451)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3428 (lambda ((r Int) (s Int) (x Int) )(let ((?x3901 (* 18 (* r r r r x00))))
 (let ((?x3781 (* (- 18) (* r r r x r00))))
 (let ((?x3792 (* (- 54) (* r r x r00))))
 (let ((?x216 (* 6 r)))
 (let ((?x1549 (+ 3 ?x216 s)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x1555 (+ ?x283 x)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x3325 (* (- 6) (* r r r r s r00))))
 (let ((?x3230 (* (- 36) (* r r r r r r00))))
 (let ((?x2819 (* (- 2) (* ?x1386 ?x1386 ?x1386 ?x1549 ?x1549))))
 (let ((?x2408 (* 4 (* r r r s00 s00))))
 (let ((?x2269 (* (- 18) (* r s00 r00 r00))))
 (let ((?x2272 (* (- 18) (* r r s00 r00 r00))))
 (let ((?x2261 (* (- 6) (* r r r s00 r00 r00))))
 (let ((?x2511 (* (- 21) (* r r r r s00))))
 (let ((?x1960 (* 18 (* r r r r00 x00))))
 (let ((?x1974 (* (- 2) (* r r r s s00))))
 (let ((?x2108 (* (- 6) (* r r s s00))))
 (let ((?x1821 (* (- 108) (* r r x))))
 (let ((?x1820 (* (- 72) (* r r r x))))
 (let ((?x1590 (* (- 18) (* r r r r x))))
 (let ((?x2303 (* 27 (* r r r r s))))
 (let ((?x2513 (* (- 75) (* r r r s00))))
 (let ((?x932 (* r s s00)))
 (let ((?x2084 (* (- 6) ?x932)))
 (let ((?x691 (* s s00)))
 (let ((?x2045 (* (- 2) ?x691)))
 (let ((?x650 (* s00 r00 r00)))
 (let ((?x2372 (* (- 6) ?x650)))
 (let ((?x620 (* x r00)))
 (let ((?x3733 (* (- 18) ?x620)))
 (let ((?x594 (* s00 s00)))
 (let ((?x595 (* 4 ?x594)))
 (let ((?x561 (* r x r00)))
 (let ((?x3791 (* (- 54) ?x561)))
 (let ((?x552 (* r x)))
 (let ((?x1819 (* (- 72) ?x552)))
 (let ((?x525 (* r00 x00)))
 (let ((?x526 (* 18 ?x525)))
 (let ((?x429 (* s00 r00)))
 (let ((?x2873 (* (- 3) ?x429)))
 (let ((?x304 (* r00 r00)))
 (let ((?x1692 (* 18 ?x304)))
 (let ((?x3907 (* 18 x00)))
 (let ((?x2721 (* 9 r00)))
 (let ((?x2519 (* (- 12) s00)))
 (let ((?x1584 (* (- 18) x)))
 (let ((?x3525 (* 24 s)))
 (let ((?x2598 (+ (* 117 r) ?x3525 ?x1584 ?x2519 ?x2721 ?x3907 (* 297 (* r r)) (* 18 (* r s r00 r00)) ?x1692 (* 18 (* r r s r00 r00)) (* 162 (* r r r00 r00)) (* 99 (* r s)) (* 90 (* r r00 r00)) (* 126 (* r r r r00 r00)) (* (- 57) (* r s00)) ?x2873 (* 36 (* r r r r r00 r00)) ?x526 ?x1819 (* 57 (* r s r00)) ?x3791 (* 6 (* s r00 r00)) ?x595 ?x3733 ?x2372 (* 72 (* r x00)) ?x2045 (* 21 (* s r00)) (* (- 3) (* r s00 r00)) (* 6 (* r r r r s00 r00)) (* 12 (* r s00 s00)) ?x2084 (* 54 (* r r00 x00)) (* 18 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1555 ?x1549)) (* (- 9) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* (- 4) (* s00 s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* (- 99) (* r r s00)) ?x2513 (* (- 6) (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 6 (* r00 r00 s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 6 (* r r r s r00 r00)) (* 9 (* r r s00 r00)) (* 15 (* r r r s00 r00)) ?x2303 (* 153 (* r r s)) (* 105 (* r r r s)) ?x1590 ?x1820 ?x1821 (* (- 6) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 9 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) ?x2108 ?x1974 (* 54 (* r r r00 x00)) ?x1960 (* 2 (* ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549 ?x1549)) ?x2511 (* 54 (* r r r r r)) ?x2261 ?x2272 ?x2269 (* 12 (* r r s00 s00)) ?x2408 (* 18 (* r00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1555 ?x1549)) (* (- 9) (* r00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* (- 18) (* r00 x00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) ?x2819 (* (- 3) (* s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 27 (* r r00)) (* (- 9) (* r r r00)) (* (- 99) (* r r r r00)) (* (- 108) (* r r r r r00)) (* (- 18) (* x00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) ?x3230 (* 45 (* r r s r00)) (* 3 (* r r r s r00)) ?x3325 (* 9 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 2 (* s00 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 6 (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x1555 ?x1555 ?x1549 ?x1549)) (* 369 (* r r r)) (* 225 (* r r r r)) ?x3792 ?x3781 (* 108 (* r r x00)) (* 72 (* r r r x00)) ?x3901)))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1379 (* (- 108) ?x1349)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1378 (* (- 16) ?x1187)))
 (let ((?x1059 (* s00 r00 r00 r00)))
 (let ((?x1374 (* (- 216) ?x1059)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x886 (* 432 ?x885)))
 (let ((?x808 (* s00 x00)))
 (let ((?x1132 (* 108 ?x808)))
 (let ((?x734 (* s00 s00 r00 r00)))
 (let ((?x735 (* 36 ?x734)))
 (let ((?x671 (* s00 s00 r00)))
 (let ((?x1015 (* 108 ?x671)))
 (let ((?x1003 (* 36 ?x650)))
 (let ((?x1368 (* (- 51) ?x594)))
 (let ((?x568 (* s r00 r00)))
 (let ((?x867 (* (- 36) ?x568)))
 (let ((?x1365 (* (- 108) ?x525)))
 (let ((?x516 (* s00 r00 x00)))
 (let ((?x1364 (* (- 216) ?x516)))
 (let ((?x523 (* 54 ?x429)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1380 (+ ?x143 ?x990 ?x523 ?x1364 ?x1365 (* (- 15) (* s s)) ?x867 ?x1368 (* (- 108) (* x s00)) (* 108 ?x620) (* 216 (* s r00 r00 r00)) ?x1003 ?x1015 (* 66 ?x691) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x735 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1132 (* 108 (* s x)) (* (- 108) (* x x)) ?x886 (* 12 (* s s s00)) ?x1374 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1378 (* 216 (* x x00)) ?x1379)))
 (let (($x1381 (= ?x1380 0)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x699 (* (- 2) ?x671)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x567 (* 24 ?x429)))
 (let ((?x1082 (+ ?x143 ?x990 (* (- 24) (* r s)) (* 24 (* r s00)) ?x567 ?x554 ?x572 (* 54 ?x552) (* 36 ?x561) ?x867 ?x919 (* (- 6) (* x s00)) (* 54 ?x620) ?x1003 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x699 (* 12 ?x691) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x809 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x893 (* 2 ?x932) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1087 (= ?x1082 0)))
 (let ((?x651 (* 6 ?x650)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x544 (* 9 ?x429)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x748 (+ ?x47 ?x381 (* (- 9) (* r s)) (* 9 (* r s00)) ?x544 ?x539 ?x549 (* 18 ?x552) (* 6 (* r s r00)) (* (- 6) ?x568) ?x607 (* 18 ?x620) ?x651 (* (- 18) (* r x00)) (* 2 ?x691) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x755 (= ?x748 0)))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x507 (* (- 6) ?x429)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x508 (+ ?x43 ?x502 ?x56 ?x44 ?x503 ?x504 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x507 ?x473)))
 (let (($x509 (= ?x508 0)))
 (let (($x337 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x304)) 0)))
 (let (($x545 (and $x337 $x509 $x755 $x1087 $x1381 (not (= ?x2598 (- 18))))))
 (let ((?x3619 (+ 3 s ?x216)))
 (let ((?x3716 (+ x ?x283)))
 (let ((?x3402 (+ (* 3 (* s00 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 s00 ?x1386 ?x1386 ?x1386)) (* 18 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)) (* (- 9) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 2 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619 ?x3619)) (* (- 18) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716)) (* (- 4) (* s00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 18 (* r00 x00 ?x1386 ?x1386 ?x1386)) (* 9 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 2 (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 6 (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 3) (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* s00 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 6) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 9 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 9 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 18) (* x00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 4 (* s00 s00 ?x1386 ?x1386 ?x1386)) (* (- 6) (* r00 r00 s00 ?x1386 ?x1386 ?x1386)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 9) (* s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 18) (* r00 x00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* ?x1386 ?x1386 ?x1386 ?x3619 ?x3619)) (* 6 (* r00 r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x3619)) (* 9 (* r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 6 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 18) (* r00 ?x1386 ?x1386 ?x1386 ?x3716)) (* 6 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 18 (* x00 ?x1386 ?x1386 ?x1386 ?x1386)) (* 18 (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)))))
 (let (($x3451 (not (= ?x3402 0))))
 (let ((?x1823 (* 108 ?x1349)))
 (let ((?x1795 (* (- 9) s)))
 (let ((?x2119 (* r00 r00 s00)))
 (let ((?x1632 (* (- 36) ?x2119)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1653 (* 51 ?x594)))
 (let ((?x3848 (* r00 r00 s)))
 (let ((?x3777 (* 36 ?x3848)))
 (let ((?x1587 (* 16 ?x1187)))
 (let ((?x2213 (* (- 108) ?x808)))
 (let ((?x3232 (* (- 432) ?x885)))
 (let ((?x3418 (* 108 ?x525)))
 (let ((?x1014 (+ (* 216 (* r00 s00 x00)) ?x3418 (* (- 54) (* r00 s00)) (* 15 ?x548) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3232 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1587 (* (- 108) (* x s)) ?x3777 ?x1653 (* (- 108) (* r00 x)) ?x137 ?x1632 ?x1795 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1823)))
 (let (($x1029 (= ?x1014 0)))
 (let ((?x2717 (* 15 ?x594)))
 (let ((?x2714 (* 36 ?x880)))
 (let ((?x2512 (* (- 6) ?x808)))
 (let ((?x3701 (* 54 ?x525)))
 (let ((?x1633 (+ (* 24 (* s r)) ?x3701 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x548) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2512 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3777 ?x2714 ?x2717 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1632 (* 54 (* x00 r)) ?x1795 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3005 (* r00 s)))
 (let ((?x3554 (* 9 ?x3005)))
 (let ((?x3849 (* 6 ?x3848)))
 (let ((?x3664 (+ (* 9 (* s r)) ?x526 (* (- 9) (* r00 s00)) (* (- 2) ?x548) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) ?x3849 ?x595 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2119) (* 18 (* x00 r)) ?x502 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) ?x3554 (* 6 (* r00 s00 r)))))
 (let ((?x3707 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x502 ?x503 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x504 ?x473)))
 (let (($x3426 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) ?x304)) 0)))
 (let (($x1404 (and $x3426 (= ?x3707 0) (= ?x3664 0) (= ?x1633 0) $x1029 $x3451)))
 (rewrite (= $x1404 $x545))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3454 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (* 6 r)))
 (let ((?x3619 (+ 3 s ?x216)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x3716 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x3402 (+ (* 3 (* s00 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 s00 ?x1386 ?x1386 ?x1386)) (* 18 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)) (* (- 9) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 2 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619 ?x3619)) (* (- 18) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716)) (* (- 4) (* s00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 18 (* r00 x00 ?x1386 ?x1386 ?x1386)) (* 9 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 2 (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 6 (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 3) (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* s00 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 6) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 9 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 9 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 18) (* x00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 4 (* s00 s00 ?x1386 ?x1386 ?x1386)) (* (- 6) (* r00 r00 s00 ?x1386 ?x1386 ?x1386)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 9) (* s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 18) (* r00 x00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* ?x1386 ?x1386 ?x1386 ?x3619 ?x3619)) (* 6 (* r00 r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x3619)) (* 9 (* r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 6 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 18) (* r00 ?x1386 ?x1386 ?x1386 ?x3716)) (* 6 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 18 (* x00 ?x1386 ?x1386 ?x1386 ?x1386)) (* 18 (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)))))
 (let (($x3451 (not (= ?x3402 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1823 (* 108 ?x1349)))
 (let ((?x1795 (* (- 9) s)))
 (let ((?x2119 (* r00 r00 s00)))
 (let ((?x1632 (* (- 36) ?x2119)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1653 (* 51 ?x594)))
 (let ((?x3848 (* r00 r00 s)))
 (let ((?x3777 (* 36 ?x3848)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1587 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x2213 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x3232 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x3418 (* 108 ?x525)))
 (let ((?x1014 (+ (* 216 (* r00 s00 x00)) ?x3418 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3232 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1587 (* (- 108) (* x s)) ?x3777 ?x1653 (* (- 108) (* r00 x)) ?x137 ?x1632 ?x1795 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1823)))
 (let (($x1029 (= ?x1014 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x2247 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3848) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 ?x2119) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x3706 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3848) ?x607 (* 18 (* r00 x)) ?x381 (* 6 ?x2119) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x1427 (* r00 s00)))
 (let ((?x3570 (* 6 ?x1427)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2982 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) ?x3570 (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3426 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x3426 (= ?x2982 0) (= ?x3706 0) (= ?x2247 0) $x1029 $x3451)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1533 (lambda ((r Int) (s Int) (x Int) )(let ((?x216 (* 6 r)))
 (let ((?x3619 (+ 3 s ?x216)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x3716 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x3402 (+ (* 3 (* s00 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 s00 ?x1386 ?x1386 ?x1386)) (* 18 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)) (* (- 9) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 2 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619 ?x3619)) (* (- 18) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716)) (* (- 4) (* s00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 18 (* r00 x00 ?x1386 ?x1386 ?x1386)) (* 9 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 2 (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 6 (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 3) (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* s00 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 6) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 9 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 9 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 18) (* x00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 4 (* s00 s00 ?x1386 ?x1386 ?x1386)) (* (- 6) (* r00 r00 s00 ?x1386 ?x1386 ?x1386)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 9) (* s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 18) (* r00 x00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* ?x1386 ?x1386 ?x1386 ?x3619 ?x3619)) (* 6 (* r00 r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x3619)) (* 9 (* r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 6 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 18) (* r00 ?x1386 ?x1386 ?x1386 ?x3716)) (* 6 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 18 (* x00 ?x1386 ?x1386 ?x1386 ?x1386)) (* 18 (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)))))
 (let (($x3451 (not (= ?x3402 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1823 (* 108 ?x1349)))
 (let ((?x1795 (* (- 9) s)))
 (let ((?x2119 (* r00 r00 s00)))
 (let ((?x1632 (* (- 36) ?x2119)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1653 (* 51 ?x594)))
 (let ((?x3848 (* r00 r00 s)))
 (let ((?x3777 (* 36 ?x3848)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1587 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x2213 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x3232 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x3418 (* 108 ?x525)))
 (let ((?x1014 (+ (* 216 (* r00 s00 x00)) ?x3418 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3232 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1587 (* (- 108) (* x s)) ?x3777 ?x1653 (* (- 108) (* r00 x)) ?x137 ?x1632 ?x1795 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1823)))
 (let (($x1029 (= ?x1014 0)))
 (let ((?x2717 (* 15 ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x2714 (* 36 ?x880)))
 (let ((?x2512 (* (- 6) ?x808)))
 (let ((?x3701 (* 54 ?x525)))
 (let ((?x1633 (+ (* 24 (* s r)) ?x3701 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2512 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3777 ?x2714 ?x2717 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1632 (* 54 (* x00 r)) ?x1795 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3005 (* r00 s)))
 (let ((?x3554 (* 9 ?x3005)))
 (let ((?x502 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x595 (* 4 ?x594)))
 (let ((?x3849 (* 6 ?x3848)))
 (let ((?x526 (* 18 ?x525)))
 (let ((?x3664 (+ (* 9 (* s r)) ?x526 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) ?x3849 ?x595 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2119) (* 18 (* x00 r)) ?x502 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) ?x3554 (* 6 (* r00 s00 r)))))
 (let ((?x472 (* r00 r00 r00)))
 (let ((?x473 (* 12 ?x472)))
 (let ((?x504 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x503 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3707 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x502 ?x503 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x504 ?x473)))
 (let (($x3426 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1404 (and $x3426 (= ?x3707 0) (= ?x3664 0) (= ?x1633 0) $x1029 $x3451)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x2247 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3848) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 ?x2119) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x3005) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x3706 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3848) ?x607 (* 18 (* r00 x)) ?x381 (* 6 ?x2119) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x3005) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x1427 (* r00 s00)))
 (let ((?x3570 (* 6 ?x1427)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2982 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) ?x3570 (* (- 6) x) ?x59 (* (- 12) ?x472))))
 (let (($x2947 (and $x3426 (= ?x2982 0) (= ?x3706 0) (= ?x2247 0) $x1029 $x3451)))
 (rewrite (= $x2947 $x1404))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x280 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x216 (* 6 r)))
 (let ((?x217 (+ s ?x216 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x215 (- (* 3 ?x212 ?x212 ?x212 s00) (* 9 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x222 (- (+ ?x215 (* 18 ?x212 ?x212 ?x212 ?x212 ?x217 ?x218 ?x218 ?x218)) (* 9 ?x212 ?x212 ?x212 ?x212 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x227 (- (+ ?x222 (* 2 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217 ?x218 ?x218)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x218))))
 (let ((?x233 (+ (- ?x227 (* 4 ?x212 ?x212 ?x212 ?x217 s00 s00 ?x218 ?x218)) (* 18 ?x212 ?x212 ?x212 r00 x00) (* 9 ?x212 ?x212 ?x212 r00 ?x217 s00 ?x218 ?x218) (* 2 ?x212 ?x212 ?x212 ?x217 ?x217 s00 ?x218 ?x218) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x238 (- (- ?x233 (* 3 ?x212 ?x212 ?x212 ?x217 s00 ?x218 ?x218)) (* 2 ?x212 ?x212 ?x212 ?x217 s00))))
 (let ((?x242 (+ (- ?x238 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x217 ?x217 ?x218 ?x218)) (* 9 ?x212 ?x212 ?x212 ?x212 ?x217 s00 ?x218 ?x218) (* 9 ?x212 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x246 (+ (- ?x242 (* 18 ?x212 ?x212 ?x212 ?x212 ?x217 ?x218 ?x218 x00)) (* 4 ?x212 ?x212 ?x212 s00 s00))))
 (let ((?x250 (+ (- ?x246 (* 6 ?x212 ?x212 ?x212 r00 r00 s00)) (* 3 ?x212 ?x212 ?x212 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x257 (- (- ?x250 (* 9 ?x212 ?x212 ?x212 ?x212 s00)) (* 9 ?x212 ?x212 ?x212 r00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x259 (- (- ?x257 (* 18 ?x212 ?x212 ?x212 r00 ?x217 ?x218 ?x218 x00)) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x217 s00 ?x218 ?x218))))
 (let ((?x262 (+ (- ?x259 (* 2 ?x212 ?x212 ?x212 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x217 s00 ?x218 ?x218))))
 (let ((?x266 (- (- ?x262 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x217)) (* 3 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x269 (+ ?x266 (* 9 ?x212 ?x212 ?x212 r00 ?x217) (* 6 ?x212 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x275 (+ (- ?x269 (* 18 ?x212 ?x212 ?x212 r00 ?x218)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x217) (* 18 ?x212 ?x212 ?x212 ?x212 x00) (* 18 ?x212 ?x212 ?x212 r00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x275 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3485 (lambda ((r Int) (s Int) (x Int) )(let ((?x216 (* 6 r)))
 (let ((?x3619 (+ 3 s ?x216)))
 (let ((?x283 (* (- 1) s)))
 (let ((?x3716 (+ x ?x283)))
 (let ((?x1386 (+ 1 r)))
 (let ((?x3402 (+ (* 3 (* s00 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 s00 ?x1386 ?x1386 ?x1386)) (* 18 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)) (* (- 9) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 2 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619 ?x3619)) (* (- 18) (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3716)) (* (- 4) (* s00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 18 (* r00 x00 ?x1386 ?x1386 ?x1386)) (* 9 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 2 (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 6 (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 3) (* s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* s00 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 6) (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* 9 (* s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 9 (* ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 18) (* x00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* 4 (* s00 s00 ?x1386 ?x1386 ?x1386)) (* (- 6) (* r00 r00 s00 ?x1386 ?x1386 ?x1386)) (* 3 (* ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 9) (* s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 9) (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619 ?x3619)) (* (- 18) (* r00 x00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 2) (* ?x1386 ?x1386 ?x1386 ?x3619 ?x3619)) (* 6 (* r00 r00 s00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3619)) (* (- 6) (* r00 ?x1386 ?x1386 ?x1386 ?x1386 ?x3619)) (* (- 3) (* ?x1386 ?x1386 ?x1386 ?x3619)) (* 9 (* r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 6 (* r00 s00 ?x1386 ?x1386 ?x1386 ?x1386)) (* (- 18) (* r00 ?x1386 ?x1386 ?x1386 ?x3716)) (* 6 (* r00 r00 ?x1386 ?x1386 ?x1386 ?x3619)) (* 18 (* x00 ?x1386 ?x1386 ?x1386 ?x1386)) (* 18 (* r00 ?x1386 ?x1386 ?x1386 ?x3716 ?x3716 ?x3716 ?x3619)))))
 (let (($x3451 (not (= ?x3402 0))))
 (let ((?x1349 (* x00 x00)))
 (let ((?x1823 (* 108 ?x1349)))
 (let ((?x1795 (* (- 9) s)))
 (let ((?x2119 (* r00 r00 s00)))
 (let ((?x1632 (* (- 36) ?x2119)))
 (let ((?x137 (* 9 s00)))
 (let ((?x594 (* s00 s00)))
 (let ((?x1653 (* 51 ?x594)))
 (let ((?x3848 (* r00 r00 s)))
 (let ((?x3777 (* 36 ?x3848)))
 (let ((?x1187 (* s00 s00 s00)))
 (let ((?x1587 (* 16 ?x1187)))
 (let ((?x808 (* s00 x00)))
 (let ((?x2213 (* (- 108) ?x808)))
 (let ((?x885 (* r00 r00 r00 x00)))
 (let ((?x3232 (* (- 432) ?x885)))
 (let ((?x525 (* r00 x00)))
 (let ((?x3418 (* 108 ?x525)))
 (let ((?x1014 (+ (* 216 (* r00 s00 x00)) ?x3418 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3232 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1587 (* (- 108) (* x s)) ?x3777 ?x1653 (* (- 108) (* r00 x)) ?x137 ?x1632 ?x1795 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1823)))
 (let (($x1029 (= ?x1014 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x990 (* (- 9) s00)))
 (let ((?x919 (* (- 15) ?x594)))
 (let ((?x880 (* r00 r00 x00)))
 (let ((?x893 (* (- 36) ?x880)))
 (let ((?x809 (* 6 ?x808)))
 (let ((?x548 (* s s)))
 (let ((?x572 (* 3 ?x548)))
 (let ((?x554 (* (- 54) ?x525)))
 (let ((?x2247 (+ (* (- 24) (* s r)) ?x554 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x572 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x809 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x3848) ?x893 ?x919 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x990 (* 36 ?x2119) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x381 (* (- 3) s00)))
 (let ((?x607 (* (- 4) ?x594)))
 (let ((?x549 (* 2 ?x548)))
 (let ((?x539 (* (- 18) ?x525)))
 (let ((?x3706 (+ (* (- 9) (* s r)) ?x539 (* 9 (* r00 s00)) ?x549 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x3848) ?x607 (* 18 (* r00 x)) ?x381 (* 6 ?x2119) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x1427 (* r00 s00)))
 (let ((?x3570 (* 6 ?x1427)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2982 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x381 ?x47 ?x48 (* (- 4) (* s00 r)) ?x3570 (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3426 (= (+ s00 ?x283 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2947 (and $x3426 (= ?x2982 0) (= ?x3706 0) (= ?x2247 0) $x1029 $x3451)))
 (let ((?x218 (- x s)))
 (let ((?x217 (+ s ?x216 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x215 (- (* 3 ?x212 ?x212 ?x212 s00) (* 9 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x222 (- (+ ?x215 (* 18 ?x212 ?x212 ?x212 ?x212 ?x217 ?x218 ?x218 ?x218)) (* 9 ?x212 ?x212 ?x212 ?x212 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x227 (- (+ ?x222 (* 2 ?x212 ?x212 ?x212 ?x217 ?x217 ?x217 ?x218 ?x218)) (* 18 ?x212 ?x212 ?x212 ?x212 ?x218))))
 (let ((?x233 (+ (- ?x227 (* 4 ?x212 ?x212 ?x212 ?x217 s00 s00 ?x218 ?x218)) (* 18 ?x212 ?x212 ?x212 r00 x00) (* 9 ?x212 ?x212 ?x212 r00 ?x217 s00 ?x218 ?x218) (* 2 ?x212 ?x212 ?x212 ?x217 ?x217 s00 ?x218 ?x218) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x238 (- (- ?x233 (* 3 ?x212 ?x212 ?x212 ?x217 s00 ?x218 ?x218)) (* 2 ?x212 ?x212 ?x212 ?x217 s00))))
 (let ((?x242 (+ (- ?x238 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x217 ?x217 ?x218 ?x218)) (* 9 ?x212 ?x212 ?x212 ?x212 ?x217 s00 ?x218 ?x218) (* 9 ?x212 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x246 (+ (- ?x242 (* 18 ?x212 ?x212 ?x212 ?x212 ?x217 ?x218 ?x218 x00)) (* 4 ?x212 ?x212 ?x212 s00 s00))))
 (let ((?x250 (+ (- ?x246 (* 6 ?x212 ?x212 ?x212 r00 r00 s00)) (* 3 ?x212 ?x212 ?x212 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x257 (- (- ?x250 (* 9 ?x212 ?x212 ?x212 ?x212 s00)) (* 9 ?x212 ?x212 ?x212 r00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x259 (- (- ?x257 (* 18 ?x212 ?x212 ?x212 r00 ?x217 ?x218 ?x218 x00)) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x217 s00 ?x218 ?x218))))
 (let ((?x262 (+ (- ?x259 (* 2 ?x212 ?x212 ?x212 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x217 s00 ?x218 ?x218))))
 (let ((?x266 (- (- ?x262 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x217)) (* 3 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x269 (+ ?x266 (* 9 ?x212 ?x212 ?x212 r00 ?x217) (* 6 ?x212 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x275 (+ (- ?x269 (* 18 ?x212 ?x212 ?x212 r00 ?x218)) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x217) (* 18 ?x212 ?x212 ?x212 ?x212 x00) (* 18 ?x212 ?x212 ?x212 r00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x279 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x275 0))))))
 (rewrite (= $x279 $x2947))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x281 (asserted $x280)))
 (let ((@x2043 (mp (mp @x281 (quant-intro (proof-bind ?x3485) (= $x280 $x3454)) $x3454) (rewrite (= $x3454 $x3454)) $x3454)))
 (let ((@x3004 (mp (mp @x2043 (quant-intro (proof-bind ?x1533) (= $x3454 $x3674)) $x3674) (quant-intro (proof-bind ?x3428) (= $x3674 $x1559)) $x1559)))
 (let ((@x2065 (mp (mp~ @x3004 (sk (~ $x1559 $x440)) $x440) (rewrite (= $x440 $x3240)) $x3240)))
 (let ((@x625 (and-elim @x2065 $x3196)))
 (let ((@x2090 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3196) $x3291)) @x625 $x3291)))
 (let (($x3091 (>= ?x3219 0)))
 (let ((@x1787 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3196) $x3091)) @x625 $x3091)))
 (let (($x852 (<= ?x2972 0)))
 (let ((@x2067 (and-elim @x2065 $x3180)))
 (let ((@x1785 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3180) $x852)) @x2067 $x852)))
 (let (($x1984 (>= ?x2972 0)))
 (let ((@x883 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3180) $x1984)) @x2067 $x1984)))
 (let (($x3311 (<= ?x3477 0)))
 (let ((@x626 (and-elim @x2065 $x3120)))
 (let ((@x890 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3120) $x3311)) @x626 $x3311)))
 (let (($x3290 (>= ?x3477 0)))
 (let ((@x956 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3120) $x3290)) @x626 $x3290)))
 (let (($x323 (<= ?x3297 0)))
 (let ((@x535 (and-elim @x2065 $x3249)))
 (let ((@x1255 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3249) $x323)) @x535 $x323)))
 (let (($x814 (>= ?x3297 0)))
 (let ((@x1890 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3249) $x814)) @x535 $x814)))
 (let (($x3288 (<= ?x600 0)))
 (let ((@x652 (and-elim @x2065 $x605)))
 (let ((@x1671 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x605) $x3288)) @x652 $x3288)))
 (let (($x2352 (>= ?x600 0)))
 (let ((@x2012 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x605) $x2352)) @x652 $x2352)))
 (let (($x3766 (not (<= ?x2050 18))))
 (let (($x1360 (>= ?x2050 18)))
 (let ((@x2773 ((_ th-lemma arith) (hypothesis (not $x1360)) @x956 @x890 @x883 @x1785 @x956 @x890 @x956 @x890 @x2012 @x1671 @x883 @x1785 @x1787 @x2090 @x883 @x1785 @x956 @x890 @x1890 @x1255 @x883 @x1785 @x956 @x890 @x883 @x1785 @x1787 @x2090 @x956 @x890 @x883 @x1785 @x1787 @x2090 @x956 @x890 @x883 @x1785 @x1787 @x2090 @x956 @x890 @x883 @x1785 @x1787 @x2090 false)))
 (let ((@x825 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2055 $x3766 (not $x1360))) (and-elim @x2065 $x2060) (or $x3766 (not $x1360)))))
 ((_ th-lemma arith) (unit-resolution @x825 (lemma @x2773 $x1360) $x3766) @x956 @x890 @x883 @x1785 @x956 @x890 @x956 @x890 @x2012 @x1671 @x883 @x1785 @x1787 @x2090 @x883 @x1785 @x956 @x890 @x1890 @x1255 @x883 @x1785 @x956 @x890 @x883 @x1785 @x1787 @x2090 @x956 @x890 @x883 @x1785 @x1787 @x2090 @x956 @x890 @x883 @x1785 @x1787 @x2090 @x956 @x890 @x883 @x1785 @x1787 @x2090 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-max-min             910
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              6
 :arith-row-summations      13
 :arith-tableau-max-columns 177
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                6.52
 :memory                    3.60
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                1283021340
 :num-checks                1
 :propagations              12
 :rlimit-count              1464148
 :time                      0.86
 :total-time                0.87)
