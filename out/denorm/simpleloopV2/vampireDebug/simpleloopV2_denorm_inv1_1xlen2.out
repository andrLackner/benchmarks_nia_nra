% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on simpleloopV2_denorm_inv1_1xlen2
% Time limit reached!
% ------------------------------
% Version: Vampire 4.6.1 (commit 1be729b10 on 2022-01-13 14:39:16 +0100)
% Linked with Z3 4.8.15.0 dfe2b27f9aa6d72583014fa301bd79d223fb254f z3-4.8.4-5822-gdfe2b27f9
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7931
% Time elapsed: 0.500 s
% ------------------------------
----  Runtime statistics ----
clauses created: 921
clauses deleted: 348
ssat_ground_clauses_for_congruence: 1
ssat_new_components: 3
ssat_non_splittable_sat_clauses: 1
ssat_sat_clauses: 2
-----------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_6 on simpleloopV2_denorm_inv1_1xlen2
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for simpleloopV2_denorm_inv1_1xlen2
% SZS output start Proof for simpleloopV2_denorm_inv1_1xlen2
1. ? [X1 : $int,X0 : $int] : (0 = $sum($difference($difference(X0,y00),x00),X1) & (~0 = $product($sum($sum($difference($difference($difference(X0,1),y00),x00),X1),1),$sum($sum(X1,1),$product($sum(X1,1),$sum(X1,1)))) | ~0 = $product($sum($difference($difference($sum(X0,1),y00),x00),$difference(X1,1)),$sum($difference(X1,1),$product($difference(X1,1),$difference(X1,1)))))) [input]
2. ? [X1 : $int,X0 : $int] : (0 = $sum($sum($difference(X0,y00),$uminus(x00)),X1) & (~0 = $product($sum($sum($sum($difference($difference(X0,1),y00),$uminus(x00)),X1),1),$sum($sum(X1,1),$product($sum(X1,1),$sum(X1,1)))) | ~0 = $product($sum($sum($difference($sum(X0,1),y00),$uminus(x00)),$sum(X1,$uminus(1))),$sum($sum(X1,$uminus(1)),$product($sum(X1,$uminus(1)),$sum(X1,$uminus(1))))))) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 144]
4. $sum(X0,$sum(X1,X2)) = $sum($sum(X0,X1),X2) [theory axiom 145]
21. ? [X1 : $int,X0 : $int] : (0 = $sum($sum($sum(X0,$uminus(y00)),$uminus(x00)),X1) & (~0 = $product($sum($sum($sum($sum($difference(X0,1),$uminus(y00)),$uminus(x00)),X1),1),$sum($sum(X1,1),$product($sum(X1,1),$sum(X1,1)))) | ~0 = $product($sum($sum($sum($sum(X0,1),$uminus(y00)),$uminus(x00)),$sum(X1,$uminus(1))),$sum($sum(X1,$uminus(1)),$product($sum(X1,$uminus(1)),$sum(X1,$uminus(1))))))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum(X1,$uminus(y00)),$uminus(x00)),X0) & (~0 = $product($sum($sum($sum($sum($difference(X1,1),$uminus(y00)),$uminus(x00)),X0),1),$sum($sum(X0,1),$product($sum(X0,1),$sum(X0,1)))) | ~0 = $product($sum($sum($sum($sum(X1,1),$uminus(y00)),$uminus(x00)),$sum(X0,$uminus(1))),$sum($sum(X0,$uminus(1)),$product($sum(X0,$uminus(1)),$sum(X0,$uminus(1))))))) [rectify 21]
23. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum(X1,$uminus(y00)),$uminus(x00)),X0) & (0 != $product($sum($sum($sum($sum($difference(X1,1),$uminus(y00)),$uminus(x00)),X0),1),$sum($sum(X0,1),$product($sum(X0,1),$sum(X0,1)))) | 0 != $product($sum($sum($sum($sum(X1,1),$uminus(y00)),$uminus(x00)),$sum(X0,$uminus(1))),$sum($sum(X0,$uminus(1)),$product($sum(X0,$uminus(1)),$sum(X0,$uminus(1))))))) [flattening 22]
24. 0 != $product($sum($sum($sum($sum(sK1,1),$uminus(y00)),$uminus(x00)),$sum(sK0,$uminus(1))),$sum($sum(sK0,$uminus(1)),$product($sum(sK0,$uminus(1)),$sum(sK0,$uminus(1))))) | 0 != $product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum($sum(sK0,1),$product($sum(sK0,1),$sum(sK0,1)))) [cnf transformation 23]
25. 0 = $sum($sum($sum(sK1,$uminus(y00)),$uminus(x00)),sK0) [cnf transformation 23]
27. 0 != $product($sum(sK1,$sum($uminus(y00),$sum($uminus(x00),sK0))),$sum($sum(sK0,-1),$product($sum(sK0,-1),$sum(sK0,-1)))) | 0 != $product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum($sum(sK0,1),$product($sum(sK0,1),$sum(sK0,1)))) [evaluation 24]
402. 0 = $sum($sum($uminus(x00),$sum(sK1,$uminus(y00))),sK0) [forward demodulation 25,3]
449. 1 <=> 0 = $sum($sum($uminus(x00),$sum(sK1,$uminus(y00))),sK0) [avatar definition]
452. 1 [avatar split clause 402,449]
867. 0 != $product($sum(sK1,$sum($uminus(y00),$sum($uminus(x00),sK0))),$sum(sK0,$sum(-1,$product($sum(sK0,-1),$sum(sK0,-1))))) | 0 != $product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum($sum(sK0,1),$product($sum(sK0,1),$sum(sK0,1)))) [forward demodulation 27,4]
868. 0 != $product($sum(sK1,$sum($uminus(y00),$sum($uminus(x00),sK0))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) | 0 != $product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum($sum(sK0,1),$product($sum(sK0,1),$sum(sK0,1)))) [forward demodulation 867,3]
869. 0 != $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) | 0 != $product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum($sum(sK0,1),$product($sum(sK0,1),$sum(sK0,1)))) [forward demodulation 868,3]
870. 0 != $product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum(sK0,$sum(1,$product($sum(sK0,1),$sum(sK0,1))))) | 0 != $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) [forward demodulation 869,4]
871. 0 != $product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum(sK0,$sum(1,$product($sum(1,sK0),$sum(1,sK0))))) | 0 != $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) [forward demodulation 870,3]
872. 0 != $product($sum(1,$sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0)),$sum(sK0,$sum(1,$product($sum(1,sK0),$sum(1,sK0))))) | 0 != $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) [forward demodulation 871,3]
873. 0 != $product($sum(1,$sum(sK0,$sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)))),$sum(sK0,$sum(1,$product($sum(1,sK0),$sum(1,sK0))))) | 0 != $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) [forward demodulation 872,3]
874. 0 != $product($sum(1,$sum(sK0,$sum($uminus(x00),$sum($difference(sK1,1),$uminus(y00))))),$sum(sK0,$sum(1,$product($sum(1,sK0),$sum(1,sK0))))) | 0 != $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) [forward demodulation 873,3]
875. 0 != $product($sum(1,$sum(sK0,$sum($uminus(x00),$sum($uminus(y00),$difference(sK1,1))))),$sum(sK0,$sum(1,$product($sum(1,sK0),$sum(1,sK0))))) | 0 != $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) [forward demodulation 874,3]
924. 2 <=> 0 = $product($sum(sK1,$sum($uminus(y00),$sum(sK0,$uminus(x00)))),$sum(sK0,$sum(-1,$product($sum(-1,sK0),$sum(-1,sK0))))) [avatar definition]
928. 3 <=> 0 = $product($sum(1,$sum(sK0,$sum($uminus(x00),$sum($uminus(y00),$difference(sK1,1))))),$sum(sK0,$sum(1,$product($sum(1,sK0),$sum(1,sK0))))) [avatar definition]
931. ~2 | ~3 [avatar split clause 875,928,924]
932. $false [avatar smt refutation 452,931]
% SZS output end Proof for simpleloopV2_denorm_inv1_1xlen2
% ------------------------------
% Version: Vampire 4.6.1 (commit 1be729b10 on 2022-01-13 14:39:16 +0100)
% Linked with Z3 4.8.15.0 dfe2b27f9aa6d72583014fa301bd79d223fb254f z3-4.8.4-5822-gdfe2b27f9
% Termination reason: Refutation

% Memory used [KB]: 8187
% Time elapsed: 0.980 s
% ------------------------------
----  Runtime statistics ----
clauses created: 922
clauses deleted: 348
ssat_ground_clauses_for_congruence: 1
ssat_new_components: 3
ssat_non_splittable_sat_clauses: 1
ssat_sat_clauses: 2
-----------------------------
% ------------------------------
% Success in time 1.529 s
