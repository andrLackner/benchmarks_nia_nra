unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1899 (* z!1 z!1)))
 (let ((?x446 (* z00 z00)))
 (let ((?x664 (* (- 1) ?x446)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x2191 (+ ?x49 ?x43 ?x664 (* (- 12) y!2) (* (- 6) z!1) ?x1899)))
 (let (($x3081 (<= ?x2191 0)))
 (let (($x2189 (= ?x2191 0)))
 (let ((?x2917 (+ y!2 x!3)))
 (let ((?x950 (+ y!2 z!1)))
 (let ((?x1018 (+ 6 z!1)))
 (let ((?x2274 (+ 1 n!0)))
 (let ((?x1622 (* (- 18) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x907 (* 10 (* y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x3296 (* 6 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x1567 (* 2 (* z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917))))
 (let ((?x1859 (* (- 2) (* x00 z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917))))
 (let ((?x1978 (* (- 2) (* x00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x2220 (* 12 (* y00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x2326 (* (- 1) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917))))
 (let ((?x432 (* (- 18) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917))))
 (let ((?x1064 (* 12 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x3217 (* (- 1) (* y00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x1284 (* (- 1) (* y00 z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917))))
 (let ((?x669 (* (- 10) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x1638 (* 2 (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x2637 (* (- 16) (* y00 y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x1159 (* 36 (* x00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x1182 (* (- 2) (* x00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917))))
 (let ((?x1522 (* (- 1) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x2079 (* (- 1) (* y00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917))))
 (let ((?x1456 (* (- 36) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917))))
 (let ((?x2845 (* 18 (* x00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x2540 (* 4 (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917))))
 (let ((?x3165 (* (- 1) (* z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917))))
 (let ((?x431 (* 2 (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917))))
 (let ((?x2258 (+ ?x431 (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917)) (* 4 (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x950 ?x2917)) ?x3165 (* 4 (* ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 108) (* x00 x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) ?x2540 (* 36 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917)) ?x2845 (* y00 y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917) (* (- 96) (* y00 y00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 16) (* y00 y00 y00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 120 (* y00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 36) (* x00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917) ?x1456 (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917) ?x2079 ?x1522 (* 10 (* y00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 18 (* x00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 60) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* (- 108) (* x00 x00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 108 (* x00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 18) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917)) ?x1182 (* 216 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* (- 24) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917)) (* 216 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* 36 (* z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917)) (* (- 24) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917)) (* 216 (* x00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917)) ?x1159 ?x2637 (* 18 (* x00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 96) (* y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* 24 (* z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* y00 y00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917) (* 120 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917)) (* 36 (* x00 y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) ?x1638 ?x669 (* (- 18) (* z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917)) ?x1284 (* (- 36) (* y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917)) ?x3217 (* 120 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917)) ?x1064 ?x432 (* y00 y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917) (* (- 108) (* ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917 ?x2917)) (* 108 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917)) (* z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917) (* (- 24) (* ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 12 (* y00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 108 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917)) (* 24 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917)) ?x2326 (* (- 36) (* x00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* (- 108) (* ?x2274 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917)) (* (- 24) (* y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 12 (* y00 y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 10 (* y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* 36 (* x00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* 216 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) ?x2220 (* 12 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917)) (* (- 96) (* y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) ?x1978 (* 36 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* 6 (* z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) ?x1859 (* (- 24) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* 216 (* y00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917 ?x2917)) ?x1567 (* (- 10) (* z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 216) (* x00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* (- 18) (* y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) ?x3296 ?x907 (* 24 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917 ?x2917)) (* (- 36) (* x00 z00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 16) (* y00 y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) (* (- 216) (* x00 y00 ?x2274 ?x950 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 108) (* x00 x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* 6 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x2917)) (* (- 216) (* x00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* 216 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917 ?x2917)) (* (- 18) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917 ?x2917)) (* (- 10) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x2917)) (* 12 (* y00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x2917)) ?x1622)))
 (let (($x1718 (= ?x2258 0)))
 (let (($x1890 (not $x1718)))
 (let ((?x2508 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x1372 (* 108 (* x00 x00))))
 (let ((?x1269 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1265 (* z00 z00 z00 y00)))
 (let ((?x1175 (* (- 36) (* z00 y00 x00))))
 (let ((?x1652 (* 108 (* x!3 x!3))))
 (let ((?x1060 (* 16 (* y00 y00 y00))))
 (let ((?x974 (* z00 z00 x00)))
 (let ((?x1225 (* (- 18) ?x974)))
 (let ((?x834 (* y!2 y!2)))
 (let ((?x1878 (* 24 ?x834)))
 (let ((?x846 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x788 (* z00 z00 y00)))
 (let ((?x1326 (* (- 10) ?x788)))
 (let ((?x763 (* z00 y00 y00)))
 (let ((?x798 (* (- 12) ?x763)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x624 (* z00 x00)))
 (let ((?x542 (* 36 ?x624)))
 (let ((?x587 (* z00 y00)))
 (let ((?x952 (* 24 ?x587)))
 (let ((?x534 (* y00 x00)))
 (let ((?x525 (* 216 ?x534)))
 (let ((?x2186 (+ ?x525 ?x952 ?x542 ?x1125 (* 10 (* z00 z00 y!2)) ?x798 ?x1326 ?x846 ?x1878 (* (- 2) (* z00 z00 z00 x!3)) (* (- 216) (* x00 x!3)) (* (- 12) (* y00 y!2 y!2)) ?x1225 (* 108 (* y!2 x!3)) ?x1060 ?x1652 (* 36 (* z00 y00 x!3)) (* 18 (* z00 y00 y!2)) (* (- 6) (* z00 y!2 y!2)) ?x1175 (* (- 1) (* z00 z00 z00 y!2)) ?x1265 ?x1269 ?x1372 (* 18 (* z00 z00 x!3)) (* (- 120) (* y00 y!2)) (* (- 216) (* y00 x!3)) ?x2508 (* (- 108) (* x00 y!2)) (* z00 z00 y!2 y!2) (* (- 24) (* z00 y!2)) (* (- 36) (* z00 x!3)))))
 (let (($x2180 (= ?x2186 0)))
 (let ((?x3243 (* y00 z!1)))
 (let ((?x3245 (* (- 12) ?x3243)))
 (let ((?x2672 (* (- 108) x!3)))
 (let ((?x1151 (* z00 y00 y!2)))
 (let ((?x958 (* y!2 z!1)))
 (let ((?x2439 (* 12 ?x958)))
 (let ((?x859 (* 36 ?x654)))
 (let ((?x2441 (* (- 18) (* x00 z!1))))
 (let ((?x1406 (* 18 (* z!1 x!3))))
 (let ((?x703 (* 6 ?x587)))
 (let ((?x1768 (* (- 72) y!2)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2885 (+ ?x67 ?x74 (* 18 ?x534) ?x1768 ?x703 ?x1406 ?x2441 ?x859 (* 3 (* z00 z00 y!2)) ?x763 (* (- 3) ?x788) ?x2439 (* (- 3) ?x974) (* 18 (* y!2 x!3)) ?x1151 (* 3 (* z00 z!1 x!3)) (* (- 2) (* z00 y!2 y!2)) (* 2 (* y00 y00 z!1)) (* 3 (* z00 z00 x!3)) ?x2672 (* (- 36) (* y00 y!2)) (* (- 1) (* y!2 y!2 z!1)) (* (- 3) (* z00 x00 z!1)) (* (- 18) (* y00 x!3)) (* (- 18) (* x00 y!2)) (* (- 1) (* y00 y!2 z!1)) (* (- 6) (* z00 y!2)) ?x3245)))
 (let (($x2903 (= ?x2885 0)))
 (let ((?x740 (* z00 z00 y!2)))
 (let ((?x2487 (* 24 ?x654)))
 (let ((?x862 (* (- 6) ?x587)))
 (let ((?x2223 (+ ?x67 ?x74 ?x1768 ?x862 (* (- 18) ?x624) ?x1406 ?x2441 ?x2487 ?x740 (* (- 1) ?x788) (* (- 12) ?x834) ?x2439 (* z00 y00 z!1) ?x2672 (* (- 12) (* y00 y!2)) (* (- 1) (* z00 y!2 z!1)) (* 6 (* z00 y!2)) (* 18 (* z00 x!3)) ?x3245)))
 (let (($x2142 (= ?x2223 0)))
 (let ((?x464 (* (- 6) ?x446)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2702 (+ ?x67 ?x55 ?x74 ?x464 ?x1768 (* (- 18) ?x587) (* 6 ?x958) ?x2672 (* (- 1) (* z00 z00 z!1)) (* 12 ?x3243) (* 6 (* z00 z!1)))))
 (let (($x2699 (= ?x2702 0)))
 (let ((?x789 (* (- 6) n00)))
 (let ((?x3028 (+ z00 ?x789 (* 6 n!0) (* (- 1) z!1))))
 (let (($x3029 (= ?x3028 0)))
 (let (($x3214 (and $x3029 $x2189 $x2699 $x2142 $x2903 $x2180 $x1890)))
 (let ((?x2243 (* 24 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 (+ x!3 y!2)))))
 (let ((?x714 (+ x!3 y!2)))
 (let ((?x2161 (* (- 1) (* y00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714))))
 (let ((?x2562 (* (- 2) (* x00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714))))
 (let ((?x1429 (* (- 2) (* x00 z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714))))
 (let ((?x1493 (* (- 16) (* y00 y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x499 (* 2 (* z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714))))
 (let ((?x579 (* (- 10) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x850 (* 2 (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x688 (* (- 18) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x773 (* (- 1) (* y00 z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714))))
 (let ((?x2532 (* (- 2) (* x00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x471 (* (- 1) (* z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714))))
 (let ((?x1094 (* 36 (* x00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x1091 (* 12 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x1082 (* 18 (* x00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x2695 (* (- 1) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714))))
 (let ((?x2980 (* 12 (* y00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x1865 (* 4 (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x3304 (* (- 36) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714))))
 (let ((?x2385 (* 10 (* y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x2461 (* 2 (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714))))
 (let ((?x729 (* (- 1) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x1833 (* 6 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x1106 (* (- 1) (* y00 z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714))))
 (let ((?x1307 (* (- 18) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714))))
 (let ((?x2284 (+ (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714) ?x1307 (* 6 (* z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) ?x1106 (* (- 18) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) (* 24 (* z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 12 (* y00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) ?x1833 ?x729 (* y00 y00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714) (* y00 y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714) (* (- 216) (* x00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) (* 216 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714)) ?x2461 (* (- 18) (* y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714)) ?x2385 ?x3304 (* (- 60) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) (* (- 10) (* z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714)) (* 216 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) (* 108 (* x00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 36 (* z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714)) (* (- 24) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714)) ?x1865 (* (- 216) (* x00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) ?x2980 (* (- 108) (* ?x2274 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714)) (* (- 108) (* x00 x00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 36) (* y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714)) (* (- 36) (* x00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) (* (- 108) (* ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714 ?x714)) (* (- 24) (* y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 216 (* x00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714)) (* 36 (* x00 y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) ?x2695 (* 36 (* x00 y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) (* 120 (* y00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 120 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714)) (* 216 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) (* (- 16) (* y00 y00 y00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 96) (* y00 y00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 216 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714)) ?x1082 ?x1091 ?x1094 (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 24) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714)) (* (- 108) (* x00 x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) ?x471 (* (- 216) (* x00 y00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 10 (* y00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 36) (* x00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) (* (- 10) (* z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 96) (* y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) ?x2532 (* (- 18) (* z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714)) ?x773 (* 6 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714)) ?x688 ?x850 (* 24 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714)) (* (- 36) (* x00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* z00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714) (* 18 (* x00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) ?x579 ?x499 (* z00 z00 z00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714) (* 108 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714)) (* 216 (* y00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714 ?x714)) (* (- 16) (* y00 y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) (* 4 (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x950 ?x714)) (* (- 24) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) ?x1493 ?x1429 (* 12 (* y00 ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 18 (* x00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) (* (- 24) (* ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* (- 108) (* ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714)) (* 4 (* ?x2274 ?x950 ?x950 ?x950 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 12 (* y00 y00 z00 ?x2274 ?x950 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 36 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714 ?x714)) (* 12 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x950 ?x714)) ?x2562 (* (- 18) (* y00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714)) (* (- 108) (* x00 x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) (* (- 96) (* y00 y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) (* y00 y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714) (* 108 (* x00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714)) (* 10 (* y00 z00 z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714)) (* 36 (* z00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x714 ?x714)) ?x2161 (* 120 (* y00 ?x2274 ?x2274 ?x1018 ?x1018 ?x950 ?x950 ?x950 ?x714 ?x714)) ?x2243)))
 (let ((?x533 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x525 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x952 ?x542 ?x1878 ?x1125 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x798 ?x1326 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x846 ?x1652 ?x2508 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1225 (* (- 216) (* x!3 y00)) ?x1060 (* (- 12) (* y!2 y!2 y00)) ?x1175 (* (- 216) (* x!3 x00)) ?x1265 ?x1269 (* 36 (* x!3 z00 y00)) ?x1372)))
 (let ((?x975 (* 3 ?x974)))
 (let ((?x1037 (* 3 ?x788)))
 (let ((?x770 (* (- 1) ?x763)))
 (let ((?x801 (* 18 (* z!1 x00))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x1814 (* z!1 y00)))
 (let ((?x1275 (* 12 ?x1814)))
 (let ((?x2486 (* (- 18) (* x!3 z!1))))
 (let ((?x535 (* (- 18) ?x534)))
 (let ((?x1330 (* (- 12) ?x958)))
 (let ((?x1835 (* y!2 y!2 z!1)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x2084 (* 72 y!2)))
 (let ((?x1554 (* 108 x!3)))
 (let ((?x1708 (+ ?x1554 ?x2084 ?x609 ?x666 (* (- 3) (* y!2 z00 z00)) ?x1835 ?x1330 ?x535 (* (- 18) (* x!3 y!2)) ?x2486 ?x1275 ?x862 ?x957 ?x801 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x770 ?x1037 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x975 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x625 (* 18 ?x624)))
 (let ((?x1025 (+ ?x1554 ?x2084 ?x609 ?x666 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x1330 ?x2486 ?x1275 ?x703 ?x625 (* 12 ?x834) ?x683 ?x801 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x788 (* (- 18) (* x!3 z00)))))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x2789 (+ ?x1554 ?x2084 ?x609 ?x539 ?x666 (* z!1 z00 z00) ?x550 (* (- 6) ?x958) (* (- 12) ?x1814) ?x588 (* (- 6) (* z!1 z00)))))
 (let ((?x517 (* (- 12) y00)))
 (let ((?x516 (* (- 6) z00)))
 (let (($x832 (= (+ (* 12 y!2) (* 6 z!1) ?x516 ?x517 (* (- 1) ?x1899) ?x446) 0)))
 (let (($x1513 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x832 (= ?x2789 0) (= ?x1025 0) (= ?x1708 0) (= ?x533 0) (not (= ?x2284 0)))))
 (let (($x1327 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2305 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1822 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1147 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1056 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1053 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x744 (+ ?x400 (* (- 18) ?x441) (* 6 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x507) (* (- 18) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 24 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 6 ?x1053) (* (- 1) ?x1056) ?x1076 ?x1105 (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x1147) (* (- 18) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 10 ?x1267) (* (- 36) ?x1321) (* (- 60) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 4 ?x1508) (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 12 ?x1562) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 216 (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 36 (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1822) (* 36 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 120 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x1971) (* 12 ?x2003) (* 36 ?x2046) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x2101) (* (- 216) (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2305) (* (- 18) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x2349) (* 6 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 18) ?x2554) (* 2 ?x2611) (* 24 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x2655 (* 18 (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 10) ?x2708) (* 2 ?x2725) ?x2731 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 4 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 16) ?x2868) (* (- 2) ?x2876) (* 12 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 24) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 4 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 2) ?x3102) (* (- 18) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x3142 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x3256) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 24 ?x3303))))
 (let ((?x1372 (* 108 (* x00 x00))))
 (let ((?x1269 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1265 (* z00 z00 z00 y00)))
 (let ((?x1175 (* (- 36) (* z00 y00 x00))))
 (let ((?x1060 (* 16 (* y00 y00 y00))))
 (let ((?x974 (* z00 z00 x00)))
 (let ((?x1225 (* (- 18) ?x974)))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x846 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x788 (* z00 z00 y00)))
 (let ((?x1326 (* (- 10) ?x788)))
 (let ((?x763 (* z00 y00 y00)))
 (let ((?x798 (* (- 12) ?x763)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x624 (* z00 x00)))
 (let ((?x542 (* 36 ?x624)))
 (let ((?x587 (* z00 y00)))
 (let ((?x952 (* 24 ?x587)))
 (let ((?x534 (* y00 x00)))
 (let ((?x525 (* 216 ?x534)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1392 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x525 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x952 ?x542 ?x873 ?x1125 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x798 ?x1326 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x846 ?x878 ?x930 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1225 (* (- 216) (* x y00)) ?x1060 (* (- 12) (* y y y00)) ?x1175 (* (- 216) (* x x00)) ?x1265 ?x1269 (* 36 (* x z00 y00)) ?x1372)))
 (let (($x1397 (= ?x1392 0)))
 (let ((?x975 (* 3 ?x974)))
 (let ((?x1037 (* 3 ?x788)))
 (let ((?x770 (* (- 1) ?x763)))
 (let ((?x700 (* 18 (* z x00))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x862 (* (- 6) ?x587)))
 (let ((?x561 (* z y00)))
 (let ((?x562 (* 12 ?x561)))
 (let ((?x595 (* (- 18) (* x z))))
 (let ((?x535 (* (- 18) ?x534)))
 (let ((?x530 (* y z)))
 (let ((?x554 (* (- 12) ?x530)))
 (let ((?x135 (* y y z)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1093 (+ ?x64 ?x71 ?x609 ?x666 (* (- 3) (* y z00 z00)) ?x135 ?x554 ?x535 (* (- 18) (* x y)) ?x595 ?x562 ?x862 ?x957 ?x700 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x770 ?x1037 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x975 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1100 (= ?x1093 0)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x625 (* 18 ?x624)))
 (let ((?x703 (* 6 ?x587)))
 (let ((?x103 (* y z z00)))
 (let ((?x842 (+ ?x64 ?x71 ?x609 ?x666 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x554 ?x595 ?x562 ?x703 ?x625 ?x631 ?x683 ?x700 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x788 (* (- 18) (* x z00)))))
 (let (($x847 (= ?x842 0)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x682 (+ ?x64 ?x71 ?x609 ?x539 ?x666 ?x76 ?x550 (* (- 6) ?x530) (* (- 12) ?x561) ?x588 (* (- 6) (* z z00)))))
 (let (($x687 (= ?x682 0)))
 (let ((?x50 (* z z)))
 (let ((?x518 (* (- 1) ?x50)))
 (let ((?x517 (* (- 12) y00)))
 (let ((?x516 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x520 (= (+ ?x45 ?x46 ?x516 ?x517 ?x518 ?x446) 0)))
 (let (($x438 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x438 $x520 $x687 $x847 $x1100 $x1397 (not (= ?x744 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x626 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1147 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1822 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1056 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1053 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2305 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2305) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1053) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x2611) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x1056 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1822 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x1147) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let (($x536 (not (= ?x3324 0))))
 (let ((?x1372 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x1060 (* 16 (* y00 y00 y00))))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x1203 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1209 (= ?x1203 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x478 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x475 (* (- 108) x)))
 (let ((?x2112 (* x00 z)))
 (let ((?x2463 (* (- 18) ?x2112)))
 (let ((?x859 (* 36 ?x654)))
 (let ((?x695 (* z y)))
 (let ((?x1770 (* 12 ?x695)))
 (let ((?x671 (* z00 y)))
 (let ((?x2213 (* (- 6) ?x671)))
 (let ((?x1317 (* y00 z00)))
 (let ((?x2108 (* 6 ?x1317)))
 (let ((?x667 (* y00 z)))
 (let ((?x2215 (* (- 12) ?x667)))
 (let ((?x900 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x779 (* z x)))
 (let ((?x585 (* 18 ?x779)))
 (let ((?x935 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x585 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x900 ?x2215 ?x2108 (* (- 36) (* y00 y)) ?x2213 ?x1770 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x859 ?x2463 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x475 ?x67 (* (- 18) (* y00 x)) ?x478 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x545 (* z00 z00 y)))
 (let ((?x672 (* 6 ?x671)))
 (let ((?x716 (* (- 6) ?x1317)))
 (let ((?x2487 (* 24 ?x654)))
 (let ((?x691 (* y00 z00 z)))
 (let ((?x916 (+ ?x691 ?x1770 ?x585 (* (- 18) (* x00 z00)) (* (- 12) ?x628) ?x2487 ?x2463 ?x2215 ?x716 (* (- 12) (* y00 y)) ?x475 ?x67 ?x672 ?x478 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x545)))
 (let ((?x668 (* 12 ?x667)))
 (let ((?x446 (* z00 z00)))
 (let ((?x464 (* (- 6) ?x446)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2552 (+ (* 6 ?x695) ?x55 ?x464 ?x668 (* (- 18) ?x1317) ?x475 ?x67 (* 6 (* z00 z)) ?x478 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x518 (* (- 1) ?x50)))
 (let ((?x516 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x517 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x446 ?x517 ?x45 ?x46 ?x516 ?x518) 0) (= ?x2552 0) (= ?x916 0) (= ?x935 0) $x1209 $x536)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1492 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2305 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1822 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1147 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1056 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1053 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x744 (+ ?x400 (* (- 18) ?x441) (* 6 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x507) (* (- 18) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 24 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 6 ?x1053) (* (- 1) ?x1056) ?x1076 ?x1105 (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x1147) (* (- 18) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 10 ?x1267) (* (- 36) ?x1321) (* (- 60) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 4 ?x1508) (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 12 ?x1562) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 216 (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 36 (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1822) (* 36 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 120 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x1971) (* 12 ?x2003) (* 36 ?x2046) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x2101) (* (- 216) (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2305) (* (- 18) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x2349) (* 6 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 18) ?x2554) (* 2 ?x2611) (* 24 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x2655 (* 18 (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 10) ?x2708) (* 2 ?x2725) ?x2731 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 4 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 16) ?x2868) (* (- 2) ?x2876) (* 12 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 24) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 4 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 2) ?x3102) (* (- 18) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x3142 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x3256) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 24 ?x3303))))
 (let ((?x1372 (* 108 (* x00 x00))))
 (let ((?x1269 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1265 (* z00 z00 z00 y00)))
 (let ((?x1175 (* (- 36) (* z00 y00 x00))))
 (let ((?x1060 (* 16 (* y00 y00 y00))))
 (let ((?x974 (* z00 z00 x00)))
 (let ((?x1225 (* (- 18) ?x974)))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x846 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x788 (* z00 z00 y00)))
 (let ((?x1326 (* (- 10) ?x788)))
 (let ((?x763 (* z00 y00 y00)))
 (let ((?x798 (* (- 12) ?x763)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x624 (* z00 x00)))
 (let ((?x542 (* 36 ?x624)))
 (let ((?x587 (* z00 y00)))
 (let ((?x952 (* 24 ?x587)))
 (let ((?x534 (* y00 x00)))
 (let ((?x525 (* 216 ?x534)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1392 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x525 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x952 ?x542 ?x873 ?x1125 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x798 ?x1326 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x846 ?x878 ?x930 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1225 (* (- 216) (* x y00)) ?x1060 (* (- 12) (* y y y00)) ?x1175 (* (- 216) (* x x00)) ?x1265 ?x1269 (* 36 (* x z00 y00)) ?x1372)))
 (let (($x1397 (= ?x1392 0)))
 (let ((?x975 (* 3 ?x974)))
 (let ((?x1037 (* 3 ?x788)))
 (let ((?x770 (* (- 1) ?x763)))
 (let ((?x700 (* 18 (* z x00))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x862 (* (- 6) ?x587)))
 (let ((?x561 (* z y00)))
 (let ((?x562 (* 12 ?x561)))
 (let ((?x595 (* (- 18) (* x z))))
 (let ((?x535 (* (- 18) ?x534)))
 (let ((?x530 (* y z)))
 (let ((?x554 (* (- 12) ?x530)))
 (let ((?x135 (* y y z)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1093 (+ ?x64 ?x71 ?x609 ?x666 (* (- 3) (* y z00 z00)) ?x135 ?x554 ?x535 (* (- 18) (* x y)) ?x595 ?x562 ?x862 ?x957 ?x700 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x770 ?x1037 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x975 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1100 (= ?x1093 0)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x625 (* 18 ?x624)))
 (let ((?x703 (* 6 ?x587)))
 (let ((?x103 (* y z z00)))
 (let ((?x842 (+ ?x64 ?x71 ?x609 ?x666 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x554 ?x595 ?x562 ?x703 ?x625 ?x631 ?x683 ?x700 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x788 (* (- 18) (* x z00)))))
 (let (($x847 (= ?x842 0)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x682 (+ ?x64 ?x71 ?x609 ?x539 ?x666 ?x76 ?x550 (* (- 6) ?x530) (* (- 12) ?x561) ?x588 (* (- 6) (* z z00)))))
 (let (($x687 (= ?x682 0)))
 (let ((?x50 (* z z)))
 (let ((?x518 (* (- 1) ?x50)))
 (let ((?x517 (* (- 12) y00)))
 (let ((?x516 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x520 (= (+ ?x45 ?x46 ?x516 ?x517 ?x518 ?x446) 0)))
 (let (($x438 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x2621 (and $x438 $x520 $x687 $x847 $x1100 $x1397 (not (= ?x744 0)))))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2305) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1053) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x2611) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x1056 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1822 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x1147) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let (($x536 (not (= ?x3324 0))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1203 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1209 (= ?x1203 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x478 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x475 (* (- 108) x)))
 (let ((?x2112 (* x00 z)))
 (let ((?x2463 (* (- 18) ?x2112)))
 (let ((?x859 (* 36 ?x654)))
 (let ((?x695 (* z y)))
 (let ((?x1770 (* 12 ?x695)))
 (let ((?x671 (* z00 y)))
 (let ((?x2213 (* (- 6) ?x671)))
 (let ((?x1317 (* y00 z00)))
 (let ((?x2108 (* 6 ?x1317)))
 (let ((?x667 (* y00 z)))
 (let ((?x2215 (* (- 12) ?x667)))
 (let ((?x900 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x779 (* z x)))
 (let ((?x585 (* 18 ?x779)))
 (let ((?x935 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x585 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x900 ?x2215 ?x2108 (* (- 36) (* y00 y)) ?x2213 ?x1770 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x859 ?x2463 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x475 ?x67 (* (- 18) (* y00 x)) ?x478 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x545 (* z00 z00 y)))
 (let ((?x672 (* 6 ?x671)))
 (let ((?x716 (* (- 6) ?x1317)))
 (let ((?x2487 (* 24 ?x654)))
 (let ((?x691 (* y00 z00 z)))
 (let ((?x916 (+ ?x691 ?x1770 ?x585 (* (- 18) (* x00 z00)) (* (- 12) ?x628) ?x2487 ?x2463 ?x2215 ?x716 (* (- 12) (* y00 y)) ?x475 ?x67 ?x672 ?x478 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x545)))
 (let ((?x668 (* 12 ?x667)))
 (let ((?x464 (* (- 6) ?x446)))
 (let ((?x2552 (+ (* 6 ?x695) ?x55 ?x464 ?x668 (* (- 18) ?x1317) ?x475 ?x67 (* 6 (* z00 z)) ?x478 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x1540 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x446 ?x517 ?x45 ?x46 ?x516 ?x518) 0) (= ?x2552 0) (= ?x916 0) (= ?x935 0) $x1209 $x536)))
 (rewrite (= $x1540 $x2621))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1773 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1147 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1822 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1056 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1053 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2305 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2305) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1053) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x2611) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x1056 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1822 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x1147) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let (($x536 (not (= ?x3324 0))))
 (let ((?x1372 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x1060 (* 16 (* y00 y00 y00))))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x1203 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1209 (= ?x1203 0)))
 (let ((?x1027 (* y00 z y)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2211 (* z y y)))
 (let ((?x2112 (* x00 z)))
 (let ((?x2109 (* 18 ?x2112)))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x695 (* z y)))
 (let ((?x1301 (* (- 12) ?x695)))
 (let ((?x671 (* z00 y)))
 (let ((?x672 (* 6 ?x671)))
 (let ((?x1317 (* y00 z00)))
 (let ((?x716 (* (- 6) ?x1317)))
 (let ((?x667 (* y00 z)))
 (let ((?x668 (* 12 ?x667)))
 (let ((?x779 (* z x)))
 (let ((?x599 (* (- 18) ?x779)))
 (let ((?x967 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x599 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x668 ?x716 (* 36 (* y00 y)) ?x672 ?x1301 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x957 ?x2109 ?x2211 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x609 (* 18 (* y00 x)) ?x71 ?x666 ?x1027 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x1735 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2213 (* (- 6) ?x671)))
 (let ((?x2108 (* 6 ?x1317)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x937 (+ (* (- 1) (* y00 z00 z)) ?x1301 ?x599 (* 18 (* x00 z00)) ?x631 ?x683 ?x2109 ?x668 ?x2108 (* 12 (* y00 y)) ?x64 ?x609 ?x2213 ?x71 ?x666 ?x99 (* (- 18) (* z00 x)) ?x1735 (* (- 1) (* z00 z00 y)))))
 (let ((?x498 (* z00 z00 z)))
 (let ((?x2215 (* (- 12) ?x667)))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x826 (+ (* (- 6) ?x695) ?x539 ?x550 ?x2215 (* 18 ?x1317) ?x64 ?x609 (* (- 6) (* z00 z)) ?x71 ?x666 ?x498)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x664 (* (- 1) ?x446)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x664 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x826 0) (= ?x937 0) (= ?x967 0) $x1209 $x536))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2591 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1147 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1822 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1056 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1053 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2305 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2305) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1053) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x2611) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x1056 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1822 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x1147) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let (($x536 (not (= ?x3324 0))))
 (let ((?x1372 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x1060 (* 16 (* y00 y00 y00))))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x1203 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1209 (= ?x1203 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x478 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x475 (* (- 108) x)))
 (let ((?x2112 (* x00 z)))
 (let ((?x2463 (* (- 18) ?x2112)))
 (let ((?x859 (* 36 ?x654)))
 (let ((?x695 (* z y)))
 (let ((?x1770 (* 12 ?x695)))
 (let ((?x671 (* z00 y)))
 (let ((?x2213 (* (- 6) ?x671)))
 (let ((?x1317 (* y00 z00)))
 (let ((?x2108 (* 6 ?x1317)))
 (let ((?x667 (* y00 z)))
 (let ((?x2215 (* (- 12) ?x667)))
 (let ((?x900 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x779 (* z x)))
 (let ((?x585 (* 18 ?x779)))
 (let ((?x935 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x585 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x900 ?x2215 ?x2108 (* (- 36) (* y00 y)) ?x2213 ?x1770 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x859 ?x2463 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x475 ?x67 (* (- 18) (* y00 x)) ?x478 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x545 (* z00 z00 y)))
 (let ((?x672 (* 6 ?x671)))
 (let ((?x716 (* (- 6) ?x1317)))
 (let ((?x2487 (* 24 ?x654)))
 (let ((?x691 (* y00 z00 z)))
 (let ((?x916 (+ ?x691 ?x1770 ?x585 (* (- 18) (* x00 z00)) (* (- 12) ?x628) ?x2487 ?x2463 ?x2215 ?x716 (* (- 12) (* y00 y)) ?x475 ?x67 ?x672 ?x478 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x545)))
 (let ((?x668 (* 12 ?x667)))
 (let ((?x446 (* z00 z00)))
 (let ((?x464 (* (- 6) ?x446)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2552 (+ (* 6 ?x695) ?x55 ?x464 ?x668 (* (- 18) ?x1317) ?x475 ?x67 (* 6 (* z00 z)) ?x478 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x518 (* (- 1) ?x50)))
 (let ((?x516 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x517 (* (- 12) y00)))
 (let (($x1540 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x446 ?x517 ?x45 ?x46 ?x516 ?x518) 0) (= ?x2552 0) (= ?x916 0) (= ?x935 0) $x1209 $x536)))
 (let ((?x1027 (* y00 z y)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2211 (* z y y)))
 (let ((?x2109 (* 18 ?x2112)))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x1301 (* (- 12) ?x695)))
 (let ((?x599 (* (- 18) ?x779)))
 (let ((?x967 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x599 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x900) ?x668 ?x716 (* 36 (* y00 y)) ?x672 ?x1301 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x957 ?x2109 ?x2211 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x609 (* 18 (* y00 x)) ?x71 ?x666 ?x1027 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x545))))
 (let ((?x1735 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x937 (+ (* (- 1) ?x691) ?x1301 ?x599 (* 18 (* x00 z00)) ?x631 ?x683 ?x2109 ?x668 ?x2108 (* 12 (* y00 y)) ?x64 ?x609 ?x2213 ?x71 ?x666 ?x99 (* (- 18) (* z00 x)) ?x1735 (* (- 1) ?x545))))
 (let ((?x498 (* z00 z00 z)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x826 (+ (* (- 6) ?x695) ?x539 ?x550 ?x2215 (* 18 ?x1317) ?x64 ?x609 (* (- 6) (* z00 z)) ?x71 ?x666 ?x498)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x664 (* (- 1) ?x446)))
 (let (($x1240 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x664 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x826 0) (= ?x937 0) (= ?x967 0) $x1209 $x536)))
 (rewrite (= $x1240 $x1540)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x393 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x219 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x370 (* 2 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x353 (* 2 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00 z00)))
 (let ((?x261 (* 2 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x220 (* 2 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x222 (+ (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00) ?x220 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x228 (+ (- ?x222 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00)) (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219) (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x232 (- (- ?x228 (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x237 (- (+ ?x232 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217)) (* 2 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x238 (- ?x237 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x240 (+ ?x238 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x245 (+ (- ?x240 (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00)) (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219) (* 216 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x247 (- ?x245 (* 6 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x251 (+ ?x247 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00) (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 18 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x256 (- (- ?x251 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217)) (* 4 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x260 (+ (- ?x256 (* 216 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219)) (* 60 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x264 (- (- ?x260 ?x261) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x266 (+ ?x264 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x268 (- ?x266 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x270 (+ ?x268 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x272 (- ?x270 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x274 (+ ?x272 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x276 (- ?x274 (* 4 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x281 (+ ?x276 (* 108 ?x215 ?x216 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219) (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x285 (- ?x281 (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x286 (- ?x285 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00 z00))))
 (let ((?x287 (- ?x286 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x292 (- (+ ?x287 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x297 (+ (- ?x292 (* 120 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219)) (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 16 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 y00) (* 96 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00))))
 (let ((?x300 (- ?x297 (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x301 (- ?x300 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x305 (+ ?x301 (* 216 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x307 (- ?x305 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x309 (+ ?x307 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x311 (- ?x309 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00))))
 (let ((?x314 (+ ?x311 (* 96 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00 z00))))
 (let ((?x318 (- (- ?x314 (* 120 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00)) (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x320 (+ ?x318 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x322 (- ?x320 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x324 (+ ?x322 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x328 (- ?x324 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x329 (- ?x328 (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x330 (- ?x329 (* 2 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x332 (+ ?x330 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x337 (+ (- ?x332 (* 108 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219)) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x339 (- ?x337 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x341 (+ ?x339 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x344 (- ?x341 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x345 (- ?x344 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x347 (+ ?x345 (* 16 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219))))
 (let ((?x351 (- (- ?x347 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00)) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x354 (+ ?x351 (* 16 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219) ?x353)))
 (let ((?x357 (- ?x354 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00))))
 (let ((?x358 (- ?x357 (* 18 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x361 (+ ?x358 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x366 (- ?x361 (* 4 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x367 (- ?x366 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00))))
 (let ((?x368 (- ?x367 (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x369 (- ?x368 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x374 (+ ?x369 ?x370 (* 18 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 108 ?x215 ?x215 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219) (* 96 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219))))
 (let ((?x379 (- ?x374 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x380 (- ?x379 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x381 (- ?x380 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x384 (+ (- ?x381 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00)) (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x387 (- ?x384 (* 120 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let (($x389 (= (- ?x387 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00)) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x389)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1253 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1147 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1822 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1056 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2611 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1053 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2305 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2305) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1053) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x2611) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x1056 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1822 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x1147) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let (($x536 (not (= ?x3324 0))))
 (let ((?x1372 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x1060 (* 16 (* y00 y00 y00))))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x1203 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x1209 (= ?x1203 0)))
 (let ((?x1027 (* y00 z y)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2211 (* z y y)))
 (let ((?x2112 (* x00 z)))
 (let ((?x2109 (* 18 ?x2112)))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x695 (* z y)))
 (let ((?x1301 (* (- 12) ?x695)))
 (let ((?x671 (* z00 y)))
 (let ((?x672 (* 6 ?x671)))
 (let ((?x1317 (* y00 z00)))
 (let ((?x716 (* (- 6) ?x1317)))
 (let ((?x667 (* y00 z)))
 (let ((?x668 (* 12 ?x667)))
 (let ((?x779 (* z x)))
 (let ((?x599 (* (- 18) ?x779)))
 (let ((?x967 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x599 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x668 ?x716 (* 36 (* y00 y)) ?x672 ?x1301 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x957 ?x2109 ?x2211 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x609 (* 18 (* y00 x)) ?x71 ?x666 ?x1027 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x1735 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2213 (* (- 6) ?x671)))
 (let ((?x2108 (* 6 ?x1317)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x937 (+ (* (- 1) (* y00 z00 z)) ?x1301 ?x599 (* 18 (* x00 z00)) ?x631 ?x683 ?x2109 ?x668 ?x2108 (* 12 (* y00 y)) ?x64 ?x609 ?x2213 ?x71 ?x666 ?x99 (* (- 18) (* z00 x)) ?x1735 (* (- 1) (* z00 z00 y)))))
 (let ((?x498 (* z00 z00 z)))
 (let ((?x2215 (* (- 12) ?x667)))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x826 (+ (* (- 6) ?x695) ?x539 ?x550 ?x2215 (* 18 ?x1317) ?x64 ?x609 (* (- 6) (* z00 z)) ?x71 ?x666 ?x498)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x664 (* (- 1) ?x446)))
 (let (($x1240 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x664 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x826 0) (= ?x937 0) (= ?x967 0) $x1209 $x536)))
 (let ((?x219 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x370 (* 2 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x353 (* 2 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00 z00)))
 (let ((?x261 (* 2 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x220 (* 2 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x222 (+ (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00) ?x220 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x228 (+ (- ?x222 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00)) (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219) (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x232 (- (- ?x228 (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x237 (- (+ ?x232 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217)) (* 2 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x238 (- ?x237 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x240 (+ ?x238 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x245 (+ (- ?x240 (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00)) (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219) (* 216 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x247 (- ?x245 (* 6 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x251 (+ ?x247 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00) (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 18 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x256 (- (- ?x251 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217)) (* 4 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x260 (+ (- ?x256 (* 216 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219)) (* 60 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x264 (- (- ?x260 ?x261) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x266 (+ ?x264 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x268 (- ?x266 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x270 (+ ?x268 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x272 (- ?x270 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x274 (+ ?x272 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x276 (- ?x274 (* 4 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x281 (+ ?x276 (* 108 ?x215 ?x216 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219) (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x285 (- ?x281 (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x286 (- ?x285 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00 z00))))
 (let ((?x287 (- ?x286 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x292 (- (+ ?x287 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x297 (+ (- ?x292 (* 120 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219)) (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 16 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 y00) (* 96 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00))))
 (let ((?x300 (- ?x297 (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x301 (- ?x300 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x305 (+ ?x301 (* 216 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x307 (- ?x305 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x309 (+ ?x307 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x311 (- ?x309 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00))))
 (let ((?x314 (+ ?x311 (* 96 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00 z00))))
 (let ((?x318 (- (- ?x314 (* 120 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00)) (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x320 (+ ?x318 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x322 (- ?x320 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x324 (+ ?x322 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x328 (- ?x324 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x329 (- ?x328 (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x330 (- ?x329 (* 2 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x332 (+ ?x330 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x337 (+ (- ?x332 (* 108 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219)) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x339 (- ?x337 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x341 (+ ?x339 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x344 (- ?x341 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x345 (- ?x344 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x347 (+ ?x345 (* 16 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219))))
 (let ((?x351 (- (- ?x347 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00)) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x354 (+ ?x351 (* 16 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219) ?x353)))
 (let ((?x357 (- ?x354 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00))))
 (let ((?x358 (- ?x357 (* 18 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x361 (+ ?x358 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x366 (- ?x361 (* 4 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x367 (- ?x366 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00))))
 (let ((?x368 (- ?x367 (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x369 (- ?x368 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x374 (+ ?x369 ?x370 (* 18 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 108 ?x215 ?x215 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219) (* 96 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219))))
 (let ((?x379 (- ?x374 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x380 (- ?x379 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x381 (- ?x380 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x384 (+ (- ?x381 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00)) (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x387 (- ?x384 (* 120 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let (($x389 (= (- ?x387 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00)) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x392 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x389)))))
 (rewrite (= $x392 $x1240))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x394 (asserted $x393)))
 (let ((@x463 (mp (mp @x394 (quant-intro (proof-bind ?x1253) (= $x393 $x1773)) $x1773) (rewrite (= $x1773 $x1773)) $x1773)))
 (let ((@x751 (mp (mp @x463 (quant-intro (proof-bind ?x2591) (= $x1773 $x626)) $x626) (quant-intro (proof-bind ?x1492) (= $x626 $x1327)) $x1327)))
 (let ((@x2194 (mp (mp~ @x751 (sk (~ $x1327 $x1513)) $x1513) (rewrite (= $x1513 $x3214)) $x3214)))
 (let ((@x2181 (and-elim @x2194 $x2189)))
 (let ((@x2727 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2189) $x3081)) @x2181 $x3081)))
 (let (($x2638 (>= ?x2191 0)))
 (let ((@x676 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2189) $x2638)) @x2181 $x2638)))
 (let (($x754 (<= ?x2223 0)))
 (let ((@x1057 (and-elim @x2194 $x2142)))
 (let ((@x2387 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2142) $x754)) @x1057 $x754)))
 (let (($x3235 (>= ?x2223 0)))
 (let ((@x459 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2142) $x3235)) @x1057 $x3235)))
 (let (($x1501 (<= ?x2702 0)))
 (let ((@x515 (and-elim @x2194 $x2699)))
 (let ((@x1280 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2699) $x1501)) @x515 $x1501)))
 (let (($x3236 (>= ?x2702 0)))
 (let ((@x1077 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2699) $x3236)) @x515 $x3236)))
 (let (($x3244 (<= ?x3028 0)))
 (let ((@x973 (and-elim @x2194 $x3029)))
 (let ((@x2762 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3029) $x3244)) @x973 $x3244)))
 (let (($x1504 (>= ?x3028 0)))
 (let ((@x2383 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3029) $x1504)) @x973 $x1504)))
 (let (($x3092 (<= ?x2186 0)))
 (let ((@x1058 (and-elim @x2194 $x2180)))
 (let ((@x2369 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2180) $x3092)) @x1058 $x3092)))
 (let (($x2915 (>= ?x2186 0)))
 (let ((@x926 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2180) $x2915)) @x1058 $x2915)))
 (let (($x2911 (<= ?x2885 0)))
 (let ((@x1080 (and-elim @x2194 $x2903)))
 (let ((@x575 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2903) $x2911)) @x1080 $x2911)))
 (let (($x1039 (>= ?x2885 0)))
 (let ((@x640 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2903) $x1039)) @x1080 $x1039)))
 (let (($x2332 (not (<= ?x2258 0))))
 (let (($x3248 (>= ?x2258 0)))
 (let ((@x2037 ((_ th-lemma arith) (hypothesis (not $x3248)) @x2383 @x2762 @x640 @x575 @x676 @x2727 @x2383 @x2762 @x926 @x2369 @x459 @x2387 @x640 @x575 @x926 @x2369 @x640 @x575 @x459 @x2387 @x926 @x2369 @x640 @x575 @x926 @x2369 @x2383 @x2762 @x1077 @x1280 @x459 @x2387 @x459 @x2387 @x676 @x2727 false)))
 (let ((@x1819 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1718 $x2332 (not $x3248))) (and-elim @x2194 $x1890) (or $x2332 (not $x3248)))))
 ((_ th-lemma arith) (unit-resolution @x1819 (lemma @x2037 $x3248) $x2332) @x2383 @x2762 @x640 @x575 @x676 @x2727 @x2383 @x2762 @x926 @x2369 @x459 @x2387 @x640 @x575 @x926 @x2369 @x640 @x575 @x459 @x2387 @x926 @x2369 @x640 @x575 @x926 @x2369 @x2383 @x2762 @x1077 @x1280 @x459 @x2387 @x459 @x2387 @x676 @x2727 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        38
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1194
 :arith-nonlinear-bounds    30
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      10
 :arith-tableau-max-columns 196
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                5.76
 :memory                    3.57
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                183927475
 :num-checks                1
 :propagations              14
 :rlimit-count              327347
 :time                      0.40
 :total-time                0.43)
