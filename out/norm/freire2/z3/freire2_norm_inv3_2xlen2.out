unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x2116 (* (- 1) s!1)))
 (let ((?x357 (* r00 r00)))
 (let ((?x1946 (* (- 3) ?x357)))
 (let ((?x1767 (+ s00 ?x1946 ?x2116 (* 3 (* r!2 r!2)))))
 (let (($x2493 (<= ?x1767 0)))
 (let (($x1351 (= ?x1767 0)))
 (let ((?x2514 (* 6 r!2)))
 (let ((?x1983 (+ 3 s!1 ?x2514)))
 (let ((?x2722 (+ ?x2116 x!0)))
 (let ((?x1591 (+ 1 r!2)))
 (let ((?x1555 (* 6 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983))))
 (let ((?x2764 (* s00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x2495 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x2348 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x2236 (* s00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x2115 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1900 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1892 (* r00 r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1745 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1725 (* x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x2475 (* (- 6) (* r00 r00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983))))
 (let ((?x1698 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x1609 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x920 (* (- 6) (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983))))
 (let ((?x1567 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1557 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x1525 (* r00 r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1443 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x995 (* 6 (* r00 r00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983))))
 (let ((?x1327 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x1233 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x1202 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1144 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1112 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1029 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x980 (* r00 x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x978 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x890 (* r00 x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x873 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x829 (* r00 r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x822 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)))
 (let ((?x755 (* r00 r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x672 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x635 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x505 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x419 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983)))
 (let ((?x413 (* x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)))
 (let ((?x1207 (+ (* 18 ?x413) (* 9 ?x419) (* (- 6) ?x505) (* (- 9) (* ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* 9 (* r00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983)) (* 18 ?x635) (* (- 3) ?x672) (* 3 (* ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* 6 ?x755) (* (- 18) (* r00 x00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* 9 ?x822) (* 6 ?x829) (* 2 (* s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 9) ?x873) (* (- 3) (* ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983)) (* 18 ?x890) (* 9 (* r00 s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* (- 9) ?x978) (* (- 18) ?x980) (* (- 2) (* ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 12) ?x1029) (* (- 18) (* ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 9) (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* 3 ?x1112) (* (- 18) ?x1144) (* 3 (* s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* 6 ?x1202) (* (- 2) ?x1233) (* 4 (* s00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* 9 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 18) (* x00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* 2 ?x1327) ?x995 (* 6 (* r00 r00 s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* (- 3) ?x1443) (* (- 6) ?x1525) (* 9 ?x1557) (* (- 9) ?x1567) ?x920 (* 18 ?x1609) (* (- 2) ?x1698) (* (- 3) (* s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* (- 12) (* r00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) ?x2475 (* (- 18) ?x1725) (* 2 ?x1745) (* (- 6) ?x1892) (* 3 ?x1900) (* (- 4) (* s00 s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* 18 (* ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* (- 2) (* s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 9) (* r00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 9) (* r00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 9) ?x2115) (* 18 (* x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 6) (* r00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* 4 ?x2236) (* (- 6) (* r00 r00 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* 9 (* s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* 9 ?x2348) (* 18 (* r00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983)) (* (- 6) ?x2495) (* 18 (* r00 x00 ?x1591 ?x1591 ?x1591 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983)) (* 2 (* ?x1591 ?x1591 ?x2722 ?x2722 ?x1983 ?x1983 ?x1983 ?x1983 ?x1983)) (* (- 4) ?x2764) ?x1555)))
 (let (($x374 (= ?x1207 0)))
 (let (($x2360 (not $x374)))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1563 (* 108 ?x1404)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x398 (* 16 ?x1242)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1806 (* (- 432) ?x940)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1296 (* (- 108) ?x863)))
 (let ((?x1003 (* (- 9) s!1)))
 (let ((?x703 (* s00 r00 r00)))
 (let ((?x484 (* (- 36) ?x703)))
 (let ((?x647 (* s00 s00)))
 (let ((?x2767 (* 51 ?x647)))
 (let ((?x585 (* r00 r00 s!1)))
 (let ((?x502 (* 36 ?x585)))
 (let ((?x578 (* r00 x00)))
 (let ((?x698 (* 108 ?x578)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1305 (+ ?x137 (* (- 108) (* r00 x!0)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x698 ?x502 ?x2767 ?x484 ?x1003 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* 432 (* r00 r00 r00 x!0)) (* 54 (* r00 s!1)) ?x1296 ?x1806 (* 36 (* r00 r00 s!1 s!1)) (* 108 (* x00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x398 (* (- 108) (* s!1 x!0)) ?x1563 (* (- 4) (* s!1 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 66) (* s00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* 108 (* x!0 x!0)) (* (- 216) (* x00 x!0)) (* 15 (* s!1 s!1)) (* 108 (* s00 x!0)) (* (- 12) (* s00 s!1 s!1)))))
 (let (($x819 (= ?x1305 0)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x1885 (* 36 ?x935)))
 (let ((?x1905 (* (- 6) ?x863)))
 (let ((?x478 (* 15 ?x647)))
 (let ((?x1849 (* 54 ?x578)))
 (let ((?x1605 (+ ?x137 (* (- 54) (* r00 x!0)) (* (- 24) (* s00 r00)) (* (- 36) (* r00 r00 x!0)) ?x1849 ?x502 ?x478 ?x484 ?x1003 (* 2 (* s00 s00 r00)) (* 24 (* r00 s!1)) ?x1905 ?x1885 (* 6 (* x00 s!1)) (* (- 6) (* s!1 x!0)) (* (- 2) (* s00 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* (- 54) (* x!0 r!2)) (* (- 24) (* s00 r!2)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 36) (* r00 x!0 r!2)) (* (- 3) (* s!1 s!1)) (* 36 (* r00 x00 r!2)) (* 6 (* s00 x!0)) (* 24 (* s!1 r!2)) (* (- 2) (* s!1 s!1 r!2)))))
 (let (($x1773 (= ?x1605 0)))
 (let ((?x364 (* (- 3) s!1)))
 (let ((?x1752 (* 4 ?x647)))
 (let ((?x381 (* 18 ?x578)))
 (let ((?x44 (* 3 s00)))
 (let ((?x352 (+ ?x44 (* (- 6) (* r00 s!1 r!2)) (* (- 18) (* r00 x!0)) (* (- 9) (* s00 r00)) (* 6 (* s00 r00 r!2)) ?x381 (* 6 ?x585) ?x1752 (* (- 6) ?x703) ?x364 (* 9 (* r00 s!1)) (* (- 18) (* x!0 r!2)) (* (- 9) (* s00 r!2)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* (- 2) (* s!1 s!1)) (* 9 (* s!1 r!2)))))
 (let (($x1669 (= ?x352 0)))
 (let ((?x994 (* 3 r!2)))
 (let ((?x379 (* 6 x!0)))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x482 (* s00 r00)))
 (let ((?x560 (* (- 6) ?x482)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x1654 (+ ?x44 ?x556 ?x557 ?x560 ?x526 ?x364 ?x379 (* (- 12) (* r00 r00 r!2)) ?x994 (* 4 (* s00 r!2)) (* 2 (* s!1 r!2)))))
 (let (($x520 (= ?x1654 0)))
 (let (($x925 (and $x1351 $x520 $x1669 $x1773 $x819 $x2360)))
 (let ((?x2719 (+ 3 ?x2514 s!1)))
 (let ((?x2264 (* (- 6) (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719))))
 (let ((?x1079 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x462 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x590 (* r00 x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x1005 (* x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x1408 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x2071 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x1824 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x1309 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x2054 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x444 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x732 (* x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x1036 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x1775 (* r00 r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x675 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x2538 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x1595 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x1937 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x2534 (* s00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x1241 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x584 (* 6 (* r00 r00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719))))
 (let ((?x2353 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x1534 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x740 (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x1030 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x2273 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x2463 (* r00 r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x2090 (* 6 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719))))
 (let ((?x2691 (* r00 r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x2733 (* r00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x1972 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)))
 (let ((?x894 (* r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x2262 (* (- 6) (* r00 r00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719))))
 (let ((?x1225 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x1179 (* r00 r00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x1934 (* s00 s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)))
 (let ((?x2179 (* r00 x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719)))
 (let ((?x2359 (+ (* 2 (* ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 18) (* x00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* (- 18) ?x2179) (* 4 ?x1934) (* (- 3) (* ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 18) (* ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 6) ?x1179) (* (- 9) (* r00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* 3 ?x1225) (* 9 (* s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* 18 (* r00 x00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 2) (* s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719)) ?x2262 (* (- 12) ?x894) (* (- 6) (* r00 r00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* 2 ?x1972) (* 4 (* s00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* 9 ?x2733) (* 6 ?x2691) (* (- 4) (* s00 s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* (- 2) (* ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719)) ?x2090 (* 6 ?x2463) (* (- 9) ?x2273) (* (- 18) (* r00 x00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* 9 ?x1030) (* (- 2) ?x740) (* 9 ?x1534) (* (- 3) ?x2353) ?x584 (* (- 3) (* s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* 18 ?x1241) (* 9 (* ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 4) ?x2534) (* 2 (* s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* 3 ?x1937) (* 9 (* r00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 18) ?x1595) (* (- 6) ?x2538) (* (- 6) ?x675) (* (- 6) ?x1775) (* 3 (* s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* 2 ?x1036) (* 9 (* r00 s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* (- 18) ?x732) (* 6 (* r00 r00 s00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* (- 6) (* r00 s00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* 18 ?x444) (* 18 (* x00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 9) ?x2054) (* (- 9) ?x1309) (* 6 ?x1824) (* (- 12) (* r00 ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 2) ?x2071) (* (- 9) (* ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 9) ?x1408) (* 18 (* r00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* 18 ?x1005) (* 18 ?x590) (* (- 3) ?x462) (* 3 (* ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* (- 9) (* s00 ?x1591 ?x1591 ?x1591 ?x1591 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* 18 (* ?x1591 ?x1591 ?x1591 ?x2722 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719)) (* (- 9) (* r00 ?x1591 ?x1591 ?x2722 ?x2722 ?x2719 ?x2719 ?x2719 ?x2719)) (* 9 ?x1079) ?x2264)))
 (let ((?x1434 (* (- 108) ?x1404)))
 (let ((?x1433 (* (- 16) ?x1242)))
 (let ((?x1114 (* s00 r00 r00 r00)))
 (let ((?x1429 (* (- 216) ?x1114)))
 (let ((?x941 (* 432 ?x940)))
 (let ((?x1187 (* 108 ?x863)))
 (let ((?x791 (* s00 s00 r00 r00)))
 (let ((?x792 (* 36 ?x791)))
 (let ((?x726 (* s00 s00 r00)))
 (let ((?x1070 (* 108 ?x726)))
 (let ((?x1058 (* 36 ?x703)))
 (let ((?x1423 (* (- 51) ?x647)))
 (let ((?x2794 (* s!1 r00 r00)))
 (let ((?x2114 (* (- 36) ?x2794)))
 (let ((?x1420 (* (- 108) ?x578)))
 (let ((?x571 (* s00 r00 x00)))
 (let ((?x1419 (* (- 216) ?x571)))
 (let ((?x580 (* 54 ?x482)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x1832 (* 9 s!1)))
 (let ((?x1260 (+ ?x1832 ?x1045 ?x580 ?x1419 ?x1420 (* (- 15) (* s!1 s!1)) ?x2114 ?x1423 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1058 ?x1070 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x792 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1187 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x941 (* 12 (* s!1 s!1 s00)) ?x1429 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1433 (* 216 (* x!0 x00)) ?x1434)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x754 (* (- 2) ?x726)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x624 (* 24 ?x482)))
 (let ((?x1080 (+ ?x1832 ?x1045 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x624 ?x611 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x2114 ?x974 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1058 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x754 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x864 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x948 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x704 (* 6 ?x703)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x597 (* 9 ?x482)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x1306 (+ (* 3 s!1) ?x434 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x597 ?x592 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2794) ?x660 (* 18 (* x!0 r00)) ?x704 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1805 (+ ?x994 ?x364 ?x379 ?x44 ?x556 ?x557 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x560 ?x526)))
 (let (($x1059 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x357)) 0)))
 (let (($x2052 (and $x1059 (= ?x1805 0) (= ?x1306 0) (= ?x1080 0) (= ?x1260 0) (not (= ?x2359 0)))))
 (let (($x2200 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1444 (+ 3 ?x213 s)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x1450 (+ ?x336 x)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x1121 (* (- 6) (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x2770 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x2568 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2562 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2513 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2369 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2350 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x2268 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2239 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2171 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2086 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1933 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1868 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1776 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1772 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1759 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1687 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1682 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1642 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1508 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2176 (* 6 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1373 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1353 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1346 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1318 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1297 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1284 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1361 (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1024 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1013 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x911 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x846 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x970 (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x730 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x620 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x517 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x515 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1105 (+ (* 2 (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x515) (* 4 ?x517) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) ?x620) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 ?x730) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) ?x970 (* (- 12) ?x846) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 ?x911) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 ?x1013) (* 6 ?x1024) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) ?x1361 (* 6 ?x1284) (* (- 9) ?x1297) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 ?x1318) (* (- 2) ?x1346) (* 9 ?x1353) (* (- 3) ?x1373) ?x2176 (* (- 3) (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 ?x1508) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 4) ?x1642) (* 2 (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 ?x1682) (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x1687) (* (- 6) ?x1759) (* (- 6) ?x1772) (* (- 6) ?x1776) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 ?x1868) (* 9 (* r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x1933) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 ?x2086) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x2171) (* (- 9) ?x2239) (* 6 ?x2268) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 2) ?x2350) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x2369) (* 18 (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 ?x2513) (* 18 ?x2562) (* (- 3) ?x2568) (* 3 (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 ?x2770) ?x1121)))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1434 (* (- 108) ?x1404)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x1433 (* (- 16) ?x1242)))
 (let ((?x1114 (* s00 r00 r00 r00)))
 (let ((?x1429 (* (- 216) ?x1114)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x941 (* 432 ?x940)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1187 (* 108 ?x863)))
 (let ((?x791 (* s00 s00 r00 r00)))
 (let ((?x792 (* 36 ?x791)))
 (let ((?x726 (* s00 s00 r00)))
 (let ((?x1070 (* 108 ?x726)))
 (let ((?x703 (* s00 r00 r00)))
 (let ((?x1058 (* 36 ?x703)))
 (let ((?x647 (* s00 s00)))
 (let ((?x1423 (* (- 51) ?x647)))
 (let ((?x621 (* s r00 r00)))
 (let ((?x922 (* (- 36) ?x621)))
 (let ((?x578 (* r00 x00)))
 (let ((?x1420 (* (- 108) ?x578)))
 (let ((?x571 (* s00 r00 x00)))
 (let ((?x1419 (* (- 216) ?x571)))
 (let ((?x482 (* s00 r00)))
 (let ((?x580 (* 54 ?x482)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1435 (+ ?x143 ?x1045 ?x580 ?x1419 ?x1420 (* (- 15) (* s s)) ?x922 ?x1423 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1058 ?x1070 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x792 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1187 (* 108 (* s x)) (* (- 108) (* x x)) ?x941 (* 12 (* s s s00)) ?x1429 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1433 (* 216 (* x x00)) ?x1434)))
 (let (($x1436 (= ?x1435 0)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x754 (* (- 2) ?x726)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x624 (* 24 ?x482)))
 (let ((?x1137 (+ ?x143 ?x1045 (* (- 24) (* r s)) (* 24 (* r s00)) ?x624 ?x611 ?x627 (* 54 (* r x)) (* 36 (* r x r00)) ?x922 ?x974 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1058 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x754 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x864 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x948 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1142 (= ?x1137 0)))
 (let ((?x704 (* 6 ?x703)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x597 (* 9 ?x482)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x801 (+ ?x47 ?x434 (* (- 9) (* r s)) (* 9 (* r s00)) ?x597 ?x592 ?x602 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x621) ?x660 (* 18 (* x r00)) ?x704 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x808 (= ?x801 0)))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x560 (* (- 6) ?x482)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x555 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x561 (+ ?x43 ?x555 ?x56 ?x44 ?x556 ?x557 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x560 ?x526)))
 (let (($x562 (= ?x561 0)))
 (let ((?x357 (* r00 r00)))
 (let ((?x358 (* 3 ?x357)))
 (let ((?x387 (* (- 1) s00)))
 (let (($x390 (= (+ s ?x387 (* (- 3) (* r r)) ?x358) 0)))
 (and $x390 $x562 $x808 $x1142 $x1436 (not (= ?x1105 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2747 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x572 (+ 3 s ?x213)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x913 (+ x ?x336)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2377 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x447 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x724 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x931 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1200 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1645 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x506 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2413 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x415 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1261 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x533 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2700 (+ (* 9 (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x533) (* (- 9) (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 2 ?x1261) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 3 (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 4) ?x415) (* (- 3) (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 3) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 3 ?x2413) (* (- 6) ?x506) (* 12 ?x1645) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 ?x1200) (* (- 18) ?x931) (* (- 2) (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 2) (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x724) (* 2 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 3) ?x1065) (* 6 ?x1132) (* 2 ?x1188) (* 18 ?x1252) (* 6 ?x1313) (* 9 ?x1372) (* (- 2) ?x1438) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x447) (* 3 ?x481) (* (- 9) ?x534) (* (- 9) ?x563) (* 18 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 ?x1539) (* (- 3) ?x1740) (* (- 18) ?x1763) (* 9 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) ?x1976) (* 3 (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x2072) (* 6 (* r00 r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 4 (* s00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x1638) (* (- 9) ?x2300) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 ?x2442) (* (- 2) ?x1827) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 18) ?x2092) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 2 (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x2763) (* 9 ?x2544) (* (- 6) ?x2377) (* (- 6) ?x2618) (* (- 18) ?x2621) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 12 (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 9 ?x2778) (* 4 ?x2740))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1563 (* 108 ?x1404)))
 (let ((?x1803 (* (- 9) s)))
 (let ((?x2057 (* r00 r00 s00)))
 (let ((?x1157 (* (- 36) ?x2057)))
 (let ((?x137 (* 9 s00)))
 (let ((?x647 (* s00 s00)))
 (let ((?x2767 (* 51 ?x647)))
 (let ((?x1542 (* r00 r00 s)))
 (let ((?x477 (* 36 ?x1542)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x398 (* 16 ?x1242)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1296 (* (- 108) ?x863)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1806 (* (- 432) ?x940)))
 (let ((?x578 (* r00 x00)))
 (let ((?x698 (* 108 ?x578)))
 (let ((?x1651 (+ (* 216 (* r00 s00 x00)) ?x698 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1806 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1296 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x398 (* (- 108) (* x s)) ?x477 ?x2767 (* (- 108) (* r00 x)) ?x137 ?x1157 ?x1803 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1563)))
 (let (($x1643 (= ?x1651 0)))
 (let ((?x478 (* 15 ?x647)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x1885 (* 36 ?x935)))
 (let ((?x1905 (* (- 6) ?x863)))
 (let ((?x1849 (* 54 ?x578)))
 (let ((?x393 (+ (* 24 (* s r)) ?x1849 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1905 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x477 ?x1885 ?x478 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1157 (* 54 (* x00 r)) ?x1803 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x555 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1752 (* 4 ?x647)))
 (let ((?x381 (* 18 ?x578)))
 (let ((?x1597 (+ (* 9 (* s r)) ?x381 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1542) ?x1752 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2057) (* 18 (* x00 r)) ?x555 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1487 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x555 ?x556 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x557 ?x526)))
 (let (($x1051 (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1051 (= ?x1487 0) (= ?x1597 0) (= ?x393 0) $x1643 (not (= ?x2700 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1323 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1444 (+ 3 ?x213 s)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x1450 (+ ?x336 x)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x1121 (* (- 6) (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x2770 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x2568 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2562 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2513 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2369 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2350 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x2268 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2239 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2171 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x2086 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1933 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1868 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1776 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1772 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1759 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1687 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1682 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1642 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1508 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x2176 (* 6 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1373 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1353 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1346 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1318 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1297 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x1284 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1361 (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x1024 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x1013 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x911 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)))
 (let ((?x846 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x970 (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444))))
 (let ((?x730 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x620 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x517 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)))
 (let ((?x515 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444)))
 (let ((?x1105 (+ (* 2 (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x515) (* 4 ?x517) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 6) ?x620) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 ?x730) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) ?x970 (* (- 12) ?x846) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 ?x911) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 ?x1013) (* 6 ?x1024) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) ?x1361 (* 6 ?x1284) (* (- 9) ?x1297) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 9 ?x1318) (* (- 2) ?x1346) (* 9 ?x1353) (* (- 3) ?x1373) ?x2176 (* (- 3) (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 ?x1508) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 4) ?x1642) (* 2 (* s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 3 ?x1682) (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x1687) (* (- 6) ?x1759) (* (- 6) ?x1772) (* (- 6) ?x1776) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 2 ?x1868) (* 9 (* r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 18) ?x1933) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 ?x2086) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x2171) (* (- 9) ?x2239) (* 6 ?x2268) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 2) ?x2350) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) ?x2369) (* 18 (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* 18 ?x2513) (* 18 ?x2562) (* (- 3) ?x2568) (* 3 (* ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x1450 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444)) (* (- 9) (* r00 ?x1441 ?x1441 ?x1450 ?x1450 ?x1444 ?x1444 ?x1444 ?x1444)) (* 9 ?x2770) ?x1121)))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1434 (* (- 108) ?x1404)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x1433 (* (- 16) ?x1242)))
 (let ((?x1114 (* s00 r00 r00 r00)))
 (let ((?x1429 (* (- 216) ?x1114)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x941 (* 432 ?x940)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1187 (* 108 ?x863)))
 (let ((?x791 (* s00 s00 r00 r00)))
 (let ((?x792 (* 36 ?x791)))
 (let ((?x726 (* s00 s00 r00)))
 (let ((?x1070 (* 108 ?x726)))
 (let ((?x703 (* s00 r00 r00)))
 (let ((?x1058 (* 36 ?x703)))
 (let ((?x647 (* s00 s00)))
 (let ((?x1423 (* (- 51) ?x647)))
 (let ((?x621 (* s r00 r00)))
 (let ((?x922 (* (- 36) ?x621)))
 (let ((?x578 (* r00 x00)))
 (let ((?x1420 (* (- 108) ?x578)))
 (let ((?x571 (* s00 r00 x00)))
 (let ((?x1419 (* (- 216) ?x571)))
 (let ((?x482 (* s00 r00)))
 (let ((?x580 (* 54 ?x482)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1435 (+ ?x143 ?x1045 ?x580 ?x1419 ?x1420 (* (- 15) (* s s)) ?x922 ?x1423 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1058 ?x1070 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x792 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1187 (* 108 (* s x)) (* (- 108) (* x x)) ?x941 (* 12 (* s s s00)) ?x1429 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1433 (* 216 (* x x00)) ?x1434)))
 (let (($x1436 (= ?x1435 0)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x754 (* (- 2) ?x726)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x624 (* 24 ?x482)))
 (let ((?x1137 (+ ?x143 ?x1045 (* (- 24) (* r s)) (* 24 (* r s00)) ?x624 ?x611 ?x627 (* 54 (* r x)) (* 36 (* r x r00)) ?x922 ?x974 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1058 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x754 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x864 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x948 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1142 (= ?x1137 0)))
 (let ((?x704 (* 6 ?x703)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x597 (* 9 ?x482)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x801 (+ ?x47 ?x434 (* (- 9) (* r s)) (* 9 (* r s00)) ?x597 ?x592 ?x602 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x621) ?x660 (* 18 (* x r00)) ?x704 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x808 (= ?x801 0)))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x560 (* (- 6) ?x482)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x555 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x561 (+ ?x43 ?x555 ?x56 ?x44 ?x556 ?x557 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x560 ?x526)))
 (let (($x562 (= ?x561 0)))
 (let ((?x357 (* r00 r00)))
 (let ((?x358 (* 3 ?x357)))
 (let ((?x387 (* (- 1) s00)))
 (let (($x390 (= (+ s ?x387 (* (- 3) (* r r)) ?x358) 0)))
 (let (($x1866 (and $x390 $x562 $x808 $x1142 $x1436 (not (= ?x1105 0)))))
 (let ((?x572 (+ 3 s ?x213)))
 (let ((?x913 (+ x ?x336)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2377 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x447 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x724 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x931 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1200 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1645 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x506 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2413 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x415 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1261 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x533 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2700 (+ (* 9 (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x533) (* (- 9) (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 2 ?x1261) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 3 (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 4) ?x415) (* (- 3) (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 3) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 3 ?x2413) (* (- 6) ?x506) (* 12 ?x1645) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 ?x1200) (* (- 18) ?x931) (* (- 2) (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 2) (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x724) (* 2 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 3) ?x1065) (* 6 ?x1132) (* 2 ?x1188) (* 18 ?x1252) (* 6 ?x1313) (* 9 ?x1372) (* (- 2) ?x1438) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x447) (* 3 ?x481) (* (- 9) ?x534) (* (- 9) ?x563) (* 18 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 ?x1539) (* (- 3) ?x1740) (* (- 18) ?x1763) (* 9 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) ?x1976) (* 3 (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x2072) (* 6 (* r00 r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 4 (* s00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x1638) (* (- 9) ?x2300) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 ?x2442) (* (- 2) ?x1827) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 18) ?x2092) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 2 (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x2763) (* 9 ?x2544) (* (- 6) ?x2377) (* (- 6) ?x2618) (* (- 18) ?x2621) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 12 (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 9 ?x2778) (* 4 ?x2740))))
 (let ((?x1563 (* 108 ?x1404)))
 (let ((?x1803 (* (- 9) s)))
 (let ((?x2057 (* r00 r00 s00)))
 (let ((?x1157 (* (- 36) ?x2057)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2767 (* 51 ?x647)))
 (let ((?x1542 (* r00 r00 s)))
 (let ((?x477 (* 36 ?x1542)))
 (let ((?x398 (* 16 ?x1242)))
 (let ((?x1296 (* (- 108) ?x863)))
 (let ((?x1806 (* (- 432) ?x940)))
 (let ((?x698 (* 108 ?x578)))
 (let ((?x1651 (+ (* 216 (* r00 s00 x00)) ?x698 (* (- 54) (* r00 s00)) (* 15 ?x601) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1806 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1296 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x398 (* (- 108) (* x s)) ?x477 ?x2767 (* (- 108) (* r00 x)) ?x137 ?x1157 ?x1803 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1563)))
 (let (($x1643 (= ?x1651 0)))
 (let ((?x478 (* 15 ?x647)))
 (let ((?x1885 (* 36 ?x935)))
 (let ((?x1905 (* (- 6) ?x863)))
 (let ((?x1849 (* 54 ?x578)))
 (let ((?x393 (+ (* 24 (* s r)) ?x1849 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x601) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1905 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x477 ?x1885 ?x478 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1157 (* 54 (* x00 r)) ?x1803 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x1752 (* 4 ?x647)))
 (let ((?x381 (* 18 ?x578)))
 (let ((?x1597 (+ (* 9 (* s r)) ?x381 (* (- 9) (* r00 s00)) (* (- 2) ?x601) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1542) ?x1752 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2057) (* 18 (* x00 r)) ?x555 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x1487 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x555 ?x556 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x557 ?x526)))
 (let (($x1051 (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) ?x357)) 0)))
 (let (($x2600 (and $x1051 (= ?x1487 0) (= ?x1597 0) (= ?x393 0) $x1643 (not (= ?x2700 0)))))
 (rewrite (= $x2600 $x1866)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1668 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x572 (+ 3 s ?x213)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x913 (+ x ?x336)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2377 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x447 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x724 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x931 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1200 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1645 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x506 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2413 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x415 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1261 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x533 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2726 (+ (* (- 9) (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x533) (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 2) ?x1261) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 4 ?x415) (* 3 (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 3) ?x2413) (* 6 ?x506) (* (- 12) ?x1645) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) ?x1200) (* 18 ?x931) (* 2 (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 2 (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x724) (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 3 ?x1065) (* (- 6) ?x1132) (* (- 2) ?x1188) (* (- 18) ?x1252) (* (- 6) ?x1313) (* (- 9) ?x1372) (* 2 ?x1438) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x447) (* (- 3) ?x481) (* 9 ?x534) (* 9 ?x563) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) ?x1539) (* 3 ?x1740) (* 18 ?x1763) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 ?x1976) (* (- 3) (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x2072) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x1638) (* 9 ?x2300) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) ?x2442) (* 2 ?x1827) (* 9 (* r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 18 ?x2092) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x2763) (* (- 9) ?x2544) (* 6 ?x2377) (* 6 ?x2618) (* 18 ?x2621) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 9) ?x2778) (* (- 4) ?x2740))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1563 (* 108 ?x1404)))
 (let ((?x1803 (* (- 9) s)))
 (let ((?x2057 (* r00 r00 s00)))
 (let ((?x1157 (* (- 36) ?x2057)))
 (let ((?x137 (* 9 s00)))
 (let ((?x647 (* s00 s00)))
 (let ((?x2767 (* 51 ?x647)))
 (let ((?x1542 (* r00 r00 s)))
 (let ((?x477 (* 36 ?x1542)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x398 (* 16 ?x1242)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1296 (* (- 108) ?x863)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1806 (* (- 432) ?x940)))
 (let ((?x578 (* r00 x00)))
 (let ((?x698 (* 108 ?x578)))
 (let ((?x1651 (+ (* 216 (* r00 s00 x00)) ?x698 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1806 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1296 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x398 (* (- 108) (* x s)) ?x477 ?x2767 (* (- 108) (* r00 x)) ?x137 ?x1157 ?x1803 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1563)))
 (let (($x1643 (= ?x1651 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x904 (+ (* (- 24) (* s r)) ?x611 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x627 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x864 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1542) ?x948 ?x974 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1045 (* 36 ?x2057) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x1594 (+ (* (- 9) (* s r)) ?x592 (* 9 (* r00 s00)) ?x602 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1542) ?x660 (* 18 (* r00 x)) ?x434 (* 6 ?x2057) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1239 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x434 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1051 (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1051 (= ?x1239 0) (= ?x1594 0) (= ?x904 0) $x1643 (not (= ?x2726 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2473 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x572 (+ 3 s ?x213)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x913 (+ x ?x336)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2377 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x447 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x724 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x931 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1200 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1645 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x506 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2413 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x415 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1261 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x533 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2700 (+ (* 9 (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x533) (* (- 9) (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 2 ?x1261) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 3 (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 4) ?x415) (* (- 3) (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 3) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 3 ?x2413) (* (- 6) ?x506) (* 12 ?x1645) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 ?x1200) (* (- 18) ?x931) (* (- 2) (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 2) (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x724) (* 2 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 3) ?x1065) (* 6 ?x1132) (* 2 ?x1188) (* 18 ?x1252) (* 6 ?x1313) (* 9 ?x1372) (* (- 2) ?x1438) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x447) (* 3 ?x481) (* (- 9) ?x534) (* (- 9) ?x563) (* 18 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 ?x1539) (* (- 3) ?x1740) (* (- 18) ?x1763) (* 9 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) (* r00 r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) ?x1976) (* 3 (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x2072) (* 6 (* r00 r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 4 (* s00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x1638) (* (- 9) ?x2300) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 ?x2442) (* (- 2) ?x1827) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 18) ?x2092) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 2 (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 6 ?x2763) (* 9 ?x2544) (* (- 6) ?x2377) (* (- 6) ?x2618) (* (- 18) ?x2621) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 12 (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 9 ?x2778) (* 4 ?x2740))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1563 (* 108 ?x1404)))
 (let ((?x1803 (* (- 9) s)))
 (let ((?x2057 (* r00 r00 s00)))
 (let ((?x1157 (* (- 36) ?x2057)))
 (let ((?x137 (* 9 s00)))
 (let ((?x647 (* s00 s00)))
 (let ((?x2767 (* 51 ?x647)))
 (let ((?x1542 (* r00 r00 s)))
 (let ((?x477 (* 36 ?x1542)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x398 (* 16 ?x1242)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1296 (* (- 108) ?x863)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1806 (* (- 432) ?x940)))
 (let ((?x578 (* r00 x00)))
 (let ((?x698 (* 108 ?x578)))
 (let ((?x1651 (+ (* 216 (* r00 s00 x00)) ?x698 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1806 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1296 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x398 (* (- 108) (* x s)) ?x477 ?x2767 (* (- 108) (* r00 x)) ?x137 ?x1157 ?x1803 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1563)))
 (let (($x1643 (= ?x1651 0)))
 (let ((?x478 (* 15 ?x647)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x1885 (* 36 ?x935)))
 (let ((?x1905 (* (- 6) ?x863)))
 (let ((?x1849 (* 54 ?x578)))
 (let ((?x393 (+ (* 24 (* s r)) ?x1849 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x1905 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x477 ?x1885 ?x478 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1157 (* 54 (* x00 r)) ?x1803 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x555 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1752 (* 4 ?x647)))
 (let ((?x381 (* 18 ?x578)))
 (let ((?x1597 (+ (* 9 (* s r)) ?x381 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1542) ?x1752 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2057) (* 18 (* x00 r)) ?x555 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x525 (* r00 r00 r00)))
 (let ((?x526 (* 12 ?x525)))
 (let ((?x557 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x556 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x1487 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x555 ?x556 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x557 ?x526)))
 (let (($x1051 (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2600 (and $x1051 (= ?x1487 0) (= ?x1597 0) (= ?x393 0) $x1643 (not (= ?x2700 0)))))
 (let ((?x2726 (+ (* (- 9) (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x533) (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 2) ?x1261) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 4 ?x415) (* 3 (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 3) ?x2413) (* 6 ?x506) (* (- 12) ?x1645) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) ?x1200) (* 18 ?x931) (* 2 (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 2 (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x724) (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 3 ?x1065) (* (- 6) ?x1132) (* (- 2) ?x1188) (* (- 18) ?x1252) (* (- 6) ?x1313) (* (- 9) ?x1372) (* 2 ?x1438) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x447) (* (- 3) ?x481) (* 9 ?x534) (* 9 ?x563) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) ?x1539) (* 3 ?x1740) (* 18 ?x1763) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 ?x1976) (* (- 3) (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x2072) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x1638) (* 9 ?x2300) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) ?x2442) (* 2 ?x1827) (* 9 (* r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 18 ?x2092) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x2763) (* (- 9) ?x2544) (* 6 ?x2377) (* 6 ?x2618) (* 18 ?x2621) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 9) ?x2778) (* (- 4) ?x2740))))
 (let ((?x143 (* 9 s)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x904 (+ (* (- 24) (* s r)) ?x611 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x627 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x864 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1542) ?x948 ?x974 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1045 (* 36 ?x2057) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x1594 (+ (* (- 9) (* s r)) ?x592 (* 9 (* r00 s00)) ?x602 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1542) ?x660 (* 18 (* r00 x)) ?x434 (* 6 ?x2057) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1239 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x434 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x525))))
 (let (($x1551 (and $x1051 (= ?x1239 0) (= ?x1594 0) (= ?x904 0) $x1643 (not (= ?x2726 0)))))
 (rewrite (= $x1551 $x2600))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x333 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x325 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x324 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x320 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x319 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x313 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x312 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x307 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x302 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x299 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x295 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x291 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x287 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x283 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x278 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x277 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x274 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x271 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x263 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x257 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x255 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x254 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x253 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x251 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x243 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x239 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x237 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x228 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x222 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (- (* (- 9) ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x221 (+ ?x218 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x226 (- (- ?x221 ?x222) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x232 (+ (- ?x226 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215)) ?x228 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 x00))))
 (let ((?x241 (- (- (+ (- ?x232 ?x233) ?x235) ?x237) (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x246 (+ (- ?x241 ?x239) ?x243 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x249 (- ?x246 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x250 (- ?x249 (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x267 (+ (- (- (- (- (- (+ ?x250 ?x251) ?x253) ?x254) ?x255) ?x256) ?x257) ?x263 (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 x00) (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x275 (- (+ (- ?x267 ?x268) ?x270 ?x271) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x281 (- (+ (- ?x275 ?x274) ?x277 ?x278) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x284 (+ ?x281 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) ?x283)))
 (let ((?x288 (+ (- ?x284 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x287)))
 (let ((?x292 (- ?x288 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x294 (- (- ?x292 (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215)) ?x291)))
 (let ((?x297 (+ ?x294 ?x295 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x300 (- ?x297 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x304 (+ (- ?x300 ?x299) ?x302 (* 9 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x309 (+ (- ?x304 (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) ?x307 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x315 (- (- ?x309 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x322 (+ (- (- ?x315 ?x312) ?x313) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215) ?x319 ?x320 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x326 (- ?x322 (* 12 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- (- ?x326 ?x324) ?x325) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1401 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x572 (+ 3 s ?x213)))
 (let ((?x336 (* (- 1) s)))
 (let ((?x913 (+ x ?x336)))
 (let ((?x1441 (+ 1 r)))
 (let ((?x2740 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2778 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2621 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2618 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x2377 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2544 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2763 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2092 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1827 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2442 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x2300 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1638 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2072 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1976 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1763 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1740 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1539 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x563 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x534 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x481 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x447 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1438 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1372 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1313 (* r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1252 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1188 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x1132 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1065 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x724 (* r00 r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x931 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1200 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572)))
 (let ((?x1645 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x506 (* r00 r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2413 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x415 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)))
 (let ((?x1261 (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x533 (* r00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)))
 (let ((?x2726 (+ (* (- 9) (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x533) (* 9 (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 18 (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 2) ?x1261) (* (- 18) (* x00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 3) (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 4 ?x415) (* 3 (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 3 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 (* r00 x00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 3) ?x2413) (* 6 ?x506) (* (- 12) ?x1645) (* (- 9) (* s00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) ?x1200) (* 18 ?x931) (* 2 (* ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 2 (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x724) (* (- 2) (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* 3 ?x1065) (* (- 6) ?x1132) (* (- 2) ?x1188) (* (- 18) ?x1252) (* (- 6) ?x1313) (* (- 9) ?x1372) (* 2 ?x1438) (* 18 (* x00 ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 18 (* r00 ?x1441 ?x1441 ?x913 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x447) (* (- 3) ?x481) (* 9 ?x534) (* 9 ?x563) (* (- 18) (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 18) ?x1539) (* 3 ?x1740) (* 18 ?x1763) (* (- 9) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* 6 (* r00 r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 9 ?x1976) (* (- 3) (* s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 6 ?x2072) (* (- 6) (* r00 r00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 4) (* s00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 6) ?x1638) (* 9 ?x2300) (* 4 (* s00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 6) (* r00 s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) ?x2442) (* 2 ?x1827) (* 9 (* r00 s00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 18) (* r00 x00 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* 18 ?x2092) (* 9 (* s00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572)) (* (- 9) (* ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 2) (* ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 6) ?x2763) (* (- 9) ?x2544) (* 6 ?x2377) (* 6 ?x2618) (* 18 ?x2621) (* 9 (* ?x1441 ?x1441 ?x1441 ?x1441 ?x913 ?x572 ?x572 ?x572 ?x572 ?x572)) (* (- 12) (* r00 ?x1441 ?x1441 ?x1441 ?x913 ?x913 ?x572 ?x572 ?x572 ?x572)) (* (- 9) ?x2778) (* (- 4) ?x2740))))
 (let ((?x1404 (* x00 x00)))
 (let ((?x1563 (* 108 ?x1404)))
 (let ((?x1803 (* (- 9) s)))
 (let ((?x2057 (* r00 r00 s00)))
 (let ((?x1157 (* (- 36) ?x2057)))
 (let ((?x137 (* 9 s00)))
 (let ((?x647 (* s00 s00)))
 (let ((?x2767 (* 51 ?x647)))
 (let ((?x1542 (* r00 r00 s)))
 (let ((?x477 (* 36 ?x1542)))
 (let ((?x1242 (* s00 s00 s00)))
 (let ((?x398 (* 16 ?x1242)))
 (let ((?x863 (* s00 x00)))
 (let ((?x1296 (* (- 108) ?x863)))
 (let ((?x940 (* r00 r00 r00 x00)))
 (let ((?x1806 (* (- 432) ?x940)))
 (let ((?x578 (* r00 x00)))
 (let ((?x698 (* 108 ?x578)))
 (let ((?x1651 (+ (* 216 (* r00 s00 x00)) ?x698 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1806 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x1296 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x398 (* (- 108) (* x s)) ?x477 ?x2767 (* (- 108) (* r00 x)) ?x137 ?x1157 ?x1803 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1563)))
 (let (($x1643 (= ?x1651 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1045 (* (- 9) s00)))
 (let ((?x974 (* (- 15) ?x647)))
 (let ((?x935 (* r00 r00 x00)))
 (let ((?x948 (* (- 36) ?x935)))
 (let ((?x864 (* 6 ?x863)))
 (let ((?x601 (* s s)))
 (let ((?x627 (* 3 ?x601)))
 (let ((?x611 (* (- 54) ?x578)))
 (let ((?x904 (+ (* (- 24) (* s r)) ?x611 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x627 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x864 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1542) ?x948 ?x974 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1045 (* 36 ?x2057) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x434 (* (- 3) s00)))
 (let ((?x660 (* (- 4) ?x647)))
 (let ((?x602 (* 2 ?x601)))
 (let ((?x592 (* (- 18) ?x578)))
 (let ((?x1594 (+ (* (- 9) (* s r)) ?x592 (* 9 (* r00 s00)) ?x602 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1542) ?x660 (* 18 (* r00 x)) ?x434 (* 6 ?x2057) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1239 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x434 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1051 (= (+ s00 ?x336 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1551 (and $x1051 (= ?x1239 0) (= ?x1594 0) (= ?x904 0) $x1643 (not (= ?x2726 0)))))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x325 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x324 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x320 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x319 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x313 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x312 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x307 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x302 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x299 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x295 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x291 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x287 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x283 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x278 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x277 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x274 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x271 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x270 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x263 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x257 (* 9 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x255 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x254 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x253 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x251 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x243 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x239 (* 18 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00)))
 (let ((?x237 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 6 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x233 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x228 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x222 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (- (* (- 9) ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x221 (+ ?x218 (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x226 (- (- ?x221 ?x222) (* 18 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x232 (+ (- ?x226 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215)) ?x228 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215) (* 18 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 x00))))
 (let ((?x241 (- (- (+ (- ?x232 ?x233) ?x235) ?x237) (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x246 (+ (- ?x241 ?x239) ?x243 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x249 (- ?x246 (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x250 (- ?x249 (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x267 (+ (- (- (- (- (- (+ ?x250 ?x251) ?x253) ?x254) ?x255) ?x256) ?x257) ?x263 (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 x00) (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x275 (- (+ (- ?x267 ?x268) ?x270 ?x271) (* 18 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x281 (- (+ (- ?x275 ?x274) ?x277 ?x278) (* 9 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x284 (+ ?x281 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) ?x283)))
 (let ((?x288 (+ (- ?x284 (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) ?x287)))
 (let ((?x292 (- ?x288 (* 6 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x294 (- (- ?x292 (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215)) ?x291)))
 (let ((?x297 (+ ?x294 ?x295 (* 4 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x300 (- ?x297 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x304 (+ (- ?x300 ?x299) ?x302 (* 9 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x309 (+ (- ?x304 (* 18 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) ?x307 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x315 (- (- ?x309 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 2 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x322 (+ (- (- ?x315 ?x312) ?x313) (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215) ?x319 ?x320 (* 9 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x326 (- ?x322 (* 12 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x332 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- (- ?x326 ?x324) ?x325) 0))))))
 (rewrite (= $x332 $x1551)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x334 (asserted $x333)))
 (let ((@x376 (mp (mp @x334 (quant-intro (proof-bind ?x1401) (= $x333 $x1668)) $x1668) (rewrite (= $x1668 $x1668)) $x1668)))
 (let ((@x1211 (mp (mp @x376 (quant-intro (proof-bind ?x2473) (= $x1668 $x2747)) $x2747) (quant-intro (proof-bind ?x1323) (= $x2747 $x2200)) $x2200)))
 (let ((@x1932 (mp (mp~ @x1211 (sk (~ $x2200 $x2052)) $x2052) (rewrite (= $x2052 $x925)) $x925)))
 (let ((@x2150 (and-elim @x1932 $x1351)))
 (let ((@x463 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1351) $x2493)) @x2150 $x2493)))
 (let (($x2307 (>= ?x1767 0)))
 (let ((@x1634 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1351) $x2307)) @x2150 $x2307)))
 (let (($x665 (<= ?x1654 0)))
 (let ((@x1818 (and-elim @x1932 $x520)))
 (let ((@x1923 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x520) $x665)) @x1818 $x665)))
 (let (($x594 (>= ?x1654 0)))
 (let ((@x656 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x520) $x594)) @x1818 $x594)))
 (let (($x1636 (<= ?x1305 0)))
 (let ((@x736 (and-elim @x1932 $x819)))
 (let ((@x2172 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x819) $x1636)) @x736 $x1636)))
 (let (($x1633 (>= ?x1305 0)))
 (let ((@x821 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x819) $x1633)) @x736 $x1633)))
 (let (($x1014 (<= ?x1605 0)))
 (let ((@x1495 (and-elim @x1932 $x1773)))
 (let ((@x1656 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1773) $x1014)) @x1495 $x1014)))
 (let (($x2078 (>= ?x1605 0)))
 (let ((@x855 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1773) $x2078)) @x1495 $x2078)))
 (let (($x615 (<= ?x352 0)))
 (let ((@x961 (and-elim @x1932 $x1669)))
 (let ((@x1864 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1669) $x615)) @x961 $x615)))
 (let (($x779 (>= ?x352 0)))
 (let ((@x518 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1669) $x779)) @x961 $x779)))
 (let (($x365 (not (<= ?x1207 0))))
 (let (($x765 (>= ?x1207 0)))
 (let ((@x1253 ((_ th-lemma arith) (hypothesis (not $x765)) @x1634 @x463 @x855 @x1656 @x1634 @x463 @x821 @x2172 @x855 @x1656 @x821 @x2172 @x1634 @x463 @x518 @x1864 @x821 @x2172 @x855 @x1656 @x1634 @x463 @x821 @x2172 @x656 @x1923 @x1634 @x463 false)))
 (let ((@x1879 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x374 $x365 (not $x765))) (and-elim @x1932 $x2360) (or $x365 (not $x765)))))
 ((_ th-lemma arith) (unit-resolution @x1879 (lemma @x1253 $x765) $x365) @x1634 @x463 @x855 @x1656 @x1634 @x463 @x821 @x2172 @x855 @x1656 @x821 @x2172 @x1634 @x463 @x518 @x1864 @x821 @x2172 @x855 @x1656 @x1634 @x463 @x821 @x2172 @x656 @x1923 @x1634 @x463 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        35
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             948
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 161
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.74
 :memory                    3.53
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                19884779
 :num-checks                1
 :propagations              12
 :rlimit-count              149415
 :time                      0.14
 :total-time                0.16)
