unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1586 (* (- 3) s!1)))
 (let ((?x611 (* s00 s00)))
 (let ((?x3228 (* 4 ?x611)))
 (let ((?x542 (* r00 x00)))
 (let ((?x4362 (* 18 ?x542)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2992 (+ ?x44 (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)) (* (- 9) (* s00 r00)) ?x4362 ?x3228 (* (- 6) (* s00 r00 r00)) (* 9 (* s!1 r!2)) ?x1586 (* (- 6) (* r00 s!1 r!2)) (* 6 (* r00 r00 s!1)) (* (- 2) (* s!1 s!1)) (* (- 18) (* r!2 x!0)) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)))))
 (let (($x4211 (<= ?x2992 0)))
 (let (($x2995 (= ?x2992 0)))
 (let ((?x2442 (* 6 r!2)))
 (let ((?x734 (+ 3 s!1 ?x2442)))
 (let ((?x2436 (+ 1 r!2)))
 (let ((?x2305 (* (- 1) s!1)))
 (let ((?x2439 (+ ?x2305 x!0)))
 (let ((?x364 (* 12 (* r00 r00 ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734))))
 (let ((?x3359 (* r!2 x!0)))
 (let ((?x4009 (* (- 54) ?x3359)))
 (let ((?x1929 (* (- 12) (* r00 r00 r00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734))))
 (let ((?x434 (* x00 r!2)))
 (let ((?x4532 (* 54 ?x434)))
 (let ((?x1255 (+ (* 126 (* x00 r!2 r!2 r!2)) (* (- 2754) (* s00 r00 r!2 r!2)) (* (- 3114) (* s00 r00 r!2 r!2 r!2)) (* (- 3) (* ?x2436 ?x734 ?x734 ?x734 ?x734)) (* 36 (* x00 r!2 r!2 r!2 r!2)) (* 12 (* r00 r00 r00 s!1 s!1 s!1)) ?x4532 (* (- 162) (* s00 r00)) (* (- 3) (* ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734)) (* 2160 (* r00 r00 r00 r!2)) (* 6 (* ?x2436 ?x2439 ?x734 ?x734 ?x734)) (* 432 (* r00 r00 r!2 r!2)) (* 324 (* r00 r00 r00)) (* (- 6) (* x00 ?x2436 ?x734 ?x734 ?x734)) (* (- 18) (* s!1 r!2 r!2 x!0)) (* (- 6) (* s!1 r!2 r!2 r!2 x!0)) (* 27 (* r00 r!2)) ?x1929 (* 6 (* x00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734)) (* 216 (* r00 r00 r00 s!1 s!1 r!2 r!2)) (* 4 (* s00 ?x2436 ?x2436 ?x734 ?x734 ?x734)) (* (- 4) (* s00 s!1 r!2 r!2 r!2 r!2)) (* 6228 (* r00 r00 r00 r!2 r!2 r!2)) (* 2520 (* r00 r00 r00 r!2 r!2 r!2 r!2)) (* 1584 (* r00 r00 r00 s!1 r!2)) (* 6 (* s!1 s!1 r!2 r!2 r!2)) (* 12 (* r00 r00 r00 s!1 s!1 s!1 r!2)) (* 6 (* r00 s00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734)) (* 3 (* ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734 ?x734)) (* 45 (* s!1 r!2)) (* 48 (* r00 r00 s!1 r!2 r!2 r!2)) (* 576 (* r00 r00 r!2 r!2 r!2)) (* (- 6) (* ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x2439 ?x734 ?x734 ?x734)) (* (- 3) (* r00 ?x2436 ?x734 ?x734 ?x734)) (* (- 2) (* ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734 ?x734)) (* 3 (* r00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734)) (* 2556 (* r00 r00 r00 s!1 r!2 r!2)) (* 6 (* x00 s!1 r!2 r!2 r!2)) (* 162 (* x00 r!2 r!2)) (* (- 6) (* s00 r00 s!1 s!1 s!1)) (* 3 (* ?x2436 ?x2436 ?x2436 ?x734 ?x734)) (* 18 (* s!1 s!1 r!2 r!2)) (* 72 (* r00 r00 r!2 r!2 r!2 r!2 r!2)) (* 36 (* r00 r00 s!1 r!2)) (* 72 (* r00 r00 s!1 r!2 r!2)) (* 324 (* r00 r00 r!2 r!2 r!2 r!2)) (* 12 (* r00 r00 s!1 r!2 r!2 r!2 r!2)) (* 33 (* s!1 r!2 r!2 r!2 r!2)) (* 114 (* s!1 r!2 r!2 r!2)) (* (- 126) (* r!2 r!2 r!2 x!0)) (* (- 255) (* s00 r!2 r!2 r!2)) (* (- 12) (* r00 r00 ?x2436 ?x2436 ?x734 ?x734 ?x734)) (* (- 162) (* r!2 r!2 x!0)) (* (- 18) (* s!1 r!2 x!0)) (* (- 19) (* s00 s!1 r!2 r!2 r!2)) (* 81 (* r00 r!2 r!2)) (* 3 (* s00 ?x2436 ?x734 ?x734 ?x734)) (* 18 (* r00 r!2 r!2 r!2 r!2)) (* 5508 (* r00 r00 r00 r!2 r!2)) (* (- 18) (* r!2 r!2 r!2 r!2 r!2)) (* (- 6) s!1) (* (- 81) (* r!2 r!2 r!2 r!2)) (* 324 (* r00 r00 r00 s!1)) (* 324 (* r00 r00 r00 s!1 s!1 r!2)) (* 9 (* r00 s!1 r!2)) (* 108 (* r00 r00 r00 s!1 s!1)) (* (- 225) (* s00 r!2 r!2)) (* (- 72) (* r!2 r!2)) (* (- 72) (* r!2 r!2 r!2)) (* (- 36) (* r!2 r!2 r!2 r!2 x!0)) (* (- 162) (* s00 r00 s!1)) (* 20 (* s!1 s!1 r!2)) (* (- 21) (* s00 s!1 r!2)) (* (- 1) (* s!1 s!1)) ?x4009 (* (- 792) (* s00 r00 s!1 r!2)) (* (- 63) (* s00 r!2)) (* (- 45) r!2) (* 63 (* r00 r!2 r!2 r!2)) (* 9 (* r00 s!1 r!2 r!2)) (* (- 3) (* s00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734)) (* (- 108) (* s00 r00 s!1 s!1 r!2 r!2)) (* 108 (* r00 r00 r!2)) (* 2 (* ?x2436 ?x2436 ?x734 ?x734 ?x734 ?x734)) (* 1284 (* r00 r00 r00 s!1 r!2 r!2 r!2)) (* (- 126) (* s00 r!2 r!2 r!2 r!2)) (* 3 (* ?x2436 ?x2436 ?x734 ?x734 ?x734)) (* (- 24) (* s00 r!2 r!2 r!2 r!2 r!2)) (* (- 6) (* s00 r00 s!1 s!1 s!1 r!2)) (* 3 (* r00 s!1 r!2 r!2 r!2)) ?x364 (* (- 642) (* s00 r00 s!1 r!2 r!2 r!2)) (* 168 (* s!1 r!2 r!2)) (* (- 1278) (* s00 r00 s!1 r!2 r!2)) (* (- 1080) (* s00 r00 r!2)) (* 18 (* x00 s!1 r!2 r!2)) (* 18 (* x00 s!1 r!2)) (* (- 162) (* s00 r00 s!1 s!1 r!2)) (* (- 33) (* s00 s!1 r!2 r!2)) (* (- 54) (* s00 r00 s!1 s!1)) (* (- 4) (* s00 ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x734 ?x734 ?x734)) (* (- 1260) (* s00 r00 r!2 r!2 r!2 r!2)) (* (- 2) (* ?x2436 ?x2436 ?x2436 ?x2436 ?x734 ?x734)))))
 (let (($x415 (= ?x1255 9)))
 (let (($x424 (not $x415)))
 (let ((?x2908 (* r00 r00 s!1)))
 (let ((?x4539 (* 36 ?x2908)))
 (let ((?x4534 (* (- 9) s!1)))
 (let ((?x1366 (* x00 x00)))
 (let ((?x2538 (* 108 ?x1366)))
 (let ((?x1204 (* s00 s00 s00)))
 (let ((?x2422 (* 16 ?x1204)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x3156 (* (- 432) ?x902)))
 (let ((?x825 (* s00 x00)))
 (let ((?x2080 (* (- 108) ?x825)))
 (let ((?x667 (* s00 r00 r00)))
 (let ((?x3408 (* (- 36) ?x667)))
 (let ((?x2445 (* 51 ?x611)))
 (let ((?x3055 (* 108 ?x542)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1295 (+ ?x137 (* (- 108) (* r00 x!0)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x3055 ?x2445 ?x3408 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x2080 ?x3156 (* 216 (* s00 r00 r00 r00)) ?x2422 ?x2538 (* 108 (* x!0 x!0)) ?x4534 (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* 108 (* s00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) ?x4539 (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* 15 (* s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 108) (* s!1 x!0)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* (- 12) (* s00 s!1 s!1)))))
 (let (($x1296 (= ?x1295 0)))
 (let ((?x897 (* r00 r00 x00)))
 (let ((?x4237 (* 36 ?x897)))
 (let ((?x2322 (* (- 6) ?x825)))
 (let ((?x1420 (* 15 ?x611)))
 (let ((?x4459 (* 54 ?x542)))
 (let ((?x3416 (+ ?x137 ?x4532 (* (- 54) (* r00 x!0)) (* (- 24) (* s00 r00)) ?x4459 ?x1420 ?x3408 (* 2 (* s00 s00 r00)) ?x2322 ?x4237 (* 24 (* s!1 r!2)) ?x4534 (* 2 (* s00 r00 s!1)) ?x4539 (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* (- 3) (* s!1 s!1)) ?x4009 (* 4 (* s00 s00 r!2)) (* (- 36) (* r00 r!2 x!0)) (* (- 24) (* s00 r!2)) (* (- 6) (* s!1 x!0)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 r00 x!0)))))
 (let (($x2196 (= ?x3416 0)))
 (let ((?x5271 (* 6 x!0)))
 (let ((?x1639 (* 3 r!2)))
 (let ((?x489 (* r00 r00 r00)))
 (let ((?x490 (* 12 ?x489)))
 (let ((?x446 (* s00 r00)))
 (let ((?x524 (* (- 6) ?x446)))
 (let ((?x521 (* (- 6) x00)))
 (let ((?x520 (* (- 3) r00)))
 (let ((?x3153 (+ ?x44 ?x520 ?x521 ?x524 ?x490 (* 2 (* s!1 r!2)) ?x1586 (* 4 (* s00 r!2)) ?x1639 ?x5271 (* (- 12) (* r00 r00 r!2)))))
 (let (($x2911 (= ?x3153 0)))
 (let ((?x321 (* r00 r00)))
 (let ((?x2922 (* (- 3) ?x321)))
 (let ((?x1768 (+ s00 ?x2922 ?x2305 (* 3 (* r!2 r!2)))))
 (let (($x1773 (= ?x1768 0)))
 (let (($x1301 (and $x1773 $x2911 $x2995 $x2196 $x1296 $x424)))
 (let ((?x3677 (+ 3 ?x2442 s!1)))
 (let ((?x586 (* (- 12) (* r00 r00 ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677))))
 (let ((?x3621 (* 12 (* r00 r00 r00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677))))
 (let ((?x1617 (* r!2 x00)))
 (let ((?x1973 (* (- 54) ?x1617)))
 (let ((?x2676 (* 54 ?x3359)))
 (let ((?x3088 (* s!1 s!1)))
 (let ((?x3999 (* (- 324) ?x489)))
 (let ((?x3996 (* 162 ?x446)))
 (let ((?x381 (+ (* 45 r!2) (* 6 s!1) (* 72 (* r!2 r!2)) (* (- 45) (* r!2 s!1)) (* (- 108) (* r!2 r00 r00)) (* 54 (* s!1 s!1 s00 r00)) (* 63 (* r!2 s00)) (* 162 (* r!2 s!1 s!1 s00 r00)) ?x3996 ?x3999 (* (- 6) (* x00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677)) ?x3088 ?x2676 (* (- 9) (* r!2 s!1 r00)) (* (- 324) (* s!1 r00 r00 r00)) (* (- 18) (* r!2 r!2 s!1 s!1)) ?x1973 (* 1080 (* r!2 s00 r00)) (* (- 4) (* s00 ?x2436 ?x2436 ?x3677 ?x3677 ?x3677)) (* 162 (* s!1 s00 r00)) (* (- 20) (* r!2 s!1 s!1)) (* 6 (* x00 ?x2436 ?x3677 ?x3677 ?x3677)) (* 21 (* r!2 s!1 s00)) (* 2 (* ?x2436 ?x2436 ?x2436 ?x2436 ?x3677 ?x3677)) (* 4 (* s00 ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677)) (* 162 (* r!2 r!2 x!0)) (* 126 (* r!2 r!2 r!2 x!0)) (* 108 (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 12) (* r!2 r!2 r!2 r!2 s!1 r00 r00)) (* (- 48) (* r!2 r!2 r!2 s!1 r00 r00)) (* (- 72) (* r!2 r!2 s!1 r00 r00)) (* (- 36) (* r!2 s!1 r00 r00)) (* (- 72) (* r!2 r!2 r!2 r!2 r!2 r00 r00)) (* (- 324) (* r!2 r!2 r!2 r!2 r00 r00)) (* 81 (* r!2 r!2 r!2 r!2)) (* (- 576) (* r!2 r!2 r!2 r00 r00)) (* (- 432) (* r!2 r!2 r00 r00)) (* 18 (* r!2 r!2 r!2 r!2 r!2)) (* (- 6) (* ?x2436 ?x2439 ?x3677 ?x3677 ?x3677)) (* (- 2160) (* r!2 r00 r00 r00)) (* (- 12) (* r!2 s!1 s!1 s!1 r00 r00 r00)) (* (- 12) (* s!1 s!1 s!1 r00 r00 r00)) (* (- 216) (* r!2 r!2 s!1 s!1 r00 r00 r00)) (* (- 324) (* r!2 s!1 s!1 r00 r00 r00)) (* (- 108) (* s!1 s!1 r00 r00 r00)) (* 6 (* ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677)) (* (- 1284) (* r!2 r!2 r!2 s!1 r00 r00 r00)) (* (- 2556) (* r!2 r!2 s!1 r00 r00 r00)) (* (- 1584) (* r!2 s!1 r00 r00 r00)) (* (- 2520) (* r!2 r!2 r!2 r!2 r00 r00 r00)) (* (- 6228) (* r!2 r!2 r!2 r00 r00 r00)) (* (- 5508) (* r!2 r!2 r00 r00 r00)) (* 24 (* r!2 r!2 r!2 r!2 r!2 s00)) (* (- 3) (* ?x2436 ?x2436 ?x3677 ?x3677 ?x3677)) (* 6 (* r!2 s!1 s!1 s!1 s00 r00)) (* 6 (* s!1 s!1 s!1 s00 r00)) (* (- 2) (* ?x2436 ?x2436 ?x3677 ?x3677 ?x3677 ?x3677)) (* 1260 (* r!2 r!2 r!2 r!2 s00 r00)) (* 3 (* ?x2436 ?x3677 ?x3677 ?x3677 ?x3677)) (* 3114 (* r!2 r!2 r!2 s00 r00)) (* 2754 (* r!2 r!2 s00 r00)) ?x3621 (* 3 (* ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677)) (* 792 (* r!2 s!1 s00 r00)) (* 1278 (* r!2 r!2 s!1 s00 r00)) (* 642 (* r!2 r!2 r!2 s!1 s00 r00)) ?x586 (* 225 (* r!2 r!2 s00)) (* (- 6) (* r00 s00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677)) (* (- 3) (* s00 ?x2436 ?x3677 ?x3677 ?x3677)) (* (- 3) (* r00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677)) (* 33 (* r!2 r!2 s!1 s00)) (* 255 (* r!2 r!2 r!2 s00)) (* 126 (* r!2 r!2 r!2 r!2 s00)) (* 19 (* r!2 r!2 r!2 s!1 s00)) (* (- 6) (* r!2 r!2 r!2 s!1 s!1)) (* (- 33) (* r!2 r!2 r!2 r!2 s!1)) (* (- 114) (* r!2 r!2 r!2 s!1)) (* (- 168) (* r!2 r!2 s!1)) (* 6 (* r!2 r!2 r!2 s!1 x!0)) (* 18 (* r!2 r!2 s!1 x!0)) (* 18 (* r!2 s!1 x!0)) (* (- 18) (* r!2 s!1 x00)) (* (- 18) (* r!2 r!2 s!1 x00)) (* (- 6) (* r!2 r!2 r!2 s!1 x00)) (* (- 162) (* r!2 r!2 x00)) (* (- 126) (* r!2 r!2 r!2 x00)) (* (- 36) (* r!2 r!2 r!2 r!2 x00)) (* 72 (* r!2 r!2 r!2)) (* 12 (* r00 r00 ?x2436 ?x2436 ?x3677 ?x3677 ?x3677)) (* 4 (* r!2 r!2 r!2 r!2 s!1 s00)) (* 3 (* r00 ?x2436 ?x3677 ?x3677 ?x3677)) (* 2 (* ?x2436 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677 ?x3677)) (* 36 (* r!2 r!2 r!2 r!2 x!0)) (* 3 (* s00 ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677)) (* (- 3) (* ?x2436 ?x2436 ?x2436 ?x3677 ?x3677)) (* (- 3) (* r!2 r!2 r!2 s!1 r00)) (* (- 9) (* r!2 r!2 s!1 r00)) (* (- 18) (* r!2 r!2 r!2 r!2 r00)) (* (- 63) (* r!2 r!2 r!2 r00)) (* (- 81) (* r!2 r!2 r00)) (* (- 27) (* r!2 r00)) (* (- 3) (* ?x2436 ?x2436 ?x2436 ?x2439 ?x2439 ?x3677 ?x3677 ?x3677 ?x3677)))))
 (let ((?x1396 (* (- 108) ?x1366)))
 (let ((?x1395 (* (- 16) ?x1204)))
 (let ((?x1076 (* s00 r00 r00 r00)))
 (let ((?x1391 (* (- 216) ?x1076)))
 (let ((?x903 (* 432 ?x902)))
 (let ((?x1149 (* 108 ?x825)))
 (let ((?x751 (* s00 s00 r00 r00)))
 (let ((?x752 (* 36 ?x751)))
 (let ((?x688 (* s00 s00 r00)))
 (let ((?x1032 (* 108 ?x688)))
 (let ((?x1020 (* 36 ?x667)))
 (let ((?x1385 (* (- 51) ?x611)))
 (let ((?x1589 (* s!1 r00 r00)))
 (let ((?x3461 (* (- 36) ?x1589)))
 (let ((?x1382 (* (- 108) ?x542)))
 (let ((?x533 (* s00 r00 x00)))
 (let ((?x1381 (* (- 216) ?x533)))
 (let ((?x540 (* 54 ?x446)))
 (let ((?x1007 (* (- 9) s00)))
 (let ((?x730 (* 9 s!1)))
 (let ((?x1719 (+ ?x730 ?x1007 ?x540 ?x1381 ?x1382 (* (- 15) ?x3088) ?x3461 ?x1385 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1020 ?x1032 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x752 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1149 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x903 (* 12 (* s!1 s!1 s00)) ?x1391 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1395 (* 216 (* x!0 x00)) ?x1396)))
 (let ((?x910 (* (- 36) ?x897)))
 (let ((?x826 (* 6 ?x825)))
 (let ((?x716 (* (- 2) ?x688)))
 (let ((?x936 (* (- 15) ?x611)))
 (let ((?x571 (* (- 54) ?x542)))
 (let ((?x584 (* 24 ?x446)))
 (let ((?x1560 (+ ?x730 ?x1007 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x584 ?x571 (* 3 ?x3088) ?x2676 (* 36 (* r!2 x!0 r00)) ?x3461 ?x936 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1020 (* 4 (* s!1 s!1 r00)) ?x1973 ?x716 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x826 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x910 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x668 (* 6 ?x667)))
 (let ((?x624 (* (- 4) ?x611)))
 (let ((?x556 (* (- 18) ?x542)))
 (let ((?x561 (* 9 ?x446)))
 (let ((?x398 (* (- 3) s00)))
 (let ((?x840 (+ (* 3 s!1) ?x398 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x561 ?x556 (* 2 ?x3088) (* 18 ?x3359) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1589) ?x624 (* 18 (* x!0 r00)) ?x668 (* (- 18) ?x1617) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2399 (+ ?x1639 ?x1586 ?x5271 ?x44 ?x520 ?x521 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x524 ?x490)))
 (let (($x2678 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x321)) 0)))
 (let (($x383 (and $x2678 (= ?x2399 0) (= ?x840 0) (= ?x1560 0) (= ?x1719 0) (not (= ?x381 (- 9))))))
 (let (($x4717 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1408 (+ 3 ?x214 s)))
 (let ((?x300 (* (- 1) s)))
 (let ((?x1725 (+ ?x300 x)))
 (let ((?x1405 (+ 1 r)))
 (let ((?x5790 (* 72 (* r r r))))
 (let ((?x4381 (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408))))
 (let ((?x4263 (* 12 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408))))
 (let ((?x679 (* r x00)))
 (let ((?x1043 (* (- 54) ?x679)))
 (let ((?x569 (* r x)))
 (let ((?x594 (* 54 ?x569)))
 (let ((?x565 (* s s)))
 (let ((?x489 (* r00 r00 r00)))
 (let ((?x3999 (* (- 324) ?x489)))
 (let ((?x446 (* s00 r00)))
 (let ((?x3996 (* 162 ?x446)))
 (let ((?x4731 (+ (* 45 r) (* 6 s) (* 72 (* r r)) (* (- 45) (* r s)) (* (- 108) (* r r00 r00)) (* 54 (* s s s00 r00)) (* 63 (* r s00)) (* 162 (* r s s s00 r00)) ?x3996 ?x3999 (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) ?x565 ?x594 (* (- 9) (* r s r00)) (* (- 324) (* s r00 r00 r00)) (* (- 18) (* r r s s)) ?x1043 (* 1080 (* r s00 r00)) (* (- 4) (* s00 ?x1405 ?x1405 ?x1408 ?x1408 ?x1408)) (* 162 (* s s00 r00)) (* (- 20) (* r s s)) (* 6 (* x00 ?x1405 ?x1408 ?x1408 ?x1408)) (* 21 (* r s s00)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x1408 ?x1408)) (* 4 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* 162 (* r r x)) (* 126 (* r r r x)) (* 108 (* r r s s s00 r00)) (* (- 12) (* r r r r s r00 r00)) (* (- 48) (* r r r s r00 r00)) (* (- 72) (* r r s r00 r00)) (* (- 36) (* r s r00 r00)) (* (- 72) (* r r r r r r00 r00)) (* (- 324) (* r r r r r00 r00)) (* 81 (* r r r r)) (* (- 576) (* r r r r00 r00)) (* (- 432) (* r r r00 r00)) (* 18 (* r r r r r)) (* (- 6) (* ?x1405 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 2160) (* r r00 r00 r00)) (* (- 12) (* r s s s r00 r00 r00)) (* (- 12) (* s s s r00 r00 r00)) (* (- 216) (* r r s s r00 r00 r00)) (* (- 324) (* r s s r00 r00 r00)) (* (- 108) (* s s r00 r00 r00)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 1284) (* r r r s r00 r00 r00)) (* (- 2556) (* r r s r00 r00 r00)) (* (- 1584) (* r s r00 r00 r00)) (* (- 2520) (* r r r r r00 r00 r00)) (* (- 6228) (* r r r r00 r00 r00)) (* (- 5508) (* r r r00 r00 r00)) (* 24 (* r r r r r s00)) (* (- 3) (* ?x1405 ?x1405 ?x1408 ?x1408 ?x1408)) (* 6 (* r s s s s00 r00)) (* 6 (* s s s s00 r00)) (* (- 2) (* ?x1405 ?x1405 ?x1408 ?x1408 ?x1408 ?x1408)) (* 1260 (* r r r r s00 r00)) (* 3 (* ?x1405 ?x1408 ?x1408 ?x1408 ?x1408)) (* 3114 (* r r r s00 r00)) (* 2754 (* r r s00 r00)) ?x4263 (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* 792 (* r s s00 r00)) (* 1278 (* r r s s00 r00)) (* 642 (* r r r s s00 r00)) ?x4381 (* 225 (* r r s00)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 3) (* s00 ?x1405 ?x1408 ?x1408 ?x1408)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* 33 (* r r s s00)) (* 255 (* r r r s00)) (* 126 (* r r r r s00)) (* 19 (* r r r s s00)) (* (- 6) (* r r r s s)) (* (- 33) (* r r r r s)) (* (- 114) (* r r r s)) (* (- 168) (* r r s)) (* 6 (* r r r s x)) (* 18 (* r r s x)) (* 18 (* r s x)) (* (- 18) (* r s x00)) (* (- 18) (* r r s x00)) (* (- 6) (* r r r s x00)) (* (- 162) (* r r x00)) (* (- 126) (* r r r x00)) (* (- 36) (* r r r r x00)) ?x5790 (* 12 (* r00 r00 ?x1405 ?x1405 ?x1408 ?x1408 ?x1408)) (* 4 (* r r r r s s00)) (* 3 (* r00 ?x1405 ?x1408 ?x1408 ?x1408)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408 ?x1408)) (* 36 (* r r r r x)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1408 ?x1408)) (* (- 3) (* r r r s r00)) (* (- 9) (* r r s r00)) (* (- 18) (* r r r r r00)) (* (- 63) (* r r r r00)) (* (- 81) (* r r r00)) (* (- 27) (* r r00)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408 ?x1408)))))
 (let ((?x1366 (* x00 x00)))
 (let ((?x1396 (* (- 108) ?x1366)))
 (let ((?x1204 (* s00 s00 s00)))
 (let ((?x1395 (* (- 16) ?x1204)))
 (let ((?x1076 (* s00 r00 r00 r00)))
 (let ((?x1391 (* (- 216) ?x1076)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x903 (* 432 ?x902)))
 (let ((?x825 (* s00 x00)))
 (let ((?x1149 (* 108 ?x825)))
 (let ((?x751 (* s00 s00 r00 r00)))
 (let ((?x752 (* 36 ?x751)))
 (let ((?x744 (* s x00)))
 (let ((?x1388 (* (- 108) ?x744)))
 (let ((?x688 (* s00 s00 r00)))
 (let ((?x1032 (* 108 ?x688)))
 (let ((?x667 (* s00 r00 r00)))
 (let ((?x1020 (* 36 ?x667)))
 (let ((?x611 (* s00 s00)))
 (let ((?x1385 (* (- 51) ?x611)))
 (let ((?x585 (* s r00 r00)))
 (let ((?x884 (* (- 36) ?x585)))
 (let ((?x542 (* r00 x00)))
 (let ((?x1382 (* (- 108) ?x542)))
 (let ((?x533 (* s00 r00 x00)))
 (let ((?x1381 (* (- 216) ?x533)))
 (let ((?x540 (* 54 ?x446)))
 (let ((?x1007 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1397 (+ ?x143 ?x1007 ?x540 ?x1381 ?x1382 (* (- 15) ?x565) ?x884 ?x1385 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1020 ?x1032 (* 66 (* s s00)) (* (- 54) (* s r00)) ?x1388 ?x752 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1149 (* 108 (* s x)) (* (- 108) (* x x)) ?x903 (* 12 (* s s s00)) ?x1391 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1395 (* 216 (* x x00)) ?x1396)))
 (let (($x1398 (= ?x1397 0)))
 (let ((?x897 (* r00 r00 x00)))
 (let ((?x910 (* (- 36) ?x897)))
 (let ((?x829 (* r s s)))
 (let ((?x830 (* 2 ?x829)))
 (let ((?x826 (* 6 ?x825)))
 (let ((?x716 (* (- 2) ?x688)))
 (let ((?x936 (* (- 15) ?x611)))
 (let ((?x589 (* 3 ?x565)))
 (let ((?x571 (* (- 54) ?x542)))
 (let ((?x584 (* 24 ?x446)))
 (let ((?x1099 (+ ?x143 ?x1007 (* (- 24) (* r s)) (* 24 (* r s00)) ?x584 ?x571 ?x589 ?x594 (* 36 (* r x r00)) ?x884 ?x936 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1020 (* 4 (* s s r00)) ?x1043 ?x716 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x744) (* (- 2) (* s s00 r00)) ?x826 ?x830 (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x910 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1104 (= ?x1099 0)))
 (let ((?x668 (* 6 ?x667)))
 (let ((?x624 (* (- 4) ?x611)))
 (let ((?x566 (* 2 ?x565)))
 (let ((?x556 (* (- 18) ?x542)))
 (let ((?x561 (* 9 ?x446)))
 (let ((?x398 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x765 (+ ?x47 ?x398 (* (- 9) (* r s)) (* 9 (* r s00)) ?x561 ?x556 ?x566 (* 18 ?x569) (* 6 (* r s r00)) (* (- 6) ?x585) ?x624 (* 18 (* x r00)) ?x668 (* (- 18) ?x679) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x772 (= ?x765 0)))
 (let ((?x490 (* 12 ?x489)))
 (let ((?x524 (* (- 6) ?x446)))
 (let ((?x521 (* (- 6) x00)))
 (let ((?x520 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x519 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x525 (+ ?x43 ?x519 ?x56 ?x44 ?x520 ?x521 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x524 ?x490)))
 (let (($x526 (= ?x525 0)))
 (let ((?x321 (* r00 r00)))
 (let ((?x322 (* 3 ?x321)))
 (let ((?x351 (* (- 1) s00)))
 (let (($x354 (= (+ s ?x351 (* (- 3) (* r r)) ?x322) 0)))
 (and $x354 $x526 $x772 $x1104 $x1398 (not (= ?x4731 (- 9)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x4140 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x872 (+ 3 s ?x214)))
 (let ((?x1405 (+ 1 r)))
 (let ((?x1599 (* r00 s00 ?x1405 ?x872 ?x872 ?x872)))
 (let ((?x300 (* (- 1) s)))
 (let ((?x4147 (+ x ?x300)))
 (let ((?x1612 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x5479 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2320 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2487 (+ (* 3 (* ?x1405 ?x872)) (* (- 3) (* r00 ?x1405 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* (- 6) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 3) (* ?x872 ?x872)) (* 6 (* x00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 r00 ?x872)) (* 12 (* r00 r00 r00 ?x1405 ?x872 ?x872 ?x872)) (* 2 (* ?x1405 ?x1405 ?x872 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 6 (* r00 s00 ?x1405 ?x1405 ?x1405 ?x872)) (* 12 ?x2320) (* 4 (* s00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 6 (* r00 s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 6) (* x00 ?x872)) (* 3 (* s00 ?x1405 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x872)) (* 3 (* s00 ?x872)) (* (- 3) (* s00 ?x1405 ?x1405 ?x1405 ?x872)) (* 3 (* r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* r00 s00 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* ?x1405 ?x4147 ?x872 ?x872 ?x872)) (* (- 6) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x872)) (* 6 (* x00 ?x1405 ?x1405 ?x1405 ?x872)) (* 2 (* ?x1405 ?x872 ?x872)) (* (- 3) (* s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) ?x5479) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x872 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* 6 (* ?x4147 ?x872)) (* (- 4) (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* x00 ?x1405 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* 4 (* s00 ?x1405 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* (- 3) (* r00 ?x872)) (* 3 (* r00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 4) ?x1612) (* (- 6) ?x1599))))
 (let ((?x1366 (* x00 x00)))
 (let ((?x2538 (* 108 ?x1366)))
 (let ((?x2502 (* (- 9) s)))
 (let ((?x3886 (* r00 r00 s00)))
 (let ((?x2484 (* (- 36) ?x3886)))
 (let ((?x137 (* 9 s00)))
 (let ((?x611 (* s00 s00)))
 (let ((?x2445 (* 51 ?x611)))
 (let ((?x1627 (* r00 r00 s)))
 (let ((?x1417 (* 36 ?x1627)))
 (let ((?x1204 (* s00 s00 s00)))
 (let ((?x2422 (* 16 ?x1204)))
 (let ((?x825 (* s00 x00)))
 (let ((?x2080 (* (- 108) ?x825)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x3156 (* (- 432) ?x902)))
 (let ((?x542 (* r00 x00)))
 (let ((?x3055 (* 108 ?x542)))
 (let ((?x2543 (+ (* 216 (* r00 s00 x00)) ?x3055 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3156 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2080 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2422 (* (- 108) (* x s)) ?x1417 ?x2445 (* (- 108) (* r00 x)) ?x137 ?x2484 ?x2502 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2538)))
 (let (($x2546 (= ?x2543 0)))
 (let ((?x1420 (* 15 ?x611)))
 (let ((?x897 (* r00 r00 x00)))
 (let ((?x4237 (* 36 ?x897)))
 (let ((?x2322 (* (- 6) ?x825)))
 (let ((?x4459 (* 54 ?x542)))
 (let ((?x4403 (+ (* 24 (* s r)) ?x4459 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2322 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1417 ?x4237 ?x1420 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2484 (* 54 (* x00 r)) ?x2502 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x519 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3228 (* 4 ?x611)))
 (let ((?x4362 (* 18 ?x542)))
 (let ((?x3303 (+ (* 9 (* s r)) ?x4362 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1627) ?x3228 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3886) (* 18 (* x00 r)) ?x519 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x489 (* r00 r00 r00)))
 (let ((?x490 (* 12 ?x489)))
 (let ((?x521 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x520 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3580 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x519 ?x520 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x521 ?x490)))
 (let (($x2741 (= (+ s00 ?x300 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2741 (= ?x3580 0) (= ?x3303 0) (= ?x4403 0) $x2546 (not (= ?x2487 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4719 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1408 (+ 3 ?x214 s)))
 (let ((?x300 (* (- 1) s)))
 (let ((?x1725 (+ ?x300 x)))
 (let ((?x1405 (+ 1 r)))
 (let ((?x5790 (* 72 (* r r r))))
 (let ((?x4381 (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408))))
 (let ((?x4263 (* 12 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408))))
 (let ((?x679 (* r x00)))
 (let ((?x1043 (* (- 54) ?x679)))
 (let ((?x569 (* r x)))
 (let ((?x594 (* 54 ?x569)))
 (let ((?x565 (* s s)))
 (let ((?x489 (* r00 r00 r00)))
 (let ((?x3999 (* (- 324) ?x489)))
 (let ((?x446 (* s00 r00)))
 (let ((?x3996 (* 162 ?x446)))
 (let ((?x4731 (+ (* 45 r) (* 6 s) (* 72 (* r r)) (* (- 45) (* r s)) (* (- 108) (* r r00 r00)) (* 54 (* s s s00 r00)) (* 63 (* r s00)) (* 162 (* r s s s00 r00)) ?x3996 ?x3999 (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) ?x565 ?x594 (* (- 9) (* r s r00)) (* (- 324) (* s r00 r00 r00)) (* (- 18) (* r r s s)) ?x1043 (* 1080 (* r s00 r00)) (* (- 4) (* s00 ?x1405 ?x1405 ?x1408 ?x1408 ?x1408)) (* 162 (* s s00 r00)) (* (- 20) (* r s s)) (* 6 (* x00 ?x1405 ?x1408 ?x1408 ?x1408)) (* 21 (* r s s00)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x1408 ?x1408)) (* 4 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* 162 (* r r x)) (* 126 (* r r r x)) (* 108 (* r r s s s00 r00)) (* (- 12) (* r r r r s r00 r00)) (* (- 48) (* r r r s r00 r00)) (* (- 72) (* r r s r00 r00)) (* (- 36) (* r s r00 r00)) (* (- 72) (* r r r r r r00 r00)) (* (- 324) (* r r r r r00 r00)) (* 81 (* r r r r)) (* (- 576) (* r r r r00 r00)) (* (- 432) (* r r r00 r00)) (* 18 (* r r r r r)) (* (- 6) (* ?x1405 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 2160) (* r r00 r00 r00)) (* (- 12) (* r s s s r00 r00 r00)) (* (- 12) (* s s s r00 r00 r00)) (* (- 216) (* r r s s r00 r00 r00)) (* (- 324) (* r s s r00 r00 r00)) (* (- 108) (* s s r00 r00 r00)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 1284) (* r r r s r00 r00 r00)) (* (- 2556) (* r r s r00 r00 r00)) (* (- 1584) (* r s r00 r00 r00)) (* (- 2520) (* r r r r r00 r00 r00)) (* (- 6228) (* r r r r00 r00 r00)) (* (- 5508) (* r r r00 r00 r00)) (* 24 (* r r r r r s00)) (* (- 3) (* ?x1405 ?x1405 ?x1408 ?x1408 ?x1408)) (* 6 (* r s s s s00 r00)) (* 6 (* s s s s00 r00)) (* (- 2) (* ?x1405 ?x1405 ?x1408 ?x1408 ?x1408 ?x1408)) (* 1260 (* r r r r s00 r00)) (* 3 (* ?x1405 ?x1408 ?x1408 ?x1408 ?x1408)) (* 3114 (* r r r s00 r00)) (* 2754 (* r r s00 r00)) ?x4263 (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* 792 (* r s s00 r00)) (* 1278 (* r r s s00 r00)) (* 642 (* r r r s s00 r00)) ?x4381 (* 225 (* r r s00)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 3) (* s00 ?x1405 ?x1408 ?x1408 ?x1408)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* 33 (* r r s s00)) (* 255 (* r r r s00)) (* 126 (* r r r r s00)) (* 19 (* r r r s s00)) (* (- 6) (* r r r s s)) (* (- 33) (* r r r r s)) (* (- 114) (* r r r s)) (* (- 168) (* r r s)) (* 6 (* r r r s x)) (* 18 (* r r s x)) (* 18 (* r s x)) (* (- 18) (* r s x00)) (* (- 18) (* r r s x00)) (* (- 6) (* r r r s x00)) (* (- 162) (* r r x00)) (* (- 126) (* r r r x00)) (* (- 36) (* r r r r x00)) ?x5790 (* 12 (* r00 r00 ?x1405 ?x1405 ?x1408 ?x1408 ?x1408)) (* 4 (* r r r r s s00)) (* 3 (* r00 ?x1405 ?x1408 ?x1408 ?x1408)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408 ?x1408)) (* 36 (* r r r r x)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1408 ?x1408)) (* (- 3) (* r r r s r00)) (* (- 9) (* r r s r00)) (* (- 18) (* r r r r r00)) (* (- 63) (* r r r r00)) (* (- 81) (* r r r00)) (* (- 27) (* r r00)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1725 ?x1725 ?x1408 ?x1408 ?x1408 ?x1408)))))
 (let ((?x1366 (* x00 x00)))
 (let ((?x1396 (* (- 108) ?x1366)))
 (let ((?x1204 (* s00 s00 s00)))
 (let ((?x1395 (* (- 16) ?x1204)))
 (let ((?x1076 (* s00 r00 r00 r00)))
 (let ((?x1391 (* (- 216) ?x1076)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x903 (* 432 ?x902)))
 (let ((?x825 (* s00 x00)))
 (let ((?x1149 (* 108 ?x825)))
 (let ((?x751 (* s00 s00 r00 r00)))
 (let ((?x752 (* 36 ?x751)))
 (let ((?x744 (* s x00)))
 (let ((?x1388 (* (- 108) ?x744)))
 (let ((?x688 (* s00 s00 r00)))
 (let ((?x1032 (* 108 ?x688)))
 (let ((?x667 (* s00 r00 r00)))
 (let ((?x1020 (* 36 ?x667)))
 (let ((?x611 (* s00 s00)))
 (let ((?x1385 (* (- 51) ?x611)))
 (let ((?x585 (* s r00 r00)))
 (let ((?x884 (* (- 36) ?x585)))
 (let ((?x542 (* r00 x00)))
 (let ((?x1382 (* (- 108) ?x542)))
 (let ((?x533 (* s00 r00 x00)))
 (let ((?x1381 (* (- 216) ?x533)))
 (let ((?x540 (* 54 ?x446)))
 (let ((?x1007 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1397 (+ ?x143 ?x1007 ?x540 ?x1381 ?x1382 (* (- 15) ?x565) ?x884 ?x1385 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1020 ?x1032 (* 66 (* s s00)) (* (- 54) (* s r00)) ?x1388 ?x752 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1149 (* 108 (* s x)) (* (- 108) (* x x)) ?x903 (* 12 (* s s s00)) ?x1391 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1395 (* 216 (* x x00)) ?x1396)))
 (let (($x1398 (= ?x1397 0)))
 (let ((?x897 (* r00 r00 x00)))
 (let ((?x910 (* (- 36) ?x897)))
 (let ((?x829 (* r s s)))
 (let ((?x830 (* 2 ?x829)))
 (let ((?x826 (* 6 ?x825)))
 (let ((?x716 (* (- 2) ?x688)))
 (let ((?x936 (* (- 15) ?x611)))
 (let ((?x589 (* 3 ?x565)))
 (let ((?x571 (* (- 54) ?x542)))
 (let ((?x584 (* 24 ?x446)))
 (let ((?x1099 (+ ?x143 ?x1007 (* (- 24) (* r s)) (* 24 (* r s00)) ?x584 ?x571 ?x589 ?x594 (* 36 (* r x r00)) ?x884 ?x936 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1020 (* 4 (* s s r00)) ?x1043 ?x716 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x744) (* (- 2) (* s s00 r00)) ?x826 ?x830 (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x910 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1104 (= ?x1099 0)))
 (let ((?x668 (* 6 ?x667)))
 (let ((?x624 (* (- 4) ?x611)))
 (let ((?x566 (* 2 ?x565)))
 (let ((?x556 (* (- 18) ?x542)))
 (let ((?x561 (* 9 ?x446)))
 (let ((?x398 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x765 (+ ?x47 ?x398 (* (- 9) (* r s)) (* 9 (* r s00)) ?x561 ?x556 ?x566 (* 18 ?x569) (* 6 (* r s r00)) (* (- 6) ?x585) ?x624 (* 18 (* x r00)) ?x668 (* (- 18) ?x679) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x772 (= ?x765 0)))
 (let ((?x490 (* 12 ?x489)))
 (let ((?x524 (* (- 6) ?x446)))
 (let ((?x521 (* (- 6) x00)))
 (let ((?x520 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x519 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x525 (+ ?x43 ?x519 ?x56 ?x44 ?x520 ?x521 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x524 ?x490)))
 (let (($x526 (= ?x525 0)))
 (let ((?x321 (* r00 r00)))
 (let ((?x322 (* 3 ?x321)))
 (let ((?x351 (* (- 1) s00)))
 (let (($x354 (= (+ s ?x351 (* (- 3) (* r r)) ?x322) 0)))
 (let (($x4811 (and $x354 $x526 $x772 $x1104 $x1398 (not (= ?x4731 (- 9))))))
 (let ((?x872 (+ 3 s ?x214)))
 (let ((?x1599 (* r00 s00 ?x1405 ?x872 ?x872 ?x872)))
 (let ((?x4147 (+ x ?x300)))
 (let ((?x1612 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x5479 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2320 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2487 (+ (* 3 (* ?x1405 ?x872)) (* (- 3) (* r00 ?x1405 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* (- 6) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 3) (* ?x872 ?x872)) (* 6 (* x00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 r00 ?x872)) (* 12 (* r00 r00 r00 ?x1405 ?x872 ?x872 ?x872)) (* 2 (* ?x1405 ?x1405 ?x872 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 6 (* r00 s00 ?x1405 ?x1405 ?x1405 ?x872)) (* 12 ?x2320) (* 4 (* s00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 6 (* r00 s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 6) (* x00 ?x872)) (* 3 (* s00 ?x1405 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x872)) (* 3 (* s00 ?x872)) (* (- 3) (* s00 ?x1405 ?x1405 ?x1405 ?x872)) (* 3 (* r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* r00 s00 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* ?x1405 ?x4147 ?x872 ?x872 ?x872)) (* (- 6) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x872)) (* 6 (* x00 ?x1405 ?x1405 ?x1405 ?x872)) (* 2 (* ?x1405 ?x872 ?x872)) (* (- 3) (* s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) ?x5479) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x872 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* 6 (* ?x4147 ?x872)) (* (- 4) (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* x00 ?x1405 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* 4 (* s00 ?x1405 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* (- 3) (* r00 ?x872)) (* 3 (* r00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 4) ?x1612) (* (- 6) ?x1599))))
 (let ((?x2538 (* 108 ?x1366)))
 (let ((?x2502 (* (- 9) s)))
 (let ((?x3886 (* r00 r00 s00)))
 (let ((?x2484 (* (- 36) ?x3886)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2445 (* 51 ?x611)))
 (let ((?x1627 (* r00 r00 s)))
 (let ((?x1417 (* 36 ?x1627)))
 (let ((?x2422 (* 16 ?x1204)))
 (let ((?x2080 (* (- 108) ?x825)))
 (let ((?x3156 (* (- 432) ?x902)))
 (let ((?x3055 (* 108 ?x542)))
 (let ((?x2543 (+ (* 216 (* r00 s00 x00)) ?x3055 (* (- 54) (* r00 s00)) (* 15 ?x565) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3156 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2080 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2422 (* (- 108) (* x s)) ?x1417 ?x2445 (* (- 108) (* r00 x)) ?x137 ?x2484 ?x2502 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2538)))
 (let (($x2546 (= ?x2543 0)))
 (let ((?x1420 (* 15 ?x611)))
 (let ((?x4237 (* 36 ?x897)))
 (let ((?x2322 (* (- 6) ?x825)))
 (let ((?x4459 (* 54 ?x542)))
 (let ((?x4403 (+ (* 24 (* s r)) ?x4459 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x565) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2322 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1417 ?x4237 ?x1420 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2484 (* 54 (* x00 r)) ?x2502 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3228 (* 4 ?x611)))
 (let ((?x4362 (* 18 ?x542)))
 (let ((?x3303 (+ (* 9 (* s r)) ?x4362 (* (- 9) (* r00 s00)) (* (- 2) ?x565) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1627) ?x3228 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3886) (* 18 (* x00 r)) ?x519 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x3580 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x519 ?x520 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x521 ?x490)))
 (let (($x2741 (= (+ s00 ?x300 (* 3 (* r r)) (* (- 3) ?x321)) 0)))
 (let (($x2492 (and $x2741 (= ?x3580 0) (= ?x3303 0) (= ?x4403 0) $x2546 (not (= ?x2487 0)))))
 (rewrite (= $x2492 $x4811))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3142 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x872 (+ 3 s ?x214)))
 (let ((?x1405 (+ 1 r)))
 (let ((?x1599 (* r00 s00 ?x1405 ?x872 ?x872 ?x872)))
 (let ((?x300 (* (- 1) s)))
 (let ((?x4147 (+ x ?x300)))
 (let ((?x1612 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x5479 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2320 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x5270 (+ (* (- 3) (* ?x1405 ?x872)) (* 3 (* r00 ?x1405 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 3 (* ?x872 ?x872)) (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 r00 ?x872)) (* (- 12) (* r00 r00 r00 ?x1405 ?x872 ?x872 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x872 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 12) ?x2320) (* (- 4) (* s00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 6 (* x00 ?x872)) (* (- 3) (* s00 ?x1405 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x872)) (* (- 3) (* s00 ?x872)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* r00 s00 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* ?x1405 ?x4147 ?x872 ?x872 ?x872)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x872)) (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 2) (* ?x1405 ?x872 ?x872)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 ?x5479) (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x872 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* (- 6) (* ?x4147 ?x872)) (* 4 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* x00 ?x1405 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* (- 4) (* s00 ?x1405 ?x872)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* 3 (* r00 ?x872)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x872)) (* 4 ?x1612) (* 6 ?x1599))))
 (let ((?x1366 (* x00 x00)))
 (let ((?x2538 (* 108 ?x1366)))
 (let ((?x2502 (* (- 9) s)))
 (let ((?x3886 (* r00 r00 s00)))
 (let ((?x2484 (* (- 36) ?x3886)))
 (let ((?x137 (* 9 s00)))
 (let ((?x611 (* s00 s00)))
 (let ((?x2445 (* 51 ?x611)))
 (let ((?x1627 (* r00 r00 s)))
 (let ((?x1417 (* 36 ?x1627)))
 (let ((?x1204 (* s00 s00 s00)))
 (let ((?x2422 (* 16 ?x1204)))
 (let ((?x825 (* s00 x00)))
 (let ((?x2080 (* (- 108) ?x825)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x3156 (* (- 432) ?x902)))
 (let ((?x542 (* r00 x00)))
 (let ((?x3055 (* 108 ?x542)))
 (let ((?x2543 (+ (* 216 (* r00 s00 x00)) ?x3055 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3156 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2080 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2422 (* (- 108) (* x s)) ?x1417 ?x2445 (* (- 108) (* r00 x)) ?x137 ?x2484 ?x2502 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2538)))
 (let (($x2546 (= ?x2543 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1007 (* (- 9) s00)))
 (let ((?x936 (* (- 15) ?x611)))
 (let ((?x897 (* r00 r00 x00)))
 (let ((?x910 (* (- 36) ?x897)))
 (let ((?x826 (* 6 ?x825)))
 (let ((?x565 (* s s)))
 (let ((?x589 (* 3 ?x565)))
 (let ((?x571 (* (- 54) ?x542)))
 (let ((?x3768 (+ (* (- 24) (* s r)) ?x571 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x589 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x826 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1627) ?x910 ?x936 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1007 (* 36 ?x3886) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x398 (* (- 3) s00)))
 (let ((?x624 (* (- 4) ?x611)))
 (let ((?x566 (* 2 ?x565)))
 (let ((?x556 (* (- 18) ?x542)))
 (let ((?x4352 (+ (* (- 9) (* s r)) ?x556 (* 9 (* r00 s00)) ?x566 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1627) ?x624 (* 18 (* r00 x)) ?x398 (* 6 ?x3886) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2726 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x398 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2741 (= (+ s00 ?x300 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2741 (= ?x2726 0) (= ?x4352 0) (= ?x3768 0) $x2546 (not (= ?x5270 0))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4678 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x872 (+ 3 s ?x214)))
 (let ((?x1405 (+ 1 r)))
 (let ((?x1599 (* r00 s00 ?x1405 ?x872 ?x872 ?x872)))
 (let ((?x300 (* (- 1) s)))
 (let ((?x4147 (+ x ?x300)))
 (let ((?x1612 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x5479 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2320 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2487 (+ (* 3 (* ?x1405 ?x872)) (* (- 3) (* r00 ?x1405 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* (- 6) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 3) (* ?x872 ?x872)) (* 6 (* x00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 r00 ?x872)) (* 12 (* r00 r00 r00 ?x1405 ?x872 ?x872 ?x872)) (* 2 (* ?x1405 ?x1405 ?x872 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 6 (* r00 s00 ?x1405 ?x1405 ?x1405 ?x872)) (* 12 ?x2320) (* 4 (* s00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 6 (* r00 s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 6) (* x00 ?x872)) (* 3 (* s00 ?x1405 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x872)) (* 3 (* s00 ?x872)) (* (- 3) (* s00 ?x1405 ?x1405 ?x1405 ?x872)) (* 3 (* r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* r00 s00 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* ?x1405 ?x4147 ?x872 ?x872 ?x872)) (* (- 6) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x872)) (* 6 (* x00 ?x1405 ?x1405 ?x1405 ?x872)) (* 2 (* ?x1405 ?x872 ?x872)) (* (- 3) (* s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) ?x5479) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x872 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* 6 (* ?x4147 ?x872)) (* (- 4) (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* x00 ?x1405 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* 4 (* s00 ?x1405 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* (- 3) (* r00 ?x872)) (* 3 (* r00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 4) ?x1612) (* (- 6) ?x1599))))
 (let ((?x1366 (* x00 x00)))
 (let ((?x2538 (* 108 ?x1366)))
 (let ((?x2502 (* (- 9) s)))
 (let ((?x3886 (* r00 r00 s00)))
 (let ((?x2484 (* (- 36) ?x3886)))
 (let ((?x137 (* 9 s00)))
 (let ((?x611 (* s00 s00)))
 (let ((?x2445 (* 51 ?x611)))
 (let ((?x1627 (* r00 r00 s)))
 (let ((?x1417 (* 36 ?x1627)))
 (let ((?x1204 (* s00 s00 s00)))
 (let ((?x2422 (* 16 ?x1204)))
 (let ((?x825 (* s00 x00)))
 (let ((?x2080 (* (- 108) ?x825)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x3156 (* (- 432) ?x902)))
 (let ((?x542 (* r00 x00)))
 (let ((?x3055 (* 108 ?x542)))
 (let ((?x2543 (+ (* 216 (* r00 s00 x00)) ?x3055 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3156 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2080 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2422 (* (- 108) (* x s)) ?x1417 ?x2445 (* (- 108) (* r00 x)) ?x137 ?x2484 ?x2502 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2538)))
 (let (($x2546 (= ?x2543 0)))
 (let ((?x1420 (* 15 ?x611)))
 (let ((?x897 (* r00 r00 x00)))
 (let ((?x4237 (* 36 ?x897)))
 (let ((?x2322 (* (- 6) ?x825)))
 (let ((?x4459 (* 54 ?x542)))
 (let ((?x4403 (+ (* 24 (* s r)) ?x4459 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2322 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1417 ?x4237 ?x1420 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2484 (* 54 (* x00 r)) ?x2502 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x519 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3228 (* 4 ?x611)))
 (let ((?x4362 (* 18 ?x542)))
 (let ((?x3303 (+ (* 9 (* s r)) ?x4362 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1627) ?x3228 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x3886) (* 18 (* x00 r)) ?x519 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x489 (* r00 r00 r00)))
 (let ((?x490 (* 12 ?x489)))
 (let ((?x521 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x520 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3580 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x519 ?x520 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x521 ?x490)))
 (let (($x2741 (= (+ s00 ?x300 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2492 (and $x2741 (= ?x3580 0) (= ?x3303 0) (= ?x4403 0) $x2546 (not (= ?x2487 0)))))
 (let ((?x5270 (+ (* (- 3) (* ?x1405 ?x872)) (* 3 (* r00 ?x1405 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 3 (* ?x872 ?x872)) (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 r00 ?x872)) (* (- 12) (* r00 r00 r00 ?x1405 ?x872 ?x872 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x872 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 12) ?x2320) (* (- 4) (* s00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 6 (* x00 ?x872)) (* (- 3) (* s00 ?x1405 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x872)) (* (- 3) (* s00 ?x872)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* r00 s00 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* ?x1405 ?x4147 ?x872 ?x872 ?x872)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x872)) (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 2) (* ?x1405 ?x872 ?x872)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 ?x5479) (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x872 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* (- 6) (* ?x4147 ?x872)) (* 4 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* x00 ?x1405 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* (- 4) (* s00 ?x1405 ?x872)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* 3 (* r00 ?x872)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x872)) (* 4 ?x1612) (* 6 ?x1599))))
 (let ((?x143 (* 9 s)))
 (let ((?x1007 (* (- 9) s00)))
 (let ((?x936 (* (- 15) ?x611)))
 (let ((?x910 (* (- 36) ?x897)))
 (let ((?x826 (* 6 ?x825)))
 (let ((?x565 (* s s)))
 (let ((?x589 (* 3 ?x565)))
 (let ((?x571 (* (- 54) ?x542)))
 (let ((?x3768 (+ (* (- 24) (* s r)) ?x571 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x589 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x826 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1627) ?x910 ?x936 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1007 (* 36 ?x3886) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x398 (* (- 3) s00)))
 (let ((?x624 (* (- 4) ?x611)))
 (let ((?x566 (* 2 ?x565)))
 (let ((?x556 (* (- 18) ?x542)))
 (let ((?x4352 (+ (* (- 9) (* s r)) ?x556 (* 9 (* r00 s00)) ?x566 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1627) ?x624 (* 18 (* r00 x)) ?x398 (* 6 ?x3886) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2726 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x398 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x489))))
 (let (($x4662 (and $x2741 (= ?x2726 0) (= ?x4352 0) (= ?x3768 0) $x2546 (not (= ?x5270 0)))))
 (rewrite (= $x4662 $x2492)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x297 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x219 (- x s)))
 (let ((?x222 (+ (* (- 3) ?x213 ?x215) (* 3 ?x213 r00 ?x215 ?x215 ?x215) (* 12 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219))))
 (let ((?x226 (+ (- ?x222 (* 12 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215)) (* 3 ?x215 ?x215))))
 (let ((?x237 (- (- ?x226 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219 x00)) (* 12 r00 r00 r00 ?x215))))
 (let ((?x239 (- (- ?x237 (* 12 ?x213 r00 r00 r00 ?x215 ?x215 ?x215)) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x241 (- (- ?x239 (* 3 ?x213 ?x213 ?x215 ?x215 ?x215)) (* 6 ?x213 ?x213 ?x213 r00 ?x215 s00))))
 (let ((?x242 (- ?x241 (* 12 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x244 (- (- ?x242 (* 4 ?x213 ?x213 ?x215 ?x215 ?x215 s00)) (* 6 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x219 ?x219))))
 (let ((?x248 (- (+ ?x244 (* 6 ?x215 x00)) (* 3 ?x213 ?x215 ?x215 ?x215 s00))))
 (let ((?x254 (+ (- (+ ?x248 (* 12 ?x213 r00 r00 ?x215)) (* 3 ?x215 s00)) (* 3 ?x213 ?x213 ?x213 ?x215 s00))))
 (let ((?x260 (+ (- ?x254 (* 3 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x219 ?x219)) (* 12 ?x213 ?x213 ?x213 r00 r00 r00 ?x215) (* 6 r00 ?x215 s00) (* 3 ?x213 ?x213 ?x213 ?x213 ?x215))))
 (let ((?x264 (+ (- ?x260 (* 6 ?x213 ?x215 ?x215 ?x215 ?x219)) (* 6 ?x213 ?x213 ?x213 ?x215 ?x219))))
 (let ((?x268 (- (- ?x264 (* 6 ?x213 ?x213 ?x213 ?x215 x00)) (* 2 ?x213 ?x215 ?x215))))
 (let ((?x273 (+ ?x268 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x219 ?x219) (* 12 ?x213 ?x213 ?x213 r00 r00 r00 ?x215 ?x215 ?x215 ?x219 ?x219) (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219) (* 3 ?x213 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x277 (- (- ?x273 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219)) (* 6 ?x215 ?x219))))
 (let ((?x280 (+ ?x277 (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 s00) (* 6 ?x213 ?x215 ?x215 ?x215 x00))))
 (let ((?x284 (- (- ?x280 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215)) (* 4 ?x213 ?x215 s00))))
 (let ((?x287 (+ ?x284 (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215) (* 3 r00 ?x215))))
 (let ((?x292 (+ (- ?x287 (* 3 ?x213 ?x213 ?x213 r00 ?x215)) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x219 ?x219) (* 6 ?x213 r00 ?x215 ?x215 ?x215 s00))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x292 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4828 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x872 (+ 3 s ?x214)))
 (let ((?x1405 (+ 1 r)))
 (let ((?x1599 (* r00 s00 ?x1405 ?x872 ?x872 ?x872)))
 (let ((?x300 (* (- 1) s)))
 (let ((?x4147 (+ x ?x300)))
 (let ((?x1612 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x5479 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x2320 (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)))
 (let ((?x5270 (+ (* (- 3) (* ?x1405 ?x872)) (* 3 (* r00 ?x1405 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 3 (* ?x872 ?x872)) (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* (- 12) (* r00 r00 r00 ?x872)) (* (- 12) (* r00 r00 r00 ?x1405 ?x872 ?x872 ?x872)) (* (- 2) (* ?x1405 ?x1405 ?x872 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 12) ?x2320) (* (- 4) (* s00 ?x1405 ?x1405 ?x872 ?x872 ?x872)) (* (- 6) (* r00 s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 6 (* x00 ?x872)) (* (- 3) (* s00 ?x1405 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 ?x1405 ?x872)) (* (- 3) (* s00 ?x872)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 (* r00 r00 r00 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* r00 s00 ?x872)) (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 6) (* ?x1405 ?x4147 ?x872 ?x872 ?x872)) (* 6 (* ?x1405 ?x1405 ?x1405 ?x4147 ?x872)) (* (- 6) (* x00 ?x1405 ?x1405 ?x1405 ?x872)) (* (- 2) (* ?x1405 ?x872 ?x872)) (* 3 (* s00 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 12 ?x5479) (* 3 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872)) (* 3 (* ?x1405 ?x872 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x4147 ?x4147 ?x872 ?x872 ?x872 ?x872)) (* (- 6) (* ?x4147 ?x872)) (* 4 (* s00 ?x1405 ?x1405 ?x1405 ?x1405 ?x872)) (* 6 (* x00 ?x1405 ?x872 ?x872 ?x872)) (* (- 3) (* ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* (- 4) (* s00 ?x1405 ?x872)) (* 2 (* ?x1405 ?x1405 ?x1405 ?x1405 ?x872 ?x872)) (* 3 (* r00 ?x872)) (* (- 3) (* r00 ?x1405 ?x1405 ?x1405 ?x872)) (* 4 ?x1612) (* 6 ?x1599))))
 (let ((?x1366 (* x00 x00)))
 (let ((?x2538 (* 108 ?x1366)))
 (let ((?x2502 (* (- 9) s)))
 (let ((?x3886 (* r00 r00 s00)))
 (let ((?x2484 (* (- 36) ?x3886)))
 (let ((?x137 (* 9 s00)))
 (let ((?x611 (* s00 s00)))
 (let ((?x2445 (* 51 ?x611)))
 (let ((?x1627 (* r00 r00 s)))
 (let ((?x1417 (* 36 ?x1627)))
 (let ((?x1204 (* s00 s00 s00)))
 (let ((?x2422 (* 16 ?x1204)))
 (let ((?x825 (* s00 x00)))
 (let ((?x2080 (* (- 108) ?x825)))
 (let ((?x902 (* r00 r00 r00 x00)))
 (let ((?x3156 (* (- 432) ?x902)))
 (let ((?x542 (* r00 x00)))
 (let ((?x3055 (* 108 ?x542)))
 (let ((?x2543 (+ (* 216 (* r00 s00 x00)) ?x3055 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3156 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2080 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2422 (* (- 108) (* x s)) ?x1417 ?x2445 (* (- 108) (* r00 x)) ?x137 ?x2484 ?x2502 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2538)))
 (let (($x2546 (= ?x2543 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1007 (* (- 9) s00)))
 (let ((?x936 (* (- 15) ?x611)))
 (let ((?x897 (* r00 r00 x00)))
 (let ((?x910 (* (- 36) ?x897)))
 (let ((?x826 (* 6 ?x825)))
 (let ((?x565 (* s s)))
 (let ((?x589 (* 3 ?x565)))
 (let ((?x571 (* (- 54) ?x542)))
 (let ((?x3768 (+ (* (- 24) (* s r)) ?x571 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x589 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x826 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1627) ?x910 ?x936 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1007 (* 36 ?x3886) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x398 (* (- 3) s00)))
 (let ((?x624 (* (- 4) ?x611)))
 (let ((?x566 (* 2 ?x565)))
 (let ((?x556 (* (- 18) ?x542)))
 (let ((?x4352 (+ (* (- 9) (* s r)) ?x556 (* 9 (* r00 s00)) ?x566 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1627) ?x624 (* 18 (* r00 x)) ?x398 (* 6 ?x3886) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2726 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x398 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2741 (= (+ s00 ?x300 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4662 (and $x2741 (= ?x2726 0) (= ?x4352 0) (= ?x3768 0) $x2546 (not (= ?x5270 0)))))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x219 (- x s)))
 (let ((?x222 (+ (* (- 3) ?x213 ?x215) (* 3 ?x213 r00 ?x215 ?x215 ?x215) (* 12 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215) (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219) (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219 ?x219))))
 (let ((?x226 (+ (- ?x222 (* 12 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215)) (* 3 ?x215 ?x215))))
 (let ((?x237 (- (- ?x226 (* 6 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219 x00)) (* 12 r00 r00 r00 ?x215))))
 (let ((?x239 (- (- ?x237 (* 12 ?x213 r00 r00 r00 ?x215 ?x215 ?x215)) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x241 (- (- ?x239 (* 3 ?x213 ?x213 ?x215 ?x215 ?x215)) (* 6 ?x213 ?x213 ?x213 r00 ?x215 s00))))
 (let ((?x242 (- ?x241 (* 12 ?x213 ?x213 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x244 (- (- ?x242 (* 4 ?x213 ?x213 ?x215 ?x215 ?x215 s00)) (* 6 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 s00 ?x219 ?x219))))
 (let ((?x248 (- (+ ?x244 (* 6 ?x215 x00)) (* 3 ?x213 ?x215 ?x215 ?x215 s00))))
 (let ((?x254 (+ (- (+ ?x248 (* 12 ?x213 r00 r00 ?x215)) (* 3 ?x215 s00)) (* 3 ?x213 ?x213 ?x213 ?x215 s00))))
 (let ((?x260 (+ (- ?x254 (* 3 ?x213 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x219 ?x219)) (* 12 ?x213 ?x213 ?x213 r00 r00 r00 ?x215) (* 6 r00 ?x215 s00) (* 3 ?x213 ?x213 ?x213 ?x213 ?x215))))
 (let ((?x264 (+ (- ?x260 (* 6 ?x213 ?x215 ?x215 ?x215 ?x219)) (* 6 ?x213 ?x213 ?x213 ?x215 ?x219))))
 (let ((?x268 (- (- ?x264 (* 6 ?x213 ?x213 ?x213 ?x215 x00)) (* 2 ?x213 ?x215 ?x215))))
 (let ((?x273 (+ ?x268 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x219 ?x219) (* 12 ?x213 ?x213 ?x213 r00 r00 r00 ?x215 ?x215 ?x215 ?x219 ?x219) (* 3 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219) (* 3 ?x213 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x277 (- (- ?x273 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x215 ?x219 ?x219)) (* 6 ?x215 ?x219))))
 (let ((?x280 (+ ?x277 (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 s00) (* 6 ?x213 ?x215 ?x215 ?x215 x00))))
 (let ((?x284 (- (- ?x280 (* 3 ?x213 ?x213 ?x213 ?x215 ?x215)) (* 4 ?x213 ?x215 s00))))
 (let ((?x287 (+ ?x284 (* 2 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215) (* 3 r00 ?x215))))
 (let ((?x292 (+ (- ?x287 (* 3 ?x213 ?x213 ?x213 r00 ?x215)) (* 4 ?x213 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 s00 ?x219 ?x219) (* 6 ?x213 r00 ?x215 ?x215 ?x215 s00))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x296 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x292 0))))))
 (rewrite (= $x296 $x4662)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x298 (asserted $x297)))
 (let ((@x4160 (mp (mp @x298 (quant-intro (proof-bind ?x4828) (= $x297 $x3142)) $x3142) (rewrite (= $x3142 $x3142)) $x3142)))
 (let ((@x3693 (mp (mp @x4160 (quant-intro (proof-bind ?x4678) (= $x3142 $x4140)) $x4140) (quant-intro (proof-bind ?x4719) (= $x4140 $x4717)) $x4717)))
 (let ((@x428 (mp (mp~ @x3693 (sk (~ $x4717 $x383)) $x383) (rewrite (= $x383 $x1301)) $x1301)))
 (let ((@x2243 (and-elim @x428 $x2995)))
 (let ((@x1438 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2995) $x4211)) @x2243 $x4211)))
 (let (($x3015 (>= ?x2992 0)))
 (let ((@x1818 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2995) $x3015)) @x2243 $x3015)))
 (let (($x2841 (<= ?x1768 0)))
 (let ((@x430 (and-elim @x428 $x1773)))
 (let ((@x736 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1773) $x2841)) @x430 $x2841)))
 (let (($x3029 (>= ?x1768 0)))
 (let ((@x939 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1773) $x3029)) @x430 $x3029)))
 (let (($x3419 (<= ?x3416 0)))
 (let ((@x2245 (and-elim @x428 $x2196)))
 (let ((@x941 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2196) $x3419)) @x2245 $x3419)))
 (let (($x2284 (>= ?x3416 0)))
 (let ((@x515 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2196) $x2284)) @x2245 $x2284)))
 (let (($x754 (<= ?x1295 0)))
 (let ((@x2242 (and-elim @x428 $x1296)))
 (let ((@x1299 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1296) $x754)) @x2242 $x754)))
 (let (($x4246 (>= ?x1295 0)))
 (let ((@x3047 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1296) $x4246)) @x2242 $x4246)))
 (let (($x3551 (<= ?x3153 0)))
 (let ((@x2199 (and-elim @x428 $x2911)))
 (let ((@x1177 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2911) $x3551)) @x2199 $x3551)))
 (let (($x3063 (>= ?x3153 0)))
 (let ((@x3045 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2911) $x3063)) @x2199 $x3063)))
 (let (($x4417 (not (<= ?x1255 9))))
 (let (($x2915 (>= ?x1255 9)))
 (let ((@x306 ((_ th-lemma arith) (hypothesis (not $x2915)) @x515 @x941 @x1818 @x1438 @x1818 @x1438 @x515 @x941 @x3045 @x1177 @x939 @x736 @x3047 @x1299 @x1818 @x1438 @x939 @x736 @x1818 @x1438 @x515 @x941 @x3047 @x1299 @x939 @x736 @x3047 @x1299 @x515 @x941 @x1818 @x1438 @x939 @x736 @x3047 @x1299 @x3047 @x1299 @x515 @x941 @x515 @x941 @x1818 @x1438 @x939 @x736 @x1818 @x1438 @x939 @x736 @x3047 @x1299 @x515 @x941 @x939 @x736 @x1818 @x1438 false)))
 (let ((@x3031 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x415 $x4417 (not $x2915))) (and-elim @x428 $x424) (or $x4417 (not $x2915)))))
 ((_ th-lemma arith) (unit-resolution @x3031 (lemma @x306 $x2915) $x4417) @x515 @x941 @x1818 @x1438 @x1818 @x1438 @x515 @x941 @x3045 @x1177 @x939 @x736 @x3047 @x1299 @x1818 @x1438 @x939 @x736 @x1818 @x1438 @x515 @x941 @x3047 @x1299 @x939 @x736 @x3047 @x1299 @x515 @x941 @x1818 @x1438 @x939 @x736 @x3047 @x1299 @x3047 @x1299 @x515 @x941 @x515 @x941 @x1818 @x1438 @x939 @x736 @x1818 @x1438 @x939 @x736 @x3047 @x1299 @x515 @x941 @x939 @x736 @x1818 @x1438 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        37
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-max-min             1106
 :arith-nonlinear-bounds    30
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              6
 :arith-row-summations      15
 :arith-tableau-max-columns 220
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                8.42
 :memory                    3.91
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                8244499846.00
 :num-checks                1
 :propagations              12
 :rlimit-count              2786904
 :time                      1.87
 :total-time                1.88)
