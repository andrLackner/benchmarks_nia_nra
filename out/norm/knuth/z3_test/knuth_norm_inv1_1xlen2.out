unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1133 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 4) (* d!1 x!0)) (* (- 1) (* q!3 d!1 d!1)) (* 4 (* d!1 r!2)) (* 2 (* q!3 d!1)) (* (- 8) r!2))))
 (let (($x2905 (<= ?x1133 0)))
 (let (($x1129 (= ?x1133 0)))
 (let ((?x848 (* (- 1) x!0)))
 (let ((?x5931 (* 2 r!2)))
 (let ((?x7395 (* (- 2) d!1)))
 (let ((?x1186 (+ (- 4) q!3 ?x7395 ?x5931 ?x848)))
 (let ((?x2955 (+ 2 d!1)))
 (let ((?x9463 (+ (- 8) q!3)))
 (let ((?x1211 (* (- 4) (* ?x9463 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2 r!2))))
 (let ((?x6161 (* d00 d00 q00 ?x9463 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2)))
 (let ((?x4758 (* 4 (* ?x9463 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2))))
 (let ((?x8255 (* (- 2) (* d00 q00 ?x9463 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2))))
 (let ((?x5380 (* (- 1) (* ?x9463 ?x9463 ?x2955 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2))))
 (let ((?x6037 (* (- 4) (* d00 r00 ?x9463 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2))))
 (let ((?x6816 (* 4 (* d00 x00 ?x9463 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2))))
 (let ((?x1360 (* 2 (* ?x9463 ?x9463 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2))))
 (let ((?x5932 (+ (* 8 (* r00 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2)) ?x1360 (* 8 (* r00 ?x9463 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2)) ?x6816 ?x6037 (* (- 1) (* ?x9463 ?x2955 ?x2955 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2)) (* 4 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2)) (* 2 (* ?x9463 ?x2955 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2)) (* d00 d00 q00 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2) (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2 r!2)) (* 4 (* d00 x00 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2)) (* (- 8) (* ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 r!2 r!2)) (* (- 8) (* ?x9463 ?x2955 ?x2955 ?x1186 ?x1186 ?x1186 ?x1186 r!2 r!2 r!2)) (* (- 2) (* d00 q00 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2)) ?x5380 ?x8255 (* (- 4) (* d00 r00 ?x2955 ?x2955 ?x2955 ?x1186 ?x1186 r!2 r!2)) ?x4758 ?x6161 ?x1211)))
 (let (($x2867 (= ?x5932 0)))
 (let (($x10327 (not $x2867)))
 (let ((?x10013 (* d00 x00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x7056 (+ q!3 ?x5931 ?x848)))
 (let ((?x5010 (* (- 2) (* ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x7808 (* (- 24) (* d00 q00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 x!0))))
 (let ((?x9915 (* r00 d00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x7615 (* (- 4) (* d00 d00 q00 q!3 d!1 d!1 d!1 r!2 r!2 r!2))))
 (let ((?x9263 (* r00 d00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2)))
 (let ((?x7832 (* (- 4) (* d00 d00 q00 q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x9219 (* d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x8188 (* (- 16) (* d00 x00 q!3 q!3 q!3 q!3 d!1 r!2 r!2 r!2))))
 (let ((?x8885 (* d00 d00 q00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x2750 (* (- 4) (* d00 d00 q00 d!1 d!1 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x8812 (* d00 d00 q00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 r!2)))
 (let ((?x8582 (* d00 d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x8494 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 r!2 r!2 q!3)))
 (let ((?x6127 (* 48 (* r00 d00 q!3 q!3 d!1 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x8340 (* r00 d00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x8110 (* r00 d00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x8109 (* d00 x00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x8081 (* d00 x00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x8721 (* (- 192) (* d00 x00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x8045 (* d00 d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x7874 (* (- 192) (* r00 d00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x1880 (* 96 (* d00 q00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x7781 (* d00 q00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0)))
 (let ((?x7779 (* d00 q00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2)))
 (let ((?x3179 (* 8 (* d00 q00 q!3 q!3 q!3 q!3 d!1 r!2 r!2 r!2))))
 (let ((?x7769 (* d00 x00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x9946 (* 48 (* d00 q00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x7480 (* (- 128) (* d00 x00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x7751 (* d00 d00 q00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x7750 (* d00 d00 q00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x7747 (* d00 d00 q00 q!3 q!3 d!1 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x7462 (* 192 (* r00 d00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x7359 (* (- 1) (* d00 d00 q00 q!3 q!3 d!1 d!1 d!1 r!2 r!2))))
 (let ((?x7595 (* r00 d00 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0 x!0)))
 (let ((?x7556 (* d00 d00 q00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x7777 (* 192 (* d00 x00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x7472 (* d00 q00 q!3 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x7466 (* d00 d00 q00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x7457 (* d00 d00 q00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x7633 (* 48 (* d00 d00 q00 q!3 q!3 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x10010 (* (- 48) (* d00 d00 q00 q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x7399 (* d00 x00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2)))
 (let ((?x7386 (* 4 (* d00 d00 q00 d!1 d!1 d!1 r!2 r!2 r!2 x!0))))
 (let ((?x7379 (* 2 (* d00 d00 q00 q!3 d!1 d!1 d!1 r!2 r!2 x!0))))
 (let ((?x9599 (* (- 16) (* r00 d00 q!3 d!1 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x7341 (* (- 48) (* r00 d00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 x!0))))
 (let ((?x7355 (* 8 (* ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 ?x7056 r!2 r!2 r!2 q!3))))
 (let ((?x7131 (* d00 x00 q!3 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x7030 (* d00 d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x6908 (* r00 d00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x1222 (* (- 192) (* r00 d00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x7499 (* (- 96) (* d00 x00 q!3 d!1 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x5855 (* r00 d00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0)))
 (let ((?x8833 (* 192 (* d00 x00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x4741 (* 16 (* d00 x00 q!3 d!1 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x5418 (* d00 q00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x3579 (* 64 (* d00 q00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x5011 (* d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0 x!0)))
 (let ((?x4742 (* d00 x00 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0 x!0)))
 (let ((?x1181 (* (- 12) (* d00 d00 q00 q!3 q!3 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x4338 (* d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x7725 (* 48 (* d00 q00 q!3 d!1 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x3093 (* (- 96) (* d00 x00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x2689 (* (- 96) (* d00 q00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x3375 (* d00 x00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x2096 (* (- 1) (* d00 d00 q00 d!1 d!1 d!1 r!2 r!2 x!0 x!0))))
 (let ((?x3181 (* d00 q00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x3083 (* r00 d00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x3077 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 r!2 r!2 r!2 q!3 q!3)))
 (let ((?x713 (* (- 8) (* d00 q00 q!3 d!1 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x2048 (* 4 (* ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 r!2 r!2 r!2 r!2 q!3))))
 (let ((?x2970 (* d00 d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 x!0 x!0 x!0)))
 (let ((?x2900 (* d00 q00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x3268 (* (- 96) (* d00 q00 q!3 q!3 d!1 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x3102 (* 24 (* d00 q00 q!3 q!3 d!1 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x2839 (* d00 d00 q00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2)))
 (let ((?x2748 (* d00 d00 q00 q!3 q!3 q!3 q!3 d!1 r!2 r!2 r!2)))
 (let ((?x2727 (* d00 d00 q00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0)))
 (let ((?x2722 (* d00 d00 q00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 x!0)))
 (let ((?x2704 (* d00 d00 q00 q!3 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x2677 (* (- 24) (* d00 d00 q00 q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x2694 (* d00 d00 q00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 r!2)))
 (let ((?x2656 (* (- 32) (* d00 d00 q00 q!3 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x2468 (* 48 (* d00 d00 q00 q!3 r!2 r!2 r!2 r!2 r!2 x!0))))
 (let ((?x2649 (* r00 d00 q!3 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x2477 (* 4 (* d00 d00 q00 q!3 r!2 r!2 r!2 x!0 x!0 x!0))))
 (let ((?x2630 (* d00 d00 q00 q!3 d!1 r!2 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x2842 (* 16 (* r00 d00 q!3 q!3 q!3 q!3 d!1 r!2 r!2 r!2))))
 (let ((?x2624 (* d00 d00 q00 q!3 d!1 r!2 r!2 r!2 x!0 x!0 x!0)))
 (let ((?x7588 (* (- 24) (* d00 d00 q00 q!3 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x6828 (* 96 (* r00 d00 q!3 d!1 r!2 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x2120 (* d00 q00 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x8488 (* (- 8) (* r00 ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 r!2 r!2 r!2 q!3))))
 (let ((?x2067 (* d00 x00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 x!0 x!0)))
 (let ((?x1253 (* 48 (* d00 x00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 x!0))))
 (let ((?x9255 (* 128 (* r00 d00 q!3 d!1 r!2 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x7956 (* (- 48) (* d00 x00 q!3 q!3 d!1 r!2 r!2 r!2 x!0 x!0))))
 (let ((?x1059 (* 4 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 r!2 r!2 r!2))))
 (let ((?x990 (* (- 2) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 r!2 r!2 q!3))))
 (let ((?x976 (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 r!2 r!2))))
 (let ((?x828 (* d00 x00 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 x!0)))
 (let ((?x707 (* 8 (* ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 r!2 r!2))))
 (let ((?x953 (* 12 (* d00 d00 q00 q!3 q!3 q!3 r!2 r!2 r!2 x!0))))
 (let ((?x468 (* r00 d00 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2 x!0)))
 (let ((?x641 (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x7056 ?x7056 ?x7056 ?x7056 r!2 r!2 r!2 q!3))))
 (let ((?x2759 (* 96 (* r00 d00 q!3 q!3 q!3 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x2897 (+ ?x2759 (* 96 (* d00 x00 q!3 d!1 r!2 r!2 x!0)) ?x641 (* 2 (* d00 q00 q!3 q!3 d!1 d!1 d!1 r!2 r!2)) (* (- 96) (* r00 d!1 r!2 r!2 x!0 x!0)) (* (- 48) ?x468) ?x953 (* 4 (* r00 d00 d!1 d!1 d!1 r!2 r!2 x!0 x!0)) ?x707 (* 12 ?x828) (* (- 4) (* d00 q00 q!3 d!1 d!1 d!1 r!2 r!2 x!0)) (* (- 384) (* r00 q!3 d!1 r!2 r!2 r!2)) (* (- 96) (* r00 d00 d!1 d!1 r!2 r!2 r!2 x!0)) ?x976 ?x990 ?x1059 (* (- 12) (* d00 d00 q00 d!1 r!2 r!2 x!0 x!0)) (* 192 (* r00 d!1 d!1 r!2 r!2 r!2 x!0)) (* (- 48) (* r00 q!3 q!3 d!1 d!1 r!2 r!2)) (* 8 (* d00 q00 q!3 d!1 d!1 d!1 r!2 r!2 r!2)) (* 96 (* d00 q00 q!3 d!1 r!2 r!2 r!2)) (* 96 (* d00 q00 d!1 r!2 r!2 r!2 r!2)) (* 48 (* d00 q00 d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 32) (* r00 q!3 d!1 d!1 d!1 r!2 r!2 r!2)) (* 48 (* d00 q00 q!3 d!1 d!1 r!2 r!2 r!2)) ?x7956 (* (- 48) (* d00 d00 q00 q!3 d!1 r!2 r!2 r!2)) (* 12 (* d00 q00 q!3 q!3 d!1 d!1 r!2 r!2)) ?x9255 (* 24 (* r00 d00 d!1 d!1 r!2 r!2 x!0 x!0)) (* 12 (* d00 d00 q00 q!3 d!1 d!1 r!2 r!2 x!0)) (* 96 (* d00 x00 d!1 d!1 r!2 r!2 r!2 x!0)) (* (- 8) (* r00 d00 q!3 d!1 d!1 d!1 r!2 r!2 x!0)) (* 192 (* r00 d00 q!3 d!1 r!2 r!2 r!2)) ?x1253 (* (- 24) ?x2067) ?x8488 (* (- 24) ?x2120) (* 48 (* r00 d00 q!3 q!3 d!1 r!2 r!2)) ?x6828 (* 16 (* d00 q00 r!2 r!2 x!0 x!0)) ?x7588 (* 64 (* d00 q00 q!3 r!2 r!2 r!2 r!2 r!2 r!2)) (* (- 96) (* d00 q00 q!3 q!3 r!2 r!2 r!2 r!2 x!0)) (* 96 (* r00 d00 d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 128) (* d00 x00 q!3 r!2 r!2 r!2)) (* (- 192) (* r00 d00 q!3 q!3 r!2 r!2 r!2 r!2 x!0)) (* (- 128) (* d00 x00 r!2 r!2 r!2 r!2)) (* (- 64) (* d00 q00 r!2 r!2 r!2 x!0)) (* 96 (* r00 d00 q!3 r!2 r!2 r!2 r!2 x!0 x!0)) (* 192 (* r00 d00 q!3 q!3 r!2 r!2 r!2 r!2 r!2)) (* (- 32) (* d00 q00 q!3 r!2 r!2 x!0)) (* (- 96) (* d00 x00 q!3 r!2 r!2 r!2 r!2 x!0 x!0)) (* 96 (* d00 q00 q!3 q!3 r!2 r!2 r!2 r!2 r!2)) (* 48 (* r00 d00 d!1 r!2 r!2 x!0 x!0)) (* 4 ?x2624) ?x2842 (* (- 24) ?x2630) ?x2477 (* 4 ?x2649) ?x2468 ?x2656 (* (- 64) (* r00 q!3 q!3 r!2 r!2)) (* (- 256) (* r00 q!3 r!2 r!2 r!2)) (* 256 (* r00 r!2 r!2 r!2 x!0)) (* (- 64) (* r00 r!2 r!2 x!0 x!0)) (* (- 8) (* d00 d00 q00 r!2 r!2 x!0 x!0)) (* (- 32) ?x2694) ?x2677 (* (- 1) ?x2704) (* 16 (* r00 d00 q!3 q!3 q!3 q!3 r!2 r!2 r!2)) (* 12 ?x2722) (* 3 ?x2727) (* (- 4) ?x2748) (* (- 48) (* r00 d00 q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* (- 24) (* d00 x00 d!1 d!1 r!2 r!2 x!0 x!0)) (* (- 6) ?x2839) (* (- 32) (* d00 d00 q00 r!2 r!2 r!2 r!2)) (* (- 32) (* d00 d00 q00 q!3 r!2 r!2 r!2)) (* 48 (* d00 q00 q!3 q!3 q!3 r!2 r!2 r!2 r!2)) (* (- 96) (* d00 q00 q!3 r!2 r!2 r!2 r!2 r!2 x!0)) ?x3102 (* 48 (* d00 q00 q!3 r!2 r!2 r!2 r!2 x!0 x!0)) ?x3268 (* (- 24) ?x2900) ?x2970 (* (- 32) (* d00 x00 r!2 r!2 x!0 x!0)) (* 128 (* d00 x00 r!2 r!2 r!2 x!0)) ?x2048 (* 64 (* d00 x00 q!3 r!2 r!2 x!0)) ?x713 (* (- 32) (* d00 x00 q!3 q!3 r!2 r!2)) (* (- 16) (* r00 d00 q!3 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 192) (* r00 d00 q!3 r!2 r!2 r!2 r!2 r!2 x!0)) (* 128 (* r00 d00 q!3 r!2 r!2 r!2 r!2 r!2 r!2)) (* 96 (* r00 d00 q!3 q!3 q!3 r!2 r!2 r!2 r!2)) (* 64 (* d00 q00 r!2 r!2 r!2 r!2)) (* 16 (* d00 q00 q!3 q!3 r!2 r!2)) (* 64 (* d00 q00 q!3 r!2 r!2 r!2)) (* 32 (* r00 d00 r!2 r!2 x!0 x!0)) (* 128 (* r00 d00 r!2 r!2 r!2 r!2)) ?x3077 (* 48 ?x3083) (* 32 (* r00 d00 q!3 q!3 r!2 r!2)) (* 128 (* r00 d00 q!3 r!2 r!2 r!2)) (* 96 (* r00 d00 q!3 d!1 d!1 r!2 r!2 r!2)) (* (- 64) (* r00 d00 q!3 r!2 r!2 x!0)) (* 16 (* d00 x00 q!3 r!2 r!2 r!2 x!0 x!0 x!0)) (* 8 (* d00 q00 q!3 q!3 q!3 q!3 r!2 r!2 r!2)) (* 192 (* d00 x00 q!3 r!2 r!2 r!2 r!2 r!2 x!0)) (* (- 128) (* d00 x00 q!3 r!2 r!2 r!2 r!2 r!2 r!2)) (* 192 (* d00 x00 q!3 q!3 r!2 r!2 r!2 r!2 x!0)) (* (- 48) (* d00 x00 q!3 q!3 r!2 r!2 r!2 x!0 x!0)) (* (- 192) (* d00 x00 q!3 q!3 r!2 r!2 r!2 r!2 r!2)) (* (- 96) (* d00 x00 q!3 q!3 q!3 r!2 r!2 r!2 r!2)) (* 192 (* r00 q!3 d!1 r!2 r!2 x!0)) (* 48 (* d00 x00 q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* (- 16) (* d00 x00 q!3 q!3 q!3 q!3 r!2 r!2 r!2)) (* 24 ?x3181) ?x2096 (* (- 48) ?x3375) ?x2689 ?x3093 ?x7725 (* 16 ?x4338) (* (- 48) (* d00 x00 d!1 r!2 r!2 x!0 x!0)) ?x1181 (* 192 (* d00 x00 d!1 r!2 r!2 r!2 x!0)) (* 32 (* d00 d00 q00 r!2 r!2 r!2 x!0)) (* 4 ?x4742) (* (- 192) (* r00 d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 384) (* r00 d!1 r!2 r!2 r!2 r!2)) (* (- 2) ?x5011) (* (- 16) (* d00 x00 q!3 d!1 d!1 d!1 r!2 r!2 r!2)) ?x3579 (* 6 ?x5418) (* 16 (* r00 d00 d!1 d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 24) (* d00 q00 q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* 24 (* d00 q00 q!3 q!3 r!2 r!2 r!2 x!0 x!0)) ?x4741 ?x8833 (* (- 12) ?x5855) (* 32 (* r00 d!1 d!1 d!1 r!2 r!2 r!2 x!0)) (* 4 (* r00 d00 q!3 q!3 d!1 d!1 d!1 r!2 r!2)) ?x7499 ?x1222 (* 12 ?x6908) (* 16 (* r00 d00 q!3 d!1 d!1 d!1 r!2 r!2 r!2)) (* (- 6) ?x7030) (* (- 4) ?x7131) (* (- 192) (* d00 x00 d!1 r!2 r!2 r!2 r!2)) (* 8 (* d00 x00 q!3 d!1 d!1 d!1 r!2 r!2 x!0)) (* (- 96) (* d00 x00 q!3 d!1 d!1 r!2 r!2 r!2)) ?x7355 (* (- 96) (* d00 x00 d!1 d!1 r!2 r!2 r!2 r!2)) ?x7341 ?x9599 (* (- 4) (* d00 x00 q!3 q!3 d!1 d!1 d!1 r!2 r!2)) (* (- 48) (* d00 d00 q00 d!1 r!2 r!2 r!2 r!2)) ?x7379 (* (- 24) (* d00 d00 q00 q!3 d!1 d!1 r!2 r!2 r!2)) ?x7386 (* 24 (* r00 d00 q!3 q!3 d!1 d!1 r!2 r!2)) (* (- 24) ?x7399) (* (- 8) (* r00 d!1 d!1 d!1 r!2 r!2 x!0 x!0)) (* (- 6) (* d00 d00 q00 q!3 q!3 d!1 d!1 r!2 r!2)) (* 2 (* d00 q00 d!1 d!1 d!1 r!2 r!2 x!0 x!0)) (* (- 8) (* d00 d00 q00 q!3 q!3 r!2 r!2)) (* 128 (* r00 q!3 r!2 r!2 x!0)) ?x10010 ?x7633 (* 48 ?x7457) (* 12 ?x7466) (* 2 ?x7472) ?x7777 (* (- 8) (* d00 q00 q!3 r!2 r!2 r!2 x!0 x!0 x!0)) (* (- 128) (* r00 d00 r!2 r!2 r!2 x!0)) (* (- 16) (* r00 d00 d!1 d!1 d!1 r!2 r!2 r!2 x!0)) (* (- 48) ?x7556) (* 48 (* d00 x00 q!3 d!1 d!1 r!2 r!2 x!0)) (* (- 192) (* d00 x00 q!3 d!1 r!2 r!2 r!2)) (* (- 24) (* d00 x00 q!3 q!3 d!1 d!1 r!2 r!2)) (* (- 48) (* d00 x00 q!3 q!3 d!1 r!2 r!2)) (* (- 4) ?x7595) (* (- 48) (* r00 d!1 d!1 r!2 r!2 x!0 x!0)) (* 192 (* r00 d00 d!1 r!2 r!2 r!2 r!2)) (* 96 (* r00 q!3 d!1 d!1 r!2 r!2 x!0)) ?x7359 (* 48 (* d00 d00 q00 d!1 r!2 r!2 r!2 x!0)) (* (- 24) (* d00 d00 q00 d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 12) (* d00 d00 q00 q!3 q!3 d!1 r!2 r!2)) (* (- 48) (* d00 q00 d!1 d!1 r!2 r!2 r!2 x!0)) (* 24 (* d00 d00 q00 q!3 d!1 r!2 r!2 x!0)) (* (- 8) (* d00 q00 d!1 d!1 d!1 r!2 r!2 r!2 x!0)) (* 16 (* d00 x00 d!1 d!1 d!1 r!2 r!2 r!2 x!0)) (* 12 (* d00 q00 d!1 d!1 r!2 r!2 x!0 x!0)) (* 24 (* d00 q00 d!1 r!2 r!2 x!0 x!0)) ?x7462 (* (- 48) (* r00 d00 q!3 d!1 d!1 r!2 r!2 x!0)) (* (- 192) (* r00 d00 d!1 r!2 r!2 r!2 x!0)) (* (- 96) (* r00 d00 q!3 d!1 r!2 r!2 x!0)) (* (- 256) (* r00 r!2 r!2 r!2 r!2)) (* (- 12) ?x7747) (* (- 12) ?x7750) (* (- 3) ?x7751) ?x7480 ?x9946 (* 48 ?x7769) ?x3179 (* 12 ?x7779) (* (- 6) ?x7781) ?x1880 (* (- 8) (* r00 q!3 q!3 d!1 d!1 d!1 r!2 r!2)) ?x7874 (* (- 32) (* r00 d!1 d!1 d!1 r!2 r!2 r!2 r!2)) (* 24 (* d00 q00 q!3 q!3 d!1 r!2 r!2)) (* 12 ?x8045) ?x8721 (* (- 12) ?x8081) (* 48 ?x8109) (* 32 ?x8110) (* 24 ?x8340) ?x6127 (* (- 96) (* r00 q!3 q!3 d!1 r!2 r!2)) ?x8494 (* (- 4) (* d00 x00 d!1 d!1 d!1 r!2 r!2 x!0 x!0)) (* (- 8) ?x8582) (* (- 48) (* d00 q00 q!3 d!1 r!2 r!2 x!0)) (* (- 6) (* d00 d00 q00 d!1 d!1 r!2 r!2 x!0 x!0)) (* (- 24) ?x8812) ?x2750 (* (- 16) (* d00 x00 d!1 d!1 d!1 r!2 r!2 r!2 r!2)) (* 384 (* r00 d!1 r!2 r!2 r!2 x!0)) (* 48 ?x8885) (* 16 (* d00 d00 q00 q!3 r!2 r!2 x!0)) ?x8188 (* (- 192) (* r00 q!3 d!1 d!1 r!2 r!2 r!2)) (* 12 ?x9219) ?x7832 (* (- 96) (* d00 q00 d!1 r!2 r!2 r!2 x!0)) (* 24 ?x9263) (* 16 (* r00 q!3 d!1 d!1 d!1 r!2 r!2 x!0)) ?x7615 (* 8 (* d00 q00 d!1 d!1 d!1 r!2 r!2 r!2 r!2)) (* 24 (* d00 d00 q00 d!1 d!1 r!2 r!2 r!2 x!0)) (* (- 24) (* d00 q00 q!3 d!1 d!1 r!2 r!2 x!0)) (* (- 48) ?x9915) ?x7808 ?x5010 (* 48 (* r00 d00 q!3 q!3 r!2 r!2 r!2 x!0 x!0)) (* (- 32) ?x10013))))
 (let (($x2914 (= ?x2897 0)))
 (let ((?x7775 (* (- 1) d!1)))
 (let ((?x745 (+ (- 2) q!3 ?x7775 ?x5931 ?x848)))
 (let ((?x7485 (+ (- 4) q!3)))
 (let ((?x1187 (* (- 4) (* ?x7485 ?x2955 ?x2955 ?x2955 ?x745 ?x745 ?x745 ?x745 r!2 r!2 r!2))))
 (let ((?x4791 (* d00 d00 q00 ?x7485 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2)))
 (let ((?x8975 (* 2 (* d00 q00 ?x7485 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2))))
 (let ((?x4460 (* (- 4) (* d00 x00 ?x7485 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2))))
 (let ((?x5389 (* (- 1) (* d00 d00 q00 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2))))
 (let ((?x478 (* (- 2) (* ?x7485 ?x7485 ?x2955 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2))))
 (let ((?x6176 (* 4 (* ?x7485 ?x2955 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2 r!2))))
 (let ((?x5387 (* 4 (* d00 r00 ?x7485 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2))))
 (let ((?x1192 (+ (* 8 (* ?x2955 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2)) (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2)) (* 4 (* d00 r00 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2)) ?x5387 ?x6176 (* ?x7485 ?x2955 ?x2955 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2) (* ?x7485 ?x7485 ?x2955 ?x2955 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2) ?x478 (* 4 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2 r!2)) (* (- 8) (* r00 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2)) ?x5389 ?x4460 ?x8975 (* 2 (* d00 q00 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2)) (* (- 8) (* r00 ?x7485 ?x2955 ?x2955 ?x745 ?x745 ?x745 r!2 r!2 r!2)) (* (- 1) ?x4791) (* (- 4) (* d00 x00 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2)) (* (- 2) (* ?x7485 ?x2955 ?x2955 ?x2955 ?x2955 ?x745 ?x745 r!2 r!2)) (* 8 (* ?x7485 ?x2955 ?x2955 ?x745 ?x745 ?x745 ?x745 r!2 r!2 r!2)) ?x1187)))
 (let (($x1190 (= ?x1192 0)))
 (let ((?x381 (+ 2 q!3 d!1 ?x5931 ?x848)))
 (let ((?x5873 (* 2 (* ?x2955 ?x2955 ?x2955 ?x2955 (+ 4 q!3) ?x381 ?x381 r!2 r!2))))
 (let ((?x969 (* (- 8) (* ?x2955 ?x2955 (+ 4 q!3) ?x381 ?x381 ?x381 ?x381 r!2 r!2 r!2))))
 (let ((?x7329 (+ 4 q!3)))
 (let ((?x8334 (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2 r!2))))
 (let ((?x1201 (* 2 (* ?x2955 ?x2955 ?x2955 ?x7329 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2))))
 (let ((?x1137 (* d00 d00 q00 ?x2955 ?x2955 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2)))
 (let ((?x829 (* (- 1) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7329 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2))))
 (let ((?x1139 (* (- 4) (* d00 r00 ?x2955 ?x2955 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2))))
 (let ((?x4373 (* (- 2) (* d00 q00 ?x2955 ?x2955 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2))))
 (let ((?x1218 (* 4 (* ?x2955 ?x2955 ?x2955 ?x7329 ?x381 ?x381 ?x381 ?x381 r!2 r!2 r!2))))
 (let ((?x8066 (* 4 (* d00 x00 ?x2955 ?x2955 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2))))
 (let ((?x441 (+ ?x8066 ?x1218 ?x4373 (* (- 2) (* d00 q00 ?x2955 ?x2955 ?x2955 ?x381 ?x381 r!2 r!2)) (* (- 1) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x2955 ?x7329 ?x381 ?x381 r!2 r!2)) ?x1139 ?x829 ?x1137 (* 4 (* d00 x00 ?x2955 ?x2955 ?x2955 ?x381 ?x381 r!2 r!2)) ?x1201 (* d00 d00 q00 ?x2955 ?x2955 ?x2955 ?x381 ?x381 r!2 r!2) ?x8334 (* (- 8) (* ?x2955 ?x2955 ?x2955 ?x381 ?x381 ?x381 r!2 r!2)) (* 8 (* r00 ?x2955 ?x2955 ?x7329 ?x381 ?x381 ?x381 r!2 r!2 r!2)) (* (- 4) (* d00 r00 ?x2955 ?x2955 ?x2955 ?x381 ?x381 r!2 r!2)) (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x381 ?x381 r!2 r!2 r!2)) (* 4 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x381 ?x381 ?x381 r!2 r!2)) ?x969 ?x5873 (* 8 (* r00 ?x2955 ?x2955 ?x2955 ?x381 ?x381 r!2 r!2)))))
 (let (($x657 (= ?x441 0)))
 (let (($x1193 (not $x657)))
 (let (($x961 (or $x1193 (not $x1190) (not $x2914) $x10327)))
 (let (($x5940 (and $x1129 $x961)))
 (let ((?x689 (* 4 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00))))
 (let ((?x277 (* (- 24) (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00))))
 (let ((?x332 (* 48 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00))))
 (let ((?x767 (* (- 32) (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x568 (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x772 (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x759 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x798 (* 48 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00))))
 (let ((?x1055 (* 96 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x1050 (* 16 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x1046 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x295 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00 d!1)))
 (let ((?x807 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x334 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1)))
 (let ((?x1042 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x1044 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x774 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1)))
 (let ((?x307 (* (- 4) (* r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x1035 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x1032 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x784 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00 d!1 d!1)))
 (let ((?x882 (* 16 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00 d!1))))
 (let ((?x1021 (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x931 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1)))
 (let ((?x926 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1))))
 (let ((?x1024 (* 24 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1))))
 (let ((?x1014 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)))
 (let ((?x928 (* (- 96) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1))))
 (let ((?x795 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x789 (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x775 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)))
 (let ((?x686 (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00 d!1))))
 (let ((?x402 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x1000 (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x1001 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)))
 (let ((?x780 (* 192 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1))))
 (let ((?x998 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x815 (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x996 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x827 (* (- 128) (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x993 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x994 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00 d!1)))
 (let ((?x764 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x730 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x984 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)))
 (let ((?x991 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00 d!1)))
 (let ((?x982 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x983 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x977 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 d00 q00 d!1)))
 (let ((?x1595 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x1664 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)))
 (let ((?x1587 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00 d!1)))
 (let ((?x824 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x1332 (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x579 (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1))))
 (let ((?x5327 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)))
 (let ((?x4447 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)))
 (let ((?x4444 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x4435 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)))
 (let ((?x1820 (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00 d!1))))
 (let ((?x1808 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00 d!1 d!1)))
 (let ((?x1812 (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00 d!1))))
 (let ((?x7589 (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00 d!1))))
 (let ((?x7364 (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00 d!1))))
 (let ((?x5637 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00 d!1 d!1)))
 (let ((?x5858 (* (- 16) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00 d!1))))
 (let ((?x7634 (* (- 1) (* q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x9209 (* (- 4) (* q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x3849 (* 2 (* q!3 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x1581 (* 4 (* r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x2045 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00 d!1 d!1)))
 (let ((?x10007 (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00 d!1))))
 (let ((?x5376 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00 d!1 d!1)))
 (let ((?x3004 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x3341 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1)))
 (let ((?x5581 (* 48 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1))))
 (let ((?x5615 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00 d!1 d!1)))
 (let ((?x5832 (* (- 96) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1))))
 (let ((?x5825 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)))
 (let ((?x6967 (* 64 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1))))
 (let ((?x8033 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)))
 (let ((?x7794 (* (- 12) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 d00 q00))))
 (let ((?x7481 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1)))
 (let ((?x7305 (* 96 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1))))
 (let ((?x8867 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)))
 (let ((?x8865 (* 12 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 d00 q00))))
 (let ((?x1546 (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1))))
 (let ((?x1443 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x7991 (* 128 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1))))
 (let ((?x1883 (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 d00 q00))))
 (let ((?x1876 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1 d!1)))
 (let ((?x5762 (* 48 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00 d!1))))
 (let ((?x6059 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)))
 (let ((?x6057 (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1))))
 (let ((?x5263 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)))
 (let ((?x2553 (* (- 1) (* r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1 d!1))))
 (let ((?x1104 (+ ?x3077 (* 24 (* r!2 r!2 x!0 x!0 r00 d00 d!1 d!1)) ?x2553 (* 32 (* r!2 r!2 r!2 x!0 r00 d!1 d!1 d!1)) (* 192 (* q!3 r!2 r!2 x!0 r00 d!1)) (* (- 48) (* q!3 r!2 r!2 r!2 d00 d00 q00 d!1)) (* 384 (* r!2 r!2 r!2 x!0 r00 d!1)) ?x7355 (* 96 (* q!3 r!2 r!2 x!0 r00 d!1 d!1)) (* (- 32) (* q!3 r!2 r!2 r!2 r00 d!1 d!1 d!1)) (* (- 384) (* q!3 r!2 r!2 r!2 r00 d!1)) (* (- 192) (* q!3 r!2 r!2 r!2 r00 d!1 d!1)) (* 192 (* r!2 r!2 r!2 x!0 d00 x00 d!1)) (* (- 6) (* r!2 r!2 x!0 x!0 d00 d00 q00 d!1 d!1)) (* (- 96) (* q!3 q!3 r!2 r!2 r00 d!1)) (* (- 48) (* q!3 q!3 r!2 r!2 r00 d!1 d!1)) (* (- 8) (* q!3 q!3 r!2 r!2 r00 d!1 d!1 d!1)) (* 16 (* q!3 r!2 r!2 x!0 r00 d!1 d!1 d!1)) (* (- 384) (* r!2 r!2 r!2 r!2 r00 d!1)) (* (- 192) (* r!2 r!2 r!2 r!2 r00 d!1 d!1)) (* (- 32) (* r!2 r!2 r!2 r!2 r00 d!1 d!1 d!1)) (* 192 (* r!2 r!2 r!2 x!0 r00 d!1 d!1)) (* (- 96) (* r!2 r!2 x!0 x!0 r00 d!1)) (* (- 48) ?x5263) ?x6057 (* 48 ?x6059) ?x5762 (* 12 ?x1876) ?x1883 ?x7991 (* 32 ?x1443) ?x1546 ?x8865 (* (- 48) ?x8867) ?x7305 (* 24 ?x7481) ?x7794 ?x5010 (* (- 96) (* q!3 r!2 r!2 x!0 r00 d00 d!1)) (* 16 (* q!3 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)) (* (- 48) (* q!3 r!2 r!2 x!0 r00 d00 d!1 d!1)) (* 96 (* q!3 r!2 r!2 r!2 r00 d00 d!1 d!1)) (* 192 (* q!3 r!2 r!2 r!2 r00 d00 d!1)) (* 4 (* q!3 q!3 r!2 r!2 r00 d00 d!1 d!1 d!1)) (* 24 (* q!3 q!3 r!2 r!2 r00 d00 d!1 d!1)) (* 48 (* q!3 q!3 r!2 r!2 r00 d00 d!1)) (* (- 8) (* q!3 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)) (* 96 (* r!2 r!2 r!2 x!0 d00 x00 d!1 d!1)) (* (- 48) (* r!2 r!2 x!0 x!0 d00 x00 d!1)) (* 16 ?x8033) ?x6967 (* (- 24) ?x5825) ?x5832 (* 6 ?x5615) ?x5581 (* (- 24) (* r!2 r!2 x!0 x!0 d00 x00 d!1 d!1)) (* 12 ?x3341) (* 96 (* r!2 r!2 r!2 r!2 r00 d00 d!1 d!1)) (* 48 (* r!2 r!2 x!0 x!0 r00 d00 d!1)) (* 24 ?x3004) (* (- 4) ?x5376) ?x10007 (* (- 2) ?x2045) (* 12 (* q!3 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)) (* 24 (* r!2 r!2 r!2 x!0 d00 d00 q00 d!1 d!1)) ?x8488 ?x8494 (* 16 (* r!2 r!2 r!2 r!2 r00 d00 d!1 d!1 d!1)) ?x1581 (* (- 12) (* q!3 q!3 r!2 r!2 d00 d00 q00 d!1)) (* (- 24) (* q!3 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)) ?x3849 (* (- 24) (* r!2 r!2 r!2 r!2 d00 d00 q00 d!1 d!1)) (* (- 48) (* r!2 r!2 r!2 r!2 d00 d00 q00 d!1)) (* 48 (* r!2 r!2 r!2 x!0 d00 d00 q00 d!1)) ?x9209 ?x7634 (* (- 4) (* q!3 q!3 r!2 r!2 d00 x00 d!1 d!1 d!1)) (* (- 16) (* q!3 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)) (* 192 (* r!2 r!2 r!2 r!2 r00 d00 d!1)) (* (- 48) (* r!2 r!2 x!0 x!0 r00 d!1 d!1)) ?x5858 (* (- 4) ?x5637) ?x7364 (* (- 96) (* r!2 r!2 r!2 r!2 d00 x00 d!1 d!1)) (* (- 48) (* q!3 q!3 r!2 r!2 d00 x00 d!1)) (* (- 24) (* q!3 q!3 r!2 r!2 d00 x00 d!1 d!1)) (* (- 192) (* q!3 r!2 r!2 r!2 d00 x00 d!1)) (* (- 96) (* q!3 r!2 r!2 r!2 d00 x00 d!1 d!1)) (* 96 (* q!3 r!2 r!2 x!0 d00 x00 d!1)) (* 48 (* q!3 r!2 r!2 x!0 d00 x00 d!1 d!1)) (* 8 (* q!3 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)) (* (- 192) (* r!2 r!2 r!2 r!2 d00 x00 d!1)) (* (- 16) (* r!2 r!2 r!2 x!0 r00 d00 d!1 d!1 d!1)) ?x7589 ?x1812 (* (- 12) ?x1808) ?x1820 (* 12 ?x4435) (* (- 48) ?x4444) (* (- 12) ?x4447) (* 48 ?x5327) ?x579 (* (- 12) (* r!2 r!2 x!0 x!0 d00 d00 q00 d!1)) (* 32 (* r!2 r!2 r!2 x!0 d00 d00 q00)) (* (- 96) (* r!2 r!2 r!2 x!0 d00 q00 d!1)) (* 12 (* q!3 q!3 r!2 r!2 d00 q00 d!1 d!1)) (* 2 (* q!3 q!3 r!2 r!2 d00 q00 d!1 d!1 d!1)) (* 48 (* q!3 r!2 r!2 r!2 d00 q00 d!1 d!1)) (* 8 (* q!3 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)) (* (- 24) (* q!3 r!2 r!2 x!0 d00 q00 d!1 d!1)) (* 48 (* r!2 r!2 r!2 r!2 d00 q00 d!1 d!1)) (* 4 (* r!2 r!2 x!0 x!0 r00 d00 d!1 d!1 d!1)) (* 24 (* q!3 q!3 r!2 r!2 d00 q00 d!1)) ?x1332 (* 96 (* q!3 r!2 r!2 r!2 d00 q00 d!1)) (* (- 48) (* q!3 r!2 r!2 x!0 d00 q00 d!1)) (* (- 96) (* r!2 r!2 r!2 x!0 r00 d00 d!1 d!1)) (* (- 4) (* q!3 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)) (* 96 (* r!2 r!2 r!2 r!2 d00 q00 d!1)) (* (- 24) ?x824) (* 8 (* r!2 r!2 r!2 r!2 d00 q00 d!1 d!1 d!1)) (* (- 48) (* r!2 r!2 r!2 x!0 d00 q00 d!1 d!1)) (* 24 (* q!3 r!2 r!2 x!0 d00 d00 q00 d!1)) (* (- 8) (* r!2 r!2 r!2 x!0 d00 q00 d!1 d!1 d!1)) (* 16 (* r!2 r!2 r!2 x!0 d00 x00 d!1 d!1 d!1)) (* (- 8) (* r!2 r!2 x!0 x!0 r00 d!1 d!1 d!1)) (* 24 (* r!2 r!2 x!0 x!0 d00 q00 d!1)) (* 12 (* r!2 r!2 x!0 x!0 d00 q00 d!1 d!1)) (* (- 6) (* q!3 q!3 r!2 r!2 d00 d00 q00 d!1 d!1)) (* 2 (* r!2 r!2 x!0 x!0 d00 q00 d!1 d!1 d!1)) (* (- 8) (* q!3 q!3 r!2 r!2 d00 d00 q00)) ?x2048 (* (- 4) ?x1587) (* (- 6) ?x1664) (* (- 48) ?x1595) ?x976 (* 48 ?x977) (* 48 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 r00 d00)) ?x641 (* (- 48) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 r00 d00)) (* (- 1) ?x983) (* (- 24) ?x982) (* 16 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 r00 d00)) (* 12 ?x991) (* 3 ?x984) ?x990 (* (- 12) ?x730) (* 12 ?x764) (* (- 12) ?x994) (* (- 3) ?x993) ?x827 (* 2 ?x996) ?x815 (* (- 32) ?x998) ?x780 (* 48 ?x1001) ?x1000 (* 12 ?x402) ?x686 (* (- 6) ?x775) ?x789 (* 24 ?x795) ?x928 (* (- 24) ?x1014) ?x1024 ?x926 (* (- 24) ?x931) ?x1021 (* (- 4) (* r!2 r!2 x!0 x!0 d00 x00 d!1 d!1 d!1)) (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 q00)) (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 q00)) (* 24 (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 q00)) ?x882 (* 4 ?x784) (* (- 32) ?x1032) (* (- 8) ?x1035) ?x307 (* (- 16) (* r!2 r!2 r!2 r!2 d00 x00 d!1 d!1 d!1)) (* 48 ?x774) ?x1044 (* 12 ?x1042) (* (- 24) ?x334) (* (- 6) ?x807) (* 4 ?x295) (* 4 ?x1046) ?x1050 ?x1055 (* (- 32) (* q!3 r!2 r!2 r!2 d00 d00 q00)) (* (- 32) (* r!2 r!2 r!2 r!2 d00 d00 q00)) ?x798 ?x759 ?x772 (* 128 (* q!3 r!2 r!2 x!0 r00)) (* (- 256) (* r!2 r!2 r!2 r!2 r00)) (* (- 192) (* r!2 r!2 r!2 x!0 r00 d00 d!1)) ?x568 (* 16 (* q!3 r!2 r!2 x!0 d00 d00 q00)) (* (- 8) (* r!2 r!2 x!0 x!0 d00 d00 q00)) (* (- 64) (* r!2 r!2 x!0 x!0 r00)) (* 256 (* r!2 r!2 r!2 x!0 r00)) (* (- 64) (* q!3 q!3 r!2 r!2 r00)) (* (- 256) (* q!3 r!2 r!2 r!2 r00)) ?x767 ?x332 ?x277 ?x689 ?x707 (* 96 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 r00 d00)) (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 r00 d00)) (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 r00 d00)) (* 128 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 r00 d00)) (* (- 192) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 r00 d00)) (* 96 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 r00 d00)) (* (- 16) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 r00 d00)) (* (- 32) (* q!3 q!3 r!2 r!2 d00 x00)) (* (- 128) (* q!3 r!2 r!2 r!2 d00 x00)) (* 64 (* q!3 r!2 r!2 x!0 d00 x00)) (* (- 128) (* r!2 r!2 r!2 r!2 d00 x00)) (* 128 (* r!2 r!2 r!2 x!0 d00 x00)) (* (- 32) (* r!2 r!2 x!0 x!0 d00 x00)) ?x1059 (* (- 16) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d00 x00)) (* (- 96) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 x00)) (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d00 x00)) (* (- 192) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 x00)) (* 192 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 x00)) (* (- 48) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d00 x00)) (* (- 128) (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 x00)) (* 192 (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 x00)) (* (- 96) (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 x00)) (* 16 (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 x00)) (* (- 64) (* q!3 r!2 r!2 x!0 r00 d00)) (* 128 (* q!3 r!2 r!2 r!2 r00 d00)) (* 32 (* q!3 q!3 r!2 r!2 r00 d00)) (* 128 (* r!2 r!2 r!2 r!2 r00 d00)) (* (- 128) (* r!2 r!2 r!2 x!0 r00 d00)) (* 32 (* r!2 r!2 x!0 x!0 r00 d00)) (* 16 (* q!3 q!3 r!2 r!2 d00 q00)) (* 64 (* q!3 r!2 r!2 r!2 d00 q00)) (* (- 32) (* q!3 r!2 r!2 x!0 d00 q00)) (* 64 (* r!2 r!2 r!2 r!2 d00 q00)) (* (- 64) (* r!2 r!2 r!2 x!0 d00 q00)) (* 16 (* r!2 r!2 x!0 x!0 d00 q00)) (* 48 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d00 q00)) (* 96 (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d00 q00)) (* (- 96) (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d00 q00)) (* 64 (* q!3 r!2 r!2 r!2 r!2 r!2 r!2 d00 q00)) (* (- 96) (* q!3 r!2 r!2 r!2 r!2 r!2 x!0 d00 q00)) (* 48 (* q!3 r!2 r!2 r!2 r!2 x!0 x!0 d00 q00)) (* (- 8) (* q!3 r!2 r!2 r!2 x!0 x!0 x!0 d00 q00)))))
 (let ((?x7412 (+ (- 4) q!3 ?x5931 ?x848 ?x7395)))
 (let ((?x5172 (* 4 (* d00 x00 ?x9463 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2))))
 (let ((?x1707 (* (- 2) (* d00 q00 ?x9463 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2))))
 (let ((?x2898 (* 2 (* ?x9463 ?x9463 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2))))
 (let ((?x2499 (* d00 d00 q00 ?x9463 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2)))
 (let ((?x503 (* 4 (* ?x9463 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2))))
 (let ((?x2209 (* (- 4) (* d00 r00 ?x9463 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2))))
 (let ((?x3386 (* (- 1) (* ?x9463 ?x9463 ?x2955 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2))))
 (let ((?x9467 (* (- 4) (* ?x9463 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2 r!2))))
 (let ((?x7049 (+ (* 4 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2)) (* (- 4) (* d00 r00 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2)) ?x9467 (* 8 (* r00 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2)) (* 8 (* r00 ?x9463 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2)) ?x3386 ?x2209 (* d00 d00 q00 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2) ?x503 ?x2499 ?x2898 (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2 r!2)) (* 4 (* d00 x00 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2)) (* (- 1) (* ?x9463 ?x2955 ?x2955 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2)) (* (- 8) (* ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 r!2 r!2)) ?x1707 ?x5172 (* 2 (* ?x9463 ?x2955 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2)) (* (- 2) (* d00 q00 ?x2955 ?x2955 ?x2955 ?x7412 ?x7412 r!2 r!2)) (* (- 8) (* ?x9463 ?x2955 ?x2955 ?x7412 ?x7412 ?x7412 ?x7412 r!2 r!2 r!2)))))
 (let ((?x7490 (+ (- 2) q!3 ?x5931 ?x848 ?x7775)))
 (let ((?x9140 (* (- 4) (* d00 r00 ?x7485 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2))))
 (let ((?x9419 (* 2 (* ?x7485 ?x7485 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2))))
 (let ((?x619 (* (- 1) (* ?x7485 ?x7485 ?x2955 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2))))
 (let ((?x1209 (* 4 (* d00 x00 ?x7485 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2))))
 (let ((?x7932 (* (- 2) (* d00 q00 ?x7485 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2))))
 (let ((?x7727 (* d00 d00 q00 ?x7485 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2)))
 (let ((?x3224 (* (- 4) (* ?x7485 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2 r!2))))
 (let ((?x3218 (* 4 (* ?x7485 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2))))
 (let ((?x9421 (+ (* 8 (* r00 ?x7485 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2)) ?x3218 ?x3224 (* (- 2) (* d00 q00 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2)) ?x7727 (* (- 4) (* d00 r00 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2)) ?x7932 (* 8 (* r00 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2)) (* d00 d00 q00 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2) ?x1209 (* 4 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2)) (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2 r!2)) ?x619 (* 4 (* d00 x00 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2)) (* (- 8) (* ?x7485 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 ?x7490 r!2 r!2 r!2)) (* 2 (* ?x7485 ?x2955 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2)) (* (- 8) (* ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 ?x7490 r!2 r!2)) (* (- 1) (* ?x7485 ?x2955 ?x2955 ?x2955 ?x2955 ?x2955 ?x7490 ?x7490 r!2 r!2)) ?x9419 ?x9140)))
 (let ((?x1487 (+ 2 q!3 ?x5931 ?x848 d!1)))
 (let ((?x7415 (* 4 (* d00 x00 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2))))
 (let ((?x8106 (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2 r!2))))
 (let ((?x8100 (* (- 1) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7329 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2))))
 (let ((?x4361 (* 2 (* ?x2955 ?x2955 ?x2955 ?x7329 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2))))
 (let ((?x5331 (* (- 4) (* d00 r00 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2))))
 (let ((?x7187 (* (- 2) (* d00 q00 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2))))
 (let ((?x7333 (* 4 (* ?x2955 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2))))
 (let ((?x7570 (* d00 d00 q00 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2)))
 (let ((?x2758 (+ (* 4 (* d00 x00 ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 r!2 r!2)) ?x7570 ?x7333 ?x7187 (* 4 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 ?x1487 r!2 r!2)) ?x5331 (* (- 2) (* d00 q00 ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 r!2 r!2)) (* (- 4) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 r!2 r!2 r!2)) ?x4361 (* (- 8) (* ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 ?x1487 r!2 r!2)) (* 2 (* ?x2955 ?x2955 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 r!2 r!2)) (* (- 4) (* d00 r00 ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 r!2 r!2)) (* 8 (* r00 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2)) (* (- 1) (* ?x2955 ?x2955 ?x2955 ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 r!2 r!2)) (* d00 d00 q00 ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 r!2 r!2) (* 8 (* r00 ?x2955 ?x2955 ?x2955 ?x1487 ?x1487 r!2 r!2)) ?x8100 ?x8106 (* (- 8) (* ?x2955 ?x2955 ?x7329 ?x1487 ?x1487 ?x1487 ?x1487 r!2 r!2 r!2)) ?x7415)))
 (let (($x1107 (or (not (= ?x2758 0)) (not (= ?x9421 0)) (not (= ?x7049 0)) (not (= ?x1104 0)))))
 (let ((?x493 (* q!3 d!1 d!1)))
 (let ((?x362 (* r00 d00)))
 (let ((?x363 (* 4 ?x362)))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x1122 (+ (* 8 r!2) ?x227 ?x275 ?x259 ?x325 ?x363 (* 4 (* x!0 d!1)) (* (- 4) (* r!2 d!1)) ?x493 (* (- 2) (* q!3 d!1)))))
 (let (($x944 (and (= ?x1122 0) $x1107)))
 (let (($x4245 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x9963 (+ q ?x178 ?x237)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x10664 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r r)))
 (let ((?x8321 (* 4 (* q q q q r r r r00 d00 d d))))
 (let ((?x8320 (* 4 (* q r r r x x x d00 d00 q00 d))))
 (let ((?x8319 (* (- 6) (* q r r r r x x d00 d00 q00 d d))))
 (let ((?x8664 (* (- 24) (* q r r r r x x d00 d00 q00 d))))
 (let ((?x8663 (* 12 (* q r r r r r x d00 d00 q00 d d))))
 (let ((?x8661 (* 48 (* q r r r r r x d00 d00 q00 d))))
 (let ((?x8315 (* (- 8) (* q r r r r r r d00 d00 q00 d d))))
 (let ((?x8314 (* (- 32) (* q r r r r r r d00 d00 q00 d))))
 (let ((?x8313 (* 4 (* q r r r x x x d00 x00 d d))))
 (let ((?x8649 (* (- 24) (* q r r r r x x d00 x00 d d))))
 (let ((?x8308 (* (- 24) (* q q r r r r x d00 q00 d d))))
 (let ((?x8643 (* 24 (* q q r r r r r d00 q00 d d))))
 (let ((?x8640 (* (- 6) (* q q q r r r x d00 q00 d d))))
 (let ((?x8304 (* 12 (* q q q r r r r d00 q00 d d))))
 (let ((?x8302 (* 48 (* q r r r r r x d00 x00 d d))))
 (let ((?x8634 (* (- 32) (* q r r r r r r d00 x00 d d))))
 (let ((?x8632 (* 2 (* q q q q r r r d00 q00 d d))))
 (let ((?x8298 (* (- 3) (* q q r r r x x d00 d00 q00 d d))))
 (let ((?x8297 (* (- 12) (* q q r r r x x d00 d00 q00 d))))
 (let ((?x8627 (* 12 (* q q r r r r x d00 d00 q00 d d))))
 (let ((?x8626 (* (- 12) (* q q r r r r r d00 d00 q00 d d))))
 (let ((?x8628 (* 3 (* q q q r r r x d00 d00 q00 d d))))
 (let ((?x8625 (* 12 (* q q q r r r x d00 d00 q00 d))))
 (let ((?x8623 (* (- 24) (* q q q r r r r d00 d00 q00 d))))
 (let ((?x8621 (* (- 1) (* q q q q r r r d00 d00 q00 d d))))
 (let ((?x8293 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q))))
 (let ((?x8291 (* 48 (* q q r r r r x d00 d00 q00 d))))
 (let ((?x8617 (* (- 48) (* q q r r r r r d00 d00 q00 d))))
 (let ((?x8615 (* (- 6) (* q q q r r r r d00 d00 q00 d d))))
 (let ((?x8614 (* (- 4) (* q q q q r r r d00 d00 q00 d))))
 (let ((?x8288 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r r q))))
 (let ((?x8282 (* (- 24) (* q q q r r r r d00 x00 d d))))
 (let ((?x8579 (* 48 (* q q r r r r x d00 x00 d d))))
 (let ((?x8580 (* (- 12) (* q q q r r r x r00 d00 d d))))
 (let ((?x8578 (* (- 48) (* q q r r r r r d00 x00 d d))))
 (let ((?x8573 (* 12 (* q q q r r r x d00 x00 d d))))
 (let ((?x8571 (* (- 12) (* q q r r r x x d00 x00 d d))))
 (let ((?x6819 (* (- 4) (* q r r r x x x r00 d00 d d))))
 (let ((?x9564 (* (- 2) (* q r r r x x x d00 q00 d d))))
 (let ((?x7188 (* (- 4) (* q q q q r r r d00 x00 d d))))
 (let ((?x7913 (* 24 (* q q q r r r r r00 d00 d d))))
 (let ((?x8666 (* 12 (* q r r r r x x d00 q00 d d))))
 (let ((?x6765 (* 6 (* q q r r r x x d00 q00 d d))))
 (let ((?x6758 (* (- 24) (* q r r r r r x d00 q00 d d))))
 (let ((?x10161 (* 16 (* q r r r r r r d00 q00 d d))))
 (let ((?x3361 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q))))
 (let ((?x3360 (* 24 (* q r r r r x x r00 d00 d d))))
 (let ((?x2773 (* (- 48) (* q r r r r r x r00 d00 d d))))
 (let ((?x3364 (* 32 (* q r r r r r r r00 d00 d d))))
 (let ((?x2770 (* 12 (* q q r r r x x r00 d00 d d))))
 (let ((?x3378 (* 48 (* q q r r r r r r00 d00 d d))))
 (let ((?x3385 (* (- 48) (* q q r r r r x r00 d00 d d))))
 (let ((?x8369 (+ (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q) (* 24 (* r r x x r00 d00 d d)) (* (- 1) (* r r x x d00 d00 q00 d d d)) (* 32 (* r r r x r00 d d d)) (* 192 (* q r r x r00 d)) (* (- 48) (* q r r r d00 d00 q00 d)) (* 384 (* r r r x r00 d)) (* 8 (* ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q)) (* 96 (* q r r x r00 d d)) (* (- 32) (* q r r r r00 d d d)) (* (- 384) (* q r r r r00 d)) (* (- 192) (* q r r r r00 d d)) (* 192 (* r r r x d00 x00 d)) (* (- 6) (* r r x x d00 d00 q00 d d)) (* (- 96) (* q q r r r00 d)) (* (- 48) (* q q r r r00 d d)) (* (- 8) (* q q r r r00 d d d)) (* 16 (* q r r x r00 d d d)) (* (- 384) (* r r r r r00 d)) (* (- 192) (* r r r r r00 d d)) (* (- 32) (* r r r r r00 d d d)) (* 192 (* r r r x r00 d d)) (* (- 96) (* r r x x r00 d)) ?x3385 (* (- 192) (* q q r r r r x r00 d00 d)) ?x3378 (* 48 (* q q r r r x x r00 d00 d)) ?x2770 (* (- 4) (* q q q q r r r d00 d00 q00)) (* 128 (* q r r r r r r r00 d00 d)) ?x3364 (* (- 192) (* q r r r r r x r00 d00 d)) (* 12 (* q q q r r r x d00 d00 q00)) ?x2773 (* 96 (* q r r r r x x r00 d00 d)) ?x3360 (* (- 12) (* q q r r r x x d00 d00 q00)) ?x3361 (* (- 96) (* q r r x r00 d00 d)) (* 16 (* q r r r r00 d00 d d d)) (* (- 48) (* q r r x r00 d00 d d)) (* 96 (* q r r r r00 d00 d d)) (* 192 (* q r r r r00 d00 d)) (* 4 (* q q r r r00 d00 d d d)) (* 24 (* q q r r r00 d00 d d)) (* 48 (* q q r r r00 d00 d)) (* (- 8) (* q r r x r00 d00 d d d)) (* 96 (* r r r x d00 x00 d d)) (* (- 48) (* r r x x d00 x00 d)) ?x10161 (* 64 (* q r r r r r r d00 q00 d)) ?x6758 (* (- 96) (* q r r r r r x d00 q00 d)) ?x6765 (* 48 (* q r r r r x x d00 q00 d)) (* (- 24) (* r r x x d00 x00 d d)) ?x8666 (* 96 (* r r r r r00 d00 d d)) (* 48 (* r r x x r00 d00 d)) ?x7913 ?x7188 (* (- 8) (* q r r r x x x d00 q00 d)) ?x9564 (* 12 (* q r r x d00 d00 q00 d d)) (* 24 (* r r r x d00 d00 q00 d d)) (* (- 8) (* r00 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q) (* 16 (* r r r r r00 d00 d d d)) (* 4 (* r r r x d00 d00 q00 d d d)) (* (- 12) (* q q r r d00 d00 q00 d)) (* (- 24) (* q r r r d00 d00 q00 d d)) (* 2 (* q r r x d00 d00 q00 d d d)) (* (- 24) (* r r r r d00 d00 q00 d d)) (* (- 48) (* r r r r d00 d00 q00 d)) (* 48 (* r r r x d00 d00 q00 d)) (* (- 4) (* q r r r d00 d00 q00 d d d)) (* (- 1) (* q q r r d00 d00 q00 d d d)) (* (- 4) (* q q r r d00 x00 d d d)) (* (- 16) (* q r r r d00 x00 d d d)) (* 192 (* r r r r r00 d00 d)) (* (- 48) (* r r x x r00 d d)) (* (- 16) (* q r r r x x x r00 d00 d)) ?x6819 (* (- 48) (* q q q r r r x r00 d00 d)) (* (- 96) (* r r r r d00 x00 d d)) (* (- 48) (* q q r r d00 x00 d)) (* (- 24) (* q q r r d00 x00 d d)) (* (- 192) (* q r r r d00 x00 d)) (* (- 96) (* q r r r d00 x00 d d)) (* 96 (* q r r x d00 x00 d)) (* 48 (* q r r x d00 x00 d d)) (* 8 (* q r r x d00 x00 d d d)) (* (- 192) (* r r r r d00 x00 d)) (* (- 16) (* r r r x r00 d00 d d d)) (* (- 192) (* q q r r r r r d00 x00 d)) (* 192 (* q q r r r r x d00 x00 d)) ?x8571 (* 48 (* q q q r r r x d00 x00 d)) ?x8573 ?x8578 ?x8580 ?x8579 (* (- 48) (* q q r r r x x d00 x00 d)) (* (- 12) (* r r x x d00 d00 q00 d)) (* 32 (* r r r x d00 d00 q00)) (* (- 96) (* r r r x d00 q00 d)) (* 12 (* q q r r d00 q00 d d)) (* 2 (* q q r r d00 q00 d d d)) (* 48 (* q r r r d00 q00 d d)) (* 8 (* q r r r d00 q00 d d d)) (* (- 24) (* q r r x d00 q00 d d)) (* 48 (* r r r r d00 q00 d d)) (* 4 (* r r x x r00 d00 d d d)) (* 24 (* q q r r d00 q00 d)) (* (- 16) (* q q q q r r r d00 x00 d)) (* 96 (* q r r r d00 q00 d)) (* (- 48) (* q r r x d00 q00 d)) (* (- 96) (* r r r x r00 d00 d d)) (* (- 4) (* q r r x d00 q00 d d d)) (* 96 (* r r r r d00 q00 d)) ?x8282 (* 8 (* r r r r d00 q00 d d d)) (* (- 48) (* r r r x d00 q00 d d)) (* 24 (* q r r x d00 d00 q00 d)) (* (- 8) (* r r r x d00 q00 d d d)) (* 16 (* r r r x d00 x00 d d d)) (* (- 8) (* r r x x r00 d d d)) (* 24 (* r r x x d00 q00 d)) (* 12 (* r r x x d00 q00 d d)) (* (- 6) (* q q r r d00 d00 q00 d d)) (* 2 (* r r x x d00 q00 d d d)) (* (- 8) (* q q r r d00 d00 q00)) ?x8288 ?x8614 ?x8615 ?x8617 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) ?x8291 (* 48 (* q q r r r x x r00 d00)) ?x8293 (* (- 48) (* q q q r r r x r00 d00)) ?x8621 ?x8623 (* 16 (* q q q q r r r r00 d00)) ?x8625 ?x8628 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q)) ?x8626 ?x8627 ?x8297 ?x8298 (* (- 128) (* q r r r r r r d00 x00 d)) ?x8632 (* 48 (* q q q r r r r d00 q00 d)) ?x8634 (* 192 (* q r r r r r x d00 x00 d)) ?x8302 (* 8 (* q q q q r r r d00 q00 d)) ?x8304 (* (- 24) (* q q q r r r x d00 q00 d)) ?x8640 (* 96 (* q q r r r r r d00 q00 d)) ?x8643 (* (- 96) (* q q r r r r x d00 q00 d)) ?x8308 (* 24 (* q q r r r x x d00 q00 d)) (* (- 96) (* q r r r r x x d00 x00 d)) ?x8649 (* (- 96) (* q q q r r r r d00 x00 d)) (* (- 4) (* r r x x d00 x00 d d d)) (* 8 (* q q q q r r r d00 q00)) (* (- 24) (* q q q r r r x d00 q00)) (* 24 (* q q r r r x x d00 q00)) (* 16 (* q r r r x x x d00 x00 d)) ?x8313 ?x8314 ?x8315 (* (- 4) (* r r r r d00 d00 q00 d d d)) (* (- 16) (* r r r r d00 x00 d d d)) ?x8661 (* q r r r x x x d00 d00 q00 d d) ?x8663 ?x8664 ?x8319 ?x8320 ?x8321 (* 16 (* q q q q r r r r00 d00 d)) (* 96 (* q q q r r r r r00 d00 d)) (* (- 32) (* q r r r d00 d00 q00)) (* (- 32) (* r r r r d00 d00 q00)) (* 48 (* q q r r r r x d00 d00 q00)) (* (- 48) (* q q r r r r r d00 d00 q00)) (* 192 (* q q r r r r r r00 d00 d)) (* 128 (* q r r x r00)) (* (- 256) (* r r r r r00)) (* (- 192) (* r r r x r00 d00 d)) (* (- 24) (* q q q r r r r d00 d00 q00)) (* 16 (* q r r x d00 d00 q00)) (* (- 8) (* r r x x d00 d00 q00)) (* (- 64) (* r r x x r00)) (* 256 (* r r r x r00)) (* (- 64) (* q q r r r00)) (* (- 256) (* q r r r r00)) (* (- 32) (* q r r r r r r d00 d00 q00)) (* 48 (* q r r r r r x d00 d00 q00)) (* (- 24) (* q r r r r x x d00 d00 q00)) (* 4 (* q r r r x x x d00 d00 q00)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) (* 96 (* q q q r r r r r00 d00)) (* 192 (* q q r r r r r r00 d00)) (* (- 192) (* q q r r r r x r00 d00)) (* 128 (* q r r r r r r r00 d00)) (* (- 192) (* q r r r r r x r00 d00)) (* 96 (* q r r r r x x r00 d00)) (* (- 16) (* q r r r x x x r00 d00)) (* (- 32) (* q q r r d00 x00)) (* (- 128) (* q r r r d00 x00)) (* 64 (* q r r x d00 x00)) (* (- 128) (* r r r r d00 x00)) (* 128 (* r r r x d00 x00)) (* (- 32) (* r r x x d00 x00)) (* 4 ?x10664) (* (- 16) (* q q q q r r r d00 x00)) (* (- 96) (* q q q r r r r d00 x00)) (* 48 (* q q q r r r x d00 x00)) (* (- 192) (* q q r r r r r d00 x00)) (* 192 (* q q r r r r x d00 x00)) (* (- 48) (* q q r r r x x d00 x00)) (* (- 128) (* q r r r r r r d00 x00)) (* 192 (* q r r r r r x d00 x00)) (* (- 96) (* q r r r r x x d00 x00)) (* 16 (* q r r r x x x d00 x00)) (* (- 64) (* q r r x r00 d00)) (* 128 (* q r r r r00 d00)) (* 32 (* q q r r r00 d00)) (* 128 (* r r r r r00 d00)) (* (- 128) (* r r r x r00 d00)) (* 32 (* r r x x r00 d00)) (* 16 (* q q r r d00 q00)) (* 64 (* q r r r d00 q00)) (* (- 32) (* q r r x d00 q00)) (* 64 (* r r r r d00 q00)) (* (- 64) (* r r r x d00 q00)) (* 16 (* r r x x d00 q00)) (* 48 (* q q q r r r r d00 q00)) (* 96 (* q q r r r r r d00 q00)) (* (- 96) (* q q r r r r x d00 q00)) (* 64 (* q r r r r r r d00 q00)) (* (- 96) (* q r r r r r x d00 q00)) (* 48 (* q r r r r x x d00 q00)) (* (- 8) (* q r r r x x x d00 q00)))))
 (let ((?x10908 (* (- 2) d)))
 (let ((?x4248 (+ (- 4) q ?x178 ?x237 ?x10908)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x3969 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x8015 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x3906 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x3940 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x4090 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x1282 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x1006 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r r))))
 (let ((?x3973 (+ (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r)) (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) ?x1006 (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r)) ?x1282 ?x4090 (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r) ?x3940 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r) ?x3906 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r r)) (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r)) ?x8015 ?x3969 (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 ?x4248 r r r)))))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x3896 (+ (- 2) q ?x178 ?x237 ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x6652 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x3914 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x4175 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x3528 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x3939 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x8013 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r r))))
 (let ((?x3680 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x4023 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r)) ?x3680 ?x8013 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r) (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) ?x3939 (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r) ?x3528 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r r)) ?x4175 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 ?x3896 r r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) ?x3914 ?x6652)))
 (let ((?x3912 (+ 2 q ?x178 ?x237 d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x3884 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3653 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r r))))
 (let ((?x2285 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x8012 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3955 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3874 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x4025 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3891 (+ (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r) ?x4025 ?x3874 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 ?x3912 r r)) ?x3955 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r r)) ?x8012 (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 ?x3912 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 r r)) (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) ?x2285 ?x3653 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 ?x3912 r r r)) ?x3884)))
 (let (($x4096 (or (not (= ?x3891 0)) (not (= ?x4023 0)) (not (= ?x3973 0)) (not (= ?x8369 0)))))
 (let ((?x5475 (* (- 2) (* q d))))
 (let ((?x10111 (* q d d)))
 (let ((?x375 (* (- 4) (* r d))))
 (let ((?x3666 (* 4 (* x d))))
 (let ((?x362 (* r00 d00)))
 (let ((?x363 (* 4 ?x362)))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (and (= (+ ?x10114 ?x227 ?x275 ?x259 ?x325 ?x363 ?x3666 ?x375 ?x10111 ?x5475) 0) $x4096)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x6359 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x3447 (+ ?x178 ?x237 q)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x9224 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x2887 (* 2 (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q q))))
 (let ((?x2878 (* 4 (* d00 x00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x1695 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x6916 (* 4 (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x4265 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r r q))))
 (let ((?x3737 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q q))))
 (let ((?x7729 (+ (* 8 (* r00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r q)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r) ?x3737 (* (- 8) (* ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 ?x3447 r r r q)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) ?x4265 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r q)) ?x6916 (* d00 d00 q00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r)) ?x1695 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r r)) ?x2878 ?x2887 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) ?x9224)))
 (let ((?x4222 (+ 2 ?x178 ?x237 q d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x3495 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3520 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3525 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3648 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3625 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3600 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r r))))
 (let ((?x3577 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3488 (+ (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r) ?x3577 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 ?x4222 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) ?x3600 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 ?x4222 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 r r)) ?x3625 (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 ?x4222 r r)) ?x3648 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r r)) ?x3525 ?x3520 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) ?x3495)))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x3461 (+ (- 2) ?x178 ?x237 q ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x3752 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4210 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x3747 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4195 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4190 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4146 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r r))))
 (let ((?x3451 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4216 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r) ?x3451 (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 ?x3461 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) ?x4146 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) ?x4190 (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r)) ?x4195 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r r)) ?x3747 ?x4210 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) ?x3752)))
 (let ((?x10908 (* (- 2) d)))
 (let ((?x3688 (+ (- 4) ?x178 ?x237 q ?x10908)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x3468 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x3473 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4101 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4085 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4067 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4061 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r r))))
 (let ((?x4018 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x3469 (+ (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r) ?x4018 (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 ?x3688 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) ?x4061 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r)) (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) ?x4067 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r)) ?x4085 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r r)) ?x4101 ?x3473 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) ?x3468)))
 (let (($x7736 (or (not (= ?x3469 0)) (not (= ?x4216 0)) (not (= ?x3488 0)) (not (= ?x7729 0)))))
 (let ((?x3560 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x3666 (* 4 (* x d))))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (let ((?x3674 (+ ?x10114 ?x227 ?x3666 ?x259 ?x275 (* d d q) (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3560)))
 (and (= ?x3674 0) $x7736))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x3954 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x237 (* (- 1) x)))
 (let ((?x178 (* 2 r)))
 (let ((?x9963 (+ q ?x178 ?x237)))
 (let ((?x10100 (+ 2 d)))
 (let ((?x10664 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r r)))
 (let ((?x8321 (* 4 (* q q q q r r r r00 d00 d d))))
 (let ((?x8320 (* 4 (* q r r r x x x d00 d00 q00 d))))
 (let ((?x8319 (* (- 6) (* q r r r r x x d00 d00 q00 d d))))
 (let ((?x8664 (* (- 24) (* q r r r r x x d00 d00 q00 d))))
 (let ((?x8663 (* 12 (* q r r r r r x d00 d00 q00 d d))))
 (let ((?x8661 (* 48 (* q r r r r r x d00 d00 q00 d))))
 (let ((?x8315 (* (- 8) (* q r r r r r r d00 d00 q00 d d))))
 (let ((?x8314 (* (- 32) (* q r r r r r r d00 d00 q00 d))))
 (let ((?x8313 (* 4 (* q r r r x x x d00 x00 d d))))
 (let ((?x8649 (* (- 24) (* q r r r r x x d00 x00 d d))))
 (let ((?x8308 (* (- 24) (* q q r r r r x d00 q00 d d))))
 (let ((?x8643 (* 24 (* q q r r r r r d00 q00 d d))))
 (let ((?x8640 (* (- 6) (* q q q r r r x d00 q00 d d))))
 (let ((?x8304 (* 12 (* q q q r r r r d00 q00 d d))))
 (let ((?x8302 (* 48 (* q r r r r r x d00 x00 d d))))
 (let ((?x8634 (* (- 32) (* q r r r r r r d00 x00 d d))))
 (let ((?x8632 (* 2 (* q q q q r r r d00 q00 d d))))
 (let ((?x8298 (* (- 3) (* q q r r r x x d00 d00 q00 d d))))
 (let ((?x8297 (* (- 12) (* q q r r r x x d00 d00 q00 d))))
 (let ((?x8627 (* 12 (* q q r r r r x d00 d00 q00 d d))))
 (let ((?x8626 (* (- 12) (* q q r r r r r d00 d00 q00 d d))))
 (let ((?x8628 (* 3 (* q q q r r r x d00 d00 q00 d d))))
 (let ((?x8625 (* 12 (* q q q r r r x d00 d00 q00 d))))
 (let ((?x8623 (* (- 24) (* q q q r r r r d00 d00 q00 d))))
 (let ((?x8621 (* (- 1) (* q q q q r r r d00 d00 q00 d d))))
 (let ((?x8293 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q))))
 (let ((?x8291 (* 48 (* q q r r r r x d00 d00 q00 d))))
 (let ((?x8617 (* (- 48) (* q q r r r r r d00 d00 q00 d))))
 (let ((?x8615 (* (- 6) (* q q q r r r r d00 d00 q00 d d))))
 (let ((?x8614 (* (- 4) (* q q q q r r r d00 d00 q00 d))))
 (let ((?x8288 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r r q))))
 (let ((?x8282 (* (- 24) (* q q q r r r r d00 x00 d d))))
 (let ((?x8579 (* 48 (* q q r r r r x d00 x00 d d))))
 (let ((?x8580 (* (- 12) (* q q q r r r x r00 d00 d d))))
 (let ((?x8578 (* (- 48) (* q q r r r r r d00 x00 d d))))
 (let ((?x8573 (* 12 (* q q q r r r x d00 x00 d d))))
 (let ((?x8571 (* (- 12) (* q q r r r x x d00 x00 d d))))
 (let ((?x6819 (* (- 4) (* q r r r x x x r00 d00 d d))))
 (let ((?x9564 (* (- 2) (* q r r r x x x d00 q00 d d))))
 (let ((?x7188 (* (- 4) (* q q q q r r r d00 x00 d d))))
 (let ((?x7913 (* 24 (* q q q r r r r r00 d00 d d))))
 (let ((?x8666 (* 12 (* q r r r r x x d00 q00 d d))))
 (let ((?x6765 (* 6 (* q q r r r x x d00 q00 d d))))
 (let ((?x6758 (* (- 24) (* q r r r r r x d00 q00 d d))))
 (let ((?x10161 (* 16 (* q r r r r r r d00 q00 d d))))
 (let ((?x3361 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q))))
 (let ((?x3360 (* 24 (* q r r r r x x r00 d00 d d))))
 (let ((?x2773 (* (- 48) (* q r r r r r x r00 d00 d d))))
 (let ((?x3364 (* 32 (* q r r r r r r r00 d00 d d))))
 (let ((?x2770 (* 12 (* q q r r r x x r00 d00 d d))))
 (let ((?x3378 (* 48 (* q q r r r r r r00 d00 d d))))
 (let ((?x3385 (* (- 48) (* q q r r r r x r00 d00 d d))))
 (let ((?x8369 (+ (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q q) (* 24 (* r r x x r00 d00 d d)) (* (- 1) (* r r x x d00 d00 q00 d d d)) (* 32 (* r r r x r00 d d d)) (* 192 (* q r r x r00 d)) (* (- 48) (* q r r r d00 d00 q00 d)) (* 384 (* r r r x r00 d)) (* 8 (* ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 ?x9963 r r r q)) (* 96 (* q r r x r00 d d)) (* (- 32) (* q r r r r00 d d d)) (* (- 384) (* q r r r r00 d)) (* (- 192) (* q r r r r00 d d)) (* 192 (* r r r x d00 x00 d)) (* (- 6) (* r r x x d00 d00 q00 d d)) (* (- 96) (* q q r r r00 d)) (* (- 48) (* q q r r r00 d d)) (* (- 8) (* q q r r r00 d d d)) (* 16 (* q r r x r00 d d d)) (* (- 384) (* r r r r r00 d)) (* (- 192) (* r r r r r00 d d)) (* (- 32) (* r r r r r00 d d d)) (* 192 (* r r r x r00 d d)) (* (- 96) (* r r x x r00 d)) ?x3385 (* (- 192) (* q q r r r r x r00 d00 d)) ?x3378 (* 48 (* q q r r r x x r00 d00 d)) ?x2770 (* (- 4) (* q q q q r r r d00 d00 q00)) (* 128 (* q r r r r r r r00 d00 d)) ?x3364 (* (- 192) (* q r r r r r x r00 d00 d)) (* 12 (* q q q r r r x d00 d00 q00)) ?x2773 (* 96 (* q r r r r x x r00 d00 d)) ?x3360 (* (- 12) (* q q r r r x x d00 d00 q00)) ?x3361 (* (- 96) (* q r r x r00 d00 d)) (* 16 (* q r r r r00 d00 d d d)) (* (- 48) (* q r r x r00 d00 d d)) (* 96 (* q r r r r00 d00 d d)) (* 192 (* q r r r r00 d00 d)) (* 4 (* q q r r r00 d00 d d d)) (* 24 (* q q r r r00 d00 d d)) (* 48 (* q q r r r00 d00 d)) (* (- 8) (* q r r x r00 d00 d d d)) (* 96 (* r r r x d00 x00 d d)) (* (- 48) (* r r x x d00 x00 d)) ?x10161 (* 64 (* q r r r r r r d00 q00 d)) ?x6758 (* (- 96) (* q r r r r r x d00 q00 d)) ?x6765 (* 48 (* q r r r r x x d00 q00 d)) (* (- 24) (* r r x x d00 x00 d d)) ?x8666 (* 96 (* r r r r r00 d00 d d)) (* 48 (* r r x x r00 d00 d)) ?x7913 ?x7188 (* (- 8) (* q r r r x x x d00 q00 d)) ?x9564 (* 12 (* q r r x d00 d00 q00 d d)) (* 24 (* r r r x d00 d00 q00 d d)) (* (- 8) (* r00 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r r q)) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q) (* 16 (* r r r r r00 d00 d d d)) (* 4 (* r r r x d00 d00 q00 d d d)) (* (- 12) (* q q r r d00 d00 q00 d)) (* (- 24) (* q r r r d00 d00 q00 d d)) (* 2 (* q r r x d00 d00 q00 d d d)) (* (- 24) (* r r r r d00 d00 q00 d d)) (* (- 48) (* r r r r d00 d00 q00 d)) (* 48 (* r r r x d00 d00 q00 d)) (* (- 4) (* q r r r d00 d00 q00 d d d)) (* (- 1) (* q q r r d00 d00 q00 d d d)) (* (- 4) (* q q r r d00 x00 d d d)) (* (- 16) (* q r r r d00 x00 d d d)) (* 192 (* r r r r r00 d00 d)) (* (- 48) (* r r x x r00 d d)) (* (- 16) (* q r r r x x x r00 d00 d)) ?x6819 (* (- 48) (* q q q r r r x r00 d00 d)) (* (- 96) (* r r r r d00 x00 d d)) (* (- 48) (* q q r r d00 x00 d)) (* (- 24) (* q q r r d00 x00 d d)) (* (- 192) (* q r r r d00 x00 d)) (* (- 96) (* q r r r d00 x00 d d)) (* 96 (* q r r x d00 x00 d)) (* 48 (* q r r x d00 x00 d d)) (* 8 (* q r r x d00 x00 d d d)) (* (- 192) (* r r r r d00 x00 d)) (* (- 16) (* r r r x r00 d00 d d d)) (* (- 192) (* q q r r r r r d00 x00 d)) (* 192 (* q q r r r r x d00 x00 d)) ?x8571 (* 48 (* q q q r r r x d00 x00 d)) ?x8573 ?x8578 ?x8580 ?x8579 (* (- 48) (* q q r r r x x d00 x00 d)) (* (- 12) (* r r x x d00 d00 q00 d)) (* 32 (* r r r x d00 d00 q00)) (* (- 96) (* r r r x d00 q00 d)) (* 12 (* q q r r d00 q00 d d)) (* 2 (* q q r r d00 q00 d d d)) (* 48 (* q r r r d00 q00 d d)) (* 8 (* q r r r d00 q00 d d d)) (* (- 24) (* q r r x d00 q00 d d)) (* 48 (* r r r r d00 q00 d d)) (* 4 (* r r x x r00 d00 d d d)) (* 24 (* q q r r d00 q00 d)) (* (- 16) (* q q q q r r r d00 x00 d)) (* 96 (* q r r r d00 q00 d)) (* (- 48) (* q r r x d00 q00 d)) (* (- 96) (* r r r x r00 d00 d d)) (* (- 4) (* q r r x d00 q00 d d d)) (* 96 (* r r r r d00 q00 d)) ?x8282 (* 8 (* r r r r d00 q00 d d d)) (* (- 48) (* r r r x d00 q00 d d)) (* 24 (* q r r x d00 d00 q00 d)) (* (- 8) (* r r r x d00 q00 d d d)) (* 16 (* r r r x d00 x00 d d d)) (* (- 8) (* r r x x r00 d d d)) (* 24 (* r r x x d00 q00 d)) (* 12 (* r r x x d00 q00 d d)) (* (- 6) (* q q r r d00 d00 q00 d d)) (* 2 (* r r x x d00 q00 d d d)) (* (- 8) (* q q r r d00 d00 q00)) ?x8288 ?x8614 ?x8615 ?x8617 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) ?x8291 (* 48 (* q q r r r x x r00 d00)) ?x8293 (* (- 48) (* q q q r r r x r00 d00)) ?x8621 ?x8623 (* 16 (* q q q q r r r r00 d00)) ?x8625 ?x8628 (* (- 2) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 r r q)) ?x8626 ?x8627 ?x8297 ?x8298 (* (- 128) (* q r r r r r r d00 x00 d)) ?x8632 (* 48 (* q q q r r r r d00 q00 d)) ?x8634 (* 192 (* q r r r r r x d00 x00 d)) ?x8302 (* 8 (* q q q q r r r d00 q00 d)) ?x8304 (* (- 24) (* q q q r r r x d00 q00 d)) ?x8640 (* 96 (* q q r r r r r d00 q00 d)) ?x8643 (* (- 96) (* q q r r r r x d00 q00 d)) ?x8308 (* 24 (* q q r r r x x d00 q00 d)) (* (- 96) (* q r r r r x x d00 x00 d)) ?x8649 (* (- 96) (* q q q r r r r d00 x00 d)) (* (- 4) (* r r x x d00 x00 d d d)) (* 8 (* q q q q r r r d00 q00)) (* (- 24) (* q q q r r r x d00 q00)) (* 24 (* q q r r r x x d00 q00)) (* 16 (* q r r r x x x d00 x00 d)) ?x8313 ?x8314 ?x8315 (* (- 4) (* r r r r d00 d00 q00 d d d)) (* (- 16) (* r r r r d00 x00 d d d)) ?x8661 (* q r r r x x x d00 d00 q00 d d) ?x8663 ?x8664 ?x8319 ?x8320 ?x8321 (* 16 (* q q q q r r r r00 d00 d)) (* 96 (* q q q r r r r r00 d00 d)) (* (- 32) (* q r r r d00 d00 q00)) (* (- 32) (* r r r r d00 d00 q00)) (* 48 (* q q r r r r x d00 d00 q00)) (* (- 48) (* q q r r r r r d00 d00 q00)) (* 192 (* q q r r r r r r00 d00 d)) (* 128 (* q r r x r00)) (* (- 256) (* r r r r r00)) (* (- 192) (* r r r x r00 d00 d)) (* (- 24) (* q q q r r r r d00 d00 q00)) (* 16 (* q r r x d00 d00 q00)) (* (- 8) (* r r x x d00 d00 q00)) (* (- 64) (* r r x x r00)) (* 256 (* r r r x r00)) (* (- 64) (* q q r r r00)) (* (- 256) (* q r r r r00)) (* (- 32) (* q r r r r r r d00 d00 q00)) (* 48 (* q r r r r r x d00 d00 q00)) (* (- 24) (* q r r r r x x d00 d00 q00)) (* 4 (* q r r r x x x d00 d00 q00)) (* 8 (* ?x10100 ?x10100 ?x10100 ?x9963 ?x9963 ?x9963 r r)) (* 96 (* q q q r r r r r00 d00)) (* 192 (* q q r r r r r r00 d00)) (* (- 192) (* q q r r r r x r00 d00)) (* 128 (* q r r r r r r r00 d00)) (* (- 192) (* q r r r r r x r00 d00)) (* 96 (* q r r r r x x r00 d00)) (* (- 16) (* q r r r x x x r00 d00)) (* (- 32) (* q q r r d00 x00)) (* (- 128) (* q r r r d00 x00)) (* 64 (* q r r x d00 x00)) (* (- 128) (* r r r r d00 x00)) (* 128 (* r r r x d00 x00)) (* (- 32) (* r r x x d00 x00)) (* 4 ?x10664) (* (- 16) (* q q q q r r r d00 x00)) (* (- 96) (* q q q r r r r d00 x00)) (* 48 (* q q q r r r x d00 x00)) (* (- 192) (* q q r r r r r d00 x00)) (* 192 (* q q r r r r x d00 x00)) (* (- 48) (* q q r r r x x d00 x00)) (* (- 128) (* q r r r r r r d00 x00)) (* 192 (* q r r r r r x d00 x00)) (* (- 96) (* q r r r r x x d00 x00)) (* 16 (* q r r r x x x d00 x00)) (* (- 64) (* q r r x r00 d00)) (* 128 (* q r r r r00 d00)) (* 32 (* q q r r r00 d00)) (* 128 (* r r r r r00 d00)) (* (- 128) (* r r r x r00 d00)) (* 32 (* r r x x r00 d00)) (* 16 (* q q r r d00 q00)) (* 64 (* q r r r d00 q00)) (* (- 32) (* q r r x d00 q00)) (* 64 (* r r r r d00 q00)) (* (- 64) (* r r r x d00 q00)) (* 16 (* r r x x d00 q00)) (* 48 (* q q q r r r r d00 q00)) (* 96 (* q q r r r r r d00 q00)) (* (- 96) (* q q r r r r x d00 q00)) (* 64 (* q r r r r r r d00 q00)) (* (- 96) (* q r r r r r x d00 q00)) (* 48 (* q r r r r x x d00 q00)) (* (- 8) (* q r r r x x x d00 q00)))))
 (let ((?x10908 (* (- 2) d)))
 (let ((?x4248 (+ (- 4) q ?x178 ?x237 ?x10908)))
 (let ((?x10907 (+ (- 8) q)))
 (let ((?x3969 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x8015 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x3906 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x3940 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x4090 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x1282 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r))))
 (let ((?x1006 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r r))))
 (let ((?x3973 (+ (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r)) (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) ?x1006 (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r)) ?x1282 ?x4090 (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r) ?x3940 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r r) ?x3906 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r r)) (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 r r)) ?x8015 ?x3969 (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4248 ?x4248 r r)) (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x4248 ?x4248 ?x4248 ?x4248 r r r)))))
 (let ((?x10872 (* (- 1) d)))
 (let ((?x3896 (+ (- 2) q ?x178 ?x237 ?x10872)))
 (let ((?x10871 (+ (- 4) q)))
 (let ((?x6652 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x3914 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x4175 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x3528 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x3939 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x8013 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r r))))
 (let ((?x3680 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 ?x3896 r r r))))
 (let ((?x4023 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r)) ?x3680 ?x8013 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r r) (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) ?x3939 (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r) ?x3528 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r r)) ?x4175 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 ?x3896 r r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 ?x3896 r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3896 ?x3896 r r)) ?x3914 ?x6652)))
 (let ((?x3912 (+ 2 q ?x178 ?x237 d)))
 (let ((?x9801 (+ 4 q)))
 (let ((?x3884 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3653 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r r))))
 (let ((?x2285 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x8012 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3955 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3874 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x4025 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 ?x3912 r r r))))
 (let ((?x3891 (+ (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r) ?x4025 ?x3874 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 ?x3912 r r)) ?x3955 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r r)) ?x8012 (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 ?x3912 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 r r)) (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3912 ?x3912 r r)) ?x2285 ?x3653 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x3912 ?x3912 ?x3912 ?x3912 r r r)) ?x3884)))
 (let (($x4096 (or (not (= ?x3891 0)) (not (= ?x4023 0)) (not (= ?x3973 0)) (not (= ?x8369 0)))))
 (let ((?x5475 (* (- 2) (* q d))))
 (let ((?x10111 (* q d d)))
 (let ((?x375 (* (- 4) (* r d))))
 (let ((?x3666 (* 4 (* x d))))
 (let ((?x362 (* r00 d00)))
 (let ((?x363 (* 4 ?x362)))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x10114 (* 8 r)))
 (let (($x3978 (and (= (+ ?x10114 ?x227 ?x275 ?x259 ?x325 ?x363 ?x3666 ?x375 ?x10111 ?x5475) 0) $x4096)))
 (let ((?x3447 (+ ?x178 ?x237 q)))
 (let ((?x9224 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x2887 (* 2 (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q q))))
 (let ((?x2878 (* 4 (* d00 x00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x1695 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x6916 (* 4 (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 ?x3447 r r r q))))
 (let ((?x4265 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r r q))))
 (let ((?x3737 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q q))))
 (let ((?x7729 (+ (* 8 (* r00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r q)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r) ?x3737 (* (- 8) (* ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 ?x3447 r r r q)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) ?x4265 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r q)) ?x6916 (* d00 d00 q00 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r r q) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 ?x3447 r r)) ?x1695 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r r)) ?x2878 ?x2887 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3447 ?x3447 r r)) ?x9224)))
 (let ((?x4222 (+ 2 ?x178 ?x237 q d)))
 (let ((?x3495 (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3520 (* 2 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3525 (* 4 (* d00 x00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3648 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3625 (* 4 (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3600 (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r r))))
 (let ((?x3577 (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x9801 ?x4222 ?x4222 ?x4222 r r r))))
 (let ((?x3488 (+ (* 8 (* r00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r)) (* (- 1) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r) ?x3577 (* (- 8) (* ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 ?x4222 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) ?x3600 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 ?x4222 r r)) (* 2 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 r r)) ?x3625 (* d00 d00 q00 ?x10100 ?x10100 ?x9801 ?x4222 ?x4222 ?x4222 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 ?x4222 r r)) ?x3648 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r r)) ?x3525 ?x3520 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x4222 ?x4222 r r)) ?x3495)))
 (let ((?x3461 (+ (- 2) ?x178 ?x237 q ?x10872)))
 (let ((?x3752 (* (- 2) (* d00 q00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4210 (* 2 (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x3747 (* 4 (* d00 x00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4195 (* (- 4) (* d00 r00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4190 (* 4 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4146 (* (- 4) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r r))))
 (let ((?x3451 (* (- 1) (* ?x10871 ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r))))
 (let ((?x4216 (+ (* 8 (* r00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r)) (* (- 1) (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r) ?x3451 (* (- 8) (* ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 ?x3461 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) ?x4146 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r)) (* 2 (* ?x10871 ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) ?x4190 (* d00 d00 q00 ?x10871 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 ?x3461 r r)) ?x4195 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r r)) ?x3747 ?x4210 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3461 ?x3461 r r)) ?x3752)))
 (let ((?x3688 (+ (- 4) ?x178 ?x237 q ?x10908)))
 (let ((?x3468 (* (- 2) (* d00 q00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x3473 (* 2 (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4101 (* 4 (* d00 x00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4085 (* (- 4) (* d00 r00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4067 (* 4 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x4061 (* (- 4) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r r))))
 (let ((?x4018 (* (- 1) (* ?x10907 ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r))))
 (let ((?x3469 (+ (* 8 (* r00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r)) (* (- 1) (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) (* d00 d00 q00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r) ?x4018 (* (- 8) (* ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 ?x3688 r r r)) (* 8 (* r00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) ?x4061 (* 4 (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r)) (* 2 (* ?x10907 ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) ?x4067 (* d00 d00 q00 ?x10907 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r r) (* (- 8) (* ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 ?x3688 r r)) ?x4085 (* 4 (* d00 x00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) (* (- 4) (* ?x10100 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r r)) ?x4101 ?x3473 (* (- 4) (* d00 r00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) (* (- 2) (* d00 q00 ?x10100 ?x10100 ?x10100 ?x3688 ?x3688 r r)) ?x3468)))
 (let (($x7736 (or (not (= ?x3469 0)) (not (= ?x4216 0)) (not (= ?x3488 0)) (not (= ?x7729 0)))))
 (let ((?x3560 (* 4 (* d00 r00))))
 (let ((?x3674 (+ ?x10114 ?x227 ?x3666 ?x259 ?x275 (* d d q) (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3560)))
 (let (($x6362 (and (= ?x3674 0) $x7736)))
 (rewrite (= $x6362 $x3978)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x220 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x180 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x177 (- q 8)))
 (let ((?x57 (+ d 2)))
 (let ((?x183 (- (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r))))
 (let ((?x188 (- (+ ?x183 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x180 ?x180 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x189 (- ?x188 (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r))))
 (let ((?x193 (- (+ ?x189 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r r r r))))
 (let ((?x198 (+ ?x193 (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r) (* ?x57 ?x57 d00 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x202 (- (- ?x198 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r)) (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r00 r r r))))
 (let ((?x206 (- (+ ?x202 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 r r r))))
 (let ((?x209 (+ ?x206 (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x214 (- (- ?x209 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x180 ?x180 r r))))
 (let ((?x215 (- ?x214 (* 2 ?x57 ?x57 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x139 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x137 (- q 4)))
 (let ((?x142 (- (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r))))
 (let ((?x147 (- (+ ?x142 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x139 ?x139 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x148 (- ?x147 (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r))))
 (let ((?x152 (- (+ ?x148 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r r r r))))
 (let ((?x157 (+ ?x152 (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r) (* ?x57 ?x57 d00 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x161 (- (- ?x157 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r)) (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r00 r r r))))
 (let ((?x165 (- (+ ?x161 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 r r r))))
 (let ((?x168 (+ ?x165 (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x173 (- (- ?x168 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x139 ?x139 r r))))
 (let ((?x174 (- ?x173 (* 2 ?x57 ?x57 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x59 (* 2 r)))
 (let ((?x60 (- ?x59 x)))
 (let ((?x99 (+ ?x60 q)))
 (let ((?x102 (- (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r))))
 (let ((?x107 (- (+ ?x102 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x99 ?x99 r r)) (* ?x57 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x108 (- ?x107 (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r))))
 (let ((?x112 (- (+ ?x108 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 r00 r r)) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 r r r r))))
 (let ((?x117 (+ ?x112 (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r) (* 2 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r) (* ?x57 ?x57 d00 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x121 (- (- ?x117 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r)) (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r00 r r r))))
 (let ((?x125 (- (+ ?x121 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 r r r))))
 (let ((?x128 (+ ?x125 (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r r r x00) (* 2 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x133 (- (- ?x128 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x99 ?x99 r r))))
 (let ((?x134 (- ?x133 (* 2 ?x57 ?x57 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x61 (+ ?x60 q d 2)))
 (let ((?x58 (+ q 4)))
 (let ((?x64 (- (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r))))
 (let ((?x69 (- (+ ?x64 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x61 ?x61 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x70 (- ?x69 (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r))))
 (let ((?x74 (- (+ ?x70 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r r r r))))
 (let ((?x79 (+ ?x74 (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r) (* ?x57 ?x57 d00 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let ((?x83 (- (- ?x79 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r)) (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r00 r r r))))
 (let ((?x87 (- (+ ?x83 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 r r r))))
 (let ((?x90 (+ ?x87 (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x95 (- (- ?x90 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x61 ?x61 r r))))
 (let ((?x96 (- ?x95 (* 2 ?x57 ?x57 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let (($x218 (or (not (= ?x96 0)) (not (= ?x134 0)) (not (= ?x174 0)) (not (= ?x215 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) $x218)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x3886 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x237 (* (- 1) x)))
 (let ((?x59 (* 2 r)))
 (let ((?x4772 (+ ?x59 ?x237 q)))
 (let ((?x224 (+ 2 d)))
 (let ((?x4170 (* (- 2) (* d00 q00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x4104 (* 2 (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q q))))
 (let ((?x3480 (* 4 (* d00 x00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x4036 (* (- 4) (* d00 r00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x3665 (* 4 (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x3908 (* (- 4) (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r r q))))
 (let ((?x3815 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q q))))
 (let ((?x4174 (+ (* 8 (* r00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r q)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r) ?x3815 (* (- 8) (* ?x224 ?x224 ?x4772 ?x4772 ?x4772 ?x4772 r r r q)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) ?x3908 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r q)) ?x3665 (* d00 d00 q00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q) (* (- 8) (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r)) ?x4036 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r r)) ?x3480 ?x4104 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) ?x4170)))
 (let ((?x8785 (+ 2 ?x59 ?x237 q d)))
 (let ((?x229 (+ 4 q)))
 (let ((?x3515 (* (- 2) (* d00 q00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3972 (* 2 (* ?x224 ?x224 ?x224 ?x229 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3968 (* 4 (* d00 x00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3639 (* (- 4) (* d00 r00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3869 (* 4 (* ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3837 (* (- 4) (* ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r r))))
 (let ((?x6069 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x4048 (+ (* 8 (* r00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r) ?x6069 (* (- 8) (* ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 ?x8785 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) ?x3837 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x8785 ?x8785 ?x8785 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 r r)) ?x3869 (* d00 d00 q00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x8785 ?x8785 ?x8785 r r)) ?x3639 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r r)) ?x3968 ?x3972 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) ?x3515)))
 (let ((?x1478 (* (- 1) d)))
 (let ((?x3812 (+ (- 2) ?x59 ?x237 q ?x1478)))
 (let ((?x1491 (+ (- 4) q)))
 (let ((?x3759 (* (- 2) (* d00 q00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x3586 (* 2 (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x3559 (* 4 (* d00 x00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4199 (* (- 4) (* d00 r00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4114 (* 4 (* ?x1491 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4071 (* (- 4) (* ?x1491 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r r))))
 (let ((?x3941 (* (- 1) (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4246 (+ (* 8 (* r00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r)) (* (- 1) (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r) ?x3941 (* (- 8) (* ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 ?x3812 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) ?x4071 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r)) (* 2 (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) ?x4114 (* d00 d00 q00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r)) ?x4199 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r r)) ?x3559 ?x3586 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) ?x3759)))
 (let ((?x9745 (* (- 2) d)))
 (let ((?x3942 (+ (- 4) ?x59 ?x237 q ?x9745)))
 (let ((?x6647 (+ (- 8) q)))
 (let ((?x608 (* (- 2) (* d00 q00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x1493 (* 2 (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x9727 (* 4 (* d00 x00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x1704 (* (- 4) (* d00 r00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x3638 (* 4 (* ?x6647 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x3756 (* (- 4) (* ?x6647 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r r))))
 (let ((?x4113 (* (- 1) (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x562 (+ (* 8 (* r00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r)) (* (- 1) (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r) ?x4113 (* (- 8) (* ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 ?x3942 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) ?x3756 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r)) (* 2 (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) ?x3638 (* d00 d00 q00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r)) ?x1704 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r r)) ?x9727 ?x1493 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) ?x608)))
 (let (($x3677 (or (not (= ?x562 0)) (not (= ?x4246 0)) (not (= ?x4048 0)) (not (= ?x4174 0)))))
 (let ((?x3560 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x3789 (+ ?x30 ?x227 (* 4 (* x d)) ?x259 ?x275 ?x44 (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3560)))
 (and (= ?x3789 0) $x3677))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x4770 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x237 (* (- 1) x)))
 (let ((?x59 (* 2 r)))
 (let ((?x4772 (+ ?x59 ?x237 q)))
 (let ((?x224 (+ 2 d)))
 (let ((?x4170 (* (- 2) (* d00 q00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x4104 (* 2 (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q q))))
 (let ((?x3480 (* 4 (* d00 x00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x4036 (* (- 4) (* d00 r00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x3665 (* 4 (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 ?x4772 r r r q))))
 (let ((?x3908 (* (- 4) (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r r q))))
 (let ((?x3815 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q q))))
 (let ((?x4174 (+ (* 8 (* r00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r q)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r) ?x3815 (* (- 8) (* ?x224 ?x224 ?x4772 ?x4772 ?x4772 ?x4772 r r r q)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) ?x3908 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r q)) ?x3665 (* d00 d00 q00 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r r q) (* (- 8) (* ?x224 ?x224 ?x224 ?x4772 ?x4772 ?x4772 r r)) ?x4036 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r r)) ?x3480 ?x4104 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x4772 ?x4772 r r)) ?x4170)))
 (let ((?x8785 (+ 2 ?x59 ?x237 q d)))
 (let ((?x229 (+ 4 q)))
 (let ((?x3515 (* (- 2) (* d00 q00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3972 (* 2 (* ?x224 ?x224 ?x224 ?x229 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3968 (* 4 (* d00 x00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3639 (* (- 4) (* d00 r00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3869 (* 4 (* ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x3837 (* (- 4) (* ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r r))))
 (let ((?x6069 (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x229 ?x8785 ?x8785 ?x8785 r r r))))
 (let ((?x4048 (+ (* 8 (* r00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r)) (* (- 1) (* ?x224 ?x224 ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r) ?x6069 (* (- 8) (* ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 ?x8785 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) ?x3837 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x8785 ?x8785 ?x8785 r r)) (* 2 (* ?x224 ?x224 ?x224 ?x224 ?x229 ?x8785 ?x8785 r r)) ?x3869 (* d00 d00 q00 ?x224 ?x224 ?x229 ?x8785 ?x8785 ?x8785 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x8785 ?x8785 ?x8785 r r)) ?x3639 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r r)) ?x3968 ?x3972 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x8785 ?x8785 r r)) ?x3515)))
 (let ((?x1478 (* (- 1) d)))
 (let ((?x3812 (+ (- 2) ?x59 ?x237 q ?x1478)))
 (let ((?x1491 (+ (- 4) q)))
 (let ((?x3759 (* (- 2) (* d00 q00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x3586 (* 2 (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x3559 (* 4 (* d00 x00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4199 (* (- 4) (* d00 r00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4114 (* 4 (* ?x1491 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4071 (* (- 4) (* ?x1491 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r r))))
 (let ((?x3941 (* (- 1) (* ?x1491 ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r))))
 (let ((?x4246 (+ (* 8 (* r00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r)) (* (- 1) (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r) ?x3941 (* (- 8) (* ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 ?x3812 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) ?x4071 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r)) (* 2 (* ?x1491 ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) ?x4114 (* d00 d00 q00 ?x1491 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x3812 ?x3812 ?x3812 r r)) ?x4199 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r r)) ?x3559 ?x3586 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x3812 ?x3812 r r)) ?x3759)))
 (let ((?x9745 (* (- 2) d)))
 (let ((?x3942 (+ (- 4) ?x59 ?x237 q ?x9745)))
 (let ((?x6647 (+ (- 8) q)))
 (let ((?x608 (* (- 2) (* d00 q00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x1493 (* 2 (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x9727 (* 4 (* d00 x00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x1704 (* (- 4) (* d00 r00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x3638 (* 4 (* ?x6647 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x3756 (* (- 4) (* ?x6647 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r r))))
 (let ((?x4113 (* (- 1) (* ?x6647 ?x6647 ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r))))
 (let ((?x562 (+ (* 8 (* r00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r)) (* (- 1) (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) (* d00 d00 q00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r) ?x4113 (* (- 8) (* ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 ?x3942 r r r)) (* 8 (* r00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) ?x3756 (* 4 (* ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r)) (* 2 (* ?x6647 ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) ?x3638 (* d00 d00 q00 ?x6647 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r r) (* (- 8) (* ?x224 ?x224 ?x224 ?x3942 ?x3942 ?x3942 r r)) ?x1704 (* 4 (* d00 x00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) (* (- 4) (* ?x224 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r r)) ?x9727 ?x1493 (* (- 4) (* d00 r00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) (* (- 2) (* d00 q00 ?x224 ?x224 ?x224 ?x3942 ?x3942 r r)) ?x608)))
 (let (($x3677 (or (not (= ?x562 0)) (not (= ?x4246 0)) (not (= ?x4048 0)) (not (= ?x4174 0)))))
 (let ((?x3560 (* 4 (* d00 r00))))
 (let ((?x324 (* d00 q00)))
 (let ((?x325 (* 2 ?x324)))
 (let ((?x44 (* d d q)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x275 (* (- 1) ?x41)))
 (let ((?x245 (* d00 x00)))
 (let ((?x259 (* (- 4) ?x245)))
 (let ((?x227 (* (- 8) r00)))
 (let ((?x30 (* 8 r)))
 (let ((?x3789 (+ ?x30 ?x227 (* 4 (* x d)) ?x259 ?x275 ?x44 (* (- 2) (* d q)) ?x325 (* (- 4) (* d r)) ?x3560)))
 (let (($x3686 (and (= ?x3789 0) $x3677)))
 (let ((?x180 (- (- (+ (- ?x59 x) q) (* 2 d)) 4)))
 (let ((?x177 (- q 8)))
 (let ((?x57 (+ d 2)))
 (let ((?x183 (- (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r))))
 (let ((?x188 (- (+ ?x183 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x180 ?x180 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x189 (- ?x188 (* 8 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r))))
 (let ((?x193 (- (+ ?x189 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 r r r r))))
 (let ((?x198 (+ ?x193 (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 r r) (* 4 ?x57 ?x57 ?x57 ?x177 ?x180 ?x180 ?x180 ?x180 r r r) (* ?x57 ?x57 d00 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x202 (- (- ?x198 (* 8 ?x57 ?x57 ?x57 ?x180 ?x180 ?x180 r r)) (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r00 r r r))))
 (let ((?x206 (- (+ ?x202 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x180 ?x180 r r r))))
 (let ((?x209 (+ ?x206 (* 4 ?x57 ?x57 d00 ?x177 ?x180 ?x180 ?x180 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x177 ?x177 ?x180 ?x180 ?x180 r r r))))
 (let ((?x214 (- (- ?x209 (* 4 ?x57 ?x57 ?x57 d00 ?x180 ?x180 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x180 ?x180 r r))))
 (let ((?x215 (- ?x214 (* 2 ?x57 ?x57 d00 ?x177 q00 ?x180 ?x180 ?x180 r r r))))
 (let ((?x139 (- (- (+ (- ?x59 x) q) d) 2)))
 (let ((?x137 (- q 4)))
 (let ((?x142 (- (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r))))
 (let ((?x147 (- (+ ?x142 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x139 ?x139 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x148 (- ?x147 (* 8 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r))))
 (let ((?x152 (- (+ ?x148 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 r r r r))))
 (let ((?x157 (+ ?x152 (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 r r) (* 4 ?x57 ?x57 ?x57 ?x137 ?x139 ?x139 ?x139 ?x139 r r r) (* ?x57 ?x57 d00 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x161 (- (- ?x157 (* 8 ?x57 ?x57 ?x57 ?x139 ?x139 ?x139 r r)) (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r00 r r r))))
 (let ((?x165 (- (+ ?x161 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x139 ?x139 r r r))))
 (let ((?x168 (+ ?x165 (* 4 ?x57 ?x57 d00 ?x137 ?x139 ?x139 ?x139 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x137 ?x137 ?x139 ?x139 ?x139 r r r))))
 (let ((?x173 (- (- ?x168 (* 4 ?x57 ?x57 ?x57 d00 ?x139 ?x139 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x139 ?x139 r r))))
 (let ((?x174 (- ?x173 (* 2 ?x57 ?x57 d00 ?x137 q00 ?x139 ?x139 ?x139 r r r))))
 (let ((?x60 (- ?x59 x)))
 (let ((?x99 (+ ?x60 q)))
 (let ((?x102 (- (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r))))
 (let ((?x107 (- (+ ?x102 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x99 ?x99 r r)) (* ?x57 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x108 (- ?x107 (* 8 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r))))
 (let ((?x112 (- (+ ?x108 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 r00 r r)) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 r r r r))))
 (let ((?x117 (+ ?x112 (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r) (* 2 ?x57 ?x57 ?x57 ?x57 q ?x99 ?x99 r r) (* 4 ?x57 ?x57 ?x57 q ?x99 ?x99 ?x99 ?x99 r r r) (* ?x57 ?x57 d00 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x121 (- (- ?x117 (* 8 ?x57 ?x57 ?x57 ?x99 ?x99 ?x99 r r)) (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r00 r r r))))
 (let ((?x125 (- (+ ?x121 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x99 ?x99 r r r))))
 (let ((?x128 (+ ?x125 (* 4 ?x57 ?x57 d00 q ?x99 ?x99 ?x99 r r r x00) (* 2 ?x57 ?x57 ?x57 q q ?x99 ?x99 ?x99 r r r))))
 (let ((?x133 (- (- ?x128 (* 4 ?x57 ?x57 ?x57 d00 ?x99 ?x99 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x99 ?x99 r r))))
 (let ((?x134 (- ?x133 (* 2 ?x57 ?x57 d00 q q00 ?x99 ?x99 ?x99 r r r))))
 (let ((?x61 (+ ?x60 q d 2)))
 (let ((?x58 (+ q 4)))
 (let ((?x64 (- (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r00 r r r) (* ?x57 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r))))
 (let ((?x69 (- (+ ?x64 (* ?x57 ?x57 ?x57 d00 d00 q00 ?x61 ?x61 r r)) (* ?x57 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x70 (- ?x69 (* 8 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r))))
 (let ((?x74 (- (+ ?x70 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 r00 r r)) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 r r r r))))
 (let ((?x79 (+ ?x74 (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r) (* 2 ?x57 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 r r) (* 4 ?x57 ?x57 ?x57 ?x58 ?x61 ?x61 ?x61 ?x61 r r r) (* ?x57 ?x57 d00 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let ((?x83 (- (- ?x79 (* 8 ?x57 ?x57 ?x57 ?x61 ?x61 ?x61 r r)) (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r00 r r r))))
 (let ((?x87 (- (+ ?x83 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r r x00)) (* 4 ?x57 ?x57 ?x57 ?x57 ?x61 ?x61 r r r))))
 (let ((?x90 (+ ?x87 (* 4 ?x57 ?x57 d00 ?x58 ?x61 ?x61 ?x61 r r r x00) (* 2 ?x57 ?x57 ?x57 ?x58 ?x58 ?x61 ?x61 ?x61 r r r))))
 (let ((?x95 (- (- ?x90 (* 4 ?x57 ?x57 ?x57 d00 ?x61 ?x61 r00 r r)) (* 2 ?x57 ?x57 ?x57 d00 q00 ?x61 ?x61 r r))))
 (let ((?x96 (- ?x95 (* 2 ?x57 ?x57 d00 ?x58 q00 ?x61 ?x61 ?x61 r r r))))
 (let (($x218 (or (not (= ?x96 0)) (not (= ?x134 0)) (not (= ?x174 0)) (not (= ?x215 0)))))
 (let ((?x42 (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) (* 4 d00 x00))))
 (let ((?x50 (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) (* 2 d00 q00))))
 (let (($x219 (and (= (+ (- ?x50 (* 4 d r)) (* 4 d00 r00)) 0) $x218)))
 (rewrite (= $x219 $x3686)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x8737 (trans (quant-intro (proof-bind ?x4770) (= $x220 $x3886)) (elim-unused (= $x3886 $x6359)) (= $x220 $x6359))))
 (let ((@x27 (asserted $x220)))
 (let ((@x8678 (mp (mp (mp @x27 @x8737 $x6359) (rewrite (= $x6359 $x6359)) $x6359) (quant-intro (proof-bind ?x3954) (= $x6359 $x4245)) $x4245)))
 (let ((@x474 (mp (mp~ @x8678 (sk (~ $x4245 $x944)) $x944) (rewrite (= $x944 $x5940)) $x5940)))
 (let ((@x728 (and-elim @x474 $x1129)))
 (let ((@x1165 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1129) $x2905)) @x728 $x2905)))
 (let (($x967 (>= ?x1133 0)))
 (let ((@x5942 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1129) $x967)) @x728 $x967)))
 (let (($x1110 (not (<= ?x5932 0))))
 (let (($x1167 (<= ?x441 0)))
 (let (($x7369 (>= ?x441 0)))
 (let ((@x7635 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x657 (not $x1167) (not $x7369))) (lemma ((_ th-lemma arith) (hypothesis (not $x7369)) @x5942 @x1165 false) $x7369) (lemma ((_ th-lemma arith) (hypothesis (not $x1167)) @x5942 @x1165 false) $x1167) $x657)))
 (let (($x1132 (>= ?x2897 0)))
 (let (($x8082 (<= ?x2897 0)))
 (let ((@x2627 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2914 (not $x8082) (not $x1132))) (lemma ((_ th-lemma arith) (hypothesis (not $x8082)) @x5942 @x1165 false) $x8082) (lemma ((_ th-lemma arith) (hypothesis (not $x1132)) @x5942 @x1165 false) $x1132) $x2914)))
 (let (($x9372 (>= ?x1192 0)))
 (let (($x947 (<= ?x1192 0)))
 (let ((@x1175 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1190 (not $x947) (not $x9372))) (lemma ((_ th-lemma arith) (hypothesis (not $x947)) @x5942 @x1165 false) $x947) (lemma ((_ th-lemma arith) (hypothesis (not $x9372)) @x5942 @x1165 false) $x9372) $x1190)))
 (let ((@x7672 (unit-resolution (unit-resolution (and-elim @x474 $x961) @x1175 @x2627 (or $x1193 $x10327)) @x7635 $x10327)))
 (let (($x7380 (>= ?x5932 0)))
 (let ((@x7730 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2867 $x1110 (not $x7380))) (lemma ((_ th-lemma arith) (hypothesis (not $x7380)) @x5942 @x1165 false) $x7380) @x7672 $x1110)))
 ((_ th-lemma arith) @x7730 @x5942 @x1165 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        10
 :arith-assert-upper        11
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-gcd-tests           8
 :arith-grobner             8
 :arith-max-min             5360
 :arith-nonlinear-horner    70
 :arith-num-rows            13
 :arith-patches             8
 :arith-patches_succ        8
 :arith-pivots              5
 :arith-tableau-max-columns 374
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                23.00
 :memory                    20.04
 :mk-bool-var               15
 :mk-clause                 20
 :num-allocs                1212495671
 :num-checks                1
 :propagations              36
 :rlimit-count              701676
 :time                      0.62
 :total-time                0.66)
