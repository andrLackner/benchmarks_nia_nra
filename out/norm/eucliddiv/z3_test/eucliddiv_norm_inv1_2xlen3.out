unsat
((set-logic NIA)
(proof
(let (($x71 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x58 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x46 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x59 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x48 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x54 (* ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x52 (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x50 (* ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x44 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x45 (- ?x44 ?x44)))
 (let ((?x47 (+ ?x45 ?x46)))
 (let ((?x49 (- ?x47 ?x48)))
 (let ((?x51 (+ ?x49 ?x50)))
 (let ((?x53 (- ?x51 ?x52)))
 (let ((?x56 (+ ?x53 ?x54 ?x55)))
 (let ((?x57 (- ?x56 ?x50)))
 (let ((?x60 (+ ?x57 ?x52 ?x58 ?x59)))
 (let ((?x61 (- ?x60 ?x54)))
 (let ((?x62 (+ ?x61 ?x48)))
 (let ((?x63 (- ?x62 ?x55)))
 (let ((?x64 (- ?x63 ?x59)))
 (let ((?x65 (- ?x64 ?x46)))
 (let ((?x66 (- ?x65 ?x58)))
 (let (($x67 (= ?x66 0)))
 (let (($x68 (not $x67)))
 (let (($x69 (or $x68)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ (* (- 1) y00) y) 0)))
 (and $x33 $x41 $x69))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x639 (= $x71 false)))
 (let (($x646 (exists ((q Int) (r Int) (y Int) )(! false :qid k!29))
 ))
 (let ((@x640 (elim-unused (= $x646 false))))
 (let (($x643 (= $x71 $x646)))
 (let ((?x840 (lambda ((q Int) (r Int) (y Int) )(let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x58 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x46 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x59 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x55 (* ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x48 (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00)))
 (let ((?x54 (* ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x52 (* ?x42 ?x42 ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x50 (* ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x44 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 ?x43 y00 y00 y00 y00)))
 (let ((?x45 (- ?x44 ?x44)))
 (let ((?x47 (+ ?x45 ?x46)))
 (let ((?x49 (- ?x47 ?x48)))
 (let ((?x51 (+ ?x49 ?x50)))
 (let ((?x53 (- ?x51 ?x52)))
 (let ((?x56 (+ ?x53 ?x54 ?x55)))
 (let ((?x57 (- ?x56 ?x50)))
 (let ((?x60 (+ ?x57 ?x52 ?x58 ?x59)))
 (let ((?x61 (- ?x60 ?x54)))
 (let ((?x62 (+ ?x61 ?x48)))
 (let ((?x63 (- ?x62 ?x55)))
 (let ((?x64 (- ?x63 ?x59)))
 (let ((?x65 (- ?x64 ?x46)))
 (let ((?x66 (- ?x65 ?x58)))
 (let (($x67 (= ?x66 0)))
 (let (($x68 (not $x67)))
 (let (($x69 (or $x68)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ (* (- 1) y00) y) 0)))
 (let (($x70 (and $x33 $x41 $x69)))
 (let (($x648 (= $x70 false)))
 (let (($x611 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x90 (= (+ (* (- 1) y00) y) 0)))
 (let (($x834 (and $x90 $x611 false)))
 (let (($x655 (= $x69 false)))
 (let ((@x656 (rewrite (= (or false) false))))
 (let (($x660 (or false)))
 (let (($x659 (= $x69 $x660)))
 (let (($x662 (= $x68 false)))
 (let ((@x663 (rewrite (= (not true) false))))
 (let (($x667 (not true)))
 (let (($x666 (= $x68 $x667)))
 (let (($x669 (= $x67 true)))
 (let ((@x670 (rewrite (= (= 0 0) true))))
 (let (($x674 (= 0 0)))
 (let (($x673 (= $x67 $x674)))
 (let ((?x76 (* (- 1) y00)))
 (let ((?x82 (+ r ?x76)))
 (let ((?x74 (+ 1 q)))
 (let ((?x734 (* y00 y00 ?x74 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x820 (+ ?x734 (* (- 1) ?x734))))
 (let ((?x522 (* ?x74 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00)))
 (let (($x521 (= ?x58 ?x522)))
 (let ((@x84 (rewrite (= ?x43 ?x82))))
 (let ((@x95 (rewrite (= ?x42 ?x74))))
 (let ((@x738 (trans (monotonicity @x95 @x95 @x95 @x95 @x84 @x84 @x84 @x84 @x84 $x521) (rewrite (= ?x522 ?x734)) (= ?x58 ?x734))))
 (let ((?x605 (* y00 y00 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x798 (+ ?x605 ?x734)))
 (let ((?x807 (+ ?x798 (* (- 1) ?x605))))
 (let ((@x603 (rewrite (= (* ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00) ?x605))))
 (let ((?x215 (* ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00)))
 (let (($x214 (= ?x46 ?x215)))
 (let ((@x601 (trans (monotonicity @x95 @x95 @x84 @x84 @x84 @x84 @x84 $x214) @x603 (= ?x46 ?x605))))
 (let ((?x740 (* y00 y00 y00 y00 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x784 (+ ?x605 ?x734 ?x740)))
 (let ((?x793 (+ ?x784 (* (- 1) ?x740))))
 (let ((?x520 (* ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00 y00 y00)))
 (let ((@x744 (trans (monotonicity @x95 @x95 @x95 @x84 @x84 @x84 @x84 @x84 (= ?x59 ?x520)) (rewrite (= ?x520 ?x740)) (= ?x59 ?x740))))
 (let ((?x706 (* y00 y00 y00 y00 ?x74 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x770 (+ ?x605 ?x706 ?x734 ?x740)))
 (let ((?x779 (+ ?x770 (* (- 1) ?x706))))
 (let ((?x535 (* ?x74 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00 y00 y00)))
 (let (($x425 (= ?x55 ?x535)))
 (let ((@x705 (monotonicity @x95 @x95 @x95 @x95 @x84 @x84 @x84 @x84 @x84 @x84 $x425)))
 (let ((@x710 (trans @x705 (rewrite (= ?x535 ?x706)) (= ?x55 ?x706))))
 (let ((?x517 (* y00 y00 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x584 (* (- 1) ?x517)))
 (let ((?x762 (+ ?x605 ?x584 ?x706 ?x734 ?x740)))
 (let ((?x767 (+ ?x762 ?x517)))
 (let ((?x181 (* ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00)))
 (let (($x180 (= ?x48 ?x181)))
 (let ((@x588 (trans (monotonicity @x95 @x95 @x95 @x84 @x84 @x84 @x84 @x84 @x84 $x180) (rewrite (= ?x181 ?x517)) (= ?x48 ?x517))))
 (let ((?x700 (* y00 y00 y00 y00 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x748 (+ ?x605 ?x584 ?x700 ?x706 ?x734 ?x740)))
 (let ((?x757 (+ ?x748 (* (- 1) ?x700))))
 (let ((?x537 (* ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00 y00 y00)))
 (let ((@x704 (trans (monotonicity @x95 @x84 @x84 @x84 @x84 @x84 @x84 (= ?x54 ?x537)) (rewrite (= ?x537 ?x700)) (= ?x54 ?x700))))
 (let ((?x680 (* y00 y00 y00 y00 ?x74 ?x74 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x688 (* (- 1) ?x680)))
 (let ((?x728 (+ ?x605 ?x584 ?x688 ?x700 ?x706)))
 (let ((?x745 (+ ?x728 ?x680 ?x734 ?x740)))
 (let ((?x413 (* ?x74 ?x74 ?x74 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00 y00 y00)))
 (let (($x414 (= ?x52 ?x413)))
 (let ((@x679 (monotonicity @x95 @x95 @x95 @x95 @x95 @x84 @x84 @x84 @x84 @x84 $x414)))
 (let ((@x684 (trans @x679 (rewrite (= ?x413 ?x680)) (= ?x52 ?x680))))
 (let ((?x578 (* y00 y00 y00 y00 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x714 (+ ?x605 ?x584 ?x578 ?x688 ?x700 ?x706)))
 (let ((?x723 (+ ?x714 (* (- 1) ?x578))))
 (let ((@x427 (rewrite (= (* ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00 y00 y00) ?x578))))
 (let ((@x160 (monotonicity @x84 @x84 @x84 @x84 @x84 (= ?x50 (* ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00 y00 y00)))))
 (let ((@x429 (trans @x160 @x427 (= ?x50 ?x578))))
 (let ((@x691 (rewrite (= (- (+ ?x605 ?x584 ?x578) ?x680) (+ (+ ?x605 ?x584 ?x578) ?x688)))))
 (let (($x217 (= ?x45 0)))
 (let ((?x635 (* y00 y00 y00 y00 ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x618 (+ ?x635 (* (- 1) ?x635))))
 (let ((?x87 (* ?x74 ?x74 ?x82 ?x82 ?x82 ?x82 ?x82 y00 y00 y00 y00)))
 (let ((@x629 (trans (monotonicity @x95 @x95 @x84 @x84 @x84 @x84 @x84 (= ?x44 ?x87)) (rewrite (= ?x87 ?x635)) (= ?x44 ?x635))))
 (let ((@x613 (trans (monotonicity @x629 @x629 (= ?x45 (- ?x635 ?x635))) (rewrite (= (- ?x635 ?x635) ?x618)) (= ?x45 ?x618))))
 (let ((@x598 (monotonicity (trans @x613 (rewrite (= ?x618 0)) $x217) @x601 (= ?x47 (+ 0 ?x605)))))
 (let ((@x585 (monotonicity (trans @x598 (rewrite (= (+ 0 ?x605) ?x605)) (= ?x47 ?x605)) @x588 (= ?x49 (- ?x605 ?x517)))))
 (let ((@x579 (trans @x585 (rewrite (= (- ?x605 ?x517) (+ ?x605 ?x584))) (= ?x49 (+ ?x605 ?x584)))))
 (let ((@x678 (trans (monotonicity @x579 @x429 (= ?x51 (+ (+ ?x605 ?x584) ?x578))) (rewrite (= (+ (+ ?x605 ?x584) ?x578) (+ ?x605 ?x584 ?x578))) (= ?x51 (+ ?x605 ?x584 ?x578)))))
 (let ((@x693 (trans (monotonicity @x678 @x684 (= ?x53 (- (+ ?x605 ?x584 ?x578) ?x680))) @x691 (= ?x53 (+ (+ ?x605 ?x584 ?x578) ?x688)))))
 (let ((@x698 (trans @x693 (rewrite (= (+ (+ ?x605 ?x584 ?x578) ?x688) (+ ?x605 ?x584 ?x578 ?x688))) (= ?x53 (+ ?x605 ?x584 ?x578 ?x688)))))
 (let ((@x713 (monotonicity @x698 @x704 @x710 (= ?x56 (+ (+ ?x605 ?x584 ?x578 ?x688) ?x700 ?x706)))))
 (let ((@x718 (trans @x713 (rewrite (= (+ (+ ?x605 ?x584 ?x578 ?x688) ?x700 ?x706) ?x714)) (= ?x56 ?x714))))
 (let ((@x727 (trans (monotonicity @x718 @x429 (= ?x57 (- ?x714 ?x578))) (rewrite (= (- ?x714 ?x578) ?x723)) (= ?x57 ?x723))))
 (let ((@x747 (monotonicity (trans @x727 (rewrite (= ?x723 ?x728)) (= ?x57 ?x728)) @x684 @x738 @x744 (= ?x60 ?x745))))
 (let ((@x755 (monotonicity (trans @x747 (rewrite (= ?x745 ?x748)) (= ?x60 ?x748)) @x704 (= ?x61 (- ?x748 ?x700)))))
 (let ((@x766 (trans (trans @x755 (rewrite (= (- ?x748 ?x700) ?x757)) (= ?x61 ?x757)) (rewrite (= ?x757 ?x762)) (= ?x61 ?x762))))
 (let ((@x774 (trans (monotonicity @x766 @x588 (= ?x62 ?x767)) (rewrite (= ?x767 ?x770)) (= ?x62 ?x770))))
 (let ((@x783 (trans (monotonicity @x774 @x710 (= ?x63 (- ?x770 ?x706))) (rewrite (= (- ?x770 ?x706) ?x779)) (= ?x63 ?x779))))
 (let ((@x791 (monotonicity (trans @x783 (rewrite (= ?x779 ?x784)) (= ?x63 ?x784)) @x744 (= ?x64 (- ?x784 ?x740)))))
 (let ((@x802 (trans (trans @x791 (rewrite (= (- ?x784 ?x740) ?x793)) (= ?x64 ?x793)) (rewrite (= ?x793 ?x798)) (= ?x64 ?x798))))
 (let ((@x811 (trans (monotonicity @x802 @x601 (= ?x65 (- ?x798 ?x605))) (rewrite (= (- ?x798 ?x605) ?x807)) (= ?x65 ?x807))))
 (let ((@x818 (monotonicity (trans @x811 (rewrite (= ?x807 ?x734)) (= ?x65 ?x734)) @x738 (= ?x66 (- ?x734 ?x734)))))
 (let ((@x827 (trans (trans @x818 (rewrite (= (- ?x734 ?x734) ?x820)) (= ?x66 ?x820)) (rewrite (= ?x820 0)) $x67)))
 (let ((@x831 (trans (monotonicity (trans (monotonicity @x827 $x673) @x670 $x669) $x666) @x663 $x662)))
 (let ((@x836 (monotonicity (rewrite (= $x33 $x90)) (rewrite (= $x41 $x611)) (trans (monotonicity @x831 $x659) @x656 $x655) (= $x70 $x834))))
 (trans @x836 (rewrite (= $x834 false)) $x648))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x72 (asserted $x71)))
 (mp @x72 (trans (quant-intro (proof-bind ?x840) $x643) @x640 $x639) false))))))))))

(:max-memory   19.14
 :memory       19.14
 :num-allocs   255840
 :rlimit-count 478
 :time         0.01
 :total-time   0.02)
