unsat
((set-logic NRA)
(proof
(let (($x227 (exists ((x Real) (y Real) )(! (let ((?x104 (* (/ 1.0 2.0) y)))
 (let ((?x107 (+ (- (/ 1.0 2.0)) ?x104)))
 (let ((?x309 (* ?x107 x x)))
 (let ((?x319 (* (- 4.0) ?x309)))
 (let ((?x503 (* ?x107 ?x107 ?x107 x x)))
 (let ((?x306 (* (- 4.0) ?x503)))
 (let ((?x71 (* x00 y00)))
 (let ((?x111 (* y x)))
 (let ((?x112 (* (- 1.0) ?x111)))
 (let ((?x338 (+ ?x112 ?x71 z00 x)))
 (let ((?x340 (* ?x107 ?x338 x x x)))
 (let ((?x501 (* (- 8.0) ?x340)))
 (let ((?x323 (+ ?x501 ?x306 ?x319)))
 (let ((?x109 (* ?x107 x)))
 (let ((?x110 (* 2.0 ?x109)))
 (let ((?x229 (+ ?x110 ?x112 x)))
 (let ((?x295 (* ?x229 ?x323)))
 (let (($x297 (= ?x295 0.0)))
 (not $x297))))))))))))))))))) :qid k!28))
 ))
 (let (($x462 (exists ((x Real) (y Real) )(! false :qid k!28))
 ))
 (let ((?x461 (lambda ((x Real) (y Real) )(let ((?x104 (* (/ 1.0 2.0) y)))
 (let ((?x107 (+ (- (/ 1.0 2.0)) ?x104)))
 (let ((?x309 (* ?x107 x x)))
 (let ((?x319 (* (- 4.0) ?x309)))
 (let ((?x503 (* ?x107 ?x107 ?x107 x x)))
 (let ((?x306 (* (- 4.0) ?x503)))
 (let ((?x71 (* x00 y00)))
 (let ((?x111 (* y x)))
 (let ((?x112 (* (- 1.0) ?x111)))
 (let ((?x338 (+ ?x112 ?x71 z00 x)))
 (let ((?x340 (* ?x107 ?x338 x x x)))
 (let ((?x501 (* (- 8.0) ?x340)))
 (let ((?x323 (+ ?x501 ?x306 ?x319)))
 (let ((?x109 (* ?x107 x)))
 (let ((?x110 (* 2.0 ?x109)))
 (let ((?x229 (+ ?x110 ?x112 x)))
 (let ((?x295 (* ?x229 ?x323)))
 (let (($x297 (= ?x295 0.0)))
 (let (($x226 (not $x297)))
 (let ((?x571 (* 4.0 (* x x x z00))))
 (let ((?x593 (* y x x x x)))
 (let ((?x183 (* (- 8.0) ?x593)))
 (let ((?x547 (* x x x x)))
 (let ((?x426 (* 4.0 ?x547)))
 (let ((?x357 (* 4.0 (* x x x x00 y00))))
 (let ((?x408 (* y y y x x)))
 (let ((?x488 (* (- (/ 1.0 2.0)) ?x408)))
 (let ((?x178 (* y y x x)))
 (let ((?x421 (* (/ 3.0 2.0) ?x178)))
 (let ((?x114 (* y y x x x x)))
 (let ((?x535 (* 4.0 ?x114)))
 (let ((?x89 (* y x x x x00 y00)))
 (let ((?x99 (* (- 4.0) ?x89)))
 (let ((?x79 (* y x x x z00)))
 (let ((?x83 (* (- 4.0) ?x79)))
 (let ((?x135 (+ ?x83 ?x99 ?x535 (* (- (/ 7.0 2.0)) (* y x x)) ?x421 ?x488 ?x357 (* (/ 5.0 2.0) (* x x)) ?x426 ?x183 ?x571)))
 (let ((?x145 (* 0.0 ?x135)))
 (let ((?x424 (+ (* (- 2.0) (* y x x)) (* 2.0 (* x x)))))
 (let ((?x460 (* x x)))
 (let ((?x453 (* (/ 1.0 2.0) ?x460)))
 (let ((?x422 (+ (* (- (/ 3.0 2.0)) (* y x x)) ?x421 ?x488 ?x453)))
 (let ((?x185 (+ ?x83 ?x99 ?x535 ?x357 ?x426 ?x183 ?x571)))
 (let ((?x379 (+ ?x185 ?x422 ?x424)))
 (let ((?x371 (+ (* (- 4.0) (* (/ 1.0 2.0) (* y x x))) (* (- 4.0) (* (- (/ 1.0 2.0)) ?x460)))))
 (let ((?x458 (* (- (/ 1.0 2.0)) ?x460)))
 (let ((?x163 (* y x x)))
 (let ((?x167 (* (/ 1.0 2.0) ?x163)))
 (let ((?x232 (+ ?x167 ?x458)))
 (let ((?x342 (* (- 4.0) ?x232)))
 (let ((@x105 (monotonicity (rewrite (= (* ?x104 x x) ?x167)) (= (+ ?x458 (* ?x104 x x)) (+ ?x458 ?x167)))))
 (let ((@x329 (trans @x105 (rewrite (= (+ ?x458 ?x167) ?x232)) (= (+ ?x458 (* ?x104 x x)) ?x232))))
 (let ((@x341 (trans (rewrite (= ?x309 (+ ?x458 (* ?x104 x x)))) @x329 (= ?x309 ?x232))))
 (let ((@x377 (trans (monotonicity @x341 (= ?x319 ?x342)) (rewrite (= ?x342 ?x371)) (= ?x319 ?x371))))
 (let ((?x212 (* (- (/ 1.0 8.0)) ?x460)))
 (let ((?x362 (* (- 4.0) ?x212)))
 (let ((?x423 (* (/ 1.0 8.0) ?x408)))
 (let ((?x351 (* (- 4.0) ?x423)))
 (let ((?x347 (* (- (/ 1.0 4.0)) ?x178)))
 (let ((?x350 (* (- 4.0) ?x347)))
 (let ((?x171 (* (- (/ 1.0 2.0)) (* ?x104 ?x104 x x))))
 (let ((?x325 (* (- 4.0) ?x171)))
 (let ((?x345 (* (/ 1.0 4.0) ?x163)))
 (let ((?x470 (* (- 4.0) ?x345)))
 (let ((?x74 (* (- (/ 1.0 2.0)) (* ?x104 (- (/ 1.0 2.0)) x x))))
 (let ((?x472 (* (- 4.0) ?x74)))
 (let ((?x363 (+ ?x472 ?x470 ?x325 ?x350 ?x351 ?x362)))
 (let ((?x483 (* (/ 1.0 2.0) ?x178)))
 (let ((?x368 (* (- 1.0) ?x163)))
 (let ((?x353 (* (- (/ 1.0 2.0)) ?x163)))
 (let ((?x195 (+ ?x353 ?x368 ?x483 ?x178 ?x488 ?x453)))
 (let ((@x139 (monotonicity (rewrite (= ?x472 ?x353)) (rewrite (= ?x470 ?x368)) (rewrite (= ?x325 ?x483)) (rewrite (= ?x350 ?x178)) (rewrite (= ?x351 ?x488)) (rewrite (= ?x362 ?x453)) (= ?x363 ?x195))))
 (let ((?x348 (+ ?x74 ?x345 ?x171 ?x347 ?x423 ?x212)))
 (let ((?x172 (* ?x104 ?x104 ?x104 x x)))
 (let ((?x169 (* ?x104 (- (/ 1.0 2.0)) ?x104 x x)))
 (let ((?x168 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) (* ?x104 x x)))))
 (let ((?x75 (* ?x104 ?x104 (- (/ 1.0 2.0)) x x)))
 (let ((?x70 (* ?x104 (- (/ 1.0 2.0)) (- (/ 1.0 2.0)) x x)))
 (let ((?x69 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) ?x458))))
 (let ((?x173 (+ ?x69 ?x70 ?x74 ?x75 ?x168 ?x169 ?x171 ?x172)))
 (let ((?x180 (* (- (/ 1.0 8.0)) ?x178)))
 (let ((?x205 (* (/ 1.0 8.0) ?x163)))
 (let ((?x200 (+ ?x212 ?x205 ?x74 ?x180 ?x205 ?x180 ?x171 ?x423)))
 (let ((@x209 (monotonicity (rewrite (= ?x69 ?x212)) (rewrite (= ?x70 ?x205)) (rewrite (= ?x75 ?x180)) (rewrite (= ?x168 ?x205)) (rewrite (= ?x169 ?x180)) (rewrite (= ?x172 ?x423)) (= ?x173 ?x200))))
 (let ((@x561 (trans (rewrite (= ?x503 ?x173)) (trans @x209 (rewrite (= ?x200 ?x348)) (= ?x173 ?x348)) (= ?x503 ?x348))))
 (let ((@x356 (trans (monotonicity @x561 (= ?x306 (* (- 4.0) ?x348))) (rewrite (= (* (- 4.0) ?x348) ?x363)) (= ?x306 ?x363))))
 (let ((@x560 (trans @x356 (trans @x139 (rewrite (= ?x195 ?x422)) (= ?x363 ?x422)) (= ?x306 ?x422))))
 (let ((?x611 (* (- (/ 1.0 2.0)) (* ?x112 x x x))))
 (let ((?x402 (* (- 8.0) ?x611)))
 (let ((?x602 (* (/ 1.0 2.0) ?x593)))
 (let ((?x385 (* (- 8.0) ?x602)))
 (let ((?x581 (* (- (/ 1.0 2.0)) (* ?x71 x x x))))
 (let ((?x396 (* (- 8.0) ?x581)))
 (let ((?x316 (* (- (/ 1.0 2.0)) ?x547)))
 (let ((?x394 (* (- 8.0) ?x316)))
 (let ((?x498 (* z00 x x x)))
 (let ((?x504 (* (- (/ 1.0 2.0)) ?x498)))
 (let ((?x375 (* (- 8.0) ?x504)))
 (let ((?x115 (* (- (/ 1.0 2.0)) ?x114)))
 (let ((?x389 (* (- 8.0) ?x115)))
 (let ((?x90 (* (/ 1.0 2.0) ?x89)))
 (let ((?x388 (* (- 8.0) ?x90)))
 (let ((?x82 (* (/ 1.0 2.0) ?x79)))
 (let ((?x400 (* (- 8.0) ?x82)))
 (let ((?x403 (+ ?x400 ?x388 ?x389 ?x375 ?x394 ?x396 ?x385 ?x402)))
 (let ((?x431 (* (- 4.0) ?x593)))
 (let ((?x448 (+ ?x83 ?x99 ?x535 ?x571 ?x426 ?x357 ?x431 ?x431)))
 (let ((@x352 (trans (rewrite (= ?x396 (* 4.0 (* x00 y00 x x x)))) (rewrite (= (* 4.0 (* x00 y00 x x x)) ?x357)) (= ?x396 ?x357))))
 (let ((@x425 (trans (rewrite (= ?x375 (* 4.0 ?x498))) (rewrite (= (* 4.0 ?x498) ?x571)) (= ?x375 ?x571))))
 (let ((@x176 (monotonicity (rewrite (= ?x400 ?x83)) (rewrite (= ?x388 ?x99)) (rewrite (= ?x389 ?x535)) @x425 (rewrite (= ?x394 ?x426)) @x352 (rewrite (= ?x385 ?x431)) (rewrite (= ?x402 ?x431)) (= ?x403 ?x448))))
 (let ((@x405 (rewrite (= (* (- 8.0) (+ ?x82 ?x90 ?x115 ?x504 ?x316 ?x581 ?x602 ?x611)) ?x403))))
 (let ((?x124 (+ ?x82 ?x90 ?x115 ?x504 ?x316 ?x581 ?x602 ?x611)))
 (let ((?x401 (* ?x104 ?x112 x x x)))
 (let ((?x591 (* ?x104 ?x71 x x x)))
 (let ((?x502 (* ?x104 z00 x x x)))
 (let ((?x303 (* ?x104 x x x x)))
 (let ((?x410 (+ ?x316 ?x303 ?x504 ?x502 ?x581 ?x591 ?x611 ?x401)))
 (let ((@x122 (monotonicity (rewrite (= ?x303 ?x602)) (rewrite (= ?x502 ?x82)) (rewrite (= ?x591 ?x90)) (rewrite (= ?x401 ?x115)) (= ?x410 (+ ?x316 ?x602 ?x504 ?x82 ?x581 ?x90 ?x611 ?x115)))))
 (let ((@x381 (trans @x122 (rewrite (= (+ ?x316 ?x602 ?x504 ?x82 ?x581 ?x90 ?x611 ?x115) ?x124)) (= ?x410 ?x124))))
 (let ((@x330 (monotonicity (rewrite (= ?x338 (+ x z00 ?x71 ?x112))) (= ?x340 (* ?x107 (+ x z00 ?x71 ?x112) x x x)))))
 (let ((@x585 (trans @x330 (rewrite (= (* ?x107 (+ x z00 ?x71 ?x112) x x x) ?x410)) (= ?x340 ?x410))))
 (let ((@x398 (monotonicity (trans @x585 @x381 (= ?x340 ?x124)) (= ?x501 (* (- 8.0) ?x124)))))
 (let ((@x465 (trans (trans @x398 @x405 (= ?x501 ?x403)) (trans @x176 (rewrite (= ?x448 ?x185)) (= ?x403 ?x185)) (= ?x501 ?x185))))
 (let ((@x125 (monotonicity @x465 @x560 (trans @x377 (rewrite (= ?x371 ?x424)) (= ?x319 ?x424)) (= ?x323 ?x379))))
 (let ((?x249 (+ (* (- 1.0) x) ?x111)))
 (let ((?x290 (+ (* 2.0 (* (- (/ 1.0 2.0)) x)) (* 2.0 (* (/ 1.0 2.0) ?x111)))))
 (let ((?x275 (* (/ 1.0 2.0) ?x111)))
 (let ((?x274 (* (- (/ 1.0 2.0)) x)))
 (let ((?x241 (+ ?x274 ?x275)))
 (let ((?x256 (+ ?x274 (* ?x104 x))))
 (let ((@x235 (trans (rewrite (= ?x109 ?x256)) (rewrite (= ?x256 ?x241)) (= ?x109 ?x241))))
 (let ((@x254 (trans (monotonicity @x235 (= ?x110 (* 2.0 ?x241))) (rewrite (= (* 2.0 ?x241) ?x290)) (= ?x110 ?x290))))
 (let ((@x331 (monotonicity (trans @x254 (rewrite (= ?x290 ?x249)) (= ?x110 ?x249)) (= ?x229 (+ ?x249 ?x112 x)))))
 (let ((@x147 (monotonicity (trans @x331 (rewrite (= (+ ?x249 ?x112 x) 0.0)) (= ?x229 0.0)) (trans @x125 (rewrite (= ?x379 ?x135)) (= ?x323 ?x135)) (= ?x295 ?x145))))
 (let ((@x471 (monotonicity (trans @x147 (rewrite (= ?x145 0.0)) $x297) (= $x297 (= 0.0 0.0)))))
 (let ((@x466 (monotonicity (trans @x471 (rewrite (= (= 0.0 0.0) true)) (= $x297 true)) (= $x226 (not true)))))
 (trans @x466 (rewrite (= (not true) false)) (= $x226 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x477 (trans (quant-intro (proof-bind ?x461) (= $x227 $x462)) (elim-unused (= $x462 false)) (= $x227 false))))
 (let (($x287 (exists ((x Real) (y Real) (z Real) )(! (let ((?x91 (* (- 1.0) z00)))
 (let ((?x77 (* y x)))
 (let ((?x71 (* x00 y00)))
 (let ((?x72 (* (- 1.0) ?x71)))
 (let ((?x240 (+ ?x72 ?x77 z ?x91)))
 (let ((?x361 (* (- (/ 1.0 2.0)) (* y y y x x))))
 (let ((?x217 (* (- 4.0) (* z y x x x))))
 (let (($x300 (not (= (* (+ ?x217 ?x361 (* (- 2.0) (* y x x))) ?x240) 0.0))))
 (let ((?x288 (+ ?x72 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x91)))
 (let ((?x113 (* (/ 1.0 2.0) y)))
 (let ((?x272 (+ (- (/ 1.0 2.0)) ?x113)))
 (let ((?x526 (+ (* (- 8.0) (* (+ z x) ?x272 x x x)) (* (- 4.0) (* ?x272 ?x272 ?x272 x x)) (* (- 4.0) (* ?x272 x x)))))
 (and (= ?x240 0.0) (or (not (= (* ?x526 ?x288) 0.0)) $x300)))))))))))))) :qid k!28))
 ))
 (let (($x63 (exists ((x Real) (y Real) (z Real) )(! (let ((?x49 (/ y 2.0)))
 (let ((?x56 (- (* (- 1.0) 2.0 x 2.0 x 2.0 x ?x49 z) (* 2.0 x 2.0 x ?x49 ?x49 ?x49))))
 (let ((?x58 (* (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x49) z) z00) (- ?x56 (* 2.0 x 2.0 x ?x49)))))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x40 (+ z x)))
 (let ((?x24 (- 1.0)))
 (let ((?x44 (- (* ?x24 2.0 x 2.0 x 2.0 x ?x36 ?x40) (* 2.0 x 2.0 x ?x36 ?x36 ?x36))))
 (let ((?x46 (* (- (+ (* ?x24 x00 y00) (* 2.0 x ?x36) z x) z00) (- ?x44 (* 2.0 x 2.0 x ?x36)))))
 (and (= (- (+ (* ?x24 x00 y00) (* x y) z) z00) 0.0) (or (not (= ?x46 0.0)) (not (= ?x58 0.0)))))))))))) :qid k!28))
 ))
 (let ((?x276 (lambda ((x Real) (y Real) (z Real) )(let ((?x91 (* (- 1.0) z00)))
 (let ((?x77 (* y x)))
 (let ((?x71 (* x00 y00)))
 (let ((?x72 (* (- 1.0) ?x71)))
 (let ((?x240 (+ ?x72 ?x77 z ?x91)))
 (let ((?x361 (* (- (/ 1.0 2.0)) (* y y y x x))))
 (let ((?x217 (* (- 4.0) (* z y x x x))))
 (let (($x300 (not (= (* (+ ?x217 ?x361 (* (- 2.0) (* y x x))) ?x240) 0.0))))
 (let ((?x288 (+ ?x72 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x91)))
 (let ((?x113 (* (/ 1.0 2.0) y)))
 (let ((?x272 (+ (- (/ 1.0 2.0)) ?x113)))
 (let ((?x526 (+ (* (- 8.0) (* (+ z x) ?x272 x x x)) (* (- 4.0) (* ?x272 ?x272 ?x272 x x)) (* (- 4.0) (* ?x272 x x)))))
 (let (($x286 (and (= ?x240 0.0) (or (not (= (* ?x526 ?x288) 0.0)) $x300))))
 (let ((?x49 (/ y 2.0)))
 (let ((?x56 (- (* (- 1.0) 2.0 x 2.0 x 2.0 x ?x49 z) (* 2.0 x 2.0 x ?x49 ?x49 ?x49))))
 (let ((?x58 (* (- (+ (* (- 1.0) x00 y00) (* 2.0 x ?x49) z) z00) (- ?x56 (* 2.0 x 2.0 x ?x49)))))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x40 (+ z x)))
 (let ((?x24 (- 1.0)))
 (let ((?x44 (- (* ?x24 2.0 x 2.0 x 2.0 x ?x36 ?x40) (* 2.0 x 2.0 x ?x36 ?x36 ?x36))))
 (let ((?x46 (* (- (+ (* ?x24 x00 y00) (* 2.0 x ?x36) z x) z00) (- ?x44 (* 2.0 x 2.0 x ?x36)))))
 (let (($x62 (and (= (- (+ (* ?x24 x00 y00) (* x y) z) z00) 0.0) (or (not (= ?x46 0.0)) (not (= ?x58 0.0))))))
 (rewrite (= $x62 $x286)))))))))))))))))))))))))
 ))
 (let ((@x64 (asserted $x63)))
 (let ((@x120 (mp (mp @x64 (quant-intro (proof-bind ?x276) (= $x63 $x287)) $x287) (rewrite (= $x287 $x227)) $x227)))
 (mp @x120 @x477 false))))))))))))

(:max-memory   17.61
 :memory       17.33
 :num-allocs   55844
 :num-checks   1
 :rlimit-count 1169
 :time         0.00
 :total-time   0.01)
