unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1257 (* (- 3) n!0)))
 (let ((?x3363 (* (- 3) (* n!0 n!0))))
 (let ((?x1394 (+ k!2 ?x3363 ?x1257)))
 (let (($x1339 (<= ?x1394 1)))
 (let (($x92 (= ?x1394 1)))
 (let ((?x4238 (+ c!3 k!2)))
 (let ((?x4236 (+ k!2 m!1)))
 (let ((?x4181 (+ 6 m!1)))
 (let ((?x4749 (* ?x4181 ?x4181 ?x4236 ?x4236 ?x4236 ?x4238)))
 (let ((?x4433 (+ (* 972 (* c!3 k!2 n!0 m!1 m!1)) (* 972 (* k!2 k!2 n!0 m!1 m!1)) (* 3 (* k!2 n!0 n!0 m!1 m!1 m!1 m!1 m!1)) (* 36 (* c!3 c!3 c!3 k!2 n!0 n!0 m!1)) (* 3 (* c!3 c!3 c!3 k!2 n!0 n!0 m!1 m!1)) (* (- 1) (* c!3 m!1 m!1 m!1 m!1 m!1 m!1)) (* (- 36) (* k!2 m!1 m!1 m!1 m!1)) (* 36 (* k!2 n!0 n!0 m!1 m!1 m!1 m!1)) (* (- 24) (* k!2 k!2 k!2 k!2 k!2 m!1)) (* (- 72) (* k!2 k!2 k!2 k!2 k!2)) (* 9 (* k!2 k!2 n!0 n!0 m!1 m!1 m!1 m!1)) (* 108 (* k!2 n!0 n!0 m!1 m!1 m!1)) (* (- 216) (* k!2 k!2 k!2 k!2 m!1)) (* 1296 (* c!3 k!2 k!2 k!2 n!0)) (* 108 (* c!3 c!3 k!2 n!0 n!0 m!1 m!1)) (* 648 (* k!2 k!2 k!2 k!2 n!0)) (* (- 120) (* c!3 k!2 k!2 k!2 m!1 m!1)) (* 1296 (* k!2 k!2 k!2 n!0 m!1)) (* 324 (* k!2 k!2 n!0 n!0 m!1 m!1)) (* 108 (* c!3 c!3 c!3 n!0 n!0 m!1)) (* (- 1) (* k!2 m!1 m!1 m!1 m!1 m!1 m!1)) (* (- 108) (* c!3 c!3 k!2 k!2 k!2)) (* 36 (* c!3 c!3 c!3 n!0 n!0 m!1 m!1)) (* 3 (* c!3 c!3 c!3 n!0 n!0 m!1 m!1 m!1)) (* (- 108) (* c!3 c!3 k!2 m!1 m!1)) (* 9 (* c!3 c!3 k!2 n!0 n!0 m!1 m!1 m!1)) (* 432 (* c!3 k!2 k!2 k!2 n!0 n!0)) (* 12 (* c!3 k!2 k!2 k!2 n!0 n!0 m!1 m!1)) (* 144 (* c!3 k!2 k!2 k!2 n!0 n!0 m!1)) (* (- 12) (* c!3 c!3 c!3 k!2 k!2 m!1)) (* (- 1) (* c!3 c!3 c!3 m!1 m!1 m!1 m!1)) (* 108 (* c!3 c!3 c!3 k!2 n!0 n!0)) (* 27 (* c!3 c!3 k!2 k!2 n!0 m!1 m!1)) (* (- 216) (* c!3 c!3 k!2 k!2 m!1)) (* (- 72) (* c!3 c!3 k!2 k!2 m!1 m!1)) (* (- 6) (* c!3 c!3 k!2 k!2 m!1 m!1 m!1)) (* 9 (* c!3 c!3 c!3 k!2 n!0 m!1 m!1)) (* 9 (* c!3 c!3 c!3 n!0 m!1 m!1 m!1)) (* 1944 (* c!3 k!2 k!2 n!0 m!1)) (* 27 (* c!3 c!3 k!2 n!0 m!1 m!1 m!1)) (* 324 (* k!2 n!0 m!1 m!1 m!1)) (* 432 (* c!3 k!2 k!2 k!2 n!0 m!1)) (* 216 (* k!2 k!2 k!2 k!2 n!0 m!1)) (* 648 (* c!3 k!2 k!2 n!0 m!1 m!1)) (* 108 (* c!3 c!3 k!2 k!2 n!0 n!0 m!1)) (* 432 (* k!2 k!2 k!2 n!0 m!1 m!1)) (* 324 (* c!3 k!2 n!0 m!1 m!1 m!1)) (* 324 (* k!2 k!2 n!0 m!1 m!1 m!1)) (* 108 (* k!2 n!0 m!1 m!1 m!1 m!1)) (* 108 (* c!3 n!0 m!1 m!1 m!1 m!1)) (* 36 (* c!3 k!2 k!2 k!2 n!0 m!1 m!1)) (* 54 (* c!3 k!2 k!2 n!0 m!1 m!1 m!1)) (* 18 (* k!2 k!2 k!2 k!2 n!0 m!1 m!1)) (* 36 (* k!2 k!2 k!2 n!0 m!1 m!1 m!1)) (* 27 (* c!3 k!2 n!0 m!1 m!1 m!1 m!1)) (* 27 (* k!2 k!2 n!0 m!1 m!1 m!1 m!1)) (* 9 (* c!3 n!0 m!1 m!1 m!1 m!1 m!1)) (* 324 (* c!3 c!3 k!2 n!0 n!0 m!1)) (* (- 72) (* c!3 c!3 c!3 k!2 m!1)) (* 9 (* k!2 n!0 m!1 m!1 m!1 m!1 m!1)) (* 324 (* c!3 c!3 c!3 n!0 m!1)) (* 972 (* c!3 c!3 k!2 n!0 m!1)) (* 108 (* c!3 c!3 c!3 k!2 n!0 m!1)) (* 324 (* c!3 c!3 k!2 k!2 n!0 m!1)) (* 108 (* c!3 c!3 c!3 n!0 m!1 m!1)) (* 324 (* c!3 c!3 k!2 n!0 m!1 m!1)) (* 648 (* c!3 k!2 k!2 n!0 n!0 m!1)) (* 216 (* c!3 k!2 k!2 n!0 n!0 m!1 m!1)) (* 324 (* c!3 n!0 m!1 m!1 m!1)) (* 18 (* c!3 k!2 k!2 n!0 n!0 m!1 m!1 m!1)) (* 324 (* c!3 k!2 n!0 n!0 m!1 m!1)) (* 108 (* c!3 k!2 n!0 n!0 m!1 m!1 m!1)) (* 324 (* c!3 c!3 k!2 k!2 n!0 n!0)) (* 9 (* c!3 k!2 n!0 n!0 m!1 m!1 m!1 m!1)) (* 108 (* c!3 n!0 n!0 m!1 m!1 m!1)) (* 36 (* c!3 n!0 n!0 m!1 m!1 m!1 m!1)) (* 3 (* c!3 n!0 n!0 m!1 m!1 m!1 m!1 m!1)) (* 9 (* c!3 c!3 k!2 k!2 n!0 n!0 m!1 m!1)) (* 72 (* k!2 k!2 k!2 k!2 n!0 n!0 m!1)) (* (- 36) (* c!3 c!3 k!2 m!1 m!1 m!1)) (* (- 108) (* c!3 k!2 k!2 m!1 m!1 m!1)) (* 6 (* k!2 k!2 k!2 k!2 n!0 n!0 m!1 m!1)) (* 432 (* k!2 k!2 k!2 n!0 n!0 m!1)) (* 144 (* k!2 k!2 k!2 n!0 n!0 m!1 m!1)) (* 12 (* k!2 k!2 k!2 n!0 n!0 m!1 m!1 m!1)) (* 108 (* k!2 k!2 n!0 n!0 m!1 m!1 m!1)) (* (- 10) (* c!3 k!2 k!2 k!2 m!1 m!1 m!1)) (* (- 9) (* c!3 k!2 k!2 m!1 m!1 m!1 m!1)) (* 216 (* k!2 k!2 k!2 k!2 n!0 n!0)) (* (- 12) (* k!2 m!1 m!1 m!1 m!1 m!1)) (* (- 12) (* c!3 c!3 c!3 m!1 m!1 m!1)) (* (- 36) (* c!3 c!3 c!3 m!1 m!1)) (* (- 324) (* c!3 k!2 k!2 m!1 m!1)) (* 7 (* ?x4181 ?x4181 ?x4236 ?x4238 ?x4238 ?x4238)) (* (- 48) (* c!3 k!2 k!2 k!2 k!2 m!1)) (* (- 7) (* k!2 k!2 k!2 m!1 m!1 m!1 m!1)) (* (- 4) (* k!2 k!2 m!1 m!1 m!1 m!1 m!1)) (* (- 4) (* c!3 k!2 k!2 k!2 k!2 m!1 m!1)) (* (- 36) (* c!3 c!3 k!2 k!2 k!2 m!1)) (* (- 36) (* c!3 m!1 m!1 m!1 m!1)) (* (- 3) (* c!3 c!3 k!2 k!2 k!2 m!1 m!1)) (* (- 12) (* c!3 m!1 m!1 m!1 m!1 m!1)) (* 972 (* c!3 c!3 k!2 k!2 n!0)) (* (- 3) (* c!3 c!3 k!2 m!1 m!1 m!1 m!1)) (* (- 360) (* c!3 k!2 k!2 k!2 m!1)) (* 324 (* c!3 c!3 c!3 k!2 n!0)) (* (- 84) (* k!2 k!2 k!2 m!1 m!1 m!1)) (* (- 144) (* c!3 k!2 k!2 k!2 k!2)) (* (- 1) (* c!3 c!3 c!3 k!2 k!2 m!1 m!1)) (* (- 24) (* c!3 c!3 c!3 k!2 m!1 m!1)) (* (- 2) (* c!3 c!3 c!3 k!2 m!1 m!1 m!1)) (* (- 144) (* k!2 k!2 m!1 m!1 m!1)) (* (- 36) (* c!3 c!3 c!3 k!2 k!2)) (* (- 72) (* k!2 k!2 k!2 k!2 m!1 m!1)) (* (- 48) (* k!2 k!2 m!1 m!1 m!1 m!1)) (* (- 252) (* k!2 k!2 k!2 m!1 m!1)) (* (- 144) (* c!3 k!2 m!1 m!1 m!1)) (* (- 48) (* c!3 k!2 m!1 m!1 m!1 m!1)) (* (- 4) (* c!3 k!2 m!1 m!1 m!1 m!1 m!1)) (* (- 2) (* k!2 k!2 k!2 k!2 k!2 m!1 m!1)) (* (- 6) (* k!2 k!2 k!2 k!2 m!1 m!1 m!1)) (* 7 ?x4749))))
 (let (($x4434 (= ?x4433 0)))
 (let (($x4439 (not $x4434)))
 (let ((?x1242 (* (- 2) n!0)))
 (let ((?x1897 (* (- 1) (* k!2 n!0))))
 (let ((?x3362 (* 3 c!3)))
 (let ((?x1393 (+ ?x3362 k!2 ?x1897 ?x1242)))
 (let (($x1453 (= ?x1393 1)))
 (let ((?x3346 (* (- 9) n!0)))
 (let ((?x2971 (* (- 1) (* k!2 k!2))))
 (let ((?x3100 (* 9 (* c!3 n!0))))
 (let ((?x3293 (* 5 k!2)))
 (let ((?x3341 (* 18 c!3)))
 (let ((?x1367 (+ ?x3341 ?x3293 ?x3100 ?x2971 ?x3346)))
 (let (($x1395 (= ?x1367 4)))
 (let ((?x1361 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1362 (= ?x1361 (- 6))))
 (let (($x105 (and $x1362 $x1395 $x1453 $x92 $x4439)))
 (let ((?x1214 (* c!3 c!3 c!3 m!1 m!1 m!1 m!1)))
 (let ((?x805 (* k!2 m!1 m!1 m!1 m!1 m!1 m!1)))
 (let ((?x170 (* c!3 m!1 m!1 m!1 m!1 m!1 m!1)))
 (let ((?x4004 (* c!3 c!3 c!3 k!2 k!2 m!1 m!1)))
 (let ((?x1322 (+ (* 144 (* c!3 k!2 m!1 m!1 m!1)) ?x4004 (* 2 (* k!2 k!2 k!2 k!2 k!2 m!1 m!1)) (* 6 (* k!2 k!2 k!2 k!2 m!1 m!1 m!1)) (* 7 (* k!2 k!2 k!2 m!1 m!1 m!1 m!1)) (* 4 (* k!2 k!2 m!1 m!1 m!1 m!1 m!1)) (* 252 (* k!2 k!2 k!2 m!1 m!1)) (* 84 (* k!2 k!2 k!2 m!1 m!1 m!1)) (* 4 (* c!3 k!2 m!1 m!1 m!1 m!1 m!1)) (* 24 (* k!2 k!2 k!2 k!2 k!2 m!1)) (* 216 (* k!2 k!2 k!2 k!2 m!1)) (* (- 1296) (* c!3 k!2 k!2 k!2 n!0)) (* (- 648) (* k!2 k!2 k!2 k!2 n!0)) (* (- 1944) (* c!3 k!2 k!2 m!1 n!0)) (* (- 1296) (* k!2 k!2 k!2 m!1 n!0)) (* (- 972) (* c!3 k!2 m!1 m!1 n!0)) (* 72 (* k!2 k!2 k!2 k!2 k!2)) (* (- 972) (* k!2 k!2 m!1 m!1 n!0)) (* 144 (* k!2 k!2 m!1 m!1 m!1)) (* 48 (* k!2 k!2 m!1 m!1 m!1 m!1)) (* (- 324) (* c!3 m!1 m!1 m!1 n!0)) (* (- 324) (* k!2 m!1 m!1 m!1 n!0)) (* (- 432) (* c!3 k!2 k!2 k!2 m!1 n!0)) (* (- 216) (* k!2 k!2 k!2 k!2 m!1 n!0)) (* (- 648) (* c!3 k!2 k!2 m!1 m!1 n!0)) (* (- 432) (* k!2 k!2 k!2 m!1 m!1 n!0)) (* (- 324) (* c!3 k!2 m!1 m!1 m!1 n!0)) (* (- 324) (* k!2 k!2 m!1 m!1 m!1 n!0)) (* 10 (* c!3 k!2 k!2 k!2 m!1 m!1 m!1)) (* (- 108) (* c!3 m!1 m!1 m!1 m!1 n!0)) (* (- 108) (* k!2 m!1 m!1 m!1 m!1 n!0)) (* (- 36) (* c!3 k!2 k!2 k!2 m!1 m!1 n!0)) (* (- 18) (* k!2 k!2 k!2 k!2 m!1 m!1 n!0)) (* (- 54) (* c!3 k!2 k!2 m!1 m!1 m!1 n!0)) (* (- 36) (* k!2 k!2 k!2 m!1 m!1 m!1 n!0)) (* 120 (* c!3 k!2 k!2 k!2 m!1 m!1)) (* (- 27) (* c!3 k!2 m!1 m!1 m!1 m!1 n!0)) (* (- 27) (* k!2 k!2 m!1 m!1 m!1 m!1 n!0)) (* (- 9) (* c!3 m!1 m!1 m!1 m!1 m!1 n!0)) (* (- 9) (* k!2 m!1 m!1 m!1 m!1 m!1 n!0)) (* (- 7) ?x4749) (* (- 7) (* ?x4181 ?x4181 ?x4236 ?x4238 ?x4238 ?x4238)) (* 48 (* c!3 k!2 k!2 k!2 k!2 m!1)) (* 4 (* c!3 k!2 k!2 k!2 k!2 m!1 m!1)) (* 144 (* c!3 k!2 k!2 k!2 k!2)) (* 360 (* c!3 k!2 k!2 k!2 m!1)) (* 36 (* c!3 c!3 c!3 k!2 k!2)) (* 12 (* c!3 c!3 c!3 k!2 k!2 m!1)) (* 72 (* c!3 c!3 c!3 k!2 m!1)) (* (- 324) (* c!3 c!3 c!3 k!2 n!0)) (* 72 (* k!2 k!2 k!2 k!2 m!1 m!1)) (* (- 972) (* c!3 c!3 k!2 k!2 n!0)) (* 24 (* c!3 c!3 c!3 k!2 m!1 m!1)) (* 2 (* c!3 c!3 c!3 k!2 m!1 m!1 m!1)) (* 108 (* c!3 c!3 k!2 k!2 k!2)) (* (- 324) (* c!3 c!3 c!3 m!1 n!0)) (* 36 (* c!3 c!3 k!2 k!2 k!2 m!1)) (* 3 (* c!3 c!3 k!2 k!2 k!2 m!1 m!1)) (* (- 972) (* c!3 c!3 k!2 m!1 n!0)) (* 216 (* c!3 c!3 k!2 k!2 m!1)) (* 72 (* c!3 c!3 k!2 k!2 m!1 m!1)) (* 6 (* c!3 c!3 k!2 k!2 m!1 m!1 m!1)) (* (- 108) (* c!3 c!3 c!3 k!2 m!1 n!0)) (* (- 324) (* c!3 c!3 k!2 k!2 m!1 n!0)) (* (- 108) (* c!3 c!3 c!3 m!1 m!1 n!0)) (* 108 (* c!3 k!2 k!2 m!1 m!1 m!1)) (* (- 324) (* c!3 c!3 k!2 m!1 m!1 n!0)) (* 9 (* c!3 k!2 k!2 m!1 m!1 m!1 m!1)) (* 324 (* c!3 k!2 k!2 m!1 m!1)) (* (- 9) (* c!3 c!3 c!3 k!2 m!1 m!1 n!0)) (* (- 27) (* c!3 c!3 k!2 k!2 m!1 m!1 n!0)) (* (- 9) (* c!3 c!3 c!3 m!1 m!1 m!1 n!0)) (* (- 27) (* c!3 c!3 k!2 m!1 m!1 m!1 n!0)) (* 48 (* c!3 k!2 m!1 m!1 m!1 m!1)) (* 36 (* c!3 m!1 m!1 m!1 m!1)) (* 12 (* c!3 m!1 m!1 m!1 m!1 m!1)) ?x170 (* 36 (* k!2 m!1 m!1 m!1 m!1)) (* 12 (* k!2 m!1 m!1 m!1 m!1 m!1)) ?x805 (* 36 (* c!3 c!3 c!3 m!1 m!1)) (* 12 (* c!3 c!3 c!3 m!1 m!1 m!1)) ?x1214 (* 108 (* c!3 c!3 k!2 m!1 m!1)) (* 36 (* c!3 c!3 k!2 m!1 m!1 m!1)) (* 3 (* c!3 c!3 k!2 m!1 m!1 m!1 m!1)) (* (- 216) (* k!2 k!2 k!2 k!2 n!0 n!0)) (* (- 432) (* c!3 k!2 k!2 k!2 n!0 n!0)) (* (- 144) (* c!3 k!2 k!2 k!2 m!1 n!0 n!0)) (* (- 12) (* c!3 k!2 k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 648) (* c!3 k!2 k!2 m!1 n!0 n!0)) (* (- 216) (* c!3 k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 18) (* c!3 k!2 k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 324) (* c!3 k!2 m!1 m!1 n!0 n!0)) (* (- 108) (* c!3 k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 9) (* c!3 k!2 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 108) (* c!3 m!1 m!1 m!1 n!0 n!0)) (* (- 36) (* c!3 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 3) (* c!3 m!1 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 72) (* k!2 k!2 k!2 k!2 m!1 n!0 n!0)) (* (- 6) (* k!2 k!2 k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 432) (* k!2 k!2 k!2 m!1 n!0 n!0)) (* (- 144) (* k!2 k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 12) (* k!2 k!2 k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 324) (* k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 108) (* k!2 k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 9) (* k!2 k!2 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 108) (* k!2 m!1 m!1 m!1 n!0 n!0)) (* (- 36) (* k!2 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 3) (* k!2 m!1 m!1 m!1 m!1 m!1 n!0 n!0)) (* (- 108) (* c!3 c!3 c!3 k!2 n!0 n!0)) (* (- 36) (* c!3 c!3 c!3 k!2 m!1 n!0 n!0)) (* (- 3) (* c!3 c!3 c!3 k!2 m!1 m!1 n!0 n!0)) (* (- 108) (* c!3 c!3 c!3 m!1 n!0 n!0)) (* (- 36) (* c!3 c!3 c!3 m!1 m!1 n!0 n!0)) (* (- 3) (* c!3 c!3 c!3 m!1 m!1 m!1 n!0 n!0)) (* (- 324) (* c!3 c!3 k!2 k!2 n!0 n!0)) (* (- 108) (* c!3 c!3 k!2 k!2 m!1 n!0 n!0)) (* (- 9) (* c!3 c!3 k!2 k!2 m!1 m!1 n!0 n!0)) (* (- 324) (* c!3 c!3 k!2 m!1 n!0 n!0)) (* (- 108) (* c!3 c!3 k!2 m!1 m!1 n!0 n!0)) (* (- 9) (* c!3 c!3 k!2 m!1 m!1 m!1 n!0 n!0)))))
 (let (($x1327 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x3341 ?x3293 ?x3346 ?x2971 ?x3100) 4) (= (+ ?x3362 k!2 ?x1242 ?x1897) 1) (= (+ k!2 ?x1257 ?x3363) 1) (not (= ?x1322 0)))))
 (let (($x2057 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x385 (+ 6 m)))
 (let ((?x1348 (* ?x385 ?x385 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x4943 (+ (* 144 (* c k m m m)) (* c c c k k m m) (* 2 (* k k k k k m m)) (* 6 (* k k k k m m m)) (* 7 (* k k k m m m m)) (* 4 (* k k m m m m m)) (* 252 (* k k k m m)) (* 84 (* k k k m m m)) (* 4 (* c k m m m m m)) (* 24 (* k k k k k m)) (* 216 (* k k k k m)) (* (- 1296) (* c k k k n)) (* (- 648) (* k k k k n)) (* (- 1944) (* c k k m n)) (* (- 1296) (* k k k m n)) (* (- 972) (* c k m m n)) (* 72 (* k k k k k)) (* (- 972) (* k k m m n)) (* 144 (* k k m m m)) (* 48 (* k k m m m m)) (* (- 324) (* c m m m n)) (* (- 324) (* k m m m n)) (* (- 432) (* c k k k m n)) (* (- 216) (* k k k k m n)) (* (- 648) (* c k k m m n)) (* (- 432) (* k k k m m n)) (* (- 324) (* c k m m m n)) (* (- 324) (* k k m m m n)) (* 10 (* c k k k m m m)) (* (- 108) (* c m m m m n)) (* (- 108) (* k m m m m n)) (* (- 36) (* c k k k m m n)) (* (- 18) (* k k k k m m n)) (* (- 54) (* c k k m m m n)) (* (- 36) (* k k k m m m n)) (* 120 (* c k k k m m)) (* (- 27) (* c k m m m m n)) (* (- 27) (* k k m m m m n)) (* (- 9) (* c m m m m m n)) (* (- 9) (* k m m m m m n)) (* (- 7) (* ?x385 ?x385 ?x71 ?x71 ?x71 ?x75)) (* (- 7) ?x1348) (* 48 (* c k k k k m)) (* 4 (* c k k k k m m)) (* 144 (* c k k k k)) (* 360 (* c k k k m)) (* 36 (* c c c k k)) (* 12 (* c c c k k m)) (* 72 (* c c c k m)) (* (- 324) (* c c c k n)) (* 72 (* k k k k m m)) (* (- 972) (* c c k k n)) (* 24 (* c c c k m m)) (* 2 (* c c c k m m m)) (* 108 (* c c k k k)) (* (- 324) (* c c c m n)) (* 36 (* c c k k k m)) (* 3 (* c c k k k m m)) (* (- 972) (* c c k m n)) (* 216 (* c c k k m)) (* 72 (* c c k k m m)) (* 6 (* c c k k m m m)) (* (- 108) (* c c c k m n)) (* (- 324) (* c c k k m n)) (* (- 108) (* c c c m m n)) (* 108 (* c k k m m m)) (* (- 324) (* c c k m m n)) (* 9 (* c k k m m m m)) (* 324 (* c k k m m)) (* (- 9) (* c c c k m m n)) (* (- 27) (* c c k k m m n)) (* (- 9) (* c c c m m m n)) (* (- 27) (* c c k m m m n)) (* 48 (* c k m m m m)) (* 36 (* c m m m m)) (* 12 (* c m m m m m)) (* c m m m m m m) (* 36 (* k m m m m)) (* 12 (* k m m m m m)) (* k m m m m m m) (* 36 (* c c c m m)) (* 12 (* c c c m m m)) (* c c c m m m m) (* 108 (* c c k m m)) (* 36 (* c c k m m m)) (* 3 (* c c k m m m m)) (* (- 216) (* k k k k n n)) (* (- 432) (* c k k k n n)) (* (- 144) (* c k k k m n n)) (* (- 12) (* c k k k m m n n)) (* (- 648) (* c k k m n n)) (* (- 216) (* c k k m m n n)) (* (- 18) (* c k k m m m n n)) (* (- 324) (* c k m m n n)) (* (- 108) (* c k m m m n n)) (* (- 9) (* c k m m m m n n)) (* (- 108) (* c m m m n n)) (* (- 36) (* c m m m m n n)) (* (- 3) (* c m m m m m n n)) (* (- 72) (* k k k k m n n)) (* (- 6) (* k k k k m m n n)) (* (- 432) (* k k k m n n)) (* (- 144) (* k k k m m n n)) (* (- 12) (* k k k m m m n n)) (* (- 324) (* k k m m n n)) (* (- 108) (* k k m m m n n)) (* (- 9) (* k k m m m m n n)) (* (- 108) (* k m m m n n)) (* (- 36) (* k m m m m n n)) (* (- 3) (* k m m m m m n n)) (* (- 108) (* c c c k n n)) (* (- 36) (* c c c k m n n)) (* (- 3) (* c c c k m m n n)) (* (- 108) (* c c c m n n)) (* (- 36) (* c c c m m n n)) (* (- 3) (* c c c m m m n n)) (* (- 324) (* c c k k n n)) (* (- 108) (* c c k k m n n)) (* (- 9) (* c c k k m m n n)) (* (- 324) (* c c k m n n)) (* (- 108) (* c c k m m n n)) (* (- 9) (* c c k m m m n n)))))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 (* c n))) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 $x202 $x254 $x292 (not (= ?x4943 0))))))))))))))))) :qid k!34))
 ))
 (let (($x2077 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x2098 (* (- 1) k)))
 (let ((?x1264 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x2098 (* (- 1) m) ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x385 (+ 6 m)))
 (let ((?x1348 (* ?x385 ?x385 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x1344 (* ?x385 ?x385 ?x71 ?x71 ?x71 ?x75)))
 (let (($x950 (not (= (* (+ ?x1344 ?x1348) ?x1264) 0))))
 (let (($x480 (= (+ (* 3 (* n n)) ?x2098 ?x65) (- 1))))
 (let (($x110 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x110 $x480 $x950)))))))))))))))))) :qid k!34))
 ))
 (let ((?x1960 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x385 (+ 6 m)))
 (let ((?x1348 (* ?x385 ?x385 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x4943 (+ (* 144 (* c k m m m)) (* c c c k k m m) (* 2 (* k k k k k m m)) (* 6 (* k k k k m m m)) (* 7 (* k k k m m m m)) (* 4 (* k k m m m m m)) (* 252 (* k k k m m)) (* 84 (* k k k m m m)) (* 4 (* c k m m m m m)) (* 24 (* k k k k k m)) (* 216 (* k k k k m)) (* (- 1296) (* c k k k n)) (* (- 648) (* k k k k n)) (* (- 1944) (* c k k m n)) (* (- 1296) (* k k k m n)) (* (- 972) (* c k m m n)) (* 72 (* k k k k k)) (* (- 972) (* k k m m n)) (* 144 (* k k m m m)) (* 48 (* k k m m m m)) (* (- 324) (* c m m m n)) (* (- 324) (* k m m m n)) (* (- 432) (* c k k k m n)) (* (- 216) (* k k k k m n)) (* (- 648) (* c k k m m n)) (* (- 432) (* k k k m m n)) (* (- 324) (* c k m m m n)) (* (- 324) (* k k m m m n)) (* 10 (* c k k k m m m)) (* (- 108) (* c m m m m n)) (* (- 108) (* k m m m m n)) (* (- 36) (* c k k k m m n)) (* (- 18) (* k k k k m m n)) (* (- 54) (* c k k m m m n)) (* (- 36) (* k k k m m m n)) (* 120 (* c k k k m m)) (* (- 27) (* c k m m m m n)) (* (- 27) (* k k m m m m n)) (* (- 9) (* c m m m m m n)) (* (- 9) (* k m m m m m n)) (* (- 7) (* ?x385 ?x385 ?x71 ?x71 ?x71 ?x75)) (* (- 7) ?x1348) (* 48 (* c k k k k m)) (* 4 (* c k k k k m m)) (* 144 (* c k k k k)) (* 360 (* c k k k m)) (* 36 (* c c c k k)) (* 12 (* c c c k k m)) (* 72 (* c c c k m)) (* (- 324) (* c c c k n)) (* 72 (* k k k k m m)) (* (- 972) (* c c k k n)) (* 24 (* c c c k m m)) (* 2 (* c c c k m m m)) (* 108 (* c c k k k)) (* (- 324) (* c c c m n)) (* 36 (* c c k k k m)) (* 3 (* c c k k k m m)) (* (- 972) (* c c k m n)) (* 216 (* c c k k m)) (* 72 (* c c k k m m)) (* 6 (* c c k k m m m)) (* (- 108) (* c c c k m n)) (* (- 324) (* c c k k m n)) (* (- 108) (* c c c m m n)) (* 108 (* c k k m m m)) (* (- 324) (* c c k m m n)) (* 9 (* c k k m m m m)) (* 324 (* c k k m m)) (* (- 9) (* c c c k m m n)) (* (- 27) (* c c k k m m n)) (* (- 9) (* c c c m m m n)) (* (- 27) (* c c k m m m n)) (* 48 (* c k m m m m)) (* 36 (* c m m m m)) (* 12 (* c m m m m m)) (* c m m m m m m) (* 36 (* k m m m m)) (* 12 (* k m m m m m)) (* k m m m m m m) (* 36 (* c c c m m)) (* 12 (* c c c m m m)) (* c c c m m m m) (* 108 (* c c k m m)) (* 36 (* c c k m m m)) (* 3 (* c c k m m m m)) (* (- 216) (* k k k k n n)) (* (- 432) (* c k k k n n)) (* (- 144) (* c k k k m n n)) (* (- 12) (* c k k k m m n n)) (* (- 648) (* c k k m n n)) (* (- 216) (* c k k m m n n)) (* (- 18) (* c k k m m m n n)) (* (- 324) (* c k m m n n)) (* (- 108) (* c k m m m n n)) (* (- 9) (* c k m m m m n n)) (* (- 108) (* c m m m n n)) (* (- 36) (* c m m m m n n)) (* (- 3) (* c m m m m m n n)) (* (- 72) (* k k k k m n n)) (* (- 6) (* k k k k m m n n)) (* (- 432) (* k k k m n n)) (* (- 144) (* k k k m m n n)) (* (- 12) (* k k k m m m n n)) (* (- 324) (* k k m m n n)) (* (- 108) (* k k m m m n n)) (* (- 9) (* k k m m m m n n)) (* (- 108) (* k m m m n n)) (* (- 36) (* k m m m m n n)) (* (- 3) (* k m m m m m n n)) (* (- 108) (* c c c k n n)) (* (- 36) (* c c c k m n n)) (* (- 3) (* c c c k m m n n)) (* (- 108) (* c c c m n n)) (* (- 36) (* c c c m m n n)) (* (- 3) (* c c c m m m n n)) (* (- 324) (* c c k k n n)) (* (- 108) (* c c k k m n n)) (* (- 9) (* c c k k m m n n)) (* (- 324) (* c c k m n n)) (* (- 108) (* c c k m m n n)) (* (- 9) (* c c k m m m n n)))))
 (let (($x292 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x254 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x202 (= (+ ?x40 ?x44 ?x204 ?x205 (* 9 (* c n))) 4)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x1209 (and $x118 $x202 $x254 $x292 (not (= ?x4943 0)))))
 (let ((?x65 (* 3 n)))
 (let ((?x2098 (* (- 1) k)))
 (let ((?x1264 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x2098 (* (- 1) m) ?x65)))
 (let (($x950 (not (= (* (+ (* ?x385 ?x385 ?x71 ?x71 ?x71 ?x75) ?x1348) ?x1264) 0))))
 (let (($x480 (= (+ (* 3 (* n n)) ?x2098 ?x65) (- 1))))
 (let (($x110 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1900 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x110 $x480 $x950)))
 (rewrite (= $x1900 $x1209)))))))))))))))))))))))))
 ))
 (let (($x1088 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x2098 (* (- 1) k)))
 (let ((?x1264 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x2098 (* (- 1) m) ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x385 (+ 6 m)))
 (let ((?x1348 (* ?x385 ?x385 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x1344 (* ?x385 ?x385 ?x71 ?x71 ?x71 ?x75)))
 (let (($x950 (not (= (* (+ ?x1344 ?x1348) ?x1264) 0))))
 (let (($x480 (= (+ (* 3 (* n n)) ?x2098 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x528 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (and $x118 (= ?x528 (- 4)) (= (+ (* (- 3) c) (* n k) ?x2098 (* 2 n)) (- 1)) $x480 $x950))))))))))))))) :qid k!34))
 ))
 (let ((?x1347 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x2098 (* (- 1) k)))
 (let ((?x1264 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x2098 (* (- 1) m) ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x385 (+ 6 m)))
 (let ((?x1348 (* ?x385 ?x385 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x1344 (* ?x385 ?x385 ?x71 ?x71 ?x71 ?x75)))
 (let (($x950 (not (= (* (+ ?x1344 ?x1348) ?x1264) 0))))
 (let (($x480 (= (+ (* 3 (* n n)) ?x2098 ?x65) (- 1))))
 (let (($x110 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x205 (* (- 1) ?x49)))
 (let ((?x204 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x1900 (and $x118 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x204 ?x205) 4) $x110 $x480 $x950)))
 (let ((?x48 (* 9 n)))
 (let ((?x528 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1090 (and $x118 (= ?x528 (- 4)) (= (+ (* (- 3) c) (* n k) ?x2098 (* 2 n)) (- 1)) $x480 $x950)))
 (rewrite (= $x1090 $x1900))))))))))))))))))))))))
 ))
 (let (($x85 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x76 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x75 (+ c k)))
 (let ((?x79 (+ (* ?x75 ?x71 ?x71 ?x71 ?x76 ?x76) (* ?x75 ?x75 ?x75 ?x71 ?x76 ?x76))))
 (let ((?x74 (+ (- (+ 1 (* 3 (+ n 1) (+ n 1))) ?x71) (* 3 (+ n 1)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x74 ?x79) 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x968 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x2098 (* (- 1) k)))
 (let ((?x1264 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x2098 (* (- 1) m) ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x385 (+ 6 m)))
 (let ((?x1348 (* ?x385 ?x385 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x1344 (* ?x385 ?x385 ?x71 ?x71 ?x71 ?x75)))
 (let (($x950 (not (= (* (+ ?x1344 ?x1348) ?x1264) 0))))
 (let (($x480 (= (+ (* 3 (* n n)) ?x2098 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x528 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x118 (= (+ m (* (- 6) n)) 6)))
 (let (($x1090 (and $x118 (= ?x528 (- 4)) (= (+ (* (- 3) c) (* n k) ?x2098 (* 2 n)) (- 1)) $x480 $x950)))
 (let ((?x79 (+ (* ?x75 ?x71 ?x71 ?x71 (+ m 6) (+ m 6)) (* ?x75 ?x75 ?x75 ?x71 (+ m 6) (+ m 6)))))
 (let ((?x74 (+ (- (+ 1 (* 3 (+ n 1) (+ n 1))) ?x71) (* 3 (+ n 1)))))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x84 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not (= (* ?x74 ?x79) 0))))))
 (rewrite (= $x84 $x1090)))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x1878 (mp (mp @x86 (quant-intro (proof-bind ?x968) (= $x85 $x1088)) $x1088) (rewrite (= $x1088 $x1088)) $x1088)))
 (let ((@x3848 (mp (mp @x1878 (quant-intro (proof-bind ?x1347) (= $x1088 $x2077)) $x2077) (quant-intro (proof-bind ?x1960) (= $x2077 $x2057)) $x2057)))
 (let ((@x4440 (mp (mp~ @x3848 (sk (~ $x2057 $x1327)) $x1327) (rewrite (= $x1327 $x105)) $x105)))
 (let ((@x1454 (and-elim @x4440 $x92)))
 (let ((@x4489 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x92) $x1339)) @x1454 $x1339)))
 (let (($x1358 (>= ?x1394 1)))
 (let ((@x4498 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x92) $x1358)) @x1454 $x1358)))
 (let (($x1332 (<= ?x1367 4)))
 (let ((@x103 (and-elim @x4440 $x1395)))
 (let ((@x1115 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1395) $x1332)) @x103 $x1332)))
 (let (($x1333 (>= ?x1367 4)))
 (let ((@x1092 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1395) $x1333)) @x103 $x1333)))
 (let (($x1335 (<= ?x1393 1)))
 (let ((@x97 (and-elim @x4440 $x1453)))
 (let ((@x2151 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1453) $x1335)) @x97 $x1335)))
 (let (($x1338 (>= ?x1393 1)))
 (let ((@x1937 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1453) $x1338)) @x97 $x1338)))
 (let (($x1396 (<= ?x1361 (- 6))))
 (let ((@x4442 (and-elim @x4440 $x1362)))
 (let ((@x1938 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1362) $x1396)) @x4442 $x1396)))
 (let (($x1457 (>= ?x1361 (- 6))))
 (let ((@x4497 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1362) $x1457)) @x4442 $x1457)))
 (let (($x1733 (not (<= ?x4433 0))))
 (let (($x1364 (>= ?x4433 0)))
 (let ((@x873 ((_ th-lemma arith) (hypothesis (not $x1364)) @x4498 @x4489 @x4497 @x1938 @x4497 @x1938 @x4498 @x4489 @x4497 @x1938 @x4498 @x4489 @x1937 @x2151 @x4498 @x4489 @x1092 @x1115 @x4498 @x4489 false)))
 (let ((@x4000 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4434 $x1733 (not $x1364))) (and-elim @x4440 $x4439) (or $x1733 (not $x1364)))))
 ((_ th-lemma arith) (unit-resolution @x4000 (lemma @x873 $x1364) $x1733) @x4498 @x4489 @x4497 @x1938 @x4497 @x1938 @x4498 @x4489 @x4497 @x1938 @x4498 @x4489 @x1937 @x2151 @x4498 @x4489 @x1092 @x1115 @x4498 @x4489 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        29
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             1307
 :arith-nonlinear-bounds    30
 :arith-nonlinear-horner    16
 :arith-num-rows            8
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 181
 :arith-tableau-max-rows    8
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.29
 :memory                    3.54
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                2148433
 :num-checks                1
 :propagations              11
 :rlimit-count              23485
 :time                      0.02
 :total-time                0.03)
