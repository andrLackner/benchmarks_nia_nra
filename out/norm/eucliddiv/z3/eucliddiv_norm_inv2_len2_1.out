unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun q!2 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x71 (* y00 q00)))
 (let ((?x585 (+ r00 ?x71 (* (- 1) (* y00 q!2)) (* (- 1) r!1))))
 (let (($x572 (<= ?x585 0)))
 (let (($x384 (= ?x585 0)))
 (let ((?x888 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x434 (* y00 y00 y00 y00 y00 r00)))
 (let ((?x865 (+ (* y00 y00 y00 r!1) (* (- 2) (* y00 y00 y00 y00 q00 q!2)) (* (- 2) (* y00 y00 r!1 r!1)) (* 2 (* y00 y00 y00 q00 r!1)) (* (- 1) (* y00 y00 y00 y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 y00 r00)) (* (- 2) (* y00 y00 y00 r!1 q!2 q!2 q!2)) (* 4 (* y00 y00 r00 r!1 q!2)) (* (- 1) (* y00 y00 q00 r!1 r!1 q!2 q!2)) (* y00 r!1 r!1 r!1) (* y00 y00 y00 r!1 r!1 r!1 q!2 q!2) (* (- 2) (* y00 r00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 q00 r!1 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 q00 r!1)) (* (- 3) (* y00 y00 r!1 r!1 q!2)) ?x434 (* 2 (* y00 y00 r00 r!1 q!2 q!2)) (* (- 1) (* y00 y00 r00 r!1 r!1 r!1 q!2)) (* 3 (* y00 y00 y00 r00 r!1 r!1)) (* y00 y00 r!1 r!1 r!1 r!1 q!2) (* (- 1) (* y00 y00 y00 y00 y00 r!1)) (* 2 (* y00 y00 y00 y00 y00 r!1 q!2)) (* y00 y00 y00 y00 y00 y00 q00 q!2) (* (- 1) (* y00 r00 r!1 r!1)) (* (- 1) (* y00 r00 r!1 r!1 q!2 q!2)) (* 2 (* y00 y00 r00 r!1)) (* (- 1) (* y00 y00 q00 r!1 r!1)) (* (- 2) (* y00 y00 y00 r00 q!2)) (* (- 1) (* y00 y00 y00 r00 q!2 q!2)) (* (- 1) (* y00 y00 r00 r!1 r!1 r!1)) (* (- 3) (* y00 y00 y00 y00 r00 r!1)) (* (- 3) (* y00 y00 y00 y00 r00 r!1 q!2)) (* 3 (* y00 y00 y00 r00 r!1 r!1 q!2)) (* y00 y00 y00 y00 y00 r00 q!2) (* y00 y00 r!1 r!1 r!1 r!1) (* (- 3) (* y00 y00 y00 r!1 r!1 r!1)) (* (- 2) (* y00 y00 y00 r!1 r!1 r!1 q!2)) (* 3 (* y00 y00 y00 y00 r!1 r!1)) (* (- 2) (* y00 y00 q00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 y00 q!2)) (* (- 1) (* y00 y00 y00 q00 r!1 r!1 r!1)) (* 3 (* y00 y00 y00 y00 q00 r!1 r!1)) (* 3 (* y00 y00 y00 y00 q00 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 q00 r!1 q!2)) (* 2 (* y00 r!1 r!1 r!1 q!2)) (* y00 r!1 r!1 r!1 q!2 q!2) (* (- 3) (* y00 y00 y00 r!1 q!2 q!2)) (* 3 (* y00 y00 y00 y00 y00 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 q00 q!2 q!2)) ?x888 (* 4 (* y00 y00 y00 q00 r!1 q!2)) (* 2 (* y00 y00 y00 q00 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 q00)) (* (- 3) (* y00 y00 y00 y00 r!1 r!1 q!2 q!2)) (* y00 y00 y00 y00 q!2) (* 2 (* y00 y00 y00 y00 q!2 q!2)) (* y00 y00 r!1 r!1 q!2 q!2 q!2) (* y00 y00 y00 y00 q!2 q!2 q!2))))
 (let (($x868 (= ?x865 0)))
 (let (($x872 (not $x868)))
 (let ((?x320 (+ y00 (* (- 1) y!0))))
 (let (($x555 (= ?x320 0)))
 (let (($x517 (and $x555 $x384 $x872)))
 (let ((?x1065 (* y00 y00 y00 y00 q00)))
 (let ((?x891 (* (- 1) ?x888)))
 (let ((?x437 (* (- 1) ?x434)))
 (let ((?x225 (* y00 y00 y00 r00)))
 (let ((?x741 (+ (* r!1 r!1 y00 r00) (* 2 (* q!2 r!1 r!1 y00 r00)) (* q!2 q!2 r!1 r!1 y00 r00) (* (- 2) (* r!1 y00 y00 r00)) (* (- 4) (* q!2 r!1 y00 y00 r00)) (* (- 2) (* q!2 q!2 r!1 y00 y00 r00)) (* r!1 r!1 y00 y00 q00) ?x225 (* 2 (* q!2 y00 y00 y00 r00)) (* q!2 q!2 y00 y00 y00 r00) (* r!1 r!1 r!1 y00 y00 r00) (* q!2 r!1 r!1 r!1 y00 y00 r00) (* (- 3) (* r!1 r!1 y00 y00 y00 r00)) (* (- 3) (* q!2 r!1 r!1 y00 y00 y00 r00)) (* 3 (* r!1 y00 y00 y00 y00 r00)) (* 3 (* q!2 r!1 y00 y00 y00 y00 r00)) (* q!2 q!2 r!1 r!1 y00 y00 q00) ?x437 (* (- 1) (* q!2 y00 y00 y00 y00 y00 r00)) (* (- 1) (* r!1 r!1 r!1 r!1 y00 y00)) (* (- 1) (* q!2 r!1 r!1 r!1 r!1 y00 y00)) (* 3 (* r!1 r!1 r!1 y00 y00 y00)) (* 2 (* q!2 r!1 r!1 r!1 y00 y00 y00)) (* (- 3) (* r!1 r!1 y00 y00 y00 y00)) (* 2 (* q!2 r!1 r!1 y00 y00 q00)) (* r!1 y00 y00 y00 y00 y00) (* (- 2) (* q!2 r!1 y00 y00 y00 y00 y00)) (* q!2 y00 y00 y00 y00 y00 y00) (* r!1 r!1 r!1 y00 y00 y00 q00) (* q!2 r!1 r!1 r!1 y00 y00 y00 q00) (* (- 3) (* r!1 r!1 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 r!1 r!1 y00 y00 y00 y00 q00)) (* 3 (* r!1 y00 y00 y00 y00 y00 q00)) (* 3 (* q!2 r!1 y00 y00 y00 y00 y00 q00)) ?x891 (* (- 1) (* q!2 y00 y00 y00 y00 y00 y00 q00)) (* (- 1) (* r!1 r!1 r!1 y00)) (* (- 2) (* q!2 r!1 r!1 r!1 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00)) (* 2 (* q!2 y00 y00 y00 y00 q00)) (* 2 (* r!1 r!1 y00 y00)) (* (- 4) (* q!2 r!1 y00 y00 y00 q00)) (* 3 (* q!2 r!1 r!1 y00 y00)) (* (- 2) (* q!2 q!2 r!1 y00 y00 y00 q00)) (* (- 2) (* r!1 y00 y00 y00 q00)) (* (- 1) (* r!1 y00 y00 y00)) ?x1065 (* 3 (* q!2 q!2 r!1 y00 y00 y00)) (* q!2 q!2 y00 y00 y00 y00 q00) (* (- 1) (* q!2 y00 y00 y00 y00)) (* (- 2) (* q!2 q!2 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 y00 y00)) (* 2 (* q!2 q!2 q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 r!1 y00 y00 y00 y00 y00)) (* q!2 q!2 y00 y00 y00 y00 y00 y00))))
 (let (($x739 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x71)) 0) (not (= ?x741 0)))))
 (let (($x1282 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1460 (* q q y00 y00 y00 y00 y00 y00)))
 (let ((?x1515 (* (- 3) (* q q r y00 y00 y00 y00 y00))))
 (let ((?x1514 (* 3 (* q q r r y00 y00 y00 y00))))
 (let ((?x1513 (* (- 1) (* q q r r r y00 y00 y00))))
 (let ((?x1512 (* (- 1) (* q q q y00 y00 y00 y00))))
 (let ((?x1511 (* 2 (* q q q r y00 y00 y00))))
 (let ((?x1510 (* (- 1) (* q q q r r y00 y00))))
 (let ((?x1509 (* (- 2) (* q q y00 y00 y00 y00))))
 (let ((?x1129 (* (- 1) (* q y00 y00 y00 y00))))
 (let ((?x1148 (* 3 (* q q r y00 y00 y00))))
 (let ((?x1065 (* y00 y00 y00 y00 q00)))
 (let ((?x1202 (* (- 1) (* r y00 y00 y00))))
 (let ((?x1283 (* 3 (* q r r y00 y00))))
 (let ((?x1508 (* 2 (* r r y00 y00))))
 (let ((?x1507 (* (- 1) (* q q r r r y00))))
 (let ((?x1506 (* (- 2) (* q r r r y00))))
 (let ((?x1505 (* (- 1) (* r r r y00))))
 (let ((?x901 (* (- 1) (* q y00 y00 y00 y00 y00 y00 q00))))
 (let ((?x888 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x891 (* (- 1) ?x888)))
 (let ((?x910 (* 3 (* q r y00 y00 y00 y00 y00 q00))))
 (let ((?x909 (* 3 (* r y00 y00 y00 y00 y00 q00))))
 (let ((?x908 (* (- 3) (* q r r y00 y00 y00 y00 q00))))
 (let ((?x907 (* (- 3) (* r r y00 y00 y00 y00 q00))))
 (let ((?x785 (* q r r r y00 y00 y00 q00)))
 (let ((?x782 (* r r r y00 y00 y00 q00)))
 (let ((?x730 (* q y00 y00 y00 y00 y00 y00)))
 (let ((?x1504 (* (- 2) (* q r y00 y00 y00 y00 y00))))
 (let ((?x639 (* r y00 y00 y00 y00 y00)))
 (let ((?x1468 (* (- 3) (* r r y00 y00 y00 y00))))
 (let ((?x1467 (* 2 (* q r r r y00 y00 y00))))
 (let ((?x1503 (* 3 (* r r r y00 y00 y00))))
 (let ((?x1502 (* (- 1) (* q r r r r y00 y00))))
 (let ((?x1501 (* (- 1) (* r r r r y00 y00))))
 (let ((?x447 (* (- 1) (* q y00 y00 y00 y00 y00 r00))))
 (let ((?x434 (* y00 y00 y00 y00 y00 r00)))
 (let ((?x437 (* (- 1) ?x434)))
 (let ((?x458 (* 3 (* q r y00 y00 y00 y00 r00))))
 (let ((?x457 (* 3 (* r y00 y00 y00 y00 r00))))
 (let ((?x455 (* (- 3) (* q r r y00 y00 y00 r00))))
 (let ((?x454 (* (- 3) (* r r y00 y00 y00 r00))))
 (let ((?x337 (* q r r r y00 y00 r00)))
 (let ((?x334 (* r r r y00 y00 r00)))
 (let ((?x245 (* q q y00 y00 y00 r00)))
 (let ((?x260 (* 2 (* q y00 y00 y00 r00))))
 (let ((?x225 (* y00 y00 y00 r00)))
 (let ((?x259 (* (- 2) (* q q r y00 y00 r00))))
 (let ((?x258 (* (- 4) (* q r y00 y00 r00))))
 (let ((?x256 (* (- 2) (* r y00 y00 r00))))
 (let ((?x163 (* q q r r y00 r00)))
 (let ((?x254 (* 2 (* q r r y00 r00))))
 (let ((?x153 (* r r y00 r00)))
 (let ((?x1976 (+ ?x153 ?x254 ?x163 ?x256 ?x258 ?x259 (* r r y00 y00 q00) ?x225 ?x260 ?x245 ?x334 ?x337 ?x454 ?x455 ?x457 ?x458 (* q q r r y00 y00 q00) ?x437 ?x447 ?x1501 ?x1502 ?x1503 ?x1467 ?x1468 (* 2 (* q r r y00 y00 q00)) ?x639 ?x1504 ?x730 ?x782 ?x785 ?x907 ?x908 ?x909 ?x910 ?x891 ?x901 ?x1505 ?x1506 ?x1507 (* 2 (* q y00 y00 y00 y00 q00)) ?x1508 (* (- 4) (* q r y00 y00 y00 q00)) ?x1283 (* (- 2) (* q q r y00 y00 y00 q00)) (* (- 2) (* r y00 y00 y00 q00)) ?x1202 ?x1065 ?x1148 (* q q y00 y00 y00 y00 q00) ?x1129 ?x1509 ?x1510 ?x1511 ?x1512 ?x1513 ?x1514 ?x1515 ?x1460)))
 (let (($x100 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x77 (= (+ y (* (- 1) y00)) 0)))
 (and $x77 $x100 (not (= ?x1976 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x1209 (exists ((q Int) (r Int) (y Int) )(! (let ((?x66 (* (- 1) y00)))
 (let ((?x109 (+ r ?x66)))
 (let ((?x102 (+ 1 q)))
 (let ((?x1015 (* y00 y00 y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x695 (* q00 y00 y00 y00 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x680 (* r00 y00 y00 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x559 (* r00 y00 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x631 (* q00 y00 y00 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x1429 (+ ?x631 ?x559 ?x680 (* (- 1) (* y00 y00 ?x102 ?x109 ?x109 ?x109 ?x109)) ?x695 (* (- 1) (* y00 ?x102 ?x102 ?x109 ?x109 ?x109)) (* (- 1) (* y00 y00 ?x102 ?x102 ?x102 ?x109 ?x109)) (* (- 1) ?x1015))))
 (let (($x556 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x556 (not (= ?x1429 0))))))))))))) :qid k!29))
 ))
 (let ((?x1294 (lambda ((q Int) (r Int) (y Int) )(let ((?x1460 (* q q y00 y00 y00 y00 y00 y00)))
 (let ((?x1515 (* (- 3) (* q q r y00 y00 y00 y00 y00))))
 (let ((?x1514 (* 3 (* q q r r y00 y00 y00 y00))))
 (let ((?x1513 (* (- 1) (* q q r r r y00 y00 y00))))
 (let ((?x1512 (* (- 1) (* q q q y00 y00 y00 y00))))
 (let ((?x1511 (* 2 (* q q q r y00 y00 y00))))
 (let ((?x1510 (* (- 1) (* q q q r r y00 y00))))
 (let ((?x1509 (* (- 2) (* q q y00 y00 y00 y00))))
 (let ((?x1129 (* (- 1) (* q y00 y00 y00 y00))))
 (let ((?x1148 (* 3 (* q q r y00 y00 y00))))
 (let ((?x1065 (* y00 y00 y00 y00 q00)))
 (let ((?x1202 (* (- 1) (* r y00 y00 y00))))
 (let ((?x1283 (* 3 (* q r r y00 y00))))
 (let ((?x1508 (* 2 (* r r y00 y00))))
 (let ((?x1507 (* (- 1) (* q q r r r y00))))
 (let ((?x1506 (* (- 2) (* q r r r y00))))
 (let ((?x1505 (* (- 1) (* r r r y00))))
 (let ((?x901 (* (- 1) (* q y00 y00 y00 y00 y00 y00 q00))))
 (let ((?x888 (* y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x891 (* (- 1) ?x888)))
 (let ((?x910 (* 3 (* q r y00 y00 y00 y00 y00 q00))))
 (let ((?x909 (* 3 (* r y00 y00 y00 y00 y00 q00))))
 (let ((?x908 (* (- 3) (* q r r y00 y00 y00 y00 q00))))
 (let ((?x907 (* (- 3) (* r r y00 y00 y00 y00 q00))))
 (let ((?x785 (* q r r r y00 y00 y00 q00)))
 (let ((?x782 (* r r r y00 y00 y00 q00)))
 (let ((?x730 (* q y00 y00 y00 y00 y00 y00)))
 (let ((?x1504 (* (- 2) (* q r y00 y00 y00 y00 y00))))
 (let ((?x639 (* r y00 y00 y00 y00 y00)))
 (let ((?x1468 (* (- 3) (* r r y00 y00 y00 y00))))
 (let ((?x1467 (* 2 (* q r r r y00 y00 y00))))
 (let ((?x1503 (* 3 (* r r r y00 y00 y00))))
 (let ((?x1502 (* (- 1) (* q r r r r y00 y00))))
 (let ((?x1501 (* (- 1) (* r r r r y00 y00))))
 (let ((?x447 (* (- 1) (* q y00 y00 y00 y00 y00 r00))))
 (let ((?x434 (* y00 y00 y00 y00 y00 r00)))
 (let ((?x437 (* (- 1) ?x434)))
 (let ((?x458 (* 3 (* q r y00 y00 y00 y00 r00))))
 (let ((?x457 (* 3 (* r y00 y00 y00 y00 r00))))
 (let ((?x455 (* (- 3) (* q r r y00 y00 y00 r00))))
 (let ((?x454 (* (- 3) (* r r y00 y00 y00 r00))))
 (let ((?x337 (* q r r r y00 y00 r00)))
 (let ((?x334 (* r r r y00 y00 r00)))
 (let ((?x245 (* q q y00 y00 y00 r00)))
 (let ((?x260 (* 2 (* q y00 y00 y00 r00))))
 (let ((?x225 (* y00 y00 y00 r00)))
 (let ((?x259 (* (- 2) (* q q r y00 y00 r00))))
 (let ((?x258 (* (- 4) (* q r y00 y00 r00))))
 (let ((?x256 (* (- 2) (* r y00 y00 r00))))
 (let ((?x163 (* q q r r y00 r00)))
 (let ((?x254 (* 2 (* q r r y00 r00))))
 (let ((?x153 (* r r y00 r00)))
 (let ((?x1976 (+ ?x153 ?x254 ?x163 ?x256 ?x258 ?x259 (* r r y00 y00 q00) ?x225 ?x260 ?x245 ?x334 ?x337 ?x454 ?x455 ?x457 ?x458 (* q q r r y00 y00 q00) ?x437 ?x447 ?x1501 ?x1502 ?x1503 ?x1467 ?x1468 (* 2 (* q r r y00 y00 q00)) ?x639 ?x1504 ?x730 ?x782 ?x785 ?x907 ?x908 ?x909 ?x910 ?x891 ?x901 ?x1505 ?x1506 ?x1507 (* 2 (* q y00 y00 y00 y00 q00)) ?x1508 (* (- 4) (* q r y00 y00 y00 q00)) ?x1283 (* (- 2) (* q q r y00 y00 y00 q00)) (* (- 2) (* r y00 y00 y00 q00)) ?x1202 ?x1065 ?x1148 (* q q y00 y00 y00 y00 q00) ?x1129 ?x1509 ?x1510 ?x1511 ?x1512 ?x1513 ?x1514 ?x1515 ?x1460)))
 (let (($x100 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x77 (= (+ y (* (- 1) y00)) 0)))
 (let (($x1970 (and $x77 $x100 (not (= ?x1976 0)))))
 (let ((?x66 (* (- 1) y00)))
 (let ((?x109 (+ r ?x66)))
 (let ((?x102 (+ 1 q)))
 (let ((?x1015 (* y00 y00 y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x695 (* q00 y00 y00 y00 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x680 (* r00 y00 y00 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x559 (* r00 y00 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x631 (* q00 y00 y00 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x1429 (+ ?x631 ?x559 ?x680 (* (- 1) (* y00 y00 ?x102 ?x109 ?x109 ?x109 ?x109)) ?x695 (* (- 1) (* y00 ?x102 ?x102 ?x109 ?x109 ?x109)) (* (- 1) (* y00 y00 ?x102 ?x102 ?x102 ?x109 ?x109)) (* (- 1) ?x1015))))
 (let (($x556 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1205 (and (= (+ y00 (* (- 1) y)) 0) $x556 (not (= ?x1429 0)))))
 (rewrite (= $x1205 $x1970))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x121 (exists ((q Int) (r Int) (y Int) )(! (let ((?x66 (* (- 1) y00)))
 (let ((?x109 (+ r ?x66)))
 (let ((?x102 (+ 1 q)))
 (let ((?x1015 (* y00 y00 y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x1010 (* y00 y00 ?x102 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x1000 (* y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x215 (* y00 y00 ?x102 ?x109 ?x109 ?x109 ?x109)))
 (let ((?x1026 (+ (* (- 1) (* q00 y00 y00 ?x102 ?x102 ?x109 ?x109)) (* (- 1) (* r00 y00 ?x102 ?x102 ?x109 ?x109)) (* (- 1) (* r00 y00 y00 ?x102 ?x109 ?x109 ?x109)) ?x215 (* (- 1) (* q00 y00 y00 y00 ?x102 ?x109 ?x109 ?x109)) ?x1000 ?x1010 ?x1015)))
 (let (($x556 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x66 y) 0) $x556 (not (= ?x1026 0)))))))))))) :qid k!29))
 ))
 (let ((?x107 (lambda ((q Int) (r Int) (y Int) )(let ((?x66 (* (- 1) y00)))
 (let ((?x109 (+ r ?x66)))
 (let ((?x102 (+ 1 q)))
 (let ((?x1015 (* y00 y00 y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x695 (* q00 y00 y00 y00 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x680 (* r00 y00 y00 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x559 (* r00 y00 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x631 (* q00 y00 y00 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x1429 (+ ?x631 ?x559 ?x680 (* (- 1) (* y00 y00 ?x102 ?x109 ?x109 ?x109 ?x109)) ?x695 (* (- 1) (* y00 ?x102 ?x102 ?x109 ?x109 ?x109)) (* (- 1) (* y00 y00 ?x102 ?x102 ?x102 ?x109 ?x109)) (* (- 1) ?x1015))))
 (let (($x556 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1205 (and (= (+ y00 (* (- 1) y)) 0) $x556 (not (= ?x1429 0)))))
 (let ((?x1010 (* y00 y00 ?x102 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x1000 (* y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x215 (* y00 y00 ?x102 ?x109 ?x109 ?x109 ?x109)))
 (let ((?x1026 (+ (* (- 1) ?x631) (* (- 1) ?x559) (* (- 1) ?x680) ?x215 (* (- 1) ?x695) ?x1000 ?x1010 ?x1015)))
 (let (($x549 (and (= (+ ?x66 y) 0) $x556 (not (= ?x1026 0)))))
 (rewrite (= $x549 $x1205)))))))))))))))))))
 ))
 (let (($x61 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x47 (- (* (- 1) ?x42 ?x42 q00 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 r00 y00))))
 (let ((?x50 (+ (- ?x47 (* ?x42 ?x43 ?x43 ?x43 r00 y00 y00)) (* ?x42 ?x43 ?x43 ?x43 ?x43 y00 y00))))
 (let ((?x56 (+ (- ?x50 (* ?x42 q00 ?x43 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x56 0))))))))) :qid k!29))
 ))
 (let ((?x200 (lambda ((q Int) (r Int) (y Int) )(let ((?x66 (* (- 1) y00)))
 (let ((?x109 (+ r ?x66)))
 (let ((?x102 (+ 1 q)))
 (let ((?x1015 (* y00 y00 y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x1010 (* y00 y00 ?x102 ?x102 ?x102 ?x109 ?x109)))
 (let ((?x1000 (* y00 ?x102 ?x102 ?x109 ?x109 ?x109)))
 (let ((?x215 (* y00 y00 ?x102 ?x109 ?x109 ?x109 ?x109)))
 (let ((?x1026 (+ (* (- 1) (* q00 y00 y00 ?x102 ?x102 ?x109 ?x109)) (* (- 1) (* r00 y00 ?x102 ?x102 ?x109 ?x109)) (* (- 1) (* r00 y00 y00 ?x102 ?x109 ?x109 ?x109)) ?x215 (* (- 1) (* q00 y00 y00 y00 ?x102 ?x109 ?x109 ?x109)) ?x1000 ?x1010 ?x1015)))
 (let (($x556 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x549 (and (= (+ ?x66 y) 0) $x556 (not (= ?x1026 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x47 (- (* (- 1) ?x42 ?x42 q00 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 r00 y00))))
 (let ((?x50 (+ (- ?x47 (* ?x42 ?x43 ?x43 ?x43 r00 y00 y00)) (* ?x42 ?x43 ?x43 ?x43 ?x43 y00 y00))))
 (let ((?x56 (+ (- ?x50 (* ?x42 q00 ?x43 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00 y00))))
 (let (($x60 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x56 0))))))
 (rewrite (= $x60 $x549)))))))))))))))))))
 ))
 (let ((@x62 (asserted $x61)))
 (let ((@x598 (mp (mp @x62 (quant-intro (proof-bind ?x200) (= $x61 $x121)) $x121) (rewrite (= $x121 $x121)) $x121)))
 (let ((@x897 (mp (mp @x598 (quant-intro (proof-bind ?x107) (= $x121 $x1209)) $x1209) (quant-intro (proof-bind ?x1294) (= $x1209 $x1282)) $x1282)))
 (let ((@x875 (mp (mp~ @x897 (sk (~ $x1282 $x739)) $x739) (rewrite (= $x739 $x517)) $x517)))
 (let ((@x564 (and-elim @x875 $x384)))
 (let ((@x618 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x384) $x572)) @x564 $x572)))
 (let (($x514 (>= ?x585 0)))
 (let ((@x775 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x384) $x514)) @x564 $x514)))
 (let (($x379 (<= ?x320 0)))
 (let ((@x774 (and-elim @x875 $x555)))
 (let ((@x871 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x555) $x379)) @x774 $x379)))
 (let (($x570 (>= ?x320 0)))
 (let ((@x303 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x555) $x570)) @x774 $x570)))
 (let (($x403 (not (<= ?x865 0))))
 (let (($x380 (>= ?x865 0)))
 (let ((@x298 (lemma ((_ th-lemma arith) (hypothesis (not $x380)) @x303 @x871 @x775 @x618 false) $x380)))
 (let ((@x623 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x868 $x403 (not $x380))) (and-elim @x875 $x872) (or $x403 (not $x380)))))
 ((_ th-lemma arith) (unit-resolution @x623 @x298 $x403) @x303 @x871 @x775 @x618 false)))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        16
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             508
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-tableau-max-columns 76
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.83
 :memory                    3.27
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1298760
 :num-checks                1
 :propagations              6
 :rlimit-count              7599
 :time                      0.01
 :total-time                0.02)
