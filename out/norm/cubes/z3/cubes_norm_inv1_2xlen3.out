unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x541 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x788 (<= ?x541 (- 6))))
 (let (($x1017 (= ?x541 (- 6))))
 (let ((?x304 (+ c!3 k!2)))
 (let ((?x209 (+ k!2 m!1)))
 (let ((?x974 (+ 6 m!1)))
 (let ((?x976 (+ 1 n!0)))
 (let ((?x981 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x977 (* 6 ?x981)))
 (let ((?x978 (* ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x545 (* 6 ?x978)))
 (let ((?x731 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x209 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x591 (* 6 ?x731)))
 (let ((?x704 (* ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x301 (* (- 7) ?x704)))
 (let ((?x650 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x209 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x980 (* 6 ?x650)))
 (let ((?x588 (* ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304)))
 (let ((?x710 (* (- 7) ?x588)))
 (let ((?x566 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x209 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x555 (* ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x259 (* 6 ?x555)))
 (let ((?x527 (* ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x193 (* 6 ?x527)))
 (let ((?x498 (* ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x428 (* ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x418 (* 6 ?x428)))
 (let ((?x427 (* ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x257 (* (- 1) ?x427)))
 (let ((?x419 (* ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304)))
 (let ((?x367 (* ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x449 (* (- 6) ?x367)))
 (let ((?x349 (* ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x1023 (* (- 1) ?x349)))
 (let ((?x347 (* ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x1018 (* (- 1) ?x347)))
 (let ((?x794 (* 6 (* ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304))))
 (let ((?x323 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x209 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x225 (* (- 7) ?x323)))
 (let ((?x313 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x209 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x652 (* (- 6) ?x313)))
 (let ((?x312 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304)))
 (let ((?x431 (* 6 ?x312)))
 (let ((?x288 (* ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x810 (* 6 ?x288)))
 (let ((?x260 (* ?x976 ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304)))
 (let ((?x194 (* (- 6) ?x260)))
 (let ((?x253 (* 6 (* ?x976 ?x976 ?x976 ?x976 ?x974 ?x974 ?x974 ?x209 ?x209 ?x304 ?x304 ?x304))))
 (let ((?x140 (* ?x976 ?x976 ?x974 ?x974 ?x974 ?x974 ?x974 ?x974 ?x209 ?x304 ?x304 ?x304 ?x304 ?x304)))
 (let ((?x1007 (* 6 ?x140)))
 (let ((?x296 (+ ?x1007 ?x253 ?x194 ?x810 ?x431 ?x652 ?x225 ?x794 ?x1018 ?x1023 ?x449 ?x419 ?x257 ?x418 ?x498 ?x193 ?x259 ?x566 ?x710 ?x980 ?x301 ?x591 ?x545 ?x977)))
 (let (($x920 (= ?x296 0)))
 (let (($x549 (not $x920)))
 (let (($x966 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1)))
 (let (($x406 (= (+ (* 3 c!3) (* (- 1) (* k!2 n!0)) k!2 (* (- 2) n!0)) 1)))
 (let ((?x879 (* 9 (* c!3 n!0))))
 (let ((?x713 (* (- 9) n!0)))
 (let ((?x1015 (* 5 k!2)))
 (let ((?x430 (* (- 1) (* k!2 k!2))))
 (let ((?x689 (* 18 c!3)))
 (let (($x858 (and $x1017 (= (+ ?x689 ?x430 ?x1015 ?x713 ?x879) 4) $x406 $x966 $x549)))
 (let ((?x186 (+ ?x810 ?x418 ?x419 ?x591 ?x1007 ?x498 ?x710 ?x1023 ?x301 ?x652 ?x449 ?x1018 ?x980 ?x977 ?x257 ?x225 ?x566 ?x545 ?x259 ?x431 ?x794 ?x193 ?x253 ?x194)))
 (let (($x370 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x792 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x689 ?x1015 ?x713 ?x430 ?x879) 4) $x370 $x966 (not (= ?x186 0)))))
 (let (($x221 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x732 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x730 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x611 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x484 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x299 (+ (* 6 ?x156) (* 6 ?x170) ?x235 (* 6 ?x267) (* 6 ?x311) ?x436 (* (- 7) ?x461) (* (- 1) ?x469) (* (- 7) ?x475) (* (- 6) ?x484) (* (- 6) ?x580) (* (- 1) ?x611) (* 6 ?x637) (* 6 ?x644) (* (- 1) ?x715) (* (- 7) ?x730) ?x732 (* 6 ?x742) (* 6 ?x750) (* 6 ?x914) (* 6 ?x924) (* 6 ?x927) (* 6 ?x959) (* (- 6) ?x989))))
 (let (($x329 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x291 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x242 (* (- 1) ?x49)))
 (let ((?x241 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x239 (= (+ ?x40 ?x44 ?x241 ?x242 (* 9 (* c n))) 4)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (and $x155 $x239 $x291 $x329 (not (= ?x299 0))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x374 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x611 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x732 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x730 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x484 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x818 (+ (* 6 ?x484) (* 7 ?x730) (* (- 1) ?x732) ?x611 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x522 (not (= ?x818 0))))
 (let (($x641 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x946 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x242 (* (- 1) ?x49)))
 (let ((?x241 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (and $x155 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x241 ?x242) 4) $x946 $x641 $x522))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x208 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x732 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x730 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x611 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x484 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x299 (+ (* 6 ?x156) (* 6 ?x170) ?x235 (* 6 ?x267) (* 6 ?x311) ?x436 (* (- 7) ?x461) (* (- 1) ?x469) (* (- 7) ?x475) (* (- 6) ?x484) (* (- 6) ?x580) (* (- 1) ?x611) (* 6 ?x637) (* 6 ?x644) (* (- 1) ?x715) (* (- 7) ?x730) ?x732 (* 6 ?x742) (* 6 ?x750) (* 6 ?x914) (* 6 ?x924) (* 6 ?x927) (* 6 ?x959) (* (- 6) ?x989))))
 (let (($x329 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x291 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x242 (* (- 1) ?x49)))
 (let ((?x241 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x239 (= (+ ?x40 ?x44 ?x241 ?x242 (* 9 (* c n))) 4)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (let (($x335 (and $x155 $x239 $x291 $x329 (not (= ?x299 0)))))
 (let ((?x818 (+ (* 6 ?x484) (* 7 ?x730) (* (- 1) ?x732) ?x611 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x522 (not (= ?x818 0))))
 (let (($x641 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x946 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x953 (and $x155 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x241 ?x242) 4) $x946 $x641 $x522)))
 (rewrite (= $x953 $x335)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x166 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x611 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x732 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x730 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x484 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x818 (+ (* 6 ?x484) (* 7 ?x730) (* (- 1) ?x732) ?x611 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x522 (not (= ?x818 0))))
 (let (($x641 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x643 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x691 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (and $x155 (= ?x691 (- 4)) $x643 $x641 $x522))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x571 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x611 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x732 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x730 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x484 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x818 (+ (* 6 ?x484) (* 7 ?x730) (* (- 1) ?x732) ?x611 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x522 (not (= ?x818 0))))
 (let (($x641 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x946 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x242 (* (- 1) ?x49)))
 (let ((?x241 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (let (($x953 (and $x155 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x241 ?x242) 4) $x946 $x641 $x522)))
 (let (($x643 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x691 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x798 (and $x155 (= ?x691 (- 4)) $x643 $x641 $x522)))
 (rewrite (= $x798 $x953))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x122 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x115 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x114 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x110 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x108 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x107 (* 7 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x104 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x101 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 7 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x96 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x94 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x92 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x84 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x82 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x81 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x80 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x78 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x76 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (* 7 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x72 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (- (- (- (- (+ (- (+ ?x72 ?x74) ?x76) ?x78) ?x80) ?x81) ?x82) ?x83)))
 (let ((?x102 (+ (- (- (- (+ (- (- ?x89 ?x84) ?x85) ?x92) ?x94) ?x95) ?x96) ?x100 ?x101)))
 (let ((?x117 (- (- (+ (- (+ (- (- ?x102 ?x103) ?x104) ?x107 ?x108) ?x110) ?x112) ?x114) ?x115)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x117 0)))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x728 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x337 (+ 6 m)))
 (let ((?x340 (+ 1 n)))
 (let ((?x927 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x914 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x989 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x959 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x469 (* ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x461 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x436 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x924 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x580 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x475 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x644 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x750 (* ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x637 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x715 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x742 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x156 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x235 (* ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x170 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x267 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x311 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x611 (* ?x340 ?x340 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x337 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x732 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x730 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x484 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x340 ?x337 ?x337 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x818 (+ (* 6 ?x484) (* 7 ?x730) (* (- 1) ?x732) ?x611 (* (- 6) ?x311) (* (- 6) ?x267) (* (- 6) ?x170) (* (- 1) ?x235) (* (- 6) ?x156) (* (- 6) ?x742) ?x715 (* (- 6) ?x637) (* (- 6) ?x750) (* (- 6) ?x644) (* 7 ?x475) (* 6 ?x580) (* (- 6) ?x924) (* (- 1) ?x436) (* 7 ?x461) ?x469 (* (- 6) ?x959) (* 6 ?x989) (* (- 6) ?x914) (* (- 6) ?x927))))
 (let (($x522 (not (= ?x818 0))))
 (let (($x641 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x643 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x691 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x155 (= (+ m (* (- 6) n)) 6)))
 (let (($x798 (and $x155 (= ?x691 (- 4)) $x643 $x641 $x522)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x115 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x114 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x110 (* 6 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x108 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71)))
 (let ((?x107 (* 7 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x104 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x101 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 7 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x96 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x94 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x92 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x85 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x84 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x82 (* 6 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x81 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x80 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x78 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x76 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (* 7 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x72 (* 6 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x89 (- (- (- (- (+ (- (+ ?x72 ?x74) ?x76) ?x78) ?x80) ?x81) ?x82) ?x83)))
 (let ((?x102 (+ (- (- (- (+ (- (- ?x89 ?x84) ?x85) ?x92) ?x94) ?x95) ?x96) ?x100 ?x101)))
 (let ((?x117 (- (- (+ (- (+ (- (- ?x102 ?x103) ?x104) ?x107 ?x108) ?x110) ?x112) ?x114) ?x115)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x121 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x117 0))))))
 (rewrite (= $x121 $x798)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x123 (asserted $x122)))
 (let ((@x882 (mp (mp @x123 (quant-intro (proof-bind ?x728) (= $x122 $x166)) $x166) (rewrite (= $x166 $x166)) $x166)))
 (let ((@x849 (mp (mp @x882 (quant-intro (proof-bind ?x571) (= $x166 $x374)) $x374) (quant-intro (proof-bind ?x208) (= $x374 $x221)) $x221)))
 (let ((@x268 (mp (mp~ @x849 (sk (~ $x221 $x792)) $x792) (rewrite (= $x792 $x858)) $x858)))
 (let ((@x492 (and-elim @x268 $x1017)))
 (let ((@x269 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1017) $x788)) @x492 $x788)))
 (let (($x878 (>= ?x541 (- 6))))
 (let ((@x784 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1017) $x878)) @x492 $x878)))
 (let (($x372 (not (<= ?x296 0))))
 (let (($x548 (>= ?x296 0)))
 (let ((@x455 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x920 $x372 (not $x548))) (and-elim @x268 $x549) (or $x372 (not $x548)))))
 (let ((@x712 (unit-resolution @x455 (lemma ((_ th-lemma arith) (hypothesis (not $x548)) @x784 @x269 false) $x548) $x372)))
 ((_ th-lemma arith) @x712 @x784 @x269 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        16
 :arith-assert-upper        32
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           15
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             246
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              12
 :arith-row-summations      14
 :arith-tableau-max-columns 54
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 25
 :del-clause                16
 :final-checks              8
 :max-memory                3.87
 :memory                    3.36
 :mk-bool-var               45
 :mk-clause                 16
 :num-allocs                1427308
 :num-checks                1
 :propagations              10
 :rlimit-count              7089
 :time                      0.03
 :total-time                0.04)
