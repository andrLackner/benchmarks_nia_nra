unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(declare-fun s!1 () Int)
(proof
(let ((?x5385 (* 6 x!0)))
 (let ((?x4620 (* r!2 s!1)))
 (let ((?x2682 (* 2 ?x4620)))
 (let ((?x5495 (* (- 3) s!1)))
 (let ((?x6538 (* 3 r!2)))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x522 (* s00 r00)))
 (let ((?x600 (* (- 6) ?x522)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2102 (+ ?x44 ?x596 ?x597 ?x600 ?x566 ?x6538 (* (- 12) (* r00 r00 r!2)) ?x5495 ?x2682 ?x5385 (* 4 (* s00 r!2)))))
 (let (($x4848 (<= ?x2102 0)))
 (let (($x405 (= ?x2102 0)))
 (let ((?x4938 (+ 3 (* 6 r!2) s!1)))
 (let ((?x5823 (* (- 1) s!1)))
 (let ((?x4976 (+ ?x5823 x!0)))
 (let ((?x4942 (+ 1 r!2)))
 (let ((?x6567 (* s00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)))
 (let ((?x4624 (* s!1 x!0)))
 (let ((?x4626 (* 6 ?x4624)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x901 (* s00 x00)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x764 (* s00 s00 r00)))
 (let ((?x792 (* (- 2) ?x764)))
 (let ((?x743 (* s00 r00 r00)))
 (let ((?x1096 (* 36 ?x743)))
 (let ((?x1554 (+ (* 57 s00) (* (- 72) r00) (* (- 72) x00) (* (- 108) (* r00 r00)) (* (- 24) (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* 90 (* r00 x!0)) (* 18 ?x522) (* (- 90) (* r00 x00)) (* (- 19) (* s00 s00)) (* 306 (* r!2 x!0)) (* (- 6) (* s!1 s!1)) ?x1096 (* 36 (* r00 r00 r!2 r!2 r!2 x!0)) (* 150 (* s00 r!2 r!2 r!2 r!2)) ?x792 (* (- 36) (* r00 x00 r!2 r!2 r!2 r!2)) ?x902 (* (- 24) (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) ?x986 (* (- 72) (* r00 r00 r!2 r!2 r!2 s!1)) (* (- 216) (* r00 r00 r!2 r!2 s!1)) (* (- 216) (* r00 r00 r!2 s!1)) (* (- 18) (* x00 r!2 s!1)) (* (- 972) (* r00 r00 r!2 r!2)) (* (- 450) (* r00 r!2 r!2 s!1)) (* (- 72) (* r00 r00 s!1)) (* (- 297) r!2) (* (- 378) (* r00 r!2 s!1)) (* 66 (* s00 r!2 r!2 s!1)) (* (- 756) (* r00 r00 r!2 r!2 r!2)) (* (- 69) (* s00 s00 r!2 r!2)) (* 26 (* s00 r!2 r!2 r!2 s!1)) (* 2 (* s00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 144) (* r00 r!2 r!2 r!2 r!2)) (* (- 18) (* r!2 s!1 s!1)) (* (- 24) (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 648) (* r00 r!2 r!2)) (* (- 306) (* x00 r!2)) (* 108 (* r00 r00 r!2 x!0)) (* 108 (* r00 r00 r!2 r!2 x!0)) (* (- 18) (* x00 r!2 r!2 s!1)) (* (- 15) (* s00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 144) (* r!2 r!2 r!2 r!2 r!2)) (* (- 222) (* r00 r!2 r!2 r!2 s!1)) (* 18 (* s00 r00 r!2 r!2)) (* (- 18) (* s00 r00 r!2 r!2 r!2)) (* (- 540) (* r00 r00 r!2)) (* (- 87) s!1) (* (- 216) (* r00 r00 r!2 r!2 r!2 r!2)) (* 2 (* r00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 12) (* s00 r00 r!2 r!2 r!2 r!2)) (* (- 31) (* s00 s00 r!2 r!2 r!2)) (* (- 6) (* s00 s00 r00 r!2)) (* (- 6) (* s00 s00 r00 r!2 r!2)) (* (- 108) (* r00 r00 x00 r!2 r!2)) (* (- 6) (* s00 r00 r!2 r!2 s!1)) (* (- 18) (* s00 r!2 r!2 x!0)) (* (- 342) (* x00 r!2 r!2 r!2)) (* (- 90) (* x00 r!2 r!2 r!2 r!2)) (* (- 486) (* x00 r!2 r!2)) (* (- 4) (* s00 s00 r!2 r!2 r!2 r!2)) (* (- 198) (* r00 x00 r!2 r!2 r!2)) (* 36 (* r00 r!2 r!2 r!2 r!2 x!0)) (* (- 375) ?x4620) ?x4626 (* 378 (* r00 r!2 r!2 x!0)) (* (- 36) (* r00 r!2 r!2 r!2 r!2 s!1)) (* (- 360) (* r00 r!2)) (* 198 (* r00 r!2 r!2 r!2 x!0)) (* (- 378) (* r00 x00 r!2 r!2)) (* (- 18) (* s00 r!2 x!0)) (* 18 (* s00 x00 r!2 r!2)) (* 18 (* s00 x00 r!2)) (* 6 (* s00 x00 r!2 r!2 r!2)) (* (- 6) (* x00 r!2 r!2 r!2 s!1)) (* 108 (* s00 r00 r00 r!2)) (* 36 (* s00 r00 r00 r!2 r!2 r!2)) (* (- 6) (* s00 r!2 r!2 r!2 x!0)) (* 108 (* s00 r00 r00 r!2 r!2)) (* 12 (* s00 r!2 r!2 r!2 r!2 r!2)) (* 2 (* s00 r!2 r!2 r!2 r!2 s!1)) (* 42 (* s00 r00 r!2)) (* (- 114) (* r00 s!1)) (* 306 (* r00 r!2 x!0)) (* (- 6) (* s00 x!0)) (* (- 6) (* x00 s!1)) (* (- 2) (* s00 r00 s!1)) (* (- 61) (* s00 s00 r!2)) (* 62 (* s00 r!2 s!1)) (* (- 306) (* r00 x00 r!2)) (* 36 (* r00 r00 x!0)) (* 72 x!0) (* 36 (* r00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* (- 6) (* s00 r00 r!2 s!1)) (* (- 108) (* r00 r00 x00 r!2)) (* (- 36) (* r00 r00 x00 r!2 r!2 r!2)) (* 435 (* s00 r!2 r!2 r!2)) (* 525 (* s00 r!2 r!2)) (* 285 (* s00 r!2)) (* (- 54) (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 504) (* r00 r!2 r!2 r!2)) (* 6 (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 24) (* r00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 3) (* ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938 ?x4938)) (* 90 (* r!2 r!2 r!2 r!2 x!0)) (* 342 (* r!2 r!2 r!2 x!0)) (* (- 18) (* r!2 r!2 s!1 s!1)) (* (- 6) (* r!2 r!2 r!2 s!1 s!1)) (* 3 (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 2) (* r00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 6) (* s00 x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 2) (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938 ?x4938)) (* 54 (* x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 2 (* r00 s00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 36) (* r00 r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* 54 (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* (- 54) (* x00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 36 (* r00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 54) (* r00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 54 (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* 15 (* s00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 54 (* r00 x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 765) (* r!2 r!2)) (* (- 36) (* r00 r00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 12 (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 114) (* r!2 r!2 r!2 r!2 s!1)) (* 18 (* r!2 r!2 s!1 x!0)) (* 24 (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 36) (* r00 r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 4 (* r00 ?x4942 ?x4942 ?x4942 ?x4938 ?x4938)) (* (- 36) (* r00 x00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 9) (* ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 3 (* ?x4942 ?x4942 ?x4942 ?x4938 ?x4938)) (* 24 (* r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 36 (* r00 r00 x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 4) (* s00 s00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 4 (* s00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 2 (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 2) (* r00 s00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 12) (* s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 486 (* r!2 r!2 x!0)) (* 36 (* r00 r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 6 (* s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 9 (* s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 9) (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 429) (* r!2 r!2 r!2 s!1)) (* (- 603) (* r!2 r!2 s!1)) (* (- 6) (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* 9 (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* 6 (* s00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 6 (* r!2 r!2 r!2 s!1 x!0)) (* 18 (* r!2 s!1 x!0)) (* (- 4) (* r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 36) (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 54) (* r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 24 (* r00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 4 (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 6 (* x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 2) (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 6) (* ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 2 (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4938 ?x4938)) (* 36 (* r00 r00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 36) (* r00 r00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 594) (* r!2 r!2 r!2 r!2)) (* (- 963) (* r!2 r!2 r!2)) (* 20 (* s00 s!1)) (* 36 (* r00 r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* (- 6) (* x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 2) (* s00 r00 r!2 r!2 r!2 s!1)) (* 24 ?x6567) (* (- 2) (* s00 s00 r00 r!2 r!2 r!2)))))
 (let (($x1558 (= ?x1554 45)))
 (let (($x1581 (not $x1558)))
 (let ((?x2945 (* (- 9) s!1)))
 (let ((?x1560 (* r00 r00 s!1)))
 (let ((?x1113 (* 36 ?x1560)))
 (let ((?x1442 (* x00 x00)))
 (let ((?x2865 (* 108 ?x1442)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x5822 (* 16 ?x1280)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6011 (* (- 432) ?x978)))
 (let ((?x2208 (* (- 108) ?x901)))
 (let ((?x1370 (* (- 36) ?x743)))
 (let ((?x687 (* s00 s00)))
 (let ((?x2711 (* 51 ?x687)))
 (let ((?x618 (* r00 x00)))
 (let ((?x4968 (* 108 ?x618)))
 (let ((?x137 (* 9 s00)))
 (let ((?x705 (+ ?x137 (* (- 108) (* r00 x!0)) (* (- 54) ?x522) (* 216 (* s00 r00 x00)) ?x4968 ?x2711 (* 15 (* s!1 s!1)) ?x1370 (* (- 108) ?x764) (* (- 36) (* s00 s00 r00 r00)) ?x2208 (* (- 216) (* r00 r00 r00 s!1)) ?x6011 (* 216 (* s00 r00 r00 r00)) ?x5822 ?x2865 ?x1113 (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) ?x2945 (* 432 (* r00 r00 r00 x!0)) (* 108 (* x!0 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* (- 108) ?x4624) (* 54 (* r00 s!1)) (* (- 216) (* x00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* 108 (* s00 x!0)) (* 108 (* x00 s!1)) (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)))))
 (let (($x706 (= ?x705 0)))
 (let ((?x6422 (* (- 6) ?x4624)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x4240 (* (- 6) ?x901)))
 (let ((?x5419 (* 2 ?x764)))
 (let ((?x1649 (* 15 ?x687)))
 (let ((?x782 (* 54 ?x618)))
 (let ((?x1565 (* (- 24) ?x522)))
 (let ((?x1128 (+ ?x137 (* (- 54) (* r00 x!0)) ?x1565 ?x782 ?x1649 (* (- 54) (* r!2 x!0)) (* (- 3) (* s!1 s!1)) ?x1370 ?x5419 ?x4240 ?x974 ?x1113 (* (- 2) (* r!2 s!1 s!1)) (* 54 (* x00 r!2)) ?x2945 (* 24 ?x4620) ?x6422 (* 24 (* r00 s!1)) (* (- 36) (* r00 r!2 x!0)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 24) (* s00 r!2)) (* (- 12) (* s00 s!1)))))
 (let (($x1129 (= ?x1128 0)))
 (let ((?x2383 (* 4 ?x687)))
 (let ((?x2108 (* 18 ?x618)))
 (let ((?x4815 (+ ?x44 (* (- 18) (* r00 x!0)) (* (- 9) ?x522) ?x2108 ?x2383 (* (- 18) (* r!2 x!0)) (* (- 2) (* s!1 s!1)) (* (- 6) ?x743) (* 6 ?x1560) (* (- 6) (* r00 r!2 s!1)) (* 18 (* x00 r!2)) ?x5495 (* 9 ?x4620) (* 6 (* s00 r00 r!2)) (* 9 (* r00 s!1)) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)))))
 (let (($x4816 (= ?x4815 0)))
 (let ((?x397 (* r00 r00)))
 (let ((?x4939 (* (- 3) ?x397)))
 (let ((?x5313 (+ s00 ?x4939 ?x5823 (* 3 (* r!2 r!2)))))
 (let (($x1920 (= ?x5313 0)))
 (let (($x709 (and $x1920 $x405 $x4816 $x1129 $x706 $x1581)))
 (let ((?x2237 (* 19 ?x687)))
 (let ((?x7213 (* 90 ?x618)))
 (let ((?x1856 (* (- 18) ?x522)))
 (let ((?x2336 (* 108 ?x397)))
 (let ((?x4529 (* 72 x00)))
 (let ((?x6517 (* 72 r00)))
 (let ((?x5545 (* (- 57) s00)))
 (let ((?x5317 (+ (* 297 r!2) (* 87 s!1) (* (- 72) x!0) ?x5545 ?x6517 ?x4529 (* 765 (* r!2 r!2)) ?x2336 (* 375 ?x4620) (* 540 (* r!2 r00 r00)) (* (- 285) (* r!2 s00)) ?x1856 (* (- 36) (* r00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* (- 54) (* r00 x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 24) ?x6567) (* 24 (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* 15 (* s00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) ?x7213 (* 6 (* s!1 s!1)) (* (- 306) (* r!2 x!0)) (* 378 (* r!2 s!1 r00)) (* (- 306) (* r!2 x!0 r00)) (* 72 (* s!1 r00 r00)) ?x2237 (* 6 (* x!0 s00)) (* (- 90) (* x!0 r00)) ?x1370 (* 306 (* r!2 x00)) ?x5419 (* (- 20) (* s!1 s00)) (* 114 (* s!1 r00)) (* 6 (* s!1 x00)) (* (- 42) (* r!2 s00 r00)) (* 2 (* s!1 s00 r00)) ?x4240 (* 18 (* r!2 s!1 s!1)) ?x6422 (* 61 (* r!2 s00 s00)) ?x974 (* (- 36) (* r00 r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* 6 (* x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 62) (* r!2 s!1 s00)) (* 306 (* r!2 r00 x00)) (* 6 (* r!2 s00 s00 r00)) (* 6 (* r!2 r!2 s00 s00 r00)) (* (- 36) (* x!0 r00 r00)) (* 2 (* r!2 r!2 r!2 s00 s00 r00)) (* 6 (* s00 x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 15) (* s00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 36) (* r00 r00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 36 (* r00 r00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 144 (* r!2 r!2 r!2 r!2 r!2)) (* (- 2) (* r00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 24 (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 24) (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 525) (* r!2 r!2 s00)) (* (- 435) (* r!2 r!2 r!2 s00)) (* 54 (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 18) (* r!2 r!2 s00 r00)) (* 18 (* r!2 r!2 r!2 s00 r00)) (* 4 (* r!2 r!2 r!2 r!2 s00 s00)) (* 31 (* r!2 r!2 r!2 s00 s00)) (* 12 (* r!2 r!2 r!2 r!2 s00 r00)) (* 216 (* r!2 r!2 r!2 r!2 r00 r00)) (* (- 26) (* r!2 r!2 r!2 s!1 s00)) (* (- 66) (* r!2 r!2 s!1 s00)) (* 756 (* r!2 r!2 r!2 r00 r00)) (* 69 (* r!2 r!2 s00 s00)) (* 24 (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 150) (* r!2 r!2 r!2 r!2 s00)) (* (- 36) (* r!2 r!2 r!2 x!0 r00 r00)) (* 216 (* r!2 s!1 r00 r00)) (* 216 (* r!2 r!2 s!1 r00 r00)) (* 72 (* r!2 r!2 r!2 s!1 r00 r00)) (* 9 (* ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 108) (* r!2 x!0 r00 r00)) (* (- 108) (* r!2 r!2 x!0 r00 r00)) (* (- 3) (* ?x4942 ?x4942 ?x4942 ?x4938 ?x4938)) (* 36 (* r!2 r!2 r!2 r00 r00 x00)) (* 108 (* r!2 r!2 r00 r00 x00)) (* 108 (* r!2 r00 r00 x00)) (* 6 (* r!2 s!1 s00 r00)) (* 450 (* r!2 r!2 s!1 r00)) (* 222 (* r!2 r!2 r!2 s!1 r00)) (* (- 24) (* r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 36 (* r!2 r!2 r!2 r!2 s!1 r00)) (* (- 378) (* r!2 r!2 x!0 r00)) (* (- 36) (* r00 r00 x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 198) (* r!2 r!2 r!2 x!0 r00)) (* 4 (* s00 s00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 36) (* r!2 r!2 r!2 r!2 x!0 r00)) (* (- 4) (* s00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 2) (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 54) (* x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 2 (* r00 s00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 24 (* r00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 36 (* r00 r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 2) (* r00 s00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 36 (* r00 r00 s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 3 (* ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 54) (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* 12 (* s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 90 (* r!2 r!2 r!2 r!2 x00)) (* 342 (* r!2 r!2 r!2 x00)) (* 486 (* r!2 r!2 x00)) (* (- 90) (* r!2 r!2 r!2 r!2 x!0)) (* (- 342) (* r!2 r!2 r!2 x!0)) (* (- 486) (* r!2 r!2 x!0)) (* (- 12) (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 9) (* s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* (- 36) (* r00 r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 6) (* s00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 9 (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 114 (* r!2 r!2 r!2 r!2 s!1)) (* 429 (* r!2 r!2 r!2 s!1)) (* 6 (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* 603 (* r!2 r!2 s!1)) (* 18 (* r!2 x!0 s00)) (* 378 (* r!2 r!2 r00 x00)) (* 198 (* r!2 r!2 r!2 r00 x00)) (* 18 (* r!2 r!2 x!0 s00)) (* 54 (* x00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 2) (* s00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 9) (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 6) (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938)) (* (- 6) (* r!2 r!2 r!2 s00 x00)) (* (- 18) (* r!2 r!2 s00 x00)) (* (- 18) (* r!2 s00 x00)) (* 18 (* r!2 s!1 x00)) (* 18 (* r!2 r!2 s!1 x00)) (* 6 (* r!2 r!2 r!2 s!1 x00)) (* (- 6) (* s00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 6) (* r!2 r!2 r!2 s!1 x!0)) (* (- 18) (* r!2 r!2 s!1 x!0)) (* (- 18) (* r!2 s!1 x!0)) (* 18 (* r!2 r!2 s!1 s!1)) (* 6 (* r!2 r!2 r!2 s!1 s!1)) (* 6 (* r!2 r!2 r!2 x!0 s00)) (* (- 108) (* r!2 r!2 s00 r00 r00)) (* (- 36) (* r!2 r!2 r!2 s00 r00 r00)) (* (- 36) (* r00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 4 (* r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 108) (* r!2 s00 r00 r00)) (* 54 (* r00 x00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 2) (* r!2 r!2 r!2 r!2 s!1 s00)) (* 36 (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 54 (* r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 972 (* r!2 r!2 r00 r00)) (* (- 12) (* r!2 r!2 r!2 r!2 r!2 s00)) (* 648 (* r!2 r!2 r00)) (* 360 (* r!2 r00)) (* (- 24) (* r00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* (- 4) (* r00 ?x4942 ?x4942 ?x4942 ?x4938 ?x4938)) (* (- 4) (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 2 (* r!2 r!2 r!2 s!1 s00 r00)) (* (- 3) (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 6 (* r!2 r!2 s!1 s00 r00)) (* 36 (* r00 x00 ?x4942 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938)) (* 504 (* r!2 r!2 r!2 r00)) (* 144 (* r!2 r!2 r!2 r!2 r00)) (* (- 6) (* x00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 2 (* r00 s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938)) (* 36 (* r00 r00 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938)) (* 2 (* s00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* 6 (* ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938)) (* (- 2) (* ?x4942 ?x4942 ?x4942 ?x4942 ?x4938 ?x4938)) (* (- 54) (* r00 ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4976 ?x4938)) (* 2 (* ?x4942 ?x4942 ?x4942 ?x4976 ?x4976 ?x4938 ?x4938 ?x4938 ?x4938 ?x4938)) (* 963 (* r!2 r!2 r!2)) (* 594 (* r!2 r!2 r!2 r!2)) (* 36 (* r!2 r!2 r!2 r!2 r00 x00)))))
 (let ((?x1472 (* (- 108) ?x1442)))
 (let ((?x1471 (* (- 16) ?x1280)))
 (let ((?x1152 (* s00 r00 r00 r00)))
 (let ((?x1467 (* (- 216) ?x1152)))
 (let ((?x979 (* 432 ?x978)))
 (let ((?x1225 (* 108 ?x901)))
 (let ((?x827 (* s00 s00 r00 r00)))
 (let ((?x828 (* 36 ?x827)))
 (let ((?x1108 (* 108 ?x764)))
 (let ((?x1461 (* (- 51) ?x687)))
 (let ((?x6915 (* s!1 r00 r00)))
 (let ((?x3680 (* (- 36) ?x6915)))
 (let ((?x1458 (* (- 108) ?x618)))
 (let ((?x609 (* s00 r00 x00)))
 (let ((?x1457 (* (- 216) ?x609)))
 (let ((?x616 (* 54 ?x522)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x4278 (* 9 s!1)))
 (let ((?x5179 (+ ?x4278 ?x1083 ?x616 ?x1457 ?x1458 (* (- 15) (* s!1 s!1)) ?x3680 ?x1461 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1096 ?x1108 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x828 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1225 (* 108 ?x4624) (* (- 108) (* x!0 x!0)) ?x979 (* 12 (* s!1 s!1 s00)) ?x1467 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1471 (* 216 (* x!0 x00)) ?x1472)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x660 (* 24 ?x522)))
 (let ((?x2439 (+ ?x4278 ?x1083 (* (- 24) ?x4620) (* 24 (* r!2 s00)) ?x660 ?x647 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x3680 ?x1012 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1096 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x792 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x902 (* 2 (* r!2 s!1 s!1)) ?x4626 (* (- 4) (* r!2 s00 s00)) ?x986 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x744 (* 6 ?x743)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x637 (* 9 ?x522)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x523 (+ (* 3 s!1) ?x474 (* (- 9) ?x4620) (* 9 (* r!2 s00)) ?x637 ?x632 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x6915) ?x700 (* 18 (* x!0 r00)) ?x744 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1918 (+ ?x6538 ?x5495 ?x5385 ?x44 ?x596 ?x597 ?x2682 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x600 ?x566)))
 (let (($x6526 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x397)) 0)))
 (let (($x1821 (and $x6526 (= ?x1918 0) (= ?x523 0) (= ?x2439 0) (= ?x5179 0) (not (= ?x5317 (- 45))))))
 (let (($x2969 (exists ((r Int) (s Int) (x Int) )(! (let ((?x7199 (* 36 (* r r r r r00 x00))))
 (let ((?x215 (* 6 r)))
 (let ((?x1641 (+ 3 ?x215 s)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x1647 (+ ?x376 x)))
 (let ((?x1479 (+ 1 r)))
 (let ((?x6769 (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1641 ?x1641))))
 (let ((?x5491 (* (- 12) (* r r r r r s00))))
 (let ((?x5473 (* (- 2) (* r r r r s s00))))
 (let ((?x5020 (* (- 108) (* r s00 r00 r00))))
 (let ((?x4930 (* (- 36) (* r r r s00 r00 r00))))
 (let ((?x5015 (* (- 108) (* r r s00 r00 r00))))
 (let ((?x4836 (* 6 (* r r r s s))))
 (let ((?x4880 (* 18 (* r r s s))))
 (let ((?x4871 (* (- 18) (* r s x))))
 (let ((?x4870 (* (- 18) (* r r s x))))
 (let ((?x4754 (* (- 6) (* r r r s x))))
 (let ((?x4505 (* 6 (* r r r s x00))))
 (let ((?x4218 (* (- 18) (* r s00 x00))))
 (let ((?x4217 (* (- 18) (* r r s00 x00))))
 (let ((?x4239 (* (- 6) (* r r r s00 x00))))
 (let ((?x4904 (* 114 (* r r r r s))))
 (let ((?x4902 (* (- 486) (* r r x))))
 (let ((?x4900 (* (- 342) (* r r r x))))
 (let ((?x4898 (* (- 90) (* r r r r x))))
 (let ((?x2985 (* (- 36) (* r r r r x r00))))
 (let ((?x3129 (* (- 198) (* r r r x r00))))
 (let ((?x3127 (* (- 378) (* r r x r00))))
 (let ((?x2890 (* 36 (* r r r r s r00))))
 (let ((?x2575 (* 36 (* r r r r00 r00 x00))))
 (let ((?x2176 (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x1641 ?x1641))))
 (let ((?x2609 (* (- 108) (* r r x r00 r00))))
 (let ((?x2615 (* (- 108) (* r x r00 r00))))
 (let ((?x3373 (* 72 (* r r r s r00 r00))))
 (let ((?x2351 (* (- 36) (* r r r x r00 r00))))
 (let ((?x5561 (* (- 150) (* r r r r s00))))
 (let ((?x1700 (* 4 (* r r r r s00 s00))))
 (let ((?x5555 (* (- 435) (* r r r s00))))
 (let ((?x1168 (* x r00 r00)))
 (let ((?x2254 (* (- 36) ?x1168)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x909 (* s x)))
 (let ((?x4751 (* (- 6) ?x909)))
 (let ((?x905 (* r s s)))
 (let ((?x4879 (* 18 ?x905)))
 (let ((?x901 (* s00 x00)))
 (let ((?x4240 (* (- 6) ?x901)))
 (let ((?x820 (* s x00)))
 (let ((?x821 (* 6 ?x820)))
 (let ((?x764 (* s00 s00 r00)))
 (let ((?x5419 (* 2 ?x764)))
 (let ((?x743 (* s00 r00 r00)))
 (let ((?x1370 (* (- 36) ?x743)))
 (let ((?x713 (* x r00)))
 (let ((?x3119 (* (- 90) ?x713)))
 (let ((?x687 (* s00 s00)))
 (let ((?x2237 (* 19 ?x687)))
 (let ((?x661 (* s r00 r00)))
 (let ((?x3378 (* 72 ?x661)))
 (let ((?x654 (* r x r00)))
 (let ((?x3117 (* (- 306) ?x654)))
 (let ((?x645 (* r x)))
 (let ((?x4897 (* (- 306) ?x645)))
 (let ((?x641 (* s s)))
 (let ((?x4819 (* 6 ?x641)))
 (let ((?x618 (* r00 x00)))
 (let ((?x7213 (* 90 ?x618)))
 (let ((?x522 (* s00 r00)))
 (let ((?x1856 (* (- 18) ?x522)))
 (let ((?x397 (* r00 r00)))
 (let ((?x2336 (* 108 ?x397)))
 (let ((?x4529 (* 72 x00)))
 (let ((?x6517 (* 72 r00)))
 (let ((?x5545 (* (- 57) s00)))
 (let ((?x4894 (* (- 72) x)))
 (let ((?x7040 (* 87 s)))
 (let ((?x592 (+ (* 297 r) ?x7040 ?x4894 ?x5545 ?x6517 ?x4529 (* 765 (* r r)) ?x2336 (* 375 (* r s)) (* 540 (* r r00 r00)) (* (- 285) (* r s00)) ?x1856 (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* (- 54) (* r00 x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x7213 ?x4819 ?x4897 (* 378 (* r s r00)) ?x3117 ?x3378 ?x2237 (* 6 (* x s00)) ?x3119 ?x1370 (* 306 (* r x00)) ?x5419 (* (- 20) (* s s00)) (* 114 (* s r00)) ?x821 (* (- 42) (* r s00 r00)) (* 2 (* s s00 r00)) ?x4240 ?x4879 ?x4751 (* 61 (* r s00 s00)) ?x974 (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 62) (* r s s00)) (* 306 (* r r00 x00)) (* 6 (* r s00 s00 r00)) (* 6 (* r r s00 s00 r00)) ?x2254 (* 2 (* r r r s00 s00 r00)) (* 6 (* s00 x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 15) (* s00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 144 (* r r r r r)) (* (- 2) (* r00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 24 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 24) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* (- 525) (* r r s00)) ?x5555 (* 54 (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 18) (* r r s00 r00)) (* 18 (* r r r s00 r00)) ?x1700 (* 31 (* r r r s00 s00)) (* 12 (* r r r r s00 r00)) (* 216 (* r r r r r00 r00)) (* (- 26) (* r r r s s00)) (* (- 66) (* r r s s00)) (* 756 (* r r r r00 r00)) (* 69 (* r r s00 s00)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) ?x5561 ?x2351 (* 216 (* r s r00 r00)) (* 216 (* r r s r00 r00)) ?x3373 (* 9 (* ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) ?x2615 ?x2609 ?x2176 ?x2575 (* 108 (* r r r00 r00 x00)) (* 108 (* r r00 r00 x00)) (* 6 (* r s s00 r00)) (* 450 (* r r s r00)) (* 222 (* r r r s r00)) (* (- 24) (* r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) ?x2890 ?x3127 (* (- 36) (* r00 r00 x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) ?x3129 (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x2985 (* (- 4) (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 54) (* x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 24 (* r00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 2) (* r00 s00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 36 (* r00 r00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 3 (* ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641 ?x1641)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 12 (* s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 90 (* r r r r x00)) (* 342 (* r r r x00)) (* 486 (* r r x00)) ?x4898 ?x4900 ?x4902 (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 9) (* s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* (- 6) (* s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 9 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x4904 (* 429 (* r r r s)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 603 (* r r s)) (* 18 (* r x s00)) (* 378 (* r r r00 x00)) (* 198 (* r r r r00 x00)) (* 18 (* r r x s00)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641)) ?x4239 ?x4217 ?x4218 (* 18 (* r s x00)) (* 18 (* r r s x00)) ?x4505 (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x4754 ?x4870 ?x4871 ?x4880 ?x4836 (* 6 (* r r r x s00)) ?x5015 ?x4930 (* (- 36) (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 4 (* r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641 ?x1641)) ?x5020 (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x5473 (* 36 (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 54 (* r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 972 (* r r r00 r00)) ?x5491 (* 648 (* r r r00)) (* 360 (* r r00)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x1641 ?x1641)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 2 (* r r r s s00 r00)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 6 (* r r s s00 r00)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 504 (* r r r r00)) (* 144 (* r r r r r00)) (* (- 6) (* x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 2 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 6 (* ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) ?x6769 (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 2 (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641 ?x1641)) (* 963 (* r r r)) (* 594 (* r r r r)) ?x7199)))
 (let ((?x1442 (* x00 x00)))
 (let ((?x1472 (* (- 108) ?x1442)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x1471 (* (- 16) ?x1280)))
 (let ((?x1152 (* s00 r00 r00 r00)))
 (let ((?x1467 (* (- 216) ?x1152)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x979 (* 432 ?x978)))
 (let ((?x1225 (* 108 ?x901)))
 (let ((?x827 (* s00 s00 r00 r00)))
 (let ((?x828 (* 36 ?x827)))
 (let ((?x1108 (* 108 ?x764)))
 (let ((?x1096 (* 36 ?x743)))
 (let ((?x1461 (* (- 51) ?x687)))
 (let ((?x960 (* (- 36) ?x661)))
 (let ((?x1458 (* (- 108) ?x618)))
 (let ((?x609 (* s00 r00 x00)))
 (let ((?x1457 (* (- 216) ?x609)))
 (let ((?x616 (* 54 ?x522)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1473 (+ ?x143 ?x1083 ?x616 ?x1457 ?x1458 (* (- 15) ?x641) ?x960 ?x1461 (* (- 108) (* x s00)) (* 108 ?x713) (* 216 (* s r00 r00 r00)) ?x1096 ?x1108 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x820) ?x828 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1225 (* 108 ?x909) (* (- 108) (* x x)) ?x979 (* 12 (* s s s00)) ?x1467 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1471 (* 216 (* x x00)) ?x1472)))
 (let (($x1474 (= ?x1473 0)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x792 (* (- 2) ?x764)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x660 (* 24 ?x522)))
 (let ((?x1175 (+ ?x143 ?x1083 (* (- 24) (* r s)) (* 24 (* r s00)) ?x660 ?x647 ?x665 (* 54 ?x645) (* 36 ?x654) ?x960 ?x1012 (* (- 6) (* x s00)) (* 54 ?x713) ?x1096 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x792 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x820) (* (- 2) (* s s00 r00)) ?x902 (* 2 ?x905) (* 6 ?x909) (* (- 4) (* r s00 s00)) ?x986 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 ?x1168))))
 (let (($x1180 (= ?x1175 0)))
 (let ((?x744 (* 6 ?x743)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x637 (* 9 ?x522)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x841 (+ ?x47 ?x474 (* (- 9) (* r s)) (* 9 (* r s00)) ?x637 ?x632 ?x642 (* 18 ?x645) (* 6 (* r s r00)) (* (- 6) ?x661) ?x700 (* 18 ?x713) ?x744 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x848 (= ?x841 0)))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x600 (* (- 6) ?x522)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x595 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x601 (+ ?x43 ?x595 ?x56 ?x44 ?x596 ?x597 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x600 ?x566)))
 (let (($x602 (= ?x601 0)))
 (let (($x430 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x397)) 0)))
 (and $x430 $x602 $x848 $x1180 $x1474 (not (= ?x592 (- 45))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x5859 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x2387 (+ 3 s ?x215)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x3227 (+ x ?x376)))
 (let ((?x1479 (+ 1 r)))
 (let ((?x5057 (+ (* 9 (* s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 36 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 54) (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 6 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 4) (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479)) (* 3 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 12 (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 2 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479)) (* (- 2) (* r00 s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 9) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 15) (* s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479)) (* 24 (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 54) (* r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x2387)) (* (- 36) (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 4 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 2) (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)))))
 (let (($x4978 (not (= ?x5057 0))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x2865 (* 108 ?x1442)))
 (let ((?x2811 (* (- 9) s)))
 (let ((?x1438 (* r00 r00 s00)))
 (let ((?x2787 (* (- 36) ?x1438)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x2711 (* 51 ?x687)))
 (let ((?x5025 (* r00 r00 s)))
 (let ((?x3075 (* 36 ?x5025)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x5822 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x2208 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6011 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x4968 (* 108 ?x618)))
 (let ((?x2871 (+ (* 216 (* r00 s00 x00)) ?x4968 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6011 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2208 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5822 (* (- 108) (* x s)) ?x3075 ?x2711 (* (- 108) (* r00 x)) ?x137 ?x2787 ?x2811 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2865)))
 (let (($x2876 (= ?x2871 0)))
 (let ((?x2801 (* r00 s)))
 (let ((?x3188 (* 24 ?x2801)))
 (let ((?x1649 (* 15 ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x4240 (* (- 6) ?x901)))
 (let ((?x5783 (* r00 s00 s00)))
 (let ((?x5780 (* 2 ?x5783)))
 (let ((?x4132 (* s00 x)))
 (let ((?x4298 (* 6 ?x4132)))
 (let ((?x782 (* 54 ?x618)))
 (let ((?x6910 (+ (* 24 (* s r)) ?x782 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) ?x4298 (* (- 4) (* r00 s s)) ?x5780 (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4240 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3075 ?x974 ?x1649 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2787 (* 54 (* x00 r)) ?x2811 (* (- 24) (* s00 r)) ?x3188 (* (- 36) (* r00 r00 x)))))
 (let ((?x595 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2383 (* 4 ?x687)))
 (let ((?x2108 (* 18 ?x618)))
 (let ((?x3249 (+ (* 9 (* s r)) ?x2108 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5025) ?x2383 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1438) (* 18 (* x00 r)) ?x595 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2801) (* 6 (* r00 s00 r)))))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3235 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x595 ?x596 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x597 ?x566)))
 (let (($x4919 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x4919 (= ?x3235 0) (= ?x3249 0) (= ?x6910 0) $x2876 $x4978))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2970 (lambda ((r Int) (s Int) (x Int) )(let ((?x7199 (* 36 (* r r r r r00 x00))))
 (let ((?x215 (* 6 r)))
 (let ((?x1641 (+ 3 ?x215 s)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x1647 (+ ?x376 x)))
 (let ((?x1479 (+ 1 r)))
 (let ((?x6769 (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1641 ?x1641))))
 (let ((?x5491 (* (- 12) (* r r r r r s00))))
 (let ((?x5473 (* (- 2) (* r r r r s s00))))
 (let ((?x5020 (* (- 108) (* r s00 r00 r00))))
 (let ((?x4930 (* (- 36) (* r r r s00 r00 r00))))
 (let ((?x5015 (* (- 108) (* r r s00 r00 r00))))
 (let ((?x4836 (* 6 (* r r r s s))))
 (let ((?x4880 (* 18 (* r r s s))))
 (let ((?x4871 (* (- 18) (* r s x))))
 (let ((?x4870 (* (- 18) (* r r s x))))
 (let ((?x4754 (* (- 6) (* r r r s x))))
 (let ((?x4505 (* 6 (* r r r s x00))))
 (let ((?x4218 (* (- 18) (* r s00 x00))))
 (let ((?x4217 (* (- 18) (* r r s00 x00))))
 (let ((?x4239 (* (- 6) (* r r r s00 x00))))
 (let ((?x4904 (* 114 (* r r r r s))))
 (let ((?x4902 (* (- 486) (* r r x))))
 (let ((?x4900 (* (- 342) (* r r r x))))
 (let ((?x4898 (* (- 90) (* r r r r x))))
 (let ((?x2985 (* (- 36) (* r r r r x r00))))
 (let ((?x3129 (* (- 198) (* r r r x r00))))
 (let ((?x3127 (* (- 378) (* r r x r00))))
 (let ((?x2890 (* 36 (* r r r r s r00))))
 (let ((?x2575 (* 36 (* r r r r00 r00 x00))))
 (let ((?x2176 (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x1641 ?x1641))))
 (let ((?x2609 (* (- 108) (* r r x r00 r00))))
 (let ((?x2615 (* (- 108) (* r x r00 r00))))
 (let ((?x3373 (* 72 (* r r r s r00 r00))))
 (let ((?x2351 (* (- 36) (* r r r x r00 r00))))
 (let ((?x5561 (* (- 150) (* r r r r s00))))
 (let ((?x1700 (* 4 (* r r r r s00 s00))))
 (let ((?x5555 (* (- 435) (* r r r s00))))
 (let ((?x1168 (* x r00 r00)))
 (let ((?x2254 (* (- 36) ?x1168)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x909 (* s x)))
 (let ((?x4751 (* (- 6) ?x909)))
 (let ((?x905 (* r s s)))
 (let ((?x4879 (* 18 ?x905)))
 (let ((?x901 (* s00 x00)))
 (let ((?x4240 (* (- 6) ?x901)))
 (let ((?x820 (* s x00)))
 (let ((?x821 (* 6 ?x820)))
 (let ((?x764 (* s00 s00 r00)))
 (let ((?x5419 (* 2 ?x764)))
 (let ((?x743 (* s00 r00 r00)))
 (let ((?x1370 (* (- 36) ?x743)))
 (let ((?x713 (* x r00)))
 (let ((?x3119 (* (- 90) ?x713)))
 (let ((?x687 (* s00 s00)))
 (let ((?x2237 (* 19 ?x687)))
 (let ((?x661 (* s r00 r00)))
 (let ((?x3378 (* 72 ?x661)))
 (let ((?x654 (* r x r00)))
 (let ((?x3117 (* (- 306) ?x654)))
 (let ((?x645 (* r x)))
 (let ((?x4897 (* (- 306) ?x645)))
 (let ((?x641 (* s s)))
 (let ((?x4819 (* 6 ?x641)))
 (let ((?x618 (* r00 x00)))
 (let ((?x7213 (* 90 ?x618)))
 (let ((?x522 (* s00 r00)))
 (let ((?x1856 (* (- 18) ?x522)))
 (let ((?x397 (* r00 r00)))
 (let ((?x2336 (* 108 ?x397)))
 (let ((?x4529 (* 72 x00)))
 (let ((?x6517 (* 72 r00)))
 (let ((?x5545 (* (- 57) s00)))
 (let ((?x4894 (* (- 72) x)))
 (let ((?x7040 (* 87 s)))
 (let ((?x592 (+ (* 297 r) ?x7040 ?x4894 ?x5545 ?x6517 ?x4529 (* 765 (* r r)) ?x2336 (* 375 (* r s)) (* 540 (* r r00 r00)) (* (- 285) (* r s00)) ?x1856 (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* (- 54) (* r00 x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x7213 ?x4819 ?x4897 (* 378 (* r s r00)) ?x3117 ?x3378 ?x2237 (* 6 (* x s00)) ?x3119 ?x1370 (* 306 (* r x00)) ?x5419 (* (- 20) (* s s00)) (* 114 (* s r00)) ?x821 (* (- 42) (* r s00 r00)) (* 2 (* s s00 r00)) ?x4240 ?x4879 ?x4751 (* 61 (* r s00 s00)) ?x974 (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 62) (* r s s00)) (* 306 (* r r00 x00)) (* 6 (* r s00 s00 r00)) (* 6 (* r r s00 s00 r00)) ?x2254 (* 2 (* r r r s00 s00 r00)) (* 6 (* s00 x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 15) (* s00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 144 (* r r r r r)) (* (- 2) (* r00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 24 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 24) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* (- 525) (* r r s00)) ?x5555 (* 54 (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 18) (* r r s00 r00)) (* 18 (* r r r s00 r00)) ?x1700 (* 31 (* r r r s00 s00)) (* 12 (* r r r r s00 r00)) (* 216 (* r r r r r00 r00)) (* (- 26) (* r r r s s00)) (* (- 66) (* r r s s00)) (* 756 (* r r r r00 r00)) (* 69 (* r r s00 s00)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) ?x5561 ?x2351 (* 216 (* r s r00 r00)) (* 216 (* r r s r00 r00)) ?x3373 (* 9 (* ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) ?x2615 ?x2609 ?x2176 ?x2575 (* 108 (* r r r00 r00 x00)) (* 108 (* r r00 r00 x00)) (* 6 (* r s s00 r00)) (* 450 (* r r s r00)) (* 222 (* r r r s r00)) (* (- 24) (* r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) ?x2890 ?x3127 (* (- 36) (* r00 r00 x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) ?x3129 (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x2985 (* (- 4) (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 54) (* x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 24 (* r00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 2) (* r00 s00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 36 (* r00 r00 s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 3 (* ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641 ?x1641)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 12 (* s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 90 (* r r r r x00)) (* 342 (* r r r x00)) (* 486 (* r r x00)) ?x4898 ?x4900 ?x4902 (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 9) (* s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* (- 6) (* s00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 9 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x4904 (* 429 (* r r r s)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 603 (* r r s)) (* 18 (* r x s00)) (* 378 (* r r r00 x00)) (* 198 (* r r r r00 x00)) (* 18 (* r r x s00)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641)) ?x4239 ?x4217 ?x4218 (* 18 (* r s x00)) (* 18 (* r r s x00)) ?x4505 (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x4754 ?x4870 ?x4871 ?x4880 ?x4836 (* 6 (* r r r x s00)) ?x5015 ?x4930 (* (- 36) (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 4 (* r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641 ?x1641)) ?x5020 (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) ?x5473 (* 36 (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 54 (* r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 972 (* r r r00 r00)) ?x5491 (* 648 (* r r r00)) (* 360 (* r r00)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x1641 ?x1641)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 2 (* r r r s s00 r00)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 6 (* r r s s00 r00)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641)) (* 504 (* r r r r00)) (* 144 (* r r r r r00)) (* (- 6) (* x00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641)) (* 2 (* s00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) (* 6 (* ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641)) ?x6769 (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1647 ?x1641)) (* 2 (* ?x1479 ?x1479 ?x1479 ?x1647 ?x1647 ?x1641 ?x1641 ?x1641 ?x1641 ?x1641)) (* 963 (* r r r)) (* 594 (* r r r r)) ?x7199)))
 (let ((?x1442 (* x00 x00)))
 (let ((?x1472 (* (- 108) ?x1442)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x1471 (* (- 16) ?x1280)))
 (let ((?x1152 (* s00 r00 r00 r00)))
 (let ((?x1467 (* (- 216) ?x1152)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x979 (* 432 ?x978)))
 (let ((?x1225 (* 108 ?x901)))
 (let ((?x827 (* s00 s00 r00 r00)))
 (let ((?x828 (* 36 ?x827)))
 (let ((?x1108 (* 108 ?x764)))
 (let ((?x1096 (* 36 ?x743)))
 (let ((?x1461 (* (- 51) ?x687)))
 (let ((?x960 (* (- 36) ?x661)))
 (let ((?x1458 (* (- 108) ?x618)))
 (let ((?x609 (* s00 r00 x00)))
 (let ((?x1457 (* (- 216) ?x609)))
 (let ((?x616 (* 54 ?x522)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1473 (+ ?x143 ?x1083 ?x616 ?x1457 ?x1458 (* (- 15) ?x641) ?x960 ?x1461 (* (- 108) (* x s00)) (* 108 ?x713) (* 216 (* s r00 r00 r00)) ?x1096 ?x1108 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x820) ?x828 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1225 (* 108 ?x909) (* (- 108) (* x x)) ?x979 (* 12 (* s s s00)) ?x1467 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1471 (* 216 (* x x00)) ?x1472)))
 (let (($x1474 (= ?x1473 0)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x792 (* (- 2) ?x764)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x660 (* 24 ?x522)))
 (let ((?x1175 (+ ?x143 ?x1083 (* (- 24) (* r s)) (* 24 (* r s00)) ?x660 ?x647 ?x665 (* 54 ?x645) (* 36 ?x654) ?x960 ?x1012 (* (- 6) (* x s00)) (* 54 ?x713) ?x1096 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x792 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) ?x820) (* (- 2) (* s s00 r00)) ?x902 (* 2 ?x905) (* 6 ?x909) (* (- 4) (* r s00 s00)) ?x986 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 ?x1168))))
 (let (($x1180 (= ?x1175 0)))
 (let ((?x744 (* 6 ?x743)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x637 (* 9 ?x522)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x841 (+ ?x47 ?x474 (* (- 9) (* r s)) (* 9 (* r s00)) ?x637 ?x632 ?x642 (* 18 ?x645) (* 6 (* r s r00)) (* (- 6) ?x661) ?x700 (* 18 ?x713) ?x744 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x848 (= ?x841 0)))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x600 (* (- 6) ?x522)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x595 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x601 (+ ?x43 ?x595 ?x56 ?x44 ?x596 ?x597 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x600 ?x566)))
 (let (($x602 (= ?x601 0)))
 (let (($x430 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x397)) 0)))
 (let (($x2463 (and $x430 $x602 $x848 $x1180 $x1474 (not (= ?x592 (- 45))))))
 (let ((?x2387 (+ 3 s ?x215)))
 (let ((?x3227 (+ x ?x376)))
 (let ((?x5057 (+ (* 9 (* s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 36 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 54) (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 6 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 4) (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479)) (* 3 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 12 (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 2 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479)) (* (- 2) (* r00 s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 9) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 15) (* s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479)) (* 24 (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 54) (* r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x2387)) (* (- 36) (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 4 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 2) (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)))))
 (let (($x4978 (not (= ?x5057 0))))
 (let ((?x2865 (* 108 ?x1442)))
 (let ((?x2811 (* (- 9) s)))
 (let ((?x1438 (* r00 r00 s00)))
 (let ((?x2787 (* (- 36) ?x1438)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2711 (* 51 ?x687)))
 (let ((?x5025 (* r00 r00 s)))
 (let ((?x3075 (* 36 ?x5025)))
 (let ((?x5822 (* 16 ?x1280)))
 (let ((?x2208 (* (- 108) ?x901)))
 (let ((?x6011 (* (- 432) ?x978)))
 (let ((?x4968 (* 108 ?x618)))
 (let ((?x2871 (+ (* 216 (* r00 s00 x00)) ?x4968 (* (- 54) (* r00 s00)) (* 15 ?x641) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6011 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2208 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5822 (* (- 108) (* x s)) ?x3075 ?x2711 (* (- 108) (* r00 x)) ?x137 ?x2787 ?x2811 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2865)))
 (let (($x2876 (= ?x2871 0)))
 (let ((?x2801 (* r00 s)))
 (let ((?x3188 (* 24 ?x2801)))
 (let ((?x1649 (* 15 ?x687)))
 (let ((?x5783 (* r00 s00 s00)))
 (let ((?x5780 (* 2 ?x5783)))
 (let ((?x4132 (* s00 x)))
 (let ((?x4298 (* 6 ?x4132)))
 (let ((?x782 (* 54 ?x618)))
 (let ((?x6910 (+ (* 24 (* s r)) ?x782 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x641) (* (- 54) (* x r)) ?x4298 (* (- 4) (* r00 s s)) ?x5780 (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4240 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3075 ?x974 ?x1649 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2787 (* 54 (* x00 r)) ?x2811 (* (- 24) (* s00 r)) ?x3188 (* (- 36) (* r00 r00 x)))))
 (let ((?x2383 (* 4 ?x687)))
 (let ((?x2108 (* 18 ?x618)))
 (let ((?x3249 (+ (* 9 (* s r)) ?x2108 (* (- 9) (* r00 s00)) (* (- 2) ?x641) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5025) ?x2383 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1438) (* 18 (* x00 r)) ?x595 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2801) (* 6 (* r00 s00 r)))))
 (let ((?x3235 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x595 ?x596 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x597 ?x566)))
 (let (($x4919 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) ?x397)) 0)))
 (let (($x5624 (and $x4919 (= ?x3235 0) (= ?x3249 0) (= ?x6910 0) $x2876 $x4978)))
 (rewrite (= $x5624 $x2463))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x4955 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (* 6 r)))
 (let ((?x2387 (+ 3 s ?x215)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x3227 (+ x ?x376)))
 (let ((?x1479 (+ 1 r)))
 (let ((?x5057 (+ (* 9 (* s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 36 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 54) (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 6 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 4) (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479)) (* 3 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 12 (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 2 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479)) (* (- 2) (* r00 s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 9) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 15) (* s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479)) (* 24 (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 54) (* r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x2387)) (* (- 36) (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 4 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 2) (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)))))
 (let (($x4978 (not (= ?x5057 0))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x2865 (* 108 ?x1442)))
 (let ((?x2811 (* (- 9) s)))
 (let ((?x1438 (* r00 r00 s00)))
 (let ((?x2787 (* (- 36) ?x1438)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x2711 (* 51 ?x687)))
 (let ((?x5025 (* r00 r00 s)))
 (let ((?x3075 (* 36 ?x5025)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x5822 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x2208 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6011 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x4968 (* 108 ?x618)))
 (let ((?x2871 (+ (* 216 (* r00 s00 x00)) ?x4968 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6011 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2208 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5822 (* (- 108) (* x s)) ?x3075 ?x2711 (* (- 108) (* r00 x)) ?x137 ?x2787 ?x2811 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2865)))
 (let (($x2876 (= ?x2871 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x4234 (+ (* (- 24) (* s r)) ?x647 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x665 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5025) ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 (* 36 ?x1438) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x3239 (+ (* (- 9) (* s r)) ?x632 (* 9 (* r00 s00)) ?x642 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5025) ?x700 (* 18 (* r00 x)) ?x474 (* 6 ?x1438) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6056 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x474 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x4919 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x4919 (= ?x6056 0) (= ?x3239 0) (= ?x4234 0) $x2876 $x4978)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x6027 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x2387 (+ 3 s ?x215)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x3227 (+ x ?x376)))
 (let ((?x1479 (+ 1 r)))
 (let ((?x5057 (+ (* 9 (* s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 36 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 54) (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 6 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 4) (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479)) (* 3 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 12 (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 2 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479)) (* (- 2) (* r00 s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 9) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 15) (* s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479)) (* 24 (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 54) (* r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x2387)) (* (- 36) (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 4 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 2) (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)))))
 (let (($x4978 (not (= ?x5057 0))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x2865 (* 108 ?x1442)))
 (let ((?x2811 (* (- 9) s)))
 (let ((?x1438 (* r00 r00 s00)))
 (let ((?x2787 (* (- 36) ?x1438)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x2711 (* 51 ?x687)))
 (let ((?x5025 (* r00 r00 s)))
 (let ((?x3075 (* 36 ?x5025)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x5822 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x2208 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6011 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x4968 (* 108 ?x618)))
 (let ((?x2871 (+ (* 216 (* r00 s00 x00)) ?x4968 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6011 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2208 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5822 (* (- 108) (* x s)) ?x3075 ?x2711 (* (- 108) (* r00 x)) ?x137 ?x2787 ?x2811 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2865)))
 (let (($x2876 (= ?x2871 0)))
 (let ((?x2801 (* r00 s)))
 (let ((?x3188 (* 24 ?x2801)))
 (let ((?x1649 (* 15 ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x974 (* 36 ?x973)))
 (let ((?x4240 (* (- 6) ?x901)))
 (let ((?x5783 (* r00 s00 s00)))
 (let ((?x5780 (* 2 ?x5783)))
 (let ((?x4132 (* s00 x)))
 (let ((?x4298 (* 6 ?x4132)))
 (let ((?x782 (* 54 ?x618)))
 (let ((?x6910 (+ (* 24 (* s r)) ?x782 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) ?x4298 (* (- 4) (* r00 s s)) ?x5780 (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x4240 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3075 ?x974 ?x1649 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2787 (* 54 (* x00 r)) ?x2811 (* (- 24) (* s00 r)) ?x3188 (* (- 36) (* r00 r00 x)))))
 (let ((?x595 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2383 (* 4 ?x687)))
 (let ((?x2108 (* 18 ?x618)))
 (let ((?x3249 (+ (* 9 (* s r)) ?x2108 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x5025) ?x2383 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x1438) (* 18 (* x00 r)) ?x595 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 ?x2801) (* 6 (* r00 s00 r)))))
 (let ((?x565 (* r00 r00 r00)))
 (let ((?x566 (* 12 ?x565)))
 (let ((?x597 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x596 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3235 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x595 ?x596 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x597 ?x566)))
 (let (($x4919 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x5624 (and $x4919 (= ?x3235 0) (= ?x3249 0) (= ?x6910 0) $x2876 $x4978)))
 (let ((?x143 (* 9 s)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x4234 (+ (* (- 24) (* s r)) ?x647 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x665 (* 54 (* x r)) (* (- 6) ?x4132) (* 4 (* r00 s s)) (* (- 2) ?x5783) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5025) ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 (* 36 ?x1438) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x2801) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x3239 (+ (* (- 9) (* s r)) ?x632 (* 9 (* r00 s00)) ?x642 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5025) ?x700 (* 18 (* r00 x)) ?x474 (* 6 ?x1438) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) ?x2801) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6056 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x474 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x565))))
 (let (($x4528 (and $x4919 (= ?x6056 0) (= ?x3239 0) (= ?x4234 0) $x2876 $x4978)))
 (rewrite (= $x4528 $x5624)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x373 (exists ((r Int) (s Int) (x Int) )(! (let ((?x217 (- x s)))
 (let ((?x215 (* 6 r)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (- (* 9 ?x212 ?x212 ?x212 s00) (* 24 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x222 (+ (- ?x219 (* 24 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 24 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x228 (+ (- ?x222 (* 3 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 54 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 15 ?x212 ?x212 ?x212 ?x216 s00 s00 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x232 (- (- ?x228 (* 54 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217 x00)) (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x236 (+ ?x232 (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 4 ?x212 ?x212 ?x212 ?x212 s00 s00) (* 2 ?x212 ?x212 ?x212 r00 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x241 (+ (- ?x236 (* 24 ?x212 ?x212 ?x212 r00 ?x216 s00 ?x217 ?x217)) (* 9 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 2 ?x212 ?x212 ?x212 r00 ?x216 s00))))
 (let ((?x247 (- (- ?x241 (* 12 ?x212 ?x212 ?x212 ?x216 s00)) (* 4 ?x212 ?x212 ?x212 r00 ?x216 ?x216))))
 (let ((?x249 (- (- ?x247 (* 4 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 4 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x253 (- (+ ?x249 (* 54 ?x212 ?x212 ?x212 ?x212 ?x216 ?x217 ?x217 x00)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x259 (- (+ ?x253 (* 15 ?x212 ?x212 ?x212 s00 s00)) (* 9 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x261 (- (- ?x259 (* 6 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x267 (+ ?x261 (* 24 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x217 ?x217) (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 r00 x00) (* 3 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 12 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x270 (- ?x267 (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x273 (+ (- ?x270 (* 3 ?x212 ?x212 ?x212 ?x216 ?x216)) (* 4 ?x212 ?x212 ?x212 ?x212 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x277 (- (- ?x273 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x217)) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x217))))
 (let ((?x281 (+ ?x277 (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 x00) (* 24 ?x212 ?x212 ?x212 r00 ?x216) (* 2 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x287 (+ (- ?x281 (* 54 ?x212 ?x212 ?x212 r00 ?x217)) (* 54 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216) (* 54 ?x212 ?x212 ?x212 ?x212 x00))))
 (let ((?x291 (+ (- ?x287 (* 54 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x295 (- (- ?x291 (* 54 ?x212 ?x212 ?x212 ?x212 ?x216 ?x217 ?x217 ?x217)) (* 54 ?x212 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x299 (- (+ ?x295 (* 54 ?x212 ?x212 ?x212 r00 x00)) (* 2 ?x212 ?x212 r00 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x301 (+ ?x299 (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x305 (- (- ?x301 (* 9 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x311 (- (+ ?x305 (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217 x00)) (* 12 ?x212 ?x212 ?x212 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x312 (- ?x311 (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x317 (+ (- ?x312 (* 15 ?x212 ?x212 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217 ?x217) (* 2 ?x212 ?x212 ?x212 r00 ?x216 s00 s00 ?x217 ?x217) (* 9 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217))))
 (let ((?x322 (+ (- ?x317 (* 6 ?x212 ?x212 ?x212 s00 x00)) (* 24 ?x212 ?x212 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x326 (- (- ?x322 (* 54 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00)) (* 24 ?x212 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217))))
 (let ((?x330 (+ ?x326 (* 6 ?x212 ?x212 ?x212 s00 ?x217) (* 24 ?x212 ?x212 ?x212 ?x212 ?x216) (* 6 ?x212 ?x212 ?x212 ?x216 x00))))
 (let ((?x335 (- (- ?x330 (* 6 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217 x00)) (* 6 ?x212 ?x212 ?x212 ?x216 ?x217))))
 (let ((?x336 (- ?x335 (* 36 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x339 (+ ?x336 (* 4 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 24 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x344 (- (- ?x339 (* 24 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 36 ?x212 ?x212 ?x212 r00 r00 s00))))
 (let ((?x347 (+ (- ?x344 (* 24 ?x212 ?x212 ?x212 ?x212 s00)) (* 54 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 x00))))
 (let ((?x351 (- (- ?x347 (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 s00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x354 (+ ?x351 (* 6 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217 x00) (* 2 ?x212 ?x212 ?x212 r00 s00 s00))))
 (let ((?x358 (- (- ?x354 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 s00 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216))))
 (let ((?x363 (- (+ ?x358 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x217 ?x217 x00)) (* 9 ?x212 ?x212 ?x212 ?x216))))
 (let ((?x364 (- ?x363 (* 2 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x368 (- (+ ?x364 (* 36 ?x212 ?x212 ?x212 ?x212 r00 x00)) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x368 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5014 (lambda ((r Int) (s Int) (x Int) )(let ((?x215 (* 6 r)))
 (let ((?x2387 (+ 3 s ?x215)))
 (let ((?x376 (* (- 1) s)))
 (let ((?x3227 (+ x ?x376)))
 (let ((?x1479 (+ 1 r)))
 (let ((?x5057 (+ (* 9 (* s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 36 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 54) (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 6 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 24) (* r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 2 (* r00 s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* (- 4) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 4) (* s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 15 (* s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479)) (* 3 (* ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 12 (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 3) (* ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 4 (* s00 s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 24 (* r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 2 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x2387)) (* 54 (* x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 54) (* r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* (- 54) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x3227)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479)) (* (- 2) (* r00 s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 9) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 6) (* s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 12) (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 15) (* s00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 9 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479)) (* 24 (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* (- 54) (* r00 x00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* 6 (* s00 ?x1479 ?x1479 ?x1479 ?x3227)) (* 24 (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 6) (* s00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 6) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x2387)) (* (- 36) (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* 4 (* r00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387 ?x2387)) (* 24 (* s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387)) (* (- 24) (* ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479)) (* (- 24) (* s00 ?x1479 ?x1479 ?x1479 ?x1479)) (* 54 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* s00 ?x1479 ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 36) (* r00 r00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)) (* 6 (* x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387)) (* 2 (* r00 s00 s00 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 r00 s00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 2) (* ?x1479 ?x1479 ?x1479 ?x1479 ?x2387 ?x2387)) (* 36 (* r00 r00 x00 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387)) (* (- 9) (* ?x1479 ?x1479 ?x1479 ?x2387)) (* (- 2) (* r00 s00 ?x1479 ?x1479 ?x3227 ?x3227 ?x2387 ?x2387 ?x2387 ?x2387)) (* 36 (* r00 x00 ?x1479 ?x1479 ?x1479 ?x1479)) (* (- 36) (* r00 ?x1479 ?x1479 ?x1479 ?x1479 ?x3227 ?x3227 ?x3227 ?x2387)))))
 (let (($x4978 (not (= ?x5057 0))))
 (let ((?x1442 (* x00 x00)))
 (let ((?x2865 (* 108 ?x1442)))
 (let ((?x2811 (* (- 9) s)))
 (let ((?x1438 (* r00 r00 s00)))
 (let ((?x2787 (* (- 36) ?x1438)))
 (let ((?x137 (* 9 s00)))
 (let ((?x687 (* s00 s00)))
 (let ((?x2711 (* 51 ?x687)))
 (let ((?x5025 (* r00 r00 s)))
 (let ((?x3075 (* 36 ?x5025)))
 (let ((?x1280 (* s00 s00 s00)))
 (let ((?x5822 (* 16 ?x1280)))
 (let ((?x901 (* s00 x00)))
 (let ((?x2208 (* (- 108) ?x901)))
 (let ((?x978 (* r00 r00 r00 x00)))
 (let ((?x6011 (* (- 432) ?x978)))
 (let ((?x618 (* r00 x00)))
 (let ((?x4968 (* 108 ?x618)))
 (let ((?x2871 (+ (* 216 (* r00 s00 x00)) ?x4968 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x6011 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2208 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x5822 (* (- 108) (* x s)) ?x3075 ?x2711 (* (- 108) (* r00 x)) ?x137 ?x2787 ?x2811 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2865)))
 (let (($x2876 (= ?x2871 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1083 (* (- 9) s00)))
 (let ((?x1012 (* (- 15) ?x687)))
 (let ((?x973 (* r00 r00 x00)))
 (let ((?x986 (* (- 36) ?x973)))
 (let ((?x902 (* 6 ?x901)))
 (let ((?x641 (* s s)))
 (let ((?x665 (* 3 ?x641)))
 (let ((?x647 (* (- 54) ?x618)))
 (let ((?x4234 (+ (* (- 24) (* s r)) ?x647 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x665 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x902 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x5025) ?x986 ?x1012 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1083 (* 36 ?x1438) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x474 (* (- 3) s00)))
 (let ((?x700 (* (- 4) ?x687)))
 (let ((?x642 (* 2 ?x641)))
 (let ((?x632 (* (- 18) ?x618)))
 (let ((?x3239 (+ (* (- 9) (* s r)) ?x632 (* 9 (* r00 s00)) ?x642 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x5025) ?x700 (* 18 (* r00 x)) ?x474 (* 6 ?x1438) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x6056 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x474 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x4919 (= (+ s00 ?x376 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4528 (and $x4919 (= ?x6056 0) (= ?x3239 0) (= ?x4234 0) $x2876 $x4978)))
 (let ((?x217 (- x s)))
 (let ((?x216 (+ s ?x215 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x219 (- (* 9 ?x212 ?x212 ?x212 s00) (* 24 ?x212 ?x212 ?x212 r00 s00))))
 (let ((?x222 (+ (- ?x219 (* 24 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 24 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x228 (+ (- ?x222 (* 3 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 54 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 15 ?x212 ?x212 ?x212 ?x216 s00 s00 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x232 (- (- ?x228 (* 54 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217 x00)) (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x236 (+ ?x232 (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 4 ?x212 ?x212 ?x212 ?x212 s00 s00) (* 2 ?x212 ?x212 ?x212 r00 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x241 (+ (- ?x236 (* 24 ?x212 ?x212 ?x212 r00 ?x216 s00 ?x217 ?x217)) (* 9 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 2 ?x212 ?x212 ?x212 r00 ?x216 s00))))
 (let ((?x247 (- (- ?x241 (* 12 ?x212 ?x212 ?x212 ?x216 s00)) (* 4 ?x212 ?x212 ?x212 r00 ?x216 ?x216))))
 (let ((?x249 (- (- ?x247 (* 4 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 4 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x253 (- (+ ?x249 (* 54 ?x212 ?x212 ?x212 ?x212 ?x216 ?x217 ?x217 x00)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x259 (- (+ ?x253 (* 15 ?x212 ?x212 ?x212 s00 s00)) (* 9 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x261 (- (- ?x259 (* 6 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x267 (+ ?x261 (* 24 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x217 ?x217) (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 r00 x00) (* 3 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 12 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x270 (- ?x267 (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x273 (+ (- ?x270 (* 3 ?x212 ?x212 ?x212 ?x216 ?x216)) (* 4 ?x212 ?x212 ?x212 ?x212 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x277 (- (- ?x273 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x217)) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x217))))
 (let ((?x281 (+ ?x277 (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 x00) (* 24 ?x212 ?x212 ?x212 r00 ?x216) (* 2 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x287 (+ (- ?x281 (* 54 ?x212 ?x212 ?x212 r00 ?x217)) (* 54 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216) (* 54 ?x212 ?x212 ?x212 ?x212 x00))))
 (let ((?x291 (+ (- ?x287 (* 54 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x295 (- (- ?x291 (* 54 ?x212 ?x212 ?x212 ?x212 ?x216 ?x217 ?x217 ?x217)) (* 54 ?x212 ?x212 ?x212 ?x212 ?x217))))
 (let ((?x299 (- (+ ?x295 (* 54 ?x212 ?x212 ?x212 r00 x00)) (* 2 ?x212 ?x212 r00 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217))))
 (let ((?x301 (+ ?x299 (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x305 (- (- ?x301 (* 9 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217 ?x217))))
 (let ((?x311 (- (+ ?x305 (* 6 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217 x00)) (* 12 ?x212 ?x212 ?x212 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x312 (- ?x311 (* 36 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x317 (+ (- ?x312 (* 15 ?x212 ?x212 ?x216 ?x216 ?x216 s00 s00 ?x217 ?x217)) (* 6 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217 ?x217) (* 2 ?x212 ?x212 ?x212 r00 ?x216 s00 s00 ?x217 ?x217) (* 9 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217))))
 (let ((?x322 (+ (- ?x317 (* 6 ?x212 ?x212 ?x212 s00 x00)) (* 24 ?x212 ?x212 r00 ?x216 ?x216 ?x216 s00 ?x217 ?x217) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x216 ?x217 ?x217))))
 (let ((?x326 (- (- ?x322 (* 54 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00)) (* 24 ?x212 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217))))
 (let ((?x330 (+ ?x326 (* 6 ?x212 ?x212 ?x212 s00 ?x217) (* 24 ?x212 ?x212 ?x212 ?x212 ?x216) (* 6 ?x212 ?x212 ?x212 ?x216 x00))))
 (let ((?x335 (- (- ?x330 (* 6 ?x212 ?x212 ?x212 ?x216 s00 ?x217 ?x217 x00)) (* 6 ?x212 ?x212 ?x212 ?x216 ?x217))))
 (let ((?x336 (- ?x335 (* 36 ?x212 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x217 ?x217 x00))))
 (let ((?x339 (+ ?x336 (* 4 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217) (* 24 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x344 (- (- ?x339 (* 24 ?x212 ?x212 ?x212 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217)) (* 36 ?x212 ?x212 ?x212 r00 r00 s00))))
 (let ((?x347 (+ (- ?x344 (* 24 ?x212 ?x212 ?x212 ?x212 s00)) (* 54 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 x00))))
 (let ((?x351 (- (- ?x347 (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 s00)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x354 (+ ?x351 (* 6 ?x212 ?x212 ?x212 ?x216 ?x216 ?x217 ?x217 x00) (* 2 ?x212 ?x212 ?x212 r00 s00 s00))))
 (let ((?x358 (- (- ?x354 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 s00 ?x217 ?x217)) (* 2 ?x212 ?x212 ?x212 ?x212 ?x216 ?x216))))
 (let ((?x363 (- (+ ?x358 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x216 ?x217 ?x217 x00)) (* 9 ?x212 ?x212 ?x212 ?x216))))
 (let ((?x364 (- ?x363 (* 2 ?x212 ?x212 r00 ?x216 ?x216 ?x216 ?x216 s00 ?x217 ?x217))))
 (let ((?x368 (- (+ ?x364 (* 36 ?x212 ?x212 ?x212 ?x212 r00 x00)) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x216 ?x217 ?x217 ?x217))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x372 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x368 0))))))
 (rewrite (= $x372 $x4528)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x374 (asserted $x373)))
 (let ((@x2100 (mp (mp @x374 (quant-intro (proof-bind ?x5014) (= $x373 $x4955)) $x4955) (rewrite (= $x4955 $x4955)) $x4955)))
 (let ((@x1935 (mp (mp @x2100 (quant-intro (proof-bind ?x6027) (= $x4955 $x5859)) $x5859) (quant-intro (proof-bind ?x2970) (= $x5859 $x2969)) $x2969)))
 (let ((@x1520 (mp (mp~ @x1935 (sk (~ $x2969 $x1821)) $x1821) (rewrite (= $x1821 $x709)) $x709)))
 (let ((@x926 (and-elim @x1520 $x405)))
 (let ((@x4652 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x405) $x4848)) @x926 $x4848)))
 (let (($x4845 (>= ?x2102 0)))
 (let ((@x3111 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x405) $x4845)) @x926 $x4845)))
 (let (($x4342 (<= ?x5313 0)))
 (let ((@x1601 (and-elim @x1520 $x1920)))
 (let ((@x4650 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1920) $x4342)) @x1601 $x4342)))
 (let (($x4851 (>= ?x5313 0)))
 (let ((@x814 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1920) $x4851)) @x1601 $x4851)))
 (let (($x4844 (<= ?x4815 0)))
 (let ((@x4773 (and-elim @x1520 $x4816)))
 (let ((@x1559 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4816) $x4844)) @x4773 $x4844)))
 (let (($x4847 (>= ?x4815 0)))
 (let ((@x3798 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4816) $x4847)) @x4773 $x4847)))
 (let (($x4849 (<= ?x1128 0)))
 (let ((@x930 (and-elim @x1520 $x1129)))
 (let ((@x3795 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1129) $x4849)) @x930 $x4849)))
 (let (($x675 (>= ?x1128 0)))
 (let ((@x1633 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1129) $x675)) @x930 $x675)))
 (let (($x4843 (<= ?x705 0)))
 (let ((@x927 (and-elim @x1520 $x706)))
 (let ((@x817 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x706) $x4843)) @x927 $x4843)))
 (let (($x4788 (>= ?x705 0)))
 (let ((@x3251 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x706) $x4788)) @x927 $x4788)))
 (let (($x1412 (not (<= ?x1554 45))))
 (let (($x4804 (>= ?x1554 45)))
 (let ((@x6921 ((_ th-lemma arith) (hypothesis (not $x4804)) @x1633 @x3795 @x1633 @x3795 @x3798 @x1559 @x3798 @x1559 @x814 @x4650 @x3798 @x1559 @x1633 @x3795 @x3111 @x4652 @x814 @x4650 @x1633 @x3795 @x1633 @x3795 @x3111 @x4652 @x3798 @x1559 @x3111 @x4652 @x3798 @x1559 @x3798 @x1559 @x3251 @x817 @x814 @x4650 @x1633 @x3795 @x3111 @x4652 @x3798 @x1559 @x1633 @x3795 @x3798 @x1559 @x814 @x4650 @x3111 @x4652 false)))
 (let ((@x4840 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1558 $x1412 (not $x4804))) (and-elim @x1520 $x1581) (or $x1412 (not $x4804)))))
 ((_ th-lemma arith) (unit-resolution @x4840 (lemma @x6921 $x4804) $x1412) @x1633 @x3795 @x1633 @x3795 @x3798 @x1559 @x3798 @x1559 @x814 @x4650 @x3798 @x1559 @x1633 @x3795 @x3111 @x4652 @x814 @x4650 @x1633 @x3795 @x1633 @x3795 @x3111 @x4652 @x3798 @x1559 @x3111 @x4652 @x3798 @x1559 @x3798 @x1559 @x3251 @x817 @x814 @x4650 @x1633 @x3795 @x3111 @x4652 @x3798 @x1559 @x1633 @x3795 @x3798 @x1559 @x814 @x4650 @x3111 @x4652 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        43
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-max-min             1484
 :arith-nonlinear-bounds    36
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              6
 :arith-row-summations      15
 :arith-tableau-max-columns 276
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                11.87
 :memory                    4.01
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                7471530403.00
 :num-checks                1
 :propagations              12
 :rlimit-count              2825336
 :time                      2.46
 :total-time                2.46)
