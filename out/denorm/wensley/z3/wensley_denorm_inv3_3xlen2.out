unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun a!8 () Real)
(declare-fun y!5 () Real)
(declare-fun b!7 () Real)
(proof
(let ((?x1491 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x1476 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x1471 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x1469 (* b!7 b!7 b!7 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x1310 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x1116 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x1108 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6)))
 (let ((?x1093 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6)))
 (let ((?x1075 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6)))
 (let ((?x1007 (* b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6)))
 (let ((?x981 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x911 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x822 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x819 (* b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x750 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6)))
 (let ((?x689 (* b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x577 (* b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x516 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x488 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x484 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x475 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x474 (* b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x415 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x399 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x340 (* b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x335 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x326 (* y00 b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6)))
 (let ((?x321 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6)))
 (let ((?x307 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x297 (* b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d!6 d!6 d!6 d!6)))
 (let ((?x270 (* a00 b!7 b!7 b!7 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6 d!6)))
 (let ((?x139 (* b!7 b!7 b!7 b!7 y!5 y!5 y!5 y!5 y!5 a!8 a!8 a!8 d!6 d!6)))
 (let ((?x495 (+ (* (/ 1.0 32.0) ?x139) (* (/ 1.0 64.0) ?x270) (* (- (/ 1.0 128.0)) ?x297) (* (/ 1.0 128.0) ?x307) (* (/ 1.0 32.0) ?x321) (* (- (/ 1.0 32.0)) ?x326) (* (- (/ 1.0 256.0)) ?x335) (* (- (/ 1.0 64.0)) ?x340) (* (- (/ 1.0 128.0)) ?x399) (* (/ 1.0 128.0) ?x415) (* (/ 1.0 256.0) ?x474) (* (/ 1.0 256.0) ?x475) (* (- (/ 1.0 256.0)) ?x484) (* (/ 1.0 64.0) ?x488) (* (/ 1.0 512.0) ?x516) (* (- (/ 1.0 64.0)) ?x577) (* (- (/ 1.0 512.0)) ?x689) (* (- (/ 1.0 32.0)) ?x750) (* (/ 1.0 256.0) ?x819) (* (- (/ 1.0 128.0)) ?x822) (* (- (/ 1.0 256.0)) ?x911) (* (/ 1.0 64.0) ?x981) (* (/ 1.0 32.0) ?x1007) (* (- (/ 1.0 32.0)) ?x1075) (* (- (/ 1.0 16.0)) ?x1093) (* (/ 1.0 16.0) ?x1108) (* (- (/ 1.0 64.0)) ?x1116) (* (/ 1.0 128.0) ?x1310) (* (/ 1.0 128.0) ?x1469) (* (- (/ 1.0 64.0)) ?x1471) (* (/ 1.0 64.0) ?x1476) (* (- (/ 1.0 128.0)) ?x1491))))
 (let (($x906 (>= ?x495 0.0)))
 (let (($x767 (not $x906)))
 (let (($x108 (= 0.0 ?x495)))
 (let (($x473 (not $x108)))
 (let ((@x483 (symm (commutativity (= $x108 (= ?x495 0.0))) (= (= ?x495 0.0) $x108))))
 (let (($x497 (= ?x495 0.0)))
 (let (($x748 (not $x497)))
 (let ((?x1307 (* b!7 y!5)))
 (let ((?x540 (* (- 1.0) ?x1307)))
 (let ((?x820 (* y00 b!7)))
 (let ((?x608 (* a00 d!6)))
 (let ((?x579 (* (- (/ 1.0 2.0)) ?x608)))
 (let ((?x377 (* a!8 d!6)))
 (let ((?x559 (* (/ 1.0 2.0) ?x377)))
 (let ((?x1257 (* y!5 y!5 y!5 a!8)))
 (let ((?x548 (+ (* (/ 3.0 2.0) (* b!7 y!5 y!5 d!6)) (* (/ 3.0 2.0) (* y!5 y!5 a!8 d!6)) (* (- 1.0) (* b!7 y!5 a!8 d!6 d!6)) (* (/ 1.0 8.0) (* a!8 d!6 d!6 d!6)) (* (- 1.0) (* b!7 y!5 y!5 a!8 d!6)) (* (- (/ 1.0 2.0)) (* b!7 b!7 y!5 y!5 d!6)) (* (- (/ 1.0 2.0)) (* b!7 b!7 y!5 d!6 d!6)) (* (- (/ 1.0 2.0)) (* y!5 a!8 a!8 d!6 d!6)) (* (- (/ 1.0 8.0)) (* b!7 b!7 d!6 d!6 d!6)) (* (- (/ 1.0 4.0)) (* b!7 a!8 d!6 d!6 d!6)) (* (/ 1.0 8.0) (* b!7 d!6 d!6 d!6)) (* (- (/ 1.0 8.0)) (* a!8 a!8 d!6 d!6 d!6)) (* (- (/ 1.0 2.0)) (* y!5 y!5 a!8 a!8 d!6)) (* (/ 3.0 4.0) (* b!7 y!5 d!6 d!6)) (* (/ 3.0 4.0) (* y!5 a!8 d!6 d!6)) ?x1257 (* b!7 y!5 y!5 y!5))))
 (let ((?x419 (+ (* (/ 1.0 32.0) (* b!7 b!7 y!5 y!5 a!8 a!8 d!6 d!6 d!6)) (* (- (/ 1.0 8.0)) (* b!7 b!7 b!7 b!7 y!5 d!6)) (* (/ 1.0 128.0) (* b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 d!6)) (* (- (/ 1.0 4.0)) (* b!7 b!7 b!7 y!5 a!8 d!6)) (* (- (/ 1.0 8.0)) (* b!7 b!7 b!7 a!8 d!6 d!6)) (* (/ 1.0 16.0) (* b!7 b!7 b!7 y!5 a!8 d!6 d!6 d!6 d!6)) (* (- (/ 1.0 16.0)) (* b!7 b!7 b!7 b!7 d!6 d!6)) (* (/ 1.0 64.0) (* b!7 b!7 b!7 a!8 d!6 d!6 d!6 d!6 d!6)) (* (/ 1.0 32.0) (* b!7 b!7 b!7 b!7 y!5 d!6 d!6 d!6 d!6)) (* (/ 1.0 16.0) (* b!7 b!7 b!7 y!5 y!5 a!8 d!6 d!6 d!6)) (* (- (/ 1.0 16.0)) (* b!7 b!7 a!8 a!8 d!6 d!6)) (* (/ 1.0 32.0) (* b!7 b!7 y!5 a!8 a!8 d!6 d!6 d!6 d!6)) (* (/ 1.0 128.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)) (* (- (/ 1.0 8.0)) (* b!7 b!7 y!5 a!8 a!8 d!6)) (* (/ 1.0 32.0) (* b!7 b!7 b!7 b!7 y!5 y!5 d!6 d!6 d!6)))))
 (let ((?x1463 (+ (* (- (/ 1.0 4.0)) (* b!7 d!6)) (* (/ 1.0 2.0) (* b!7 y!5 a!8 a!8 a!8)) (* (/ 1.0 4.0) (* b!7 b!7 b!7 b!7 d!6)) (* (/ 1.0 4.0) (* b!7 a!8 a!8 a!8 d!6)) (* (/ 3.0 4.0) (* b!7 b!7 a!8 a!8 d!6)) (* (/ 3.0 2.0) (* b!7 b!7 b!7 y!5 a!8)) (* (/ 3.0 2.0) (* b!7 b!7 y!5 a!8 a!8)) (* (/ 1.0 2.0) (* b!7 b!7 b!7 b!7 y!5)) (* (/ 3.0 4.0) (* b!7 b!7 b!7 a!8 d!6)))))
 (let (($x537 (= (* ?x1463 ?x419 ?x548 (+ ?x559 ?x579 ?x820 ?x540)) 0.0)))
 (let ((?x299 (+ ?x540 ?x559 ?x579 ?x820)))
 (let (($x123 (= ?x299 0.0)))
 (let ((?x920 (+ ?x377 (* (- 1.0) ?x608) (* 2.0 ?x820) (* (- 2.0) ?x1307))))
 (let (($x186 (= ?x920 0.0)))
 (let (($x223 (not $x537)))
 (let (($x221 (or $x748 $x223)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x1311 (= (+ ?x30 ?x101 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let (($x773 (and $x1311 (= (+ (* d00 b!7) (* (- 1.0) (* b00 d!6))) 0.0) $x186 $x221)))
 (let ((?x482 (* b!7 y00)))
 (let ((?x1095 (+ (* (/ 1.0 2.0) (* d!6 a!8)) (* (- 1.0) (* y!5 b!7)) ?x482 (* (- (/ 1.0 2.0)) (* d!6 a00)))))
 (let ((?x380 (+ ?x1257 (* (- (/ 1.0 2.0)) (* y!5 y!5 d!6 a!8 a!8)) (* y!5 y!5 y!5 b!7) (* (/ 3.0 2.0) (* y!5 y!5 d!6 b!7)) (* (/ 3.0 2.0) (* y!5 y!5 d!6 a!8)) (* (/ 3.0 4.0) (* y!5 d!6 d!6 b!7)) (* (/ 3.0 4.0) (* y!5 d!6 d!6 a!8)) (* (/ 1.0 8.0) (* d!6 d!6 d!6 b!7)) (* (/ 1.0 8.0) (* d!6 d!6 d!6 a!8)) (* (- (/ 1.0 2.0)) (* y!5 y!5 d!6 b!7 b!7)) (* (- 1.0) (* y!5 y!5 d!6 b!7 a!8)) (* (- (/ 1.0 2.0)) (* y!5 d!6 d!6 b!7 b!7)) (* (- 1.0) (* y!5 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 2.0)) (* y!5 d!6 d!6 a!8 a!8)) (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 b!7 b!7)) (* (- (/ 1.0 4.0)) (* d!6 d!6 d!6 b!7 a!8)) (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6 a!8 a!8)))))
 (let ((?x1255 (+ (* (/ 1.0 32.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 128.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 8.0)) (* y!5 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 4.0)) (* y!5 d!6 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* d!6 d!6 b!7 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* d!6 d!6 b!7 b!7 a!8 a!8)))))
 (let ((?x1234 (+ (* (- (/ 1.0 4.0)) (* d!6 b!7)) (* (/ 1.0 2.0) (* y!5 b!7 a!8 a!8 a!8)) (* (/ 3.0 4.0) (* d!6 b!7 b!7 a!8 a!8)) (* (/ 3.0 4.0) (* d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 4.0) (* d!6 b!7 b!7 b!7 b!7)) (* (/ 3.0 2.0) (* y!5 b!7 b!7 a!8 a!8)) (* (/ 3.0 2.0) (* y!5 b!7 b!7 b!7 a!8)) (* (/ 1.0 2.0) (* y!5 b!7 b!7 b!7 b!7)) (* (/ 1.0 4.0) (* d!6 b!7 a!8 a!8 a!8)))))
 (let ((?x1166 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1214 (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x1149 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1212 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1207 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1165 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 y00)))
 (let ((?x1200 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x1203 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1204 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1199 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x1164 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1195 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1147 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a00)))
 (let ((?x190 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 y00)))
 (let ((?x1196 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x1194 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x188 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x1189 (* y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x1187 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1403 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x1183 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a00)))
 (let ((?x1181 (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 y00)))
 (let ((?x1413 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x771 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x416 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a00)))
 (let ((?x789 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 y00)))
 (let ((?x397 (* y!5 y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x599 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8 a!8 a!8 a!8)))
 (let ((?x432 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a00)))
 (let ((?x1409 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 y00)))
 (let ((?x1407 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8)))
 (let ((?x1424 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 a!8)))
 (let ((?x1216 (+ (* (/ 1.0 256.0) ?x1424) (* (- (/ 1.0 128.0)) ?x1407) (* (/ 1.0 128.0) ?x1409) (* (- (/ 1.0 256.0)) ?x432) (* (- (/ 1.0 128.0)) ?x599) (* (/ 1.0 64.0) ?x397) (* (- (/ 1.0 64.0)) ?x789) (* (/ 1.0 128.0) ?x416) (* (- (/ 1.0 64.0)) ?x771) (* (/ 1.0 32.0) ?x1413) (* (- (/ 1.0 32.0)) ?x1181) (* (/ 1.0 64.0) ?x1183) (* (/ 1.0 32.0) ?x1403) (* (- (/ 1.0 16.0)) ?x1187) (* (/ 1.0 16.0) ?x1189) (* (- (/ 1.0 32.0)) ?x188) (* (- (/ 1.0 512.0)) ?x1194) (* (/ 1.0 256.0) ?x1196) (* (- (/ 1.0 256.0)) ?x190) (* (/ 1.0 512.0) ?x1147) (* (/ 1.0 256.0) ?x1195) (* (- (/ 1.0 128.0)) ?x1164) (* (/ 1.0 128.0) ?x1199) (* (- (/ 1.0 256.0)) ?x1204) (* (/ 1.0 128.0) ?x1203) (* (- (/ 1.0 64.0)) ?x1200) (* (/ 1.0 64.0) ?x1165) (* (- (/ 1.0 128.0)) ?x1207) (* (- (/ 1.0 64.0)) ?x1212) (* (/ 1.0 32.0) ?x1149) (* (- (/ 1.0 32.0)) ?x1214) (* (/ 1.0 64.0) ?x1166))))
 (let ((?x734 (* d!6 a!8)))
 (let ((?x467 (+ ?x734 (* (- 2.0) (* y!5 b!7)) (* 2.0 ?x482) (* (- 1.0) (* d!6 a00)))))
 (let (($x1101 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x101 (* 2.0 (* y!5 b00))) 0.0)))
 (let (($x1056 (and $x1101 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x467 0.0) (or (not (= ?x1216 0.0)) (not (= (* ?x1234 ?x1255 ?x380 ?x1095) 0.0))))))
 (let (($x996 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x148 (* b y00)))
 (let ((?x124 (* y b)))
 (let ((?x185 (* (- 1.0) ?x124)))
 (let ((?x118 (* d a)))
 (let ((?x152 (* (/ 1.0 2.0) ?x118)))
 (let ((?x237 (+ ?x152 ?x185 ?x148 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x1520 (+ ?x316 ?x344 (* y y y b) (* (/ 3.0 2.0) (* y y d b)) (* (/ 3.0 2.0) (* y y d a)) (* (/ 3.0 4.0) (* y d d b)) (* (/ 3.0 4.0) (* y d d a)) (* (/ 1.0 8.0) (* d d d b)) (* (/ 1.0 8.0) (* d d d a)) (* (- (/ 1.0 2.0)) (* y y d b b)) (* (- 1.0) (* y y d b a)) (* (- (/ 1.0 2.0)) (* y d d b b)) (* (- 1.0) (* y d d b a)) (* (- (/ 1.0 2.0)) (* y d d a a)) (* (- (/ 1.0 8.0)) (* d d d b b)) (* (- (/ 1.0 4.0)) (* d d d b a)) (* (- (/ 1.0 8.0)) (* d d d a a)))))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x1128 (+ ?x282 ?x311 (* (/ 1.0 32.0) (* y y d d d b b b b)) (* (/ 1.0 16.0) (* y y d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b b b)) (* (/ 1.0 16.0) (* y d d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b a a)) (* (/ 1.0 128.0) (* d d d d d b b b b)) (* (/ 1.0 64.0) (* d d d d d b b b a)) (* (/ 1.0 128.0) (* d d d d d b b a a)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 4.0)) (* y d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b b b)) (* (- (/ 1.0 8.0)) (* d d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b a a)))))
 (let ((?x272 (* (/ 1.0 2.0) (* y b a a a))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x801 (+ ?x257 ?x272 (* (/ 3.0 4.0) (* d b b a a)) (* (/ 3.0 4.0) (* d b b b a)) (* (/ 1.0 4.0) (* d b b b b)) (* (/ 3.0 2.0) (* y b b a a)) (* (/ 3.0 2.0) (* y b b b a)) (* (/ 1.0 2.0) (* y b b b b)) (* (/ 1.0 4.0) (* d b a a a)))))
 (let ((?x715 (* y y y y d d d b b b a a a a a a a a00)))
 (let ((?x705 (* y y y y d d b b b b a a a a a a a y00)))
 (let ((?x695 (* y y y y y d d b b b b a a a a a a a)))
 (let ((?x685 (* y y y y d d d b b b a a a a a a a a)))
 (let ((?x675 (* y y y d d d d b b b a a a a a00)))
 (let ((?x665 (* y y y d d d b b b b a a a a y00)))
 (let ((?x655 (* y y y y d d d b b b b a a a a)))
 (let ((?x645 (* y y y d d d d b b b a a a a a)))
 (let ((?x635 (* y y y y y d d d d d b b b a a a a a a a a00)))
 (let ((?x625 (* y y y y y d d d d b b b b a a a a a a a y00)))
 (let ((?x615 (* y y y y y y d d d d b b b b a a a a a a a)))
 (let ((?x605 (* y y y y y d d d d d b b b a a a a a a a a)))
 (let ((?x595 (* y y y y d d d d d d b b b a a a a a00)))
 (let ((?x584 (* y y y y d d d d d b b b b a a a a y00)))
 (let ((?x574 (* y y y y y d d d d d b b b b a a a a)))
 (let ((?x564 (* y y y y d d d d d d b b b a a a a a)))
 (let ((?x553 (* y y y y y d d b b b a a a a a a a00)))
 (let ((?x543 (* y y y y y d b b b b a a a a a a y00)))
 (let ((?x532 (* y y y y y y d b b b b a a a a a a)))
 (let ((?x521 (* y y y y y d d b b b a a a a a a a)))
 (let ((?x511 (* y y y y d d d b b b a a a a00)))
 (let ((?x501 (* y y y y d d b b b b a a a y00)))
 (let ((?x491 (* y y y y y d d b b b b a a a)))
 (let ((?x480 (* y y y y d d d b b b a a a a)))
 (let ((?x470 (* y y y y y y d d d d b b b a a a a a a a00)))
 (let ((?x460 (* y y y y y y d d d b b b b a a a a a a y00)))
 (let ((?x449 (* y y y y y y y d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y y y y d d d d b b b a a a a a a a)))
 (let ((?x428 (* y y y y y d d d d d b b b a a a a00)))
 (let ((?x417 (* y y y y y d d d d b b b b a a a y00)))
 (let ((?x406 (* y y y y y y d d d d b b b b a a a)))
 (let ((?x395 (* y y y y y d d d d d b b b a a a a)))
 (let ((?x624 (+ (* (/ 1.0 256.0) ?x395) (* (- (/ 1.0 128.0)) ?x406) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 256.0)) ?x428) (* (- (/ 1.0 128.0)) ?x438) (* (/ 1.0 64.0) ?x449) (* (- (/ 1.0 64.0)) ?x460) (* (/ 1.0 128.0) ?x470) (* (- (/ 1.0 64.0)) ?x480) (* (/ 1.0 32.0) ?x491) (* (- (/ 1.0 32.0)) ?x501) (* (/ 1.0 64.0) ?x511) (* (/ 1.0 32.0) ?x521) (* (- (/ 1.0 16.0)) ?x532) (* (/ 1.0 16.0) ?x543) (* (- (/ 1.0 32.0)) ?x553) (* (- (/ 1.0 512.0)) ?x564) (* (/ 1.0 256.0) ?x574) (* (- (/ 1.0 256.0)) ?x584) (* (/ 1.0 512.0) ?x595) (* (/ 1.0 256.0) ?x605) (* (- (/ 1.0 128.0)) ?x615) (* (/ 1.0 128.0) ?x625) (* (- (/ 1.0 256.0)) ?x635) (* (/ 1.0 128.0) ?x645) (* (- (/ 1.0 64.0)) ?x655) (* (/ 1.0 64.0) ?x665) (* (- (/ 1.0 128.0)) ?x675) (* (- (/ 1.0 64.0)) ?x685) (* (/ 1.0 32.0) ?x695) (* (- (/ 1.0 32.0)) ?x705) (* (/ 1.0 64.0) ?x715))))
 (let (($x617 (not (= ?x624 0.0))))
 (let (($x178 (= (+ ?x118 (* (- 2.0) ?x124) (* 2.0 ?x148) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x104 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x133 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x101 (* 2.0 (* y b00))) 0.0)))
 (and $x133 $x104 $x178 (or $x617 (not (= (* ?x801 ?x1128 ?x1520 ?x237) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x921 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x48 (* a00 d)))
 (let ((?x735 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x594 (* y00 b)))
 (let ((?x786 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x594 ?x735)))
 (let ((?x552 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x72 (+ a b)))
 (let ((?x902 (+ (* ?x72 ?x552 ?x552 ?x552) (* (- (/ 1.0 2.0)) (* ?x72 ?x72 ?x552 ?x552 d)))))
 (let ((?x867 (+ (* (/ 1.0 32.0) (* ?x72 ?x72 ?x552 ?x552 d d d b b)) (* (- (/ 1.0 8.0)) (* ?x72 ?x72 ?x552 d b b)))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x913 (* (+ ?x257 (* (/ 1.0 2.0) (* ?x72 ?x72 ?x72 ?x552 b))) ?x867 ?x902 ?x786)))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x838 (* (+ ?x257 (* (/ 1.0 2.0) (* y b a a a))) (+ ?x282 ?x311) (+ ?x316 ?x344) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x594 ?x735))))
 (let ((?x124 (* y b)))
 (let ((?x143 (* (- 2.0) ?x124)))
 (let ((?x118 (* d a)))
 (let ((?x30 (* a00 d00)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let (($x1482 (= (+ ?x101 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x1482 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x118 ?x143 (* 2.0 ?x594) (* (- 1.0) ?x48)) 0.0) (or (not (= ?x838 0.0)) (not (= ?x913 0.0))))))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x990 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x148 (* b y00)))
 (let ((?x124 (* y b)))
 (let ((?x185 (* (- 1.0) ?x124)))
 (let ((?x118 (* d a)))
 (let ((?x152 (* (/ 1.0 2.0) ?x118)))
 (let ((?x237 (+ ?x152 ?x185 ?x148 (* (- (/ 1.0 2.0)) (* d a00)))))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x1520 (+ ?x316 ?x344 (* y y y b) (* (/ 3.0 2.0) (* y y d b)) (* (/ 3.0 2.0) (* y y d a)) (* (/ 3.0 4.0) (* y d d b)) (* (/ 3.0 4.0) (* y d d a)) (* (/ 1.0 8.0) (* d d d b)) (* (/ 1.0 8.0) (* d d d a)) (* (- (/ 1.0 2.0)) (* y y d b b)) (* (- 1.0) (* y y d b a)) (* (- (/ 1.0 2.0)) (* y d d b b)) (* (- 1.0) (* y d d b a)) (* (- (/ 1.0 2.0)) (* y d d a a)) (* (- (/ 1.0 8.0)) (* d d d b b)) (* (- (/ 1.0 4.0)) (* d d d b a)) (* (- (/ 1.0 8.0)) (* d d d a a)))))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x1128 (+ ?x282 ?x311 (* (/ 1.0 32.0) (* y y d d d b b b b)) (* (/ 1.0 16.0) (* y y d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b b b)) (* (/ 1.0 16.0) (* y d d d d b b b a)) (* (/ 1.0 32.0) (* y d d d d b b a a)) (* (/ 1.0 128.0) (* d d d d d b b b b)) (* (/ 1.0 64.0) (* d d d d d b b b a)) (* (/ 1.0 128.0) (* d d d d d b b a a)) (* (- (/ 1.0 8.0)) (* y d b b b b)) (* (- (/ 1.0 4.0)) (* y d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b b b)) (* (- (/ 1.0 8.0)) (* d d b b b a)) (* (- (/ 1.0 16.0)) (* d d b b a a)))))
 (let ((?x272 (* (/ 1.0 2.0) (* y b a a a))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x801 (+ ?x257 ?x272 (* (/ 3.0 4.0) (* d b b a a)) (* (/ 3.0 4.0) (* d b b b a)) (* (/ 1.0 4.0) (* d b b b b)) (* (/ 3.0 2.0) (* y b b a a)) (* (/ 3.0 2.0) (* y b b b a)) (* (/ 1.0 2.0) (* y b b b b)) (* (/ 1.0 4.0) (* d b a a a)))))
 (let ((?x715 (* y y y y d d d b b b a a a a a a a a00)))
 (let ((?x705 (* y y y y d d b b b b a a a a a a a y00)))
 (let ((?x695 (* y y y y y d d b b b b a a a a a a a)))
 (let ((?x685 (* y y y y d d d b b b a a a a a a a a)))
 (let ((?x675 (* y y y d d d d b b b a a a a a00)))
 (let ((?x665 (* y y y d d d b b b b a a a a y00)))
 (let ((?x655 (* y y y y d d d b b b b a a a a)))
 (let ((?x645 (* y y y d d d d b b b a a a a a)))
 (let ((?x635 (* y y y y y d d d d d b b b a a a a a a a a00)))
 (let ((?x625 (* y y y y y d d d d b b b b a a a a a a a y00)))
 (let ((?x615 (* y y y y y y d d d d b b b b a a a a a a a)))
 (let ((?x605 (* y y y y y d d d d d b b b a a a a a a a a)))
 (let ((?x595 (* y y y y d d d d d d b b b a a a a a00)))
 (let ((?x584 (* y y y y d d d d d b b b b a a a a y00)))
 (let ((?x574 (* y y y y y d d d d d b b b b a a a a)))
 (let ((?x564 (* y y y y d d d d d d b b b a a a a a)))
 (let ((?x553 (* y y y y y d d b b b a a a a a a a00)))
 (let ((?x543 (* y y y y y d b b b b a a a a a a y00)))
 (let ((?x532 (* y y y y y y d b b b b a a a a a a)))
 (let ((?x521 (* y y y y y d d b b b a a a a a a a)))
 (let ((?x511 (* y y y y d d d b b b a a a a00)))
 (let ((?x501 (* y y y y d d b b b b a a a y00)))
 (let ((?x491 (* y y y y y d d b b b b a a a)))
 (let ((?x480 (* y y y y d d d b b b a a a a)))
 (let ((?x470 (* y y y y y y d d d d b b b a a a a a a a00)))
 (let ((?x460 (* y y y y y y d d d b b b b a a a a a a y00)))
 (let ((?x449 (* y y y y y y y d d d b b b b a a a a a a)))
 (let ((?x438 (* y y y y y y d d d d b b b a a a a a a a)))
 (let ((?x428 (* y y y y y d d d d d b b b a a a a00)))
 (let ((?x417 (* y y y y y d d d d b b b b a a a y00)))
 (let ((?x406 (* y y y y y y d d d d b b b b a a a)))
 (let ((?x395 (* y y y y y d d d d d b b b a a a a)))
 (let ((?x624 (+ (* (/ 1.0 256.0) ?x395) (* (- (/ 1.0 128.0)) ?x406) (* (/ 1.0 128.0) ?x417) (* (- (/ 1.0 256.0)) ?x428) (* (- (/ 1.0 128.0)) ?x438) (* (/ 1.0 64.0) ?x449) (* (- (/ 1.0 64.0)) ?x460) (* (/ 1.0 128.0) ?x470) (* (- (/ 1.0 64.0)) ?x480) (* (/ 1.0 32.0) ?x491) (* (- (/ 1.0 32.0)) ?x501) (* (/ 1.0 64.0) ?x511) (* (/ 1.0 32.0) ?x521) (* (- (/ 1.0 16.0)) ?x532) (* (/ 1.0 16.0) ?x543) (* (- (/ 1.0 32.0)) ?x553) (* (- (/ 1.0 512.0)) ?x564) (* (/ 1.0 256.0) ?x574) (* (- (/ 1.0 256.0)) ?x584) (* (/ 1.0 512.0) ?x595) (* (/ 1.0 256.0) ?x605) (* (- (/ 1.0 128.0)) ?x615) (* (/ 1.0 128.0) ?x625) (* (- (/ 1.0 256.0)) ?x635) (* (/ 1.0 128.0) ?x645) (* (- (/ 1.0 64.0)) ?x655) (* (/ 1.0 64.0) ?x665) (* (- (/ 1.0 128.0)) ?x675) (* (- (/ 1.0 64.0)) ?x685) (* (/ 1.0 32.0) ?x695) (* (- (/ 1.0 32.0)) ?x705) (* (/ 1.0 64.0) ?x715))))
 (let (($x617 (not (= ?x624 0.0))))
 (let (($x178 (= (+ ?x118 (* (- 2.0) ?x124) (* 2.0 ?x148) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x104 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x133 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x101 (* 2.0 (* y b00))) 0.0)))
 (let (($x1539 (and $x133 $x104 $x178 (or $x617 (not (= (* ?x801 ?x1128 ?x1520 ?x237) 0.0))))))
 (let ((?x48 (* a00 d)))
 (let ((?x735 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x594 (* y00 b)))
 (let ((?x786 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x594 ?x735)))
 (let ((?x552 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x72 (+ a b)))
 (let ((?x902 (+ (* ?x72 ?x552 ?x552 ?x552) (* (- (/ 1.0 2.0)) (* ?x72 ?x72 ?x552 ?x552 d)))))
 (let ((?x867 (+ (* (/ 1.0 32.0) (* ?x72 ?x72 ?x552 ?x552 d d d b b)) (* (- (/ 1.0 8.0)) (* ?x72 ?x72 ?x552 d b b)))))
 (let ((?x913 (* (+ ?x257 (* (/ 1.0 2.0) (* ?x72 ?x72 ?x72 ?x552 b))) ?x867 ?x902 ?x786)))
 (let ((?x838 (* (+ ?x257 ?x272) (+ ?x282 ?x311) (+ ?x316 ?x344) (+ ?x152 ?x185 ?x594 ?x735))))
 (let (($x1482 (= (+ ?x101 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x848 (and $x1482 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x118 (* (- 2.0) ?x124) (* 2.0 ?x594) (* (- 1.0) ?x48)) 0.0) (or (not (= ?x838 0.0)) (not (= ?x913 0.0))))))
 (rewrite (= $x848 $x1539))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x92 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x51 (/ d 2.0)))
 (let ((?x74 (+ y ?x51)))
 (let ((?x72 (+ a b)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x83 (- (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x51 ?x51 ?x74 ?x74) (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x74))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x78 (- (+ (- (* ?x72 ?x51) (* 2.0 ?x53 ?x74)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x87 (* ?x78 (+ (* (- 1.0) ?x53 ?x51) (* ?x72 ?x72 ?x72 ?x53 ?x74)) ?x83 (- (* ?x72 ?x74 ?x74 ?x74) (* ?x72 ?x72 ?x51 ?x74 ?x74)))))
 (let ((?x65 (- (* a a ?x53 ?x53 ?x51 ?x51 ?x51 y y) (* a a ?x53 ?x53 ?x51 y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x69 (* ?x59 (+ (* (- 1.0) ?x53 ?x51) (* a a a ?x53 y)) ?x65 (- (* a y y y) (* a a ?x51 y y)))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x69 0.0)) (not (= ?x87 0.0)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x575 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x48 (* a00 d)))
 (let ((?x735 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x594 (* y00 b)))
 (let ((?x786 (+ (* (/ 1.0 2.0) (* (+ a b) d)) (* (- 1.0) (* (+ y (* (/ 1.0 2.0) d)) b)) ?x594 ?x735)))
 (let ((?x552 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x72 (+ a b)))
 (let ((?x902 (+ (* ?x72 ?x552 ?x552 ?x552) (* (- (/ 1.0 2.0)) (* ?x72 ?x72 ?x552 ?x552 d)))))
 (let ((?x867 (+ (* (/ 1.0 32.0) (* ?x72 ?x72 ?x552 ?x552 d d d b b)) (* (- (/ 1.0 8.0)) (* ?x72 ?x72 ?x552 d b b)))))
 (let ((?x257 (* (- (/ 1.0 4.0)) (* d b))))
 (let ((?x913 (* (+ ?x257 (* (/ 1.0 2.0) (* ?x72 ?x72 ?x72 ?x552 b))) ?x867 ?x902 ?x786)))
 (let ((?x344 (* (- (/ 1.0 2.0)) (* y y d a a))))
 (let ((?x316 (* y y y a)))
 (let ((?x311 (* (- (/ 1.0 8.0)) (* y d b b a a))))
 (let ((?x282 (* (/ 1.0 32.0) (* y y d d d b b a a))))
 (let ((?x838 (* (+ ?x257 (* (/ 1.0 2.0) (* y b a a a))) (+ ?x282 ?x311) (+ ?x316 ?x344) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x594 ?x735))))
 (let ((?x124 (* y b)))
 (let ((?x143 (* (- 2.0) ?x124)))
 (let ((?x118 (* d a)))
 (let ((?x30 (* a00 d00)))
 (let ((?x101 (* (- 2.0) (* b00 y00))))
 (let (($x1482 (= (+ ?x101 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x848 (and $x1482 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) (= (+ ?x118 ?x143 (* 2.0 ?x594) (* (- 1.0) ?x48)) 0.0) (or (not (= ?x838 0.0)) (not (= ?x913 0.0))))))
 (let ((?x51 (/ d 2.0)))
 (let ((?x74 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x83 (- (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x51 ?x51 ?x74 ?x74) (* ?x72 ?x72 ?x53 ?x53 ?x51 ?x74))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x78 (- (+ (- (* ?x72 ?x51) (* 2.0 ?x53 ?x74)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x87 (* ?x78 (+ (* (- 1.0) ?x53 ?x51) (* ?x72 ?x72 ?x72 ?x53 ?x74)) ?x83 (- (* ?x72 ?x74 ?x74 ?x74) (* ?x72 ?x72 ?x51 ?x74 ?x74)))))
 (let ((?x65 (- (* a a ?x53 ?x53 ?x51 ?x51 ?x51 y y) (* a a ?x53 ?x53 ?x51 y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x69 (* ?x59 (+ (* (- 1.0) ?x53 ?x51) (* a a a ?x53 y)) ?x65 (- (* a y y y) (* a a ?x51 y y)))))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x91 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= ?x69 0.0)) (not (= ?x87 0.0))))))
 (rewrite (= $x91 $x848)))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x93 (asserted $x92)))
 (let ((@x530 (mp (mp @x93 (quant-intro (proof-bind ?x575) (= $x92 $x921)) $x921) (quant-intro (proof-bind ?x990) (= $x921 $x996)) $x996)))
 (let ((@x581 (mp (mp~ @x530 (sk (~ $x996 $x1056)) $x1056) (rewrite (= $x1056 $x773)) $x773)))
 (let ((@x986 (and-elim @x581 $x186)))
 (let (($x1313 (<= ?x920 0.0)))
 (let (($x1312 (= 0.0 ?x920)))
 (let ((@x355 (mp @x986 (symm (commutativity (= $x1312 $x186)) (= $x186 $x1312)) $x1312)))
 (let ((@x360 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1312) $x1313)) @x355 $x1313)))
 (let (($x535 (>= ?x920 0.0)))
 (let ((@x199 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1312) $x535)) @x355 $x535)))
 (let (($x1328 (<= ?x299 0.0)))
 (let (($x1090 (>= ?x299 0.0)))
 (let ((@x464 ((_ th-lemma arith) (lemma ((_ th-lemma arith) @x199 (hypothesis (not $x1090)) false) $x1090) (lemma ((_ th-lemma arith) (hypothesis (not $x1328)) @x360 false) $x1328) @x199 @x360 (= ?x299 ?x920))))
 (let (($x567 (or (not $x123) $x537)))
 (let ((@x454 (unit-resolution ((_ th-lemma arith) $x567) (hypothesis $x223) (hypothesis $x123) false)))
 (let ((@x518 (unit-resolution (and-elim @x581 $x221) (unit-resolution (lemma @x454 $x567) (trans* @x464 @x986 $x123) $x537) $x748)))
 (let (($x661 (<= ?x495 0.0)))
 (let ((@x137 (unit-resolution ((_ th-lemma arith) (or (not $x1313) (not $x535) $x661)) @x360 @x199 (hypothesis (not $x661)) false)))
 (let ((@x1472 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x108 (not $x661) $x767)) (lemma @x137 $x661) (mp @x518 (monotonicity @x483 (= $x748 $x473)) $x473) $x767)))
 (unit-resolution ((_ th-lemma arith) (or (not $x1313) (not $x535) $x906)) @x360 @x199 @x1472 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       26
 :arith-eq-adapter                22
 :arith-bound-propagations-cheap  22
 :arith-conflicts                 58
 :arith-diseq                     31
 :arith-fixed-eqs                 1
 :arith-grobner-calls             3
 :arith-grobner-conflicts         2
 :arith-horner-calls              3
 :arith-horner-cross-nested-forms 140
 :arith-lower                     48
 :arith-make-feasible             37
 :arith-max-columns               105
 :arith-max-rows                  9
 :arith-nla-explanations          16
 :arith-nla-lemmas                56
 :arith-propagations              22
 :arith-upper                     40
 :conflicts                       7
 :decisions                       49
 :del-clause                      63
 :final-checks                    21
 :max-memory                      4.32
 :memory                          1.17
 :mk-bool-var                     128
 :mk-clause                       95
 :num-allocs                      15506866999.00
 :num-checks                      1
 :propagations                    44
 :rlimit-count                    9387
 :time                            16.42
 :total-time                      16.43)
