unsat
((set-logic NRA)
(proof
(let (($x236 (exists ((x Real) (y Real) )(! (let ((?x61 (* x00 y00)))
 (let ((?x210 (* y x)))
 (let ((?x173 (* (- 1.0) ?x210)))
 (let ((?x213 (+ ?x173 ?x61 z00 x)))
 (let ((?x214 (* (/ 1.0 2.0) y)))
 (let ((?x206 (+ (- (/ 1.0 2.0)) ?x214)))
 (let ((?x208 (* ?x206 x)))
 (let ((?x203 (* 2.0 ?x208)))
 (let ((?x175 (+ ?x203 ?x173 x)))
 (let ((?x227 (* ?x206 ?x175 ?x213)))
 (let (($x231 (= ?x227 0.0)))
 (not $x231)))))))))))) :qid k!28))
 ))
 (let (($x320 (exists ((x Real) (y Real) )(! false :qid k!28))
 ))
 (let ((?x321 (lambda ((x Real) (y Real) )(let ((?x61 (* x00 y00)))
 (let ((?x210 (* y x)))
 (let ((?x173 (* (- 1.0) ?x210)))
 (let ((?x213 (+ ?x173 ?x61 z00 x)))
 (let ((?x214 (* (/ 1.0 2.0) y)))
 (let ((?x206 (+ (- (/ 1.0 2.0)) ?x214)))
 (let ((?x208 (* ?x206 x)))
 (let ((?x203 (* 2.0 ?x208)))
 (let ((?x175 (+ ?x203 ?x173 x)))
 (let ((?x227 (* ?x206 ?x175 ?x213)))
 (let (($x231 (= ?x227 0.0)))
 (let (($x235 (not $x231)))
 (let ((?x294 (+ (* (- 1.0) x) ?x210)))
 (let ((?x283 (+ (* 2.0 (* (- (/ 1.0 2.0)) x)) (* 2.0 (* (/ 1.0 2.0) ?x210)))))
 (let ((?x268 (* (/ 1.0 2.0) ?x210)))
 (let ((?x274 (* (- (/ 1.0 2.0)) x)))
 (let ((?x267 (+ ?x274 ?x268)))
 (let ((?x250 (+ ?x274 (* ?x214 x))))
 (let ((@x264 (trans (rewrite (= ?x208 ?x250)) (rewrite (= ?x250 ?x267)) (= ?x208 ?x267))))
 (let ((@x284 (trans (monotonicity @x264 (= ?x203 (* 2.0 ?x267))) (rewrite (= (* 2.0 ?x267) ?x283)) (= ?x203 ?x283))))
 (let ((@x285 (monotonicity (trans @x284 (rewrite (= ?x283 ?x294)) (= ?x203 ?x294)) (= ?x175 (+ ?x294 ?x173 x)))))
 (let ((@x287 (monotonicity (trans @x285 (rewrite (= (+ ?x294 ?x173 x) 0.0)) (= ?x175 0.0)) (rewrite (= ?x213 (+ x z00 ?x61 ?x173))) (= ?x227 (* ?x206 0.0 (+ x z00 ?x61 ?x173))))))
 (let ((@x310 (trans @x287 (rewrite (= (* ?x206 0.0 (+ x z00 ?x61 ?x173)) 0.0)) $x231)))
 (let ((@x318 (trans (monotonicity @x310 (= $x231 (= 0.0 0.0))) (rewrite (= (= 0.0 0.0) true)) (= $x231 true))))
 (trans (monotonicity @x318 (= $x235 (not true))) (rewrite (= (not true) false)) (= $x235 false)))))))))))))))))))))))))))
 ))
 (let ((@x326 (trans (quant-intro (proof-bind ?x321) (= $x236 $x320)) (elim-unused (= $x320 false)) (= $x236 false))))
 (let (($x254 (exists ((x Real) (y Real) (z Real) )(! (let ((?x81 (* (- 1.0) z00)))
 (let ((?x67 (* y x)))
 (let ((?x61 (* x00 y00)))
 (let ((?x62 (* (- 1.0) ?x61)))
 (let ((?x167 (+ ?x62 ?x67 z ?x81)))
 (let ((?x217 (+ ?x62 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x81)))
 (let ((?x197 (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y))))
 (let ((?x40 (+ z x)))
 (let (($x228 (or (not (= (* ?x40 ?x197 ?x217) 0.0)) (not (= (* ?x167 z y) 0.0)))))
 (and (= ?x167 0.0) $x228)))))))))) :qid k!28))
 ))
 (let (($x53 (exists ((x Real) (y Real) (z Real) )(! (let ((?x44 (/ y 2.0)))
 (let ((?x24 (- 1.0)))
 (let ((?x48 (* (- (+ (* ?x24 x00 y00) (* 2.0 x ?x44) z) z00) ?x24 ?x44 z)))
 (let ((?x40 (+ z x)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x41 (* (- (+ (* ?x24 x00 y00) (* 2.0 x ?x36) z x) z00) ?x24 ?x36 ?x40)))
 (and (= (- (+ (* ?x24 x00 y00) (* x y) z) z00) 0.0) (or (not (= ?x41 0.0)) (not (= ?x48 0.0)))))))))) :qid k!28))
 ))
 (let ((?x255 (lambda ((x Real) (y Real) (z Real) )(let ((?x81 (* (- 1.0) z00)))
 (let ((?x67 (* y x)))
 (let ((?x61 (* x00 y00)))
 (let ((?x62 (* (- 1.0) ?x61)))
 (let ((?x167 (+ ?x62 ?x67 z ?x81)))
 (let ((?x217 (+ ?x62 (* 2.0 (* (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y)) x)) z x ?x81)))
 (let ((?x197 (+ (- (/ 1.0 2.0)) (* (/ 1.0 2.0) y))))
 (let ((?x40 (+ z x)))
 (let (($x228 (or (not (= (* ?x40 ?x197 ?x217) 0.0)) (not (= (* ?x167 z y) 0.0)))))
 (let (($x211 (and (= ?x167 0.0) $x228)))
 (let ((?x44 (/ y 2.0)))
 (let ((?x24 (- 1.0)))
 (let ((?x48 (* (- (+ (* ?x24 x00 y00) (* 2.0 x ?x44) z) z00) ?x24 ?x44 z)))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x41 (* (- (+ (* ?x24 x00 y00) (* 2.0 x ?x36) z x) z00) ?x24 ?x36 ?x40)))
 (let (($x52 (and (= (- (+ (* ?x24 x00 y00) (* x y) z) z00) 0.0) (or (not (= ?x41 0.0)) (not (= ?x48 0.0))))))
 (rewrite (= $x52 $x211)))))))))))))))))))
 ))
 (let ((@x54 (asserted $x53)))
 (let ((@x222 (mp (mp @x54 (quant-intro (proof-bind ?x255) (= $x53 $x254)) $x254) (rewrite (= $x254 $x236)) $x236)))
 (mp @x222 @x326 false))))))))))))

(:max-memory   17.59
 :memory       17.31
 :num-allocs   56611
 :num-checks   1
 :rlimit-count 727
 :time         0.00
 :total-time   0.03)
