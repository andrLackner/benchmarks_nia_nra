unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x448 (* (- 1) s!1)))
 (let ((?x319 (* r00 r00)))
 (let ((?x3350 (* (- 3) ?x319)))
 (let ((?x3176 (+ s00 ?x3350 ?x448 (* 3 (* r!2 r!2)))))
 (let (($x2156 (<= ?x3176 0)))
 (let (($x1286 (= ?x3176 0)))
 (let ((?x428 (* 6 r!2)))
 (let ((?x2237 (+ 3 s!1 ?x428)))
 (let ((?x447 (+ ?x448 x!0)))
 (let ((?x1453 (+ 1 r!2)))
 (let ((?x2811 (* (- 12) (* r00 r00 ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237))))
 (let ((?x2951 (* 12 (* r00 r00 r00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237))))
 (let ((?x1678 (* s!1 r!2)))
 (let ((?x3482 (* 9 ?x1678)))
 (let ((?x4779 (+ (* 24 (* s!1 x!0 r!2 r!2 r!2)) (* (- 18) (* x00 s!1)) (* 12 (* r00 r00 x!0 x!0 r!2 r!2)) (* (- 12) (* r00 r00 s!1 x!0)) (* (- 18) (* r00 s!1 r!2)) (* (- 36) (* r00 r00 s!1)) (* (- 6) (* x!0 x!0 x!0 x!0)) (* (- 18) (* x00 s!1 x!0 x!0)) (* (- 7) (* s!1 s!1 s!1 s!1)) (* (- 7) (* s00 x!0 x!0)) (* 2 (* ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237 ?x2237)) (* 7 (* s00 s!1 x!0)) (* 6 (* ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x447 ?x2237 ?x2237 ?x2237)) (* 24 (* r00 r00 x!0 x!0 r!2)) (* (- 24) (* s00 x!0 r!2 r!2)) (* 12 (* r00 r00 s!1 s!1 r!2)) (* (- 4) (* s00 s!1 s!1 r!2 r!2)) ?x3482 (* 6 (* s00 r00 x!0 x!0 x!0)) (* 6 (* s!1 s!1 x!0 x!0 r!2)) (* (- 12) (* x!0 x!0 x!0 r!2 r!2)) (* 36 (* s00 r00 x!0 r!2)) (* 7 (* s00 s!1 s!1 s!1)) (* (- 7) (* s00 x!0 x!0 x!0)) (* (- 6) (* x00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237)) (* 72 (* r00 r00 r00 s!1 r!2)) (* (- 3) (* r00 s!1 x!0)) (* (- 6) (* x!0 x!0 x!0)) (* 36 (* r00 r00 r00 s!1)) (* (- 36) (* r00 r00 r00 x!0)) (* 18 (* s00 r00 x!0)) (* 18 (* s00 r00 s!1 s!1 x!0)) (* (- 6) (* s00 r00 s!1 x!0)) (* (- 7) (* s!1 s!1 x!0)) (* 13 (* s!1 x!0 x!0)) (* (- 72) (* r00 r00 r00 x!0 r!2)) (* 4 (* s00 s!1 s!1 s!1 r!2)) (* 9 (* r00 s!1 s!1 x!0)) (* 18 (* s00 s!1 x!0 r!2)) (* 12 (* s00 s!1 x!0 x!0 r!2)) (* (- 6) (* x00 s!1 x!0)) (* 26 (* s!1 x!0 x!0 r!2)) (* 10 (* s!1 s!1 s!1 r!2 r!2)) (* (- 9) (* x!0 x!0 x!0 r!2)) (* (- 7) (* s00 s!1 s!1 r!2)) (* (- 6) (* r00 s!1 x!0 r!2)) (* 3 (* r00 s!1 s!1 r!2)) (* (- 12) (* r00 r00 s!1 s!1 s!1 r!2)) (* 18 (* x00 x!0)) (* 8 (* s00 s!1 x!0 r!2 r!2)) (* (- 36) (* x00 s!1 r!2)) (* (- 21) (* s!1 s!1)) (* 3 (* r00 x!0 x!0)) (* (- 36) (* s00 r00 s!1 r!2)) (* 6 (* x00 s!1 s!1 r!2)) (* 12 (* r00 r00 r00 s!1 s!1 s!1)) (* (- 36) (* r00 r00 r00 s!1 s!1 x!0)) (* (- 12) (* r00 r00 r00 x!0 x!0 x!0)) (* 36 (* r00 r00 r00 s!1 x!0 x!0)) (* (- 9) (* x!0 r!2)) (* (- 24) (* r00 r00 s!1 x!0 r!2 r!2)) (* (- 18) (* s00 r00 s!1)) (* (- 36) (* s!1 s!1 r!2)) (* (- 18) (* s00 r00 s!1 x!0 x!0)) (* (- 4) (* s00 x!0 x!0 x!0 r!2)) ?x2951 (* (- 6) (* r00 s00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237)) (* (- 6) (* x00 s!1 s!1 s!1)) (* 3 (* r00 x!0 x!0 x!0)) (* (- 36) (* r00 r00 s!1 x!0 r!2)) (* 21 (* s00 s!1)) (* 24 (* s00 s!1 r!2 r!2)) (* 36 (* r00 r00 s!1 s!1 x!0)) (* (- 9) (* r00 s!1)) (* 54 (* s!1 r!2 r!2)) (* (- 12) (* s!1 s!1 r!2 r!2 r!2)) (* 6 (* s00 r00 s!1 s!1 r!2)) (* (- 27) (* s!1 s!1 x!0 r!2)) (* 3 (* ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237)) (* (- 3) (* ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237 ?x2237)) (* 2 (* s!1 s!1 s!1 s!1 r!2)) (* (- 12) (* x00 s!1 x!0 r!2)) (* 39 (* s!1 x!0)) (* 4 (* s00 ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237)) (* (- 6) (* s00 r00 s!1 s!1 s!1)) (* 6 (* x00 x!0 x!0 x!0)) (* (- 3) (* r00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237)) (* 18 (* r00 x!0 r!2)) (* (- 12) (* x!0 x!0 r!2 r!2 r!2)) (* 6 (* s00 r00 x!0 x!0)) (* 6 (* s00 r00 x!0 x!0 r!2)) (* (- 6) (* s!1 s!1 s!1 x!0 r!2)) (* (- 32) (* s!1 s!1 x!0 r!2 r!2)) (* (- 4) (* s00 x!0 x!0 r!2 r!2)) (* (- 39) (* s!1 s!1 x!0 x!0)) (* 27 (* s!1 s!1 s!1 x!0)) (* (- 54) (* x!0 r!2 r!2)) ?x2811 (* (- 18) (* x!0 x!0)) (* 36 (* x00 x!0 r!2)) (* (- 12) (* s00 s!1 s!1 x!0 r!2)) (* 9 (* r00 x!0)) (* 12 (* r00 r00 s!1 s!1 r!2 r!2)) (* (- 9) (* r00 s!1 x!0 x!0)) (* (- 21) (* s00 x!0)) (* 36 (* r00 r00 x!0)) (* (- 54) (* s00 x!0 r!2)) (* (- 11) (* s00 x!0 x!0 r!2)) (* (- 12) (* r00 r00 s!1 s!1 s!1)) (* 72 (* s!1 r!2 r!2 r!2)) (* (- 36) (* r00 r00 s!1 x!0 x!0)) (* (- 72) (* x!0 r!2 r!2 r!2)) (* 12 (* r00 r00 x!0 x!0)) (* (- 3) (* r00 s!1 s!1 s!1)) (* 36 (* r00 r00 s!1 s!1 x!0 r!2)) (* 25 (* s!1 x!0 x!0 x!0)) (* 34 (* s!1 x!0 x!0 r!2 r!2)) (* 24 (* r00 r00 r00 s!1 x!0 r!2)) (* 6 (* s!1 x!0 r!2 r!2)) (* 75 (* s!1 x!0 r!2)) (* 3 (* s00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x2237 ?x2237 ?x2237)) (* (- 36) (* r00 r00 s!1 x!0 x!0 r!2)) (* (- 21) (* s00 s!1 s!1 x!0)) (* 21 (* s00 s!1 x!0 x!0)) (* 12 (* r00 r00 x!0 x!0 x!0)) (* (- 12) (* s00 r00 s!1 x!0 r!2)) (* (- 15) (* x!0 x!0 r!2 r!2)) (* 12 (* r00 r00 x!0 x!0 x!0 r!2)) (* 108 (* r00 r00 x!0 r!2)) (* (- 72) (* r00 r00 s!1 r!2 r!2)) (* 3 (* r00 x!0 x!0 r!2)) (* 6 (* x00 x!0 x!0)) (* 6 (* x00 x!0 x!0 r!2)) (* 12 (* r00 r00 r00 s!1 x!0)) (* (- 12) (* r00 r00 r00 s!1 s!1 r!2)) (* (- 12) (* r00 r00 r00 x!0 x!0)) (* (- 12) (* r00 r00 r00 x!0 x!0 r!2)) (* (- 2) (* s!1 x!0 x!0 x!0 r!2)) (* 10 (* s!1 s!1 s!1 r!2)) (* 72 (* r00 r00 x!0 r!2 r!2)) (* (- 39) (* x!0 x!0 r!2)) (* 18 (* x00 s!1 s!1 x!0)) (* 9 (* s!1 s!1 r!2 r!2)) (* (- 108) (* r00 r00 s!1 r!2)) (* 54 (* s00 s!1 r!2)))))
 (let (($x4781 (= ?x4779 0)))
 (let (($x4788 (not $x4781)))
 (let ((?x5436 (* (- 9) s!1)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x2501 (* 108 ?x1364)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4693 (* 16 ?x1202)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x4129 (* (- 432) ?x900)))
 (let ((?x868 (* r00 r00 s!1)))
 (let ((?x1700 (* 36 ?x868)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4091 (* (- 108) ?x823)))
 (let ((?x665 (* s00 r00 r00)))
 (let ((?x3063 (* (- 36) ?x665)))
 (let ((?x609 (* s00 s00)))
 (let ((?x3703 (* 51 ?x609)))
 (let ((?x540 (* r00 x00)))
 (let ((?x3451 (* 108 ?x540)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3243 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x3451 (* 108 (* x00 s!1)) ?x3703 ?x3063 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x4091 ?x1700 ?x4129 (* 216 (* s00 r00 r00 r00)) ?x4693 ?x2501 (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* x00 x!0)) ?x5436 (* 15 (* s!1 s!1)) (* 108 (* s00 r00 s!1)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* (- 108) (* s!1 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* (- 108) (* r00 x!0)) (* 108 (* s00 x!0)))))
 (let ((?x2006 (+ ?x137 (* (- 24) (* s00 r00)) (* 54 ?x540) (* 6 (* x00 s!1)) (* 15 ?x609) ?x3063 (* 2 (* s00 s00 r00)) (* (- 6) ?x823) ?x1700 (* 36 (* r00 r00 x00)) (* 54 (* x00 r!2)) (* (- 24) (* s00 r!2)) (* 24 ?x1678) ?x5436 (* (- 3) (* s!1 s!1)) (* (- 54) (* x!0 r!2)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 6) (* s!1 x!0)) (* (- 36) (* r00 x!0 r!2)) (* (- 54) (* r00 x!0)) (* 6 (* s00 x!0)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)))))
 (let (($x2364 (= ?x2006 0)))
 (let ((?x2950 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3789 (+ ?x44 (* (- 9) (* s00 r00)) (* 18 ?x540) (* 4 ?x609) (* (- 6) ?x665) (* (- 6) (* r00 s!1 r!2)) (* 6 ?x868) (* 18 (* x00 r!2)) (* (- 9) (* s00 r!2)) ?x3482 ?x2950 (* (- 2) (* s!1 s!1)) (* (- 18) (* x!0 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* (- 18) (* r00 x!0)) (* 6 (* s00 r00 r!2)))))
 (let (($x3185 (= ?x3789 0)))
 (let ((?x2980 (* 3 r!2)))
 (let ((?x2981 (* 6 x!0)))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x444 (* s00 r00)))
 (let ((?x522 (* (- 6) ?x444)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x3928 (+ ?x44 ?x518 ?x519 ?x522 ?x488 (* 4 (* s00 r!2)) (* 2 ?x1678) ?x2950 ?x2981 ?x2980 (* (- 12) (* r00 r00 r!2)))))
 (let (($x836 (= ?x3928 0)))
 (let (($x4681 (and $x1286 $x836 $x3185 $x2364 (= ?x3243 0) $x4788)))
 (let ((?x423 (+ 3 ?x428 s!1)))
 (let ((?x3348 (* (- 12) (* r00 r00 r00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423))))
 (let ((?x883 (* 12 (* r00 r00 ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423))))
 (let ((?x2959 (* r!2 s!1)))
 (let ((?x2742 (* (- 9) ?x2959)))
 (let ((?x3694 (+ (* 18 (* s!1 x!0 x!0 s00 r00)) (* (- 18) (* s!1 s!1 x!0 s00 r00)) ?x2742 (* (- 4) (* s00 ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423)) (* (- 6) (* x!0 x!0 x!0 s00 r00)) (* 12 (* r!2 s!1 x!0 s00 r00)) (* 21 (* s!1 s!1)) (* 9 (* r!2 x!0)) (* 18 (* r!2 s!1 r00)) (* (- 18) (* r!2 x!0 r00)) (* 36 (* s!1 r00 r00)) (* 21 (* x!0 s00)) (* (- 9) (* x!0 r00)) (* (- 36) (* s!1 r00 r00 r00)) (* (- 6) (* x!0 x!0 s00 r00)) (* (- 6) (* r!2 x!0 x!0 s00 r00)) (* (- 21) (* s!1 s00)) (* 9 (* s!1 r00)) (* 18 (* s!1 x00)) (* 18 (* s!1 s00 r00)) (* 36 (* r!2 s!1 s!1)) (* (- 39) (* s!1 x!0)) (* 12 (* r!2 s!1 x!0 x00)) (* 18 (* x!0 x!0)) (* (- 3) (* r!2 s!1 s!1 r00)) (* (- 54) (* r!2 s!1 s00)) (* 6 (* r!2 s!1 x!0 r00)) (* (- 36) (* x!0 r00 r00)) (* 36 (* x!0 r00 r00 r00)) (* 6 (* s!1 x!0 s00 r00)) (* (- 18) (* x!0 s00 r00)) (* (- 18) (* x!0 x00)) (* (- 6) (* x!0 x!0 x!0 x00)) (* 6 (* s!1 s!1 s!1 s00 r00)) (* (- 7) (* s!1 s!1 s!1 s00)) (* 21 (* s!1 s!1 x!0 s00)) (* (- 21) (* s!1 x!0 x!0 s00)) (* (- 36) (* r!2 x!0 s00 r00)) (* 7 (* x!0 x!0 x!0 s00)) (* (- 12) (* x!0 x!0 x!0 r00 r00)) (* (- 75) (* r!2 s!1 x!0)) (* (- 6) (* r!2 r!2 s!1 x!0)) (* 15 (* r!2 r!2 x!0 x!0)) (* 39 (* r!2 x!0 x!0)) (* (- 12) (* r!2 x!0 x!0 x!0 r00 r00)) (* 108 (* r!2 s!1 r00 r00)) (* (- 108) (* r!2 x!0 r00 r00)) (* (- 9) (* r!2 r!2 s!1 s!1)) (* 72 (* r!2 r!2 s!1 r00 r00)) (* 6 (* x!0 x!0 x!0)) (* (- 25) (* s!1 x!0 x!0 x!0)) (* 7 (* s!1 s!1 x!0)) (* (- 13) (* s!1 x!0 x!0)) (* (- 72) (* r!2 r!2 x!0 r00 r00)) (* 6 (* x!0 x!0 x!0 x!0)) (* 7 (* s!1 s!1 s!1 s!1)) (* (- 27) (* s!1 s!1 s!1 x!0)) (* 39 (* s!1 s!1 x!0 x!0)) (* (- 3) (* r!2 x!0 x!0 r00)) (* (- 18) (* s!1 s!1 x!0 x00)) (* (- 6) (* x!0 x!0 x00)) (* (- 6) (* r!2 x!0 x!0 x00)) (* 12 (* r!2 s!1 s!1 r00 r00 r00)) (* (- 12) (* s!1 x!0 r00 r00 r00)) (* (- 24) (* r!2 s!1 x!0 r00 r00 r00)) (* 12 (* x!0 x!0 r00 r00 r00)) (* 12 (* r!2 x!0 x!0 r00 r00 r00)) (* 2 (* r!2 s!1 x!0 x!0 x!0)) (* (- 6) (* r!2 s!1 s!1 s00 r00)) (* (- 10) (* r!2 s!1 s!1 s!1)) (* 27 (* r!2 s!1 s!1 x!0)) (* (- 3) (* ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423)) (* 3 (* ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423 ?x423)) (* (- 26) (* r!2 s!1 x!0 x!0)) (* 9 (* r!2 x!0 x!0 x!0)) (* (- 10) (* r!2 r!2 s!1 s!1 s!1)) (* (- 2) (* r!2 s!1 s!1 s!1 s!1)) (* 32 (* r!2 r!2 s!1 s!1 x!0)) (* 6 (* r!2 s!1 s!1 s!1 x!0)) (* (- 34) (* r!2 r!2 s!1 x!0 x!0)) (* (- 6) (* r!2 s!1 s!1 x!0 x!0)) (* 12 (* r!2 r!2 x!0 x!0 x!0)) (* 12 (* s!1 x!0 r00 r00)) (* 54 (* r!2 x!0 s00)) (* (- 7) (* s!1 x!0 s00)) (* (- 6) (* ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x447 ?x423 ?x423 ?x423)) (* (- 2) (* ?x1453 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423 ?x423)) (* 3 (* r00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423)) (* (- 72) (* r!2 s!1 r00 r00 r00)) (* 72 (* r!2 x!0 r00 r00 r00)) (* (- 12) (* r!2 r!2 s!1 s!1 r00 r00)) (* 4 (* r!2 x!0 x!0 x!0 s00)) (* (- 12) (* r!2 s!1 x!0 x!0 s00)) (* 12 (* r!2 s!1 s!1 x!0 s00)) (* 6 (* s!1 s!1 s!1 x00)) (* (- 4) (* r!2 s!1 s!1 s!1 s00)) (* 11 (* r!2 x!0 x!0 s00)) (* 7 (* x!0 x!0 s00)) (* 24 (* r!2 r!2 s!1 x!0 r00 r00)) (* 7 (* r!2 s!1 s!1 s00)) (* (- 18) (* r!2 s!1 x!0 s00)) (* 6 (* x00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423)) (* 54 (* r!2 r!2 x!0)) (* (- 54) (* r!2 r!2 s!1)) (* 3 (* s!1 x!0 r00)) (* 18 (* s!1 x!0 x!0 x00)) (* (- 24) (* r!2 x!0 x!0 r00 r00)) (* 36 (* r!2 s!1 x!0 r00 r00)) (* 12 (* r!2 r!2 r!2 s!1 s!1)) (* (- 12) (* r!2 r!2 x!0 x!0 r00 r00)) (* (- 24) (* r!2 r!2 r!2 s!1 x!0)) (* 12 (* r!2 r!2 r!2 x!0 x!0)) (* 36 (* r!2 s!1 x00)) (* (- 6) (* r!2 s!1 s!1 x00)) (* (- 3) (* x!0 x!0 r00)) (* (- 8) (* r!2 r!2 s!1 x!0 s00)) (* 4 (* r!2 r!2 x!0 x!0 s00)) (* 4 (* r!2 r!2 s!1 s!1 s00)) ?x883 (* (- 36) (* r!2 x!0 x00)) (* 6 (* r00 s00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423)) (* (- 24) (* r!2 r!2 s!1 s00)) (* 24 (* r!2 r!2 x!0 s00)) (* (- 12) (* r!2 s!1 s!1 r00 r00)) (* (- 12) (* s!1 s!1 s!1 r00 r00 r00)) (* 36 (* s!1 s!1 x!0 r00 r00 r00)) (* 36 (* r!2 s!1 s00 r00)) (* (- 36) (* s!1 x!0 x!0 r00 r00 r00)) (* 12 (* x!0 x!0 x!0 r00 r00 r00)) (* (- 3) (* s00 ?x1453 ?x1453 ?x1453 ?x447 ?x447 ?x423 ?x423 ?x423)) (* 36 (* r!2 s!1 x!0 x!0 r00 r00)) (* (- 36) (* r!2 s!1 s!1 x!0 r00 r00)) (* (- 36) (* s!1 s!1 x!0 r00 r00)) (* 12 (* r!2 s!1 s!1 s!1 r00 r00)) ?x3348 (* (- 3) (* x!0 x!0 x!0 r00)) (* 3 (* s!1 s!1 s!1 r00)) (* (- 9) (* s!1 s!1 x!0 r00)) (* 9 (* s!1 x!0 x!0 r00)) (* 12 (* s!1 s!1 s!1 r00 r00)) (* (- 12) (* x!0 x!0 r00 r00)) (* 72 (* r!2 r!2 r!2 x!0)) (* 36 (* s!1 x!0 x!0 r00 r00)) (* (- 72) (* r!2 r!2 r!2 s!1)) (* 6 (* s!1 x!0 x00)))))
 (let ((?x1394 (* (- 108) ?x1364)))
 (let ((?x1393 (* (- 16) ?x1202)))
 (let ((?x1074 (* s00 r00 r00 r00)))
 (let ((?x1389 (* (- 216) ?x1074)))
 (let ((?x901 (* 432 ?x900)))
 (let ((?x1147 (* 108 ?x823)))
 (let ((?x749 (* s00 s00 r00 r00)))
 (let ((?x750 (* 36 ?x749)))
 (let ((?x686 (* s00 s00 r00)))
 (let ((?x1030 (* 108 ?x686)))
 (let ((?x1018 (* 36 ?x665)))
 (let ((?x1383 (* (- 51) ?x609)))
 (let ((?x3793 (* s!1 r00 r00)))
 (let ((?x4107 (* (- 36) ?x3793)))
 (let ((?x1380 (* (- 108) ?x540)))
 (let ((?x531 (* s00 r00 x00)))
 (let ((?x1379 (* (- 216) ?x531)))
 (let ((?x538 (* 54 ?x444)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x3189 (* 9 s!1)))
 (let ((?x4495 (+ ?x3189 ?x1005 ?x538 ?x1379 ?x1380 (* (- 15) (* s!1 s!1)) ?x4107 ?x1383 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1018 ?x1030 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x750 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1147 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x901 (* 12 (* s!1 s!1 s00)) ?x1389 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1393 (* 216 (* x!0 x00)) ?x1394)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x714 (* (- 2) ?x686)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x582 (* 24 ?x444)))
 (let ((?x4120 (+ ?x3189 ?x1005 (* (- 24) ?x2959) (* 24 (* r!2 s00)) ?x582 ?x569 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x4107 ?x934 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1018 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x714 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x824 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x908 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x666 (* 6 ?x665)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x559 (* 9 ?x444)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x3064 (+ (* 3 s!1) ?x396 ?x2742 (* 9 (* r!2 s00)) ?x559 ?x554 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x3793) ?x622 (* 18 (* x!0 r00)) ?x666 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2871 (+ ?x2980 ?x2950 ?x2981 ?x44 ?x518 ?x519 (* 2 ?x2959) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x522 ?x488)))
 (let (($x2738 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x319)) 0)))
 (let (($x902 (and $x2738 (= ?x2871 0) (= ?x3064 0) (= ?x4120 0) (= ?x4495 0) (not (= ?x3694 0)))))
 (let (($x5838 (exists ((r Int) (s Int) (x Int) )(! (let ((?x5703 (* 6 (* s x x00))))
 (let ((?x217 (* 6 r)))
 (let ((?x1575 (+ 3 ?x217 s)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x1404 (+ ?x298 x)))
 (let ((?x1572 (+ 1 r)))
 (let ((?x5821 (* (- 12) (* r00 r00 r00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575))))
 (let ((?x5806 (* 12 (* r00 r00 ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575))))
 (let ((?x5672 (* (- 9) (* r r s s))))
 (let ((?x363 (* r s)))
 (let ((?x535 (* (- 9) ?x363)))
 (let ((?x5831 (+ (* 18 (* s x x s00 r00)) (* (- 18) (* s s x s00 r00)) ?x535 (* (- 4) (* s00 ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 6) (* x x x s00 r00)) (* 12 (* r s x s00 r00)) (* 21 (* s s)) (* 9 (* r x)) (* 18 (* r s r00)) (* (- 18) (* r x r00)) (* 36 (* s r00 r00)) (* 21 (* x s00)) (* (- 9) (* x r00)) (* (- 36) (* s r00 r00 r00)) (* (- 6) (* x x s00 r00)) (* (- 6) (* r x x s00 r00)) (* (- 21) (* s s00)) (* 9 (* s r00)) (* 18 (* s x00)) (* 18 (* s s00 r00)) (* 36 (* r s s)) (* (- 39) (* s x)) (* 12 (* r s x x00)) (* 18 (* x x)) (* (- 3) (* r s s r00)) (* (- 54) (* r s s00)) (* 6 (* r s x r00)) (* (- 36) (* x r00 r00)) (* 36 (* x r00 r00 r00)) (* 6 (* s x s00 r00)) (* (- 18) (* x s00 r00)) (* (- 18) (* x x00)) (* (- 6) (* x x x x00)) (* 6 (* s s s s00 r00)) (* (- 7) (* s s s s00)) (* 21 (* s s x s00)) (* (- 21) (* s x x s00)) (* (- 36) (* r x s00 r00)) (* 7 (* x x x s00)) (* (- 12) (* x x x r00 r00)) (* (- 75) (* r s x)) (* (- 6) (* r r s x)) (* 15 (* r r x x)) (* 39 (* r x x)) (* (- 12) (* r x x x r00 r00)) (* 108 (* r s r00 r00)) (* (- 108) (* r x r00 r00)) ?x5672 (* 72 (* r r s r00 r00)) (* 6 (* x x x)) (* (- 25) (* s x x x)) (* 7 (* s s x)) (* (- 13) (* s x x)) (* (- 72) (* r r x r00 r00)) (* 6 (* x x x x)) (* 7 (* s s s s)) (* (- 27) (* s s s x)) (* 39 (* s s x x)) (* (- 3) (* r x x r00)) (* (- 18) (* s s x x00)) (* (- 6) (* x x x00)) (* (- 6) (* r x x x00)) (* 12 (* r s s r00 r00 r00)) (* (- 12) (* s x r00 r00 r00)) (* (- 24) (* r s x r00 r00 r00)) (* 12 (* x x r00 r00 r00)) (* 12 (* r x x r00 r00 r00)) (* 2 (* r s x x x)) (* (- 6) (* r s s s00 r00)) (* (- 10) (* r s s s)) (* 27 (* r s s x)) (* (- 3) (* ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* 3 (* ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575 ?x1575)) (* (- 26) (* r s x x)) (* 9 (* r x x x)) (* (- 10) (* r r s s s)) (* (- 2) (* r s s s s)) (* 32 (* r r s s x)) (* 6 (* r s s s x)) (* (- 34) (* r r s x x)) (* (- 6) (* r s s x x)) (* 12 (* r r x x x)) (* 12 (* s x r00 r00)) (* 54 (* r x s00)) (* (- 7) (* s x s00)) (* (- 6) (* ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 2) (* ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575 ?x1575)) (* 3 (* r00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 72) (* r s r00 r00 r00)) (* 72 (* r x r00 r00 r00)) (* (- 12) (* r r s s r00 r00)) (* 4 (* r x x x s00)) (* (- 12) (* r s x x s00)) (* 12 (* r s s x s00)) (* 6 (* s s s x00)) (* (- 4) (* r s s s s00)) (* 11 (* r x x s00)) (* 7 (* x x s00)) (* 24 (* r r s x r00 r00)) (* 7 (* r s s s00)) (* (- 18) (* r s x s00)) (* 6 (* x00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* 54 (* r r x)) (* (- 54) (* r r s)) (* 3 (* s x r00)) (* 18 (* s x x x00)) (* (- 24) (* r x x r00 r00)) (* 36 (* r s x r00 r00)) (* 12 (* r r r s s)) (* (- 12) (* r r x x r00 r00)) (* (- 24) (* r r r s x)) (* 12 (* r r r x x)) (* 36 (* r s x00)) (* (- 6) (* r s s x00)) (* (- 3) (* x x r00)) (* (- 8) (* r r s x s00)) (* 4 (* r r x x s00)) (* 4 (* r r s s s00)) ?x5806 (* (- 36) (* r x x00)) (* 6 (* r00 s00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 24) (* r r s s00)) (* 24 (* r r x s00)) (* (- 12) (* r s s r00 r00)) (* (- 12) (* s s s r00 r00 r00)) (* 36 (* s s x r00 r00 r00)) (* 36 (* r s s00 r00)) (* (- 36) (* s x x r00 r00 r00)) (* 12 (* x x x r00 r00 r00)) (* (- 3) (* s00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* 36 (* r s x x r00 r00)) (* (- 36) (* r s s x r00 r00)) (* (- 36) (* s s x r00 r00)) (* 12 (* r s s s r00 r00)) ?x5821 (* (- 3) (* x x x r00)) (* 3 (* s s s r00)) (* (- 9) (* s s x r00)) (* 9 (* s x x r00)) (* 12 (* s s s r00 r00)) (* (- 12) (* x x r00 r00)) (* 72 (* r r r x)) (* 36 (* s x x r00 r00)) (* (- 72) (* r r r s)) ?x5703)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x1394 (* (- 108) ?x1364)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x1393 (* (- 16) ?x1202)))
 (let ((?x1074 (* s00 r00 r00 r00)))
 (let ((?x1389 (* (- 216) ?x1074)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x901 (* 432 ?x900)))
 (let ((?x823 (* s00 x00)))
 (let ((?x1147 (* 108 ?x823)))
 (let ((?x749 (* s00 s00 r00 r00)))
 (let ((?x750 (* 36 ?x749)))
 (let ((?x686 (* s00 s00 r00)))
 (let ((?x1030 (* 108 ?x686)))
 (let ((?x665 (* s00 r00 r00)))
 (let ((?x1018 (* 36 ?x665)))
 (let ((?x609 (* s00 s00)))
 (let ((?x1383 (* (- 51) ?x609)))
 (let ((?x583 (* s r00 r00)))
 (let ((?x882 (* (- 36) ?x583)))
 (let ((?x540 (* r00 x00)))
 (let ((?x1380 (* (- 108) ?x540)))
 (let ((?x531 (* s00 r00 x00)))
 (let ((?x1379 (* (- 216) ?x531)))
 (let ((?x444 (* s00 r00)))
 (let ((?x538 (* 54 ?x444)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1395 (+ ?x143 ?x1005 ?x538 ?x1379 ?x1380 (* (- 15) (* s s)) ?x882 ?x1383 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1018 ?x1030 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x750 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1147 (* 108 (* s x)) (* (- 108) (* x x)) ?x901 (* 12 (* s s s00)) ?x1389 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1393 (* 216 (* x x00)) ?x1394)))
 (let (($x1396 (= ?x1395 0)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x714 (* (- 2) ?x686)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x563 (* s s)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x582 (* 24 ?x444)))
 (let ((?x1097 (+ ?x143 ?x1005 (* (- 24) ?x363) (* 24 (* r s00)) ?x582 ?x569 ?x587 (* 54 (* r x)) (* 36 (* r x r00)) ?x882 ?x934 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1018 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x714 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x824 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x908 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1102 (= ?x1097 0)))
 (let ((?x666 (* 6 ?x665)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x559 (* 9 ?x444)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x763 (+ ?x47 ?x396 ?x535 (* 9 (* r s00)) ?x559 ?x554 ?x564 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x583) ?x622 (* 18 (* x r00)) ?x666 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x770 (= ?x763 0)))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x522 (* (- 6) ?x444)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x523 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x518 ?x519 (* 2 ?x363) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x522 ?x488)))
 (let (($x524 (= ?x523 0)))
 (let ((?x319 (* r00 r00)))
 (let ((?x320 (* 3 ?x319)))
 (let ((?x349 (* (- 1) s00)))
 (let (($x352 (= (+ s ?x349 (* (- 3) (* r r)) ?x320) 0)))
 (and $x352 $x524 $x770 $x1102 $x1396 (not (= ?x5831 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3433 (exists ((r Int) (s Int) (x Int) )(! (let ((?x1833 (* 6 (* x00 (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x217 (* 6 r)))
 (let ((?x1477 (+ 3 s ?x217)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x3110 (+ x ?x298)))
 (let ((?x1572 (+ 1 r)))
 (let ((?x2247 (* 12 (* r00 r00 r00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477))))
 (let ((?x3160 (* (- 12) (* r00 r00 ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477))))
 (let ((?x1707 (+ (* 6 (* x00 ?x3110 ?x3110 ?x3110)) (* (- 3) (* s00 ?x3110 ?x3110 ?x3110)) (* 2 (* ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477 ?x1477)) (* 6 (* ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 s00 ?x3110 ?x1477)) (* 3 (* r00 ?x1572 ?x3110 ?x3110)) (* (- 6) (* x00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 12 (* r00 r00 ?x1572 ?x1572 ?x3110 ?x3110)) (* 3 (* r00 ?x3110 ?x1477)) (* (- 3) (* ?x1572 ?x1572 ?x3110 ?x3110)) (* 3 (* ?x3110 ?x3110 ?x3110 ?x1477)) (* (- 6) (* ?x3110 ?x3110 ?x1477)) (* (- 6) (* ?x3110 ?x3110 ?x3110 ?x3110)) (* 6 (* x00 ?x1572 ?x3110 ?x3110)) (* (- 12) (* r00 r00 r00 ?x1572 ?x3110 ?x3110)) (* (- 2) (* ?x1572 ?x3110 ?x3110 ?x3110 ?x1477)) (* (- 3) (* s00 ?x3110 ?x1477)) ?x3160 (* (- 12) (* r00 r00 r00 ?x3110 ?x1477)) (* (- 4) (* s00 ?x1572 ?x3110 ?x3110 ?x3110)) (* (- 6) (* r00 s00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 3) (* s00 ?x1572 ?x3110 ?x3110)) (* (- 3) (* ?x1572 ?x3110 ?x1477)) (* 3 (* ?x1572 ?x3110 ?x3110 ?x1477)) (* (- 3) (* r00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 2) (* ?x1572 ?x1572 ?x3110 ?x3110 ?x1477)) (* 3 (* r00 ?x3110 ?x3110 ?x3110)) (* 3 (* s00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) ?x2247 (* 12 (* r00 r00 ?x1572 ?x3110 ?x3110 ?x3110)) (* 3 (* ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 3) (* ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477 ?x1477)) (* 3 (* ?x3110 ?x1477 ?x1477)) (* (- 4) (* s00 ?x1572 ?x1572 ?x3110 ?x3110)) (* (- 9) (* ?x1572 ?x3110 ?x3110 ?x3110)) (* 6 (* r00 s00 ?x1572 ?x3110 ?x3110)) (* (- 4) (* s00 ?x1572 ?x3110 ?x1477)) (* (- 12) (* r00 r00 r00 ?x3110 ?x3110 ?x3110)) (* 4 (* s00 ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 s00 ?x3110 ?x3110 ?x3110)) (* 12 (* r00 r00 ?x1572 ?x3110 ?x1477)) (* (- 2) (* ?x1572 ?x3110 ?x1477 ?x1477)) ?x1833)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x2501 (* 108 ?x1364)))
 (let ((?x137 (* 9 s00)))
 (let ((?x609 (* s00 s00)))
 (let ((?x3703 (* 51 ?x609)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4693 (* 16 ?x1202)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4091 (* (- 108) ?x823)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x4129 (* (- 432) ?x900)))
 (let ((?x540 (* r00 x00)))
 (let ((?x3451 (* 108 ?x540)))
 (let ((?x2456 (+ (* 216 (* r00 s00 x00)) ?x3451 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4129 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4091 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4693 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x3703 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2501)))
 (let ((?x143 (* 9 s)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x563 (* s s)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x3948 (+ (* (- 24) (* s r)) ?x569 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x587 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x824 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x908 ?x934 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1005 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x3669 (+ (* (- 9) (* s r)) ?x554 (* 9 (* r00 s00)) ?x564 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x622 (* 18 (* r00 x)) ?x396 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4314 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x396 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3095 (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x3095 (= ?x4314 0) (= ?x3669 0) (= ?x3948 0) (= ?x2456 0) (not (= ?x1707 0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5840 (lambda ((r Int) (s Int) (x Int) )(let ((?x5703 (* 6 (* s x x00))))
 (let ((?x217 (* 6 r)))
 (let ((?x1575 (+ 3 ?x217 s)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x1404 (+ ?x298 x)))
 (let ((?x1572 (+ 1 r)))
 (let ((?x5821 (* (- 12) (* r00 r00 r00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575))))
 (let ((?x5806 (* 12 (* r00 r00 ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575))))
 (let ((?x5672 (* (- 9) (* r r s s))))
 (let ((?x363 (* r s)))
 (let ((?x535 (* (- 9) ?x363)))
 (let ((?x5831 (+ (* 18 (* s x x s00 r00)) (* (- 18) (* s s x s00 r00)) ?x535 (* (- 4) (* s00 ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 6) (* x x x s00 r00)) (* 12 (* r s x s00 r00)) (* 21 (* s s)) (* 9 (* r x)) (* 18 (* r s r00)) (* (- 18) (* r x r00)) (* 36 (* s r00 r00)) (* 21 (* x s00)) (* (- 9) (* x r00)) (* (- 36) (* s r00 r00 r00)) (* (- 6) (* x x s00 r00)) (* (- 6) (* r x x s00 r00)) (* (- 21) (* s s00)) (* 9 (* s r00)) (* 18 (* s x00)) (* 18 (* s s00 r00)) (* 36 (* r s s)) (* (- 39) (* s x)) (* 12 (* r s x x00)) (* 18 (* x x)) (* (- 3) (* r s s r00)) (* (- 54) (* r s s00)) (* 6 (* r s x r00)) (* (- 36) (* x r00 r00)) (* 36 (* x r00 r00 r00)) (* 6 (* s x s00 r00)) (* (- 18) (* x s00 r00)) (* (- 18) (* x x00)) (* (- 6) (* x x x x00)) (* 6 (* s s s s00 r00)) (* (- 7) (* s s s s00)) (* 21 (* s s x s00)) (* (- 21) (* s x x s00)) (* (- 36) (* r x s00 r00)) (* 7 (* x x x s00)) (* (- 12) (* x x x r00 r00)) (* (- 75) (* r s x)) (* (- 6) (* r r s x)) (* 15 (* r r x x)) (* 39 (* r x x)) (* (- 12) (* r x x x r00 r00)) (* 108 (* r s r00 r00)) (* (- 108) (* r x r00 r00)) ?x5672 (* 72 (* r r s r00 r00)) (* 6 (* x x x)) (* (- 25) (* s x x x)) (* 7 (* s s x)) (* (- 13) (* s x x)) (* (- 72) (* r r x r00 r00)) (* 6 (* x x x x)) (* 7 (* s s s s)) (* (- 27) (* s s s x)) (* 39 (* s s x x)) (* (- 3) (* r x x r00)) (* (- 18) (* s s x x00)) (* (- 6) (* x x x00)) (* (- 6) (* r x x x00)) (* 12 (* r s s r00 r00 r00)) (* (- 12) (* s x r00 r00 r00)) (* (- 24) (* r s x r00 r00 r00)) (* 12 (* x x r00 r00 r00)) (* 12 (* r x x r00 r00 r00)) (* 2 (* r s x x x)) (* (- 6) (* r s s s00 r00)) (* (- 10) (* r s s s)) (* 27 (* r s s x)) (* (- 3) (* ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* 3 (* ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575 ?x1575)) (* (- 26) (* r s x x)) (* 9 (* r x x x)) (* (- 10) (* r r s s s)) (* (- 2) (* r s s s s)) (* 32 (* r r s s x)) (* 6 (* r s s s x)) (* (- 34) (* r r s x x)) (* (- 6) (* r s s x x)) (* 12 (* r r x x x)) (* 12 (* s x r00 r00)) (* 54 (* r x s00)) (* (- 7) (* s x s00)) (* (- 6) (* ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 2) (* ?x1572 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575 ?x1575)) (* 3 (* r00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 72) (* r s r00 r00 r00)) (* 72 (* r x r00 r00 r00)) (* (- 12) (* r r s s r00 r00)) (* 4 (* r x x x s00)) (* (- 12) (* r s x x s00)) (* 12 (* r s s x s00)) (* 6 (* s s s x00)) (* (- 4) (* r s s s s00)) (* 11 (* r x x s00)) (* 7 (* x x s00)) (* 24 (* r r s x r00 r00)) (* 7 (* r s s s00)) (* (- 18) (* r s x s00)) (* 6 (* x00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* 54 (* r r x)) (* (- 54) (* r r s)) (* 3 (* s x r00)) (* 18 (* s x x x00)) (* (- 24) (* r x x r00 r00)) (* 36 (* r s x r00 r00)) (* 12 (* r r r s s)) (* (- 12) (* r r x x r00 r00)) (* (- 24) (* r r r s x)) (* 12 (* r r r x x)) (* 36 (* r s x00)) (* (- 6) (* r s s x00)) (* (- 3) (* x x r00)) (* (- 8) (* r r s x s00)) (* 4 (* r r x x s00)) (* 4 (* r r s s s00)) ?x5806 (* (- 36) (* r x x00)) (* 6 (* r00 s00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* (- 24) (* r r s s00)) (* 24 (* r r x s00)) (* (- 12) (* r s s r00 r00)) (* (- 12) (* s s s r00 r00 r00)) (* 36 (* s s x r00 r00 r00)) (* 36 (* r s s00 r00)) (* (- 36) (* s x x r00 r00 r00)) (* 12 (* x x x r00 r00 r00)) (* (- 3) (* s00 ?x1572 ?x1572 ?x1572 ?x1404 ?x1404 ?x1575 ?x1575 ?x1575)) (* 36 (* r s x x r00 r00)) (* (- 36) (* r s s x r00 r00)) (* (- 36) (* s s x r00 r00)) (* 12 (* r s s s r00 r00)) ?x5821 (* (- 3) (* x x x r00)) (* 3 (* s s s r00)) (* (- 9) (* s s x r00)) (* 9 (* s x x r00)) (* 12 (* s s s r00 r00)) (* (- 12) (* x x r00 r00)) (* 72 (* r r r x)) (* 36 (* s x x r00 r00)) (* (- 72) (* r r r s)) ?x5703)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x1394 (* (- 108) ?x1364)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x1393 (* (- 16) ?x1202)))
 (let ((?x1074 (* s00 r00 r00 r00)))
 (let ((?x1389 (* (- 216) ?x1074)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x901 (* 432 ?x900)))
 (let ((?x823 (* s00 x00)))
 (let ((?x1147 (* 108 ?x823)))
 (let ((?x749 (* s00 s00 r00 r00)))
 (let ((?x750 (* 36 ?x749)))
 (let ((?x686 (* s00 s00 r00)))
 (let ((?x1030 (* 108 ?x686)))
 (let ((?x665 (* s00 r00 r00)))
 (let ((?x1018 (* 36 ?x665)))
 (let ((?x609 (* s00 s00)))
 (let ((?x1383 (* (- 51) ?x609)))
 (let ((?x583 (* s r00 r00)))
 (let ((?x882 (* (- 36) ?x583)))
 (let ((?x540 (* r00 x00)))
 (let ((?x1380 (* (- 108) ?x540)))
 (let ((?x531 (* s00 r00 x00)))
 (let ((?x1379 (* (- 216) ?x531)))
 (let ((?x444 (* s00 r00)))
 (let ((?x538 (* 54 ?x444)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1395 (+ ?x143 ?x1005 ?x538 ?x1379 ?x1380 (* (- 15) (* s s)) ?x882 ?x1383 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1018 ?x1030 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x750 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1147 (* 108 (* s x)) (* (- 108) (* x x)) ?x901 (* 12 (* s s s00)) ?x1389 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1393 (* 216 (* x x00)) ?x1394)))
 (let (($x1396 (= ?x1395 0)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x714 (* (- 2) ?x686)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x563 (* s s)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x582 (* 24 ?x444)))
 (let ((?x1097 (+ ?x143 ?x1005 (* (- 24) ?x363) (* 24 (* r s00)) ?x582 ?x569 ?x587 (* 54 (* r x)) (* 36 (* r x r00)) ?x882 ?x934 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1018 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x714 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x824 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x908 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1102 (= ?x1097 0)))
 (let ((?x666 (* 6 ?x665)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x559 (* 9 ?x444)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x763 (+ ?x47 ?x396 ?x535 (* 9 (* r s00)) ?x559 ?x554 ?x564 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x583) ?x622 (* 18 (* x r00)) ?x666 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x770 (= ?x763 0)))
 (let ((?x487 (* r00 r00 r00)))
 (let ((?x488 (* 12 ?x487)))
 (let ((?x522 (* (- 6) ?x444)))
 (let ((?x519 (* (- 6) x00)))
 (let ((?x518 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x523 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x518 ?x519 (* 2 ?x363) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x522 ?x488)))
 (let (($x524 (= ?x523 0)))
 (let ((?x319 (* r00 r00)))
 (let ((?x320 (* 3 ?x319)))
 (let ((?x349 (* (- 1) s00)))
 (let (($x352 (= (+ s ?x349 (* (- 3) (* r r)) ?x320) 0)))
 (let (($x3650 (and $x352 $x524 $x770 $x1102 $x1396 (not (= ?x5831 0)))))
 (let ((?x1744 (* (- 2) (* ?x1572 (+ x ?x298) (+ 3 s ?x217) (+ 3 s ?x217)))))
 (let ((?x476 (* 6 (* r00 s00 (+ x ?x298) (+ x ?x298) (+ x ?x298)))))
 (let ((?x1477 (+ 3 s ?x217)))
 (let ((?x3110 (+ x ?x298)))
 (let ((?x2247 (* 12 (* r00 r00 r00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477))))
 (let ((?x3160 (* (- 12) (* r00 r00 ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477))))
 (let ((?x1707 (+ (* 6 (* x00 ?x3110 ?x3110 ?x3110)) (* (- 3) (* s00 ?x3110 ?x3110 ?x3110)) (* 2 (* ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477 ?x1477)) (* 6 (* ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 s00 ?x3110 ?x1477)) (* 3 (* r00 ?x1572 ?x3110 ?x3110)) (* (- 6) (* x00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 12 (* r00 r00 ?x1572 ?x1572 ?x3110 ?x3110)) (* 3 (* r00 ?x3110 ?x1477)) (* (- 3) (* ?x1572 ?x1572 ?x3110 ?x3110)) (* 3 (* ?x3110 ?x3110 ?x3110 ?x1477)) (* (- 6) (* ?x3110 ?x3110 ?x1477)) (* (- 6) (* ?x3110 ?x3110 ?x3110 ?x3110)) (* 6 (* x00 ?x1572 ?x3110 ?x3110)) (* (- 12) (* r00 r00 r00 ?x1572 ?x3110 ?x3110)) (* (- 2) (* ?x1572 ?x3110 ?x3110 ?x3110 ?x1477)) (* (- 3) (* s00 ?x3110 ?x1477)) ?x3160 (* (- 12) (* r00 r00 r00 ?x3110 ?x1477)) (* (- 4) (* s00 ?x1572 ?x3110 ?x3110 ?x3110)) (* (- 6) (* r00 s00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 3) (* s00 ?x1572 ?x3110 ?x3110)) (* (- 3) (* ?x1572 ?x3110 ?x1477)) (* 3 (* ?x1572 ?x3110 ?x3110 ?x1477)) (* (- 3) (* r00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 2) (* ?x1572 ?x1572 ?x3110 ?x3110 ?x1477)) (* 3 (* r00 ?x3110 ?x3110 ?x3110)) (* 3 (* s00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) ?x2247 (* 12 (* r00 r00 ?x1572 ?x3110 ?x3110 ?x3110)) (* 3 (* ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 3) (* ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477 ?x1477)) (* 3 (* ?x3110 ?x1477 ?x1477)) (* (- 4) (* s00 ?x1572 ?x1572 ?x3110 ?x3110)) (* (- 9) (* ?x1572 ?x3110 ?x3110 ?x3110)) (* 6 (* r00 s00 ?x1572 ?x3110 ?x3110)) (* (- 4) (* s00 ?x1572 ?x3110 ?x1477)) (* (- 12) (* r00 r00 r00 ?x3110 ?x3110 ?x3110)) (* 4 (* s00 ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) ?x476 (* 12 (* r00 r00 ?x1572 ?x3110 ?x1477)) ?x1744 (* 6 (* x00 ?x3110 ?x1477)))))
 (let ((?x2501 (* 108 ?x1364)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3703 (* 51 ?x609)))
 (let ((?x4693 (* 16 ?x1202)))
 (let ((?x4091 (* (- 108) ?x823)))
 (let ((?x4129 (* (- 432) ?x900)))
 (let ((?x3451 (* 108 ?x540)))
 (let ((?x2456 (+ (* 216 (* r00 s00 x00)) ?x3451 (* (- 54) (* r00 s00)) (* 15 ?x563) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4129 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4091 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4693 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x3703 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2501)))
 (let ((?x3948 (+ (* (- 24) (* s r)) ?x569 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x587 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x824 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x908 ?x934 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1005 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x3669 (+ (* (- 9) (* s r)) ?x554 (* 9 (* r00 s00)) ?x564 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x622 (* 18 (* r00 x)) ?x396 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4314 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x396 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x487))))
 (let (($x4321 (and (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) ?x319)) 0) (= ?x4314 0) (= ?x3669 0) (= ?x3948 0) (= ?x2456 0) (not (= ?x1707 0)))))
 (rewrite (= $x4321 $x3650)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x295 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (- x s)))
 (let ((?x217 (* 6 r)))
 (let ((?x218 (+ s ?x217 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x223 (+ (- (* 6 ?x211 ?x211 ?x211 x00) (* 3 s00 ?x211 ?x211 ?x211)) (* 2 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x211 ?x211) (* 6 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211) (* 6 r00 ?x218 s00 ?x211) (* 3 ?x216 r00 ?x211 ?x211))))
 (let ((?x228 (+ (- ?x223 (* 6 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 x00)) (* 12 ?x216 ?x216 r00 r00 ?x211 ?x211) (* 3 r00 ?x218 ?x211))))
 (let ((?x232 (+ (- ?x228 (* 3 ?x216 ?x216 ?x211 ?x211)) (* 3 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x236 (- (- ?x232 (* 6 ?x218 ?x211 ?x211)) (* 6 ?x211 ?x211 ?x211 ?x211))))
 (let ((?x248 (- (+ ?x236 (* 6 ?x216 ?x211 ?x211 x00)) (* 12 ?x216 r00 r00 r00 ?x211 ?x211))))
 (let ((?x250 (- (- ?x248 (* 2 ?x216 ?x218 ?x211 ?x211 ?x211)) (* 3 ?x218 s00 ?x211))))
 (let ((?x251 (- ?x250 (* 12 ?x216 ?x216 ?x216 ?x216 r00 r00 ?x218 ?x218 ?x218 ?x211 ?x211))))
 (let ((?x253 (- (- ?x251 (* 12 r00 r00 r00 ?x218 ?x211)) (* 4 ?x216 s00 ?x211 ?x211 ?x211))))
 (let ((?x254 (- ?x253 (* 6 ?x216 ?x216 ?x216 r00 ?x218 ?x218 ?x218 s00 ?x211 ?x211))))
 (let ((?x256 (- (- ?x254 (* 3 ?x216 s00 ?x211 ?x211)) (* 3 ?x216 ?x218 ?x211))))
 (let ((?x261 (- (+ ?x256 (* 3 ?x216 ?x218 ?x211 ?x211)) (* 3 ?x216 ?x216 ?x216 r00 ?x218 ?x218 ?x218 ?x211 ?x211))))
 (let ((?x268 (+ (- ?x261 (* 2 ?x216 ?x216 ?x218 ?x211 ?x211)) (* 3 r00 ?x211 ?x211 ?x211) (* 3 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 s00 ?x211 ?x211) (* 12 ?x216 ?x216 ?x216 r00 r00 r00 ?x218 ?x218 ?x218 ?x211 ?x211) (* 12 ?x216 r00 r00 ?x211 ?x211 ?x211) (* 3 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211))))
 (let ((?x272 (+ (- ?x268 (* 3 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x211 ?x211)) (* 3 ?x218 ?x218 ?x211))))
 (let ((?x276 (- (- ?x272 (* 4 ?x216 ?x216 s00 ?x211 ?x211)) (* 9 ?x216 ?x211 ?x211 ?x211))))
 (let ((?x281 (- (+ ?x276 (* 6 ?x216 r00 s00 ?x211 ?x211)) (* 4 ?x216 ?x218 s00 ?x211))))
 (let ((?x286 (+ (- ?x281 (* 12 r00 r00 r00 ?x211 ?x211 ?x211)) (* 4 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 s00 ?x211 ?x211) (* 6 r00 s00 ?x211 ?x211 ?x211) (* 12 ?x216 r00 r00 ?x218 ?x211))))
 (let ((?x290 (+ (- ?x286 (* 2 ?x216 ?x218 ?x218 ?x211)) (* 6 ?x218 ?x211 x00))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x290 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1856 (lambda ((r Int) (s Int) (x Int) )(let ((?x1833 (* 6 (* x00 (+ x (* (- 1) s)) (+ 3 s (* 6 r))))))
 (let ((?x217 (* 6 r)))
 (let ((?x1477 (+ 3 s ?x217)))
 (let ((?x298 (* (- 1) s)))
 (let ((?x3110 (+ x ?x298)))
 (let ((?x1572 (+ 1 r)))
 (let ((?x2247 (* 12 (* r00 r00 r00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477))))
 (let ((?x3160 (* (- 12) (* r00 r00 ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477))))
 (let ((?x1707 (+ (* 6 (* x00 ?x3110 ?x3110 ?x3110)) (* (- 3) (* s00 ?x3110 ?x3110 ?x3110)) (* 2 (* ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477 ?x1477)) (* 6 (* ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 s00 ?x3110 ?x1477)) (* 3 (* r00 ?x1572 ?x3110 ?x3110)) (* (- 6) (* x00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 12 (* r00 r00 ?x1572 ?x1572 ?x3110 ?x3110)) (* 3 (* r00 ?x3110 ?x1477)) (* (- 3) (* ?x1572 ?x1572 ?x3110 ?x3110)) (* 3 (* ?x3110 ?x3110 ?x3110 ?x1477)) (* (- 6) (* ?x3110 ?x3110 ?x1477)) (* (- 6) (* ?x3110 ?x3110 ?x3110 ?x3110)) (* 6 (* x00 ?x1572 ?x3110 ?x3110)) (* (- 12) (* r00 r00 r00 ?x1572 ?x3110 ?x3110)) (* (- 2) (* ?x1572 ?x3110 ?x3110 ?x3110 ?x1477)) (* (- 3) (* s00 ?x3110 ?x1477)) ?x3160 (* (- 12) (* r00 r00 r00 ?x3110 ?x1477)) (* (- 4) (* s00 ?x1572 ?x3110 ?x3110 ?x3110)) (* (- 6) (* r00 s00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 3) (* s00 ?x1572 ?x3110 ?x3110)) (* (- 3) (* ?x1572 ?x3110 ?x1477)) (* 3 (* ?x1572 ?x3110 ?x3110 ?x1477)) (* (- 3) (* r00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 2) (* ?x1572 ?x1572 ?x3110 ?x3110 ?x1477)) (* 3 (* r00 ?x3110 ?x3110 ?x3110)) (* 3 (* s00 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) ?x2247 (* 12 (* r00 r00 ?x1572 ?x3110 ?x3110 ?x3110)) (* 3 (* ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* (- 3) (* ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477 ?x1477)) (* 3 (* ?x3110 ?x1477 ?x1477)) (* (- 4) (* s00 ?x1572 ?x1572 ?x3110 ?x3110)) (* (- 9) (* ?x1572 ?x3110 ?x3110 ?x3110)) (* 6 (* r00 s00 ?x1572 ?x3110 ?x3110)) (* (- 4) (* s00 ?x1572 ?x3110 ?x1477)) (* (- 12) (* r00 r00 r00 ?x3110 ?x3110 ?x3110)) (* 4 (* s00 ?x1572 ?x1572 ?x1572 ?x1572 ?x3110 ?x3110 ?x1477 ?x1477 ?x1477)) (* 6 (* r00 s00 ?x3110 ?x3110 ?x3110)) (* 12 (* r00 r00 ?x1572 ?x3110 ?x1477)) (* (- 2) (* ?x1572 ?x3110 ?x1477 ?x1477)) ?x1833)))
 (let ((?x1364 (* x00 x00)))
 (let ((?x2501 (* 108 ?x1364)))
 (let ((?x137 (* 9 s00)))
 (let ((?x609 (* s00 s00)))
 (let ((?x3703 (* 51 ?x609)))
 (let ((?x1202 (* s00 s00 s00)))
 (let ((?x4693 (* 16 ?x1202)))
 (let ((?x823 (* s00 x00)))
 (let ((?x4091 (* (- 108) ?x823)))
 (let ((?x900 (* r00 r00 r00 x00)))
 (let ((?x4129 (* (- 432) ?x900)))
 (let ((?x540 (* r00 x00)))
 (let ((?x3451 (* 108 ?x540)))
 (let ((?x2456 (+ (* 216 (* r00 s00 x00)) ?x3451 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4129 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4091 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4693 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x3703 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x2501)))
 (let ((?x143 (* 9 s)))
 (let ((?x1005 (* (- 9) s00)))
 (let ((?x934 (* (- 15) ?x609)))
 (let ((?x895 (* r00 r00 x00)))
 (let ((?x908 (* (- 36) ?x895)))
 (let ((?x824 (* 6 ?x823)))
 (let ((?x563 (* s s)))
 (let ((?x587 (* 3 ?x563)))
 (let ((?x569 (* (- 54) ?x540)))
 (let ((?x3948 (+ (* (- 24) (* s r)) ?x569 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x587 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x824 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x908 ?x934 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1005 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x396 (* (- 3) s00)))
 (let ((?x622 (* (- 4) ?x609)))
 (let ((?x564 (* 2 ?x563)))
 (let ((?x554 (* (- 18) ?x540)))
 (let ((?x3669 (+ (* (- 9) (* s r)) ?x554 (* 9 (* r00 s00)) ?x564 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x622 (* 18 (* r00 x)) ?x396 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x4314 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x396 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3095 (= (+ s00 ?x298 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x4321 (and $x3095 (= ?x4314 0) (= ?x3669 0) (= ?x3948 0) (= ?x2456 0) (not (= ?x1707 0)))))
 (let ((?x211 (- x s)))
 (let ((?x218 (+ s ?x217 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x223 (+ (- (* 6 ?x211 ?x211 ?x211 x00) (* 3 s00 ?x211 ?x211 ?x211)) (* 2 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x211 ?x211) (* 6 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 ?x211) (* 6 r00 ?x218 s00 ?x211) (* 3 ?x216 r00 ?x211 ?x211))))
 (let ((?x228 (+ (- ?x223 (* 6 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211 x00)) (* 12 ?x216 ?x216 r00 r00 ?x211 ?x211) (* 3 r00 ?x218 ?x211))))
 (let ((?x232 (+ (- ?x228 (* 3 ?x216 ?x216 ?x211 ?x211)) (* 3 ?x218 ?x211 ?x211 ?x211))))
 (let ((?x236 (- (- ?x232 (* 6 ?x218 ?x211 ?x211)) (* 6 ?x211 ?x211 ?x211 ?x211))))
 (let ((?x248 (- (+ ?x236 (* 6 ?x216 ?x211 ?x211 x00)) (* 12 ?x216 r00 r00 r00 ?x211 ?x211))))
 (let ((?x250 (- (- ?x248 (* 2 ?x216 ?x218 ?x211 ?x211 ?x211)) (* 3 ?x218 s00 ?x211))))
 (let ((?x251 (- ?x250 (* 12 ?x216 ?x216 ?x216 ?x216 r00 r00 ?x218 ?x218 ?x218 ?x211 ?x211))))
 (let ((?x253 (- (- ?x251 (* 12 r00 r00 r00 ?x218 ?x211)) (* 4 ?x216 s00 ?x211 ?x211 ?x211))))
 (let ((?x254 (- ?x253 (* 6 ?x216 ?x216 ?x216 r00 ?x218 ?x218 ?x218 s00 ?x211 ?x211))))
 (let ((?x256 (- (- ?x254 (* 3 ?x216 s00 ?x211 ?x211)) (* 3 ?x216 ?x218 ?x211))))
 (let ((?x261 (- (+ ?x256 (* 3 ?x216 ?x218 ?x211 ?x211)) (* 3 ?x216 ?x216 ?x216 r00 ?x218 ?x218 ?x218 ?x211 ?x211))))
 (let ((?x268 (+ (- ?x261 (* 2 ?x216 ?x216 ?x218 ?x211 ?x211)) (* 3 r00 ?x211 ?x211 ?x211) (* 3 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 s00 ?x211 ?x211) (* 12 ?x216 ?x216 ?x216 r00 r00 r00 ?x218 ?x218 ?x218 ?x211 ?x211) (* 12 ?x216 r00 r00 ?x211 ?x211 ?x211) (* 3 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x211 ?x211))))
 (let ((?x272 (+ (- ?x268 (* 3 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 ?x211 ?x211)) (* 3 ?x218 ?x218 ?x211))))
 (let ((?x276 (- (- ?x272 (* 4 ?x216 ?x216 s00 ?x211 ?x211)) (* 9 ?x216 ?x211 ?x211 ?x211))))
 (let ((?x281 (- (+ ?x276 (* 6 ?x216 r00 s00 ?x211 ?x211)) (* 4 ?x216 ?x218 s00 ?x211))))
 (let ((?x286 (+ (- ?x281 (* 12 r00 r00 r00 ?x211 ?x211 ?x211)) (* 4 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 s00 ?x211 ?x211) (* 6 r00 s00 ?x211 ?x211 ?x211) (* 12 ?x216 r00 r00 ?x218 ?x211))))
 (let ((?x290 (+ (- ?x286 (* 2 ?x216 ?x218 ?x218 ?x211)) (* 6 ?x218 ?x211 x00))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x294 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x290 0))))))
 (rewrite (= $x294 $x4321)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x296 (asserted $x295)))
 (let ((@x3808 (mp (mp @x296 (quant-intro (proof-bind ?x1856) (= $x295 $x3433)) $x3433) (rewrite (= $x3433 $x3433)) $x3433)))
 (let ((@x5146 (mp~ (mp @x3808 (quant-intro (proof-bind ?x5840) (= $x3433 $x5838)) $x5838) (sk (~ $x5838 $x902)) $x902)))
 (let ((@x4789 (mp @x5146 (rewrite (= $x902 $x4681)) $x4681)))
 (let ((@x844 (and-elim @x4789 $x1286)))
 (let ((@x867 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1286) $x2156)) @x844 $x2156)))
 (let (($x2158 (>= ?x3176 0)))
 (let ((@x2735 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1286) $x2158)) @x844 $x2158)))
 (let (($x2155 (<= ?x3928 0)))
 (let ((@x2122 (and-elim @x4789 $x836)))
 (let ((@x769 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x836) $x2155)) @x2122 $x2155)))
 (let (($x2150 (>= ?x3928 0)))
 (let ((@x5658 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x836) $x2150)) @x2122 $x2150)))
 (let (($x2151 (<= ?x3789 0)))
 (let ((@x2123 (and-elim @x4789 $x3185)))
 (let ((@x4915 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3185) $x2151)) @x2123 $x2151)))
 (let (($x2149 (>= ?x3789 0)))
 (let ((@x875 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3185) $x2149)) @x2123 $x2149)))
 (let (($x2108 (<= ?x2006 0)))
 (let ((@x2131 (and-elim @x4789 $x2364)))
 (let ((@x1670 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2364) $x2108)) @x2131 $x2108)))
 (let (($x2148 (>= ?x2006 0)))
 (let ((@x3407 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2364) $x2148)) @x2131 $x2148)))
 (let (($x2183 (not (<= ?x4779 0))))
 (let (($x2144 (>= ?x4779 0)))
 (let ((@x5394 ((_ th-lemma arith) (hypothesis (not $x2144)) @x2735 @x867 @x3407 @x1670 @x875 @x4915 @x3407 @x1670 @x875 @x4915 @x5658 @x769 @x2735 @x867 false)))
 (let ((@x5715 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4781 $x2183 (not $x2144))) (and-elim @x4789 $x4788) (or $x2183 (not $x2144)))))
 ((_ th-lemma arith) (unit-resolution @x5715 (lemma @x5394 $x2144) $x2183) @x2735 @x867 @x3407 @x1670 @x875 @x4915 @x3407 @x1670 @x875 @x4915 @x5658 @x769 @x2735 @x867 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        41
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1406
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 239
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                20.71
 :memory                    19.61
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                3056390
 :num-checks                1
 :propagations              12
 :rlimit-count              57301
 :time                      0.05
 :total-time                0.07)
