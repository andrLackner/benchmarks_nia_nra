unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x674 (* r00 b00 q!3)))
 (let ((?x650 (* q00 a00 s!0)))
 (let ((?x320 (* (- 1) (* p00 b00 s!0))))
 (let ((?x231 (* (- 1) (* q00 r00 b!2))))
 (let ((?x308 (* (- 1) (* s00 a00 q!3))))
 (let ((?x355 (* p00 s00 b!2)))
 (let ((?x327 (+ ?x355 ?x308 ?x231 ?x320 ?x650 ?x674)))
 (let (($x510 (<= ?x327 0)))
 (let (($x649 (= ?x327 0)))
 (let ((?x477 (* (- 1) (* p00 s00 a!4))))
 (let ((?x199 (* (- 1) (* q00 a00 r!1))))
 (let ((?x611 (* s00 a00 p!5)))
 (let ((?x210 (* (- 1) (* r00 b00 p!5))))
 (let ((?x235 (* q00 r00 a!4)))
 (let ((?x115 (* p00 b00 r!1)))
 (let ((?x639 (* p!5 p!5 r!1 b!2 b!2 b!2)))
 (let ((?x148 (+ a!4 (* (- 1) b!2))))
 (let ((?x129 (* (- 1) s!0)))
 (let ((?x252 (+ ?x129 r!1)))
 (let ((?x196 (* ?x252 ?x252 ?x252 ?x148 ?x148 ?x148 (+ (* (- 1) q!3) p!5) b!2 b!2)))
 (let ((?x491 (+ ?x196 (* (- 2) (* q!3 p!5 r!1 b!2 b!2 b!2)) (* 2 (* q!3 s!0 p!5 b!2 b!2 b!2)) (* (- 1) (* s!0 p!5 p!5 b!2 b!2 b!2)) (* (- 1) (* q!3 q!3 s!0 b!2 b!2 b!2)) (* q!3 q!3 r!1 b!2 b!2 b!2) ?x639)))
 (let ((?x698 (* ?x491 (+ ?x115 ?x235 ?x355 ?x308 ?x210 ?x231 ?x611 ?x199 ?x320 ?x650 ?x477 ?x674))))
 (let (($x482 (= ?x698 0)))
 (let (($x697 (not $x482)))
 (let ((?x532 (+ ?x115 ?x235 ?x210 ?x611 ?x199 ?x477)))
 (let ((?x420 (+ (* (- 2) (* a!4 a!4 a!4 a!4 p!5 r!1 r!1 r!1 b!2)) (* a!4 a!4 a!4 p!5 r!1 r!1 r!1 b!2 b!2) (* (- 3) (* a!4 p!5 p!5 r!1 b!2 b!2)) (* a!4 a!4 a!4 a!4 a!4 p!5 r!1 r!1 r!1) (* (- 1) (* a!4 a!4 a!4 p!5 p!5 r!1)) (* 3 (* a!4 a!4 p!5 p!5 r!1 b!2)) ?x639)))
 (let (($x556 (= (* ?x420 ?x532) 0)))
 (let (($x173 (or (not $x556) $x697)))
 (let (($x473 (= ?x532 0)))
 (let ((?x238 (* p!5 b!2)))
 (let ((?x131 (* q00 a00)))
 (let (($x499 (= (+ ?x131 (* (- 1) (* p00 b00)) ?x238 (* (- 1) (* a!4 q!3))) 0)))
 (let ((?x127 (* s00 a00)))
 (let ((?x521 (+ ?x127 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) (* r!1 b!2))))
 (let ((?x331 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x234 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x619 (and (= (+ ?x37 ?x234 (* (- 1) (* s!0 p!5)) ?x331) 0) (= ?x521 0) $x499 $x473 $x649 $x173)))
 (let ((?x147 (* s!0 q00 a00)))
 (let ((?x162 (* q!3 r00 b00)))
 (let ((?x163 (* r!1 q00 a00)))
 (let ((?x270 (* (- 1) ?x163)))
 (let ((?x169 (* p!5 s00 a00)))
 (let ((?x170 (* r!1 p00 b00)))
 (let ((?x171 (* p!5 r00 b00)))
 (let ((?x373 (* (- 1) ?x171)))
 (let ((?x164 (* b!2 p00 s00)))
 (let ((?x443 (* a!4 q00 r00)))
 (let ((?x142 (* a!4 p00 s00)))
 (let ((?x313 (* (- 1) ?x142)))
 (let ((?x416 (+ ?x313 ?x443 (* (- 1) (* b!2 q00 r00)) ?x164 ?x373 ?x170 ?x169 ?x270 (* (- 1) (* s!0 p00 b00)) ?x162 (* (- 1) (* q!3 s00 a00)) ?x147)))
 (let ((?x151 (+ r!1 ?x129)))
 (let ((?x362 (* ?x151 ?x151 ?x151 ?x148 ?x148 ?x148 (+ p!5 (* (- 1) q!3)) b!2 b!2)))
 (let ((?x181 (* p!5 p!5 b!2 b!2 b!2 r!1)))
 (let ((?x371 (+ (* (- 1) (* q!3 q!3 b!2 b!2 b!2 s!0)) (* 2 (* p!5 q!3 b!2 b!2 b!2 s!0)) (* (- 1) (* p!5 p!5 b!2 b!2 b!2 s!0)) (* q!3 q!3 b!2 b!2 b!2 r!1) (* (- 2) (* p!5 q!3 b!2 b!2 b!2 r!1)) ?x181 ?x362)))
 (let ((?x315 (+ (* p!5 a!4 a!4 a!4 a!4 a!4 r!1 r!1 r!1) (* (- 2) (* p!5 a!4 a!4 a!4 a!4 b!2 r!1 r!1 r!1)) (* p!5 a!4 a!4 a!4 b!2 b!2 r!1 r!1 r!1) (* (- 1) (* p!5 p!5 a!4 a!4 a!4 r!1)) (* 3 (* p!5 p!5 a!4 a!4 b!2 r!1)) ?x181 (* (- 3) (* p!5 p!5 a!4 b!2 b!2 r!1)))))
 (let (($x661 (or (not (= (* ?x315 (+ ?x313 ?x443 ?x373 ?x170 ?x169 ?x270)) 0)) (not (= (* ?x371 ?x416) 0)))))
 (let ((?x161 (* q!3 s00 a00)))
 (let ((?x146 (* s!0 p00 b00)))
 (let ((?x165 (* b!2 q00 r00)))
 (let (($x125 (= (+ ?x165 (* (- 1) ?x164) ?x146 (* (- 1) ?x162) ?x161 (* (- 1) ?x147)) 0)))
 (let (($x166 (= (+ ?x142 (* (- 1) ?x443) ?x171 (* (- 1) ?x170) (* (- 1) ?x169) ?x163) 0)))
 (let (($x387 (= (+ (* a!4 q!3) (* (- 1) ?x131) (* p00 b00) (* (- 1) ?x238)) 0)))
 (let ((?x145 (* r00 b00)))
 (let ((?x134 (* (- 1) ?x127)))
 (let ((?x201 (* a!4 s!0)))
 (let (($x394 (and (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) ?x331)) 0) (= (+ ?x201 (* (- 1) (* b!2 r!1)) ?x134 ?x145) 0) $x387 $x166 $x125 $x661)))
 (let (($x421 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x295 (* s q00 a00)))
 (let ((?x284 (* q s00 a00)))
 (let ((?x388 (* (- 1) ?x284)))
 (let ((?x250 (* q r00 b00)))
 (let ((?x249 (* s p00 b00)))
 (let ((?x353 (* (- 1) ?x249)))
 (let ((?x220 (* r q00 a00)))
 (let ((?x226 (* (- 1) ?x220)))
 (let ((?x209 (* p s00 a00)))
 (let ((?x206 (* r p00 b00)))
 (let ((?x186 (* p r00 b00)))
 (let ((?x187 (* (- 1) ?x186)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x368 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x195 (* (- 1) ?x63)))
 (let ((?x253 (* (- 1) q)))
 (let ((?x255 (+ p ?x253)))
 (let ((?x276 (+ a (* (- 1) b))))
 (let ((?x336 (+ r (* (- 1) s))))
 (let ((?x529 (* ?x336 ?x336 ?x336 ?x276 ?x276 ?x276 ?x255 b b)))
 (let ((?x526 (* p p b b b r)))
 (let ((?x458 (* (- 2) (* p q b b b r))))
 (let ((?x502 (* q q b b b r)))
 (let ((?x490 (* (- 1) (* p p b b b s))))
 (let ((?x456 (* 2 (* p q b b b s))))
 (let ((?x465 (* (- 1) (* q q b b b s))))
 (let ((?x714 (* (+ ?x465 ?x456 ?x490 ?x502 ?x458 ?x526 ?x529) (+ ?x195 ?x66 ?x368 ?x76 ?x187 ?x206 ?x209 ?x226 ?x353 ?x250 ?x388 ?x295))))
 (let ((?x232 (+ ?x195 ?x66 ?x187 ?x206 ?x209 ?x226)))
 (let ((?x609 (+ (* p a a a a a r r r) (* (- 2) (* p a a a a b r r r)) (* p a a a b b r r r) (* (- 1) (* p p a a a r)) (* 3 (* p p a a b r)) ?x526 (* (- 3) (* p p a b b r)))))
 (let (($x312 (= (+ ?x72 (* (- 1) ?x76) ?x249 (* (- 1) ?x250) ?x284 (* (- 1) ?x295)) 0)))
 (let (($x244 (= (+ ?x63 (* (- 1) ?x66) ?x186 (* (- 1) ?x206) (* (- 1) ?x209) ?x220) 0)))
 (let ((?x132 (* p00 b00)))
 (let ((?x131 (* q00 a00)))
 (let ((?x175 (* (- 1) ?x131)))
 (let (($x178 (= (+ (* a q) ?x175 ?x132 (* (- 1) (* p b))) 0)))
 (let ((?x145 (* r00 b00)))
 (let ((?x127 (* s00 a00)))
 (let ((?x134 (* (- 1) ?x127)))
 (let ((?x49 (* a s)))
 (let (($x160 (= (+ ?x49 (* (- 1) (* b r)) ?x134 ?x145) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x155 (= (+ ?x33 ?x136 ?x41 (* (- 1) (* q r))) 0)))
 (and $x155 $x160 $x178 $x244 $x312 (or (not (= (* ?x609 ?x232) 0)) (not (= ?x714 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x217 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x404 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x253 (* (- 1) q)))
 (let ((?x255 (+ p ?x253)))
 (let ((?x336 (+ r (* (- 1) s))))
 (let ((?x276 (+ a (* (- 1) b))))
 (let ((?x529 (* ?x336 ?x336 ?x336 ?x276 ?x276 ?x276 ?x255 b b)))
 (let (($x582 (not (= (* (+ ?x529 (* ?x336 ?x255 ?x255 b b b)) ?x404) 0))))
 (let ((?x219 (* a00 s00 p)))
 (let ((?x216 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x487 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x216 ?x219 (* (- 1) (* a00 q00 r)))))
 (let ((?x560 (+ b (* (- 1) a))))
 (let ((?x369 (+ (* ?x560 ?x560 r r r a a a p) (* ?x560 ?x560 ?x560 r p p))))
 (let (($x341 (or (not (= (* ?x369 ?x487) 0)) $x582)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x319 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x321 (= ?x319 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x193 (* p00 s00 a)))
 (let ((?x514 (* b00 r00 p)))
 (let (($x144 (= (+ ?x514 ?x193 (* (- 1) ?x65) (* (- 1) ?x216) (* (- 1) ?x219) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x479 (* q a)))
 (let (($x512 (= (+ ?x479 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x419 (* r b)))
 (let (($x137 (= (+ ?x419 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x234 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x447 (* r q)))
 (and (= (+ ?x447 (* (- 1) (* s p)) ?x37 ?x234) 0) $x137 $x512 $x144 $x321 $x341)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x424 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x295 (* s q00 a00)))
 (let ((?x284 (* q s00 a00)))
 (let ((?x388 (* (- 1) ?x284)))
 (let ((?x250 (* q r00 b00)))
 (let ((?x249 (* s p00 b00)))
 (let ((?x353 (* (- 1) ?x249)))
 (let ((?x220 (* r q00 a00)))
 (let ((?x226 (* (- 1) ?x220)))
 (let ((?x209 (* p s00 a00)))
 (let ((?x206 (* r p00 b00)))
 (let ((?x186 (* p r00 b00)))
 (let ((?x187 (* (- 1) ?x186)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x368 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x195 (* (- 1) ?x63)))
 (let ((?x253 (* (- 1) q)))
 (let ((?x255 (+ p ?x253)))
 (let ((?x276 (+ a (* (- 1) b))))
 (let ((?x336 (+ r (* (- 1) s))))
 (let ((?x529 (* ?x336 ?x336 ?x336 ?x276 ?x276 ?x276 ?x255 b b)))
 (let ((?x526 (* p p b b b r)))
 (let ((?x458 (* (- 2) (* p q b b b r))))
 (let ((?x502 (* q q b b b r)))
 (let ((?x490 (* (- 1) (* p p b b b s))))
 (let ((?x456 (* 2 (* p q b b b s))))
 (let ((?x465 (* (- 1) (* q q b b b s))))
 (let ((?x714 (* (+ ?x465 ?x456 ?x490 ?x502 ?x458 ?x526 ?x529) (+ ?x195 ?x66 ?x368 ?x76 ?x187 ?x206 ?x209 ?x226 ?x353 ?x250 ?x388 ?x295))))
 (let ((?x232 (+ ?x195 ?x66 ?x187 ?x206 ?x209 ?x226)))
 (let ((?x609 (+ (* p a a a a a r r r) (* (- 2) (* p a a a a b r r r)) (* p a a a b b r r r) (* (- 1) (* p p a a a r)) (* 3 (* p p a a b r)) ?x526 (* (- 3) (* p p a b b r)))))
 (let (($x312 (= (+ ?x72 (* (- 1) ?x76) ?x249 (* (- 1) ?x250) ?x284 (* (- 1) ?x295)) 0)))
 (let (($x244 (= (+ ?x63 (* (- 1) ?x66) ?x186 (* (- 1) ?x206) (* (- 1) ?x209) ?x220) 0)))
 (let ((?x132 (* p00 b00)))
 (let ((?x131 (* q00 a00)))
 (let ((?x175 (* (- 1) ?x131)))
 (let (($x178 (= (+ (* a q) ?x175 ?x132 (* (- 1) (* p b))) 0)))
 (let ((?x145 (* r00 b00)))
 (let ((?x127 (* s00 a00)))
 (let ((?x134 (* (- 1) ?x127)))
 (let ((?x49 (* a s)))
 (let (($x160 (= (+ ?x49 (* (- 1) (* b r)) ?x134 ?x145) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x155 (= (+ ?x33 ?x136 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x737 (and $x155 $x160 $x178 $x244 $x312 (or (not (= (* ?x609 ?x232) 0)) (not (= ?x714 0))))))
 (let ((?x404 (+ (* (- 1) (* b00 r00 ?x255)) (* (- 1) (* p00 s00 ?x276)) (* b00 p00 ?x336) (* q00 r00 ?x276) (* a00 s00 ?x255) (* (- 1) (* a00 q00 ?x336)))))
 (let (($x582 (not (= (* (+ ?x529 (* ?x336 ?x255 ?x255 b b b)) ?x404) 0))))
 (let ((?x219 (* a00 s00 p)))
 (let ((?x216 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x487 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x216 ?x219 (* (- 1) (* a00 q00 r)))))
 (let ((?x560 (+ b (* (- 1) a))))
 (let ((?x369 (+ (* ?x560 ?x560 r r r a a a p) (* ?x560 ?x560 ?x560 r p p))))
 (let (($x341 (or (not (= (* ?x369 ?x487) 0)) $x582)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x319 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x321 (= ?x319 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x193 (* p00 s00 a)))
 (let ((?x514 (* b00 r00 p)))
 (let (($x144 (= (+ ?x514 ?x193 (* (- 1) ?x65) (* (- 1) ?x216) (* (- 1) ?x219) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x479 (* q a)))
 (let (($x512 (= (+ ?x479 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x419 (* r b)))
 (let (($x137 (= (+ ?x419 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x190 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x218 (and $x190 $x137 $x512 $x144 $x321 $x341)))
 (rewrite (= $x218 $x737))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x583 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x404 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x253 (* (- 1) q)))
 (let ((?x255 (+ p ?x253)))
 (let ((?x336 (+ r (* (- 1) s))))
 (let ((?x276 (+ a (* (- 1) b))))
 (let ((?x529 (* ?x336 ?x336 ?x336 ?x276 ?x276 ?x276 ?x255 b b)))
 (let (($x582 (not (= (* (+ ?x529 (* ?x336 ?x255 ?x255 b b b)) ?x404) 0))))
 (let ((?x219 (* a00 s00 p)))
 (let ((?x216 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x487 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x216 ?x219 (* (- 1) (* a00 q00 r)))))
 (let ((?x560 (+ b (* (- 1) a))))
 (let ((?x369 (+ (* ?x560 ?x560 r r r a a a p) (* ?x560 ?x560 ?x560 r p p))))
 (let (($x341 (or (not (= (* ?x369 ?x487) 0)) $x582)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x319 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x321 (= ?x319 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x208 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x183 (* s a)))
 (let (($x198 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x183 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x351 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x351 ?x136 ?x41) 0) $x198 $x208 (= ?x487 0) $x321 $x341)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x256 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x404 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x253 (* (- 1) q)))
 (let ((?x255 (+ p ?x253)))
 (let ((?x336 (+ r (* (- 1) s))))
 (let ((?x276 (+ a (* (- 1) b))))
 (let ((?x529 (* ?x336 ?x336 ?x336 ?x276 ?x276 ?x276 ?x255 b b)))
 (let (($x582 (not (= (* (+ ?x529 (* ?x336 ?x255 ?x255 b b b)) ?x404) 0))))
 (let ((?x219 (* a00 s00 p)))
 (let ((?x216 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x487 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x216 ?x219 (* (- 1) (* a00 q00 r)))))
 (let ((?x560 (+ b (* (- 1) a))))
 (let ((?x369 (+ (* ?x560 ?x560 r r r a a a p) (* ?x560 ?x560 ?x560 r p p))))
 (let (($x341 (or (not (= (* ?x369 ?x487) 0)) $x582)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x319 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x321 (= ?x319 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x193 (* p00 s00 a)))
 (let ((?x514 (* b00 r00 p)))
 (let (($x144 (= (+ ?x514 ?x193 (* (- 1) ?x65) (* (- 1) ?x216) (* (- 1) ?x219) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x479 (* q a)))
 (let (($x512 (= (+ ?x479 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x419 (* r b)))
 (let (($x137 (= (+ ?x419 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x234 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x447 (* r q)))
 (let (($x218 (and (= (+ ?x447 (* (- 1) (* s p)) ?x37 ?x234) 0) $x137 $x512 $x144 $x321 $x341)))
 (let (($x208 (= (+ (* (- 1) ?x479) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x198 (= (+ (* (- 1) ?x419) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x291 (and (= (+ (* (- 1) ?x447) (* s p) (* (- 1) ?x37) ?x41) 0) $x198 $x208 (= ?x487 0) $x321 $x341)))
 (rewrite (= $x291 $x218))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x111 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x105 (+ (* a a a (- b a) (- b a) p r r r) (* (- b a) (- b a) (- b a) p p r))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x98 (+ (* ?x86 ?x86 ?x86 b b ?x84 ?x89 ?x89 ?x89) (* b b b ?x84 ?x84 ?x89))))
 (let ((?x93 (+ (- (* (- 1) b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let (($x109 (or (not (= (* (- ?x93 (* a00 q00 ?x89)) ?x98) 0)) (not (= (* ?x70 ?x105) 0)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= ?x70 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) $x109))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x279 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x404 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x253 (* (- 1) q)))
 (let ((?x255 (+ p ?x253)))
 (let ((?x336 (+ r (* (- 1) s))))
 (let ((?x276 (+ a (* (- 1) b))))
 (let ((?x529 (* ?x336 ?x336 ?x336 ?x276 ?x276 ?x276 ?x255 b b)))
 (let (($x582 (not (= (* (+ ?x529 (* ?x336 ?x255 ?x255 b b b)) ?x404) 0))))
 (let ((?x219 (* a00 s00 p)))
 (let ((?x216 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x487 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x216 ?x219 (* (- 1) (* a00 q00 r)))))
 (let ((?x560 (+ b (* (- 1) a))))
 (let ((?x369 (+ (* ?x560 ?x560 r r r a a a p) (* ?x560 ?x560 ?x560 r p p))))
 (let (($x341 (or (not (= (* ?x369 ?x487) 0)) $x582)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x319 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x321 (= ?x319 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x208 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x183 (* s a)))
 (let (($x198 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x183 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x136 (* (- 1) ?x37)))
 (let ((?x351 (* s p)))
 (let (($x291 (and (= (+ (* (- 1) (* r q)) ?x351 ?x136 ?x41) 0) $x198 $x208 (= ?x487 0) $x321 $x341)))
 (let ((?x105 (+ (* a a a (- b a) (- b a) p r r r) (* (- b a) (- b a) (- b a) p p r))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x98 (+ (* ?x86 ?x86 ?x86 b b ?x84 ?x89 ?x89 ?x89) (* b b b ?x84 ?x84 ?x89))))
 (let ((?x93 (+ (- (* (- 1) b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let (($x109 (or (not (= (* (- ?x93 (* a00 q00 ?x89)) ?x98) 0)) (not (= (* ?x70 ?x105) 0)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x110 (and $x44 $x53 $x61 (= ?x70 0) (= (- ?x80 ?x81) 0) $x109)))
 (rewrite (= $x110 $x291)))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x112 (asserted $x111)))
 (let ((@x292 (mp (mp @x112 (quant-intro (proof-bind ?x279) (= $x111 $x583)) $x583) (rewrite (= $x583 $x583)) $x583)))
 (let ((@x591 (mp (mp @x292 (quant-intro (proof-bind ?x256) (= $x583 $x217)) $x217) (quant-intro (proof-bind ?x424) (= $x217 $x421)) $x421)))
 (let ((@x712 (mp (mp~ @x591 (sk (~ $x421 $x394)) $x394) (rewrite (= $x394 $x619)) $x619)))
 (let ((@x525 (and-elim @x712 $x649)))
 (let ((@x287 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x649) $x510)) @x525 $x510)))
 (let (($x469 (<= ?x532 0)))
 (let ((@x652 (and-elim @x712 $x473)))
 (let ((@x694 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x473) $x469)) @x652 $x469)))
 (let (($x584 (>= ?x327 0)))
 (let ((@x612 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x649) $x584)) @x525 $x584)))
 (let (($x537 (>= ?x532 0)))
 (let ((@x417 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x473) $x537)) @x652 $x537)))
 (let (($x401 (not (<= ?x698 0))))
 (let (($x498 (>= ?x698 0)))
 (let ((@x648 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x498)) @x417 @x612 @x694 @x287 false) $x498)))
 (let ((@x692 (unit-resolution (and-elim @x712 $x173) ((_ th-lemma arith eq-propagate 0 0 0 0) @x417 @x694 @x417 @x694 $x556) $x697)))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x482 $x401 (not $x498))) @x692 @x648 $x401) @x417 @x612 @x694 @x287 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 11
 :arith-assert-diseq        2
 :arith-assert-lower        15
 :arith-assert-upper        14
 :arith-conflicts           2
 :arith-eq-adapter          9
 :arith-fixed-eqs           4
 :arith-grobner             2
 :arith-max-min             222
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              5
 :arith-pseudo-nonlinear    4
 :arith-row-summations      2
 :arith-tableau-max-columns 67
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 2
 :del-clause                19
 :final-checks              2
 :max-memory                90.01
 :memory                    3.13
 :mk-bool-var               33
 :mk-clause                 32
 :num-allocs                850624865414.00
 :num-checks                1
 :propagations              17
 :rlimit-count              24011343
 :time                      14.51
 :total-time                14.51)
