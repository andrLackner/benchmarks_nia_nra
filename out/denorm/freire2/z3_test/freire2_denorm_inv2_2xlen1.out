unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1617 (* r!2 s!1)))
 (let ((?x1004 (* 2 ?x1617)))
 (let ((?x841 (* (- 3) s!1)))
 (let ((?x817 (* 6 x!0)))
 (let ((?x965 (* 3 r!2)))
 (let ((?x430 (* r00 r00 r00)))
 (let ((?x431 (* 12 ?x430)))
 (let ((?x387 (* s00 r00)))
 (let ((?x465 (* (- 6) ?x387)))
 (let ((?x462 (* (- 6) x00)))
 (let ((?x461 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1069 (+ ?x44 ?x461 ?x462 ?x465 ?x431 ?x965 ?x817 (* (- 12) (* r00 r00 r!2)) ?x841 (* 4 (* s00 r!2)) ?x1004)))
 (let (($x598 (>= ?x1069 0)))
 (let (($x1578 (= ?x1069 0)))
 (let ((?x1036 (* (- 2) ?x1617)))
 (let ((?x1521 (* 7 s!1)))
 (let ((?x886 (* r!2 r!2)))
 (let ((?x971 (* (- 12) ?x886)))
 (let ((?x1043 (* (- 6) x!0)))
 (let ((?x1031 (* (- 3) r!2)))
 (let ((?x444 (* (- 12) ?x430)))
 (let ((?x388 (* 6 ?x387)))
 (let ((?x260 (* r00 r00)))
 (let ((?x1389 (* 12 ?x260)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1527 (* (- 7) s00)))
 (let ((?x521 (+ ?x1527 ?x48 ?x59 ?x1389 ?x388 ?x444 ?x1031 ?x1043 ?x971 (* 12 (* r00 r00 r!2)) ?x1521 (* (- 4) (* s00 r!2)) ?x1036)))
 (let ((?x1179 (+ 3 (* 6 r!2) s!1)))
 (let ((?x974 (* (- 1) s!1)))
 (let ((?x709 (+ x!0 ?x974)))
 (let ((?x959 (+ 1 r!2)))
 (let ((?x734 (* ?x959 ?x959 ?x959 ?x959 ?x709 ?x709 ?x709 ?x709 ?x1179 ?x1179 ?x1179 ?x1179 ?x521)))
 (let (($x255 (= ?x734 0)))
 (let (($x768 (not $x255)))
 (let ((?x1594 (* (- 9) s!1)))
 (let ((?x1307 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1307)))
 (let ((?x1145 (* s00 s00 s00)))
 (let ((?x727 (* 16 ?x1145)))
 (let ((?x883 (* r00 r00 s!1)))
 (let ((?x893 (* 36 ?x883)))
 (let ((?x843 (* r00 r00 r00 x00)))
 (let ((?x778 (* (- 432) ?x843)))
 (let ((?x766 (* s00 x00)))
 (let ((?x924 (* (- 108) ?x766)))
 (let ((?x608 (* s00 r00 r00)))
 (let ((?x1593 (* (- 36) ?x608)))
 (let ((?x552 (* s00 s00)))
 (let ((?x899 (* 51 ?x552)))
 (let ((?x483 (* r00 x00)))
 (let ((?x934 (* 108 ?x483)))
 (let ((?x137 (* 9 s00)))
 (let ((?x383 (+ ?x137 (* (- 54) ?x387) (* 216 (* s00 r00 x00)) ?x934 (* (- 216) (* x00 x!0)) ?x899 (* 108 (* s00 x!0)) ?x1593 (* (- 108) (* s00 s00 r00)) (* (- 108) (* r00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x00 s!1)) (* (- 36) (* s00 s00 r00 r00)) (* 108 (* s00 r00 s!1)) (* (- 108) (* x!0 s!1)) ?x924 (* 36 (* r00 r00 s!1 s!1)) (* 108 (* x!0 x!0)) ?x778 (* (- 216) (* r00 r00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) ?x893 (* 216 (* s00 r00 r00 r00)) (* (- 66) (* s00 s!1)) (* 15 (* s!1 s!1)) ?x727 (* 54 (* r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* (- 12) (* s00 s!1 s!1)) ?x1202 ?x1594)))
 (let ((?x790 (+ ?x137 (* (- 24) ?x387) (* 54 ?x483) (* 15 ?x552) (* 4 (* s00 s00 r!2)) (* 6 (* s00 x!0)) (* (- 2) (* s00 r!2 s!1)) ?x1593 (* 2 (* s00 s00 r00)) (* 54 (* x00 r!2)) (* (- 54) (* r00 x!0)) (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* x!0 s!1)) (* (- 6) ?x766) (* 36 (* r00 r00 x00)) (* (- 54) (* r!2 x!0)) ?x893 (* (- 36) (* r00 r!2 x!0)) (* 36 (* r00 x00 r!2)) (* (- 2) (* r!2 s!1 s!1)) (* (- 12) (* s00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 3) (* s!1 s!1)) (* 24 (* r00 s!1)) ?x1594 (* (- 24) (* s00 r!2)) (* 24 ?x1617))))
 (let ((?x243 (+ ?x44 (* (- 9) ?x387) (* (- 6) (* r00 r!2 s!1)) (* 18 ?x483) (* 4 ?x552) (* (- 6) ?x608) (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)) (* (- 18) (* r!2 x!0)) (* 6 ?x883) (* (- 2) (* s00 s!1)) (* (- 2) (* s!1 s!1)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) ?x841 (* (- 9) (* s00 r!2)) (* 9 ?x1617))))
 (let ((?x1032 (* (- 3) ?x260)))
 (let ((?x1522 (+ s00 ?x1032 (* 3 ?x886) ?x974)))
 (let (($x1525 (= ?x1522 0)))
 (let (($x939 (and $x1525 $x1578 (= ?x243 0) (= ?x790 0) (= ?x383 0) $x768)))
 (let ((?x1370 (+ ?x1031 ?x1521 ?x1043 ?x1527 ?x48 ?x59 ?x971 ?x1389 ?x1036 (* 12 (* r!2 r00 r00)) (* (- 4) (* r!2 s00)) ?x388 ?x444)))
 (let ((?x907 (+ ?x974 x!0)))
 (let ((?x1039 (* ?x959 ?x959 ?x959 ?x959 ?x907 ?x907 ?x907 ?x907 ?x1179 ?x1179 ?x1179 ?x1179 ?x1370)))
 (let ((?x1337 (* (- 108) ?x1307)))
 (let ((?x1336 (* (- 16) ?x1145)))
 (let ((?x1017 (* s00 r00 r00 r00)))
 (let ((?x1332 (* (- 216) ?x1017)))
 (let ((?x844 (* 432 ?x843)))
 (let ((?x1090 (* 108 ?x766)))
 (let ((?x692 (* s00 s00 r00 r00)))
 (let ((?x693 (* 36 ?x692)))
 (let ((?x629 (* s00 s00 r00)))
 (let ((?x973 (* 108 ?x629)))
 (let ((?x961 (* 36 ?x608)))
 (let ((?x1326 (* (- 51) ?x552)))
 (let ((?x1294 (* s!1 r00 r00)))
 (let ((?x568 (* (- 36) ?x1294)))
 (let ((?x1323 (* (- 108) ?x483)))
 (let ((?x474 (* s00 r00 x00)))
 (let ((?x1322 (* (- 216) ?x474)))
 (let ((?x481 (* 54 ?x387)))
 (let ((?x948 (* (- 9) s00)))
 (let ((?x1544 (* 9 s!1)))
 (let ((?x998 (+ ?x1544 ?x948 ?x481 ?x1322 ?x1323 (* (- 15) (* s!1 s!1)) ?x568 ?x1326 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x961 ?x973 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x693 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1090 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x844 (* 12 (* s!1 s!1 s00)) ?x1332 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1336 (* 216 (* x!0 x00)) ?x1337)))
 (let ((?x838 (* r00 r00 x00)))
 (let ((?x851 (* (- 36) ?x838)))
 (let ((?x767 (* 6 ?x766)))
 (let ((?x657 (* (- 2) ?x629)))
 (let ((?x877 (* (- 15) ?x552)))
 (let ((?x512 (* (- 54) ?x483)))
 (let ((?x525 (* 24 ?x387)))
 (let ((?x584 (+ ?x1544 ?x948 (* (- 24) ?x1617) (* 24 (* r!2 s00)) ?x525 ?x512 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x568 ?x877 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x961 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x657 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x767 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x851 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x609 (* 6 ?x608)))
 (let ((?x565 (* (- 4) ?x552)))
 (let ((?x497 (* (- 18) ?x483)))
 (let ((?x502 (* 9 ?x387)))
 (let ((?x339 (* (- 3) s00)))
 (let ((?x1008 (+ (* 3 s!1) ?x339 (* (- 9) ?x1617) (* 9 (* r!2 s00)) ?x502 ?x497 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1294) ?x565 (* 18 (* x!0 r00)) ?x609 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x968 (+ ?x965 ?x841 ?x817 ?x44 ?x461 ?x462 ?x1004 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x465 ?x431)))
 (let (($x1302 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x886) (* 3 ?x260)) 0) (= ?x968 0) (= ?x1008 0) (= ?x584 0) (= ?x998 0) (not (= ?x1039 0)))))
 (let (($x789 (exists ((r Int) (s Int) (x Int) )(! (let ((?x430 (* r00 r00 r00)))
 (let ((?x444 (* (- 12) ?x430)))
 (let ((?x387 (* s00 r00)))
 (let ((?x388 (* 6 ?x387)))
 (let ((?x360 (* r s00)))
 (let ((?x374 (* (- 4) ?x360)))
 (let ((?x310 (* r r00 r00)))
 (let ((?x311 (* 12 ?x310)))
 (let ((?x304 (* r s)))
 (let ((?x305 (* (- 2) ?x304)))
 (let ((?x260 (* r00 r00)))
 (let ((?x1389 (* 12 ?x260)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1527 (* (- 7) s00)))
 (let ((?x409 (* (- 6) x)))
 (let ((?x1589 (* 7 s)))
 (let ((?x1000 (* (- 3) r)))
 (let ((?x1059 (+ ?x1000 ?x1589 ?x409 ?x1527 ?x48 ?x59 (* (- 12) (* r r)) ?x1389 ?x305 ?x311 ?x374 ?x388 ?x444)))
 (let ((?x213 (* 6 r)))
 (let ((?x1347 (+ 3 ?x213 s)))
 (let ((?x239 (* (- 1) s)))
 (let ((?x1546 (+ ?x239 x)))
 (let ((?x1344 (+ 1 r)))
 (let ((?x1060 (* ?x1344 ?x1344 ?x1344 ?x1344 ?x1546 ?x1546 ?x1546 ?x1546 ?x1347 ?x1347 ?x1347 ?x1347 ?x1059)))
 (let ((?x1307 (* x00 x00)))
 (let ((?x1337 (* (- 108) ?x1307)))
 (let ((?x1145 (* s00 s00 s00)))
 (let ((?x1336 (* (- 16) ?x1145)))
 (let ((?x1017 (* s00 r00 r00 r00)))
 (let ((?x1332 (* (- 216) ?x1017)))
 (let ((?x843 (* r00 r00 r00 x00)))
 (let ((?x844 (* 432 ?x843)))
 (let ((?x766 (* s00 x00)))
 (let ((?x1090 (* 108 ?x766)))
 (let ((?x692 (* s00 s00 r00 r00)))
 (let ((?x693 (* 36 ?x692)))
 (let ((?x629 (* s00 s00 r00)))
 (let ((?x973 (* 108 ?x629)))
 (let ((?x608 (* s00 r00 r00)))
 (let ((?x961 (* 36 ?x608)))
 (let ((?x552 (* s00 s00)))
 (let ((?x1326 (* (- 51) ?x552)))
 (let ((?x526 (* s r00 r00)))
 (let ((?x825 (* (- 36) ?x526)))
 (let ((?x483 (* r00 x00)))
 (let ((?x1323 (* (- 108) ?x483)))
 (let ((?x474 (* s00 r00 x00)))
 (let ((?x1322 (* (- 216) ?x474)))
 (let ((?x481 (* 54 ?x387)))
 (let ((?x948 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1338 (+ ?x143 ?x948 ?x481 ?x1322 ?x1323 (* (- 15) (* s s)) ?x825 ?x1326 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x961 ?x973 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x693 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1090 (* 108 (* s x)) (* (- 108) (* x x)) ?x844 (* 12 (* s s s00)) ?x1332 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1336 (* 216 (* x x00)) ?x1337)))
 (let (($x1339 (= ?x1338 0)))
 (let ((?x838 (* r00 r00 x00)))
 (let ((?x851 (* (- 36) ?x838)))
 (let ((?x767 (* 6 ?x766)))
 (let ((?x657 (* (- 2) ?x629)))
 (let ((?x877 (* (- 15) ?x552)))
 (let ((?x506 (* s s)))
 (let ((?x530 (* 3 ?x506)))
 (let ((?x512 (* (- 54) ?x483)))
 (let ((?x525 (* 24 ?x387)))
 (let ((?x1040 (+ ?x143 ?x948 (* (- 24) ?x304) (* 24 ?x360) ?x525 ?x512 ?x530 (* 54 (* r x)) (* 36 (* r x r00)) ?x825 ?x877 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x961 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x657 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x767 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x851 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1045 (= ?x1040 0)))
 (let ((?x609 (* 6 ?x608)))
 (let ((?x565 (* (- 4) ?x552)))
 (let ((?x507 (* 2 ?x506)))
 (let ((?x497 (* (- 18) ?x483)))
 (let ((?x502 (* 9 ?x387)))
 (let ((?x339 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x706 (+ ?x47 ?x339 (* (- 9) ?x304) (* 9 ?x360) ?x502 ?x497 ?x507 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x526) ?x565 (* 18 (* x r00)) ?x609 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x713 (= ?x706 0)))
 (let ((?x431 (* 12 ?x430)))
 (let ((?x465 (* (- 6) ?x387)))
 (let ((?x462 (* (- 6) x00)))
 (let ((?x461 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x466 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x461 ?x462 (* 2 ?x304) (* (- 12) ?x310) (* 4 ?x360) ?x465 ?x431)))
 (let (($x467 (= ?x466 0)))
 (let (($x293 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x260)) 0)))
 (and $x293 $x467 $x713 $x1045 $x1339 (not (= ?x1060 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x737 (exists ((r Int) (s Int) (x Int) )(! (let ((?x430 (* r00 r00 r00)))
 (let ((?x444 (* (- 12) ?x430)))
 (let ((?x59 (* 6 x00)))
 (let ((?x409 (* (- 6) x)))
 (let ((?x651 (* r00 s00)))
 (let ((?x660 (* 6 ?x651)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x339 (* (- 3) s00)))
 (let ((?x1035 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x339 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x660 ?x409 ?x59 ?x444)))
 (let ((?x213 (* 6 r)))
 (let ((?x958 (+ 3 s ?x213)))
 (let ((?x239 (* (- 1) s)))
 (let ((?x1267 (+ x ?x239)))
 (let ((?x1344 (+ 1 r)))
 (let ((?x1054 (* ?x1344 ?x1344 ?x1344 ?x1344 ?x1267 ?x1267 ?x1267 ?x1267 ?x958 ?x958 ?x958 ?x958 ?x1035)))
 (let ((?x1307 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1307)))
 (let ((?x137 (* 9 s00)))
 (let ((?x552 (* s00 s00)))
 (let ((?x899 (* 51 ?x552)))
 (let ((?x1145 (* s00 s00 s00)))
 (let ((?x727 (* 16 ?x1145)))
 (let ((?x766 (* s00 x00)))
 (let ((?x924 (* (- 108) ?x766)))
 (let ((?x843 (* r00 r00 r00 x00)))
 (let ((?x778 (* (- 432) ?x843)))
 (let ((?x483 (* r00 x00)))
 (let ((?x934 (* 108 ?x483)))
 (let ((?x1219 (+ (* 216 (* r00 s00 x00)) ?x934 (* (- 54) ?x651) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x778 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x924 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x727 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x899 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let ((?x948 (* (- 9) s00)))
 (let ((?x877 (* (- 15) ?x552)))
 (let ((?x838 (* r00 r00 x00)))
 (let ((?x851 (* (- 36) ?x838)))
 (let ((?x767 (* 6 ?x766)))
 (let ((?x506 (* s s)))
 (let ((?x530 (* 3 ?x506)))
 (let ((?x512 (* (- 54) ?x483)))
 (let ((?x896 (+ (* (- 24) (* s r)) ?x512 (* 36 (* r00 x r)) (* 24 ?x651) ?x530 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x767 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x851 ?x877 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x948 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x565 (* (- 4) ?x552)))
 (let ((?x507 (* 2 ?x506)))
 (let ((?x497 (* (- 18) ?x483)))
 (let ((?x1135 (+ (* (- 9) (* s r)) ?x497 (* 9 ?x651) ?x507 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x565 (* 18 (* r00 x)) ?x339 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1000 (* (- 3) r)))
 (let ((?x682 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1000 ?x339 ?x47 ?x48 (* (- 4) (* s00 r)) ?x660 ?x409 ?x59 ?x444)))
 (let (($x1188 (= (+ s00 ?x239 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1188 (= ?x682 0) (= ?x1135 0) (= ?x896 0) (= ?x1219 0) (not (= ?x1054 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1547 (lambda ((r Int) (s Int) (x Int) )(let ((?x430 (* r00 r00 r00)))
 (let ((?x444 (* (- 12) ?x430)))
 (let ((?x387 (* s00 r00)))
 (let ((?x388 (* 6 ?x387)))
 (let ((?x360 (* r s00)))
 (let ((?x374 (* (- 4) ?x360)))
 (let ((?x310 (* r r00 r00)))
 (let ((?x311 (* 12 ?x310)))
 (let ((?x304 (* r s)))
 (let ((?x305 (* (- 2) ?x304)))
 (let ((?x260 (* r00 r00)))
 (let ((?x1389 (* 12 ?x260)))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1527 (* (- 7) s00)))
 (let ((?x409 (* (- 6) x)))
 (let ((?x1589 (* 7 s)))
 (let ((?x1000 (* (- 3) r)))
 (let ((?x1059 (+ ?x1000 ?x1589 ?x409 ?x1527 ?x48 ?x59 (* (- 12) (* r r)) ?x1389 ?x305 ?x311 ?x374 ?x388 ?x444)))
 (let ((?x213 (* 6 r)))
 (let ((?x1347 (+ 3 ?x213 s)))
 (let ((?x239 (* (- 1) s)))
 (let ((?x1546 (+ ?x239 x)))
 (let ((?x1344 (+ 1 r)))
 (let ((?x1060 (* ?x1344 ?x1344 ?x1344 ?x1344 ?x1546 ?x1546 ?x1546 ?x1546 ?x1347 ?x1347 ?x1347 ?x1347 ?x1059)))
 (let ((?x1307 (* x00 x00)))
 (let ((?x1337 (* (- 108) ?x1307)))
 (let ((?x1145 (* s00 s00 s00)))
 (let ((?x1336 (* (- 16) ?x1145)))
 (let ((?x1017 (* s00 r00 r00 r00)))
 (let ((?x1332 (* (- 216) ?x1017)))
 (let ((?x843 (* r00 r00 r00 x00)))
 (let ((?x844 (* 432 ?x843)))
 (let ((?x766 (* s00 x00)))
 (let ((?x1090 (* 108 ?x766)))
 (let ((?x692 (* s00 s00 r00 r00)))
 (let ((?x693 (* 36 ?x692)))
 (let ((?x629 (* s00 s00 r00)))
 (let ((?x973 (* 108 ?x629)))
 (let ((?x608 (* s00 r00 r00)))
 (let ((?x961 (* 36 ?x608)))
 (let ((?x552 (* s00 s00)))
 (let ((?x1326 (* (- 51) ?x552)))
 (let ((?x526 (* s r00 r00)))
 (let ((?x825 (* (- 36) ?x526)))
 (let ((?x483 (* r00 x00)))
 (let ((?x1323 (* (- 108) ?x483)))
 (let ((?x474 (* s00 r00 x00)))
 (let ((?x1322 (* (- 216) ?x474)))
 (let ((?x481 (* 54 ?x387)))
 (let ((?x948 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1338 (+ ?x143 ?x948 ?x481 ?x1322 ?x1323 (* (- 15) (* s s)) ?x825 ?x1326 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x961 ?x973 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x693 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1090 (* 108 (* s x)) (* (- 108) (* x x)) ?x844 (* 12 (* s s s00)) ?x1332 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1336 (* 216 (* x x00)) ?x1337)))
 (let (($x1339 (= ?x1338 0)))
 (let ((?x838 (* r00 r00 x00)))
 (let ((?x851 (* (- 36) ?x838)))
 (let ((?x767 (* 6 ?x766)))
 (let ((?x657 (* (- 2) ?x629)))
 (let ((?x877 (* (- 15) ?x552)))
 (let ((?x506 (* s s)))
 (let ((?x530 (* 3 ?x506)))
 (let ((?x512 (* (- 54) ?x483)))
 (let ((?x525 (* 24 ?x387)))
 (let ((?x1040 (+ ?x143 ?x948 (* (- 24) ?x304) (* 24 ?x360) ?x525 ?x512 ?x530 (* 54 (* r x)) (* 36 (* r x r00)) ?x825 ?x877 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x961 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x657 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x767 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x851 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1045 (= ?x1040 0)))
 (let ((?x609 (* 6 ?x608)))
 (let ((?x565 (* (- 4) ?x552)))
 (let ((?x507 (* 2 ?x506)))
 (let ((?x497 (* (- 18) ?x483)))
 (let ((?x502 (* 9 ?x387)))
 (let ((?x339 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x706 (+ ?x47 ?x339 (* (- 9) ?x304) (* 9 ?x360) ?x502 ?x497 ?x507 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x526) ?x565 (* 18 (* x r00)) ?x609 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x713 (= ?x706 0)))
 (let ((?x431 (* 12 ?x430)))
 (let ((?x465 (* (- 6) ?x387)))
 (let ((?x462 (* (- 6) x00)))
 (let ((?x461 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x466 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x461 ?x462 (* 2 ?x304) (* (- 12) ?x310) (* 4 ?x360) ?x465 ?x431)))
 (let (($x467 (= ?x466 0)))
 (let (($x293 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x260)) 0)))
 (let (($x963 (and $x293 $x467 $x713 $x1045 $x1339 (not (= ?x1060 0)))))
 (let ((?x651 (* r00 s00)))
 (let ((?x660 (* 6 ?x651)))
 (let ((?x1035 (+ 6 (* (- 2) (* ?x1344 (+ 3 s ?x213))) (* 12 (* r00 r00 ?x1344)) (* 15 r) ?x339 ?x143 ?x48 (* (- 4) (* s00 ?x1344)) ?x660 ?x409 ?x59 ?x444)))
 (let ((?x958 (+ 3 s ?x213)))
 (let ((?x1267 (+ x ?x239)))
 (let ((?x1054 (* ?x1344 ?x1344 ?x1344 ?x1344 ?x1267 ?x1267 ?x1267 ?x1267 ?x958 ?x958 ?x958 ?x958 ?x1035)))
 (let ((?x1202 (* 108 ?x1307)))
 (let ((?x137 (* 9 s00)))
 (let ((?x899 (* 51 ?x552)))
 (let ((?x727 (* 16 ?x1145)))
 (let ((?x924 (* (- 108) ?x766)))
 (let ((?x778 (* (- 432) ?x843)))
 (let ((?x934 (* 108 ?x483)))
 (let ((?x1219 (+ (* 216 (* r00 s00 x00)) ?x934 (* (- 54) ?x651) (* 15 ?x506) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x778 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x924 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x727 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x899 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let ((?x896 (+ (* (- 24) (* s r)) ?x512 (* 36 (* r00 x r)) (* 24 ?x651) ?x530 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x767 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x851 ?x877 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x948 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1135 (+ (* (- 9) (* s r)) ?x497 (* 9 ?x651) ?x507 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x565 (* 18 (* r00 x)) ?x339 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x682 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1000 ?x339 ?x47 ?x48 (* (- 4) (* s00 r)) ?x660 ?x409 ?x59 ?x444)))
 (let (($x755 (and (= (+ s00 ?x239 (* 3 (* r r)) (* (- 3) ?x260)) 0) (= ?x682 0) (= ?x1135 0) (= ?x896 0) (= ?x1219 0) (not (= ?x1054 0)))))
 (rewrite (= $x755 $x963))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x236 (exists ((r Int) (s Int) (x Int) )(! (let ((?x226 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x59 (* 6 x00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let ((?x231 (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x212 ?x212 ?x214 ?x226 ?x226 ?x226)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x231 0))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x454 (lambda ((r Int) (s Int) (x Int) )(let ((?x430 (* r00 r00 r00)))
 (let ((?x444 (* (- 12) ?x430)))
 (let ((?x59 (* 6 x00)))
 (let ((?x409 (* (- 6) x)))
 (let ((?x651 (* r00 s00)))
 (let ((?x660 (* 6 ?x651)))
 (let ((?x48 (* 3 r00)))
 (let ((?x143 (* 9 s)))
 (let ((?x339 (* (- 3) s00)))
 (let ((?x1035 (+ 6 (* (- 2) (* (+ 1 r) (+ 3 s (* 6 r)))) (* 12 (* r00 r00 (+ 1 r))) (* 15 r) ?x339 ?x143 ?x48 (* (- 4) (* s00 (+ 1 r))) ?x660 ?x409 ?x59 ?x444)))
 (let ((?x213 (* 6 r)))
 (let ((?x958 (+ 3 s ?x213)))
 (let ((?x239 (* (- 1) s)))
 (let ((?x1267 (+ x ?x239)))
 (let ((?x1344 (+ 1 r)))
 (let ((?x1054 (* ?x1344 ?x1344 ?x1344 ?x1344 ?x1267 ?x1267 ?x1267 ?x1267 ?x958 ?x958 ?x958 ?x958 ?x1035)))
 (let ((?x1307 (* x00 x00)))
 (let ((?x1202 (* 108 ?x1307)))
 (let ((?x137 (* 9 s00)))
 (let ((?x552 (* s00 s00)))
 (let ((?x899 (* 51 ?x552)))
 (let ((?x1145 (* s00 s00 s00)))
 (let ((?x727 (* 16 ?x1145)))
 (let ((?x766 (* s00 x00)))
 (let ((?x924 (* (- 108) ?x766)))
 (let ((?x843 (* r00 r00 r00 x00)))
 (let ((?x778 (* (- 432) ?x843)))
 (let ((?x483 (* r00 x00)))
 (let ((?x934 (* 108 ?x483)))
 (let ((?x1219 (+ (* 216 (* r00 s00 x00)) ?x934 (* (- 54) ?x651) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x778 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x924 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x727 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x899 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1202)))
 (let ((?x948 (* (- 9) s00)))
 (let ((?x877 (* (- 15) ?x552)))
 (let ((?x838 (* r00 r00 x00)))
 (let ((?x851 (* (- 36) ?x838)))
 (let ((?x767 (* 6 ?x766)))
 (let ((?x506 (* s s)))
 (let ((?x530 (* 3 ?x506)))
 (let ((?x512 (* (- 54) ?x483)))
 (let ((?x896 (+ (* (- 24) (* s r)) ?x512 (* 36 (* r00 x r)) (* 24 ?x651) ?x530 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x767 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x851 ?x877 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x948 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x565 (* (- 4) ?x552)))
 (let ((?x507 (* 2 ?x506)))
 (let ((?x497 (* (- 18) ?x483)))
 (let ((?x1135 (+ (* (- 9) (* s r)) ?x497 (* 9 ?x651) ?x507 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x565 (* 18 (* r00 x)) ?x339 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x1000 (* (- 3) r)))
 (let ((?x682 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x1000 ?x339 ?x47 ?x48 (* (- 4) (* s00 r)) ?x660 ?x409 ?x59 ?x444)))
 (let (($x1188 (= (+ s00 ?x239 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x755 (and $x1188 (= ?x682 0) (= ?x1135 0) (= ?x896 0) (= ?x1219 0) (not (= ?x1054 0)))))
 (let ((?x226 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x61 (* 12 r00 r00 r00)))
 (let ((?x54 (* 6 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x219 (- (+ (* (- 2) ?x212 ?x214) (* 12 ?x212 r00 r00)) (* 3 ?x212))))
 (let ((?x225 (+ (- (+ (- ?x219 ?x44) (* 3 ?x214) ?x48) (* 4 ?x212 s00)) ?x54)))
 (let ((?x231 (* (- (+ (- ?x225 (* 6 ?x226)) ?x59) ?x61) ?x212 ?x212 ?x214 ?x214 ?x214 ?x226 ?x212 ?x212 ?x214 ?x226 ?x226 ?x226)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x60 (+ (- (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) ?x54) ?x56) ?x59)))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x235 (and $x36 (= (- ?x60 ?x61) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x231 0))))))
 (rewrite (= $x235 $x755)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x237 (asserted $x236)))
 (let ((@x1406 (mp (mp @x237 (quant-intro (proof-bind ?x454) (= $x236 $x737)) $x737) (rewrite (= $x737 $x737)) $x737)))
 (let ((@x1519 (mp~ (mp @x1406 (quant-intro (proof-bind ?x1547) (= $x737 $x789)) $x789) (sk (~ $x789 $x1302)) $x1302)))
 (let ((@x1377 (mp @x1519 (rewrite (= $x1302 $x939)) $x939)))
 (let ((@x761 (and-elim @x1377 $x1578)))
 (let ((@x1270 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1578) $x598)) @x761 $x598)))
 (let (($x1265 (>= ?x1522 0)))
 (let ((@x1353 (and-elim @x1377 $x1525)))
 (let ((@x601 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1525) $x1265)) @x1353 $x1265)))
 (let (($x282 (<= ?x1069 0)))
 (let ((@x1459 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1578) $x282)) @x761 $x282)))
 (let (($x785 (<= ?x1522 0)))
 (let ((@x520 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1525) $x785)) @x1353 $x785)))
 (let (($x684 (not (<= ?x734 0))))
 (let (($x979 (>= ?x734 0)))
 (let ((@x681 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x979)) @x520 @x1459 @x601 @x1270 false) $x979)))
 (let ((@x1096 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x255 $x684 (not $x979))) (and-elim @x1377 $x768) (or $x684 (not $x979)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x1096 @x681 $x684) @x520 @x1459 @x601 @x1270 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        10
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-fixed-eqs           2
 :arith-max-min             230
 :arith-nonlinear-bounds    16
 :arith-num-rows            9
 :arith-pivots              5
 :arith-pseudo-nonlinear    2
 :arith-row-summations      11
 :arith-tableau-max-columns 97
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              2
 :max-memory                19.86
 :memory                    19.26
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                620945
 :num-checks                1
 :propagations              12
 :rlimit-count              7553
 :time                      0.01
 :total-time                0.02)
