% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on cubes_denorm_inv3_3xlen1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7931
% Time elapsed: 0.500 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_6 on cubes_denorm_inv3_3xlen1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7931
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity:gtg=exists_all_2 on cubes_denorm_inv3_3xlen1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7419
% Time elapsed: 0.500 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity:thsq=on:thsqd=16_2 on cubes_denorm_inv3_3xlen1
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for cubes_denorm_inv3_3xlen1
% SZS output start Proof for cubes_denorm_inv3_3xlen1
1. ? [X1 : $int,X3 : $int,X2 : $int,X0 : $int] : (0 = $difference($sum($product($uminus(6),1),X2),$product(6,X3)) & 0 = $sum($sum($difference($difference($difference($product(4,1),$product(18,X0)),$product($product(9,X0),X3)),$product(5,X1)),$product(9,X3)),$product(X1,X1)) & 0 = $sum($difference($sum($difference(1,$product(3,X0)),$product(X1,X3)),X1),$product(2,X3)) & 0 = $sum($difference($sum(1,$product($product(3,X3),X3)),X1),$product(3,X3)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($difference($sum($difference(1,$product(3,$sum(X0,X1))),$product($sum(X1,X2),$sum(X3,1))),$sum(X1,X2)),$product(2,$sum(X3,1))),$uminus(1)),$sum(X1,X2)),$sum(X1,X2)),$sum(X1,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X0,X1)),$sum(X3,1)),$sum(X3,1)),$uminus(1)),$sum(X1,X2)),$sum(X1,X2)),$sum(X1,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X3,1)),$sum(X3,1))) [input]
2. ? [X1 : $int,X3 : $int,X2 : $int,X0 : $int] : (0 = $sum($sum($product($uminus(6),1),X2),$uminus($product(6,X3))) & 0 = $sum($sum($sum($difference($difference($product(4,1),$product(18,X0)),$product($product(9,X0),X3)),$uminus($product(5,X1))),$product(9,X3)),$product(X1,X1)) & 0 = $sum($sum($sum($difference(1,$product(3,X0)),$product(X1,X3)),$uminus(X1)),$product(2,X3)) & 0 = $sum($sum($sum(1,$product($product(3,X3),X3)),$uminus(X1)),$product(3,X3)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($difference(1,$product(3,$sum(X0,X1))),$product($sum(X1,X2),$sum(X3,1))),$uminus($sum(X1,X2))),$product(2,$sum(X3,1))),$uminus(1)),$sum(X1,X2)),$sum(X1,X2)),$sum(X1,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X0,X1)),$sum(X3,1)),$sum(X3,1)),$uminus(1)),$sum(X1,X2)),$sum(X1,X2)),$sum(X1,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X3,1)),$sum(X3,1))) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 141]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 141]
21. ? [X1 : $int,X3 : $int,X2 : $int,X0 : $int] : (0 = $sum($sum($product($uminus(6),1),X2),$uminus($product(6,X3))) & 0 = $sum($sum($sum($sum($difference($product(4,1),$product(18,X0)),$uminus($product($product(9,X0),X3))),$uminus($product(5,X1))),$product(9,X3)),$product(X1,X1)) & 0 = $sum($sum($sum($sum(1,$uminus($product(3,X0))),$product(X1,X3)),$uminus(X1)),$product(2,X3)) & 0 = $sum($sum($sum(1,$product($product(3,X3),X3)),$uminus(X1)),$product(3,X3)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(X0,X1)))),$product($sum(X1,X2),$sum(X3,1))),$uminus($sum(X1,X2))),$product(2,$sum(X3,1))),$uminus(1)),$sum(X1,X2)),$sum(X1,X2)),$sum(X1,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X0,X1)),$sum(X3,1)),$sum(X3,1)),$uminus(1)),$sum(X1,X2)),$sum(X1,X2)),$sum(X1,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X3,1)),$sum(X3,1))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int,X2 : $int,X3 : $int] : (0 = $sum($sum($product($uminus(6),1),X2),$uminus($product(6,X1))) & 0 = $sum($sum($sum($sum($difference($product(4,1),$product(18,X3)),$uminus($product($product(9,X3),X1))),$uminus($product(5,X0))),$product(9,X1)),$product(X0,X0)) & 0 = $sum($sum($sum($sum(1,$uminus($product(3,X3))),$product(X0,X1)),$uminus(X0)),$product(2,X1)) & 0 = $sum($sum($sum(1,$product($product(3,X1),X1)),$uminus(X0)),$product(3,X1)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(X3,X0)))),$product($sum(X0,X2),$sum(X1,1))),$uminus($sum(X0,X2))),$product(2,$sum(X1,1))),$uminus(1)),$sum(X0,X2)),$sum(X0,X2)),$sum(X0,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X3,X0)),$sum(X1,1)),$sum(X1,1)),$uminus(1)),$sum(X0,X2)),$sum(X0,X2)),$sum(X0,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X1,1)),$sum(X1,1))) [rectify 21]
23. ? [X0 : $int,X1 : $int,X2 : $int,X3 : $int] : (0 = $sum($sum($product($uminus(6),1),X2),$uminus($product(6,X1))) & 0 = $sum($sum($sum($sum($difference($product(4,1),$product(18,X3)),$uminus($product($product(9,X3),X1))),$uminus($product(5,X0))),$product(9,X1)),$product(X0,X0)) & 0 = $sum($sum($sum($sum(1,$uminus($product(3,X3))),$product(X0,X1)),$uminus(X0)),$product(2,X1)) & 0 = $sum($sum($sum(1,$product($product(3,X1),X1)),$uminus(X0)),$product(3,X1)) & 0 != $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(X3,X0)))),$product($sum(X0,X2),$sum(X1,1))),$uminus($sum(X0,X2))),$product(2,$sum(X1,1))),$uminus(1)),$sum(X0,X2)),$sum(X0,X2)),$sum(X0,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X3,X0)),$sum(X1,1)),$sum(X1,1)),$uminus(1)),$sum(X0,X2)),$sum(X0,X2)),$sum(X0,X2)),$sum(X2,6)),$sum(X2,6)),$sum(X2,6)),$sum(X1,1)),$sum(X1,1))) [flattening 22]
24. 0 != $product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(sK1,1))),$uminus($sum(sK0,sK2))),$product(2,$sum(sK1,1))),$uminus(1)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK3,sK0)),$sum(sK1,1)),$sum(sK1,1)),$uminus(1)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK1,1)),$sum(sK1,1)) [cnf transformation 23]
25. 0 = $sum($sum($sum(1,$product($product(3,sK1),sK1)),$uminus(sK0)),$product(3,sK1)) [cnf transformation 23]
26. 0 = $sum($sum($sum($sum(1,$uminus($product(3,sK3))),$product(sK0,sK1)),$uminus(sK0)),$product(2,sK1)) [cnf transformation 23]
27. 0 = $sum($sum($sum($sum($difference($product(4,1),$product(18,sK3)),$uminus($product($product(9,sK3),sK1))),$uminus($product(5,sK0))),$product(9,sK1)),$product(sK0,sK0)) [cnf transformation 23]
28. 0 = $sum($sum($product($uminus(6),1),sK2),$uminus($product(6,sK1))) [cnf transformation 23]
30. 0 != $product($product($product($product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(sK1,1))),$uminus($sum(sK0,sK2))),$product(2,$sum(sK1,1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(sK1,1),$sum(sK1,1)))))))))),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK1,1)),$sum(sK1,1)) [evaluation 24]
31. 0 = $sum($sum($sum($sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))),$uminus($product(5,sK0))),$product(9,sK1)),$product(sK0,sK0)) [evaluation 27]
32. 0 = $sum($sum(-6,sK2),$uminus($product(6,sK1))) [evaluation 28]
34. 1 <=> 0 = $sum($sum(-6,sK2),$uminus($product(6,sK1))) [avatar definition]
37. 1 [avatar split clause 32,34]
39. 2 <=> 0 = $sum($sum($sum(1,$product($product(3,sK1),sK1)),$uminus(sK0)),$product(3,sK1)) [avatar definition]
41. 0 = $sum($sum($sum(1,$product($product(3,sK1),sK1)),$uminus(sK0)),$product(3,sK1)) <- (2) [avatar component clause 39]
42. 2 [avatar split clause 25,39]
44. 3 <=> 0 = $sum($sum($sum($sum(1,$uminus($product(3,sK3))),$product(sK0,sK1)),$uminus(sK0)),$product(2,sK1)) [avatar definition]
46. 0 = $sum($sum($sum($sum(1,$uminus($product(3,sK3))),$product(sK0,sK1)),$uminus(sK0)),$product(2,sK1)) <- (3) [avatar component clause 44]
47. 3 [avatar split clause 26,44]
53. 4 <=> 0 = $sum($sum($sum($sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))),$uminus($product(5,sK0))),$product(9,sK1)),$product(sK0,sK0)) [avatar definition]
55. 0 = $sum($sum($sum($sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))),$uminus($product(5,sK0))),$product(9,sK1)),$product(sK0,sK0)) <- (4) [avatar component clause 53]
56. 4 [avatar split clause 31,53]
57. 0 = $sum($sum($uminus(sK0),$sum(1,$product($product(3,sK1),sK1))),$product(3,sK1)) <- (2) [backward demodulation 41,3]
58. 0 = $sum($sum($uminus(sK0),$sum($sum(1,$uminus($product(3,sK3))),$product(sK0,sK1))),$product(2,sK1)) <- (3) [backward demodulation 46,3]
67. 0 = $sum($sum($uminus(sK0),$sum($product(sK0,sK1),$sum(1,$uminus($product(3,sK3))))),$product(2,sK1)) <- (3) [forward demodulation 58,3]
75. 5 <=> 0 = $sum($sum($uminus(sK0),$sum(1,$product($product(3,sK1),sK1))),$product(3,sK1)) [avatar definition]
77. 0 = $sum($sum($uminus(sK0),$sum(1,$product($product(3,sK1),sK1))),$product(3,sK1)) <- (5) [avatar component clause 75]
78. 5 | ~2 [avatar split clause 57,39,75]
84. 6 <=> 0 = $sum($sum($uminus(sK0),$sum($product(sK0,sK1),$sum(1,$uminus($product(3,sK3))))),$product(2,sK1)) [avatar definition]
87. 6 | ~3 [avatar split clause 67,44,84]
92. 0 = $sum($sum($uminus(sK0),$sum(1,$product(sK1,$product(3,sK1)))),$product(3,sK1)) <- (5) [backward demodulation 77,14]
102. 7 <=> 0 = $sum($sum($uminus(sK0),$sum(1,$product(sK1,$product(3,sK1)))),$product(3,sK1)) [avatar definition]
105. 7 | ~5 [avatar split clause 92,75,102]
118. 0 = $sum($sum($product(9,sK1),$sum($sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))),$uminus($product(5,sK0)))),$product(sK0,sK0)) <- (4) [forward demodulation 55,3]
119. 0 = $sum($sum($product(9,sK1),$sum($uminus($product(5,sK0)),$sum($difference(4,$product(18,sK3)),$uminus($product($product(9,sK3),sK1))))),$product(sK0,sK0)) <- (4) [forward demodulation 118,3]
120. 0 = $sum($sum($product(9,sK1),$sum($uminus($product(5,sK0)),$sum($difference(4,$product(18,sK3)),$uminus($product(sK1,$product(9,sK3)))))),$product(sK0,sK0)) <- (4) [forward demodulation 119,14]
122. 8 <=> 0 = $sum($sum($product(9,sK1),$sum($uminus($product(5,sK0)),$sum($difference(4,$product(18,sK3)),$uminus($product(sK1,$product(9,sK3)))))),$product(sK0,sK0)) [avatar definition]
125. 8 | ~4 [avatar split clause 120,53,122]
130. 0 != $product($product($product($product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1)))))))))),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK2,6)),$sum(1,sK1)),$sum(1,sK1)) [forward demodulation 30,3]
131. 0 != $product($product($sum(1,sK1),$product($product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1)))))))))),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK2,6)),$sum(sK2,6)),$sum(sK2,6))),$sum(1,sK1)) [forward demodulation 130,14]
132. 0 != $product($product($sum(1,sK1),$product($sum(sK2,6),$product($product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1)))))))))),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK2,6)),$sum(sK2,6)))),$sum(1,sK1)) [forward demodulation 131,14]
133. 0 != $product($product($sum(1,sK1),$product($sum(sK2,6),$product($sum(sK2,6),$product($product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1)))))))))),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK2,6))))),$sum(1,sK1)) [forward demodulation 132,14]
134. 0 != $product($product($sum(1,sK1),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1)))))))))),$sum(sK0,sK2)),$sum(sK0,sK2)),$sum(sK0,sK2)))))),$sum(1,sK1)) [forward demodulation 133,14]
135. 0 != $product($product($sum(1,sK1),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK0,sK2),$product($product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1)))))))))),$sum(sK0,sK2)),$sum(sK0,sK2))))))),$sum(1,sK1)) [forward demodulation 134,14]
136. 0 != $product($product($sum(1,sK1),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1)))))))))),$sum(sK0,sK2)))))))),$sum(1,sK1)) [forward demodulation 135,14]
137. 0 != $product($product($sum(1,sK1),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK3,sK0)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK3,sK0),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [forward demodulation 136,14]
138. 0 != $product($product($sum(1,sK1),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK0,sK3)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK2,6),$product($sum(sK0,sK3),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [forward demodulation 137,3]
139. 0 != $product($product($sum(1,sK1),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($sum($sum($sum(1,$uminus($product(3,$sum(sK0,sK3)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2))),$product(2,$sum(1,sK1))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK3),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [forward demodulation 138,3]
140. 0 != $product($product($sum(1,sK1),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($product(2,$sum(1,sK1)),$sum($sum($sum(1,$uminus($product(3,$sum(sK0,sK3)))),$product($sum(sK0,sK2),$sum(1,sK1))),$uminus($sum(sK0,sK2)))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK3),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [forward demodulation 139,3]
141. 0 != $product($product($sum(1,sK1),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($product(2,$sum(1,sK1)),$sum($uminus($sum(sK0,sK2)),$sum($sum(1,$uminus($product(3,$sum(sK0,sK3)))),$product($sum(sK0,sK2),$sum(1,sK1))))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK3),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [forward demodulation 140,3]
142. 0 != $product($product($sum(1,sK1),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($product(2,$sum(1,sK1)),$sum($uminus($sum(sK0,sK2)),$sum($product($sum(sK0,sK2),$sum(1,sK1)),$sum(1,$uminus($product(3,$sum(sK0,sK3))))))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK3),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [forward demodulation 141,3]
143. 0 != $product($product($sum(1,sK1),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($product(2,$sum(1,sK1)),$sum($uminus($sum(sK0,sK2)),$sum($product($sum(1,sK1),$sum(sK0,sK2)),$sum(1,$uminus($product(3,$sum(sK0,sK3))))))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK3),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [forward demodulation 142,14]
145. 9 <=> 0 = $product($product($sum(1,sK1),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum($product(2,$sum(1,sK1)),$sum($uminus($sum(sK0,sK2)),$sum($product($sum(1,sK1),$sum(sK0,sK2)),$sum(1,$uminus($product(3,$sum(sK0,sK3))))))),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(sK0,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(6,sK2),$product($sum(sK0,sK3),$product($sum(1,sK1),$sum(1,sK1))))))))))))))))),$sum(1,sK1)) [avatar definition]
148. ~9 [avatar split clause 143,145]
149. $false [avatar sat refutation 37,42,47,56,78,87,105,125,148]
% SZS output end Proof for cubes_denorm_inv3_3xlen1
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Refutation

% Memory used [KB]: 7164
% Time elapsed: 0.431 s
% ------------------------------
% ------------------------------
% Success in time 2.437 s
