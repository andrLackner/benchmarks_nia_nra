unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun q!3 () Int)
(declare-fun s!0 () Int)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x419 (* (- 1) (* p00 s00 b!2))))
 (let ((?x732 (* (- 1) (* r00 b00 q!3))))
 (let ((?x477 (* p00 b00 s!0)))
 (let ((?x593 (* (- 1) (* q00 a00 s!0))))
 (let ((?x350 (* s00 a00 q!3)))
 (let ((?x257 (* q00 r00 b!2)))
 (let ((?x396 (+ ?x257 ?x350 ?x593 ?x477 ?x732 ?x419)))
 (let (($x710 (<= ?x396 0)))
 (let (($x212 (= ?x396 0)))
 (let ((?x195 (* (- 1) q!3)))
 (let ((?x785 (+ ?x195 p!5)))
 (let ((?x194 (+ a!4 (* (- 1) b!2))))
 (let ((?x189 (+ r!1 (* (- 1) s!0))))
 (let ((?x602 (* (- 1) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x785 ?x785 s!0 b!2 q00 r00))))
 (let ((?x134 (* (- 1) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x785 ?x785 s!0 q!3 s00 a00))))
 (let ((?x325 (* (- 1) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x785 ?x785 s!0 s!0 p00 b00))))
 (let ((?x243 (+ (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x785 ?x785 s!0 b!2 p00 s00) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x785 ?x785 s!0 q!3 r00 b00) ?x325 (* (- 1) (* s00 a00 q!3 q!3 q!3 s!0)) (* q00 a00 q!3 q!3 s!0 s!0) ?x134 (* (- 1) (* q00 r00 b!2 q!3 q!3 s!0)) (* p00 s00 b!2 q!3 q!3 s!0) (* (- 1) (* q00 a00 q!3 q!3 r!1 s!0)) (* r00 b00 q!3 q!3 q!3 s!0) (* s00 a00 q!3 q!3 q!3 r!1) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x785 ?x785 s!0 s!0 q00 a00) (* p00 b00 q!3 q!3 r!1 s!0) (* (- 1) (* r00 b00 q!3 q!3 q!3 r!1)) ?x602 (* (- 1) (* p00 b00 q!3 q!3 s!0 s!0)) (* (- 1) (* p00 s00 b!2 q!3 q!3 r!1)) (* q00 r00 b!2 q!3 q!3 r!1))))
 (let (($x133 (= ?x243 0)))
 (let ((?x518 (* q00 a00 r!1)))
 (let ((?x280 (* p00 s00 a!4)))
 (let ((?x167 (* r00 b00 p!5)))
 (let ((?x721 (+ (* (- 1) (* q00 r00 a!4)) ?x167 ?x257 ?x280 ?x350 ?x593 ?x477 ?x518 (* (- 1) (* s00 a00 p!5)) (* (- 1) (* p00 b00 r!1)) ?x732 ?x419)))
 (let ((?x747 (* q!3 q!3 r!1)))
 (let ((?x342 (* p!5 p!5 r!1)))
 (let ((?x704 (+ ?x342 (* (- 2) (* q!3 p!5 r!1)) (* (- 1) (* a!4 a!4 p!5 p!5 r!1 r!1 r!1 s!0)) (* a!4 a!4 p!5 p!5 r!1 r!1 r!1 r!1) ?x747)))
 (let ((?x703 (* ?x704 ?x721)))
 (let (($x441 (= ?x703 0)))
 (let (($x607 (not $x441)))
 (let (($x362 (or $x607 (not $x133))))
 (let ((?x682 (* p00 b00 r!1)))
 (let ((?x665 (* s00 a00 p!5)))
 (let ((?x158 (* q00 r00 a!4)))
 (let ((?x562 (+ ?x158 (* (- 1) ?x167) (* (- 1) ?x280) (* (- 1) ?x518) ?x665 ?x682)))
 (let (($x564 (= ?x562 0)))
 (let ((?x135 (* q00 a00)))
 (let ((?x689 (+ ?x135 (* (- 1) (* p00 b00)) (* b!2 p!5) (* (- 1) (* a!4 q!3)))))
 (let (($x690 (= ?x689 0)))
 (let ((?x500 (* b!2 r!1)))
 (let ((?x131 (* s00 a00)))
 (let ((?x249 (+ ?x131 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) ?x500)))
 (let (($x241 (= ?x249 0)))
 (let ((?x328 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x558 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x306 (+ ?x37 ?x558 ?x328 (* (- 1) (* p!5 s!0)))))
 (let (($x657 (= ?x306 0)))
 (let (($x436 (and $x657 $x241 $x690 $x564 $x212 $x362)))
 (let ((?x187 (+ p!5 ?x195)))
 (let ((?x446 (* (- 1) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x187 ?x187 s!0 q!3 s00 a00))))
 (let ((?x460 (* (- 1) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x187 ?x187 s!0 s!0 p00 b00))))
 (let ((?x317 (* (- 1) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x187 ?x187 s!0 b!2 q00 r00))))
 (let ((?x432 (+ (* q!3 q!3 b!2 s!0 p00 s00) (* (- 1) (* q!3 q!3 b!2 s!0 q00 r00)) (* (- 1) (* q!3 q!3 r!1 s!0 q00 a00)) (* q!3 q!3 q!3 r!1 s00 a00) (* (- 1) (* q!3 q!3 q!3 r!1 r00 b00)) (* q!3 q!3 r!1 s!0 p00 b00) (* (- 1) (* q!3 q!3 b!2 r!1 p00 s00)) (* q!3 q!3 b!2 r!1 q00 r00) ?x317 (* (- 1) (* q!3 q!3 s!0 s!0 p00 b00)) (* q!3 q!3 q!3 s!0 r00 b00) (* (- 1) (* q!3 q!3 q!3 s!0 s00 a00)) (* q!3 q!3 s!0 s!0 q00 a00) (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x187 ?x187 s!0 q!3 r00 b00) ?x460 (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x187 ?x187 s!0 s!0 q00 a00) ?x446 (* ?x189 ?x189 ?x189 ?x194 ?x194 ?x187 ?x187 s!0 b!2 p00 s00))))
 (let ((?x226 (* (- 1) (* s!0 q00 a00))))
 (let ((?x596 (* q!3 s00 a00)))
 (let ((?x351 (* (- 1) (* q!3 r00 b00))))
 (let ((?x358 (* s!0 p00 b00)))
 (let ((?x469 (* r!1 q00 a00)))
 (let ((?x578 (* (- 1) (* p!5 s00 a00))))
 (let ((?x574 (* (- 1) (* r!1 p00 b00))))
 (let ((?x536 (* p!5 r00 b00)))
 (let ((?x354 (* (- 1) (* b!2 p00 s00))))
 (let ((?x270 (* b!2 q00 r00)))
 (let ((?x541 (* (- 1) (* a!4 q00 r00))))
 (let ((?x200 (* a!4 p00 s00)))
 (let ((?x488 (+ ?x747 ?x342 (* (- 2) (* p!5 q!3 r!1)) (* p!5 p!5 a!4 a!4 r!1 r!1 r!1 r!1) (* (- 1) (* p!5 p!5 a!4 a!4 r!1 r!1 r!1 s!0)))))
 (let ((?x361 (* ?x488 (+ ?x200 ?x541 ?x270 ?x354 ?x536 ?x574 ?x578 ?x469 ?x358 ?x351 ?x596 ?x226))))
 (let ((?x136 (* p00 b00)))
 (let ((?x179 (* (- 1) ?x135)))
 (let ((?x426 (* a!4 q!3)))
 (let (($x286 (= (+ (* a!4 s!0) (* (- 1) ?x500) (* (- 1) ?x131) (* r00 b00)) 0)))
 (let (($x227 (and (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) ?x328)) 0) $x286 (= (+ ?x426 ?x179 ?x136 (* (- 1) (* p!5 b!2))) 0) (= (+ ?x200 ?x541 ?x536 ?x574 ?x578 ?x469) 0) (= (+ ?x270 ?x354 ?x358 ?x351 ?x596 ?x226) 0) (or (not (= ?x361 0)) (not (= ?x432 0))))))
 (let (($x338 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x345 (+ p (* (- 1) q))))
 (let ((?x341 (+ a (* (- 1) b))))
 (let ((?x320 (+ r (* (- 1) s))))
 (let ((?x627 (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s q s00 a00))))
 (let ((?x535 (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s s p00 b00))))
 (let ((?x461 (* q q s s q00 a00)))
 (let ((?x455 (* (- 1) (* q q q s s00 a00))))
 (let ((?x443 (* q q q s r00 b00)))
 (let ((?x437 (* (- 1) (* q q s s p00 b00))))
 (let ((?x417 (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s b q00 r00))))
 (let ((?x391 (* q q b r q00 r00)))
 (let ((?x387 (* (- 1) (* q q b r p00 s00))))
 (let ((?x384 (* q q r s p00 b00)))
 (let ((?x380 (* (- 1) (* q q q r r00 b00))))
 (let ((?x377 (* q q q r s00 a00)))
 (let ((?x373 (* (- 1) (* q q r s q00 a00))))
 (let ((?x363 (* (- 1) (* q q b s q00 r00))))
 (let ((?x357 (* q q b s p00 s00)))
 (let ((?x757 (+ ?x357 ?x363 ?x373 ?x377 ?x380 ?x384 ?x387 ?x391 ?x417 ?x437 ?x443 ?x455 ?x461 (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s q r00 b00) ?x535 (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s s q00 a00) ?x627 (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s b p00 s00))))
 (let ((?x305 (* (- 1) (* s q00 a00))))
 (let ((?x288 (* q s00 a00)))
 (let ((?x263 (* (- 1) (* q r00 b00))))
 (let ((?x253 (* s p00 b00)))
 (let ((?x224 (* r q00 a00)))
 (let ((?x246 (* (- 1) (* p s00 a00))))
 (let ((?x245 (* (- 1) (* r p00 b00))))
 (let ((?x190 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x277 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x244 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x691 (+ ?x63 ?x244 ?x72 ?x277 ?x190 ?x245 ?x246 ?x224 ?x253 ?x263 ?x288 ?x305)))
 (let ((?x780 (+ (* q q r) (* p p r) (* (- 2) (* p q r)) (* p p a a r r r r) (* (- 1) (* p p a a r r r s)))))
 (let (($x316 (= (+ ?x72 ?x277 ?x253 ?x263 ?x288 ?x305) 0)))
 (let (($x248 (= (+ ?x63 ?x244 ?x190 ?x245 ?x246 ?x224) 0)))
 (let ((?x136 (* p00 b00)))
 (let ((?x135 (* q00 a00)))
 (let ((?x179 (* (- 1) ?x135)))
 (let (($x182 (= (+ (* a q) ?x179 ?x136 (* (- 1) (* p b))) 0)))
 (let ((?x149 (* r00 b00)))
 (let ((?x131 (* s00 a00)))
 (let ((?x138 (* (- 1) ?x131)))
 (let ((?x49 (* a s)))
 (let (($x164 (= (+ ?x49 (* (- 1) (* b r)) ?x138 ?x149) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x140 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x159 (= (+ ?x33 ?x140 ?x41 (* (- 1) (* q r))) 0)))
 (and $x159 $x164 $x182 $x248 $x316 (or (not (= (* ?x780 ?x691) 0)) (not (= ?x757 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x422 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x617 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x335 (* (- 1) (* (+ s (* (- 1) r)) r r r a a p p))))
 (let ((?x517 (* (+ (* (+ q (* (- 1) p)) (+ q (* (- 1) p)) r) ?x335) ?x617)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x532 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x345 (+ p (* (- 1) q))))
 (let ((?x341 (+ a (* (- 1) b))))
 (let ((?x320 (+ r (* (- 1) s))))
 (let ((?x775 (+ (* ?x320 q q) (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s)))))
 (let (($x702 (or (not (= (* ?x775 ?x532) 0)) (not (= ?x517 0)))))
 (let (($x572 (= ?x532 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x293 (* p00 s00 a)))
 (let ((?x267 (* b00 r00 p)))
 (let ((?x428 (+ ?x267 ?x293 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x259 (* q a)))
 (let (($x300 (= (+ ?x259 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x669 (* r b)))
 (let (($x272 (= (+ ?x669 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x558 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x672 (* r q)))
 (and (= (+ ?x672 (* (- 1) (* s p)) ?x37 ?x558) 0) $x272 $x300 (= ?x428 0) $x572 $x702)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x778 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x345 (+ p (* (- 1) q))))
 (let ((?x341 (+ a (* (- 1) b))))
 (let ((?x320 (+ r (* (- 1) s))))
 (let ((?x627 (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s q s00 a00))))
 (let ((?x535 (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s s p00 b00))))
 (let ((?x461 (* q q s s q00 a00)))
 (let ((?x455 (* (- 1) (* q q q s s00 a00))))
 (let ((?x443 (* q q q s r00 b00)))
 (let ((?x437 (* (- 1) (* q q s s p00 b00))))
 (let ((?x417 (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s b q00 r00))))
 (let ((?x391 (* q q b r q00 r00)))
 (let ((?x387 (* (- 1) (* q q b r p00 s00))))
 (let ((?x384 (* q q r s p00 b00)))
 (let ((?x380 (* (- 1) (* q q q r r00 b00))))
 (let ((?x377 (* q q q r s00 a00)))
 (let ((?x373 (* (- 1) (* q q r s q00 a00))))
 (let ((?x363 (* (- 1) (* q q b s q00 r00))))
 (let ((?x357 (* q q b s p00 s00)))
 (let ((?x757 (+ ?x357 ?x363 ?x373 ?x377 ?x380 ?x384 ?x387 ?x391 ?x417 ?x437 ?x443 ?x455 ?x461 (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s q r00 b00) ?x535 (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s s q00 a00) ?x627 (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s b p00 s00))))
 (let ((?x305 (* (- 1) (* s q00 a00))))
 (let ((?x288 (* q s00 a00)))
 (let ((?x263 (* (- 1) (* q r00 b00))))
 (let ((?x253 (* s p00 b00)))
 (let ((?x224 (* r q00 a00)))
 (let ((?x246 (* (- 1) (* p s00 a00))))
 (let ((?x245 (* (- 1) (* r p00 b00))))
 (let ((?x190 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x277 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x244 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x691 (+ ?x63 ?x244 ?x72 ?x277 ?x190 ?x245 ?x246 ?x224 ?x253 ?x263 ?x288 ?x305)))
 (let ((?x780 (+ (* q q r) (* p p r) (* (- 2) (* p q r)) (* p p a a r r r r) (* (- 1) (* p p a a r r r s)))))
 (let (($x316 (= (+ ?x72 ?x277 ?x253 ?x263 ?x288 ?x305) 0)))
 (let (($x248 (= (+ ?x63 ?x244 ?x190 ?x245 ?x246 ?x224) 0)))
 (let ((?x136 (* p00 b00)))
 (let ((?x135 (* q00 a00)))
 (let ((?x179 (* (- 1) ?x135)))
 (let (($x182 (= (+ (* a q) ?x179 ?x136 (* (- 1) (* p b))) 0)))
 (let ((?x149 (* r00 b00)))
 (let ((?x131 (* s00 a00)))
 (let ((?x138 (* (- 1) ?x131)))
 (let ((?x49 (* a s)))
 (let (($x164 (= (+ ?x49 (* (- 1) (* b r)) ?x138 ?x149) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x140 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x159 (= (+ ?x33 ?x140 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x700 (and $x159 $x164 $x182 $x248 $x316 (or (not (= (* ?x780 ?x691) 0)) (not (= ?x757 0))))))
 (let ((?x617 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x335 (* (- 1) (* (+ s (* (- 1) r)) r r r a a p p))))
 (let ((?x517 (* (+ (* (+ q (* (- 1) p)) (+ q (* (- 1) p)) r) ?x335) ?x617)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x532 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x775 (+ (* ?x320 q q) (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s)))))
 (let (($x702 (or (not (= (* ?x775 ?x532) 0)) (not (= ?x517 0)))))
 (let (($x572 (= ?x532 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x293 (* p00 s00 a)))
 (let ((?x267 (* b00 r00 p)))
 (let ((?x428 (+ ?x267 ?x293 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x259 (* q a)))
 (let (($x300 (= (+ ?x259 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x669 (* r b)))
 (let (($x272 (= (+ ?x669 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x421 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x563 (and $x421 $x272 $x300 (= ?x428 0) $x572 $x702)))
 (rewrite (= $x563 $x700)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x715 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x617 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x335 (* (- 1) (* (+ s (* (- 1) r)) r r r a a p p))))
 (let ((?x517 (* (+ (* (+ q (* (- 1) p)) (+ q (* (- 1) p)) r) ?x335) ?x617)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x532 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x345 (+ p (* (- 1) q))))
 (let ((?x341 (+ a (* (- 1) b))))
 (let ((?x320 (+ r (* (- 1) s))))
 (let ((?x775 (+ (* ?x320 q q) (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s)))))
 (let (($x702 (or (not (= (* ?x775 ?x532) 0)) (not (= ?x517 0)))))
 (let (($x572 (= ?x532 0)))
 (let ((?x337 (* a00 s00 p)))
 (let ((?x315 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x552 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x315 ?x337 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x308 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x284 (* s a)))
 (let (($x297 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x284 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x140 (* (- 1) ?x37)))
 (let ((?x260 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x260 ?x140 ?x41) 0) $x297 $x308 (= ?x552 0) $x572 $x702)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x561 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x617 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x335 (* (- 1) (* (+ s (* (- 1) r)) r r r a a p p))))
 (let ((?x517 (* (+ (* (+ q (* (- 1) p)) (+ q (* (- 1) p)) r) ?x335) ?x617)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x532 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x345 (+ p (* (- 1) q))))
 (let ((?x341 (+ a (* (- 1) b))))
 (let ((?x320 (+ r (* (- 1) s))))
 (let ((?x775 (+ (* ?x320 q q) (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s)))))
 (let (($x702 (or (not (= (* ?x775 ?x532) 0)) (not (= ?x517 0)))))
 (let (($x572 (= ?x532 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x293 (* p00 s00 a)))
 (let ((?x267 (* b00 r00 p)))
 (let ((?x428 (+ ?x267 ?x293 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x259 (* q a)))
 (let (($x300 (= (+ ?x259 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x669 (* r b)))
 (let (($x272 (= (+ ?x669 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x558 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x672 (* r q)))
 (let (($x563 (and (= (+ ?x672 (* (- 1) (* s p)) ?x37 ?x558) 0) $x272 $x300 (= ?x428 0) $x572 $x702)))
 (let ((?x337 (* a00 s00 p)))
 (let ((?x315 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x554 (= (+ (* (- 1) ?x267) (* (- 1) ?x293) ?x65 ?x315 ?x337 (* (- 1) ?x69)) 0)))
 (let (($x308 (= (+ (* (- 1) ?x259) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x297 (= (+ (* (- 1) ?x669) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x779 (and (= (+ (* (- 1) ?x672) (* s p) (* (- 1) ?x37) ?x41) 0) $x297 $x308 $x554 $x572 $x702)))
 (rewrite (= $x779 $x563))))))))))))))))))))))))))))))))))))
 ))
 (let (($x115 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x109 (- (* (- q p) (- q p) r) (* a a p p r r r (- s r)))))
 (let ((?x101 (- (+ (* (- b a) q00 r00) (* b00 p00 (- s r))) (* b00 (- q p) r00))))
 (let ((?x104 (+ (- ?x101 (* (- b a) p00 s00)) (* a00 (- q p) s00))))
 (let ((?x84 (- r s)))
 (let ((?x87 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x82 (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81)))
 (let ((?x90 (* ?x82 (- (* q q ?x84) (* ?x86 ?x86 ?x87 ?x87 ?x84 ?x84 ?x84 s)))))
 (let (($x113 (or (not (= ?x90 0)) (not (= (* (- ?x104 (* a00 q00 (- s r))) ?x109) 0)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= ?x82 0) $x113)))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x132 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x617 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x335 (* (- 1) (* (+ s (* (- 1) r)) r r r a a p p))))
 (let ((?x517 (* (+ (* (+ q (* (- 1) p)) (+ q (* (- 1) p)) r) ?x335) ?x617)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x532 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x345 (+ p (* (- 1) q))))
 (let ((?x341 (+ a (* (- 1) b))))
 (let ((?x320 (+ r (* (- 1) s))))
 (let ((?x775 (+ (* ?x320 q q) (* (- 1) (* ?x320 ?x320 ?x320 ?x341 ?x341 ?x345 ?x345 s)))))
 (let (($x702 (or (not (= (* ?x775 ?x532) 0)) (not (= ?x517 0)))))
 (let (($x572 (= ?x532 0)))
 (let ((?x337 (* a00 s00 p)))
 (let ((?x315 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x552 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x315 ?x337 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x308 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x284 (* s a)))
 (let (($x297 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x284 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x140 (* (- 1) ?x37)))
 (let ((?x260 (* s p)))
 (let (($x779 (and (= (+ (* (- 1) (* r q)) ?x260 ?x140 ?x41) 0) $x297 $x308 (= ?x552 0) $x572 $x702)))
 (let ((?x109 (- (* (- q p) (- q p) r) (* a a p p r r r (- s r)))))
 (let ((?x101 (- (+ (* (- b a) q00 r00) (* b00 p00 (- s r))) (* b00 (- q p) r00))))
 (let ((?x104 (+ (- ?x101 (* (- b a) p00 s00)) (* a00 (- q p) s00))))
 (let ((?x84 (- r s)))
 (let ((?x87 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x82 (- ?x80 ?x81)))
 (let ((?x90 (* ?x82 (- (* q q ?x84) (* ?x86 ?x86 ?x87 ?x87 ?x84 ?x84 ?x84 s)))))
 (let (($x113 (or (not (= ?x90 0)) (not (= (* (- ?x104 (* a00 q00 (- s r))) ?x109) 0)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x114 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= ?x82 0) $x113)))
 (rewrite (= $x114 $x779))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x116 (asserted $x115)))
 (let ((@x556 (mp (mp @x116 (quant-intro (proof-bind ?x132) (= $x115 $x715)) $x715) (rewrite (= $x715 $x715)) $x715)))
 (let ((@x720 (mp (mp @x556 (quant-intro (proof-bind ?x561) (= $x715 $x422)) $x422) (quant-intro (proof-bind ?x778) (= $x422 $x338)) $x338)))
 (let ((@x368 (mp (mp~ @x720 (sk (~ $x338 $x227)) $x227) (rewrite (= $x227 $x436)) $x436)))
 (let ((@x336 (and-elim @x368 $x212)))
 (let ((@x648 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x212) $x710)) @x336 $x710)))
 (let (($x576 (>= ?x562 0)))
 (let ((@x176 (and-elim @x368 $x564)))
 (let ((@x480 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x564) $x576)) @x176 $x576)))
 (let (($x157 (>= ?x396 0)))
 (let ((@x546 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x212) $x157)) @x336 $x157)))
 (let (($x595 (<= ?x562 0)))
 (let ((@x567 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x564) $x595)) @x176 $x595)))
 (let (($x581 (not (<= ?x703 0))))
 (let (($x319 (>= ?x243 0)))
 (let (($x423 (<= ?x306 0)))
 (let ((@x725 (and-elim @x368 $x657)))
 (let ((@x503 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x657) $x423)) @x725 $x423)))
 (let (($x611 (>= ?x306 0)))
 (let ((@x219 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x657) $x611)) @x725 $x611)))
 (let (($x186 (<= ?x249 0)))
 (let ((@x726 (and-elim @x368 $x241)))
 (let ((@x289 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x241) $x186)) @x726 $x186)))
 (let (($x647 (>= ?x249 0)))
 (let ((@x598 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x241) $x647)) @x726 $x647)))
 (let (($x139 (<= ?x689 0)))
 (let ((@x533 (and-elim @x368 $x690)))
 (let ((@x773 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x690) $x139)) @x533 $x139)))
 (let (($x597 (>= ?x689 0)))
 (let ((@x632 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x690) $x597)) @x533 $x597)))
 (let ((@x615 ((_ th-lemma arith) (hypothesis (not $x319)) @x632 @x773 @x598 @x289 @x219 @x503 false)))
 (let (($x662 (<= ?x243 0)))
 (let ((@x618 ((_ th-lemma arith) (hypothesis (not $x662)) @x632 @x773 @x598 @x289 @x219 @x503 false)))
 (let ((@x399 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x133 (not $x662) (not $x319))) (lemma @x618 $x662) (lemma @x615 $x319) $x133)))
 (let (($x162 (>= ?x703 0)))
 (let ((@x577 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x162)) @x567 @x546 @x480 @x648 false) $x162)))
 (let ((@x468 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x441 $x581 (not $x162))) @x577 (unit-resolution (and-elim @x368 $x362) @x399 $x607) $x581)))
 ((_ th-lemma arith farkas 1 1 1 1 1) @x468 @x567 @x546 @x480 @x648 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        3
 :arith-assert-lower        17
 :arith-assert-upper        15
 :arith-conflicts           4
 :arith-eq-adapter          7
 :arith-fixed-eqs           4
 :arith-grobner             2
 :arith-max-min             518
 :arith-nonlinear-bounds    2
 :arith-nonlinear-horner    18
 :arith-num-rows            11
 :arith-pivots              6
 :arith-pseudo-nonlinear    2
 :arith-row-summations      2
 :arith-tableau-max-columns 74
 :arith-tableau-max-rows    11
 :conflicts                 4
 :decisions                 7
 :del-clause                15
 :final-checks              4
 :max-memory                3.77
 :memory                    3.19
 :mk-bool-var               27
 :mk-clause                 24
 :num-allocs                1595717
 :num-checks                1
 :propagations              19
 :rlimit-count              10777
 :time                      0.01
 :total-time                0.02)
