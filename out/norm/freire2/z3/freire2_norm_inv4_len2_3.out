unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x3986 (* (- 1) s!1)))
 (let ((?x342 (* r00 r00)))
 (let ((?x1951 (* (- 3) ?x342)))
 (let ((?x1771 (+ s00 ?x1951 ?x3986 (* 3 (* r!2 r!2)))))
 (let (($x1552 (<= ?x1771 0)))
 (let (($x1254 (= ?x1771 0)))
 (let ((?x5350 (+ 3 (* 6 r!2) s!1)))
 (let ((?x3526 (+ x!0 ?x3986)))
 (let ((?x3985 (+ 1 r!2)))
 (let ((?x2388 (* 36 (* r00 r00 s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350))))
 (let ((?x1840 (* 2 (* s00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x2691 (* (- 2) (* r00 s00 s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350))))
 (let ((?x1010 (* (- 36) (* r00 x00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350))))
 (let ((?x2517 (* (- 36) (* r00 r00 x00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350))))
 (let ((?x1190 (* (- 4) (* s00 s00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350))))
 (let ((?x3475 (* (- 2) (* r00 s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x5986 (* (- 36) (* r00 r00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x2705 (* 2 (* ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x5436 (* 36 (* r00 r00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350))))
 (let ((?x3442 (* 36 (* r00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350))))
 (let ((?x3517 (* 4 (* r00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x1749 (+ (* 432 (* s00 r00 x!0 r!2 s!1)) (* 1296 (* r00 r00 x00 r!2 r!2 r!2 s!1)) (* 108 (* s00 x00 x!0 r!2 s!1)) (* (- 9) (* s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* 648 (* r00 x00 r!2 r!2 s!1 s!1)) (* 36 (* s00 r00 r00 x!0 s!1 s!1)) (* (- 216) (* s00 r00 r00 s!1 s!1)) (* 2592 (* r00 r00 x00 r!2 r!2 s!1)) (* 432 (* r00 r00 x00 r!2 r!2 s!1 s!1)) (* (- 2) (* r00 s00 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* 3 (* ?x3985 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* 3 (* ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350 ?x5350)) (* 72 (* s00 x00 x!0 r!2 r!2 s!1)) ?x3517 (* 24 (* s00 ?x3985 ?x3985 ?x3526 ?x5350 ?x5350)) (* 648 (* s00 r!2 r!2 s!1)) (* (- 1080) (* s00 r00 r!2 s!1)) (* 4 (* r00 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* 36 (* s00 x00 x!0 s!1)) (* (- 72) (* s00 x00 r!2 r!2 s!1 s!1)) (* 54 (* s00 s!1 s!1)) (* (- 972) (* r00 x00 x!0 r!2 s!1)) (* 432 (* s00 x00 x!0 r!2 r!2)) (* 54 (* s00 x00 x!0)) (* (- 135) (* s00 s00 x!0)) (* (- 15) (* s00 s00 x!0 s!1 s!1)) (* (- 9) (* s00 x!0 r!2 s!1 s!1)) (* (- 675) (* s00 s00 x!0 r!2)) (* 144 (* s00 r00 x!0 s!1)) (* 216 (* s00 r00 x!0)) (* 162 (* s00 r!2 s!1 s!1)) (* (- 90) (* s00 s00 x!0 s!1)) (* 15 (* s00 s00 s!1 s!1 s!1)) (* (- 432) (* s00 r00 r!2 s!1 s!1)) (* (- 1944) (* r00 x00 x!0 r!2 r!2 r!2)) (* 180 (* s00 s00 r!2 r!2 s!1 s!1)) (* (- 144) (* s00 r00 s!1 s!1)) (* 270 (* s00 s00 r!2 s!1 s!1)) (* (- 216) (* s00 r00 s!1)) (* 216 (* s00 r00 r00 x!0 s!1)) ?x3442 (* 9 (* ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 432) (* r00 r00 x00 x!0 r!2 r!2 s!1)) ?x5436 (* (- 2) (* s00 s00 r00 x!0 r!2 s!1 s!1)) (* 72 (* s00 s00 r00 r!2 r!2 r!2 s!1)) (* 90 (* s00 s00 r00 r!2 s!1)) (* (- 1620) (* s00 r00 r00 r!2 s!1)) (* 36 (* s00 s00 r00 r!2 s!1 s!1)) (* (- 90) (* s00 s00 r00 x!0 r!2)) (* (- 6) (* s00 x00 r!2 s!1 s!1 s!1)) (* (- 24) (* r00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 2) (* s00 s00 r00 x!0 s!1 s!1)) (* 6 (* ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 1080) (* s00 s00 x!0 r!2 r!2)) (* 144 (* s00 s00 r00 r!2 r!2 s!1)) (* 288 (* s00 r00 x!0 r!2 r!2 s!1)) (* (- 288) (* s00 r00 r!2 r!2 s!1 s!1)) (* 648 (* r00 r00 x00 r!2 s!1 s!1)) (* (- 1620) (* r00 r00 x00 x!0 r!2)) (* 405 (* s00 r!2 s!1)) (* (- 2592) (* s00 r00 r00 r!2 r!2 s!1)) (* (- 24) (* ?x3985 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 6) (* s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 324) (* r00 r00 x00 x!0)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1)) ?x2705 (* (- 144) (* s00 s00 r00 x!0 r!2 r!2)) (* 36 (* r00 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350)) (* (- 36) (* r00 r00 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 36) (* s00 s00 r00 x!0 r!2 s!1)) (* (- 12) (* s00 s00 r00 x!0 s!1)) (* (- 54) (* s00 x00 s!1)) (* 2 (* s00 ?x3985 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 216) (* s00 x00 r!2 r!2 r!2 s!1)) (* 216 (* s00 x00 x!0 r!2 r!2 r!2)) (* 2 (* s00 s00 r00 s!1 s!1 s!1)) (* 12 (* s00 s00 r00 s!1 s!1)) (* (- 324) (* s00 r00 r00 s!1)) (* 2 (* s00 s00 r00 r!2 s!1 s!1 s!1)) (* 90 (* s00 s00 s!1 s!1)) (* (- 36) (* r00 x00 ?x3985 ?x3985 ?x3526 ?x5350 ?x5350)) (* 36 (* r00 r00 x00 s!1 s!1 s!1)) (* (- 1728) (* s00 r00 r!2 r!2 s!1)) (* (- 18) (* s00 s00 r00 x!0)) (* (- 216) (* r00 r00 x00 x!0 s!1)) (* 9 (* s00 s!1 s!1 s!1)) (* (- 6) (* s00 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350)) (* 1080 (* s00 r00 x!0 r!2)) (* (- 1296) (* r00 r00 x00 x!0 r!2 r!2 r!2)) (* 54 (* ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350)) (* 540 (* s00 s00 r!2 r!2 r!2 s!1)) (* (- 36) (* s00 x00 s!1 s!1)) (* 2430 (* r00 x00 r!2 s!1)) (* (- 24) (* r00 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* 24 (* s00 r00 x!0 s!1 s!1)) (* (- 2430) (* r00 x00 x!0 r!2)) (* (- 24) (* s00 r00 s!1 s!1 s!1)) (* 54 (* r00 x00 s!1 s!1 s!1)) (* (- 648) (* s00 x!0 r!2 r!2)) (* 54 (* r00 x00 r!2 s!1 s!1 s!1)) (* (- 486) (* r00 x00 x!0)) (* (- 1296) (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* 324 (* r00 x00 s!1 s!1)) (* 324 (* s00 r00 r00 x!0)) (* 54 (* ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) ?x5986 (* (- 15) (* s00 s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) ?x3475 (* (- 324) (* r00 x00 x!0 s!1)) (* (- 6) (* x00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 81) (* s00 x!0)) (* 1620 (* s00 r00 r00 x!0 r!2)) (* 9 (* ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* 24 (* s00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 324) (* s00 x!0 r!2 r!2 r!2)) (* 6 (* s00 x00 x!0 s!1 s!1)) (* 6 (* s00 x00 x!0 r!2 s!1 s!1)) (* 36 (* s00 r00 r00 x!0 r!2 s!1 s!1)) (* 15 (* s00 s00 r!2 s!1 s!1 s!1)) (* 216 (* r00 r00 x00 s!1 s!1)) (* (- 36) (* r00 r00 x00 x!0 r!2 s!1 s!1)) (* 18 (* s00 s00 r00 s!1)) ?x1190 (* (- 2592) (* r00 r00 x00 x!0 r!2 r!2)) (* (- 108) (* s00 x!0 r!2 r!2 s!1)) (* (- 36) (* r00 r00 x00 x!0 s!1 s!1)) (* (- 648) (* r00 r00 x00 x!0 r!2 s!1)) (* (- 9) (* s00 x!0 s!1 s!1)) (* 24 (* s00 s00 r00 r!2 r!2 s!1 s!1)) (* (- 24) (* s00 s00 r00 x!0 r!2 r!2 s!1)) (* (- 24) (* s00 r00 r!2 s!1 s!1 s!1)) ?x2517 (* 36 (* r00 r00 x00 r!2 s!1 s!1 s!1)) (* (- 4) (* s00 s00 ?x3985 ?x3985 ?x3526 ?x5350 ?x5350)) (* (- 405) (* s00 x!0 r!2)) (* (- 6) (* x00 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 540) (* s00 s00 x!0 r!2 r!2 r!2)) (* 36 (* r00 r00 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350)) (* (- 54) (* r00 x00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* 2 (* ?x3985 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* 1620 (* r00 r00 x00 r!2 s!1)) (* (- 6) (* s00 x00 s!1 s!1 s!1)) (* (- 432) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* 486 (* r00 x00 s!1)) (* 54 (* r00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 54) (* r00 x00 x!0 s!1 s!1)) (* (- 54) (* s00 x!0 s!1)) (* (- 432) (* s00 x00 r!2 r!2 s!1)) (* (- 24) (* ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* 6 (* s00 x00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 864) (* s00 r00 r!2 r!2 r!2 s!1)) (* 1080 (* s00 s00 r!2 r!2 s!1)) (* (- 54) (* x00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 270) (* s00 s00 x!0 r!2 s!1)) (* 108 (* s00 r!2 r!2 s!1 s!1)) ?x1010 (* 6 (* ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* (- 180) (* s00 s00 x!0 r!2 r!2 s!1)) (* 972 (* r00 x00 r!2 s!1 s!1)) (* 12 (* s00 ?x3985 ?x3526 ?x5350 ?x5350 ?x5350)) (* 324 (* s00 r!2 r!2 r!2 s!1)) (* 24 (* s00 r00 x!0 r!2 s!1 s!1)) (* (- 162) (* s00 x!0 r!2 s!1)) (* 9 (* s00 r!2 s!1 s!1 s!1)) (* (- 36) (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* (- 72) (* s00 s00 r00 x!0 r!2 r!2 r!2)) (* 54 (* r00 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350)) (* 12 (* s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 648) (* s00 r00 r00 r!2 s!1 s!1)) (* 648 (* s00 r00 r00 x!0 r!2 s!1)) (* 864 (* s00 r00 x!0 r!2 r!2 r!2)) (* 324 (* r00 r00 x00 s!1)) (* (- 270) (* s00 x00 r!2 s!1)) (* 1728 (* s00 r00 x!0 r!2 r!2)) (* (- 648) (* r00 x00 x!0 r!2 r!2 s!1)) (* 1296 (* s00 r00 r00 x!0 r!2 r!2 r!2)) (* 270 (* s00 x00 x!0 r!2)) (* 1944 (* r00 x00 r!2 r!2 r!2 s!1)) (* 432 (* s00 r00 r00 x!0 r!2 r!2 s!1)) (* (- 54) (* r00 x00 x!0 r!2 s!1 s!1)) (* 3888 (* r00 x00 r!2 r!2 s!1)) ?x2691 ?x1840 (* (- 54) (* x00 ?x3985 ?x3985 ?x3526 ?x5350 ?x5350)) ?x2388 (* (- 15) (* s00 s00 x!0 r!2 s!1 s!1)) (* 24 (* r00 s00 ?x3985 ?x3985 ?x3985 ?x3526 ?x3526 ?x5350 ?x5350 ?x5350)) (* 135 (* s00 s00 s!1)) (* 675 (* s00 s00 r!2 s!1)) (* 81 (* s00 s!1)) (* (- 3888) (* r00 x00 x!0 r!2 r!2)) (* 2592 (* s00 r00 r00 x!0 r!2 r!2)) (* (- 108) (* s00 x00 r!2 s!1 s!1)))))
 (let (($x4143 (= ?x1749 0)))
 (let (($x5682 (not $x4143)))
 (let ((?x5130 (* r00 r00 s!1)))
 (let ((?x2902 (* 36 ?x5130)))
 (let ((?x2901 (* (- 9) s!1)))
 (let ((?x1387 (* x00 x00)))
 (let ((?x3535 (* 108 ?x1387)))
 (let ((?x1225 (* s00 s00 s00)))
 (let ((?x2965 (* 16 ?x1225)))
 (let ((?x923 (* r00 r00 r00 x00)))
 (let ((?x4944 (* (- 432) ?x923)))
 (let ((?x846 (* s00 x00)))
 (let ((?x3304 (* (- 108) ?x846)))
 (let ((?x688 (* s00 r00 r00)))
 (let ((?x2893 (* (- 36) ?x688)))
 (let ((?x632 (* s00 s00)))
 (let ((?x3380 (* 51 ?x632)))
 (let ((?x563 (* r00 x00)))
 (let ((?x3801 (* 108 ?x563)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3525 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x3801 ?x3380 ?x2893 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x3304 ?x4944 (* (- 216) (* r00 r00 r00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x2965 ?x3535 (* (- 12) (* s00 s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* (- 108) (* x!0 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* 54 (* r00 s!1)) (* 108 (* x!0 x!0)) (* 108 (* s00 x!0)) (* 15 (* s!1 s!1)) (* (- 216) (* x00 x!0)) ?x2901 (* 432 (* r00 r00 r00 x!0)) ?x2902 (* (- 108) (* r00 x!0)) (* (- 66) (* s00 s!1)))))
 (let (($x3524 (= ?x3525 0)))
 (let ((?x918 (* r00 r00 x00)))
 (let ((?x3576 (* 36 ?x918)))
 (let ((?x5554 (* (- 6) ?x846)))
 (let ((?x3577 (* 15 ?x632)))
 (let ((?x3639 (* 54 ?x563)))
 (let ((?x3016 (+ ?x137 (* (- 24) (* s00 r00)) ?x3639 ?x3577 ?x2893 (* 2 (* s00 s00 r00)) ?x5554 ?x3576 (* (- 2) (* r!2 s!1 s!1)) (* (- 6) (* x!0 s!1)) (* 2 (* s00 r00 s!1)) (* (- 54) (* x!0 r!2)) (* (- 2) (* s00 r!2 s!1)) (* 4 (* s00 s00 r!2)) (* 6 (* x00 s!1)) (* 24 (* r00 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 36) (* r00 x!0 r!2)) (* 36 (* r00 x00 r!2)) (* 6 (* s00 x!0)) (* (- 3) (* s!1 s!1)) ?x2901 (* 24 (* r!2 s!1)) ?x2902 (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* (- 24) (* s00 r!2)) (* (- 12) (* s00 s!1)))))
 (let (($x2917 (= ?x3016 0)))
 (let ((?x2589 (* (- 3) s!1)))
 (let ((?x2220 (* 4 ?x632)))
 (let ((?x3932 (* 18 ?x563)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1636 (+ ?x44 (* (- 9) (* s00 r00)) ?x3932 ?x2220 (* (- 6) ?x688) (* (- 18) (* x!0 r!2)) (* 9 (* r00 s!1)) (* (- 2) (* s!1 s!1)) (* 6 (* s00 r00 r!2)) ?x2589 (* 9 (* r!2 s!1)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x5130) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)))))
 (let (($x1646 (= ?x1636 0)))
 (let ((?x4915 (* r!2 s!1)))
 (let ((?x4073 (* 2 ?x4915)))
 (let ((?x6063 (* 3 r!2)))
 (let ((?x2394 (* 6 x!0)))
 (let ((?x510 (* r00 r00 r00)))
 (let ((?x511 (* 12 ?x510)))
 (let ((?x467 (* s00 r00)))
 (let ((?x545 (* (- 6) ?x467)))
 (let ((?x542 (* (- 6) x00)))
 (let ((?x541 (* (- 3) r00)))
 (let ((?x3161 (+ ?x44 ?x541 ?x542 ?x545 ?x511 ?x2394 ?x6063 ?x2589 ?x4073 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)))))
 (let (($x5126 (= ?x3161 0)))
 (let (($x1754 (and $x1254 $x5126 $x1646 $x2917 $x3524 $x5682)))
 (let ((?x3988 (+ ?x3986 x!0)))
 (let ((?x5812 (* (- 36) (* r00 r00 x00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350))))
 (let ((?x2997 (* (- 4) (* s00 s00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350))))
 (let ((?x1262 (* (- 36) (* r00 r00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x3267 (* 36 (* r00 r00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350))))
 (let ((?x3739 (* 36 (* r00 r00 s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350))))
 (let ((?x6009 (* (- 2) (* r00 s00 s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350))))
 (let ((?x3719 (* 2 (* ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x5498 (* 4 (* r00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x5493 (* 2 (* s00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x3323 (* (- 2) (* r00 s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350))))
 (let ((?x2610 (* 216 (* x!0 s00 r00))))
 (let ((?x3920 (* 36 (* r00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350))))
 (let ((?x2594 (* (- 36) (* r00 x00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350))))
 (let ((?x5784 (+ (* 2 (* ?x3985 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 81) (* x!0 s00)) (* 6 (* ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) ?x2594 (* 81 (* s!1 s00)) (* 1080 (* r!2 x!0 s00 r00)) ?x3920 (* (- 24) (* ?x3985 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 9) (* s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 216) (* s!1 s00 r00)) (* (- 432) (* r!2 r!2 s!1 s00 x00)) (* 405 (* r!2 s!1 s00)) (* 54 (* s!1 s!1 s00)) ?x2610 (* 108 (* r!2 s!1 x!0 s00 x00)) (* (- 216) (* s!1 s!1 s00 r00 r00)) (* 24 (* r00 s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) (* 36 (* s!1 s!1 x!0 s00 r00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 12 (* s00 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 36) (* r00 x00 ?x3985 ?x3985 ?x3988 ?x5350 ?x5350)) (* (- 54) (* s!1 x!0 s00)) (* (- 216) (* r!2 r!2 r!2 s!1 s00 x00)) (* 72 (* r!2 r!2 s!1 x!0 s00 x00)) (* (- 72) (* r!2 r!2 s!1 s!1 s00 x00)) (* 216 (* r!2 r!2 r!2 x!0 s00 x00)) (* (- 405) (* r!2 x!0 s00)) (* 36 (* r00 r00 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350)) (* (- 4) (* s00 s00 ?x3985 ?x3985 ?x3988 ?x5350 ?x5350)) (* (- 162) (* r!2 s!1 x!0 s00)) (* (- 648) (* r!2 r!2 x!0 s00)) (* 9 (* r!2 s!1 s!1 s!1 s00)) (* 9 (* s!1 s!1 s!1 s00)) (* 108 (* r!2 r!2 s!1 s!1 s00)) (* 162 (* r!2 s!1 s!1 s00)) (* 324 (* r!2 r!2 r!2 s!1 s00)) (* 648 (* r!2 r!2 s!1 s00)) (* (- 54) (* x00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 24) (* r00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 9) (* r!2 s!1 s!1 x!0 s00)) (* (- 9) (* s!1 s!1 x!0 s00)) (* (- 108) (* r!2 r!2 s!1 x!0 s00)) (* (- 324) (* r!2 r!2 r!2 x!0 s00)) (* 24 (* s00 ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) ?x3323 (* (- 24) (* r00 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* 54 (* ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350)) (* 135 (* s!1 s00 s00)) ?x5493 (* 675 (* r!2 s!1 s00 s00)) (* 288 (* r!2 r!2 s!1 x!0 s00 r00)) (* 90 (* s!1 s!1 s00 s00)) (* (- 2) (* r00 s00 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 135) (* x!0 s00 s00)) ?x5498 (* 24 (* s!1 s!1 x!0 s00 r00)) (* (- 675) (* r!2 x!0 s00 s00)) (* (- 90) (* s!1 x!0 s00 s00)) (* (- 288) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 1080) (* r!2 r!2 x!0 s00 s00)) (* (- 1080) (* r!2 s!1 s00 r00)) (* 3 (* ?x3985 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* 24 (* s00 ?x3985 ?x3985 ?x3988 ?x5350 ?x5350)) (* 6 (* s00 x00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) (* 15 (* r!2 s!1 s!1 s!1 s00 s00)) (* 15 (* s!1 s!1 s!1 s00 s00)) (* 1728 (* r!2 r!2 x!0 s00 r00)) (* 180 (* r!2 r!2 s!1 s!1 s00 s00)) (* (- 144) (* s!1 s!1 s00 r00)) (* 270 (* r!2 s!1 s!1 s00 s00)) (* (- 432) (* r!2 s!1 s!1 s00 r00)) (* 144 (* s!1 x!0 s00 r00)) (* 432 (* r!2 s!1 x!0 s00 r00)) (* 540 (* r!2 r!2 r!2 s!1 s00 s00)) (* 1080 (* r!2 r!2 s!1 s00 s00)) (* (- 864) (* r!2 r!2 r!2 s!1 s00 r00)) (* 864 (* r!2 r!2 r!2 x!0 s00 r00)) (* (- 180) (* r!2 r!2 s!1 x!0 s00 s00)) (* (- 270) (* r!2 s!1 x!0 s00 s00)) (* (- 15) (* s!1 s!1 x!0 s00 s00)) (* (- 15) (* r!2 s!1 s!1 x!0 s00 s00)) (* (- 24) (* s!1 s!1 s!1 s00 r00)) (* (- 24) (* r!2 s!1 s!1 s!1 s00 r00)) (* 24 (* r!2 s!1 s!1 x!0 s00 r00)) (* (- 540) (* r!2 r!2 r!2 x!0 s00 s00)) (* 2592 (* r!2 r!2 x!0 s00 r00 r00)) (* 3 (* ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350 ?x5350)) (* 432 (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* 324 (* x!0 s00 r00 r00)) (* (- 1296) (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* 54 (* ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) (* 648 (* r!2 r!2 s!1 s!1 r00 x00)) (* 972 (* r!2 s!1 s!1 r00 x00)) (* 324 (* s!1 s!1 r00 x00)) (* 54 (* s!1 s!1 s!1 r00 x00)) (* 54 (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 486) (* x!0 r00 x00)) (* (- 2430) (* r!2 x!0 r00 x00)) (* (- 3888) (* r!2 r!2 x!0 r00 x00)) (* (- 972) (* r!2 s!1 x!0 r00 x00)) (* (- 1944) (* r!2 r!2 r!2 x!0 r00 x00)) (* 216 (* s!1 x!0 s00 r00 r00)) (* (- 324) (* s!1 x!0 r00 x00)) (* (- 648) (* r!2 r!2 s!1 x!0 r00 x00)) (* 1944 (* r!2 r!2 r!2 s!1 r00 x00)) (* 2430 (* r!2 s!1 r00 x00)) (* 3888 (* r!2 r!2 s!1 r00 x00)) (* 1296 (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 54) (* r!2 s!1 s!1 x!0 r00 x00)) (* 54 (* r00 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350)) (* (- 6) (* x00 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 54) (* s!1 s!1 x!0 r00 x00)) (* (- 432) (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* 54 (* r00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) (* 486 (* s!1 r00 x00)) (* (- 36) (* s!1 s!1 s!1 s00 r00 r00)) ?x3719 (* 6 (* ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) ?x6009 (* 9 (* ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 36) (* r00 r00 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 6) (* s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) ?x3739 (* (- 54) (* x00 ?x3985 ?x3985 ?x3988 ?x5350 ?x5350)) (* (- 24) (* r!2 r!2 s!1 x!0 s00 s00 r00)) (* 36 (* s!1 x!0 s00 x00)) (* (- 24) (* ?x3985 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 2592) (* r!2 r!2 s!1 s00 r00 r00)) (* 2 (* s00 ?x3985 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 54) (* s!1 s00 x00)) (* (- 270) (* r!2 s!1 s00 x00)) (* (- 36) (* s!1 s!1 s00 x00)) (* 54 (* x!0 s00 x00)) (* 270 (* r!2 x!0 s00 x00)) (* (- 144) (* r!2 r!2 x!0 s00 s00 r00)) (* (- 36) (* r!2 s!1 x!0 s00 s00 r00)) (* (- 12) (* s!1 x!0 s00 s00 r00)) ?x3267 (* (- 72) (* r!2 r!2 r!2 x!0 s00 s00 r00)) (* (- 90) (* r!2 x!0 s00 s00 r00)) (* (- 18) (* x!0 s00 s00 r00)) (* 2 (* r!2 s!1 s!1 s!1 s00 s00 r00)) (* (- 324) (* s!1 s00 r00 r00)) (* 36 (* r!2 s!1 s!1 s00 s00 r00)) (* 24 (* r!2 r!2 s!1 s!1 s00 s00 r00)) (* (- 1620) (* r!2 s!1 s00 r00 r00)) (* 12 (* s!1 s!1 s00 s00 r00)) (* 2 (* s!1 s!1 s!1 s00 s00 r00)) (* 90 (* r!2 s!1 s00 s00 r00)) (* 144 (* r!2 r!2 s!1 s00 s00 r00)) (* 72 (* r!2 r!2 r!2 s!1 s00 s00 r00)) (* (- 1728) (* r!2 r!2 s!1 s00 r00)) (* (- 2) (* r!2 s!1 s!1 x!0 s00 s00 r00)) (* (- 2) (* s!1 s!1 x!0 s00 s00 r00)) (* (- 15) (* s00 s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) ?x1262 (* 18 (* s!1 s00 s00 r00)) (* (- 6) (* x00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* 1620 (* r!2 x!0 s00 r00 r00)) (* 648 (* r!2 s!1 x!0 s00 r00 r00)) (* (- 648) (* r!2 s!1 s!1 s00 r00 r00)) (* 12 (* s00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* (- 108) (* r!2 s!1 s!1 s00 x00)) (* 36 (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* 6 (* r!2 s!1 s!1 x!0 s00 x00)) (* 6 (* s!1 s!1 x!0 s00 x00)) (* 9 (* ?x3985 ?x3988 ?x5350 ?x5350 ?x5350)) (* 324 (* s!1 r00 r00 x00)) (* (- 6) (* r!2 s!1 s!1 s!1 s00 x00)) (* (- 216) (* s!1 x!0 r00 r00 x00)) (* 1620 (* r!2 s!1 r00 r00 x00)) (* (- 6) (* s!1 s!1 s!1 s00 x00)) (* 36 (* r00 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350)) (* (- 432) (* r!2 r!2 s!1 x!0 r00 r00 x00)) (* (- 648) (* r!2 s!1 x!0 r00 r00 x00)) (* (- 36) (* s!1 s!1 x!0 r00 r00 x00)) (* (- 36) (* r!2 s!1 s!1 x!0 r00 r00 x00)) (* 216 (* s!1 s!1 r00 r00 x00)) (* (- 6) (* s00 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350)) (* 648 (* r!2 s!1 s!1 r00 r00 x00)) (* (- 1296) (* r!2 r!2 r!2 x!0 r00 r00 x00)) (* (- 2592) (* r!2 r!2 x!0 r00 r00 x00)) (* (- 1620) (* r!2 x!0 r00 r00 x00)) (* (- 54) (* r00 x00 ?x3985 ?x3985 ?x3985 ?x3988 ?x3988 ?x5350 ?x5350 ?x5350)) (* (- 324) (* x!0 r00 r00 x00)) (* 36 (* r!2 s!1 s!1 s!1 r00 r00 x00)) (* 36 (* s!1 s!1 s!1 r00 r00 x00)) (* 432 (* r!2 r!2 s!1 s!1 r00 r00 x00)) (* 2592 (* r!2 r!2 s!1 r00 r00 x00)) (* 1296 (* r!2 r!2 r!2 s!1 r00 r00 x00)) ?x2997 (* 4 (* r00 ?x3985 ?x3988 ?x5350 ?x5350 ?x5350 ?x5350)) (* 432 (* r!2 r!2 x!0 s00 x00)) ?x5812)))
 (let ((?x1417 (* (- 108) ?x1387)))
 (let ((?x1416 (* (- 16) ?x1225)))
 (let ((?x1097 (* s00 r00 r00 r00)))
 (let ((?x1412 (* (- 216) ?x1097)))
 (let ((?x924 (* 432 ?x923)))
 (let ((?x1170 (* 108 ?x846)))
 (let ((?x772 (* s00 s00 r00 r00)))
 (let ((?x773 (* 36 ?x772)))
 (let ((?x709 (* s00 s00 r00)))
 (let ((?x1053 (* 108 ?x709)))
 (let ((?x1041 (* 36 ?x688)))
 (let ((?x1406 (* (- 51) ?x632)))
 (let ((?x1872 (* s!1 r00 r00)))
 (let ((?x6493 (* (- 36) ?x1872)))
 (let ((?x1403 (* (- 108) ?x563)))
 (let ((?x554 (* s00 r00 x00)))
 (let ((?x1402 (* (- 216) ?x554)))
 (let ((?x561 (* 54 ?x467)))
 (let ((?x1028 (* (- 9) s00)))
 (let ((?x5144 (* 9 s!1)))
 (let ((?x337 (+ ?x5144 ?x1028 ?x561 ?x1402 ?x1403 (* (- 15) (* s!1 s!1)) ?x6493 ?x1406 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1041 ?x1053 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x773 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1170 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x924 (* 12 (* s!1 s!1 s00)) ?x1412 (* (- 432) (* x!0 r00 r00 r00)) ?x2610 (* (- 36) (* s!1 s!1 r00 r00)) ?x1416 (* 216 (* x!0 x00)) ?x1417)))
 (let ((?x931 (* (- 36) ?x918)))
 (let ((?x847 (* 6 ?x846)))
 (let ((?x737 (* (- 2) ?x709)))
 (let ((?x957 (* (- 15) ?x632)))
 (let ((?x592 (* (- 54) ?x563)))
 (let ((?x605 (* 24 ?x467)))
 (let ((?x5969 (+ ?x5144 ?x1028 (* (- 24) ?x4915) (* 24 (* r!2 s00)) ?x605 ?x592 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x6493 ?x957 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1041 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x737 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x847 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x931 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x689 (* 6 ?x688)))
 (let ((?x645 (* (- 4) ?x632)))
 (let ((?x577 (* (- 18) ?x563)))
 (let ((?x582 (* 9 ?x467)))
 (let ((?x419 (* (- 3) s00)))
 (let ((?x6555 (+ (* 3 s!1) ?x419 (* (- 9) ?x4915) (* 9 (* r!2 s00)) ?x582 ?x577 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1872) ?x645 (* 18 (* x!0 r00)) ?x689 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3847 (+ ?x6063 ?x2589 ?x2394 ?x44 ?x541 ?x542 ?x4073 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x545 ?x511)))
 (let (($x6121 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x342)) 0)))
 (let (($x626 (and $x6121 (= ?x3847 0) (= ?x6555 0) (= ?x5969 0) (= ?x337 0) (not (= ?x5784 0)))))
 (let (($x5341 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1427 (+ 3 ?x213 s)))
 (let ((?x321 (* (- 1) s)))
 (let ((?x1433 (+ ?x321 x)))
 (let ((?x1424 (+ 1 r)))
 (let ((?x4920 (* (- 36) (* r00 r00 x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x454 (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x6701 (* (- 36) (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x5523 (* 36 (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x4048 (* 36 (* r00 r00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x4076 (* (- 2) (* r00 s00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x4052 (* 2 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x2496 (* 4 (* r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x724 (* 2 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x2361 (* (- 2) (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x1196 (* 216 (* x s00 r00))))
 (let ((?x733 (* 36 (* r00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x2836 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x2254 (+ (* 2 (* ?x1424 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 81) (* x s00)) (* 6 (* ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x2836 (* 81 (* s s00)) (* 1080 (* r x s00 r00)) ?x733 (* (- 24) (* ?x1424 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 9) (* s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 216) (* s s00 r00)) (* (- 432) (* r r s s00 x00)) (* 405 (* r s s00)) (* 54 (* s s s00)) ?x1196 (* 108 (* r s x s00 x00)) (* (- 216) (* s s s00 r00 r00)) (* 24 (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 36 (* s s x s00 r00 r00)) (* (- 36) (* r s s s s00 r00 r00)) (* 12 (* s00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* (- 54) (* s x s00)) (* (- 216) (* r r r s s00 x00)) (* 72 (* r r s x s00 x00)) (* (- 72) (* r r s s s00 x00)) (* 216 (* r r r x s00 x00)) (* (- 405) (* r x s00)) (* 36 (* r00 r00 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* (- 162) (* r s x s00)) (* (- 648) (* r r x s00)) (* 9 (* r s s s s00)) (* 9 (* s s s s00)) (* 108 (* r r s s s00)) (* 162 (* r s s s00)) (* 324 (* r r r s s00)) (* 648 (* r r s s00)) (* (- 54) (* x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 24) (* r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 9) (* r s s x s00)) (* (- 9) (* s s x s00)) (* (- 108) (* r r s x s00)) (* (- 324) (* r r r x s00)) (* 24 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x2361 (* (- 24) (* r00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* 54 (* ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* 135 (* s s00 s00)) ?x724 (* 675 (* r s s00 s00)) (* 288 (* r r s x s00 r00)) (* 90 (* s s s00 s00)) (* (- 2) (* r00 s00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 135) (* x s00 s00)) ?x2496 (* 24 (* s s x s00 r00)) (* (- 675) (* r x s00 s00)) (* (- 90) (* s x s00 s00)) (* (- 288) (* r r s s s00 r00)) (* (- 1080) (* r r x s00 s00)) (* (- 1080) (* r s s00 r00)) (* 3 (* ?x1424 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* 24 (* s00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* 6 (* s00 x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 15 (* r s s s s00 s00)) (* 15 (* s s s s00 s00)) (* 1728 (* r r x s00 r00)) (* 180 (* r r s s s00 s00)) (* (- 144) (* s s s00 r00)) (* 270 (* r s s s00 s00)) (* (- 432) (* r s s s00 r00)) (* 144 (* s x s00 r00)) (* 432 (* r s x s00 r00)) (* 540 (* r r r s s00 s00)) (* 1080 (* r r s s00 s00)) (* (- 864) (* r r r s s00 r00)) (* 864 (* r r r x s00 r00)) (* (- 180) (* r r s x s00 s00)) (* (- 270) (* r s x s00 s00)) (* (- 15) (* s s x s00 s00)) (* (- 15) (* r s s x s00 s00)) (* (- 24) (* s s s s00 r00)) (* (- 24) (* r s s s s00 r00)) (* 24 (* r s s x s00 r00)) (* (- 540) (* r r r x s00 s00)) (* 2592 (* r r x s00 r00 r00)) (* 3 (* ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427)) (* 432 (* r r s x s00 r00 r00)) (* 324 (* x s00 r00 r00)) (* (- 1296) (* r r r s s00 r00 r00)) (* 54 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 648 (* r r s s r00 x00)) (* 972 (* r s s r00 x00)) (* 324 (* s s r00 x00)) (* 54 (* s s s r00 x00)) (* 54 (* r s s s r00 x00)) (* (- 486) (* x r00 x00)) (* (- 2430) (* r x r00 x00)) (* (- 3888) (* r r x r00 x00)) (* (- 972) (* r s x r00 x00)) (* (- 1944) (* r r r x r00 x00)) (* 216 (* s x s00 r00 r00)) (* (- 324) (* s x r00 x00)) (* (- 648) (* r r s x r00 x00)) (* 1944 (* r r r s r00 x00)) (* 2430 (* r s r00 x00)) (* 3888 (* r r s r00 x00)) (* 1296 (* r r r x s00 r00 r00)) (* (- 54) (* r s s x r00 x00)) (* 54 (* r00 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* (- 6) (* x00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 54) (* s s x r00 x00)) (* (- 432) (* r r s s s00 r00 r00)) (* 54 (* r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 486 (* s r00 x00)) (* (- 36) (* s s s s00 r00 r00)) ?x4052 (* 6 (* ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) ?x4076 (* 9 (* ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 36) (* r00 r00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 6) (* s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x4048 (* (- 54) (* x00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* (- 24) (* r r s x s00 s00 r00)) (* 36 (* s x s00 x00)) (* (- 24) (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 2592) (* r r s s00 r00 r00)) (* 2 (* s00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 54) (* s s00 x00)) (* (- 270) (* r s s00 x00)) (* (- 36) (* s s s00 x00)) (* 54 (* x s00 x00)) (* 270 (* r x s00 x00)) (* (- 144) (* r r x s00 s00 r00)) (* (- 36) (* r s x s00 s00 r00)) (* (- 12) (* s x s00 s00 r00)) ?x5523 (* (- 72) (* r r r x s00 s00 r00)) (* (- 90) (* r x s00 s00 r00)) (* (- 18) (* x s00 s00 r00)) (* 2 (* r s s s s00 s00 r00)) (* (- 324) (* s s00 r00 r00)) (* 36 (* r s s s00 s00 r00)) (* 24 (* r r s s s00 s00 r00)) (* (- 1620) (* r s s00 r00 r00)) (* 12 (* s s s00 s00 r00)) (* 2 (* s s s s00 s00 r00)) (* 90 (* r s s00 s00 r00)) (* 144 (* r r s s00 s00 r00)) (* 72 (* r r r s s00 s00 r00)) (* (- 1728) (* r r s s00 r00)) (* (- 2) (* r s s x s00 s00 r00)) (* (- 2) (* s s x s00 s00 r00)) (* (- 15) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x6701 (* 18 (* s s00 s00 r00)) (* (- 6) (* x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* 1620 (* r x s00 r00 r00)) (* 648 (* r s x s00 r00 r00)) (* (- 648) (* r s s s00 r00 r00)) (* 12 (* s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 108) (* r s s s00 x00)) (* 36 (* r s s x s00 r00 r00)) (* 6 (* r s s x s00 x00)) (* 6 (* s s x s00 x00)) (* 9 (* ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* 324 (* s r00 r00 x00)) (* (- 6) (* r s s s s00 x00)) (* (- 216) (* s x r00 r00 x00)) (* 1620 (* r s r00 r00 x00)) (* (- 6) (* s s s s00 x00)) (* 36 (* r00 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* (- 432) (* r r s x r00 r00 x00)) (* (- 648) (* r s x r00 r00 x00)) (* (- 36) (* s s x r00 r00 x00)) (* (- 36) (* r s s x r00 r00 x00)) (* 216 (* s s r00 r00 x00)) (* (- 6) (* s00 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* 648 (* r s s r00 r00 x00)) (* (- 1296) (* r r r x r00 r00 x00)) (* (- 2592) (* r r x r00 r00 x00)) (* (- 1620) (* r x r00 r00 x00)) (* (- 54) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 324) (* x r00 r00 x00)) (* 36 (* r s s s r00 r00 x00)) (* 36 (* s s s r00 r00 x00)) (* 432 (* r r s s r00 r00 x00)) (* 2592 (* r r s r00 r00 x00)) (* 1296 (* r r r s r00 r00 x00)) ?x454 (* 4 (* r00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* 432 (* r r x s00 x00)) ?x4920)))
 (let ((?x1387 (* x00 x00)))
 (let ((?x1417 (* (- 108) ?x1387)))
 (let ((?x1225 (* s00 s00 s00)))
 (let ((?x1416 (* (- 16) ?x1225)))
 (let ((?x1097 (* s00 r00 r00 r00)))
 (let ((?x1412 (* (- 216) ?x1097)))
 (let ((?x923 (* r00 r00 r00 x00)))
 (let ((?x924 (* 432 ?x923)))
 (let ((?x846 (* s00 x00)))
 (let ((?x1170 (* 108 ?x846)))
 (let ((?x772 (* s00 s00 r00 r00)))
 (let ((?x773 (* 36 ?x772)))
 (let ((?x709 (* s00 s00 r00)))
 (let ((?x1053 (* 108 ?x709)))
 (let ((?x688 (* s00 r00 r00)))
 (let ((?x1041 (* 36 ?x688)))
 (let ((?x632 (* s00 s00)))
 (let ((?x1406 (* (- 51) ?x632)))
 (let ((?x606 (* s r00 r00)))
 (let ((?x905 (* (- 36) ?x606)))
 (let ((?x563 (* r00 x00)))
 (let ((?x1403 (* (- 108) ?x563)))
 (let ((?x554 (* s00 r00 x00)))
 (let ((?x1402 (* (- 216) ?x554)))
 (let ((?x467 (* s00 r00)))
 (let ((?x561 (* 54 ?x467)))
 (let ((?x1028 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1418 (+ ?x143 ?x1028 ?x561 ?x1402 ?x1403 (* (- 15) (* s s)) ?x905 ?x1406 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1041 ?x1053 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x773 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1170 (* 108 (* s x)) (* (- 108) (* x x)) ?x924 (* 12 (* s s s00)) ?x1412 (* (- 432) (* x r00 r00 r00)) ?x1196 (* (- 36) (* s s r00 r00)) ?x1416 (* 216 (* x x00)) ?x1417)))
 (let (($x1419 (= ?x1418 0)))
 (let ((?x918 (* r00 r00 x00)))
 (let ((?x931 (* (- 36) ?x918)))
 (let ((?x847 (* 6 ?x846)))
 (let ((?x737 (* (- 2) ?x709)))
 (let ((?x957 (* (- 15) ?x632)))
 (let ((?x586 (* s s)))
 (let ((?x610 (* 3 ?x586)))
 (let ((?x592 (* (- 54) ?x563)))
 (let ((?x605 (* 24 ?x467)))
 (let ((?x1120 (+ ?x143 ?x1028 (* (- 24) (* r s)) (* 24 (* r s00)) ?x605 ?x592 ?x610 (* 54 (* r x)) (* 36 (* r x r00)) ?x905 ?x957 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1041 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x737 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x847 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x931 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1125 (= ?x1120 0)))
 (let ((?x689 (* 6 ?x688)))
 (let ((?x645 (* (- 4) ?x632)))
 (let ((?x587 (* 2 ?x586)))
 (let ((?x577 (* (- 18) ?x563)))
 (let ((?x582 (* 9 ?x467)))
 (let ((?x419 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x786 (+ ?x47 ?x419 (* (- 9) (* r s)) (* 9 (* r s00)) ?x582 ?x577 ?x587 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x606) ?x645 (* 18 (* x r00)) ?x689 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x793 (= ?x786 0)))
 (let ((?x510 (* r00 r00 r00)))
 (let ((?x511 (* 12 ?x510)))
 (let ((?x545 (* (- 6) ?x467)))
 (let ((?x542 (* (- 6) x00)))
 (let ((?x541 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x540 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x546 (+ ?x43 ?x540 ?x56 ?x44 ?x541 ?x542 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x545 ?x511)))
 (let (($x547 (= ?x546 0)))
 (let ((?x342 (* r00 r00)))
 (let ((?x343 (* 3 ?x342)))
 (let ((?x372 (* (- 1) s00)))
 (let (($x375 (= (+ s ?x372 (* (- 3) (* r r)) ?x343) 0)))
 (and $x375 $x547 $x793 $x1125 $x1419 (not (= ?x2254 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x3585 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x6497 (+ 3 s ?x213)))
 (let ((?x321 (* (- 1) s)))
 (let ((?x1481 (+ x ?x321)))
 (let ((?x1424 (+ 1 r)))
 (let ((?x6134 (* (- 2) (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5423 (* (- 2) (* r00 s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5384 (* 2 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5360 (* 36 (* r00 r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5661 (* 4 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3928 (* 2 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3858 (* 36 (* r00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3684 (* 36 (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3474 (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3289 (* (- 36) (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x581 (* (- 36) (* r00 r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x1346 (+ (* 4 (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x581 (* 2 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 36 (* r00 r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3289 (* (- 54) (* x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 12 (* s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3474 (* 2 (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3684 (* 12 (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 6 (* ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 24) (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3858 (* (- 24) (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3928 ?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) ?x5661 (* (- 2) (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 2) (* r00 s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x5360 (* 6 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x5384 ?x5423 (* (- 36) (* r00 r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 36) (* r00 r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 54) (* x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 24) (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x6134 (* (- 24) (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)))))
 (let (($x1538 (not (= ?x1346 0))))
 (let ((?x1387 (* x00 x00)))
 (let ((?x3535 (* 108 ?x1387)))
 (let ((?x3482 (* (- 9) s)))
 (let ((?x2809 (* r00 r00 s00)))
 (let ((?x3454 (* (- 36) ?x2809)))
 (let ((?x137 (* 9 s00)))
 (let ((?x632 (* s00 s00)))
 (let ((?x3380 (* 51 ?x632)))
 (let ((?x1638 (* r00 r00 s)))
 (let ((?x5995 (* 36 ?x1638)))
 (let ((?x1225 (* s00 s00 s00)))
 (let ((?x2965 (* 16 ?x1225)))
 (let ((?x846 (* s00 x00)))
 (let ((?x3304 (* (- 108) ?x846)))
 (let ((?x923 (* r00 r00 r00 x00)))
 (let ((?x4944 (* (- 432) ?x923)))
 (let ((?x563 (* r00 x00)))
 (let ((?x3801 (* 108 ?x563)))
 (let ((?x3538 (+ (* 216 (* r00 s00 x00)) ?x3801 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4944 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3304 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2965 (* (- 108) (* x s)) ?x5995 ?x3380 (* (- 108) (* r00 x)) ?x137 ?x3454 ?x3482 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3535)))
 (let (($x3551 (= ?x3538 0)))
 (let ((?x3577 (* 15 ?x632)))
 (let ((?x918 (* r00 r00 x00)))
 (let ((?x3576 (* 36 ?x918)))
 (let ((?x5554 (* (- 6) ?x846)))
 (let ((?x3639 (* 54 ?x563)))
 (let ((?x3581 (+ (* 24 (* s r)) ?x3639 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x5554 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5995 ?x3576 ?x3577 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3454 (* 54 (* x00 r)) ?x3482 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x540 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2220 (* 4 ?x632)))
 (let ((?x3932 (* 18 ?x563)))
 (let ((?x5998 (+ (* 9 (* s r)) ?x3932 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1638) ?x2220 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2809) (* 18 (* x00 r)) ?x540 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x510 (* r00 r00 r00)))
 (let ((?x511 (* 12 ?x510)))
 (let ((?x542 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x541 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2764 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x540 ?x541 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x542 ?x511)))
 (let (($x1455 (= (+ s00 ?x321 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1455 (= ?x2764 0) (= ?x5998 0) (= ?x3581 0) $x3551 $x1538))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x5814 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1427 (+ 3 ?x213 s)))
 (let ((?x321 (* (- 1) s)))
 (let ((?x1433 (+ ?x321 x)))
 (let ((?x1424 (+ 1 r)))
 (let ((?x4920 (* (- 36) (* r00 r00 x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x454 (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x6701 (* (- 36) (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x5523 (* 36 (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x4048 (* 36 (* r00 r00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x4076 (* (- 2) (* r00 s00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x4052 (* 2 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x2496 (* 4 (* r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x724 (* 2 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x2361 (* (- 2) (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427))))
 (let ((?x1196 (* 216 (* x s00 r00))))
 (let ((?x733 (* 36 (* r00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x2836 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427))))
 (let ((?x2254 (+ (* 2 (* ?x1424 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 81) (* x s00)) (* 6 (* ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x2836 (* 81 (* s s00)) (* 1080 (* r x s00 r00)) ?x733 (* (- 24) (* ?x1424 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 9) (* s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 216) (* s s00 r00)) (* (- 432) (* r r s s00 x00)) (* 405 (* r s s00)) (* 54 (* s s s00)) ?x1196 (* 108 (* r s x s00 x00)) (* (- 216) (* s s s00 r00 r00)) (* 24 (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 36 (* s s x s00 r00 r00)) (* (- 36) (* r s s s s00 r00 r00)) (* 12 (* s00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* (- 54) (* s x s00)) (* (- 216) (* r r r s s00 x00)) (* 72 (* r r s x s00 x00)) (* (- 72) (* r r s s s00 x00)) (* 216 (* r r r x s00 x00)) (* (- 405) (* r x s00)) (* 36 (* r00 r00 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* (- 162) (* r s x s00)) (* (- 648) (* r r x s00)) (* 9 (* r s s s s00)) (* 9 (* s s s s00)) (* 108 (* r r s s s00)) (* 162 (* r s s s00)) (* 324 (* r r r s s00)) (* 648 (* r r s s00)) (* (- 54) (* x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 24) (* r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 9) (* r s s x s00)) (* (- 9) (* s s x s00)) (* (- 108) (* r r s x s00)) (* (- 324) (* r r r x s00)) (* 24 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x2361 (* (- 24) (* r00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* 54 (* ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* 135 (* s s00 s00)) ?x724 (* 675 (* r s s00 s00)) (* 288 (* r r s x s00 r00)) (* 90 (* s s s00 s00)) (* (- 2) (* r00 s00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 135) (* x s00 s00)) ?x2496 (* 24 (* s s x s00 r00)) (* (- 675) (* r x s00 s00)) (* (- 90) (* s x s00 s00)) (* (- 288) (* r r s s s00 r00)) (* (- 1080) (* r r x s00 s00)) (* (- 1080) (* r s s00 r00)) (* 3 (* ?x1424 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* 24 (* s00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* 6 (* s00 x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 15 (* r s s s s00 s00)) (* 15 (* s s s s00 s00)) (* 1728 (* r r x s00 r00)) (* 180 (* r r s s s00 s00)) (* (- 144) (* s s s00 r00)) (* 270 (* r s s s00 s00)) (* (- 432) (* r s s s00 r00)) (* 144 (* s x s00 r00)) (* 432 (* r s x s00 r00)) (* 540 (* r r r s s00 s00)) (* 1080 (* r r s s00 s00)) (* (- 864) (* r r r s s00 r00)) (* 864 (* r r r x s00 r00)) (* (- 180) (* r r s x s00 s00)) (* (- 270) (* r s x s00 s00)) (* (- 15) (* s s x s00 s00)) (* (- 15) (* r s s x s00 s00)) (* (- 24) (* s s s s00 r00)) (* (- 24) (* r s s s s00 r00)) (* 24 (* r s s x s00 r00)) (* (- 540) (* r r r x s00 s00)) (* 2592 (* r r x s00 r00 r00)) (* 3 (* ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427)) (* 432 (* r r s x s00 r00 r00)) (* 324 (* x s00 r00 r00)) (* (- 1296) (* r r r s s00 r00 r00)) (* 54 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 648 (* r r s s r00 x00)) (* 972 (* r s s r00 x00)) (* 324 (* s s r00 x00)) (* 54 (* s s s r00 x00)) (* 54 (* r s s s r00 x00)) (* (- 486) (* x r00 x00)) (* (- 2430) (* r x r00 x00)) (* (- 3888) (* r r x r00 x00)) (* (- 972) (* r s x r00 x00)) (* (- 1944) (* r r r x r00 x00)) (* 216 (* s x s00 r00 r00)) (* (- 324) (* s x r00 x00)) (* (- 648) (* r r s x r00 x00)) (* 1944 (* r r r s r00 x00)) (* 2430 (* r s r00 x00)) (* 3888 (* r r s r00 x00)) (* 1296 (* r r r x s00 r00 r00)) (* (- 54) (* r s s x r00 x00)) (* 54 (* r00 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* (- 6) (* x00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 54) (* s s x r00 x00)) (* (- 432) (* r r s s s00 r00 r00)) (* 54 (* r00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* 486 (* s r00 x00)) (* (- 36) (* s s s s00 r00 r00)) ?x4052 (* 6 (* ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) ?x4076 (* 9 (* ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 36) (* r00 r00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 6) (* s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x4048 (* (- 54) (* x00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427)) (* (- 24) (* r r s x s00 s00 r00)) (* 36 (* s x s00 x00)) (* (- 24) (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 2592) (* r r s s00 r00 r00)) (* 2 (* s00 ?x1424 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 54) (* s s00 x00)) (* (- 270) (* r s s00 x00)) (* (- 36) (* s s s00 x00)) (* 54 (* x s00 x00)) (* 270 (* r x s00 x00)) (* (- 144) (* r r x s00 s00 r00)) (* (- 36) (* r s x s00 s00 r00)) (* (- 12) (* s x s00 s00 r00)) ?x5523 (* (- 72) (* r r r x s00 s00 r00)) (* (- 90) (* r x s00 s00 r00)) (* (- 18) (* x s00 s00 r00)) (* 2 (* r s s s s00 s00 r00)) (* (- 324) (* s s00 r00 r00)) (* 36 (* r s s s00 s00 r00)) (* 24 (* r r s s s00 s00 r00)) (* (- 1620) (* r s s00 r00 r00)) (* 12 (* s s s00 s00 r00)) (* 2 (* s s s s00 s00 r00)) (* 90 (* r s s00 s00 r00)) (* 144 (* r r s s00 s00 r00)) (* 72 (* r r r s s00 s00 r00)) (* (- 1728) (* r r s s00 r00)) (* (- 2) (* r s s x s00 s00 r00)) (* (- 2) (* s s x s00 s00 r00)) (* (- 15) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) ?x6701 (* 18 (* s s00 s00 r00)) (* (- 6) (* x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* 1620 (* r x s00 r00 r00)) (* 648 (* r s x s00 r00 r00)) (* (- 648) (* r s s s00 r00 r00)) (* 12 (* s00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* (- 108) (* r s s s00 x00)) (* 36 (* r s s x s00 r00 r00)) (* 6 (* r s s x s00 x00)) (* 6 (* s s x s00 x00)) (* 9 (* ?x1424 ?x1433 ?x1427 ?x1427 ?x1427)) (* 324 (* s r00 r00 x00)) (* (- 6) (* r s s s s00 x00)) (* (- 216) (* s x r00 r00 x00)) (* 1620 (* r s r00 r00 x00)) (* (- 6) (* s s s s00 x00)) (* 36 (* r00 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* (- 432) (* r r s x r00 r00 x00)) (* (- 648) (* r s x r00 r00 x00)) (* (- 36) (* s s x r00 r00 x00)) (* (- 36) (* r s s x r00 r00 x00)) (* 216 (* s s r00 r00 x00)) (* (- 6) (* s00 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427)) (* 648 (* r s s r00 r00 x00)) (* (- 1296) (* r r r x r00 r00 x00)) (* (- 2592) (* r r x r00 r00 x00)) (* (- 1620) (* r x r00 r00 x00)) (* (- 54) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1433 ?x1433 ?x1427 ?x1427 ?x1427)) (* (- 324) (* x r00 r00 x00)) (* 36 (* r s s s r00 r00 x00)) (* 36 (* s s s r00 r00 x00)) (* 432 (* r r s s r00 r00 x00)) (* 2592 (* r r s r00 r00 x00)) (* 1296 (* r r r s r00 r00 x00)) ?x454 (* 4 (* r00 ?x1424 ?x1433 ?x1427 ?x1427 ?x1427 ?x1427)) (* 432 (* r r x s00 x00)) ?x4920)))
 (let ((?x1387 (* x00 x00)))
 (let ((?x1417 (* (- 108) ?x1387)))
 (let ((?x1225 (* s00 s00 s00)))
 (let ((?x1416 (* (- 16) ?x1225)))
 (let ((?x1097 (* s00 r00 r00 r00)))
 (let ((?x1412 (* (- 216) ?x1097)))
 (let ((?x923 (* r00 r00 r00 x00)))
 (let ((?x924 (* 432 ?x923)))
 (let ((?x846 (* s00 x00)))
 (let ((?x1170 (* 108 ?x846)))
 (let ((?x772 (* s00 s00 r00 r00)))
 (let ((?x773 (* 36 ?x772)))
 (let ((?x709 (* s00 s00 r00)))
 (let ((?x1053 (* 108 ?x709)))
 (let ((?x688 (* s00 r00 r00)))
 (let ((?x1041 (* 36 ?x688)))
 (let ((?x632 (* s00 s00)))
 (let ((?x1406 (* (- 51) ?x632)))
 (let ((?x606 (* s r00 r00)))
 (let ((?x905 (* (- 36) ?x606)))
 (let ((?x563 (* r00 x00)))
 (let ((?x1403 (* (- 108) ?x563)))
 (let ((?x554 (* s00 r00 x00)))
 (let ((?x1402 (* (- 216) ?x554)))
 (let ((?x467 (* s00 r00)))
 (let ((?x561 (* 54 ?x467)))
 (let ((?x1028 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1418 (+ ?x143 ?x1028 ?x561 ?x1402 ?x1403 (* (- 15) (* s s)) ?x905 ?x1406 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1041 ?x1053 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x773 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1170 (* 108 (* s x)) (* (- 108) (* x x)) ?x924 (* 12 (* s s s00)) ?x1412 (* (- 432) (* x r00 r00 r00)) ?x1196 (* (- 36) (* s s r00 r00)) ?x1416 (* 216 (* x x00)) ?x1417)))
 (let (($x1419 (= ?x1418 0)))
 (let ((?x918 (* r00 r00 x00)))
 (let ((?x931 (* (- 36) ?x918)))
 (let ((?x847 (* 6 ?x846)))
 (let ((?x737 (* (- 2) ?x709)))
 (let ((?x957 (* (- 15) ?x632)))
 (let ((?x586 (* s s)))
 (let ((?x610 (* 3 ?x586)))
 (let ((?x592 (* (- 54) ?x563)))
 (let ((?x605 (* 24 ?x467)))
 (let ((?x1120 (+ ?x143 ?x1028 (* (- 24) (* r s)) (* 24 (* r s00)) ?x605 ?x592 ?x610 (* 54 (* r x)) (* 36 (* r x r00)) ?x905 ?x957 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1041 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x737 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x847 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x931 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1125 (= ?x1120 0)))
 (let ((?x689 (* 6 ?x688)))
 (let ((?x645 (* (- 4) ?x632)))
 (let ((?x587 (* 2 ?x586)))
 (let ((?x577 (* (- 18) ?x563)))
 (let ((?x582 (* 9 ?x467)))
 (let ((?x419 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x786 (+ ?x47 ?x419 (* (- 9) (* r s)) (* 9 (* r s00)) ?x582 ?x577 ?x587 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x606) ?x645 (* 18 (* x r00)) ?x689 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x793 (= ?x786 0)))
 (let ((?x510 (* r00 r00 r00)))
 (let ((?x511 (* 12 ?x510)))
 (let ((?x545 (* (- 6) ?x467)))
 (let ((?x542 (* (- 6) x00)))
 (let ((?x541 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x540 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x546 (+ ?x43 ?x540 ?x56 ?x44 ?x541 ?x542 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x545 ?x511)))
 (let (($x547 (= ?x546 0)))
 (let ((?x342 (* r00 r00)))
 (let ((?x343 (* 3 ?x342)))
 (let ((?x372 (* (- 1) s00)))
 (let (($x375 (= (+ s ?x372 (* (- 3) (* r r)) ?x343) 0)))
 (let (($x2247 (and $x375 $x547 $x793 $x1125 $x1419 (not (= ?x2254 0)))))
 (let ((?x6497 (+ 3 s ?x213)))
 (let ((?x1481 (+ x ?x321)))
 (let ((?x6134 (* (- 2) (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5423 (* (- 2) (* r00 s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5384 (* 2 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5360 (* 36 (* r00 r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5661 (* 4 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3928 (* 2 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3858 (* 36 (* r00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3684 (* 36 (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3474 (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3289 (* (- 36) (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x581 (* (- 36) (* r00 r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x1346 (+ (* 4 (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x581 (* 2 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 36 (* r00 r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3289 (* (- 54) (* x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 12 (* s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3474 (* 2 (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3684 (* 12 (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 6 (* ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 24) (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3858 (* (- 24) (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3928 ?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) ?x5661 (* (- 2) (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 2) (* r00 s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x5360 (* 6 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x5384 ?x5423 (* (- 36) (* r00 r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 36) (* r00 r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 54) (* x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 24) (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x6134 (* (- 24) (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)))))
 (let (($x1538 (not (= ?x1346 0))))
 (let ((?x3535 (* 108 ?x1387)))
 (let ((?x3482 (* (- 9) s)))
 (let ((?x2809 (* r00 r00 s00)))
 (let ((?x3454 (* (- 36) ?x2809)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3380 (* 51 ?x632)))
 (let ((?x1638 (* r00 r00 s)))
 (let ((?x5995 (* 36 ?x1638)))
 (let ((?x2965 (* 16 ?x1225)))
 (let ((?x3304 (* (- 108) ?x846)))
 (let ((?x4944 (* (- 432) ?x923)))
 (let ((?x3801 (* 108 ?x563)))
 (let ((?x3538 (+ (* 216 (* r00 s00 x00)) ?x3801 (* (- 54) (* r00 s00)) (* 15 ?x586) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4944 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3304 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2965 (* (- 108) (* x s)) ?x5995 ?x3380 (* (- 108) (* r00 x)) ?x137 ?x3454 ?x3482 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3535)))
 (let (($x3551 (= ?x3538 0)))
 (let ((?x3577 (* 15 ?x632)))
 (let ((?x3576 (* 36 ?x918)))
 (let ((?x5554 (* (- 6) ?x846)))
 (let ((?x3639 (* 54 ?x563)))
 (let ((?x3581 (+ (* 24 (* s r)) ?x3639 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x586) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x5554 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5995 ?x3576 ?x3577 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3454 (* 54 (* x00 r)) ?x3482 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2220 (* 4 ?x632)))
 (let ((?x3932 (* 18 ?x563)))
 (let ((?x5998 (+ (* 9 (* s r)) ?x3932 (* (- 9) (* r00 s00)) (* (- 2) ?x586) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1638) ?x2220 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2809) (* 18 (* x00 r)) ?x540 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x2764 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x540 ?x541 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x542 ?x511)))
 (let (($x1455 (= (+ s00 ?x321 (* 3 (* r r)) (* (- 3) ?x342)) 0)))
 (let (($x3438 (and $x1455 (= ?x2764 0) (= ?x5998 0) (= ?x3581 0) $x3551 $x1538)))
 (rewrite (= $x3438 $x2247)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1554 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x6497 (+ 3 s ?x213)))
 (let ((?x321 (* (- 1) s)))
 (let ((?x1481 (+ x ?x321)))
 (let ((?x1424 (+ 1 r)))
 (let ((?x6134 (* (- 2) (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5423 (* (- 2) (* r00 s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5384 (* 2 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5360 (* 36 (* r00 r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5661 (* 4 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3928 (* 2 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3858 (* 36 (* r00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3684 (* 36 (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3474 (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3289 (* (- 36) (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x581 (* (- 36) (* r00 r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x1346 (+ (* 4 (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x581 (* 2 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 36 (* r00 r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3289 (* (- 54) (* x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 12 (* s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3474 (* 2 (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3684 (* 12 (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 6 (* ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 24) (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3858 (* (- 24) (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3928 ?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) ?x5661 (* (- 2) (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 2) (* r00 s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x5360 (* 6 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x5384 ?x5423 (* (- 36) (* r00 r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 36) (* r00 r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 54) (* x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 24) (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x6134 (* (- 24) (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)))))
 (let (($x1538 (not (= ?x1346 0))))
 (let ((?x1387 (* x00 x00)))
 (let ((?x3535 (* 108 ?x1387)))
 (let ((?x3482 (* (- 9) s)))
 (let ((?x2809 (* r00 r00 s00)))
 (let ((?x3454 (* (- 36) ?x2809)))
 (let ((?x137 (* 9 s00)))
 (let ((?x632 (* s00 s00)))
 (let ((?x3380 (* 51 ?x632)))
 (let ((?x1638 (* r00 r00 s)))
 (let ((?x5995 (* 36 ?x1638)))
 (let ((?x1225 (* s00 s00 s00)))
 (let ((?x2965 (* 16 ?x1225)))
 (let ((?x846 (* s00 x00)))
 (let ((?x3304 (* (- 108) ?x846)))
 (let ((?x923 (* r00 r00 r00 x00)))
 (let ((?x4944 (* (- 432) ?x923)))
 (let ((?x563 (* r00 x00)))
 (let ((?x3801 (* 108 ?x563)))
 (let ((?x3538 (+ (* 216 (* r00 s00 x00)) ?x3801 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4944 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3304 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2965 (* (- 108) (* x s)) ?x5995 ?x3380 (* (- 108) (* r00 x)) ?x137 ?x3454 ?x3482 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3535)))
 (let (($x3551 (= ?x3538 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1028 (* (- 9) s00)))
 (let ((?x957 (* (- 15) ?x632)))
 (let ((?x918 (* r00 r00 x00)))
 (let ((?x931 (* (- 36) ?x918)))
 (let ((?x847 (* 6 ?x846)))
 (let ((?x586 (* s s)))
 (let ((?x610 (* 3 ?x586)))
 (let ((?x592 (* (- 54) ?x563)))
 (let ((?x3154 (+ (* (- 24) (* s r)) ?x592 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x610 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x847 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1638) ?x931 ?x957 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1028 (* 36 ?x2809) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x419 (* (- 3) s00)))
 (let ((?x645 (* (- 4) ?x632)))
 (let ((?x587 (* 2 ?x586)))
 (let ((?x577 (* (- 18) ?x563)))
 (let ((?x2498 (+ (* (- 9) (* s r)) ?x577 (* 9 (* r00 s00)) ?x587 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1638) ?x645 (* 18 (* r00 x)) ?x419 (* 6 ?x2809) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2430 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x419 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1455 (= (+ s00 ?x321 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1455 (= ?x2430 0) (= ?x2498 0) (= ?x3154 0) $x3551 $x1538)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3310 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x6497 (+ 3 s ?x213)))
 (let ((?x321 (* (- 1) s)))
 (let ((?x1481 (+ x ?x321)))
 (let ((?x1424 (+ 1 r)))
 (let ((?x6134 (* (- 2) (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5423 (* (- 2) (* r00 s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5384 (* 2 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5360 (* 36 (* r00 r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5661 (* 4 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3928 (* 2 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3858 (* 36 (* r00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3684 (* 36 (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3474 (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3289 (* (- 36) (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x581 (* (- 36) (* r00 r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x1346 (+ (* 4 (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x581 (* 2 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 36 (* r00 r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3289 (* (- 54) (* x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 12 (* s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3474 (* 2 (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3684 (* 12 (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 6 (* ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 24) (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3858 (* (- 24) (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3928 ?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) ?x5661 (* (- 2) (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 2) (* r00 s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x5360 (* 6 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x5384 ?x5423 (* (- 36) (* r00 r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 36) (* r00 r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 54) (* x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 24) (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x6134 (* (- 24) (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)))))
 (let (($x1538 (not (= ?x1346 0))))
 (let ((?x1387 (* x00 x00)))
 (let ((?x3535 (* 108 ?x1387)))
 (let ((?x3482 (* (- 9) s)))
 (let ((?x2809 (* r00 r00 s00)))
 (let ((?x3454 (* (- 36) ?x2809)))
 (let ((?x137 (* 9 s00)))
 (let ((?x632 (* s00 s00)))
 (let ((?x3380 (* 51 ?x632)))
 (let ((?x1638 (* r00 r00 s)))
 (let ((?x5995 (* 36 ?x1638)))
 (let ((?x1225 (* s00 s00 s00)))
 (let ((?x2965 (* 16 ?x1225)))
 (let ((?x846 (* s00 x00)))
 (let ((?x3304 (* (- 108) ?x846)))
 (let ((?x923 (* r00 r00 r00 x00)))
 (let ((?x4944 (* (- 432) ?x923)))
 (let ((?x563 (* r00 x00)))
 (let ((?x3801 (* 108 ?x563)))
 (let ((?x3538 (+ (* 216 (* r00 s00 x00)) ?x3801 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4944 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3304 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2965 (* (- 108) (* x s)) ?x5995 ?x3380 (* (- 108) (* r00 x)) ?x137 ?x3454 ?x3482 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3535)))
 (let (($x3551 (= ?x3538 0)))
 (let ((?x3577 (* 15 ?x632)))
 (let ((?x918 (* r00 r00 x00)))
 (let ((?x3576 (* 36 ?x918)))
 (let ((?x5554 (* (- 6) ?x846)))
 (let ((?x3639 (* 54 ?x563)))
 (let ((?x3581 (+ (* 24 (* s r)) ?x3639 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x5554 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x5995 ?x3576 ?x3577 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3454 (* 54 (* x00 r)) ?x3482 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x540 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2220 (* 4 ?x632)))
 (let ((?x3932 (* 18 ?x563)))
 (let ((?x5998 (+ (* 9 (* s r)) ?x3932 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1638) ?x2220 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2809) (* 18 (* x00 r)) ?x540 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x510 (* r00 r00 r00)))
 (let ((?x511 (* 12 ?x510)))
 (let ((?x542 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x541 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x2764 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x540 ?x541 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x542 ?x511)))
 (let (($x1455 (= (+ s00 ?x321 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x3438 (and $x1455 (= ?x2764 0) (= ?x5998 0) (= ?x3581 0) $x3551 $x1538)))
 (let ((?x143 (* 9 s)))
 (let ((?x1028 (* (- 9) s00)))
 (let ((?x957 (* (- 15) ?x632)))
 (let ((?x931 (* (- 36) ?x918)))
 (let ((?x847 (* 6 ?x846)))
 (let ((?x586 (* s s)))
 (let ((?x610 (* 3 ?x586)))
 (let ((?x592 (* (- 54) ?x563)))
 (let ((?x3154 (+ (* (- 24) (* s r)) ?x592 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x610 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x847 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1638) ?x931 ?x957 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1028 (* 36 ?x2809) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x419 (* (- 3) s00)))
 (let ((?x645 (* (- 4) ?x632)))
 (let ((?x587 (* 2 ?x586)))
 (let ((?x577 (* (- 18) ?x563)))
 (let ((?x2498 (+ (* (- 9) (* s r)) ?x577 (* 9 (* r00 s00)) ?x587 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1638) ?x645 (* 18 (* r00 x)) ?x419 (* 6 ?x2809) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2430 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x419 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x510))))
 (let (($x2096 (and $x1455 (= ?x2430 0) (= ?x2498 0) (= ?x3154 0) $x3551 $x1538)))
 (rewrite (= $x2096 $x3438)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x318 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x218 (- (* 4 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x223 (+ ?x218 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 36 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215) (* 36 ?x212 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x227 (- ?x223 (* 15 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x228 (- ?x227 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x232 (+ (- ?x228 (* 54 ?x212 ?x212 ?x214 ?x214 ?x215 x00)) (* 54 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 12 ?x212 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x234 (- ?x232 (* 4 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x238 (- (+ ?x234 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 9 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x243 (- (+ ?x238 (* 54 ?x212 r00 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 x00))))
 (let ((?x248 (+ (- ?x243 (* 15 ?x212 ?x214 ?x214 s00 s00 ?x215)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 12 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x250 (- ?x248 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x254 (+ ?x250 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) (* 24 ?x212 ?x212 ?x214 ?x214 s00 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x256 (- ?x254 (* 24 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x261 (+ ?x256 (* 54 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 x00) (* 24 ?x212 r00 ?x214 ?x214 s00 ?x215) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x266 (+ (- ?x261 (* 24 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215)) (* 24 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x270 (- ?x266 (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x272 (- (- ?x270 (* 36 ?x212 ?x212 r00 ?x214 ?x214 ?x215 x00)) (* 4 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x274 (+ ?x272 (* 4 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x280 (+ (- ?x274 (* 2 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215)) (* 6 ?x212 ?x214 ?x214 s00 ?x215 x00) (* 36 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215) (* 9 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x287 (- ?x280 (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x289 (- (- ?x287 (* 6 ?x212 ?x214 ?x214 s00 ?x215 ?x215)) (* 2 ?x212 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x291 (- (- ?x289 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 54 ?x212 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x292 (- ?x291 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x297 (+ ?x292 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x303 (- ?x297 (* 2 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x305 (- (- ?x303 (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215)) (* 36 ?x212 r00 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x306 (- ?x305 (* 54 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x307 (- ?x306 (* 24 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x309 (+ ?x307 (* 24 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x312 (- ?x309 (* 2 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let (($x316 (or (not (= (- ?x312 (* 24 ?x212 r00 ?x214 ?x214 ?x214 ?x215)) 0)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x316))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2501 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x6497 (+ 3 s ?x213)))
 (let ((?x321 (* (- 1) s)))
 (let ((?x1481 (+ x ?x321)))
 (let ((?x1424 (+ 1 r)))
 (let ((?x6134 (* (- 2) (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5423 (* (- 2) (* r00 s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5384 (* 2 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x5360 (* 36 (* r00 r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x5661 (* 4 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3928 (* 2 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x3858 (* 36 (* r00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3684 (* 36 (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3474 (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x3289 (* (- 36) (* r00 r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497))))
 (let ((?x581 (* (- 36) (* r00 r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497))))
 (let ((?x1346 (+ (* 4 (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x581 (* 2 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 36 (* r00 r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3289 (* (- 54) (* x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 12 (* s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3474 (* 2 (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 54 (* r00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 15) (* s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3684 (* 12 (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 6) (* x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 6 (* ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* 3 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497 ?x6497)) (* (- 24) (* ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 54 (* ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) ?x3858 (* (- 24) (* ?x1424 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 24 (* r00 s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x3928 ?x3964 (* (- 36) (* r00 x00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 4) (* s00 s00 ?x1424 ?x1424 ?x1481 ?x6497 ?x6497)) ?x5661 (* (- 2) (* r00 s00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* 6 (* s00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* 36 (* r00 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497)) (* (- 2) (* r00 s00 s00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 9) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 54) (* r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 6) (* s00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x5360 (* 6 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 9 (* ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) ?x5384 ?x5423 (* (- 36) (* r00 r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 36) (* r00 r00 x00 ?x1424 ?x1481 ?x6497 ?x6497)) (* (- 54) (* x00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) (* (- 24) (* r00 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497 ?x6497)) (* 24 (* s00 ?x1424 ?x1424 ?x1424 ?x1424 ?x1481 ?x1481 ?x6497 ?x6497 ?x6497)) ?x6134 (* (- 24) (* r00 ?x1424 ?x1481 ?x6497 ?x6497 ?x6497)))))
 (let (($x1538 (not (= ?x1346 0))))
 (let ((?x1387 (* x00 x00)))
 (let ((?x3535 (* 108 ?x1387)))
 (let ((?x3482 (* (- 9) s)))
 (let ((?x2809 (* r00 r00 s00)))
 (let ((?x3454 (* (- 36) ?x2809)))
 (let ((?x137 (* 9 s00)))
 (let ((?x632 (* s00 s00)))
 (let ((?x3380 (* 51 ?x632)))
 (let ((?x1638 (* r00 r00 s)))
 (let ((?x5995 (* 36 ?x1638)))
 (let ((?x1225 (* s00 s00 s00)))
 (let ((?x2965 (* 16 ?x1225)))
 (let ((?x846 (* s00 x00)))
 (let ((?x3304 (* (- 108) ?x846)))
 (let ((?x923 (* r00 r00 r00 x00)))
 (let ((?x4944 (* (- 432) ?x923)))
 (let ((?x563 (* r00 x00)))
 (let ((?x3801 (* 108 ?x563)))
 (let ((?x3538 (+ (* 216 (* r00 s00 x00)) ?x3801 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4944 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3304 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2965 (* (- 108) (* x s)) ?x5995 ?x3380 (* (- 108) (* r00 x)) ?x137 ?x3454 ?x3482 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3535)))
 (let (($x3551 (= ?x3538 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1028 (* (- 9) s00)))
 (let ((?x957 (* (- 15) ?x632)))
 (let ((?x918 (* r00 r00 x00)))
 (let ((?x931 (* (- 36) ?x918)))
 (let ((?x847 (* 6 ?x846)))
 (let ((?x586 (* s s)))
 (let ((?x610 (* 3 ?x586)))
 (let ((?x592 (* (- 54) ?x563)))
 (let ((?x3154 (+ (* (- 24) (* s r)) ?x592 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x610 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x847 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1638) ?x931 ?x957 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1028 (* 36 ?x2809) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x419 (* (- 3) s00)))
 (let ((?x645 (* (- 4) ?x632)))
 (let ((?x587 (* 2 ?x586)))
 (let ((?x577 (* (- 18) ?x563)))
 (let ((?x2498 (+ (* (- 9) (* s r)) ?x577 (* 9 (* r00 s00)) ?x587 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1638) ?x645 (* 18 (* r00 x)) ?x419 (* 6 ?x2809) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2430 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x419 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1455 (= (+ s00 ?x321 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2096 (and $x1455 (= ?x2430 0) (= ?x2498 0) (= ?x3154 0) $x3551 $x1538)))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x218 (- (* 4 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x223 (+ ?x218 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215) (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 36 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215) (* 36 ?x212 r00 r00 ?x214 ?x214 s00 ?x215))))
 (let ((?x227 (- ?x223 (* 15 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x228 (- ?x227 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x232 (+ (- ?x228 (* 54 ?x212 ?x212 ?x214 ?x214 ?x215 x00)) (* 54 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 12 ?x212 ?x214 ?x214 ?x214 s00 ?x215))))
 (let ((?x234 (- ?x232 (* 4 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x238 (- (+ ?x234 (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215)) (* 9 ?x212 ?x214 ?x214 s00 ?x215))))
 (let ((?x243 (- (+ ?x238 (* 54 ?x212 r00 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 x00))))
 (let ((?x248 (+ (- ?x243 (* 15 ?x212 ?x214 ?x214 s00 s00 ?x215)) (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 12 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x250 (- ?x248 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x254 (+ ?x250 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) (* 24 ?x212 ?x212 ?x214 ?x214 s00 ?x215) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x256 (- ?x254 (* 24 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x261 (+ ?x256 (* 54 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 x00) (* 24 ?x212 r00 ?x214 ?x214 s00 ?x215) (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x266 (+ (- ?x261 (* 24 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215)) (* 24 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x270 (- ?x266 (* 36 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x272 (- (- ?x270 (* 36 ?x212 ?x212 r00 ?x214 ?x214 ?x215 x00)) (* 4 ?x212 ?x212 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x274 (+ ?x272 (* 4 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x280 (+ (- ?x274 (* 2 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215)) (* 6 ?x212 ?x214 ?x214 s00 ?x215 x00) (* 36 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215) (* 9 ?x212 ?x214 ?x214 ?x214 ?x215))))
 (let ((?x287 (- ?x280 (* 54 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x289 (- (- ?x287 (* 6 ?x212 ?x214 ?x214 s00 ?x215 ?x215)) (* 2 ?x212 r00 ?x214 ?x214 s00 s00 ?x215))))
 (let ((?x291 (- (- ?x289 (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 54 ?x212 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x292 (- ?x291 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let ((?x297 (+ ?x292 (* 36 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215) (* 9 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x303 (- ?x297 (* 2 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 s00 ?x215 ?x215))))
 (let ((?x305 (- (- ?x303 (* 36 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215)) (* 36 ?x212 r00 r00 ?x214 ?x214 ?x215 x00))))
 (let ((?x306 (- ?x305 (* 54 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00))))
 (let ((?x307 (- ?x306 (* 24 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x309 (+ ?x307 (* 24 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x312 (- ?x309 (* 2 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let (($x316 (or (not (= (- ?x312 (* 24 ?x212 r00 ?x214 ?x214 ?x214 ?x215)) 0)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x317 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x316)))
 (rewrite (= $x317 $x2096))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x319 (asserted $x318)))
 (let ((@x1376 (mp (mp @x319 (quant-intro (proof-bind ?x2501) (= $x318 $x1554)) $x1554) (rewrite (= $x1554 $x1554)) $x1554)))
 (let ((@x3963 (mp (mp @x1376 (quant-intro (proof-bind ?x3310) (= $x1554 $x3585)) $x3585) (quant-intro (proof-bind ?x5814) (= $x3585 $x5341)) $x5341)))
 (let ((@x5675 (mp (mp~ @x3963 (sk (~ $x5341 $x626)) $x626) (rewrite (= $x626 $x1754)) $x1754)))
 (let ((@x5672 (and-elim @x5675 $x1254)))
 (let ((@x4071 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1254) $x1552)) @x5672 $x1552)))
 (let (($x6835 (>= ?x1771 0)))
 (let ((@x4042 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1254) $x6835)) @x5672 $x6835)))
 (let (($x5309 (<= ?x3525 0)))
 (let ((@x5617 (and-elim @x5675 $x3524)))
 (let ((@x2138 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3524) $x5309)) @x5617 $x5309)))
 (let (($x3960 (>= ?x3525 0)))
 (let ((@x2670 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3524) $x3960)) @x5617 $x3960)))
 (let (($x5287 (<= ?x3161 0)))
 (let ((@x390 (and-elim @x5675 $x5126)))
 (let ((@x2830 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5126) $x5287)) @x390 $x5287)))
 (let (($x5296 (>= ?x3161 0)))
 (let ((@x6547 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5126) $x5296)) @x390 $x5296)))
 (let (($x3497 (<= ?x1636 0)))
 (let ((@x564 (and-elim @x5675 $x1646)))
 (let ((@x2815 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1646) $x3497)) @x564 $x3497)))
 (let (($x3458 (>= ?x1636 0)))
 (let ((@x4023 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1646) $x3458)) @x564 $x3458)))
 (let (($x3952 (<= ?x3016 0)))
 (let ((@x806 (and-elim @x5675 $x2917)))
 (let ((@x2373 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2917) $x3952)) @x806 $x3952)))
 (let (($x5305 (>= ?x3016 0)))
 (let ((@x6554 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2917) $x5305)) @x806 $x5305)))
 (let (($x2018 (not (<= ?x1749 0))))
 (let (($x3036 (>= ?x1749 0)))
 (let ((@x2144 ((_ th-lemma arith) (hypothesis (not $x3036)) @x4042 @x4071 @x4023 @x2815 @x4023 @x2815 @x6554 @x2373 @x6554 @x2373 @x6554 @x2373 @x4042 @x4071 @x4023 @x2815 @x4023 @x2815 @x6547 @x2830 @x4042 @x4071 @x2670 @x2138 @x4042 @x4071 false)))
 (let ((@x6079 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4143 $x2018 (not $x3036))) (and-elim @x5675 $x5682) (or $x2018 (not $x3036)))))
 ((_ th-lemma arith) (unit-resolution @x6079 (lemma @x2144 $x3036) $x2018) @x4042 @x4071 @x4023 @x2815 @x4023 @x2815 @x6554 @x2373 @x6554 @x2373 @x6554 @x2373 @x4042 @x4071 @x4023 @x2815 @x4023 @x2815 @x6547 @x2830 @x4042 @x4071 @x2670 @x2138 @x4042 @x4071 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        31
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1928
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 334
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.17
 :memory                    3.98
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                6102714
 :num-checks                1
 :propagations              12
 :rlimit-count              74304
 :time                      0.06
 :total-time                0.08)
