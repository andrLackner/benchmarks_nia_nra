unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x483 (* (- 1) s!1)))
 (let ((?x326 (* r!2 r!2)))
 (let ((?x929 (* 3 ?x326)))
 (let ((?x255 (* r00 r00)))
 (let ((?x269 (* (- 3) ?x255)))
 (let ((?x1497 (+ s00 ?x269 ?x929 ?x483)))
 (let (($x1115 (<= ?x1497 0)))
 (let (($x1494 (= ?x1497 0)))
 (let ((?x1427 (+ 3 (* 6 r!2) s!1)))
 (let ((?x569 (+ ?x483 x!0)))
 (let ((?x1428 (+ 1 r!2)))
 (let ((?x1432 (* ?x1428 ?x1428 ?x1428 ?x569 ?x569 ?x1427 ?x1427)))
 (let ((?x1431 (* ?x1428 ?x1428 ?x569 ?x569 ?x1427 ?x1427 ?x1427)))
 (let ((?x1429 (* ?x1428 ?x569 ?x569 ?x1427 ?x1427 ?x1427)))
 (let ((?x1343 (* r!2 s!1)))
 (let ((?x1244 (* 36 ?x1343)))
 (let ((?x663 (* (- 9) x!0)))
 (let ((?x1070 (* 9 s!1)))
 (let ((?x1056 (* r!2 s!1 s!1)))
 (let ((?x1404 (* 12 ?x1056)))
 (let ((?x1055 (* s!1 x!0)))
 (let ((?x1145 (* (- 6) ?x1055)))
 (let ((?x1053 (* r!2 x!0)))
 (let ((?x1252 (* (- 36) ?x1053)))
 (let ((?x960 (* s!1 s!1)))
 (let ((?x1251 (* 6 ?x960)))
 (let ((?x687 (* s!1 s!1 s!1)))
 (let ((?x809 (* (- 1) (* s!1 s!1 x!0))))
 (let ((?x578 (* (- 36) (* r!2 r!2 x!0))))
 (let ((?x948 (* 36 (* r!2 r!2 s!1))))
 (let ((?x598 (* (- 12) (* r!2 s!1 x!0))))
 (let ((?x1168 (+ ?x598 ?x948 ?x578 ?x809 ?x687 ?x1251 ?x1252 ?x1145 ?x1404 ?x1070 ?x663 ?x1244 ?x1429 ?x1431 ?x1432)))
 (let ((?x1295 (* ?x1168 ?x1497)))
 (let (($x1297 (= ?x1295 0)))
 (let (($x1269 (not $x1297)))
 (let ((?x1300 (* x00 x00)))
 (let ((?x1074 (* 108 ?x1300)))
 (let ((?x1138 (* s00 s00 s00)))
 (let ((?x1099 (* 16 ?x1138)))
 (let ((?x691 (* (- 9) s!1)))
 (let ((?x950 (* r00 r00 s!1)))
 (let ((?x270 (* 36 ?x950)))
 (let ((?x836 (* r00 r00 r00 x00)))
 (let ((?x755 (* (- 432) ?x836)))
 (let ((?x759 (* s00 x00)))
 (let ((?x590 (* (- 108) ?x759)))
 (let ((?x601 (* s00 r00 r00)))
 (let ((?x240 (* (- 36) ?x601)))
 (let ((?x545 (* s00 s00)))
 (let ((?x485 (* 51 ?x545)))
 (let ((?x476 (* r00 x00)))
 (let ((?x333 (* 108 ?x476)))
 (let ((?x137 (* 9 s00)))
 (let ((?x732 (+ ?x137 (* (- 54) (* s00 r00)) (* (- 216) (* x00 x!0)) (* 54 (* r00 s!1)) (* 216 (* s00 r00 x00)) ?x333 (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) ?x485 ?x240 (* (- 66) (* s00 s!1)) (* (- 108) (* s00 s00 r00)) (* 108 (* x!0 x!0)) (* (- 36) (* s00 s00 r00 r00)) (* (- 4) ?x687) ?x590 ?x755 ?x270 (* 15 ?x960) (* 216 (* s00 r00 r00 r00)) (* 36 (* r00 r00 s!1 s!1)) (* (- 108) ?x1055) ?x691 (* (- 216) (* r00 r00 r00 s!1)) ?x1099 (* 108 (* s00 x!0)) ?x1074 (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* (- 108) (* r00 x!0)))))
 (let ((?x831 (* r00 r00 x00)))
 (let ((?x1287 (* 36 ?x831)))
 (let ((?x664 (* (- 6) ?x759)))
 (let ((?x935 (* 15 ?x545)))
 (let ((?x1594 (* 54 ?x476)))
 (let ((?x782 (+ ?x137 (* (- 36) (* r00 r00 x!0)) (* (- 24) (* s00 r00)) (* 24 (* r00 s!1)) ?x1594 ?x935 (* 4 (* s00 s00 r!2)) ?x240 (* (- 12) (* s00 s!1)) (* 2 (* s00 s00 r00)) (* (- 2) (* s00 r!2 s!1)) ?x664 ?x1287 ?x270 (* (- 3) ?x960) (* (- 54) ?x1053) ?x1145 (* (- 2) ?x1056) ?x691 (* 36 (* r00 x00 r!2)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* 24 ?x1343) (* (- 24) (* s00 r!2)) (* (- 36) (* r00 r!2 x!0)) (* 2 (* s00 r00 s!1)) (* 6 (* x00 s!1)) (* 54 (* x00 r!2)) (* (- 54) (* r00 x!0)))))
 (let ((?x1457 (* (- 3) s!1)))
 (let ((?x802 (* 4 ?x545)))
 (let ((?x996 (* 18 ?x476)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1472 (+ ?x44 (* (- 9) (* s00 r00)) (* 9 (* r00 s!1)) ?x996 ?x802 (* (- 6) ?x601) (* (- 2) (* s00 s!1)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x950) (* (- 2) ?x960) (* (- 18) ?x1053) ?x1457 (* 6 (* s00 r00 r!2)) (* 9 ?x1343) (* (- 9) (* s00 r!2)) (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)))))
 (let ((?x1229 (* 2 ?x1343)))
 (let ((?x1353 (* 6 x!0)))
 (let ((?x1504 (* 3 r!2)))
 (let ((?x423 (* r00 r00 r00)))
 (let ((?x424 (* 12 ?x423)))
 (let ((?x380 (* s00 r00)))
 (let ((?x458 (* (- 6) ?x380)))
 (let ((?x455 (* (- 6) x00)))
 (let ((?x454 (* (- 3) r00)))
 (let ((?x925 (+ ?x44 ?x454 ?x455 ?x458 ?x424 ?x1504 ?x1457 ?x1353 ?x1229 (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)))))
 (let (($x1296 (and $x1494 (= ?x925 0) (= ?x1472 0) (= ?x782 0) (= ?x732 0) $x1269)))
 (let ((?x906 (+ ?x1070 ?x663 ?x1244 ?x1251 ?x1252 ?x687 ?x1404 ?x1145 ?x1429 ?x1431 ?x1432 ?x598 ?x578 ?x948 ?x809)))
 (let ((?x1330 (* (- 108) ?x1300)))
 (let ((?x1329 (* (- 16) ?x1138)))
 (let ((?x1010 (* s00 r00 r00 r00)))
 (let ((?x1325 (* (- 216) ?x1010)))
 (let ((?x837 (* 432 ?x836)))
 (let ((?x1083 (* 108 ?x759)))
 (let ((?x685 (* s00 s00 r00 r00)))
 (let ((?x686 (* 36 ?x685)))
 (let ((?x622 (* s00 s00 r00)))
 (let ((?x966 (* 108 ?x622)))
 (let ((?x954 (* 36 ?x601)))
 (let ((?x1319 (* (- 51) ?x545)))
 (let ((?x336 (* s!1 r00 r00)))
 (let ((?x656 (* (- 36) ?x336)))
 (let ((?x1316 (* (- 108) ?x476)))
 (let ((?x467 (* s00 r00 x00)))
 (let ((?x1315 (* (- 216) ?x467)))
 (let ((?x474 (* 54 ?x380)))
 (let ((?x941 (* (- 9) s00)))
 (let ((?x309 (+ ?x1070 ?x941 ?x474 ?x1315 ?x1316 (* (- 15) ?x960) ?x656 ?x1319 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x954 ?x966 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x686 (* (- 108) (* s!1 s00 r00)) (* 4 ?x687) ?x1083 (* 108 ?x1055) (* (- 108) (* x!0 x!0)) ?x837 (* 12 (* s!1 s!1 s00)) ?x1325 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1329 (* 216 (* x!0 x00)) ?x1330)))
 (let ((?x844 (* (- 36) ?x831)))
 (let ((?x760 (* 6 ?x759)))
 (let ((?x650 (* (- 2) ?x622)))
 (let ((?x870 (* (- 15) ?x545)))
 (let ((?x505 (* (- 54) ?x476)))
 (let ((?x518 (* 24 ?x380)))
 (let ((?x1012 (+ ?x1070 ?x941 (* (- 24) ?x1343) (* 24 (* r!2 s00)) ?x518 ?x505 (* 3 ?x960) (* 54 ?x1053) (* 36 (* r!2 x!0 r00)) ?x656 ?x870 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x954 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x650 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x760 (* 2 ?x1056) (* 6 ?x1055) (* (- 4) (* r!2 s00 s00)) ?x844 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x602 (* 6 ?x601)))
 (let ((?x558 (* (- 4) ?x545)))
 (let ((?x490 (* (- 18) ?x476)))
 (let ((?x495 (* 9 ?x380)))
 (let ((?x332 (* (- 3) s00)))
 (let ((?x1059 (+ (* 3 s!1) ?x332 (* (- 9) ?x1343) (* 9 (* r!2 s00)) ?x495 ?x490 (* 2 ?x960) (* 18 ?x1053) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x336) ?x558 (* 18 (* x!0 r00)) ?x602 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x525 (+ ?x1504 ?x1457 ?x1353 ?x44 ?x454 ?x455 ?x1229 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x458 ?x424)))
 (let (($x1357 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x326) (* 3 ?x255)) 0) (= ?x525 0) (= ?x1059 0) (= ?x1012 0) (= ?x309 0) (not (= (* ?x906 (+ ?x483 s00 ?x929 ?x269)) 0)))))
 (let (($x257 (exists ((r Int) (s Int) (x Int) )(! (let ((?x255 (* r00 r00)))
 (let ((?x269 (* (- 3) ?x255)))
 (let ((?x243 (* r r)))
 (let ((?x244 (* 3 ?x243)))
 (let ((?x234 (* (- 1) s)))
 (let ((?x1602 (* (- 1) (* s s x))))
 (let ((?x1568 (* 36 (* r r s))))
 (let ((?x1571 (* (- 36) (* r r x))))
 (let ((?x1574 (* (- 12) (* r s x))))
 (let ((?x211 (* 6 r)))
 (let ((?x1337 (+ 3 ?x211 s)))
 (let ((?x1430 (+ ?x234 x)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x767 (* s x)))
 (let ((?x1577 (* (- 6) ?x767)))
 (let ((?x763 (* r s s)))
 (let ((?x1580 (* 12 ?x763)))
 (let ((?x757 (* s s s)))
 (let ((?x503 (* r x)))
 (let ((?x1554 (* (- 36) ?x503)))
 (let ((?x499 (* s s)))
 (let ((?x1555 (* 6 ?x499)))
 (let ((?x299 (* r s)))
 (let ((?x1556 (* 36 ?x299)))
 (let ((?x1593 (* (- 9) x)))
 (let ((?x143 (* 9 s)))
 (let ((?x1214 (+ ?x143 ?x1593 ?x1556 ?x1555 ?x1554 ?x757 ?x1580 ?x1577 (* ?x1370 ?x1430 ?x1430 ?x1337 ?x1337 ?x1337) (* ?x1370 ?x1370 ?x1430 ?x1430 ?x1337 ?x1337 ?x1337) (* ?x1370 ?x1370 ?x1370 ?x1430 ?x1430 ?x1337 ?x1337) ?x1574 ?x1571 ?x1568 ?x1602)))
 (let ((?x1300 (* x00 x00)))
 (let ((?x1330 (* (- 108) ?x1300)))
 (let ((?x1138 (* s00 s00 s00)))
 (let ((?x1329 (* (- 16) ?x1138)))
 (let ((?x1010 (* s00 r00 r00 r00)))
 (let ((?x1325 (* (- 216) ?x1010)))
 (let ((?x836 (* r00 r00 r00 x00)))
 (let ((?x837 (* 432 ?x836)))
 (let ((?x759 (* s00 x00)))
 (let ((?x1083 (* 108 ?x759)))
 (let ((?x685 (* s00 s00 r00 r00)))
 (let ((?x686 (* 36 ?x685)))
 (let ((?x622 (* s00 s00 r00)))
 (let ((?x966 (* 108 ?x622)))
 (let ((?x601 (* s00 r00 r00)))
 (let ((?x954 (* 36 ?x601)))
 (let ((?x545 (* s00 s00)))
 (let ((?x1319 (* (- 51) ?x545)))
 (let ((?x519 (* s r00 r00)))
 (let ((?x818 (* (- 36) ?x519)))
 (let ((?x476 (* r00 x00)))
 (let ((?x1316 (* (- 108) ?x476)))
 (let ((?x467 (* s00 r00 x00)))
 (let ((?x1315 (* (- 216) ?x467)))
 (let ((?x380 (* s00 r00)))
 (let ((?x474 (* 54 ?x380)))
 (let ((?x941 (* (- 9) s00)))
 (let ((?x1331 (+ ?x143 ?x941 ?x474 ?x1315 ?x1316 (* (- 15) ?x499) ?x818 ?x1319 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x954 ?x966 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x686 (* (- 108) (* s s00 r00)) (* 4 ?x757) ?x1083 (* 108 ?x767) (* (- 108) (* x x)) ?x837 (* 12 (* s s s00)) ?x1325 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1329 (* 216 (* x x00)) ?x1330)))
 (let (($x1332 (= ?x1331 0)))
 (let ((?x831 (* r00 r00 x00)))
 (let ((?x844 (* (- 36) ?x831)))
 (let ((?x760 (* 6 ?x759)))
 (let ((?x650 (* (- 2) ?x622)))
 (let ((?x870 (* (- 15) ?x545)))
 (let ((?x523 (* 3 ?x499)))
 (let ((?x505 (* (- 54) ?x476)))
 (let ((?x518 (* 24 ?x380)))
 (let ((?x1033 (+ ?x143 ?x941 (* (- 24) ?x299) (* 24 (* r s00)) ?x518 ?x505 ?x523 (* 54 ?x503) (* 36 (* r x r00)) ?x818 ?x870 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x954 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x650 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x760 (* 2 ?x763) (* 6 ?x767) (* (- 4) (* r s00 s00)) ?x844 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1038 (= ?x1033 0)))
 (let ((?x602 (* 6 ?x601)))
 (let ((?x558 (* (- 4) ?x545)))
 (let ((?x500 (* 2 ?x499)))
 (let ((?x490 (* (- 18) ?x476)))
 (let ((?x495 (* 9 ?x380)))
 (let ((?x332 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x699 (+ ?x47 ?x332 (* (- 9) ?x299) (* 9 (* r s00)) ?x495 ?x490 ?x500 (* 18 ?x503) (* 6 (* r s r00)) (* (- 6) ?x519) ?x558 (* 18 (* x r00)) ?x602 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x706 (= ?x699 0)))
 (let ((?x423 (* r00 r00 r00)))
 (let ((?x424 (* 12 ?x423)))
 (let ((?x458 (* (- 6) ?x380)))
 (let ((?x455 (* (- 6) x00)))
 (let ((?x454 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x453 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x459 (+ ?x43 ?x453 ?x56 ?x44 ?x454 ?x455 (* 2 ?x299) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x458 ?x424)))
 (let (($x460 (= ?x459 0)))
 (let (($x288 (= (+ s (* (- 1) s00) (* (- 3) ?x243) (* 3 ?x255)) 0)))
 (and $x288 $x460 $x706 $x1038 $x1332 (not (= (* ?x1214 (+ ?x234 s00 ?x244 ?x269)) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1519 (exists ((r Int) (s Int) (x Int) )(! (let ((?x255 (* r00 r00)))
 (let ((?x269 (* (- 3) ?x255)))
 (let ((?x234 (* (- 1) s)))
 (let ((?x1122 (+ (- 3) s00 ?x234 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x269)))
 (let ((?x211 (* 6 r)))
 (let ((?x932 (+ 3 s ?x211)))
 (let ((?x514 (+ x ?x234)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x1008 (+ (* ?x1370 ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932) (* (- 1) (* ?x514 ?x932 ?x932)) (* ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932) (* ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932))))
 (let (($x927 (not (= (* ?x1008 ?x1122) 0))))
 (let ((?x1300 (* x00 x00)))
 (let ((?x1074 (* 108 ?x1300)))
 (let ((?x919 (* (- 9) s)))
 (let ((?x965 (* r00 r00 s00)))
 (let ((?x816 (* (- 36) ?x965)))
 (let ((?x137 (* 9 s00)))
 (let ((?x545 (* s00 s00)))
 (let ((?x485 (* 51 ?x545)))
 (let ((?x1458 (* r00 r00 s)))
 (let ((?x662 (* 36 ?x1458)))
 (let ((?x1138 (* s00 s00 s00)))
 (let ((?x1099 (* 16 ?x1138)))
 (let ((?x759 (* s00 x00)))
 (let ((?x590 (* (- 108) ?x759)))
 (let ((?x836 (* r00 r00 r00 x00)))
 (let ((?x755 (* (- 432) ?x836)))
 (let ((?x476 (* r00 x00)))
 (let ((?x333 (* 108 ?x476)))
 (let ((?x1081 (+ (* 216 (* r00 s00 x00)) ?x333 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x755 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x590 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1099 (* (- 108) (* x s)) ?x662 ?x485 (* (- 108) (* r00 x)) ?x137 ?x816 ?x919 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1074)))
 (let (($x1087 (= ?x1081 0)))
 (let ((?x935 (* 15 ?x545)))
 (let ((?x831 (* r00 r00 x00)))
 (let ((?x1287 (* 36 ?x831)))
 (let ((?x664 (* (- 6) ?x759)))
 (let ((?x1594 (* 54 ?x476)))
 (let ((?x1525 (+ (* 24 (* s r)) ?x1594 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x664 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x662 ?x1287 ?x935 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x816 (* 54 (* x00 r)) ?x919 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x453 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x802 (* 4 ?x545)))
 (let ((?x996 (* 18 ?x476)))
 (let ((?x854 (+ (* 9 (* s r)) ?x996 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1458) ?x802 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x965) (* 18 (* x00 r)) ?x453 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x423 (* r00 r00 r00)))
 (let ((?x424 (* 12 ?x423)))
 (let ((?x455 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x454 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x749 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x453 ?x454 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x455 ?x424)))
 (let (($x729 (= (+ s00 ?x234 (* 3 (* r r)) ?x269) 0)))
 (and $x729 (= ?x749 0) (= ?x854 0) (= ?x1525 0) $x1087 $x927)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x258 (lambda ((r Int) (s Int) (x Int) )(let ((?x255 (* r00 r00)))
 (let ((?x269 (* (- 3) ?x255)))
 (let ((?x243 (* r r)))
 (let ((?x244 (* 3 ?x243)))
 (let ((?x234 (* (- 1) s)))
 (let ((?x1602 (* (- 1) (* s s x))))
 (let ((?x1568 (* 36 (* r r s))))
 (let ((?x1571 (* (- 36) (* r r x))))
 (let ((?x1574 (* (- 12) (* r s x))))
 (let ((?x211 (* 6 r)))
 (let ((?x1337 (+ 3 ?x211 s)))
 (let ((?x1430 (+ ?x234 x)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x767 (* s x)))
 (let ((?x1577 (* (- 6) ?x767)))
 (let ((?x763 (* r s s)))
 (let ((?x1580 (* 12 ?x763)))
 (let ((?x757 (* s s s)))
 (let ((?x503 (* r x)))
 (let ((?x1554 (* (- 36) ?x503)))
 (let ((?x499 (* s s)))
 (let ((?x1555 (* 6 ?x499)))
 (let ((?x299 (* r s)))
 (let ((?x1556 (* 36 ?x299)))
 (let ((?x1593 (* (- 9) x)))
 (let ((?x143 (* 9 s)))
 (let ((?x1214 (+ ?x143 ?x1593 ?x1556 ?x1555 ?x1554 ?x757 ?x1580 ?x1577 (* ?x1370 ?x1430 ?x1430 ?x1337 ?x1337 ?x1337) (* ?x1370 ?x1370 ?x1430 ?x1430 ?x1337 ?x1337 ?x1337) (* ?x1370 ?x1370 ?x1370 ?x1430 ?x1430 ?x1337 ?x1337) ?x1574 ?x1571 ?x1568 ?x1602)))
 (let ((?x1300 (* x00 x00)))
 (let ((?x1330 (* (- 108) ?x1300)))
 (let ((?x1138 (* s00 s00 s00)))
 (let ((?x1329 (* (- 16) ?x1138)))
 (let ((?x1010 (* s00 r00 r00 r00)))
 (let ((?x1325 (* (- 216) ?x1010)))
 (let ((?x836 (* r00 r00 r00 x00)))
 (let ((?x837 (* 432 ?x836)))
 (let ((?x759 (* s00 x00)))
 (let ((?x1083 (* 108 ?x759)))
 (let ((?x685 (* s00 s00 r00 r00)))
 (let ((?x686 (* 36 ?x685)))
 (let ((?x622 (* s00 s00 r00)))
 (let ((?x966 (* 108 ?x622)))
 (let ((?x601 (* s00 r00 r00)))
 (let ((?x954 (* 36 ?x601)))
 (let ((?x545 (* s00 s00)))
 (let ((?x1319 (* (- 51) ?x545)))
 (let ((?x519 (* s r00 r00)))
 (let ((?x818 (* (- 36) ?x519)))
 (let ((?x476 (* r00 x00)))
 (let ((?x1316 (* (- 108) ?x476)))
 (let ((?x467 (* s00 r00 x00)))
 (let ((?x1315 (* (- 216) ?x467)))
 (let ((?x380 (* s00 r00)))
 (let ((?x474 (* 54 ?x380)))
 (let ((?x941 (* (- 9) s00)))
 (let ((?x1331 (+ ?x143 ?x941 ?x474 ?x1315 ?x1316 (* (- 15) ?x499) ?x818 ?x1319 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x954 ?x966 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x686 (* (- 108) (* s s00 r00)) (* 4 ?x757) ?x1083 (* 108 ?x767) (* (- 108) (* x x)) ?x837 (* 12 (* s s s00)) ?x1325 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1329 (* 216 (* x x00)) ?x1330)))
 (let (($x1332 (= ?x1331 0)))
 (let ((?x831 (* r00 r00 x00)))
 (let ((?x844 (* (- 36) ?x831)))
 (let ((?x760 (* 6 ?x759)))
 (let ((?x650 (* (- 2) ?x622)))
 (let ((?x870 (* (- 15) ?x545)))
 (let ((?x523 (* 3 ?x499)))
 (let ((?x505 (* (- 54) ?x476)))
 (let ((?x518 (* 24 ?x380)))
 (let ((?x1033 (+ ?x143 ?x941 (* (- 24) ?x299) (* 24 (* r s00)) ?x518 ?x505 ?x523 (* 54 ?x503) (* 36 (* r x r00)) ?x818 ?x870 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x954 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x650 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x760 (* 2 ?x763) (* 6 ?x767) (* (- 4) (* r s00 s00)) ?x844 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1038 (= ?x1033 0)))
 (let ((?x602 (* 6 ?x601)))
 (let ((?x558 (* (- 4) ?x545)))
 (let ((?x500 (* 2 ?x499)))
 (let ((?x490 (* (- 18) ?x476)))
 (let ((?x495 (* 9 ?x380)))
 (let ((?x332 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x699 (+ ?x47 ?x332 (* (- 9) ?x299) (* 9 (* r s00)) ?x495 ?x490 ?x500 (* 18 ?x503) (* 6 (* r s r00)) (* (- 6) ?x519) ?x558 (* 18 (* x r00)) ?x602 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x706 (= ?x699 0)))
 (let ((?x423 (* r00 r00 r00)))
 (let ((?x424 (* 12 ?x423)))
 (let ((?x458 (* (- 6) ?x380)))
 (let ((?x455 (* (- 6) x00)))
 (let ((?x454 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x453 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x459 (+ ?x43 ?x453 ?x56 ?x44 ?x454 ?x455 (* 2 ?x299) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x458 ?x424)))
 (let (($x460 (= ?x459 0)))
 (let (($x288 (= (+ s (* (- 1) s00) (* (- 3) ?x243) (* 3 ?x255)) 0)))
 (let (($x1125 (and $x288 $x460 $x706 $x1038 $x1332 (not (= (* ?x1214 (+ ?x234 s00 ?x244 ?x269)) 0)))))
 (let ((?x932 (+ 3 s ?x211)))
 (let ((?x514 (+ x ?x234)))
 (let ((?x1008 (+ (* ?x1370 ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932) (* (- 1) (* ?x514 ?x932 ?x932)) (* ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932) (* ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932))))
 (let ((?x1063 (* ?x1008 (+ (- 3) s00 ?x234 (* (- 6) r) (* 3 (* ?x1370 ?x1370)) ?x269))))
 (let (($x927 (not (= ?x1063 0))))
 (let ((?x1074 (* 108 ?x1300)))
 (let ((?x919 (* (- 9) s)))
 (let ((?x965 (* r00 r00 s00)))
 (let ((?x816 (* (- 36) ?x965)))
 (let ((?x137 (* 9 s00)))
 (let ((?x485 (* 51 ?x545)))
 (let ((?x1458 (* r00 r00 s)))
 (let ((?x662 (* 36 ?x1458)))
 (let ((?x1099 (* 16 ?x1138)))
 (let ((?x590 (* (- 108) ?x759)))
 (let ((?x755 (* (- 432) ?x836)))
 (let ((?x333 (* 108 ?x476)))
 (let ((?x1081 (+ (* 216 (* r00 s00 x00)) ?x333 (* (- 54) (* r00 s00)) (* 15 ?x499) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) ?x757) (* 108 (* x x)) ?x755 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x590 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1099 (* (- 108) (* x s)) ?x662 ?x485 (* (- 108) (* r00 x)) ?x137 ?x816 ?x919 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1074)))
 (let (($x1087 (= ?x1081 0)))
 (let ((?x935 (* 15 ?x545)))
 (let ((?x1287 (* 36 ?x831)))
 (let ((?x664 (* (- 6) ?x759)))
 (let ((?x1594 (* 54 ?x476)))
 (let ((?x1525 (+ (* 24 (* s r)) ?x1594 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x499) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x664 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x662 ?x1287 ?x935 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x816 (* 54 (* x00 r)) ?x919 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x802 (* 4 ?x545)))
 (let ((?x996 (* 18 ?x476)))
 (let ((?x854 (+ (* 9 (* s r)) ?x996 (* (- 9) (* r00 s00)) (* (- 2) ?x499) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1458) ?x802 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x965) (* 18 (* x00 r)) ?x453 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x749 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x453 ?x454 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x455 ?x424)))
 (let (($x729 (= (+ s00 ?x234 ?x244 ?x269) 0)))
 (let (($x1281 (and $x729 (= ?x749 0) (= ?x854 0) (= ?x1525 0) $x1087 $x927)))
 (rewrite (= $x1281 $x1125)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x945 (exists ((r Int) (s Int) (x Int) )(! (let ((?x255 (* r00 r00)))
 (let ((?x269 (* (- 3) ?x255)))
 (let ((?x234 (* (- 1) s)))
 (let ((?x1122 (+ (- 3) s00 ?x234 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x269)))
 (let ((?x211 (* 6 r)))
 (let ((?x932 (+ 3 s ?x211)))
 (let ((?x514 (+ x ?x234)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x1008 (+ (* ?x1370 ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932) (* (- 1) (* ?x514 ?x932 ?x932)) (* ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932) (* ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932))))
 (let (($x927 (not (= (* ?x1008 ?x1122) 0))))
 (let ((?x1300 (* x00 x00)))
 (let ((?x1074 (* 108 ?x1300)))
 (let ((?x919 (* (- 9) s)))
 (let ((?x965 (* r00 r00 s00)))
 (let ((?x816 (* (- 36) ?x965)))
 (let ((?x137 (* 9 s00)))
 (let ((?x545 (* s00 s00)))
 (let ((?x485 (* 51 ?x545)))
 (let ((?x1458 (* r00 r00 s)))
 (let ((?x662 (* 36 ?x1458)))
 (let ((?x1138 (* s00 s00 s00)))
 (let ((?x1099 (* 16 ?x1138)))
 (let ((?x759 (* s00 x00)))
 (let ((?x590 (* (- 108) ?x759)))
 (let ((?x836 (* r00 r00 r00 x00)))
 (let ((?x755 (* (- 432) ?x836)))
 (let ((?x476 (* r00 x00)))
 (let ((?x333 (* 108 ?x476)))
 (let ((?x1081 (+ (* 216 (* r00 s00 x00)) ?x333 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x755 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x590 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1099 (* (- 108) (* x s)) ?x662 ?x485 (* (- 108) (* r00 x)) ?x137 ?x816 ?x919 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1074)))
 (let (($x1087 (= ?x1081 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x941 (* (- 9) s00)))
 (let ((?x870 (* (- 15) ?x545)))
 (let ((?x831 (* r00 r00 x00)))
 (let ((?x844 (* (- 36) ?x831)))
 (let ((?x760 (* 6 ?x759)))
 (let ((?x499 (* s s)))
 (let ((?x523 (* 3 ?x499)))
 (let ((?x505 (* (- 54) ?x476)))
 (let ((?x1016 (+ (* (- 24) (* s r)) ?x505 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x523 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x760 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1458) ?x844 ?x870 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x941 (* 36 ?x965) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x332 (* (- 3) s00)))
 (let ((?x558 (* (- 4) ?x545)))
 (let ((?x500 (* 2 ?x499)))
 (let ((?x490 (* (- 18) ?x476)))
 (let ((?x852 (+ (* (- 9) (* s r)) ?x490 (* 9 (* r00 s00)) ?x500 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1458) ?x558 (* 18 (* r00 x)) ?x332 (* 6 ?x965) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x303 (* (- 3) r)))
 (let ((?x1289 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x303 ?x332 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x729 (= (+ s00 ?x234 (* 3 (* r r)) ?x269) 0)))
 (and $x729 (= ?x1289 0) (= ?x852 0) (= ?x1016 0) $x1087 $x927)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1527 (lambda ((r Int) (s Int) (x Int) )(let ((?x255 (* r00 r00)))
 (let ((?x269 (* (- 3) ?x255)))
 (let ((?x234 (* (- 1) s)))
 (let ((?x1122 (+ (- 3) s00 ?x234 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x269)))
 (let ((?x211 (* 6 r)))
 (let ((?x932 (+ 3 s ?x211)))
 (let ((?x514 (+ x ?x234)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x1008 (+ (* ?x1370 ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932) (* (- 1) (* ?x514 ?x932 ?x932)) (* ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932) (* ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932))))
 (let (($x927 (not (= (* ?x1008 ?x1122) 0))))
 (let ((?x1300 (* x00 x00)))
 (let ((?x1074 (* 108 ?x1300)))
 (let ((?x919 (* (- 9) s)))
 (let ((?x965 (* r00 r00 s00)))
 (let ((?x816 (* (- 36) ?x965)))
 (let ((?x137 (* 9 s00)))
 (let ((?x545 (* s00 s00)))
 (let ((?x485 (* 51 ?x545)))
 (let ((?x1458 (* r00 r00 s)))
 (let ((?x662 (* 36 ?x1458)))
 (let ((?x1138 (* s00 s00 s00)))
 (let ((?x1099 (* 16 ?x1138)))
 (let ((?x759 (* s00 x00)))
 (let ((?x590 (* (- 108) ?x759)))
 (let ((?x836 (* r00 r00 r00 x00)))
 (let ((?x755 (* (- 432) ?x836)))
 (let ((?x476 (* r00 x00)))
 (let ((?x333 (* 108 ?x476)))
 (let ((?x1081 (+ (* 216 (* r00 s00 x00)) ?x333 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x755 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x590 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1099 (* (- 108) (* x s)) ?x662 ?x485 (* (- 108) (* r00 x)) ?x137 ?x816 ?x919 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1074)))
 (let (($x1087 (= ?x1081 0)))
 (let ((?x935 (* 15 ?x545)))
 (let ((?x831 (* r00 r00 x00)))
 (let ((?x1287 (* 36 ?x831)))
 (let ((?x664 (* (- 6) ?x759)))
 (let ((?x1594 (* 54 ?x476)))
 (let ((?x1525 (+ (* 24 (* s r)) ?x1594 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x664 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x662 ?x1287 ?x935 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x816 (* 54 (* x00 r)) ?x919 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x453 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x802 (* 4 ?x545)))
 (let ((?x996 (* 18 ?x476)))
 (let ((?x854 (+ (* 9 (* s r)) ?x996 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1458) ?x802 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x965) (* 18 (* x00 r)) ?x453 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x423 (* r00 r00 r00)))
 (let ((?x424 (* 12 ?x423)))
 (let ((?x455 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x454 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x749 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x453 ?x454 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x455 ?x424)))
 (let (($x729 (= (+ s00 ?x234 (* 3 (* r r)) ?x269) 0)))
 (let (($x1281 (and $x729 (= ?x749 0) (= ?x854 0) (= ?x1525 0) $x1087 $x927)))
 (let ((?x143 (* 9 s)))
 (let ((?x941 (* (- 9) s00)))
 (let ((?x870 (* (- 15) ?x545)))
 (let ((?x844 (* (- 36) ?x831)))
 (let ((?x760 (* 6 ?x759)))
 (let ((?x499 (* s s)))
 (let ((?x523 (* 3 ?x499)))
 (let ((?x505 (* (- 54) ?x476)))
 (let ((?x1016 (+ (* (- 24) (* s r)) ?x505 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x523 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x760 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1458) ?x844 ?x870 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x941 (* 36 ?x965) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x332 (* (- 3) s00)))
 (let ((?x558 (* (- 4) ?x545)))
 (let ((?x500 (* 2 ?x499)))
 (let ((?x490 (* (- 18) ?x476)))
 (let ((?x852 (+ (* (- 9) (* s r)) ?x490 (* 9 (* r00 s00)) ?x500 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1458) ?x558 (* 18 (* r00 x)) ?x332 (* 6 ?x965) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x303 (* (- 3) r)))
 (let ((?x1289 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x303 ?x332 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x423))))
 (let (($x644 (and $x729 (= ?x1289 0) (= ?x852 0) (= ?x1016 0) $x1087 $x927)))
 (rewrite (= $x644 $x1281)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x231 (exists ((r Int) (s Int) (x Int) )(! (let ((?x219 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x225 (+ (- (* ?x215 ?x215 ?x215 ?x212 ?x212 ?x219 ?x219) (* ?x212 ?x212 ?x219)) (* ?x215 ?x215 ?x212 ?x212 ?x212 ?x219 ?x219) (* ?x215 ?x212 ?x212 ?x212 ?x219 ?x219))))
 (let ((?x226 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) ?x225)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x226 0)))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1351 (lambda ((r Int) (s Int) (x Int) )(let ((?x255 (* r00 r00)))
 (let ((?x269 (* (- 3) ?x255)))
 (let ((?x234 (* (- 1) s)))
 (let ((?x1122 (+ (- 3) s00 ?x234 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x269)))
 (let ((?x211 (* 6 r)))
 (let ((?x932 (+ 3 s ?x211)))
 (let ((?x514 (+ x ?x234)))
 (let ((?x1370 (+ 1 r)))
 (let ((?x1008 (+ (* ?x1370 ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932) (* (- 1) (* ?x514 ?x932 ?x932)) (* ?x1370 ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932) (* ?x1370 ?x514 ?x514 ?x932 ?x932 ?x932))))
 (let (($x927 (not (= (* ?x1008 ?x1122) 0))))
 (let ((?x1300 (* x00 x00)))
 (let ((?x1074 (* 108 ?x1300)))
 (let ((?x919 (* (- 9) s)))
 (let ((?x965 (* r00 r00 s00)))
 (let ((?x816 (* (- 36) ?x965)))
 (let ((?x137 (* 9 s00)))
 (let ((?x545 (* s00 s00)))
 (let ((?x485 (* 51 ?x545)))
 (let ((?x1458 (* r00 r00 s)))
 (let ((?x662 (* 36 ?x1458)))
 (let ((?x1138 (* s00 s00 s00)))
 (let ((?x1099 (* 16 ?x1138)))
 (let ((?x759 (* s00 x00)))
 (let ((?x590 (* (- 108) ?x759)))
 (let ((?x836 (* r00 r00 r00 x00)))
 (let ((?x755 (* (- 432) ?x836)))
 (let ((?x476 (* r00 x00)))
 (let ((?x333 (* 108 ?x476)))
 (let ((?x1081 (+ (* 216 (* r00 s00 x00)) ?x333 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x755 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x590 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1099 (* (- 108) (* x s)) ?x662 ?x485 (* (- 108) (* r00 x)) ?x137 ?x816 ?x919 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1074)))
 (let (($x1087 (= ?x1081 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x941 (* (- 9) s00)))
 (let ((?x870 (* (- 15) ?x545)))
 (let ((?x831 (* r00 r00 x00)))
 (let ((?x844 (* (- 36) ?x831)))
 (let ((?x760 (* 6 ?x759)))
 (let ((?x499 (* s s)))
 (let ((?x523 (* 3 ?x499)))
 (let ((?x505 (* (- 54) ?x476)))
 (let ((?x1016 (+ (* (- 24) (* s r)) ?x505 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x523 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x760 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1458) ?x844 ?x870 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x941 (* 36 ?x965) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x332 (* (- 3) s00)))
 (let ((?x558 (* (- 4) ?x545)))
 (let ((?x500 (* 2 ?x499)))
 (let ((?x490 (* (- 18) ?x476)))
 (let ((?x852 (+ (* (- 9) (* s r)) ?x490 (* 9 (* r00 s00)) ?x500 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1458) ?x558 (* 18 (* r00 x)) ?x332 (* 6 ?x965) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x303 (* (- 3) r)))
 (let ((?x1289 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x303 ?x332 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x729 (= (+ s00 ?x234 (* 3 (* r r)) ?x269) 0)))
 (let (($x644 (and $x729 (= ?x1289 0) (= ?x852 0) (= ?x1016 0) $x1087 $x927)))
 (let ((?x219 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x225 (+ (- (* ?x215 ?x215 ?x215 ?x212 ?x212 ?x219 ?x219) (* ?x212 ?x212 ?x219)) (* ?x215 ?x215 ?x212 ?x212 ?x212 ?x219 ?x219) (* ?x215 ?x212 ?x212 ?x212 ?x219 ?x219))))
 (let ((?x226 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) ?x225)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x230 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x226 0))))))
 (rewrite (= $x230 $x644))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x232 (asserted $x231)))
 (let ((@x1566 (mp (mp @x232 (quant-intro (proof-bind ?x1351) (= $x231 $x945)) $x945) (rewrite (= $x945 $x945)) $x945)))
 (let ((@x387 (mp (mp @x1566 (quant-intro (proof-bind ?x1527) (= $x945 $x1519)) $x1519) (quant-intro (proof-bind ?x258) (= $x1519 $x257)) $x257)))
 (let ((@x1533 (mp (mp~ @x387 (sk (~ $x257 $x1357)) $x1357) (rewrite (= $x1357 $x1296)) $x1296)))
 (let ((@x747 (and-elim @x1533 $x1494)))
 (let ((@x443 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1494) $x1115)) @x747 $x1115)))
 (let (($x918 (>= ?x1497 0)))
 (let ((@x1292 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1494) $x918)) @x747 $x918)))
 (let (($x876 (not (<= ?x1295 0))))
 (let (($x903 (>= ?x1295 0)))
 (let ((@x1500 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1297 $x876 (not $x903))) (and-elim @x1533 $x1269) (or $x876 (not $x903)))))
 (let ((@x1522 (unit-resolution @x1500 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x903)) @x1292 @x443 false) $x903) $x876)))
 ((_ th-lemma arith farkas 1 1 1) @x1522 @x1292 @x443 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        9
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-num-rows            9
 :arith-pseudo-nonlinear    2
 :arith-tableau-max-columns 102
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                17
 :max-memory                3.94
 :memory                    3.32
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                1325641
 :num-checks                1
 :propagations              12
 :rlimit-count              7241
 :time                      0.01
 :total-time                0.02)
