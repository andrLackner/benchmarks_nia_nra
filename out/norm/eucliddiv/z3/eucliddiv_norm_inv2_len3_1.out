unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x80 (* y00 q00)))
 (let ((?x1537 (+ r00 ?x80 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x293 (<= ?x1537 0)))
 (let (($x1533 (= ?x1537 0)))
 (let ((?x1007 (* (- 3) (* y00 y00 y00 y00 y00 y00 r!1 q!2 q!2 q!2))))
 (let ((?x640 (* 3 (* y00 y00 y00 y00 y00 r!1 r!1 q!2 q!2 q!2))))
 (let ((?x1042 (* (- 1) (* y00 y00 y00 y00 r!1 r!1 r!1 q!2 q!2 q!2))))
 (let ((?x1868 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x1871 (* (- 1) ?x1868)))
 (let ((?x1298 (* y00 y00 q00)))
 (let ((?x2050 (* 2 ?x1298)))
 (let ((?x1216 (* y00 r00)))
 (let ((?x2043 (* 2 ?x1216)))
 (let ((?x1319 (* (- 1) (* y00 y00 y00 y00 y00 y00 y00 q00 q!2 q!2))))
 (let ((?x1956 (* 3 (* y00 y00 y00 y00 y00 y00 q00 r!1 q!2 q!2))))
 (let ((?x1642 (* (- 3) (* y00 y00 y00 y00 y00 q00 r!1 r!1 q!2 q!2))))
 (let ((?x1778 (+ (* 3 (* y00 y00 y00 y00 r!1 r!1 r!1)) (* 5 (* y00 y00 y00 y00 r!1 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 y00 y00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 y00 r00 q!2 q!2)) (* y00 y00 y00 y00 q00 r!1 r!1 r!1 q!2 q!2) ?x1642 (* (- 1) (* r00 r!1 q!2 q!2 q!2)) (* (- 6) (* y00 y00 y00 y00 y00 q00 r!1 r!1 q!2)) (* 6 (* y00 y00 y00 y00 y00 y00 q00 r!1 q!2)) (* y00 y00 y00 y00 y00 y00 r!1) (* (- 5) (* y00 y00 y00 y00 y00 y00 r!1 q!2 q!2)) (* 4 (* y00 y00 q00 q!2 q!2)) (* (- 1) (* y00 q00 r!1 q!2 q!2 q!2)) (* (- 5) (* y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1 r!1 r!1)) (* 3 (* y00 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 y00 r!1 q!2)) (* (- 2) (* y00 y00 q!2)) ?x1956 (* (- 4) (* y00 q00 r!1 q!2 q!2)) (* 5 (* y00 y00 q00 q!2)) (* y00 y00 q00 q!2 q!2 q!2) (* y00 r00 q!2 q!2 q!2) (* 5 (* r!1 r!1 q!2)) (* (- 2) (* y00 y00 y00 y00 y00 y00 y00 q00 q!2)) (* 6 (* y00 y00 y00 y00 y00 r00 r!1 q!2)) (* 3 (* y00 y00 y00 y00 y00 y00 q00 r!1)) (* y00 y00 y00 r00 r!1 r!1 r!1) (* 2 (* y00 y00 y00 r00 r!1 r!1 r!1 q!2)) (* y00 y00 y00 r00 r!1 r!1 r!1 q!2 q!2) (* (- 3) (* y00 y00 y00 y00 r00 r!1 r!1)) (* 4 (* r!1 r!1 q!2 q!2)) (* y00 r!1 q!2 q!2 q!2 q!2) (* y00 y00 y00 y00 r!1 r!1 r!1 q!2 q!2) ?x1319 ?x2043 (* (- 2) (* y00 r!1)) ?x2050 (* (- 1) (* y00 y00 y00 y00 y00 y00 y00 q00)) (* (- 3) (* y00 y00 y00 y00 y00 q00 r!1 r!1)) (* y00 r!1 q!2 q!2) (* (- 5) (* y00 q00 r!1 q!2)) (* (- 3) (* y00 r!1 q!2)) (* r!1 r!1 q!2 q!2 q!2) ?x1871 (* (- 3) (* y00 y00 y00 y00 y00 r!1 r!1)) (* (- 6) (* y00 y00 y00 y00 r00 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 y00 r00 r!1 r!1 q!2 q!2)) (* 3 (* y00 y00 y00 y00 y00 r00 r!1)) (* 3 (* y00 y00 y00 y00 y00 r00 r!1 q!2 q!2)) (* (- 2) (* y00 y00 y00 y00 y00 y00 r00 q!2)) (* 2 (* r!1 r!1)) (* y00 y00 y00 y00 q00 r!1 r!1 r!1) (* (- 4) (* y00 y00 q!2 q!2 q!2)) (* 2 (* y00 y00 y00 y00 q00 r!1 r!1 r!1 q!2)) (* y00 y00 y00 y00 y00 y00 y00 q!2 q!2 q!2) (* (- 2) (* r00 r!1)) (* (- 5) (* r00 r!1 q!2)) (* (- 2) (* y00 y00 y00 r!1 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 q!2 q!2 q!2 q!2)) ?x1042 ?x640 ?x1007 (* (- 4) (* r00 r!1 q!2 q!2)) (* 5 (* y00 r00 q!2)) (* 4 (* y00 r00 q!2 q!2)) (* (- 2) (* y00 q00 r!1)) (* y00 y00 y00 y00 y00 y00 y00 q!2) (* 2 (* y00 y00 y00 y00 y00 y00 y00 q!2 q!2)) (* 3 (* y00 y00 y00 y00 y00 r!1 r!1 q!2 q!2)))))
 (let (($x1782 (= ?x1778 0)))
 (let (($x1277 (not $x1782)))
 (let ((?x1612 (+ y00 (* (- 1) y!0))))
 (let (($x762 (= ?x1612 0)))
 (let (($x2759 (and $x762 $x1533 $x1277)))
 (let ((?x1950 (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00 y00 q00))))
 (let ((?x1354 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x2805 (* (- 2) ?x1298)))
 (let ((?x2799 (* (- 2) ?x1216)))
 (let ((?x2074 (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00 y00 y00 y00))))
 (let ((?x2072 (* 3 (* q!2 q!2 q!2 r!1 y00 y00 y00 y00 y00 y00))))
 (let ((?x2071 (* (- 3) (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00 y00 y00))))
 (let ((?x2011 (* (- 3) (* q!2 q!2 r!1 y00 y00 y00 y00 y00 y00 q00))))
 (let ((?x1788 (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00 y00 q00))))
 (let ((?x2139 (+ ?x1788 (* r!1 r!1 r!1 r!1 y00 y00 y00) (* 2 (* q!2 r!1 r!1 r!1 r!1 y00 y00 y00)) (* q!2 q!2 r!1 r!1 r!1 r!1 y00 y00 y00) (* (- 3) (* r!1 r!1 r!1 y00 y00 y00 y00)) (* (- 5) (* q!2 r!1 r!1 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00 y00)) (* 3 (* r!1 r!1 y00 y00 y00 y00 y00)) (* 3 (* q!2 r!1 r!1 y00 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00 y00 y00)) (* q!2 r!1 y00 y00 y00 y00 y00 y00) (* 5 (* q!2 q!2 r!1 y00 y00 y00 y00 y00 y00)) ?x2011 (* (- 1) (* q!2 y00 y00 y00 y00 y00 y00 y00)) (* (- 2) (* q!2 q!2 y00 y00 y00 y00 y00 y00 y00)) (* 2 (* r!1 y00)) (* 3 (* q!2 r!1 y00)) (* (- 1) (* q!2 q!2 r!1 y00)) (* (- 3) (* q!2 q!2 q!2 r!1 y00)) (* (- 1) (* q!2 q!2 q!2 q!2 r!1 y00)) (* 2 (* q!2 y00 y00)) (* 5 (* q!2 q!2 y00 y00)) (* 4 (* q!2 q!2 q!2 y00 y00)) (* (- 1) (* r!1 r!1 r!1 y00 y00 y00 y00 q00)) (* q!2 q!2 q!2 q!2 y00 y00) (* (- 2) (* q!2 r!1 r!1 r!1 y00 y00 y00 y00 q00)) (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00 y00 y00) ?x2071 ?x2072 ?x2074 (* 2 (* r!1 r00)) (* 5 (* q!2 r!1 r00)) (* 4 (* q!2 q!2 r!1 r00)) ?x2799 (* (- 5) (* q!2 y00 r00)) (* (- 4) (* q!2 q!2 y00 r00)) (* 2 (* r!1 y00 q00)) (* 5 (* q!2 r!1 y00 q00)) (* 4 (* q!2 q!2 r!1 y00 q00)) (* q!2 q!2 q!2 r!1 y00 q00) ?x2805 (* (- 5) (* q!2 y00 y00 q00)) (* (- 4) (* q!2 q!2 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 q00)) ?x1354 (* (- 2) (* r!1 r!1)) (* (- 5) (* q!2 r!1 r!1)) (* (- 4) (* q!2 q!2 r!1 r!1)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1)) (* q!2 q!2 y00 y00 y00 y00 y00 y00 y00 q00) (* 2 (* q!2 y00 y00 y00 y00 y00 y00 y00 q00)) (* (- 3) (* r!1 y00 y00 y00 y00 y00 y00 q00)) (* (- 1) (* r!1 r!1 r!1 y00 y00 y00 r00)) (* (- 2) (* q!2 r!1 r!1 r!1 y00 y00 y00 r00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00 y00 y00 r00)) (* 3 (* r!1 r!1 y00 y00 y00 y00 r00)) (* 6 (* q!2 r!1 r!1 y00 y00 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00 y00 r00)) (* (- 3) (* r!1 y00 y00 y00 y00 y00 r00)) (* (- 6) (* q!2 r!1 y00 y00 y00 y00 y00 r00)) (* (- 3) (* q!2 q!2 r!1 y00 y00 y00 y00 y00 r00)) ?x1868 (* 2 (* q!2 y00 y00 y00 y00 y00 y00 r00)) (* q!2 q!2 y00 y00 y00 y00 y00 y00 r00) ?x1950 (* 3 (* r!1 r!1 y00 y00 y00 y00 y00 q00)) (* q!2 q!2 q!2 r!1 r00) (* 6 (* q!2 r!1 r!1 y00 y00 y00 y00 y00 q00)) (* (- 6) (* q!2 r!1 y00 y00 y00 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 r00)))))
 (let (($x2575 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x80)) 0) (not (= ?x2139 0)))))
 (let (($x2835 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1941 (* q q q r r00)))
 (let ((?x2824 (* (- 1) (* q q r r r y00 y00 y00 y00 q00))))
 (let ((?x1892 (* q q y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x1868 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x1354 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1298 (* y00 y00 q00)))
 (let ((?x2805 (* (- 2) ?x1298)))
 (let ((?x1291 (* q q q r y00 q00)))
 (let ((?x1216 (* y00 r00)))
 (let ((?x2799 (* (- 2) ?x1216)))
 (let ((?x1079 (* q q q y00 y00 y00 y00 y00 y00 y00)))
 (let ((?x984 (* q q q r y00 y00 y00 y00 y00 y00)))
 (let ((?x896 (* q q q r r y00 y00 y00 y00 y00)))
 (let ((?x787 (* q q q r r r y00 y00 y00 y00)))
 (let ((?x715 (* q q q q y00 y00)))
 (let ((?x2787 (* (- 3) (* q q r y00 y00 y00 y00 y00 y00 q00))))
 (let ((?x420 (* q r y00 y00 y00 y00 y00 y00)))
 (let ((?x176 (* q q r r r r y00 y00 y00)))
 (let ((?x173 (* r r r r y00 y00 y00)))
 (let ((?x2781 (* 3 (* q q r r y00 y00 y00 y00 y00 q00))))
 (let ((?x2828 (+ ?x2781 ?x173 (* 2 (* q r r r r y00 y00 y00)) ?x176 (* (- 3) (* r r r y00 y00 y00 y00)) (* (- 5) (* q r r r y00 y00 y00 y00)) (* (- 1) (* q q r r r y00 y00 y00 y00)) (* 3 (* r r y00 y00 y00 y00 y00)) (* 3 (* q r r y00 y00 y00 y00 y00)) (* (- 3) (* q q r r y00 y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 y00 y00)) ?x420 (* 5 (* q q r y00 y00 y00 y00 y00 y00)) ?x2787 (* (- 1) (* q y00 y00 y00 y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00 y00 y00 y00)) (* 2 (* r y00)) (* 3 (* q r y00)) (* (- 1) (* q q r y00)) (* (- 3) (* q q q r y00)) (* (- 1) (* q q q q r y00)) (* 2 (* q y00 y00)) (* 5 (* q q y00 y00)) (* 4 (* q q q y00 y00)) (* (- 1) (* r r r y00 y00 y00 y00 q00)) ?x715 (* (- 2) (* q r r r y00 y00 y00 y00 q00)) ?x787 (* (- 3) ?x896) (* 3 ?x984) (* (- 1) ?x1079) (* 2 (* r r00)) (* 5 (* q r r00)) (* 4 (* q q r r00)) ?x2799 (* (- 5) (* q y00 r00)) (* (- 4) (* q q y00 r00)) (* 2 (* r y00 q00)) (* 5 (* q r y00 q00)) (* 4 (* q q r y00 q00)) ?x1291 ?x2805 (* (- 5) (* q y00 y00 q00)) (* (- 4) (* q q y00 y00 q00)) (* (- 1) (* q q q y00 y00 q00)) ?x1354 (* (- 2) (* r r)) (* (- 5) (* q r r)) (* (- 4) (* q q r r)) (* (- 1) (* q q q r r)) (* q q y00 y00 y00 y00 y00 y00 y00 q00) (* 2 (* q y00 y00 y00 y00 y00 y00 y00 q00)) (* (- 3) (* r y00 y00 y00 y00 y00 y00 q00)) (* (- 1) (* r r r y00 y00 y00 r00)) (* (- 2) (* q r r r y00 y00 y00 r00)) (* (- 1) (* q q r r r y00 y00 y00 r00)) (* 3 (* r r y00 y00 y00 y00 r00)) (* 6 (* q r r y00 y00 y00 y00 r00)) (* 3 (* q q r r y00 y00 y00 y00 r00)) (* (- 3) (* r y00 y00 y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 y00 y00 r00)) (* (- 3) (* q q r y00 y00 y00 y00 y00 r00)) ?x1868 (* 2 (* q y00 y00 y00 y00 y00 y00 r00)) ?x1892 ?x2824 (* 3 (* r r y00 y00 y00 y00 y00 q00)) ?x1941 (* 6 (* q r r y00 y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 y00 y00 q00)) (* (- 1) (* q q q y00 r00)))))
 (let (($x109 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x86 (= (+ y (* (- 1) y00)) 0)))
 (and $x86 $x109 (not (= ?x2828 0)))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x655 (exists ((q Int) (r Int) (y Int) )(! (let ((?x75 (* (- 1) y00)))
 (let ((?x658 (+ r ?x75)))
 (let ((?x656 (+ 1 q)))
 (let ((?x1217 (* r00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x1112 (* r00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x1971 (* ?x656 ?x656 ?x658 ?x658)))
 (let ((?x1933 (* ?x656 ?x656 ?x656 ?x658 ?x658)))
 (let ((?x704 (* y00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x634 (* y00 ?x656 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x665 (* q00 y00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x663 (+ ?x665 (* (- 1) (* y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658 ?x658)) ?x634 (* (- 1) (* y00 y00 y00 y00 ?x656 ?x656 ?x656 ?x658 ?x658 ?x658)) ?x704 (* (- 1) (* r00 ?x656 ?x656 ?x658)) (* (- 1) (* q00 y00 ?x656 ?x656 ?x656 ?x658)) ?x1933 ?x1971 (* (- 1) (* q00 y00 ?x656 ?x656 ?x658)) ?x1112 (* (- 1) ?x1217))))
 (let (($x674 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x674 (not (= ?x663 0))))))))))))))) :qid k!29))
 ))
 (let ((?x2837 (lambda ((q Int) (r Int) (y Int) )(let ((?x1941 (* q q q r r00)))
 (let ((?x2824 (* (- 1) (* q q r r r y00 y00 y00 y00 q00))))
 (let ((?x1892 (* q q y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x1868 (* y00 y00 y00 y00 y00 y00 r00)))
 (let ((?x1354 (* y00 y00 y00 y00 y00 y00 y00 q00)))
 (let ((?x1298 (* y00 y00 q00)))
 (let ((?x2805 (* (- 2) ?x1298)))
 (let ((?x1291 (* q q q r y00 q00)))
 (let ((?x1216 (* y00 r00)))
 (let ((?x2799 (* (- 2) ?x1216)))
 (let ((?x1079 (* q q q y00 y00 y00 y00 y00 y00 y00)))
 (let ((?x984 (* q q q r y00 y00 y00 y00 y00 y00)))
 (let ((?x896 (* q q q r r y00 y00 y00 y00 y00)))
 (let ((?x787 (* q q q r r r y00 y00 y00 y00)))
 (let ((?x715 (* q q q q y00 y00)))
 (let ((?x2787 (* (- 3) (* q q r y00 y00 y00 y00 y00 y00 q00))))
 (let ((?x420 (* q r y00 y00 y00 y00 y00 y00)))
 (let ((?x176 (* q q r r r r y00 y00 y00)))
 (let ((?x173 (* r r r r y00 y00 y00)))
 (let ((?x2781 (* 3 (* q q r r y00 y00 y00 y00 y00 q00))))
 (let ((?x2828 (+ ?x2781 ?x173 (* 2 (* q r r r r y00 y00 y00)) ?x176 (* (- 3) (* r r r y00 y00 y00 y00)) (* (- 5) (* q r r r y00 y00 y00 y00)) (* (- 1) (* q q r r r y00 y00 y00 y00)) (* 3 (* r r y00 y00 y00 y00 y00)) (* 3 (* q r r y00 y00 y00 y00 y00)) (* (- 3) (* q q r r y00 y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 y00 y00)) ?x420 (* 5 (* q q r y00 y00 y00 y00 y00 y00)) ?x2787 (* (- 1) (* q y00 y00 y00 y00 y00 y00 y00)) (* (- 2) (* q q y00 y00 y00 y00 y00 y00 y00)) (* 2 (* r y00)) (* 3 (* q r y00)) (* (- 1) (* q q r y00)) (* (- 3) (* q q q r y00)) (* (- 1) (* q q q q r y00)) (* 2 (* q y00 y00)) (* 5 (* q q y00 y00)) (* 4 (* q q q y00 y00)) (* (- 1) (* r r r y00 y00 y00 y00 q00)) ?x715 (* (- 2) (* q r r r y00 y00 y00 y00 q00)) ?x787 (* (- 3) ?x896) (* 3 ?x984) (* (- 1) ?x1079) (* 2 (* r r00)) (* 5 (* q r r00)) (* 4 (* q q r r00)) ?x2799 (* (- 5) (* q y00 r00)) (* (- 4) (* q q y00 r00)) (* 2 (* r y00 q00)) (* 5 (* q r y00 q00)) (* 4 (* q q r y00 q00)) ?x1291 ?x2805 (* (- 5) (* q y00 y00 q00)) (* (- 4) (* q q y00 y00 q00)) (* (- 1) (* q q q y00 y00 q00)) ?x1354 (* (- 2) (* r r)) (* (- 5) (* q r r)) (* (- 4) (* q q r r)) (* (- 1) (* q q q r r)) (* q q y00 y00 y00 y00 y00 y00 y00 q00) (* 2 (* q y00 y00 y00 y00 y00 y00 y00 q00)) (* (- 3) (* r y00 y00 y00 y00 y00 y00 q00)) (* (- 1) (* r r r y00 y00 y00 r00)) (* (- 2) (* q r r r y00 y00 y00 r00)) (* (- 1) (* q q r r r y00 y00 y00 r00)) (* 3 (* r r y00 y00 y00 y00 r00)) (* 6 (* q r r y00 y00 y00 y00 r00)) (* 3 (* q q r r y00 y00 y00 y00 r00)) (* (- 3) (* r y00 y00 y00 y00 y00 r00)) (* (- 6) (* q r y00 y00 y00 y00 y00 r00)) (* (- 3) (* q q r y00 y00 y00 y00 y00 r00)) ?x1868 (* 2 (* q y00 y00 y00 y00 y00 y00 r00)) ?x1892 ?x2824 (* 3 (* r r y00 y00 y00 y00 y00 q00)) ?x1941 (* 6 (* q r r y00 y00 y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 y00 y00 y00 q00)) (* (- 1) (* q q q y00 r00)))))
 (let (($x109 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x86 (= (+ y (* (- 1) y00)) 0)))
 (let (($x234 (and $x86 $x109 (not (= ?x2828 0)))))
 (let ((?x75 (* (- 1) y00)))
 (let ((?x658 (+ r ?x75)))
 (let ((?x656 (+ 1 q)))
 (let ((?x1217 (* r00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x1112 (* r00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x1971 (* ?x656 ?x656 ?x658 ?x658)))
 (let ((?x1933 (* ?x656 ?x656 ?x656 ?x658 ?x658)))
 (let ((?x704 (* y00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x634 (* y00 ?x656 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x665 (* q00 y00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x663 (+ ?x665 (* (- 1) (* y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658 ?x658)) ?x634 (* (- 1) (* y00 y00 y00 y00 ?x656 ?x656 ?x656 ?x658 ?x658 ?x658)) ?x704 (* (- 1) (* r00 ?x656 ?x656 ?x658)) (* (- 1) (* q00 y00 ?x656 ?x656 ?x656 ?x658)) ?x1933 ?x1971 (* (- 1) (* q00 y00 ?x656 ?x656 ?x658)) ?x1112 (* (- 1) ?x1217))))
 (let (($x674 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x664 (and (= (+ y00 (* (- 1) y)) 0) $x674 (not (= ?x663 0)))))
 (rewrite (= $x664 $x234))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x683 (exists ((q Int) (r Int) (y Int) )(! (let ((?x75 (* (- 1) y00)))
 (let ((?x658 (+ r ?x75)))
 (let ((?x656 (+ 1 q)))
 (let ((?x1217 (* r00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x136 (* q00 y00 ?x656 ?x656 ?x658)))
 (let ((?x732 (* q00 y00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x721 (* r00 ?x656 ?x656 ?x658)))
 (let ((?x692 (* y00 y00 y00 y00 ?x656 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x675 (* y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658 ?x658)))
 (let ((?x665 (* q00 y00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x1643 (+ (* (- 1) ?x665) ?x675 (* (- 1) (* y00 ?x656 ?x656 ?x656 ?x656 ?x658)) ?x692 (* (- 1) (* y00 ?x656 ?x656 ?x656 ?x658)) ?x721 ?x732 (* (- 1) (* ?x656 ?x656 ?x656 ?x658 ?x658)) (* (- 1) (* ?x656 ?x656 ?x658 ?x658)) ?x136 (* (- 1) (* r00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)) ?x1217)))
 (let (($x674 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x75 y) 0) $x674 (not (= ?x1643 0))))))))))))))) :qid k!29))
 ))
 (let ((?x1928 (lambda ((q Int) (r Int) (y Int) )(let ((?x75 (* (- 1) y00)))
 (let ((?x658 (+ r ?x75)))
 (let ((?x656 (+ 1 q)))
 (let ((?x1217 (* r00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x1112 (* r00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x1971 (* ?x656 ?x656 ?x658 ?x658)))
 (let ((?x1933 (* ?x656 ?x656 ?x656 ?x658 ?x658)))
 (let ((?x704 (* y00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x634 (* y00 ?x656 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x665 (* q00 y00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x663 (+ ?x665 (* (- 1) (* y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658 ?x658)) ?x634 (* (- 1) (* y00 y00 y00 y00 ?x656 ?x656 ?x656 ?x658 ?x658 ?x658)) ?x704 (* (- 1) (* r00 ?x656 ?x656 ?x658)) (* (- 1) (* q00 y00 ?x656 ?x656 ?x656 ?x658)) ?x1933 ?x1971 (* (- 1) (* q00 y00 ?x656 ?x656 ?x658)) ?x1112 (* (- 1) ?x1217))))
 (let (($x674 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x664 (and (= (+ y00 (* (- 1) y)) 0) $x674 (not (= ?x663 0)))))
 (let ((?x136 (* q00 y00 ?x656 ?x656 ?x658)))
 (let ((?x732 (* q00 y00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x721 (* r00 ?x656 ?x656 ?x658)))
 (let ((?x692 (* y00 y00 y00 y00 ?x656 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x675 (* y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658 ?x658)))
 (let ((?x1643 (+ (* (- 1) ?x665) ?x675 (* (- 1) ?x634) ?x692 (* (- 1) ?x704) ?x721 ?x732 (* (- 1) ?x1933) (* (- 1) ?x1971) ?x136 (* (- 1) ?x1112) ?x1217)))
 (let (($x661 (and (= (+ ?x75 y) 0) $x674 (not (= ?x1643 0)))))
 (rewrite (= $x661 $x664)))))))))))))))))))))))
 ))
 (let (($x70 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x28 (- 1)))
 (let ((?x46 (+ (* ?x28 ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00 y00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 y00 y00 y00))))
 (let ((?x50 (+ (- ?x46 (* ?x42 ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00 y00 y00))))
 (let ((?x55 (+ (- ?x50 (* ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 ?x42 ?x43 r00) (* ?x42 ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x61 (+ (- (- ?x55 (* ?x42 ?x42 ?x42 ?x43 ?x43)) (* ?x42 ?x42 ?x43 ?x43)) (* ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x65 (+ (- ?x61 (* ?x42 ?x42 ?x43 ?x43 ?x43 r00 y00 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 r00))))
 (and (= (+ (* ?x28 y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x65 0)))))))))))) :qid k!29))
 ))
 (let ((?x629 (lambda ((q Int) (r Int) (y Int) )(let ((?x75 (* (- 1) y00)))
 (let ((?x658 (+ r ?x75)))
 (let ((?x656 (+ 1 q)))
 (let ((?x1217 (* r00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x136 (* q00 y00 ?x656 ?x656 ?x658)))
 (let ((?x732 (* q00 y00 ?x656 ?x656 ?x656 ?x658)))
 (let ((?x721 (* r00 ?x656 ?x656 ?x658)))
 (let ((?x692 (* y00 y00 y00 y00 ?x656 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x675 (* y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658 ?x658)))
 (let ((?x665 (* q00 y00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)))
 (let ((?x1643 (+ (* (- 1) ?x665) ?x675 (* (- 1) (* y00 ?x656 ?x656 ?x656 ?x656 ?x658)) ?x692 (* (- 1) (* y00 ?x656 ?x656 ?x656 ?x658)) ?x721 ?x732 (* (- 1) (* ?x656 ?x656 ?x656 ?x658 ?x658)) (* (- 1) (* ?x656 ?x656 ?x658 ?x658)) ?x136 (* (- 1) (* r00 y00 y00 y00 ?x656 ?x656 ?x658 ?x658 ?x658)) ?x1217)))
 (let (($x674 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x661 (and (= (+ ?x75 y) 0) $x674 (not (= ?x1643 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x28 (- 1)))
 (let ((?x46 (+ (* ?x28 ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00 y00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43 y00 y00 y00))))
 (let ((?x50 (+ (- ?x46 (* ?x42 ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00 y00 y00 y00))))
 (let ((?x55 (+ (- ?x50 (* ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 ?x42 ?x43 r00) (* ?x42 ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x61 (+ (- (- ?x55 (* ?x42 ?x42 ?x42 ?x43 ?x43)) (* ?x42 ?x42 ?x43 ?x43)) (* ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x65 (+ (- ?x61 (* ?x42 ?x42 ?x43 ?x43 ?x43 r00 y00 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 r00))))
 (let (($x69 (and (= (+ (* ?x28 y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x65 0))))))
 (rewrite (= $x69 $x661)))))))))))))))))))))))))
 ))
 (let ((@x71 (asserted $x70)))
 (let ((@x710 (mp (mp @x71 (quant-intro (proof-bind ?x629) (= $x70 $x683)) $x683) (rewrite (= $x683 $x683)) $x683)))
 (let ((@x1276 (mp (mp @x710 (quant-intro (proof-bind ?x1928) (= $x683 $x655)) $x655) (quant-intro (proof-bind ?x2837) (= $x655 $x2835)) $x2835)))
 (let ((@x1272 (mp (mp~ @x1276 (sk (~ $x2835 $x2575)) $x2575) (rewrite (= $x2575 $x2759)) $x2759)))
 (let ((@x2250 (and-elim @x1272 $x1533)))
 (let ((@x148 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1533) $x293)) @x2250 $x293)))
 (let (($x298 (>= ?x1537 0)))
 (let ((@x2182 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1533) $x298)) @x2250 $x298)))
 (let (($x1659 (<= ?x1612 0)))
 (let ((@x381 (and-elim @x1272 $x762)))
 (let ((@x2432 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x762) $x1659)) @x381 $x1659)))
 (let (($x1722 (>= ?x1612 0)))
 (let ((@x1500 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x762) $x1722)) @x381 $x1722)))
 (let (($x564 (not (<= ?x1778 0))))
 (let (($x1472 (>= ?x1778 0)))
 (let ((@x1584 (lemma ((_ th-lemma arith) (hypothesis (not $x1472)) @x1500 @x2432 @x2182 @x148 false) $x1472)))
 (let ((@x1032 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1782 $x564 (not $x1472))) (and-elim @x1272 $x1277) (or $x564 (not $x1472)))))
 ((_ th-lemma arith) (unit-resolution @x1032 @x1584 $x564) @x1500 @x2432 @x2182 @x148 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        12
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             616
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              3
 :arith-tableau-max-columns 94
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.87
 :memory                    3.34
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1330374
 :num-checks                1
 :propagations              6
 :rlimit-count              9726
 :time                      0.01
 :total-time                0.02)
