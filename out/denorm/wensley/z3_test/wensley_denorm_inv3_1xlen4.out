unsat
((set-logic NRA)
(declare-fun b!7 () Real)
(declare-fun d!6 () Real)
(declare-fun y!5 () Real)
(declare-fun a!8 () Real)
(proof
(let ((?x723 (* a!8 d!6)))
 (let ((?x670 (+ ?x723 (* (- 2.0) (* b!7 y!5)) (* (- 1.0) (* a00 d!6)) (* 2.0 (* y00 b!7)))))
 (let (($x639 (>= ?x670 0.0)))
 (let (($x651 (= 0.0 ?x670)))
 (let ((@x896 (symm (commutativity (= $x651 (= ?x670 0.0))) (= (= ?x670 0.0) $x651))))
 (let (($x686 (= ?x670 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x491 (= (+ ?x30 ?x94 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let ((?x564 (* (/ 3.0 16.0) (* b!7 b!7 b!7 b!7 a!8 d!6 d!6))))
 (let ((?x527 (* (/ 3.0 64.0) (* b!7 b!7 a!8 d!6 d!6 d!6 d!6 y!5 y!5))))
 (let ((?x912 (* (/ 1.0 32.0) (* b!7 b!7 a!8 d!6 d!6 d!6 y!5 y!5 y!5))))
 (let ((?x776 (* (/ 1.0 4.0) (* b!7 b!7 b!7 b!7 b!7 y!5 y!5))))
 (let ((?x1026 (* (/ 1.0 4.0) (* b!7 b!7 a!8 a!8 a!8 y!5 y!5))))
 (let ((?x318 (* (/ 3.0 4.0) (* b!7 b!7 b!7 a!8 a!8 y!5 y!5))))
 (let ((?x613 (* (/ 3.0 4.0) (* b!7 b!7 b!7 b!7 a!8 y!5 y!5))))
 (let ((?x267 (* (/ 3.0 128.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 y!5))))
 (let ((?x710 (* (/ 3.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 y!5 y!5))))
 (let ((?x424 (* (/ 1.0 32.0) (* b!7 b!7 b!7 d!6 d!6 d!6 y!5 y!5 y!5))))
 (let ((?x687 (* (/ 1.0 16.0) (* b!7 b!7 b!7 a!8 d!6 d!6 d!6))))
 (let ((?x680 (* (/ 1.0 32.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x492 (* (/ 3.0 4.0) (* b!7 b!7 b!7 b!7 a!8 d!6 y!5))))
 (let ((?x1078 (* (/ 1.0 32.0) (* b!7 b!7 a!8 a!8 d!6 d!6 d!6))))
 (let ((?x565 (* (/ 1.0 16.0) (* b!7 b!7 a!8 a!8 a!8 d!6 d!6))))
 (let ((?x890 (* (/ 1.0 256.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x907 (* (/ 3.0 128.0) (* b!7 b!7 a!8 d!6 d!6 d!6 d!6 d!6 y!5))))
 (let ((?x634 (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 b!7 d!6 d!6))))
 (let ((?x1075 (* (- (/ 1.0 2.0)) (* d!6 d!6 y!5))))
 (let ((?x276 (* (/ 1.0 4.0) (* b!7 b!7 b!7 b!7 b!7 d!6 y!5))))
 (let ((?x893 (* (/ 1.0 256.0) (* b!7 b!7 a!8 d!6 d!6 d!6 d!6 d!6 d!6))))
 (let ((?x373 (* (/ 1.0 4.0) (* b!7 b!7 a!8 a!8 a!8 d!6 y!5))))
 (let ((?x203 (* (/ 3.0 4.0) (* b!7 b!7 b!7 a!8 a!8 d!6 y!5))))
 (let ((?x643 (* (/ 3.0 16.0) (* b!7 b!7 b!7 a!8 a!8 d!6 d!6))))
 (let ((?x183 (* (- (/ 1.0 8.0)) (* d!6 d!6 d!6))))
 (let ((?x530 (* (- (/ 1.0 2.0)) (* d!6 y!5 y!5))))
 (let ((?x506 (+ ?x530 ?x183 ?x643 ?x203 ?x373 ?x893 ?x276 ?x1075 ?x634 ?x907 ?x890 ?x565 ?x1078 ?x492 ?x680 ?x687 ?x424 ?x710 ?x267 ?x613 ?x318 ?x1026 ?x776 ?x912 ?x527 ?x564)))
 (let ((?x1022 (* y00 b!7)))
 (let ((?x939 (* a00 d!6)))
 (let ((?x334 (* (- (/ 1.0 2.0)) ?x939)))
 (let ((?x803 (* b!7 y!5)))
 (let ((?x789 (* (- 1.0) ?x803)))
 (let ((?x340 (* (/ 1.0 2.0) ?x723)))
 (let ((?x899 (* (+ ?x340 ?x789 ?x334 ?x1022) ?x506)))
 (let (($x140 (= ?x899 0.0)))
 (let (($x510 (not $x140)))
 (let ((?x713 (* a00 b!7 b!7 a!8 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x365 (* b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x323 (* b!7 b!7 b!7 a!8 d!6 d!6 d!6 y!5 y!5 y!5 y!5)))
 (let ((?x288 (* y00 b!7 b!7 b!7 a!8 d!6 d!6 d!6 y!5 y!5 y!5)))
 (let ((?x954 (+ (* (/ 1.0 2.0) (* y00 b!7 d!6 y!5 y!5)) (* (- (/ 1.0 4.0)) (* a00 d!6 d!6 y!5 y!5)) (* (/ 1.0 4.0) (* a!8 d!6 d!6 y!5 y!5)) (* (- (/ 1.0 32.0)) ?x288) (* (/ 1.0 64.0) (* a00 b!7 b!7 a!8 a!8 d!6 d!6 d!6 d!6)) (* (- (/ 1.0 2.0)) (* b!7 d!6 y!5 y!5 y!5)) (* (/ 1.0 32.0) ?x323) (* (- (/ 1.0 8.0)) (* b!7 b!7 a!8 a!8 a!8 a!8 d!6 y!5 y!5)) (* (- (/ 1.0 64.0)) ?x365) (* (/ 1.0 4.0) (* b!7 b!7 b!7 a!8 a!8 a!8 y!5 y!5 y!5)) (* (/ 1.0 8.0) (* a00 b!7 b!7 a!8 a!8 a!8 d!6 y!5 y!5)) (* (/ 1.0 64.0) ?x713) (* (- (/ 1.0 32.0)) (* y00 b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6)) (* (- (/ 1.0 64.0)) (* b!7 b!7 a!8 a!8 a!8 d!6 d!6 d!6 d!6)) (* (- (/ 1.0 4.0)) (* y00 b!7 b!7 b!7 a!8 a!8 a!8 y!5 y!5)) (* (/ 1.0 32.0) (* b!7 b!7 b!7 a!8 a!8 d!6 d!6 d!6 y!5)))))
 (let (($x716 (= ?x954 0.0)))
 (let (($x98 (not $x716)))
 (let (($x937 (or $x98 $x510)))
 (let (($x232 (and $x937 $x491 (= (+ (* d00 b!7) (* (- 1.0) (* b00 d!6))) 0.0) $x686)))
 (let ((?x453 (* d!6 a!8)))
 (let ((?x108 (+ ?x453 (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x487 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x94 (* 2.0 (* y!5 b00))) 0.0)))
 (let ((?x969 (+ (* (- (/ 1.0 2.0)) (* y!5 y!5 d!6)) (* (/ 1.0 4.0) (* y!5 y!5 b!7 b!7 a!8 a!8 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 2.0)) (* y!5 d!6 d!6)) ?x183 (* (/ 1.0 4.0) (* y!5 y!5 b!7 b!7 b!7 b!7 b!7)) (* (/ 3.0 4.0) (* y!5 y!5 b!7 b!7 b!7 b!7 a!8)) (* (/ 3.0 4.0) (* y!5 y!5 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 4.0) (* y!5 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 3.0 4.0) (* y!5 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 3.0 4.0) (* y!5 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 4.0) (* y!5 d!6 b!7 b!7 a!8 a!8 a!8)) (* (/ 1.0 16.0) (* d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 3.0 16.0) (* d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 16.0) (* d!6 d!6 b!7 b!7 a!8 a!8 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* d!6 d!6 d!6 b!7 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 64.0) (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 64.0) (* y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 128.0) (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 128.0) (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 256.0) (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 256.0) (* d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)))))
 (let ((?x309 (* b!7 y00)))
 (let ((?x488 (+ (* (/ 1.0 2.0) ?x453) (* (- 1.0) (* y!5 b!7)) ?x309 (* (- (/ 1.0 2.0)) (* d!6 a00)))))
 (let ((?x1027 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a00)))
 (let ((?x237 (* y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 y00)))
 (let ((?x660 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8)))
 (let ((?x628 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8)))
 (let ((?x433 (+ (* (/ 1.0 4.0) (* y!5 y!5 d!6 d!6 a!8)) (* (- (/ 1.0 2.0)) (* y!5 y!5 y!5 d!6 b!7)) (* (/ 1.0 2.0) (* y!5 y!5 d!6 b!7 y00)) (* (- (/ 1.0 4.0)) (* y!5 y!5 d!6 d!6 a00)) (* (- (/ 1.0 8.0)) (* y!5 y!5 d!6 b!7 b!7 a!8 a!8 a!8 a!8)) (* (/ 1.0 4.0) (* y!5 y!5 y!5 b!7 b!7 b!7 a!8 a!8 a!8)) (* (- (/ 1.0 4.0)) (* y!5 y!5 b!7 b!7 b!7 a!8 a!8 a!8 y00)) (* (/ 1.0 8.0) (* y!5 y!5 d!6 b!7 b!7 a!8 a!8 a!8 a00)) (* (- (/ 1.0 64.0)) (* d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 y00)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 a!8 a!8 a00)) (* (- (/ 1.0 64.0)) ?x628) (* (/ 1.0 32.0) ?x660) (* (- (/ 1.0 32.0)) ?x237) (* (/ 1.0 64.0) ?x1027))))
 (let (($x110 (and (or (not (= ?x433 0.0)) (not (= (* ?x488 ?x969) 0.0))) $x487 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x108 0.0))))
 (let (($x887 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x117 (* y b)))
 (let ((?x136 (* (- 2.0) ?x117)))
 (let ((?x111 (* d a)))
 (let (($x171 (= (+ ?x111 ?x136 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x97 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x126 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x94 (* 2.0 (* y b00))) 0.0)))
 (let ((?x296 (* (/ 1.0 32.0) (* y y y d d d b b a))))
 (let ((?x281 (* (/ 1.0 32.0) (* d d d b b a a))))
 (let ((?x265 (* (/ 1.0 4.0) (* y y b b a a a))))
 (let ((?x249 (* (- (/ 1.0 2.0)) (* y y d))))
 (let ((?x1115 (+ ?x249 ?x265 ?x281 ?x296 (* (- (/ 1.0 2.0)) (* y d d)) (* (- (/ 1.0 8.0)) (* d d d)) (* (/ 1.0 4.0) (* y y b b b b b)) (* (/ 3.0 4.0) (* y y b b b b a)) (* (/ 3.0 4.0) (* y y b b b a a)) (* (/ 1.0 4.0) (* y d b b b b b)) (* (/ 3.0 4.0) (* y d b b b b a)) (* (/ 3.0 4.0) (* y d b b b a a)) (* (/ 1.0 4.0) (* y d b b a a a)) (* (/ 1.0 16.0) (* d d b b b b b)) (* (/ 3.0 16.0) (* d d b b b b a)) (* (/ 3.0 16.0) (* d d b b b a a)) (* (/ 1.0 16.0) (* d d b b a a a)) (* (/ 1.0 32.0) (* d d d b b b b)) (* (/ 1.0 16.0) (* d d d b b b a)) (* (/ 1.0 32.0) (* y y y d d d b b b)) (* (/ 3.0 64.0) (* y y d d d d b b b)) (* (/ 3.0 64.0) (* y y d d d d b b a)) (* (/ 3.0 128.0) (* y d d d d d b b b)) (* (/ 3.0 128.0) (* y d d d d d b b a)) (* (/ 1.0 256.0) (* d d d d d d b b b)) (* (/ 1.0 256.0) (* d d d d d d b b a)))))
 (let ((?x141 (* b y00)))
 (let ((?x178 (* (- 1.0) ?x117)))
 (let ((?x145 (* (/ 1.0 2.0) ?x111)))
 (let (($x1130 (not (= (* (+ ?x145 ?x178 ?x141 (* (- (/ 1.0 2.0)) (* d a00))) ?x1115) 0.0))))
 (let ((?x397 (* (/ 1.0 64.0) (* y y y d d d d b b a a00))))
 (let ((?x412 (* (- (/ 1.0 32.0)) (* y y y d d d b b b a y00))))
 (let ((?x411 (* (/ 1.0 32.0) (* y y y y d d d b b b a))))
 (let ((?x409 (* (- (/ 1.0 64.0)) (* y y y d d d d b b a a))))
 (let ((?x398 (+ (* (/ 1.0 4.0) (* y y d d a)) (* (- (/ 1.0 2.0)) (* y y y d b)) (* (/ 1.0 2.0) (* y y d b y00)) (* (- (/ 1.0 4.0)) (* y y d d a00)) (* (- (/ 1.0 8.0)) (* y y d b b a a a a)) (* (/ 1.0 4.0) (* y y y b b b a a a)) (* (- (/ 1.0 4.0)) (* y y b b b a a a y00)) (* (/ 1.0 8.0) (* y y d b b a a a a00)) (* (- (/ 1.0 64.0)) (* d d d d b b a a a)) (* (/ 1.0 32.0) (* y d d d b b b a a)) (* (- (/ 1.0 32.0)) (* d d d b b b a a y00)) (* (/ 1.0 64.0) (* d d d d b b a a a00)) ?x409 ?x411 ?x412 ?x397)))
 (let (($x475 (or (not (= ?x398 0.0)) $x1130)))
 (and $x475 $x126 $x97 $x171)))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x1002 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x117 (* y b)))
 (let ((?x136 (* (- 2.0) ?x117)))
 (let ((?x111 (* d a)))
 (let (($x935 (= (+ ?x111 ?x136 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x169 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x963 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x994 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x68 (+ a b)))
 (let ((?x774 (+ (* (- (/ 1.0 2.0)) (* ?x994 ?x994 d)) (* (/ 1.0 4.0) (* ?x68 ?x68 ?x68 ?x994 ?x994 b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d d b b)) (* (/ 1.0 32.0) (* ?x68 ?x994 ?x994 ?x994 d d d b b)))))
 (let ((?x48 (* a00 d)))
 (let ((?x1049 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x980 (* y00 b)))
 (let ((?x359 (* (+ (* (/ 1.0 2.0) (* ?x68 d)) (* (- 1.0) (* ?x994 b)) ?x980 ?x1049) ?x774)))
 (let ((?x296 (* (/ 1.0 32.0) (* y y y d d d b b a))))
 (let ((?x281 (* (/ 1.0 32.0) (* d d d b b a a))))
 (let ((?x265 (* (/ 1.0 4.0) (* y y b b a a a))))
 (let ((?x249 (* (- (/ 1.0 2.0)) (* y y d))))
 (let ((?x840 (* (+ ?x249 ?x265 ?x281 ?x296) (+ (* (/ 1.0 2.0) ?x111) (* (- 1.0) ?x117) ?x980 ?x1049))))
 (let (($x152 (or (not (= ?x840 0.0)) (not (= ?x359 0.0)))))
 (and $x152 $x963 $x169 $x935)))))))))))))))))))))) :qid k!33))
 ))
 (let ((?x888 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x117 (* y b)))
 (let ((?x136 (* (- 2.0) ?x117)))
 (let ((?x111 (* d a)))
 (let (($x171 (= (+ ?x111 ?x136 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x97 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x126 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x94 (* 2.0 (* y b00))) 0.0)))
 (let ((?x296 (* (/ 1.0 32.0) (* y y y d d d b b a))))
 (let ((?x281 (* (/ 1.0 32.0) (* d d d b b a a))))
 (let ((?x265 (* (/ 1.0 4.0) (* y y b b a a a))))
 (let ((?x249 (* (- (/ 1.0 2.0)) (* y y d))))
 (let ((?x1115 (+ ?x249 ?x265 ?x281 ?x296 (* (- (/ 1.0 2.0)) (* y d d)) (* (- (/ 1.0 8.0)) (* d d d)) (* (/ 1.0 4.0) (* y y b b b b b)) (* (/ 3.0 4.0) (* y y b b b b a)) (* (/ 3.0 4.0) (* y y b b b a a)) (* (/ 1.0 4.0) (* y d b b b b b)) (* (/ 3.0 4.0) (* y d b b b b a)) (* (/ 3.0 4.0) (* y d b b b a a)) (* (/ 1.0 4.0) (* y d b b a a a)) (* (/ 1.0 16.0) (* d d b b b b b)) (* (/ 3.0 16.0) (* d d b b b b a)) (* (/ 3.0 16.0) (* d d b b b a a)) (* (/ 1.0 16.0) (* d d b b a a a)) (* (/ 1.0 32.0) (* d d d b b b b)) (* (/ 1.0 16.0) (* d d d b b b a)) (* (/ 1.0 32.0) (* y y y d d d b b b)) (* (/ 3.0 64.0) (* y y d d d d b b b)) (* (/ 3.0 64.0) (* y y d d d d b b a)) (* (/ 3.0 128.0) (* y d d d d d b b b)) (* (/ 3.0 128.0) (* y d d d d d b b a)) (* (/ 1.0 256.0) (* d d d d d d b b b)) (* (/ 1.0 256.0) (* d d d d d d b b a)))))
 (let ((?x141 (* b y00)))
 (let ((?x178 (* (- 1.0) ?x117)))
 (let ((?x145 (* (/ 1.0 2.0) ?x111)))
 (let (($x1130 (not (= (* (+ ?x145 ?x178 ?x141 (* (- (/ 1.0 2.0)) (* d a00))) ?x1115) 0.0))))
 (let ((?x397 (* (/ 1.0 64.0) (* y y y d d d d b b a a00))))
 (let ((?x412 (* (- (/ 1.0 32.0)) (* y y y d d d b b b a y00))))
 (let ((?x411 (* (/ 1.0 32.0) (* y y y y d d d b b b a))))
 (let ((?x409 (* (- (/ 1.0 64.0)) (* y y y d d d d b b a a))))
 (let ((?x398 (+ (* (/ 1.0 4.0) (* y y d d a)) (* (- (/ 1.0 2.0)) (* y y y d b)) (* (/ 1.0 2.0) (* y y d b y00)) (* (- (/ 1.0 4.0)) (* y y d d a00)) (* (- (/ 1.0 8.0)) (* y y d b b a a a a)) (* (/ 1.0 4.0) (* y y y b b b a a a)) (* (- (/ 1.0 4.0)) (* y y b b b a a a y00)) (* (/ 1.0 8.0) (* y y d b b a a a a00)) (* (- (/ 1.0 64.0)) (* d d d d b b a a a)) (* (/ 1.0 32.0) (* y d d d b b b a a)) (* (- (/ 1.0 32.0)) (* d d d b b b a a y00)) (* (/ 1.0 64.0) (* d d d d b b a a a00)) ?x409 ?x411 ?x412 ?x397)))
 (let (($x475 (or (not (= ?x398 0.0)) $x1130)))
 (let (($x886 (and $x475 $x126 $x97 $x171)))
 (let (($x935 (= (+ ?x111 ?x136 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x169 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let (($x963 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let ((?x994 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x68 (+ a b)))
 (let ((?x774 (+ (* (- (/ 1.0 2.0)) (* ?x994 ?x994 d)) (* (/ 1.0 4.0) (* ?x68 ?x68 ?x68 ?x994 ?x994 b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d d b b)) (* (/ 1.0 32.0) (* ?x68 ?x994 ?x994 ?x994 d d d b b)))))
 (let ((?x48 (* a00 d)))
 (let ((?x1049 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x980 (* y00 b)))
 (let ((?x359 (* (+ (* (/ 1.0 2.0) (* ?x68 d)) (* (- 1.0) (* ?x994 b)) ?x980 ?x1049) ?x774)))
 (let (($x960 (not (= (* (+ ?x249 ?x265 ?x281 ?x296) (+ ?x145 ?x178 ?x980 ?x1049)) 0.0))))
 (let (($x152 (or $x960 (not (= ?x359 0.0)))))
 (let (($x1000 (and $x152 $x963 $x169 $x935)))
 (rewrite (= $x1000 $x886))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x438 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x994 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x68 (+ a b)))
 (let ((?x774 (+ (* (- (/ 1.0 2.0)) (* ?x994 ?x994 d)) (* (/ 1.0 4.0) (* ?x68 ?x68 ?x68 ?x994 ?x994 b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d d b b)) (* (/ 1.0 32.0) (* ?x68 ?x994 ?x994 ?x994 d d d b b)))))
 (let ((?x48 (* a00 d)))
 (let ((?x1049 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x980 (* y00 b)))
 (let ((?x359 (* (+ (* (/ 1.0 2.0) (* ?x68 d)) (* (- 1.0) (* ?x994 b)) ?x980 ?x1049) ?x774)))
 (let ((?x296 (* (/ 1.0 32.0) (* y y y d d d b b a))))
 (let ((?x281 (* (/ 1.0 32.0) (* d d d b b a a))))
 (let ((?x265 (* (/ 1.0 4.0) (* y y b b a a a))))
 (let ((?x249 (* (- (/ 1.0 2.0)) (* y y d))))
 (let ((?x840 (* (+ ?x249 ?x265 ?x281 ?x296) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x980 ?x1049))))
 (let (($x152 (or (not (= ?x840 0.0)) (not (= ?x359 0.0)))))
 (let ((?x117 (* y b)))
 (let ((?x136 (* (- 2.0) ?x117)))
 (let ((?x111 (* d a)))
 (let (($x935 (= (+ ?x111 ?x136 (* 2.0 ?x980) (* (- 1.0) ?x48)) 0.0)))
 (let (($x169 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x963 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x963 $x169 $x935 $x152)))))))))))))))))))))) :qid k!33))
 ))
 (let (($x85 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x51 (/ d 2.0)))
 (let ((?x70 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x68 (+ a b)))
 (let ((?x79 (+ (* (- 1.0) ?x51 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x53 ?x53 ?x70 ?x70) (* ?x68 ?x68 ?x53 ?x53 ?x51 ?x51 ?x51) (* ?x68 ?x53 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70 ?x70))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x74 (- (+ (- (* ?x68 ?x51) (* 2.0 ?x53 ?x70)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x64 (+ (* (- 1.0) ?x51 y y) (* a a a ?x53 ?x53 y y) (* a a ?x53 ?x53 ?x51 ?x51 ?x51) (* a ?x53 ?x53 ?x51 ?x51 ?x51 y y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= (* ?x59 ?x64) 0.0)) (not (= (* ?x74 ?x79) 0.0)))))))))))))))))) :qid k!33))
 ))
 (let ((?x979 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x994 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x68 (+ a b)))
 (let ((?x774 (+ (* (- (/ 1.0 2.0)) (* ?x994 ?x994 d)) (* (/ 1.0 4.0) (* ?x68 ?x68 ?x68 ?x994 ?x994 b b)) (* (/ 1.0 32.0) (* ?x68 ?x68 d d d b b)) (* (/ 1.0 32.0) (* ?x68 ?x994 ?x994 ?x994 d d d b b)))))
 (let ((?x48 (* a00 d)))
 (let ((?x1049 (* (- (/ 1.0 2.0)) ?x48)))
 (let ((?x980 (* y00 b)))
 (let ((?x359 (* (+ (* (/ 1.0 2.0) (* ?x68 d)) (* (- 1.0) (* ?x994 b)) ?x980 ?x1049) ?x774)))
 (let ((?x296 (* (/ 1.0 32.0) (* y y y d d d b b a))))
 (let ((?x281 (* (/ 1.0 32.0) (* d d d b b a a))))
 (let ((?x265 (* (/ 1.0 4.0) (* y y b b a a a))))
 (let ((?x249 (* (- (/ 1.0 2.0)) (* y y d))))
 (let ((?x840 (* (+ ?x249 ?x265 ?x281 ?x296) (+ (* (/ 1.0 2.0) (* d a)) (* (- 1.0) (* y b)) ?x980 ?x1049))))
 (let (($x152 (or (not (= ?x840 0.0)) (not (= ?x359 0.0)))))
 (let ((?x117 (* y b)))
 (let ((?x136 (* (- 2.0) ?x117)))
 (let ((?x111 (* d a)))
 (let (($x935 (= (+ ?x111 ?x136 (* 2.0 ?x980) (* (- 1.0) ?x48)) 0.0)))
 (let (($x169 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x94 (* (- 2.0) (* b00 y00))))
 (let (($x963 (= (+ ?x94 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x697 (and $x963 $x169 $x935 $x152)))
 (let ((?x51 (/ d 2.0)))
 (let ((?x70 (+ y ?x51)))
 (let ((?x53 (/ b 2.0)))
 (let ((?x79 (+ (* (- 1.0) ?x51 ?x70 ?x70) (* ?x68 ?x68 ?x68 ?x53 ?x53 ?x70 ?x70) (* ?x68 ?x68 ?x53 ?x53 ?x51 ?x51 ?x51) (* ?x68 ?x53 ?x53 ?x51 ?x51 ?x51 ?x70 ?x70 ?x70))))
 (let ((?x58 (* a00 ?x51)))
 (let ((?x74 (- (+ (- (* ?x68 ?x51) (* 2.0 ?x53 ?x70)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x64 (+ (* (- 1.0) ?x51 y y) (* a a a ?x53 ?x53 y y) (* a a ?x53 ?x53 ?x51 ?x51 ?x51) (* a ?x53 ?x53 ?x51 ?x51 ?x51 y y y))))
 (let ((?x59 (- (+ (- (* a ?x51) (* 2.0 ?x53 y)) (* 2.0 ?x53 y00)) ?x58)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x84 (and $x36 (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= (* ?x59 ?x64) 0.0)) (not (= (* ?x74 ?x79) 0.0))))))
 (rewrite (= $x84 $x697)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x1048 (mp (mp @x86 (quant-intro (proof-bind ?x979) (= $x85 $x438)) $x438) (rewrite (= $x438 $x1002)) $x1002)))
 (let ((@x545 (mp~ (mp @x1048 (quant-intro (proof-bind ?x888) (= $x1002 $x887)) $x887) (sk (~ $x887 $x110)) $x110)))
 (let ((@x842 (mp @x545 (rewrite (= $x110 $x232)) $x232)))
 (let ((@x897 (mp (and-elim @x842 $x686) @x896 $x651)))
 (let ((@x485 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x651) $x639)) @x897 $x639)))
 (let (($x661 (<= ?x670 0.0)))
 (let ((@x738 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x651) $x661)) @x897 $x661)))
 (let (($x1095 (<= ?x954 0.0)))
 (let (($x603 (not $x1095)))
 (let (($x307 (>= ?x954 0.0)))
 (let ((@x1127 (unit-resolution ((_ th-lemma arith) (or (not $x661) (not $x639) $x307)) (hypothesis (not $x307)) @x738 @x485 false)))
 (let (($x786 (= 0.0 ?x954)))
 (let (($x381 (not $x786)))
 (let ((@x372 (monotonicity (symm (commutativity (= $x786 $x716)) (= $x716 $x786)) (= $x98 $x381))))
 (let ((?x644 (+ ?x564 ?x530 ?x183 ?x643 ?x203 ?x373 ?x893 ?x276 ?x1075 ?x634 ?x907 ?x890 ?x565 ?x1078 ?x492 ?x680 ?x687 ?x424 ?x710 ?x267 ?x613 ?x318 ?x1026 ?x776 ?x912 ?x527)))
 (let (($x417 (>= ?x644 0.0)))
 (let (($x914 (not $x417)))
 (let (($x532 (= 0.0 ?x644)))
 (let (($x149 (not $x532)))
 (let ((@x132 (hypothesis $x510)))
 (let (($x891 (= ?x644 0.0)))
 (let (($x663 (not $x891)))
 (let ((@x148 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x663 $x140)) @x132 $x663) (symm (hypothesis $x532) $x891) false)))
 (let ((@x1096 (lemma @x148 (or $x149 $x140))))
 (let (($x566 (<= ?x644 0.0)))
 (let (($x550 (<= ?x899 0.0)))
 (let (($x310 (not $x550)))
 (let (($x591 (>= ?x899 0.0)))
 (let ((@x906 (commutativity (= (= 0.0 ?x899) $x140))))
 (let (($x138 (= 0.0 ?x899)))
 (let (($x677 (not $x138)))
 (let (($x601 (not $x591)))
 (let ((@x1080 (hypothesis $x601)))
 (let ((@x905 (mp (unit-resolution ((_ th-lemma arith triangle-eq) (or $x677 $x591)) @x1080 $x677) (monotonicity @x906 (= $x677 $x510)) $x510)))
 (let ((?x568 (+ ?x1022 ?x340 ?x789 ?x334)))
 (let (($x382 (<= ?x568 0.0)))
 (let ((@x689 (lemma ((_ th-lemma arith) @x738 (hypothesis (not $x382)) false) $x382)))
 (let ((@x909 (unit-resolution ((_ th-lemma arith) (or (not $x382) $x417 $x591)) @x1080 @x689 (hypothesis $x914) false)))
 (let (($x811 (not $x566)))
 (let ((@x706 (hypothesis $x811)))
 (let (($x711 (>= ?x568 0.0)))
 (let ((@x580 (lemma ((_ th-lemma arith) (hypothesis (not $x711)) @x485 false) $x711)))
 (let ((@x640 (unit-resolution ((_ th-lemma arith) (or (not $x711) $x566 $x591)) @x1080 @x580 @x706 false)))
 (let ((@x512 ((_ th-lemma arith triangle-eq) (or $x532 $x811 $x914))))
 (let ((@x511 (unit-resolution @x512 (unit-resolution (lemma @x640 (or $x566 $x591)) @x1080 $x566) (unit-resolution (lemma @x909 (or $x417 $x591)) @x1080 $x417) $x532)))
 (let ((@x282 (mp @x132 (monotonicity (symm @x906 (= $x140 $x138)) (= $x510 $x677)) $x677)))
 (let ((@x648 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x138 $x310 $x601)) @x282 (lemma (unit-resolution @x1096 @x511 @x905 false) $x591) $x310)))
 (let ((@x518 (unit-resolution ((_ th-lemma arith) (or (not $x382) $x566 $x550)) (hypothesis $x310) @x706 @x689 false)))
 (let ((@x622 (unit-resolution @x512 (unit-resolution (lemma @x518 (or $x566 $x550)) @x648 $x566) (unit-resolution @x1096 @x132 $x149) $x914)))
 (let ((@x715 (unit-resolution ((_ th-lemma arith) (or (not $x711) $x417 $x550)) @x648 @x580 @x622 false)))
 (let ((@x375 (mp (unit-resolution (and-elim @x842 $x937) (lemma @x715 $x140) $x98) @x372 $x381)))
 (let ((@x528 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x786 $x603 (not $x307))) @x375 (or $x603 (not $x307)))))
 (unit-resolution ((_ th-lemma arith) (or (not $x661) $x1095 (not $x639))) (unit-resolution @x528 (lemma @x1127 $x307) $x603) @x738 @x485 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs               36
 :arith-eq-adapter        33
 :arith-conflicts         29
 :arith-diseq             35
 :arith-grobner-calls     4
 :arith-grobner-conflicts 2
 :arith-horner-calls      4
 :arith-lower             26
 :arith-make-feasible     31
 :arith-max-columns       73
 :arith-max-rows          8
 :arith-nla-explanations  7
 :arith-nla-lemmas        27
 :arith-offset-eqs        9
 :arith-upper             29
 :conflicts               10
 :decisions               35
 :del-clause              107
 :final-checks            28
 :max-memory              19.07
 :memory                  17.37
 :mk-bool-var             131
 :mk-clause               136
 :num-allocs              5657956
 :num-checks              1
 :propagations            49
 :rlimit-count            6558
 :time                    0.03
 :total-time              0.04)
