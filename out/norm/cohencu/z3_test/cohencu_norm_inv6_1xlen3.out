unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x2526 (* z!1 z!1)))
 (let ((?x446 (* z00 z00)))
 (let ((?x447 (* (- 1) ?x446)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x2168 (+ ?x49 ?x43 ?x447 ?x2526 (* (- 12) y!2) (* (- 6) z!1))))
 (let (($x580 (<= ?x2168 0)))
 (let (($x1288 (= ?x2168 0)))
 (let ((?x3156 (+ x!3 y!2)))
 (let ((?x2775 (+ y!2 z!1)))
 (let ((?x2855 (+ 1 n!0)))
 (let ((?x3219 (* ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x2491 (+ 6 z!1)))
 (let ((?x3217 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x3204 (* x00 z00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x3089 (* z00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)))
 (let ((?x3082 (* z00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x3081 (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x2273 (* x00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x2270 (* y00 y00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)))
 (let ((?x2247 (* y00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1773 (* y00 y00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1744 (* x00 z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1700 (* y00 y00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x1398 (* x00 z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)))
 (let ((?x1355 (* y00 z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)))
 (let ((?x1319 (* y00 y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1318 (* z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1260 (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1199 (* y00 z00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x1157 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1137 (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1121 (* z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x1119 (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x1117 (* y00 z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x967 (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)))
 (let ((?x857 (* y00 y00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x667 (* x00 y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x618 (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x545 (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x540 (* z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)))
 (let ((?x501 (* z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x420 (* z00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)))
 (let ((?x398 (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)))
 (let ((?x589 (+ (* 36 ?x398) (* (- 216) (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 2) ?x420) (* 10 (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 108) (* x00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) ?x501 (* (- 1) ?x540) (* 18 ?x545) (* 96 (* y00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 12) ?x618) (* (- 36) ?x667) (* 36 (* x00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 108) (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) (* 24 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 12) (* y00 y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 120) (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) (* 108 (* x00 x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 1) ?x857) (* (- 36) (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* 24 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) ?x967 (* 36 (* x00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 24) (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* 60 (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* 18 (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 216) (* x00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) ?x1117 ?x1119 (* (- 2) ?x1121) (* (- 24) (* z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 6) ?x1137) (* 108 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* 36 (* y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 4) ?x1157) (* (- 6) (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) ?x1199 (* 18 (* z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* 18 ?x1260) (* (- 10) (* y00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 216) (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 24) (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 18) (* x00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 1) ?x1318) (* (- 12) ?x1319) (* 108 (* x00 x00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 108 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) ?x1355 (* 216 (* x00 y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 36) (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 2 ?x1398) (* (- 36) (* z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 36) (* x00 y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 36) (* x00 y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 4) (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 12) (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) (* 216 (* x00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* 108 (* ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 6) (* z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 1) ?x1700) (* 2 ?x1744) (* 24 (* y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 18 (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* 216 (* x00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* 16 ?x1773) (* 108 (* x00 x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* 36 (* x00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 120) (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 10) (* y00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 10) ?x2247) (* 10 (* z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 216) (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 12) (* y00 y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 1) ?x2270) (* 108 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 18) ?x2273) (* 108 (* ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156 ?x3156)) (* 18 (* y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 120) (* y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 96 (* y00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 216) (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 96 (* y00 y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 16 (* y00 y00 y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 10 ?x3081) (* (- 1) ?x3082) (* (- 2) ?x3089) (* (- 108) (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 216) (* y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* 16 (* y00 y00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* 24 (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* 2 ?x3204) (* (- 18) (* x00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 12) (* y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 24 (* ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 108 ?x3217) (* (- 4) ?x3219))))
 (let (($x776 (= ?x589 0)))
 (let (($x2664 (not $x776)))
 (let ((?x831 (* z00 z00 y00 y00)))
 (let ((?x3061 (+ (* 24 (* z00 y!2)) (* (- 24) (* y!2 y!2)) (* (- 216) (* y00 x00)) (* 216 (* y00 x!3)) (* (- 24) (* z00 y00)) (* (- 36) (* z00 x00)) (* (- 96) (* y00 y00)) (* (- 108) (* x!3 y!2)) (* 4 (* y!2 y!2 y!2)) (* 6 (* z00 y!2 y!2)) (* 12 (* z00 y00 y00)) (* 10 (* z00 z00 y00)) ?x831 (* (- 108) (* x!3 x!3)) (* 108 (* x00 y!2)) (* (- 36) (* z00 y00 x!3)) (* 216 (* x00 x!3)) (* 12 (* y00 y!2 y!2)) (* 18 (* z00 z00 x00)) (* (- 16) (* y00 y00 y00)) (* 36 (* z00 y00 x00)) (* (- 1) (* z00 z00 z00 y00)) (* (- 2) (* z00 z00 z00 x00)) (* (- 108) (* x00 x00)) (* (- 18) (* z00 z00 x!3)) (* 36 (* z00 x!3)) (* 120 (* y00 y!2)) (* (- 10) (* z00 z00 y!2)) (* (- 18) (* z00 y00 y!2)) (* (- 1) (* z00 z00 y!2 y!2)) (* 2 (* z00 z00 z00 x!3)) (* z00 z00 z00 y!2))))
 (let (($x3063 (= ?x3061 0)))
 (let ((?x2524 (* (- 72) y!2)))
 (let ((?x2902 (* (- 18) (* x00 z!1))))
 (let ((?x2388 (* z00 y00 y!2)))
 (let ((?x1914 (* x!3 z!1)))
 (let ((?x2894 (* 18 ?x1914)))
 (let ((?x1220 (* y00 z!1)))
 (let ((?x1230 (* (- 12) ?x1220)))
 (let ((?x763 (* z00 y00 y00)))
 (let ((?x2620 (* (- 108) x!3)))
 (let ((?x587 (* z00 y00)))
 (let ((?x703 (* 6 ?x587)))
 (let ((?x488 (* y!2 z!1)))
 (let ((?x2516 (* 12 ?x488)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x651 (+ ?x67 ?x74 (* (- 6) (* z00 y!2)) ?x2516 (* 18 (* y00 x00)) (* (- 18) (* y00 x!3)) (* (- 1) (* y00 y!2 z!1)) ?x703 (* (- 1) (* y!2 y!2 z!1)) (* 36 (* y00 y00)) (* 18 (* x!3 y!2)) ?x2620 (* (- 2) (* z00 y!2 y!2)) ?x763 (* (- 3) (* z00 z00 y00)) (* (- 18) (* x00 y!2)) (* (- 3) (* z00 z00 x00)) ?x1230 (* 3 (* z00 z00 x!3)) (* (- 36) (* y00 y!2)) ?x2894 (* 2 (* y00 y00 z!1)) (* 3 (* z00 z00 y!2)) ?x2388 (* (- 3) (* z00 x00 z!1)) ?x2902 (* 3 (* z00 x!3 z!1)) ?x2524)))
 (let (($x660 (= ?x651 0)))
 (let ((?x2310 (* z00 z00 y!2)))
 (let ((?x862 (* (- 6) ?x587)))
 (let ((?x2909 (+ ?x67 ?x74 (* 6 (* z00 y!2)) ?x2516 (* (- 12) (* y!2 y!2)) ?x862 (* (- 18) (* z00 x00)) (* 24 (* y00 y00)) ?x2620 (* z00 y00 z!1) (* (- 1) (* z00 z00 y00)) ?x1230 (* (- 1) (* z00 y!2 z!1)) (* 18 (* z00 x!3)) (* (- 12) (* y00 y!2)) ?x2894 ?x2310 ?x2902 ?x2524)))
 (let (($x2910 (= ?x2909 0)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2521 (+ ?x67 ?x55 ?x74 (* (- 6) ?x446) (* 6 ?x488) (* (- 18) ?x587) ?x2620 (* 12 ?x1220) (* (- 1) (* z00 z00 z!1)) (* 6 (* z00 z!1)) ?x2524)))
 (let (($x2519 (= ?x2521 0)))
 (let ((?x502 (* (- 6) n00)))
 (let ((?x3294 (+ z00 ?x502 (* (- 1) z!1) (* 6 n!0))))
 (let (($x3295 (= ?x3294 0)))
 (let (($x1587 (and $x3295 $x1288 $x2519 $x2910 $x660 $x3063 $x2664)))
 (let ((?x1039 (+ ?x540 (* (- 18) ?x545) (* 6 (* z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 60) (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 1) ?x1117) (* 216 (* x00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 1) ?x1119) (* 2 ?x1121) (* (- 108) (* ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 216) (* x00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* 4 (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 24) (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 108) (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* 24 (* z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 216) (* x00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) ?x1700 (* (- 18) (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) ?x2270 (* 216 (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 12 (* y00 y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* 2 ?x420) (* 10 ?x2247) (* (- 36) ?x398) (* 216 (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 10) (* z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* 108 (* x00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 1) ?x967) (* (- 36) (* y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* 6 ?x1137) (* 4 ?x1157) (* 6 (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) (* 12 ?x1319) (* (- 108) (* x00 x00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 108) (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 36) (* x00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 108) (* ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 24) (* y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 36 (* z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* 36 (* x00 y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 36 (* x00 y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 36) (* x00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 120 (* y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 120 (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 18) (* y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 16) (* y00 y00 y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 96) (* y00 y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 216 (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 18 ?x2273) (* 12 ?x618) (* 36 ?x667) (* (- 24) (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 108) (* x00 x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 1) ?x501) (* (- 108) (* ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 216) (* x00 y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 10 (* y00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 2) ?x1744) (* (- 36) (* x00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 10) (* z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 96) (* y00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 18) (* z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 1) ?x1199) (* (- 18) ?x1260) (* 216 (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* 24 (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) ?x1318 (* 18 (* x00 z00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 10) ?x3081) (* 2 ?x3089) ?x3082 (* 108 (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* 216 (* y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156 ?x3156)) (* (- 16) (* y00 y00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 24) (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 16) ?x1773) (* (- 2) ?x3204) (* 12 (* y00 ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 18 (* x00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 24) (* ?x2855 ?x2775 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* (- 108) ?x3217) (* 4 ?x3219) (* 12 (* y00 y00 z00 ?x2855 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 36 (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156 ?x3156)) (* 12 (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 2) ?x1398) (* (- 18) (* y00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)) (* (- 108) (* x00 x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* (- 96) (* y00 y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) ?x857 (* 108 (* x00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) (* 10 (* y00 z00 z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156)) (* 36 (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x3156 ?x3156)) (* (- 1) ?x1355) (* 120 (* y00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156 ?x3156)) (* 24 (* z00 ?x2855 ?x2855 ?x2491 ?x2491 ?x2775 ?x2775 ?x2775 ?x3156)))))
 (let ((?x1371 (* x00 x00)))
 (let ((?x1372 (* 108 ?x1371)))
 (let ((?x1268 (* z00 z00 z00 x00)))
 (let ((?x1269 (* 2 ?x1268)))
 (let ((?x1265 (* z00 z00 z00 y00)))
 (let ((?x1162 (* z00 y00 x00)))
 (let ((?x1175 (* (- 36) ?x1162)))
 (let ((?x1059 (* y00 y00 y00)))
 (let ((?x1060 (* 16 ?x1059)))
 (let ((?x974 (* z00 z00 x00)))
 (let ((?x1225 (* (- 18) ?x974)))
 (let ((?x846 (* (- 1) ?x831)))
 (let ((?x788 (* z00 z00 y00)))
 (let ((?x1326 (* (- 10) ?x788)))
 (let ((?x798 (* (- 12) ?x763)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x624 (* z00 x00)))
 (let ((?x542 (* 36 ?x624)))
 (let ((?x952 (* 24 ?x587)))
 (let ((?x534 (* y00 x00)))
 (let ((?x525 (* 216 ?x534)))
 (let ((?x2661 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x525 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x952 ?x542 (* 24 (* y!2 y!2)) ?x1125 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x798 ?x1326 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x846 (* 108 (* x!3 x!3)) (* (- 4) (* y!2 y!2 y!2)) (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1225 (* (- 216) (* x!3 y00)) ?x1060 (* (- 12) (* y!2 y!2 y00)) ?x1175 (* (- 216) (* x!3 x00)) ?x1265 ?x1269 (* 36 (* x!3 z00 y00)) ?x1372)))
 (let ((?x975 (* 3 ?x974)))
 (let ((?x1037 (* 3 ?x788)))
 (let ((?x770 (* (- 1) ?x763)))
 (let ((?x450 (* 18 (* z!1 x00))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x491 (* z!1 y00)))
 (let ((?x459 (* 12 ?x491)))
 (let ((?x460 (* (- 18) ?x1914)))
 (let ((?x535 (* (- 18) ?x534)))
 (let ((?x732 (* (- 12) ?x488)))
 (let ((?x638 (* y!2 y!2 z!1)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x492 (* 72 y!2)))
 (let ((?x2813 (* 108 x!3)))
 (let ((?x3243 (+ ?x2813 ?x492 ?x609 ?x666 (* (- 3) (* y!2 z00 z00)) ?x638 ?x732 ?x535 (* (- 18) (* x!3 y!2)) ?x460 ?x459 ?x862 ?x957 ?x450 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x770 ?x1037 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x975 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x625 (* 18 ?x624)))
 (let ((?x1191 (+ ?x2813 ?x492 ?x609 ?x666 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x732 ?x460 ?x459 ?x703 ?x625 (* 12 (* y!2 y!2)) ?x683 ?x450 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x788 (* (- 18) (* x!3 z00)))))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x1101 (+ ?x2813 ?x492 ?x609 ?x539 ?x666 (* z!1 z00 z00) ?x550 (* (- 6) ?x488) (* (- 12) ?x491) ?x588 (* (- 6) (* z!1 z00)))))
 (let ((?x517 (* (- 12) y00)))
 (let ((?x516 (* (- 6) z00)))
 (let (($x2336 (= (+ (* 12 y!2) (* 6 z!1) ?x516 ?x517 (* (- 1) ?x2526) ?x446) 0)))
 (let (($x1023 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x2336 (= ?x1101 0) (= ?x1191 0) (= ?x3243 0) (= ?x2661 0) (not (= ?x1039 0)))))
 (let (($x2217 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2209 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1494 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1440 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1245 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x786 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x764 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1852 (+ ?x400 (* (- 18) ?x441) (* 6 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 60) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x507) (* 216 (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x764) (* 2 ?x786) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 4 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 24 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x1076 (* (- 18) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x1105 (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 2 ?x1245) (* 10 ?x1267) (* (- 36) ?x1321) (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1440) (* (- 36) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x1494) (* 4 ?x1508) (* 6 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 12 ?x1562) (* (- 108) (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 36 (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 120 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 18) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x1971) (* 12 ?x2003) (* 36 ?x2046) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x2101) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 2) ?x2209) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 18) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x2349) (* (- 18) ?x2554) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 24 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) ?x2655 (* 18 (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 10) ?x2708) (* 2 ?x2725) ?x2731 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 16) ?x2868) (* (- 2) ?x2876) (* 12 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 24) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 4 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 2) ?x3102) (* (- 18) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x3142 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x3256) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 24 ?x3303))))
 (let ((?x1371 (* x00 x00)))
 (let ((?x1372 (* 108 ?x1371)))
 (let ((?x1268 (* z00 z00 z00 x00)))
 (let ((?x1269 (* 2 ?x1268)))
 (let ((?x1265 (* z00 z00 z00 y00)))
 (let ((?x1162 (* z00 y00 x00)))
 (let ((?x1175 (* (- 36) ?x1162)))
 (let ((?x1059 (* y00 y00 y00)))
 (let ((?x1060 (* 16 ?x1059)))
 (let ((?x974 (* z00 z00 x00)))
 (let ((?x1225 (* (- 18) ?x974)))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x831 (* z00 z00 y00 y00)))
 (let ((?x846 (* (- 1) ?x831)))
 (let ((?x788 (* z00 z00 y00)))
 (let ((?x1326 (* (- 10) ?x788)))
 (let ((?x763 (* z00 y00 y00)))
 (let ((?x798 (* (- 12) ?x763)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x624 (* z00 x00)))
 (let ((?x542 (* 36 ?x624)))
 (let ((?x587 (* z00 y00)))
 (let ((?x952 (* 24 ?x587)))
 (let ((?x534 (* y00 x00)))
 (let ((?x525 (* 216 ?x534)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1392 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x525 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x952 ?x542 ?x873 ?x1125 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x798 ?x1326 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x846 ?x878 ?x930 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1225 (* (- 216) (* x y00)) ?x1060 (* (- 12) (* y y y00)) ?x1175 (* (- 216) (* x x00)) ?x1265 ?x1269 (* 36 (* x z00 y00)) ?x1372)))
 (let (($x1397 (= ?x1392 0)))
 (let ((?x975 (* 3 ?x974)))
 (let ((?x1037 (* 3 ?x788)))
 (let ((?x770 (* (- 1) ?x763)))
 (let ((?x700 (* 18 (* z x00))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x862 (* (- 6) ?x587)))
 (let ((?x561 (* z y00)))
 (let ((?x562 (* 12 ?x561)))
 (let ((?x595 (* (- 18) (* x z))))
 (let ((?x535 (* (- 18) ?x534)))
 (let ((?x530 (* y z)))
 (let ((?x554 (* (- 12) ?x530)))
 (let ((?x135 (* y y z)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1093 (+ ?x64 ?x71 ?x609 ?x666 (* (- 3) (* y z00 z00)) ?x135 ?x554 ?x535 (* (- 18) (* x y)) ?x595 ?x562 ?x862 ?x957 ?x700 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x770 ?x1037 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x975 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1100 (= ?x1093 0)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x625 (* 18 ?x624)))
 (let ((?x703 (* 6 ?x587)))
 (let ((?x103 (* y z z00)))
 (let ((?x842 (+ ?x64 ?x71 ?x609 ?x666 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x554 ?x595 ?x562 ?x703 ?x625 ?x631 ?x683 ?x700 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x788 (* (- 18) (* x z00)))))
 (let (($x847 (= ?x842 0)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x682 (+ ?x64 ?x71 ?x609 ?x539 ?x666 ?x76 ?x550 (* (- 6) ?x530) (* (- 12) ?x561) ?x588 (* (- 6) (* z z00)))))
 (let (($x687 (= ?x682 0)))
 (let ((?x517 (* (- 12) y00)))
 (let ((?x516 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x520 (= (+ ?x45 ?x46 ?x516 ?x517 (* (- 1) (* z z)) ?x446) 0)))
 (let (($x438 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x438 $x520 $x687 $x847 $x1100 $x1397 (not (= ?x1852 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x1456 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x786 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1440 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x764 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1245 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1494 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2209 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2209) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1494) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x1245) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x764 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1440 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x786) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let ((?x1371 (* x00 x00)))
 (let ((?x1372 (* 108 ?x1371)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x1059 (* y00 y00 y00)))
 (let ((?x1060 (* 16 ?x1059)))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x616 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2317 (* 18 (* x00 z))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x499 (* z y)))
 (let ((?x726 (* (- 12) ?x499)))
 (let ((?x733 (* y00 z)))
 (let ((?x701 (* 12 ?x733)))
 (let ((?x1178 (* (- 18) (* z x))))
 (let ((?x649 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1178 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x701 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x726 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x957 ?x2317 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x609 (* 18 (* y00 x)) ?x71 ?x666 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x779 (+ (* (- 1) (* y00 z00 z)) ?x726 ?x1178 (* 18 (* x00 z00)) ?x631 ?x683 ?x2317 ?x701 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x609 (* (- 6) (* z00 y)) ?x71 ?x666 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x2674 (+ (* (- 6) ?x499) ?x539 ?x550 (* (- 12) ?x733) (* 18 (* y00 z00)) ?x64 ?x609 (* (- 6) (* z00 z)) ?x71 ?x666 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x447 (* (- 1) ?x446)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x447 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x2674 0) (= ?x779 0) (= ?x649 0) (= ?x616 0) (not (= ?x3324 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2220 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2209 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1494 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1440 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1245 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x786 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x764 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1852 (+ ?x400 (* (- 18) ?x441) (* 6 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 60) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x507) (* 216 (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x764) (* 2 ?x786) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 4 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 24 (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x1076 (* (- 18) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x1105 (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 2 ?x1245) (* 10 ?x1267) (* (- 36) ?x1321) (* 216 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x1440) (* (- 36) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x1494) (* 4 ?x1508) (* 6 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 12 ?x1562) (* (- 108) (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 108) (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 36 (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 120 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 18) (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x1971) (* 12 ?x2003) (* 36 ?x2046) (* (- 24) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x2101) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 2) ?x2209) (* (- 36) (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 18) (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x2349) (* (- 18) ?x2554) (* 216 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 24 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) ?x2655 (* 18 (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 10) ?x2708) (* 2 ?x2725) ?x2731 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 216 (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 16) (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 24) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 16) ?x2868) (* (- 2) ?x2876) (* 12 (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 24) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 4 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 2) ?x3102) (* (- 18) (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 108) (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 96) (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x3142 (* 108 (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 10 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 36 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x3256) (* 120 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 24 ?x3303))))
 (let ((?x1371 (* x00 x00)))
 (let ((?x1372 (* 108 ?x1371)))
 (let ((?x1268 (* z00 z00 z00 x00)))
 (let ((?x1269 (* 2 ?x1268)))
 (let ((?x1265 (* z00 z00 z00 y00)))
 (let ((?x1162 (* z00 y00 x00)))
 (let ((?x1175 (* (- 36) ?x1162)))
 (let ((?x1059 (* y00 y00 y00)))
 (let ((?x1060 (* 16 ?x1059)))
 (let ((?x974 (* z00 z00 x00)))
 (let ((?x1225 (* (- 18) ?x974)))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x831 (* z00 z00 y00 y00)))
 (let ((?x846 (* (- 1) ?x831)))
 (let ((?x788 (* z00 z00 y00)))
 (let ((?x1326 (* (- 10) ?x788)))
 (let ((?x763 (* z00 y00 y00)))
 (let ((?x798 (* (- 12) ?x763)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x624 (* z00 x00)))
 (let ((?x542 (* 36 ?x624)))
 (let ((?x587 (* z00 y00)))
 (let ((?x952 (* 24 ?x587)))
 (let ((?x534 (* y00 x00)))
 (let ((?x525 (* 216 ?x534)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1392 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x525 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x952 ?x542 ?x873 ?x1125 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x798 ?x1326 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x846 ?x878 ?x930 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1225 (* (- 216) (* x y00)) ?x1060 (* (- 12) (* y y y00)) ?x1175 (* (- 216) (* x x00)) ?x1265 ?x1269 (* 36 (* x z00 y00)) ?x1372)))
 (let (($x1397 (= ?x1392 0)))
 (let ((?x975 (* 3 ?x974)))
 (let ((?x1037 (* 3 ?x788)))
 (let ((?x770 (* (- 1) ?x763)))
 (let ((?x700 (* 18 (* z x00))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x862 (* (- 6) ?x587)))
 (let ((?x561 (* z y00)))
 (let ((?x562 (* 12 ?x561)))
 (let ((?x595 (* (- 18) (* x z))))
 (let ((?x535 (* (- 18) ?x534)))
 (let ((?x530 (* y z)))
 (let ((?x554 (* (- 12) ?x530)))
 (let ((?x135 (* y y z)))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1093 (+ ?x64 ?x71 ?x609 ?x666 (* (- 3) (* y z00 z00)) ?x135 ?x554 ?x535 (* (- 18) (* x y)) ?x595 ?x562 ?x862 ?x957 ?x700 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x770 ?x1037 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x975 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1100 (= ?x1093 0)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x625 (* 18 ?x624)))
 (let ((?x703 (* 6 ?x587)))
 (let ((?x103 (* y z z00)))
 (let ((?x842 (+ ?x64 ?x71 ?x609 ?x666 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x554 ?x595 ?x562 ?x703 ?x625 ?x631 ?x683 ?x700 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x788 (* (- 18) (* x z00)))))
 (let (($x847 (= ?x842 0)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x682 (+ ?x64 ?x71 ?x609 ?x539 ?x666 ?x76 ?x550 (* (- 6) ?x530) (* (- 12) ?x561) ?x588 (* (- 6) (* z z00)))))
 (let (($x687 (= ?x682 0)))
 (let ((?x517 (* (- 12) y00)))
 (let ((?x516 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x520 (= (+ ?x45 ?x46 ?x516 ?x517 (* (- 1) (* z z)) ?x446) 0)))
 (let (($x438 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x2488 (and $x438 $x520 $x687 $x847 $x1100 $x1397 (not (= ?x1852 0)))))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2209) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1494) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x1245) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x764 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1440 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x786) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x616 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x2317 (* 18 (* x00 z))))
 (let ((?x499 (* z y)))
 (let ((?x726 (* (- 12) ?x499)))
 (let ((?x733 (* y00 z)))
 (let ((?x701 (* 12 ?x733)))
 (let ((?x1178 (* (- 18) (* z x))))
 (let ((?x649 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1178 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x701 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x726 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x957 ?x2317 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x609 (* 18 (* y00 x)) ?x71 ?x666 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x779 (+ (* (- 1) (* y00 z00 z)) ?x726 ?x1178 (* 18 (* x00 z00)) ?x631 ?x683 ?x2317 ?x701 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x609 (* (- 6) (* z00 y)) ?x71 ?x666 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x2674 (+ (* (- 6) ?x499) ?x539 ?x550 (* (- 12) ?x733) (* 18 (* y00 z00)) ?x64 ?x609 (* (- 6) (* z00 z)) ?x71 ?x666 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x447 (* (- 1) ?x446)))
 (let (($x1977 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x447 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x2674 0) (= ?x779 0) (= ?x649 0) (= ?x616 0) (not (= ?x3324 0)))))
 (rewrite (= $x1977 $x2488))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x393 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x219 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x370 (* 2 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x353 (* 2 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00 z00)))
 (let ((?x261 (* 2 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x220 (* 2 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x222 (+ (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00) ?x220 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x228 (+ (- ?x222 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00)) (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219) (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x232 (- (- ?x228 (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x237 (- (+ ?x232 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217)) (* 2 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x238 (- ?x237 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x240 (+ ?x238 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x245 (+ (- ?x240 (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00)) (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219) (* 216 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x247 (- ?x245 (* 6 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x251 (+ ?x247 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00) (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 18 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x256 (- (- ?x251 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217)) (* 4 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x260 (+ (- ?x256 (* 216 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219)) (* 60 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x264 (- (- ?x260 ?x261) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x266 (+ ?x264 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x268 (- ?x266 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x270 (+ ?x268 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x272 (- ?x270 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x274 (+ ?x272 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x276 (- ?x274 (* 4 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x281 (+ ?x276 (* 108 ?x215 ?x216 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219) (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x285 (- ?x281 (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x286 (- ?x285 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00 z00))))
 (let ((?x287 (- ?x286 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x292 (- (+ ?x287 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x297 (+ (- ?x292 (* 120 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219)) (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 16 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 y00) (* 96 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00))))
 (let ((?x300 (- ?x297 (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x301 (- ?x300 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x305 (+ ?x301 (* 216 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x307 (- ?x305 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x309 (+ ?x307 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x311 (- ?x309 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00))))
 (let ((?x314 (+ ?x311 (* 96 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00 z00))))
 (let ((?x318 (- (- ?x314 (* 120 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00)) (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x320 (+ ?x318 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x322 (- ?x320 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x324 (+ ?x322 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x328 (- ?x324 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x329 (- ?x328 (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x330 (- ?x329 (* 2 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x332 (+ ?x330 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x337 (+ (- ?x332 (* 108 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219)) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x339 (- ?x337 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x341 (+ ?x339 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x344 (- ?x341 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x345 (- ?x344 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x347 (+ ?x345 (* 16 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219))))
 (let ((?x351 (- (- ?x347 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00)) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x354 (+ ?x351 (* 16 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219) ?x353)))
 (let ((?x357 (- ?x354 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00))))
 (let ((?x358 (- ?x357 (* 18 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x361 (+ ?x358 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x366 (- ?x361 (* 4 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x367 (- ?x366 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00))))
 (let ((?x368 (- ?x367 (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x369 (- ?x368 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x374 (+ ?x369 ?x370 (* 18 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 108 ?x215 ?x215 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219) (* 96 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219))))
 (let ((?x379 (- ?x374 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x380 (- ?x379 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x381 (- ?x380 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x384 (+ (- ?x381 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00)) (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x387 (- ?x384 (* 120 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let (($x389 (= (- ?x387 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00)) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x389)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1889 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x527 (+ 6 z)))
 (let ((?x555 (+ 1 n)))
 (let ((?x3303 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x3256 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x3142 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3102 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x2876 (* x00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2868 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2655 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2003 (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2708 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2731 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2725 (* z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2554 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2349 (* y00 z00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2101 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1562 (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2046 (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1971 (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1076 (* y00 y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1105 (* y00 y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)))
 (let ((?x1321 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1508 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1267 (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x441 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x400 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x507 (* y00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x786 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1440 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x764 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1245 (* z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1494 (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2209 (* x00 z00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3324 (+ (* 36 (* x00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 2 ?x2209) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x1494) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 2) ?x1245) (* (- 12) (* y00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) ?x764 (* (- 36) (* z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 216 (* x00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 6) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) ?x1440 (* 36 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 4) (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* 60 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x786) (* (- 6) (* z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x507 (* (- 1) ?x400) (* 18 ?x441) (* (- 10) ?x1267) (* 10 (* z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* (- 4) ?x1508) (* 108 (* x00 x00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 ?x1321) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x1105) (* (- 1) ?x1076) (* (- 216) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 36) (* x00 y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 (* y00 y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) ?x1971) (* (- 36) ?x2046) (* 216 (* x00 y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 24 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x1562) ?x2101 (* (- 10) (* y00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x2349 (* (- 120) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 36 (* x00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) (* (- 216) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x2554) (* (- 36) (* x00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 24) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 2) ?x2725) (* 18 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 24 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 10 (* z00 z00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2731) (* 10 ?x2708) (* (- 12) ?x2003) (* (- 1) ?x2655) (* 16 (* y00 y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 216) (* y00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 16 ?x2868) (* 2 ?x2876) (* (- 12) (* y00 ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* x00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 24 (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 108 (* ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 4) (* ?x555 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 y00 z00 ?x555 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x217 ?x216)) (* 2 ?x3102) (* 18 (* y00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216)) (* 108 (* x00 x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* 96 (* y00 y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 1) ?x3142) (* (- 108) (* x00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 10) (* y00 z00 z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216)) (* (- 36) (* z00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x216 ?x216)) ?x3256 (* (- 120) (* y00 ?x555 ?x555 ?x527 ?x527 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 24) ?x3303))))
 (let ((?x1371 (* x00 x00)))
 (let ((?x1372 (* 108 ?x1371)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x654 (* y00 y00)))
 (let ((?x1125 (* 96 ?x654)))
 (let ((?x1059 (* y00 y00 y00)))
 (let ((?x1060 (* 16 ?x1059)))
 (let ((?x930 (* (- 4) (* y y y))))
 (let ((?x878 (* 108 (* x x))))
 (let ((?x628 (* y y)))
 (let ((?x873 (* 24 ?x628)))
 (let ((?x616 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x873 ?x878 ?x930 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1060 (* (- 6) (* z00 y y)) ?x1125 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1372 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x666 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x609 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2317 (* 18 (* x00 z))))
 (let ((?x957 (* (- 36) ?x654)))
 (let ((?x499 (* z y)))
 (let ((?x726 (* (- 12) ?x499)))
 (let ((?x733 (* y00 z)))
 (let ((?x701 (* 12 ?x733)))
 (let ((?x1178 (* (- 18) (* z x))))
 (let ((?x649 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1178 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x701 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x726 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x957 ?x2317 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x609 (* 18 (* y00 x)) ?x71 ?x666 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x683 (* (- 24) ?x654)))
 (let ((?x631 (* 12 ?x628)))
 (let ((?x779 (+ (* (- 1) (* y00 z00 z)) ?x726 ?x1178 (* 18 (* x00 z00)) ?x631 ?x683 ?x2317 ?x701 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x609 (* (- 6) (* z00 y)) ?x71 ?x666 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x446 (* z00 z00)))
 (let ((?x550 (* 6 ?x446)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x539 (* (- 1) ?x55)))
 (let ((?x2674 (+ (* (- 6) ?x499) ?x539 ?x550 (* (- 12) ?x733) (* 18 (* y00 z00)) ?x64 ?x609 (* (- 6) (* z00 z)) ?x71 ?x666 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x447 (* (- 1) ?x446)))
 (let (($x1977 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x447 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x2674 0) (= ?x779 0) (= ?x649 0) (= ?x616 0) (not (= ?x3324 0)))))
 (let ((?x219 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x370 (* 2 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x353 (* 2 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00 z00)))
 (let ((?x261 (* 2 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x220 (* 2 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00 z00)))
 (let ((?x222 (+ (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00) ?x220 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x228 (+ (- ?x222 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00)) (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219) (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x232 (- (- ?x228 (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x237 (- (+ ?x232 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217)) (* 2 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x238 (- ?x237 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x240 (+ ?x238 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x245 (+ (- ?x240 (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00)) (* 216 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219) (* 216 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x247 (- ?x245 (* 6 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x251 (+ ?x247 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00) (* 36 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 18 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x256 (- (- ?x251 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217)) (* 4 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x260 (+ (- ?x256 (* 216 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219)) (* 60 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x264 (- (- ?x260 ?x261) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x266 (+ ?x264 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x268 (- ?x266 (* ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x270 (+ ?x268 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x272 (- ?x270 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x274 (+ ?x272 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x276 (- ?x274 (* 4 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x281 (+ ?x276 (* 108 ?x215 ?x216 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219) (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x285 (- ?x281 (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x286 (- ?x285 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00 z00))))
 (let ((?x287 (- ?x286 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x292 (- (+ ?x287 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 36 ?x215 ?x215 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x297 (+ (- ?x292 (* 120 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219)) (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00) (* 16 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 y00) (* 96 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00))))
 (let ((?x300 (- ?x297 (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x301 (- ?x300 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x305 (+ ?x301 (* 216 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x219 ?x219) (* 108 ?x215 ?x215 ?x216 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x307 (- ?x305 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00))))
 (let ((?x309 (+ ?x307 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x311 (- ?x309 (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00))))
 (let ((?x314 (+ ?x311 (* 96 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 z00 z00 z00))))
 (let ((?x318 (- (- ?x314 (* 120 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00)) (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x320 (+ ?x318 (* 36 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x322 (- ?x320 (* 216 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x324 (+ ?x322 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00))))
 (let ((?x328 (- ?x324 (* 36 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 y00 z00))))
 (let ((?x329 (- ?x328 (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x330 (- ?x329 (* 2 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x332 (+ ?x330 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x337 (+ (- ?x332 (* 108 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219)) (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 10 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x339 (- ?x337 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00 z00 z00))))
 (let ((?x341 (+ ?x339 (* 10 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x344 (- ?x341 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x345 (- ?x344 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00 z00 z00))))
 (let ((?x347 (+ ?x345 (* 16 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219))))
 (let ((?x351 (- (- ?x347 (* 216 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00)) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x354 (+ ?x351 (* 16 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 y00 ?x219 ?x219) ?x353)))
 (let ((?x357 (- ?x354 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00))))
 (let ((?x358 (- ?x357 (* 18 ?x215 ?x215 ?x216 x00 ?x217 ?x217 ?x219 ?x219 z00 z00))))
 (let ((?x361 (+ ?x358 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217) (* 108 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x366 (- ?x361 (* 4 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x367 (- ?x366 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 z00))))
 (let ((?x368 (- ?x367 (* 36 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00))))
 (let ((?x369 (- ?x368 (* 12 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let ((?x374 (+ ?x369 ?x370 (* 18 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219 z00) (* 108 ?x215 ?x215 ?x216 x00 x00 ?x217 ?x217 ?x219 ?x219) (* 96 ?x215 ?x215 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219))))
 (let ((?x379 (- ?x374 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x219 ?x219 z00 z00))))
 (let ((?x380 (- ?x379 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x219 ?x219))))
 (let ((?x381 (- ?x380 (* 10 ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00))))
 (let ((?x384 (+ (- ?x381 (* 36 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x219 ?x219 z00)) (* ?x215 ?x215 ?x216 ?x217 ?x217 y00 ?x219 ?x219 z00 z00 z00))))
 (let ((?x387 (- ?x384 (* 120 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x219 ?x219))))
 (let (($x389 (= (- ?x387 (* 24 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x219 ?x219 z00)) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x392 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x389)))))
 (rewrite (= $x392 $x1977)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x394 (asserted $x393)))
 (let ((@x3242 (mp (mp @x394 (quant-intro (proof-bind ?x1889) (= $x393 $x1456)) $x1456) (rewrite (= $x1456 $x1456)) $x1456)))
 (let ((@x3273 (mp~ (mp @x3242 (quant-intro (proof-bind ?x2220) (= $x1456 $x2217)) $x2217) (sk (~ $x2217 $x1023)) $x1023)))
 (let ((@x1541 (mp @x3273 (rewrite (= $x1023 $x1587)) $x1587)))
 (let ((@x673 (and-elim @x1541 $x1288)))
 (let ((@x2696 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1288) $x580)) @x673 $x580)))
 (let (($x734 (>= ?x2168 0)))
 (let ((@x2503 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1288) $x734)) @x673 $x734)))
 (let (($x1417 (<= ?x2909 0)))
 (let ((@x2701 (and-elim @x1541 $x2910)))
 (let ((@x2308 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2910) $x1417)) @x2701 $x1417)))
 (let (($x968 (>= ?x2909 0)))
 (let ((@x576 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2910) $x968)) @x2701 $x968)))
 (let (($x1963 (<= ?x3294 0)))
 (let ((@x2591 (and-elim @x1541 $x3295)))
 (let ((@x2727 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3295) $x1963)) @x2591 $x1963)))
 (let (($x1976 (>= ?x3294 0)))
 (let ((@x3029 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3295) $x1976)) @x2591 $x1976)))
 (let (($x980 (<= ?x2521 0)))
 (let ((@x2641 (and-elim @x1541 $x2519)))
 (let ((@x1248 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2519) $x980)) @x2641 $x980)))
 (let (($x817 (>= ?x2521 0)))
 (let ((@x2097 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2519) $x817)) @x2641 $x817)))
 (let (($x1485 (<= ?x651 0)))
 (let ((@x2600 (and-elim @x1541 $x660)))
 (let ((@x2067 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x660) $x1485)) @x2600 $x1485)))
 (let (($x2054 (>= ?x651 0)))
 (let ((@x605 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x660) $x2054)) @x2600 $x2054)))
 (let (($x606 (<= ?x3061 0)))
 (let ((@x2669 (and-elim @x1541 $x3063)))
 (let ((@x999 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3063) $x606)) @x2669 $x606)))
 (let (($x2542 (>= ?x3061 0)))
 (let ((@x2624 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3063) $x2542)) @x2669 $x2542)))
 (let (($x3281 (not (<= ?x589 0))))
 (let (($x585 (>= ?x589 0)))
 (let ((@x1690 ((_ th-lemma arith) (hypothesis (not $x585)) @x3029 @x2727 @x2624 @x999 @x2503 @x2696 @x3029 @x2727 @x2624 @x999 @x2624 @x999 @x605 @x2067 @x605 @x2067 @x576 @x2308 @x605 @x2067 @x2097 @x1248 @x576 @x2308 @x3029 @x2727 @x576 @x2308 @x2503 @x2696 false)))
 (let ((@x2800 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x776 $x3281 (not $x585))) (and-elim @x1541 $x2664) (or $x3281 (not $x585)))))
 ((_ th-lemma arith) (unit-resolution @x2800 (lemma @x1690 $x585) $x3281) @x3029 @x2727 @x2624 @x999 @x2503 @x2696 @x3029 @x2727 @x2624 @x999 @x2624 @x999 @x605 @x2067 @x605 @x2067 @x576 @x2308 @x605 @x2067 @x2097 @x1248 @x576 @x2308 @x3029 @x2727 @x576 @x2308 @x2503 @x2696 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        38
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-grobner             2
 :arith-max-min             1194
 :arith-nonlinear-bounds    30
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              7
 :arith-row-summations      12
 :arith-tableau-max-columns 196
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                20.84
 :memory                    19.39
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                18977815
 :num-checks                1
 :propagations              14
 :rlimit-count              139634
 :time                      0.10
 :total-time                0.13)
