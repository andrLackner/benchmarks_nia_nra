unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x427 (* (- 1) k!2)))
 (let ((?x300 (+ (* 3 (* n!0 n!0)) (* 3 n!0) ?x427)))
 (let (($x1458 (<= ?x300 (- 1))))
 (let (($x500 (= ?x300 (- 1))))
 (let ((?x1048 (+ c!3 k!2)))
 (let ((?x1306 (+ 6 m!1)))
 (let ((?x460 (+ 1 n!0)))
 (let ((?x1391 (* ?x460 ?x460 ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)))
 (let ((?x568 (+ k!2 m!1)))
 (let ((?x1091 (* ?x460 ?x460 ?x1306 ?x568 ?x568 ?x1048)))
 (let ((?x1088 (* k!2 k!2 k!2 k!2 m!1)))
 (let ((?x1042 (* ?x460 ?x460 ?x1306 ?x1306 ?x1306 ?x568 ?x1048 ?x1048 ?x1048)))
 (let ((?x393 (* m!1 m!1 m!1 m!1 m!1)))
 (let ((?x305 (* ?x1306 ?x1306 ?x1306 ?x568 ?x1048 ?x1048 ?x1048)))
 (let ((?x538 (+ (* 168 (* n!0 n!0)) (* 4 (* k!2 m!1 m!1 m!1 m!1)) (* 3 (* ?x460 ?x460 ?x460 ?x1306 ?x568 ?x568 ?x1048)) (* 138 n!0) (* (- 24) (* m!1 m!1 m!1)) (* 18 (* n!0 n!0 n!0 n!0)) (* (- 3) (* ?x460 ?x460 ?x1306 ?x568 ?x568 ?x568)) (* 90 (* n!0 n!0 n!0)) (* 3 (* ?x460 ?x460 ?x460 ?x460 ?x1306 ?x568 ?x568 ?x1048)) (* (- 72) (* k!2 m!1 m!1)) (* (- 6) k!2) (* 6 (* k!2 k!2 k!2 k!2)) (* 4 (* k!2 k!2 k!2 m!1 m!1)) ?x305 m!1 ?x393 (* (- 3) (* n!0 m!1 m!1 m!1 m!1)) (* 11 (* n!0 m!1)) (* (- 9) (* n!0 k!2 m!1 m!1 m!1)) (* (- 18) (* n!0 m!1 m!1 m!1)) (* 6 (* k!2 k!2 m!1 m!1 m!1)) (* (- 12) (* n!0 k!2)) (* 2 (* m!1 m!1 m!1 m!1)) (* (- 3) (* ?x460 ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)) (* (- 24) (* k!2 k!2 k!2)) (* (- 18) (* n!0 k!2 k!2 k!2)) (* (- 3) (* ?x460 ?x460 ?x460 ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)) (* (- 1) (* m!1 m!1)) (* 20 (* k!2 k!2 k!2 m!1)) (* 12 (* k!2 m!1 m!1 m!1)) (* (- 1) (* ?x460 ?x460 ?x1306 ?x568 ?x568 ?x568 ?x1048)) (* (- 54) (* n!0 k!2 m!1 m!1)) (* (- 9) (* n!0 k!2 k!2 m!1 m!1)) (* 22 (* n!0 n!0 m!1)) (* 15 (* n!0 n!0 n!0 m!1)) (* (- 1) (* n!0 n!0 k!2 m!1)) (* (- 2) (* n!0 k!2 m!1)) (* (- 2) (* n!0 m!1 m!1)) (* (- 6) (* n!0 n!0 k!2)) ?x1042 ?x1088 ?x1091 (* (- 1) (* n!0 n!0 m!1 m!1)) (* (- 3) (* n!0 k!2 k!2 k!2 m!1)) (* 24 (* k!2 k!2 m!1 m!1)) (* (- 1) (* k!2 m!1)) (* (- 54) (* n!0 k!2 k!2 m!1)) (* (- 3) (* ?x460 ?x460 ?x460 ?x460 ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)) (* (- 1) (* ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)) (* (- 4) ?x1391) (* (- 72) (* k!2 k!2 m!1)) (* 3 (* n!0 n!0 n!0 n!0 m!1)))))
 (let (($x540 (= ?x538 (- 42))))
 (let (($x539 (not $x540)))
 (let ((?x515 (* n!0 k!2)))
 (let ((?x428 (+ (* 2 n!0) (* (- 3) c!3) ?x427 ?x515)))
 (let (($x360 (= ?x428 (- 1))))
 (let ((?x1374 (* k!2 k!2)))
 (let ((?x284 (+ (* 9 n!0) (* (- 9) (* n!0 c!3)) (* (- 18) c!3) (* (- 5) k!2) ?x1374)))
 (let (($x145 (= ?x284 (- 4))))
 (let ((?x473 (* (- 1) m!1)))
 (let ((?x1118 (+ (* 6 n!0) ?x473)))
 (let (($x270 (= ?x1118 (- 6))))
 (let (($x1448 (and $x270 $x145 $x360 $x500 $x539)))
 (let ((?x636 (* ?x460 ?x460 ?x1306 ?x568 ?x568 ?x568 ?x1048)))
 (let ((?x631 (* m!1 m!1)))
 (let ((?x1251 (* k!2 m!1)))
 (let ((?x1333 (* ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)))
 (let ((?x369 (+ (* 6 k!2) ?x473 (* (- 138) n!0) (* 12 (* k!2 n!0)) (* (- 3) (* ?x460 ?x460 ?x460 ?x1306 ?x568 ?x568 ?x1048)) (* (- 168) (* n!0 n!0)) (* 18 (* m!1 m!1 m!1 n!0)) (* (- 1) ?x305) ?x1333 (* (- 90) (* n!0 n!0 n!0)) (* (- 18) (* n!0 n!0 n!0 n!0)) (* (- 3) (* m!1 n!0 n!0 n!0 n!0)) (* (- 1) ?x1091) (* (- 15) (* m!1 n!0 n!0 n!0)) (* (- 11) (* m!1 n!0)) (* (- 22) (* m!1 n!0 n!0)) (* 3 (* m!1 m!1 m!1 m!1 n!0)) (* 9 (* k!2 m!1 m!1 m!1 n!0)) (* 9 (* k!2 k!2 m!1 m!1 n!0)) (* 3 (* k!2 k!2 k!2 m!1 n!0)) (* 54 (* k!2 k!2 m!1 n!0)) (* (- 1) ?x1088) (* 3 (* ?x460 ?x460 ?x1306 ?x568 ?x568 ?x568)) (* 6 (* k!2 n!0 n!0)) (* 2 (* k!2 m!1 n!0)) (* 2 (* m!1 m!1 n!0)) ?x1251 ?x631 (* m!1 m!1 n!0 n!0) (* k!2 m!1 n!0 n!0) (* (- 1) ?x1042) (* 4 ?x1391) (* (- 24) (* k!2 k!2 m!1 m!1)) (* (- 12) (* k!2 m!1 m!1 m!1)) ?x636 (* 18 (* k!2 k!2 k!2 n!0)) (* (- 4) (* k!2 k!2 k!2 m!1 m!1)) (* 3 (* ?x460 ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)) (* (- 6) (* k!2 k!2 m!1 m!1 m!1)) (* (- 1) ?x393) (* (- 4) (* k!2 m!1 m!1 m!1 m!1)) (* (- 6) (* k!2 k!2 k!2 k!2)) (* (- 20) (* k!2 k!2 k!2 m!1)) (* (- 3) (* ?x460 ?x460 ?x460 ?x460 ?x1306 ?x568 ?x568 ?x1048)) (* (- 2) (* m!1 m!1 m!1 m!1)) (* 3 (* ?x460 ?x460 ?x460 ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)) (* 3 (* ?x460 ?x460 ?x460 ?x460 ?x1306 ?x1306 ?x1306 ?x1048 ?x1048 ?x1048)) (* 72 (* k!2 m!1 m!1)) (* 72 (* k!2 k!2 m!1)) (* 24 (* k!2 k!2 k!2)) (* 54 (* k!2 m!1 m!1 n!0)) (* 24 (* m!1 m!1 m!1)))))
 (let (($x1113 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x296 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1374) (* 9 (* c!3 n!0)))))
 (let (($x349 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x296 4) $x1113 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x369 42)))))
 (let (($x550 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1437 (* m m m)))
 (let ((?x1086 (* 24 ?x1437)))
 (let ((?x1081 (* 54 (* k m m n))))
 (let ((?x1403 (* k k k)))
 (let ((?x1025 (* 24 ?x1403)))
 (let ((?x1395 (* k k m)))
 (let ((?x1023 (* 72 ?x1395)))
 (let ((?x1377 (* k m m)))
 (let ((?x1030 (* 72 ?x1377)))
 (let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1284 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1285 (* 3 ?x1284)))
 (let ((?x1279 (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1225 (* 3 ?x1279)))
 (let ((?x1270 (* m m m m)))
 (let ((?x1017 (* (- 2) ?x1270)))
 (let ((?x77 (+ k m)))
 (let ((?x1265 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x344 (* (- 3) ?x1265)))
 (let ((?x1352 (* (- 6) (* k k k k))))
 (let ((?x1349 (* (- 4) (* k m m m m))))
 (let ((?x1328 (* (- 1) (* m m m m m))))
 (let ((?x1346 (* (- 6) (* k k m m m))))
 (let ((?x1231 (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1290 (* 3 ?x1231)))
 (let ((?x1343 (* (- 4) (* k k k m m))))
 (let ((?x1020 (* 18 (* k k k n))))
 (let ((?x1194 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)))
 (let ((?x1150 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1154 (* 4 ?x1150)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1132 (* (- 1) ?x1136)))
 (let ((?x1090 (* k m n n)))
 (let ((?x1083 (* m m n n)))
 (let ((?x1074 (* m m)))
 (let ((?x1071 (* k m)))
 (let ((?x1031 (* 2 (* m m n))))
 (let ((?x1038 (* 2 (* k m n))))
 (let ((?x1050 (* 6 (* k n n))))
 (let ((?x1016 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)))
 (let ((?x1274 (* 3 ?x1016)))
 (let ((?x1323 (* (- 1) (* k k k k m))))
 (let ((?x1217 (* 54 (* k k m n))))
 (let ((?x732 (* 3 (* k k k m n))))
 (let ((?x725 (* k k m m n)))
 (let ((?x1218 (* 9 ?x725)))
 (let ((?x721 (* k m m m n)))
 (let ((?x1221 (* 9 ?x721)))
 (let ((?x718 (* 3 (* m m m m n))))
 (let ((?x576 (* m n n)))
 (let ((?x1011 (* (- 22) ?x576)))
 (let ((?x570 (* m n)))
 (let ((?x1212 (* (- 11) ?x570)))
 (let ((?x493 (* m n n n)))
 (let ((?x1119 (* (- 15) ?x493)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x489 (* (- 1) ?x483)))
 (let ((?x411 (* (- 3) (* m n n n n))))
 (let ((?x450 (* (- 18) (* n n n n))))
 (let ((?x610 (* (- 90) (* n n n))))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x368 (* (- 1) ?x358)))
 (let ((?x1124 (* 18 (* m m m n))))
 (let ((?x285 (* n n)))
 (let ((?x699 (* (- 168) ?x285)))
 (let ((?x246 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1382 (* (- 3) ?x246)))
 (let ((?x55 (* k n)))
 (let ((?x1040 (* 12 ?x55)))
 (let ((?x697 (* (- 138) n)))
 (let ((?x1258 (* (- 1) m)))
 (let ((?x1077 (* 6 k)))
 (let ((?x363 (+ ?x1077 ?x1258 ?x697 ?x1040 ?x1382 ?x699 ?x1124 ?x368 ?x394 ?x610 ?x450 ?x411 ?x489 ?x1119 ?x1212 ?x1011 ?x718 ?x1221 ?x1218 ?x732 ?x1217 ?x1323 ?x1274 ?x1050 ?x1038 ?x1031 ?x1071 ?x1074 ?x1083 ?x1090 ?x1132 ?x1154 (* (- 24) (* k k m m)) (* (- 12) (* k m m m)) ?x1194 ?x1020 ?x1343 ?x1290 ?x1346 ?x1328 ?x1349 ?x1352 (* (- 20) (* k k k m)) ?x344 ?x1017 ?x1225 ?x1285 ?x1030 ?x1023 ?x1025 ?x1081 ?x1086)))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) ?x285)) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 $x224 $x276 $x314 (not (= ?x363 42)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x152 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1437 (* m m m)))
 (let ((?x1086 (* 24 ?x1437)))
 (let ((?x1081 (* 54 (* k m m n))))
 (let ((?x1403 (* k k k)))
 (let ((?x1025 (* 24 ?x1403)))
 (let ((?x1395 (* k k m)))
 (let ((?x1023 (* 72 ?x1395)))
 (let ((?x1377 (* k m m)))
 (let ((?x1030 (* 72 ?x1377)))
 (let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1284 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1285 (* 3 ?x1284)))
 (let ((?x1279 (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1225 (* 3 ?x1279)))
 (let ((?x1270 (* m m m m)))
 (let ((?x1017 (* (- 2) ?x1270)))
 (let ((?x77 (+ k m)))
 (let ((?x1265 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x344 (* (- 3) ?x1265)))
 (let ((?x1352 (* (- 6) (* k k k k))))
 (let ((?x1349 (* (- 4) (* k m m m m))))
 (let ((?x1328 (* (- 1) (* m m m m m))))
 (let ((?x1346 (* (- 6) (* k k m m m))))
 (let ((?x1231 (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1290 (* 3 ?x1231)))
 (let ((?x1343 (* (- 4) (* k k k m m))))
 (let ((?x1020 (* 18 (* k k k n))))
 (let ((?x1194 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)))
 (let ((?x1150 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1154 (* 4 ?x1150)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1132 (* (- 1) ?x1136)))
 (let ((?x1090 (* k m n n)))
 (let ((?x1083 (* m m n n)))
 (let ((?x1074 (* m m)))
 (let ((?x1071 (* k m)))
 (let ((?x1031 (* 2 (* m m n))))
 (let ((?x1038 (* 2 (* k m n))))
 (let ((?x1050 (* 6 (* k n n))))
 (let ((?x1016 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)))
 (let ((?x1274 (* 3 ?x1016)))
 (let ((?x1323 (* (- 1) (* k k k k m))))
 (let ((?x1217 (* 54 (* k k m n))))
 (let ((?x732 (* 3 (* k k k m n))))
 (let ((?x725 (* k k m m n)))
 (let ((?x1218 (* 9 ?x725)))
 (let ((?x721 (* k m m m n)))
 (let ((?x1221 (* 9 ?x721)))
 (let ((?x718 (* 3 (* m m m m n))))
 (let ((?x576 (* m n n)))
 (let ((?x1011 (* (- 22) ?x576)))
 (let ((?x570 (* m n)))
 (let ((?x1212 (* (- 11) ?x570)))
 (let ((?x493 (* m n n n)))
 (let ((?x1119 (* (- 15) ?x493)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x489 (* (- 1) ?x483)))
 (let ((?x411 (* (- 3) (* m n n n n))))
 (let ((?x450 (* (- 18) (* n n n n))))
 (let ((?x610 (* (- 90) (* n n n))))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x368 (* (- 1) ?x358)))
 (let ((?x1124 (* 18 (* m m m n))))
 (let ((?x285 (* n n)))
 (let ((?x699 (* (- 168) ?x285)))
 (let ((?x246 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1382 (* (- 3) ?x246)))
 (let ((?x55 (* k n)))
 (let ((?x1040 (* 12 ?x55)))
 (let ((?x697 (* (- 138) n)))
 (let ((?x1258 (* (- 1) m)))
 (let ((?x1077 (* 6 k)))
 (let ((?x1079 (+ ?x1077 ?x1258 ?x697 ?x1040 (* (- 6) (* m k k k)) (* (- 6) (* m m k k)) (* (- 6) (* k m k k)) ?x1382 ?x699 (* (- 6) (* k m k m)) (* (- 6) (* k m m k)) (* (- 6) (* k k m k)) ?x1124 ?x368 ?x394 ?x610 ?x450 ?x411 ?x489 ?x1119 ?x1212 ?x1011 ?x718 ?x1221 ?x1218 ?x732 ?x1217 ?x1323 ?x1274 (* (- 6) (* m k m k)) ?x1050 ?x1038 ?x1031 ?x1071 ?x1074 ?x1083 ?x1090 ?x1132 ?x1154 (* 6 (* k k m m)) (* 6 (* k m m m)) ?x1194 ?x1020 (* (- 6) (* m k m m)) ?x1343 (* (- 6) (* m m k m)) ?x1290 ?x1346 ?x1328 ?x1349 ?x1352 (* (- 2) (* k k k m)) ?x344 ?x1017 ?x1225 ?x1285 (* (- 6) (* m k k m)) (* (- 6) (* m m m k)) ?x1030 ?x1023 ?x1025 ?x1081 ?x1086)))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) ?x285)) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 $x224 $x276 $x314 (not (= ?x1079 42)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x551 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1437 (* m m m)))
 (let ((?x1086 (* 24 ?x1437)))
 (let ((?x1081 (* 54 (* k m m n))))
 (let ((?x1403 (* k k k)))
 (let ((?x1025 (* 24 ?x1403)))
 (let ((?x1395 (* k k m)))
 (let ((?x1023 (* 72 ?x1395)))
 (let ((?x1377 (* k m m)))
 (let ((?x1030 (* 72 ?x1377)))
 (let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1284 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1285 (* 3 ?x1284)))
 (let ((?x1279 (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1225 (* 3 ?x1279)))
 (let ((?x1270 (* m m m m)))
 (let ((?x1017 (* (- 2) ?x1270)))
 (let ((?x77 (+ k m)))
 (let ((?x1265 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x344 (* (- 3) ?x1265)))
 (let ((?x1352 (* (- 6) (* k k k k))))
 (let ((?x1349 (* (- 4) (* k m m m m))))
 (let ((?x1328 (* (- 1) (* m m m m m))))
 (let ((?x1346 (* (- 6) (* k k m m m))))
 (let ((?x1231 (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1290 (* 3 ?x1231)))
 (let ((?x1343 (* (- 4) (* k k k m m))))
 (let ((?x1020 (* 18 (* k k k n))))
 (let ((?x1194 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)))
 (let ((?x1150 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1154 (* 4 ?x1150)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1132 (* (- 1) ?x1136)))
 (let ((?x1090 (* k m n n)))
 (let ((?x1083 (* m m n n)))
 (let ((?x1074 (* m m)))
 (let ((?x1071 (* k m)))
 (let ((?x1031 (* 2 (* m m n))))
 (let ((?x1038 (* 2 (* k m n))))
 (let ((?x1050 (* 6 (* k n n))))
 (let ((?x1016 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)))
 (let ((?x1274 (* 3 ?x1016)))
 (let ((?x1323 (* (- 1) (* k k k k m))))
 (let ((?x1217 (* 54 (* k k m n))))
 (let ((?x732 (* 3 (* k k k m n))))
 (let ((?x725 (* k k m m n)))
 (let ((?x1218 (* 9 ?x725)))
 (let ((?x721 (* k m m m n)))
 (let ((?x1221 (* 9 ?x721)))
 (let ((?x718 (* 3 (* m m m m n))))
 (let ((?x576 (* m n n)))
 (let ((?x1011 (* (- 22) ?x576)))
 (let ((?x570 (* m n)))
 (let ((?x1212 (* (- 11) ?x570)))
 (let ((?x493 (* m n n n)))
 (let ((?x1119 (* (- 15) ?x493)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x489 (* (- 1) ?x483)))
 (let ((?x411 (* (- 3) (* m n n n n))))
 (let ((?x450 (* (- 18) (* n n n n))))
 (let ((?x610 (* (- 90) (* n n n))))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x368 (* (- 1) ?x358)))
 (let ((?x1124 (* 18 (* m m m n))))
 (let ((?x285 (* n n)))
 (let ((?x699 (* (- 168) ?x285)))
 (let ((?x246 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1382 (* (- 3) ?x246)))
 (let ((?x55 (* k n)))
 (let ((?x1040 (* 12 ?x55)))
 (let ((?x697 (* (- 138) n)))
 (let ((?x1258 (* (- 1) m)))
 (let ((?x1077 (* 6 k)))
 (let ((?x363 (+ ?x1077 ?x1258 ?x697 ?x1040 ?x1382 ?x699 ?x1124 ?x368 ?x394 ?x610 ?x450 ?x411 ?x489 ?x1119 ?x1212 ?x1011 ?x718 ?x1221 ?x1218 ?x732 ?x1217 ?x1323 ?x1274 ?x1050 ?x1038 ?x1031 ?x1071 ?x1074 ?x1083 ?x1090 ?x1132 ?x1154 (* (- 24) (* k k m m)) (* (- 12) (* k m m m)) ?x1194 ?x1020 ?x1343 ?x1290 ?x1346 ?x1328 ?x1349 ?x1352 (* (- 20) (* k k k m)) ?x344 ?x1017 ?x1225 ?x1285 ?x1030 ?x1023 ?x1025 ?x1081 ?x1086)))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) ?x285)) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x593 (and $x140 $x224 $x276 $x314 (not (= ?x363 42)))))
 (let ((?x1079 (+ ?x1077 ?x1258 ?x697 ?x1040 (* (- 6) (* m k k k)) (* (- 6) (* m m k k)) (* (- 6) (* k m k k)) ?x1382 ?x699 (* (- 6) (* k m k m)) (* (- 6) (* k m m k)) (* (- 6) (* k k m k)) ?x1124 ?x368 ?x394 ?x610 ?x450 ?x411 ?x489 ?x1119 ?x1212 ?x1011 ?x718 ?x1221 ?x1218 ?x732 ?x1217 ?x1323 ?x1274 (* (- 6) (* m k m k)) ?x1050 ?x1038 ?x1031 ?x1071 ?x1074 ?x1083 ?x1090 ?x1132 ?x1154 (* 6 (* k k m m)) (* 6 (* k m m m)) ?x1194 ?x1020 (* (- 6) (* m k m m)) ?x1343 (* (- 6) (* m m k m)) ?x1290 ?x1346 ?x1328 ?x1349 ?x1352 (* (- 2) (* k k k m)) ?x344 ?x1017 ?x1225 ?x1285 (* (- 6) (* m k k m)) (* (- 6) (* m m m k)) ?x1030 ?x1023 ?x1025 ?x1081 ?x1086)))
 (let (($x132 (and $x140 $x224 $x276 $x314 (not (= ?x1079 42)))))
 (rewrite (= $x132 $x593)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1361 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x77 (+ k m)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x529 (* ?x324 ?x77 ?x77 ?x77 ?x77)))
 (let ((?x327 (+ 1 n)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1174 (* ?x327 ?x327 ?x324)))
 (let ((?x1173 (+ (* 3 (* ?x327 ?x327 ?x327 ?x327 ?x324)) (* 3 (* ?x327 ?x327 ?x327 ?x324)) ?x1174 (* (- 1) (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)) (* (- 3) (* ?x327 ?x324 ?x77 ?x77 ?x77)) (* (- 4) (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) ?x1136 (* (- 3) (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)) (* (- 3) (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) (* (- 3) (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) (* (- 3) (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) (* (- 1) (* ?x327 ?x327 ?x324 ?x77)) (* 3 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)) (* 3 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)) ?x483 ?x529 ?x358 (* (- 1) (* ?x324 ?x77 ?x77 ?x77)) (* (- 1) ?x394))))
 (let (($x1332 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x505 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x505 $x1332 (not (= ?x1173 0)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x190 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1437 (* m m m)))
 (let ((?x1086 (* 24 ?x1437)))
 (let ((?x1081 (* 54 (* k m m n))))
 (let ((?x1403 (* k k k)))
 (let ((?x1025 (* 24 ?x1403)))
 (let ((?x1395 (* k k m)))
 (let ((?x1023 (* 72 ?x1395)))
 (let ((?x1377 (* k m m)))
 (let ((?x1030 (* 72 ?x1377)))
 (let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x327 (+ 1 n)))
 (let ((?x1284 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1285 (* 3 ?x1284)))
 (let ((?x1279 (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1225 (* 3 ?x1279)))
 (let ((?x1270 (* m m m m)))
 (let ((?x1017 (* (- 2) ?x1270)))
 (let ((?x77 (+ k m)))
 (let ((?x1265 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x344 (* (- 3) ?x1265)))
 (let ((?x1352 (* (- 6) (* k k k k))))
 (let ((?x1349 (* (- 4) (* k m m m m))))
 (let ((?x1328 (* (- 1) (* m m m m m))))
 (let ((?x1346 (* (- 6) (* k k m m m))))
 (let ((?x1231 (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1290 (* 3 ?x1231)))
 (let ((?x1343 (* (- 4) (* k k k m m))))
 (let ((?x1020 (* 18 (* k k k n))))
 (let ((?x1194 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)))
 (let ((?x1150 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1154 (* 4 ?x1150)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1132 (* (- 1) ?x1136)))
 (let ((?x1090 (* k m n n)))
 (let ((?x1083 (* m m n n)))
 (let ((?x1074 (* m m)))
 (let ((?x1071 (* k m)))
 (let ((?x1031 (* 2 (* m m n))))
 (let ((?x1038 (* 2 (* k m n))))
 (let ((?x1050 (* 6 (* k n n))))
 (let ((?x1016 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)))
 (let ((?x1274 (* 3 ?x1016)))
 (let ((?x1323 (* (- 1) (* k k k k m))))
 (let ((?x1217 (* 54 (* k k m n))))
 (let ((?x732 (* 3 (* k k k m n))))
 (let ((?x725 (* k k m m n)))
 (let ((?x1218 (* 9 ?x725)))
 (let ((?x721 (* k m m m n)))
 (let ((?x1221 (* 9 ?x721)))
 (let ((?x718 (* 3 (* m m m m n))))
 (let ((?x576 (* m n n)))
 (let ((?x1011 (* (- 22) ?x576)))
 (let ((?x570 (* m n)))
 (let ((?x1212 (* (- 11) ?x570)))
 (let ((?x493 (* m n n n)))
 (let ((?x1119 (* (- 15) ?x493)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x489 (* (- 1) ?x483)))
 (let ((?x411 (* (- 3) (* m n n n n))))
 (let ((?x450 (* (- 18) (* n n n n))))
 (let ((?x610 (* (- 90) (* n n n))))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x368 (* (- 1) ?x358)))
 (let ((?x1124 (* 18 (* m m m n))))
 (let ((?x285 (* n n)))
 (let ((?x699 (* (- 168) ?x285)))
 (let ((?x246 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1382 (* (- 3) ?x246)))
 (let ((?x55 (* k n)))
 (let ((?x1040 (* 12 ?x55)))
 (let ((?x697 (* (- 138) n)))
 (let ((?x1258 (* (- 1) m)))
 (let ((?x1077 (* 6 k)))
 (let ((?x1079 (+ ?x1077 ?x1258 ?x697 ?x1040 (* (- 6) (* m k k k)) (* (- 6) (* m m k k)) (* (- 6) (* k m k k)) ?x1382 ?x699 (* (- 6) (* k m k m)) (* (- 6) (* k m m k)) (* (- 6) (* k k m k)) ?x1124 ?x368 ?x394 ?x610 ?x450 ?x411 ?x489 ?x1119 ?x1212 ?x1011 ?x718 ?x1221 ?x1218 ?x732 ?x1217 ?x1323 ?x1274 (* (- 6) (* m k m k)) ?x1050 ?x1038 ?x1031 ?x1071 ?x1074 ?x1083 ?x1090 ?x1132 ?x1154 (* 6 (* k k m m)) (* 6 (* k m m m)) ?x1194 ?x1020 (* (- 6) (* m k m m)) ?x1343 (* (- 6) (* m m k m)) ?x1290 ?x1346 ?x1328 ?x1349 ?x1352 (* (- 2) (* k k k m)) ?x344 ?x1017 ?x1225 ?x1285 (* (- 6) (* m k k m)) (* (- 6) (* m m m k)) ?x1030 ?x1023 ?x1025 ?x1081 ?x1086)))
 (let (($x314 (= (+ k (* (- 3) n) (* (- 3) ?x285)) 1)))
 (let (($x276 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x224 (= (+ ?x40 ?x44 ?x226 ?x227 (* 9 (* c n))) 4)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x132 (and $x140 $x224 $x276 $x314 (not (= ?x1079 42)))))
 (let ((?x529 (* ?x324 ?x77 ?x77 ?x77 ?x77)))
 (let ((?x1174 (* ?x327 ?x327 ?x324)))
 (let ((?x1173 (+ (* 3 (* ?x327 ?x327 ?x327 ?x327 ?x324)) (* 3 (* ?x327 ?x327 ?x327 ?x324)) ?x1174 (* (- 1) ?x1194) (* (- 3) (* ?x327 ?x324 ?x77 ?x77 ?x77)) (* (- 4) ?x1150) ?x1136 (* (- 3) ?x1016) (* (- 3) ?x1279) (* (- 3) ?x1284) (* (- 3) ?x1231) (* (- 1) (* ?x327 ?x327 ?x324 ?x77)) (* 3 ?x246) (* 3 ?x1265) ?x483 ?x529 ?x358 (* (- 1) (* ?x324 ?x77 ?x77 ?x77)) (* (- 1) ?x394))))
 (let (($x1332 (= (+ (* 3 ?x285) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x505 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1209 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x505 $x1332 (not (= ?x1173 0)))))
 (rewrite (= $x1209 $x132)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1358 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x77 (+ k m)))
 (let ((?x440 (* ?x324 ?x77 ?x77 ?x77)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x368 (* (- 1) ?x358)))
 (let ((?x327 (+ 1 n)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x489 (* (- 1) ?x483)))
 (let ((?x1265 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x344 (* (- 3) ?x1265)))
 (let ((?x246 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1382 (* (- 3) ?x246)))
 (let ((?x1237 (* ?x327 ?x327 ?x324 ?x77)))
 (let ((?x1231 (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1290 (* 3 ?x1231)))
 (let ((?x1284 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1285 (* 3 ?x1284)))
 (let ((?x1279 (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1225 (* 3 ?x1279)))
 (let ((?x1016 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)))
 (let ((?x1274 (* 3 ?x1016)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1132 (* (- 1) ?x1136)))
 (let ((?x1150 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1154 (* 4 ?x1150)))
 (let ((?x1194 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)))
 (let ((?x404 (+ (* (- 3) (* ?x327 ?x327 ?x327 ?x327 ?x324)) (* (- 3) (* ?x327 ?x327 ?x327 ?x324)) (* (- 1) (* ?x327 ?x327 ?x324)) ?x1194 (* 3 (* ?x327 ?x324 ?x77 ?x77 ?x77)) ?x1154 ?x1132 ?x1274 ?x1225 ?x1285 ?x1290 ?x1237 ?x1382 ?x344 ?x489 (* (- 1) (* ?x324 ?x77 ?x77 ?x77 ?x77)) ?x368 ?x440 ?x394)))
 (let (($x1332 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x325 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x565 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (and $x140 (= ?x565 (- 4)) $x325 $x1332 (not (= ?x404 0)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x543 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x77 (+ k m)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x529 (* ?x324 ?x77 ?x77 ?x77 ?x77)))
 (let ((?x327 (+ 1 n)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1174 (* ?x327 ?x327 ?x324)))
 (let ((?x1173 (+ (* 3 (* ?x327 ?x327 ?x327 ?x327 ?x324)) (* 3 (* ?x327 ?x327 ?x327 ?x324)) ?x1174 (* (- 1) (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)) (* (- 3) (* ?x327 ?x324 ?x77 ?x77 ?x77)) (* (- 4) (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) ?x1136 (* (- 3) (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)) (* (- 3) (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) (* (- 3) (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) (* (- 3) (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)) (* (- 1) (* ?x327 ?x327 ?x324 ?x77)) (* 3 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)) (* 3 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)) ?x483 ?x529 ?x358 (* (- 1) (* ?x324 ?x77 ?x77 ?x77)) (* (- 1) ?x394))))
 (let (($x1332 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x505 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x227 (* (- 1) ?x49)))
 (let ((?x226 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x1209 (and $x140 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x226 ?x227) 4) $x505 $x1332 (not (= ?x1173 0)))))
 (let ((?x440 (* ?x324 ?x77 ?x77 ?x77)))
 (let ((?x368 (* (- 1) ?x358)))
 (let ((?x489 (* (- 1) ?x483)))
 (let ((?x1265 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x344 (* (- 3) ?x1265)))
 (let ((?x246 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1382 (* (- 3) ?x246)))
 (let ((?x1237 (* ?x327 ?x327 ?x324 ?x77)))
 (let ((?x1231 (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1290 (* 3 ?x1231)))
 (let ((?x1284 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1285 (* 3 ?x1284)))
 (let ((?x1279 (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1225 (* 3 ?x1279)))
 (let ((?x1016 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)))
 (let ((?x1274 (* 3 ?x1016)))
 (let ((?x1132 (* (- 1) ?x1136)))
 (let ((?x1150 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1154 (* 4 ?x1150)))
 (let ((?x1194 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)))
 (let ((?x404 (+ (* (- 3) (* ?x327 ?x327 ?x327 ?x327 ?x324)) (* (- 3) (* ?x327 ?x327 ?x327 ?x324)) (* (- 1) ?x1174) ?x1194 (* 3 (* ?x327 ?x324 ?x77 ?x77 ?x77)) ?x1154 ?x1132 ?x1274 ?x1225 ?x1285 ?x1290 ?x1237 ?x1382 ?x344 ?x489 (* (- 1) ?x529) ?x368 ?x440 ?x394)))
 (let (($x325 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x565 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1351 (and $x140 (= ?x565 (- 4)) $x325 $x1332 (not (= ?x404 0)))))
 (rewrite (= $x1351 $x1209))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ m 6)))
 (let ((?x76 (+ c k)))
 (let ((?x70 (+ n 1)))
 (let ((?x77 (+ k m)))
 (let ((?x74 (- (* (- 3) ?x69 ?x70 ?x70 ?x70 ?x70) (* 3 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x81 (+ (- ?x74 (* ?x69 ?x70 ?x70)) (* ?x76 ?x77 ?x77 ?x77 ?x69 ?x70 ?x70) (* 3 ?x77 ?x77 ?x77 ?x69 ?x70) (* 4 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x89 (+ (- ?x81 (* ?x76 ?x76 ?x76 ?x77 ?x69 ?x69 ?x69 ?x70 ?x70)) (* 3 ?x77 ?x77 ?x77 ?x69 ?x70 ?x70) (* 3 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70) (* 3 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70) (* 3 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70) (* ?x77 ?x69 ?x70 ?x70))))
 (let ((?x96 (- (- ?x89 (* 3 ?x76 ?x77 ?x77 ?x69 ?x70 ?x70 ?x70)) (* 3 ?x76 ?x77 ?x77 ?x69 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x98 (- (- ?x96 (* ?x76 ?x77 ?x77 ?x69 ?x70 ?x70)) (* ?x77 ?x77 ?x77 ?x77 ?x69))))
 (let ((?x102 (+ (- ?x98 (* ?x76 ?x76 ?x76 ?x77 ?x69 ?x69 ?x69)) (* ?x77 ?x77 ?x77 ?x69) (* ?x76 ?x76 ?x76 ?x69 ?x69 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x102 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x997 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x76 (+ c k)))
 (let ((?x324 (+ 6 m)))
 (let ((?x394 (* ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x77 (+ k m)))
 (let ((?x440 (* ?x324 ?x77 ?x77 ?x77)))
 (let ((?x358 (* ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x368 (* (- 1) ?x358)))
 (let ((?x327 (+ 1 n)))
 (let ((?x483 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x489 (* (- 1) ?x483)))
 (let ((?x1265 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x344 (* (- 3) ?x1265)))
 (let ((?x246 (* ?x327 ?x327 ?x327 ?x324 ?x77 ?x77 ?x76)))
 (let ((?x1382 (* (- 3) ?x246)))
 (let ((?x1237 (* ?x327 ?x327 ?x324 ?x77)))
 (let ((?x1231 (* ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1290 (* 3 ?x1231)))
 (let ((?x1284 (* ?x327 ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1285 (* 3 ?x1284)))
 (let ((?x1279 (* ?x327 ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1225 (* 3 ?x1279)))
 (let ((?x1016 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77)))
 (let ((?x1274 (* 3 ?x1016)))
 (let ((?x1136 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x77 ?x76 ?x76 ?x76)))
 (let ((?x1132 (* (- 1) ?x1136)))
 (let ((?x1150 (* ?x327 ?x327 ?x324 ?x324 ?x324 ?x76 ?x76 ?x76)))
 (let ((?x1154 (* 4 ?x1150)))
 (let ((?x1194 (* ?x327 ?x327 ?x324 ?x77 ?x77 ?x77 ?x76)))
 (let ((?x404 (+ (* (- 3) (* ?x327 ?x327 ?x327 ?x327 ?x324)) (* (- 3) (* ?x327 ?x327 ?x327 ?x324)) (* (- 1) (* ?x327 ?x327 ?x324)) ?x1194 (* 3 (* ?x327 ?x324 ?x77 ?x77 ?x77)) ?x1154 ?x1132 ?x1274 ?x1225 ?x1285 ?x1290 ?x1237 ?x1382 ?x344 ?x489 (* (- 1) (* ?x324 ?x77 ?x77 ?x77 ?x77)) ?x368 ?x440 ?x394)))
 (let (($x1332 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x325 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x565 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x140 (= (+ m (* (- 6) n)) 6)))
 (let (($x1351 (and $x140 (= ?x565 (- 4)) $x325 $x1332 (not (= ?x404 0)))))
 (let ((?x69 (+ m 6)))
 (let ((?x70 (+ n 1)))
 (let ((?x74 (- (* (- 3) ?x69 ?x70 ?x70 ?x70 ?x70) (* 3 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x81 (+ (- ?x74 (* ?x69 ?x70 ?x70)) (* ?x76 ?x77 ?x77 ?x77 ?x69 ?x70 ?x70) (* 3 ?x77 ?x77 ?x77 ?x69 ?x70) (* 4 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70 ?x70))))
 (let ((?x89 (+ (- ?x81 (* ?x76 ?x76 ?x76 ?x77 ?x69 ?x69 ?x69 ?x70 ?x70)) (* 3 ?x77 ?x77 ?x77 ?x69 ?x70 ?x70) (* 3 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70) (* 3 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70) (* 3 ?x76 ?x76 ?x76 ?x69 ?x69 ?x69 ?x70) (* ?x77 ?x69 ?x70 ?x70))))
 (let ((?x96 (- (- ?x89 (* 3 ?x76 ?x77 ?x77 ?x69 ?x70 ?x70 ?x70)) (* 3 ?x76 ?x77 ?x77 ?x69 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x98 (- (- ?x96 (* ?x76 ?x77 ?x77 ?x69 ?x70 ?x70)) (* ?x77 ?x77 ?x77 ?x77 ?x69))))
 (let ((?x102 (+ (- ?x98 (* ?x76 ?x76 ?x76 ?x77 ?x69 ?x69 ?x69)) (* ?x77 ?x77 ?x77 ?x69) (* ?x76 ?x76 ?x76 ?x69 ?x69 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x106 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x102 0))))))
 (rewrite (= $x106 $x1351)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x590 (mp (mp @x108 (quant-intro (proof-bind ?x997) (= $x107 $x1358)) $x1358) (rewrite (= $x1358 $x1358)) $x1358)))
 (let ((@x545 (mp (mp @x590 (quant-intro (proof-bind ?x543) (= $x1358 $x1361)) $x1361) (quant-intro (proof-bind ?x190) (= $x1361 $x152)) $x152)))
 (let ((@x1338 (mp~ (mp @x545 (quant-intro (proof-bind ?x551) (= $x152 $x550)) $x550) (sk (~ $x550 $x349)) $x349)))
 (let ((@x531 (mp @x1338 (rewrite (= $x349 $x1448)) $x1448)))
 (let ((@x1014 (and-elim @x531 $x500)))
 (let ((@x1151 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x500) $x1458)) @x1014 $x1458)))
 (let (($x1456 (>= ?x300 (- 1))))
 (let ((@x626 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x500) $x1456)) @x1014 $x1456)))
 (let (($x648 (<= ?x1118 (- 6))))
 (let ((@x497 (and-elim @x531 $x270)))
 (let ((@x499 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x270) $x648)) @x497 $x648)))
 (let (($x1223 (>= ?x1118 (- 6))))
 (let ((@x1449 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x270) $x1223)) @x497 $x1223)))
 (let (($x290 (<= ?x428 (- 1))))
 (let ((@x1273 (and-elim @x531 $x360)))
 (let ((@x658 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x360) $x290)) @x1273 $x290)))
 (let (($x408 (>= ?x428 (- 1))))
 (let ((@x977 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x360) $x408)) @x1273 $x408)))
 (let (($x1253 (not (<= ?x538 (- 42)))))
 (let (($x320 (>= ?x538 (- 42))))
 (let (($x650 (<= ?x284 (- 4))))
 (let ((@x1181 (and-elim @x531 $x145)))
 (let (($x1297 (>= ?x284 (- 4))))
 (let ((@x1459 ((_ th-lemma arith) (hypothesis (not $x320)) @x1449 @x499 @x1449 @x499 @x626 @x1151 @x626 @x1151 @x977 @x658 @x626 @x1151 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x145) $x1297)) @x1181 $x1297) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x145) $x650)) @x1181 $x650) @x626 @x1151 @x626 @x1151 @x1449 @x499 @x626 @x1151 @x1449 @x499 @x977 @x658 false)))
 (let ((@x886 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x540 $x1253 (not $x320))) (and-elim @x531 $x539) (or $x1253 (not $x320)))))
 ((_ th-lemma arith) (unit-resolution @x886 (lemma @x1459 $x320) $x1253) @x1449 @x499 @x626 @x1151 @x1449 @x499 @x1449 @x499 @x626 @x1151 @x626 @x1151 @x977 @x658 @x1449 @x499 @x626 @x1151 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        17
 :arith-branch-var          2
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           10
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             449
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-pivots              11
 :arith-row-summations      16
 :arith-tableau-max-columns 92
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 6
 :del-clause                16
 :final-checks              8
 :max-memory                3.92
 :memory                    3.33
 :mk-bool-var               26
 :mk-clause                 16
 :num-allocs                1663664
 :num-checks                1
 :propagations              10
 :rlimit-count              16549
 :time                      0.02
 :total-time                0.02)
