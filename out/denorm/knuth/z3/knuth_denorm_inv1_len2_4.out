unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x413 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 4) (* d!1 x!0)) (* 2 (* d!1 q!3)) (* (- 1) (* d!1 d!1 q!3)) (* 4 (* d!1 r!2)) (* (- 8) r!2))))
 (let (($x214 (>= ?x413 0)))
 (let (($x1848 (= ?x413 0)))
 (let ((?x2960 (* 8 r!2)))
 (let ((?x1604 (* d!1 d!1 q!3)))
 (let ((?x291 (* r00 d00)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x1555 (+ ?x156 ?x204 ?x188 ?x254 ?x292 (* 4 (* d!1 x!0)) (* (- 2) (* d!1 q!3)) ?x1604 (* (- 4) (* d!1 r!2)) ?x2960)))
 (let ((?x781 (* (- 6) (* d!1 d!1 x!0 q!3 r!2 r!2 r!2))))
 (let ((?x2198 (* (- 12) (* d!1 x!0 q!3 r!2 r!2 r!2))))
 (let ((?x1145 (* 12 (* d!1 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1945 (* 2 r!2)))
 (let ((?x1786 (* (- 1) x!0)))
 (let ((?x1728 (+ 2 d!1 ?x1786 q!3 ?x1945)))
 (let ((?x1944 (+ 4 q!3)))
 (let ((?x957 (* 6 (* d!1 d!1 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1169 (* 16 (* q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1893 (* r!2 r!2 r!2 r!2)))
 (let ((?x783 (* 64 ?x1893)))
 (let ((?x2302 (* 24 (* d!1 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1578 (* 12 (* d!1 d!1 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1821 (* d!1 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x1775 (* 32 ?x1821)))
 (let ((?x1784 (* q!3 q!3 r!2 r!2 r!2)))
 (let ((?x1787 (* 8 ?x1784)))
 (let ((?x1563 (* 2 (* d!1 d!1 d!1 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1506 (* d!1 d!1 d!1 q!3 q!3 r!2 r!2 r!2)))
 (let ((?x1472 (* r!2 r!2 r!2)))
 (let ((?x238 (* 64 ?x1472)))
 (let ((?x1280 (* d!1 d!1 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x607 (* 4 ?x1280)))
 (let ((?x1063 (* d!1 d!1 r!2 r!2 r!2)))
 (let ((?x1918 (* 96 ?x1063)))
 (let ((?x763 (* q!3 r!2 r!2 r!2)))
 (let ((?x1301 (* 48 ?x763)))
 (let ((?x1889 (* (- 1) (* d!1 d!1 d!1 x!0 q!3 r!2 r!2 r!2))))
 (let ((?x1908 (* (- 8) (* x!0 q!3 r!2 r!2 r!2))))
 (let ((?x416 (* d!1 d!1 d!1 d!1 q!3 r!2 r!2 r!2)))
 (let ((?x257 (* d!1 r!2 r!2 r!2)))
 (let ((?x2452 (* 128 ?x257)))
 (let ((?x2887 (+ ?x2452 ?x416 ?x1908 ?x1889 (* 48 (* d!1 d!1 q!3 r!2 r!2 r!2)) ?x1301 (* (- 48) (* d!1 x!0 r!2 r!2 r!2)) ?x1918 (* 48 (* d!1 d!1 r!2 r!2 r!2 r!2)) ?x607 ?x238 ?x1506 (* (- 4) (* d!1 d!1 d!1 x!0 r!2 r!2 r!2)) (* 8 (* d!1 d!1 d!1 r!2 r!2 r!2 r!2)) ?x1563 (* (- 24) (* d!1 d!1 x!0 r!2 r!2 r!2)) ?x1787 ?x1775 ?x1578 ?x2302 ?x783 (* (- 32) (* x!0 r!2 r!2 r!2)) (* 80 (* d!1 q!3 r!2 r!2 r!2)) (* 12 (* d!1 d!1 d!1 q!3 r!2 r!2 r!2)) (* 96 (* d!1 r!2 r!2 r!2 r!2)) ?x1169 ?x957 (* ?x1944 ?x1944 ?x1728 ?x1728 ?x1728) ?x1145 ?x2198 ?x781)))
 (let ((?x2451 (* ?x2887 ?x1555)))
 (let (($x175 (= ?x2451 0)))
 (let (($x2418 (not $x175)))
 (let ((?x2420 (* 6 (* q!3 q!3 q!3 q!3 r!2))))
 (let ((?x2010 (* q!3 q!3 q!3 q!3 q!3)))
 (let ((?x1785 (* 16 ?x1784)))
 (let ((?x1513 (* 12 (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x2039 (+ (* (- 12) (* x!0 q!3 q!3 q!3 r!2)) ?x1908 ?x1513 ?x1889 (* (- 3) (* x!0 q!3 q!3 q!3 q!3)) (* (- 12) (* x!0 q!3 q!3 r!2 r!2)) ?x1506 ?x1563 (* (- 1) (* x!0 x!0 x!0 q!3 q!3)) ?x1785 (* 3 (* x!0 x!0 q!3 q!3 q!3)) ?x1578 ?x2302 (* 6 (* x!0 x!0 q!3 q!3 r!2)) ?x2010 ?x1169 ?x2420 ?x957 ?x1145 ?x2198 ?x781)))
 (let ((?x1695 (* ?x2039 ?x1555)))
 (let (($x1845 (= ?x1695 0)))
 (let ((?x1311 (* (- 64) ?x1893)))
 (let ((?x2322 (* (- 1) d!1)))
 (let ((?x1478 (+ (- 2) ?x2322 ?x1786 q!3 ?x1945)))
 (let ((?x1509 (+ (- 4) q!3)))
 (let ((?x2442 (* (- 48) ?x763)))
 (let ((?x1708 (+ ?x2452 (* (- 1) ?x416) ?x1908 ?x1889 (* (- 48) (* d!1 d!1 q!3 r!2 r!2 r!2)) ?x2442 (* 48 (* d!1 x!0 r!2 r!2 r!2)) ?x1918 (* (- 48) (* d!1 d!1 r!2 r!2 r!2 r!2)) ?x607 ?x238 (* ?x1509 ?x1509 ?x1478 ?x1478 ?x1478) ?x1506 (* 4 (* d!1 d!1 d!1 x!0 r!2 r!2 r!2)) (* (- 8) (* d!1 d!1 d!1 r!2 r!2 r!2 r!2)) ?x1563 (* 24 (* d!1 d!1 x!0 r!2 r!2 r!2)) ?x1787 ?x1775 ?x1578 ?x2302 ?x1311 (* 32 (* x!0 r!2 r!2 r!2)) (* (- 80) (* d!1 q!3 r!2 r!2 r!2)) (* (- 12) (* d!1 d!1 d!1 q!3 r!2 r!2 r!2)) (* (- 96) (* d!1 r!2 r!2 r!2 r!2)) ?x1169 ?x957 ?x1145 ?x2198 ?x781)))
 (let ((?x2178 (* ?x1708 ?x1555)))
 (let (($x1825 (= ?x2178 0)))
 (let ((?x1585 (* (- 2) d!1)))
 (let ((?x502 (+ (- 4) ?x1585 ?x1786 q!3 ?x1945)))
 (let ((?x2029 (+ (- 8) q!3)))
 (let ((?x1769 (* (- 128) ?x1893)))
 (let ((?x1902 (* 256 ?x1472)))
 (let ((?x1770 (* (- 96) ?x763)))
 (let ((?x2461 (+ (* 512 ?x257) (* (- 2) ?x416) ?x1908 ?x1889 (* (- 96) (* d!1 d!1 q!3 r!2 r!2 r!2)) ?x1770 (* 96 (* d!1 x!0 r!2 r!2 r!2)) (* 384 ?x1063) (* (- 96) (* d!1 d!1 r!2 r!2 r!2 r!2)) (* 16 ?x1280) ?x1902 ?x1506 (* 8 (* d!1 d!1 d!1 x!0 r!2 r!2 r!2)) (* (- 16) (* d!1 d!1 d!1 r!2 r!2 r!2 r!2)) ?x1563 (* 48 (* d!1 d!1 x!0 r!2 r!2 r!2)) ?x1787 (* 128 ?x1821) ?x1578 ?x2302 ?x1769 (* 64 (* x!0 r!2 r!2 r!2)) (* (- 160) (* d!1 q!3 r!2 r!2 r!2)) (* (- 24) (* d!1 d!1 d!1 q!3 r!2 r!2 r!2)) (* (- 192) (* d!1 r!2 r!2 r!2 r!2)) ?x1169 (* ?x2029 ?x2029 ?x502 ?x502 ?x502) ?x957 ?x1145 ?x2198 ?x781)))
 (let ((?x346 (* ?x2461 ?x1555)))
 (let (($x1930 (= ?x346 0)))
 (let (($x217 (not $x1930)))
 (let (($x443 (or $x217 (not $x1825) (not $x1845) $x2418)))
 (let (($x609 (and $x1848 $x443)))
 (let ((?x2280 (+ ?x2960 ?x156 ?x204 ?x188 ?x254 ?x292 (* 4 (* x!0 d!1)) (* (- 2) (* q!3 d!1)) (* q!3 d!1 d!1) (* (- 4) (* r!2 d!1)))))
 (let ((?x2629 (+ (- 4) q!3 ?x1945 ?x1786 ?x1585)))
 (let ((?x1678 (* (- 8) (* q!3 r!2 r!2 r!2 x!0))))
 (let ((?x2283 (* 12 (* q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x1679 (* 6 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x2437 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x2108 (* 24 (* q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x1863 (* 12 (* q!3 r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x1464 (* 2 (* q!3 r!2 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x2033 (* (- 1) (* q!3 r!2 r!2 r!2 x!0 d!1 d!1 d!1))))
 (let ((?x517 (* (- 6) (* q!3 r!2 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x894 (* (- 12) (* q!3 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x237 (+ ?x1902 (* 48 (* r!2 r!2 r!2 x!0 d!1 d!1)) (* 8 (* r!2 r!2 r!2 x!0 d!1 d!1 d!1)) (* 96 (* r!2 r!2 r!2 x!0 d!1)) ?x894 ?x517 ?x1770 ?x2033 ?x1787 (* 512 (* r!2 r!2 r!2 d!1)) ?x1464 ?x1863 ?x2108 ?x1169 (* (- 16) (* r!2 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 96) (* r!2 r!2 r!2 r!2 d!1 d!1)) ?x2437 ?x1769 (* (- 192) (* r!2 r!2 r!2 r!2 d!1)) ?x1679 ?x2283 (* (- 24) (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 96) (* q!3 r!2 r!2 r!2 d!1 d!1)) (* 384 (* r!2 r!2 r!2 d!1 d!1)) (* 128 (* r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 160) (* q!3 r!2 r!2 r!2 d!1)) (* 16 (* r!2 r!2 r!2 d!1 d!1 d!1 d!1)) (* (- 2) (* q!3 r!2 r!2 r!2 d!1 d!1 d!1 d!1)) (* 64 (* r!2 r!2 r!2 x!0)) ?x1678 (* ?x2029 ?x2029 ?x2629 ?x2629 ?x2629))))
 (let ((?x2573 (+ (- 2) q!3 ?x1945 ?x1786 ?x2322)))
 (let ((?x154 (* r!2 r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x1869 (* 4 ?x154)))
 (let ((?x1888 (* r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1764 (* 32 ?x1888)))
 (let ((?x1887 (* r!2 r!2 r!2 d!1 d!1)))
 (let ((?x316 (* 96 ?x1887)))
 (let ((?x1953 (* r!2 r!2 r!2 d!1)))
 (let ((?x1950 (* 128 ?x1953)))
 (let ((?x476 (+ ?x238 (* 24 (* r!2 r!2 r!2 x!0 d!1 d!1)) (* 4 (* r!2 r!2 r!2 x!0 d!1 d!1 d!1)) (* 48 (* r!2 r!2 r!2 x!0 d!1)) ?x894 ?x517 ?x2442 ?x2033 ?x1787 ?x1950 ?x1464 ?x1863 ?x2108 ?x1169 (* (- 8) (* r!2 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 48) (* r!2 r!2 r!2 r!2 d!1 d!1)) ?x2437 ?x1311 (* (- 96) (* r!2 r!2 r!2 r!2 d!1)) ?x1679 ?x2283 (* (- 12) (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) (* (- 48) (* q!3 r!2 r!2 r!2 d!1 d!1)) ?x316 ?x1764 (* (- 80) (* q!3 r!2 r!2 r!2 d!1)) ?x1869 (* (- 1) (* q!3 r!2 r!2 r!2 d!1 d!1 d!1 d!1)) (* 32 (* r!2 r!2 r!2 x!0)) ?x1678 (* ?x1509 ?x1509 ?x2573 ?x2573 ?x2573))))
 (let ((?x1867 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x1943 (+ 2 q!3 ?x1945 ?x1786 d!1)))
 (let ((?x1870 (+ ?x238 (* (- 24) (* r!2 r!2 r!2 x!0 d!1 d!1)) (* (- 4) (* r!2 r!2 r!2 x!0 d!1 d!1 d!1)) (* (- 48) (* r!2 r!2 r!2 x!0 d!1)) ?x894 ?x517 ?x1301 ?x2033 (* ?x1944 ?x1944 ?x1943 ?x1943 ?x1943) ?x1787 ?x1950 ?x1464 ?x1863 ?x2108 ?x1169 (* 8 (* r!2 r!2 r!2 r!2 d!1 d!1 d!1)) (* 48 (* r!2 r!2 r!2 r!2 d!1 d!1)) ?x2437 ?x783 (* 96 (* r!2 r!2 r!2 r!2 d!1)) ?x1679 ?x2283 (* 12 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) (* 48 (* q!3 r!2 r!2 r!2 d!1 d!1)) ?x316 ?x1764 (* 80 (* q!3 r!2 r!2 r!2 d!1)) ?x1869 ?x1867 (* (- 32) (* r!2 r!2 r!2 x!0)) ?x1678)))
 (let ((?x1894 (+ ?x1513 ?x2420 (* (- 12) (* q!3 q!3 q!3 r!2 x!0)) ?x894 ?x517 ?x2033 ?x1785 ?x1464 ?x1863 ?x2108 ?x1169 ?x2437 ?x1679 ?x2283 ?x1678 ?x2010 (* (- 3) (* q!3 q!3 q!3 q!3 x!0)) (* (- 12) (* q!3 q!3 r!2 r!2 x!0)) (* (- 1) (* q!3 q!3 x!0 x!0 x!0)) (* 6 (* q!3 q!3 r!2 x!0 x!0)) (* 3 (* q!3 q!3 q!3 x!0 x!0)))))
 (let (($x1767 (or (not (= (* ?x1894 ?x2280) 0)) (not (= (* ?x1870 ?x2280) 0)) (not (= (* ?x476 ?x2280) 0)) (not (= (* ?x237 ?x2280) 0)))))
 (let (($x1920 (and (= ?x2280 0) $x1767)))
 (let (($x2192 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2429 (* r d)))
 (let ((?x2689 (* (- 4) ?x2429)))
 (let ((?x2426 (* q d d)))
 (let ((?x2428 (* (- 2) (* q d))))
 (let ((?x986 (* 4 (* x d))))
 (let ((?x291 (* r00 d00)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x185 (* 8 r)))
 (let ((?x1055 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 ?x2428 ?x2426 ?x2689)))
 (let ((?x2808 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x124 (* 2 r)))
 (let ((?x2611 (+ (- 4) q ?x124 ?x153 ?x2808)))
 (let ((?x2821 (+ (- 8) q)))
 (let ((?x2852 (* ?x2821 ?x2821 ?x2611 ?x2611 ?x2611)))
 (let ((?x2246 (* (- 8) (* q r r r x))))
 (let ((?x2229 (* r r r x)))
 (let ((?x2788 (* 64 ?x2229)))
 (let ((?x2228 (* q r r r d d d d)))
 (let ((?x2787 (* (- 2) ?x2228)))
 (let ((?x2226 (* r r r d d d d)))
 (let ((?x2697 (* 16 ?x2226)))
 (let ((?x2163 (* q q r r r d)))
 (let ((?x2520 (* 12 ?x2163)))
 (let ((?x2158 (* 6 (* q q r r r d d))))
 (let ((?x2155 (* r r r r)))
 (let ((?x2698 (* (- 128) ?x2155)))
 (let ((?x2154 (* q q r r r d d d)))
 (let ((?x2147 (* r r r r d d d)))
 (let ((?x2696 (* (- 16) ?x2147)))
 (let ((?x2137 (* 16 (* q r r r r))))
 (let ((?x2138 (* q r r r r d)))
 (let ((?x2521 (* 24 ?x2138)))
 (let ((?x2135 (* q r r r r d d)))
 (let ((?x2524 (* 12 ?x2135)))
 (let ((?x2131 (* 2 (* q r r r r d d d))))
 (let ((?x1587 (* q q r r r)))
 (let ((?x1588 (* 8 ?x1587)))
 (let ((?x1376 (* (- 1) (* q r r r x d d d))))
 (let ((?x1271 (* q r r r)))
 (let ((?x2705 (* (- 96) ?x1271)))
 (let ((?x1165 (* q r r r x d d)))
 (let ((?x2366 (* (- 6) ?x1165)))
 (let ((?x1154 (* q r r r x d)))
 (let ((?x2526 (* (- 12) ?x1154)))
 (let ((?x477 (* r r r)))
 (let ((?x2707 (* 256 ?x477)))
 (let ((?x912 (+ ?x2707 (* 48 (* r r r x d d)) (* 8 (* r r r x d d d)) (* 96 (* r r r x d)) ?x2526 ?x2366 ?x2705 ?x1376 ?x1588 (* 512 (* r r r d)) ?x2131 ?x2524 ?x2521 ?x2137 ?x2696 (* (- 96) (* r r r r d d)) ?x2154 ?x2698 (* (- 192) (* r r r r d)) ?x2158 ?x2520 (* (- 24) (* q r r r d d d)) (* (- 96) (* q r r r d d)) (* 384 (* r r r d d)) (* 128 (* r r r d d d)) (* (- 160) (* q r r r d)) ?x2697 ?x2787 ?x2788 ?x2246 ?x2852)))
 (let ((?x2733 (* (- 1) d)))
 (let ((?x1256 (+ (- 2) q ?x124 ?x153 ?x2733)))
 (let ((?x2717 (+ (- 4) q)))
 (let ((?x2537 (* ?x2717 ?x2717 ?x1256 ?x1256 ?x1256)))
 (let ((?x2749 (* 32 ?x2229)))
 (let ((?x2751 (* (- 1) ?x2228)))
 (let ((?x2227 (* 4 ?x2226)))
 (let ((?x2191 (* r r r d d d)))
 (let ((?x274 (* 32 ?x2191)))
 (let ((?x2185 (* r r r d d)))
 (let ((?x2338 (* 96 ?x2185)))
 (let ((?x2775 (* (- 64) ?x2155)))
 (let ((?x2754 (* (- 8) ?x2147)))
 (let ((?x1687 (* r r r d)))
 (let ((?x2337 (* 128 ?x1687)))
 (let ((?x2772 (* (- 48) ?x1271)))
 (let ((?x478 (* 64 ?x477)))
 (let ((?x2446 (+ ?x478 (* 24 (* r r r x d d)) (* 4 (* r r r x d d d)) (* 48 (* r r r x d)) ?x2526 ?x2366 ?x2772 ?x1376 ?x1588 ?x2337 ?x2131 ?x2524 ?x2521 ?x2137 ?x2754 (* (- 48) (* r r r r d d)) ?x2154 ?x2775 (* (- 96) (* r r r r d)) ?x2158 ?x2520 (* (- 12) (* q r r r d d d)) (* (- 48) (* q r r r d d)) ?x2338 ?x274 (* (- 80) (* q r r r d)) ?x2227 ?x2751 ?x2749 ?x2246 ?x2537)))
 (let ((?x2230 (* (- 32) ?x2229)))
 (let ((?x2165 (* q r r r d d d)))
 (let ((?x2162 (* 12 ?x2165)))
 (let ((?x2156 (* 64 ?x2155)))
 (let ((?x2142 (* 8 ?x2147)))
 (let ((?x670 (+ 2 q ?x124 ?x153 d)))
 (let ((?x2265 (+ 4 q)))
 (let ((?x1459 (* ?x2265 ?x2265 ?x670 ?x670 ?x670)))
 (let ((?x1266 (* 48 ?x1271)))
 (let ((?x714 (* r r r x d d d)))
 (let ((?x716 (* (- 4) ?x714)))
 (let ((?x876 (+ ?x478 (* (- 24) (* r r r x d d)) ?x716 (* (- 48) (* r r r x d)) ?x2526 ?x2366 ?x1266 ?x1376 ?x1459 ?x1588 ?x2337 ?x2131 ?x2524 ?x2521 ?x2137 ?x2142 (* 48 (* r r r r d d)) ?x2154 ?x2156 (* 96 (* r r r r d)) ?x2158 ?x2520 ?x2162 (* 48 (* q r r r d d)) ?x2338 ?x274 (* 80 (* q r r r d)) ?x2227 ?x2228 ?x2230 ?x2246)))
 (let ((?x2757 (* 3 (* q q q x x))))
 (let ((?x2760 (* 6 (* q q r x x))))
 (let ((?x2762 (* (- 1) (* q q x x x))))
 (let ((?x2758 (* (- 12) (* q q r r x))))
 (let ((?x2312 (* (- 3) (* q q q q x))))
 (let ((?x2308 (* q q q q q)))
 (let ((?x2307 (* 16 ?x1587)))
 (let ((?x1094 (* q q q r x)))
 (let ((?x2314 (* (- 12) ?x1094)))
 (let ((?x938 (* q q q q r)))
 (let ((?x2309 (* 6 ?x938)))
 (let ((?x791 (* q q q r r)))
 (let ((?x2313 (* 12 ?x791)))
 (let ((?x762 (+ ?x2313 ?x2309 ?x2314 ?x2526 ?x2366 ?x1376 ?x2307 ?x2131 ?x2524 ?x2521 ?x2137 ?x2154 ?x2158 ?x2520 ?x2246 ?x2308 ?x2312 ?x2758 ?x2762 ?x2760 ?x2757)))
 (let (($x1715 (or (not (= (* ?x762 ?x1055) 0)) (not (= (* ?x876 ?x1055) 0)) (not (= (* ?x2446 ?x1055) 0)) (not (= (* ?x912 ?x1055) 0)))))
 (let (($x1045 (= ?x1055 0)))
 (and $x1045 $x1715)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2931 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2429 (* r d)))
 (let ((?x2689 (* (- 4) ?x2429)))
 (let ((?x2426 (* q d d)))
 (let ((?x2428 (* (- 2) (* q d))))
 (let ((?x2710 (* 16 d)))
 (let ((?x986 (* 4 (* x d))))
 (let ((?x291 (* r00 d00)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x185 (* 8 r)))
 (let ((?x2952 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 (* (- 8) (* d 2)) ?x2710 ?x2428 ?x2426 ?x2689)))
 (let ((?x2808 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x124 (* 2 r)))
 (let ((?x2611 (+ (- 4) q ?x124 ?x153 ?x2808)))
 (let ((?x2821 (+ (- 8) q)))
 (let ((?x2852 (* ?x2821 ?x2821 ?x2611 ?x2611 ?x2611)))
 (let ((?x2246 (* (- 8) (* q r r r x))))
 (let ((?x2229 (* r r r x)))
 (let ((?x2788 (* 64 ?x2229)))
 (let ((?x2228 (* q r r r d d d d)))
 (let ((?x2787 (* (- 2) ?x2228)))
 (let ((?x2191 (* r r r d d d)))
 (let ((?x274 (* 32 ?x2191)))
 (let ((?x2166 (* q r r r d d)))
 (let ((?x2699 (* (- 64) ?x2166)))
 (let ((?x2163 (* q q r r r d)))
 (let ((?x2520 (* 12 ?x2163)))
 (let ((?x2158 (* 6 (* q q r r r d d))))
 (let ((?x2157 (* r r r r d)))
 (let ((?x2694 (* (- 128) ?x2157)))
 (let ((?x2155 (* r r r r)))
 (let ((?x2698 (* (- 128) ?x2155)))
 (let ((?x2154 (* q q r r r d d d)))
 (let ((?x2152 (* r r r r d d)))
 (let ((?x2753 (* (- 32) ?x2152)))
 (let ((?x2137 (* 16 (* q r r r r))))
 (let ((?x2138 (* q r r r r d)))
 (let ((?x2521 (* 24 ?x2138)))
 (let ((?x2135 (* q r r r r d d)))
 (let ((?x2524 (* 12 ?x2135)))
 (let ((?x2131 (* 2 (* q r r r r d d d))))
 (let ((?x1687 (* r r r d)))
 (let ((?x2702 (* 384 ?x1687)))
 (let ((?x1587 (* q q r r r)))
 (let ((?x1588 (* 8 ?x1587)))
 (let ((?x1376 (* (- 1) (* q r r r x d d d))))
 (let ((?x1271 (* q r r r)))
 (let ((?x2705 (* (- 96) ?x1271)))
 (let ((?x1165 (* q r r r x d d)))
 (let ((?x2366 (* (- 6) ?x1165)))
 (let ((?x1154 (* q r r r x d)))
 (let ((?x2526 (* (- 12) ?x1154)))
 (let ((?x477 (* r r r)))
 (let ((?x2707 (* 256 ?x477)))
 (let ((?x2941 (+ (* (- 8) (* d 2 d ?x2808 r r r)) (* (- 8) (* d d d ?x2808 r r r)) (* (- 8) (* d 2 d ?x153 r r r)) (* (- 8) (* d d d ?x153 r r r)) ?x2707 (* (- 8) (* d 2 d ?x124 r r r)) (* (- 8) (* d d 2 ?x124 r r r)) (* (- 8) (* d 2 2 ?x124 r r r)) (* 16 (* r r r x d d)) (* 64 (* r r r x d)) (* (- 8) (* d d d q r r r)) ?x2526 ?x2366 (* (- 8) (* d d 2 ?x153 r r r)) (* (- 8) (* d d d ?x124 r r r)) (* (- 8) (* d 2 2 ?x153 r r r)) ?x2705 (* (- 8) (* d 2 d q r r r)) ?x1376 (* (- 8) (* d 2 2 q r r r)) ?x1588 ?x2702 (* (- 8) (* d d 2 q r r r)) ?x2131 ?x2524 ?x2521 ?x2137 ?x2753 ?x2154 ?x2698 ?x2694 ?x2158 ?x2520 (* (- 16) (* q r r r d d d)) ?x2699 (* 192 (* r r r d d)) ?x274 (* (- 128) (* q r r r d)) ?x2787 ?x2788 ?x2246 (* (- 8) (* d d 2 (- 4) r r r)) (* (- 8) (* d 2 2 (- 4) r r r)) (* (- 8) (* d 2 d (- 4) r r r)) (* (- 8) (* d d d (- 4) r r r)) (* (- 8) (* d d 2 ?x2808 r r r)) (* (- 8) (* d 2 2 ?x2808 r r r)) ?x2852)))
 (let ((?x2768 (* 8 d)))
 (let ((?x2642 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 (* (- 4) (* d 2)) ?x2768 ?x2428 ?x2426 ?x2689)))
 (let ((?x2733 (* (- 1) d)))
 (let ((?x1256 (+ (- 2) q ?x124 ?x153 ?x2733)))
 (let ((?x2717 (+ (- 4) q)))
 (let ((?x2537 (* ?x2717 ?x2717 ?x1256 ?x1256 ?x1256)))
 (let ((?x2749 (* 32 ?x2229)))
 (let ((?x2751 (* (- 1) ?x2228)))
 (let ((?x2773 (* (- 32) ?x2166)))
 (let ((?x2752 (* (- 64) ?x2157)))
 (let ((?x2775 (* (- 64) ?x2155)))
 (let ((?x2182 (* 96 ?x1687)))
 (let ((?x2772 (* (- 48) ?x1271)))
 (let ((?x478 (* 64 ?x477)))
 (let ((?x2618 (+ (* (- 4) (* d 2 d ?x153 r r r)) (* (- 4) (* d d d ?x153 r r r)) ?x478 (* (- 4) (* d 2 d ?x124 r r r)) (* (- 4) (* d d 2 ?x124 r r r)) (* (- 4) (* d 2 2 ?x124 r r r)) (* 8 (* r r r x d d)) (* 32 (* r r r x d)) (* (- 4) (* d d d q r r r)) ?x2526 ?x2366 (* (- 4) (* d d 2 ?x153 r r r)) (* (- 4) (* d d d ?x124 r r r)) (* (- 4) (* d 2 2 ?x153 r r r)) ?x2772 (* (- 4) (* d 2 d q r r r)) (* (- 4) (* d d d (- 2) r r r)) ?x1376 (* (- 4) (* d 2 2 q r r r)) ?x1588 (* (- 4) (* d 2 2 (- 2) r r r)) ?x2182 (* (- 4) (* d d 2 q r r r)) (* (- 4) (* d d 2 ?x2733 r r r)) (* (- 4) (* d 2 2 ?x2733 r r r)) ?x2131 ?x2524 ?x2521 ?x2137 (* (- 16) ?x2152) ?x2154 ?x2775 ?x2752 ?x2158 ?x2520 (* (- 4) (* d 2 d ?x2733 r r r)) (* (- 8) (* q r r r d d d)) ?x2773 (* 48 (* r r r d d)) (* 8 ?x2191) (* (- 64) (* q r r r d)) (* (- 4) (* d d d ?x2733 r r r)) ?x2751 ?x2749 ?x2246 (* (- 4) (* d d 2 (- 2) r r r)) (* (- 4) (* d 2 d (- 2) r r r)) ?x2537)))
 (let ((?x2780 (* 2 (* d 4))))
 (let ((?x2785 (* (- 8) d)))
 (let ((?x2230 (* (- 32) ?x2229)))
 (let ((?x2226 (* r r r d d d d)))
 (let ((?x2227 (* 4 ?x2226)))
 (let ((?x2194 (* q r r r d)))
 (let ((?x2196 (* 56 ?x2194)))
 (let ((?x2190 (* 24 ?x2191)))
 (let ((?x2185 (* r r r d d)))
 (let ((?x2184 (* 64 ?x2185)))
 (let ((?x2167 (* 32 ?x2166)))
 (let ((?x2165 (* q r r r d d d)))
 (let ((?x2162 (* 12 ?x2165)))
 (let ((?x2159 (* 8 ?x2163)))
 (let ((?x2151 (* 64 ?x2157)))
 (let ((?x2156 (* 64 ?x2155)))
 (let ((?x2150 (* 32 ?x2152)))
 (let ((?x2147 (* r r r r d d d)))
 (let ((?x2142 (* 8 ?x2147)))
 (let ((?x2136 (* 16 ?x2138)))
 (let ((?x2132 (* 8 ?x2135)))
 (let ((?x1686 (* 2 (* d d q ?x153 r r r))))
 (let ((?x1669 (* 2 (* d 2 q ?x153 r r r))))
 (let ((?x1667 (* 2 (* d d 4 ?x153 r r r))))
 (let ((?x1655 (* 2 (* d 2 4 ?x153 r r r))))
 (let ((?x1653 (* 2 (* d 2 q d r r r))))
 (let ((?x1615 (* 2 (* d d 4 d r r r))))
 (let ((?x1611 (* 2 (* d 2 4 d r r r))))
 (let ((?x1608 (* 2 (* d d q ?x124 r r r))))
 (let ((?x1598 (* 2 (* d 2 q ?x124 r r r))))
 (let ((?x1596 (* 2 (* d d 4 ?x124 r r r))))
 (let ((?x1593 (* 2 (* d 2 4 ?x124 r r r))))
 (let ((?x1590 (* 2 (* d 2 q q r r r))))
 (let ((?x670 (+ 2 q ?x124 ?x153 d)))
 (let ((?x2265 (+ 4 q)))
 (let ((?x1459 (* ?x2265 ?x2265 ?x670 ?x670 ?x670)))
 (let ((?x1581 (* 2 (* d d 4 q r r r))))
 (let ((?x1266 (* 48 ?x1271)))
 (let ((?x1272 (* 2 (* d d q 2 r r r))))
 (let ((?x1212 (* 2 (* d 2 4 q r r r))))
 (let ((?x1452 (* (- 4) ?x1165)))
 (let ((?x1343 (* (- 8) ?x1154)))
 (let ((?x714 (* r r r x d d d)))
 (let ((?x716 (* (- 4) ?x714)))
 (let ((?x1273 (* 2 (* d 2 q 2 r r r))))
 (let ((?x605 (* 2 (* d d 4 2 r r r))))
 (let ((?x519 (* 2 (* d 2 4 2 r r r))))
 (let ((?x1692 (+ ?x478 ?x519 ?x605 (* (- 16) (* r r r x d d)) ?x1273 ?x716 (* (- 32) (* r r r x d)) ?x1343 ?x1452 ?x1212 ?x1272 ?x1266 ?x1581 ?x1376 ?x1459 ?x1588 ?x1590 ?x1593 ?x1596 ?x1598 ?x1608 ?x1611 ?x1615 ?x1653 ?x1655 ?x1667 ?x1669 ?x1686 ?x2182 ?x2131 ?x2132 ?x2136 ?x2137 ?x2142 ?x2150 ?x2154 ?x2156 ?x2151 ?x2158 ?x2159 ?x2162 ?x2167 ?x2184 ?x2190 ?x2196 ?x2227 ?x2228 ?x2230 ?x2246)))
 (let ((?x1741 (* ?x1692 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 ?x2785 ?x2428 ?x2426 ?x2689 ?x2780))))
 (let ((?x1055 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 ?x2428 ?x2426 ?x2689)))
 (let ((?x2757 (* 3 (* q q q x x))))
 (let ((?x2760 (* 6 (* q q r x x))))
 (let ((?x2762 (* (- 1) (* q q x x x))))
 (let ((?x2758 (* (- 12) (* q q r r x))))
 (let ((?x2312 (* (- 3) (* q q q q x))))
 (let ((?x2308 (* q q q q q)))
 (let ((?x2307 (* 16 ?x1587)))
 (let ((?x1094 (* q q q r x)))
 (let ((?x2314 (* (- 12) ?x1094)))
 (let ((?x938 (* q q q q r)))
 (let ((?x2309 (* 6 ?x938)))
 (let ((?x791 (* q q q r r)))
 (let ((?x2313 (* 12 ?x791)))
 (let ((?x199 (+ (* 2 (* d 2 q r r r q)) (* 2 (* d 2 ?x153 r r r q)) ?x2313 ?x2309 ?x2314 ?x1343 ?x1452 ?x1376 (* 2 (* d d ?x153 r r r q)) (* 2 (* d 2 ?x124 r r r q)) ?x2307 (* 2 (* d d ?x124 r r r q)) ?x2131 ?x2132 ?x2136 ?x2137 ?x2154 ?x2158 ?x2159 ?x2246 ?x2308 ?x2312 ?x2758 ?x2762 ?x2760 ?x2757)))
 (let (($x2912 (or (not (= (* ?x199 ?x1055) 0)) (not (= ?x1741 0)) (not (= (* ?x2618 ?x2642) 0)) (not (= (* ?x2941 ?x2952) 0)))))
 (let (($x1045 (= ?x1055 0)))
 (and $x1045 $x2912)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x2177 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2429 (* r d)))
 (let ((?x2689 (* (- 4) ?x2429)))
 (let ((?x2426 (* q d d)))
 (let ((?x2428 (* (- 2) (* q d))))
 (let ((?x986 (* 4 (* x d))))
 (let ((?x291 (* r00 d00)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x185 (* 8 r)))
 (let ((?x1055 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 ?x2428 ?x2426 ?x2689)))
 (let ((?x2808 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x124 (* 2 r)))
 (let ((?x2611 (+ (- 4) q ?x124 ?x153 ?x2808)))
 (let ((?x2821 (+ (- 8) q)))
 (let ((?x2852 (* ?x2821 ?x2821 ?x2611 ?x2611 ?x2611)))
 (let ((?x2246 (* (- 8) (* q r r r x))))
 (let ((?x2229 (* r r r x)))
 (let ((?x2788 (* 64 ?x2229)))
 (let ((?x2228 (* q r r r d d d d)))
 (let ((?x2787 (* (- 2) ?x2228)))
 (let ((?x2226 (* r r r d d d d)))
 (let ((?x2697 (* 16 ?x2226)))
 (let ((?x2163 (* q q r r r d)))
 (let ((?x2520 (* 12 ?x2163)))
 (let ((?x2158 (* 6 (* q q r r r d d))))
 (let ((?x2155 (* r r r r)))
 (let ((?x2698 (* (- 128) ?x2155)))
 (let ((?x2154 (* q q r r r d d d)))
 (let ((?x2147 (* r r r r d d d)))
 (let ((?x2696 (* (- 16) ?x2147)))
 (let ((?x2137 (* 16 (* q r r r r))))
 (let ((?x2138 (* q r r r r d)))
 (let ((?x2521 (* 24 ?x2138)))
 (let ((?x2135 (* q r r r r d d)))
 (let ((?x2524 (* 12 ?x2135)))
 (let ((?x2131 (* 2 (* q r r r r d d d))))
 (let ((?x1587 (* q q r r r)))
 (let ((?x1588 (* 8 ?x1587)))
 (let ((?x1376 (* (- 1) (* q r r r x d d d))))
 (let ((?x1271 (* q r r r)))
 (let ((?x2705 (* (- 96) ?x1271)))
 (let ((?x1165 (* q r r r x d d)))
 (let ((?x2366 (* (- 6) ?x1165)))
 (let ((?x1154 (* q r r r x d)))
 (let ((?x2526 (* (- 12) ?x1154)))
 (let ((?x477 (* r r r)))
 (let ((?x2707 (* 256 ?x477)))
 (let ((?x912 (+ ?x2707 (* 48 (* r r r x d d)) (* 8 (* r r r x d d d)) (* 96 (* r r r x d)) ?x2526 ?x2366 ?x2705 ?x1376 ?x1588 (* 512 (* r r r d)) ?x2131 ?x2524 ?x2521 ?x2137 ?x2696 (* (- 96) (* r r r r d d)) ?x2154 ?x2698 (* (- 192) (* r r r r d)) ?x2158 ?x2520 (* (- 24) (* q r r r d d d)) (* (- 96) (* q r r r d d)) (* 384 (* r r r d d)) (* 128 (* r r r d d d)) (* (- 160) (* q r r r d)) ?x2697 ?x2787 ?x2788 ?x2246 ?x2852)))
 (let ((?x2733 (* (- 1) d)))
 (let ((?x1256 (+ (- 2) q ?x124 ?x153 ?x2733)))
 (let ((?x2717 (+ (- 4) q)))
 (let ((?x2537 (* ?x2717 ?x2717 ?x1256 ?x1256 ?x1256)))
 (let ((?x2749 (* 32 ?x2229)))
 (let ((?x2751 (* (- 1) ?x2228)))
 (let ((?x2227 (* 4 ?x2226)))
 (let ((?x2191 (* r r r d d d)))
 (let ((?x274 (* 32 ?x2191)))
 (let ((?x2185 (* r r r d d)))
 (let ((?x2338 (* 96 ?x2185)))
 (let ((?x2775 (* (- 64) ?x2155)))
 (let ((?x2754 (* (- 8) ?x2147)))
 (let ((?x1687 (* r r r d)))
 (let ((?x2337 (* 128 ?x1687)))
 (let ((?x2772 (* (- 48) ?x1271)))
 (let ((?x478 (* 64 ?x477)))
 (let ((?x2446 (+ ?x478 (* 24 (* r r r x d d)) (* 4 (* r r r x d d d)) (* 48 (* r r r x d)) ?x2526 ?x2366 ?x2772 ?x1376 ?x1588 ?x2337 ?x2131 ?x2524 ?x2521 ?x2137 ?x2754 (* (- 48) (* r r r r d d)) ?x2154 ?x2775 (* (- 96) (* r r r r d)) ?x2158 ?x2520 (* (- 12) (* q r r r d d d)) (* (- 48) (* q r r r d d)) ?x2338 ?x274 (* (- 80) (* q r r r d)) ?x2227 ?x2751 ?x2749 ?x2246 ?x2537)))
 (let ((?x2230 (* (- 32) ?x2229)))
 (let ((?x2165 (* q r r r d d d)))
 (let ((?x2162 (* 12 ?x2165)))
 (let ((?x2156 (* 64 ?x2155)))
 (let ((?x2142 (* 8 ?x2147)))
 (let ((?x670 (+ 2 q ?x124 ?x153 d)))
 (let ((?x2265 (+ 4 q)))
 (let ((?x1459 (* ?x2265 ?x2265 ?x670 ?x670 ?x670)))
 (let ((?x1266 (* 48 ?x1271)))
 (let ((?x714 (* r r r x d d d)))
 (let ((?x716 (* (- 4) ?x714)))
 (let ((?x876 (+ ?x478 (* (- 24) (* r r r x d d)) ?x716 (* (- 48) (* r r r x d)) ?x2526 ?x2366 ?x1266 ?x1376 ?x1459 ?x1588 ?x2337 ?x2131 ?x2524 ?x2521 ?x2137 ?x2142 (* 48 (* r r r r d d)) ?x2154 ?x2156 (* 96 (* r r r r d)) ?x2158 ?x2520 ?x2162 (* 48 (* q r r r d d)) ?x2338 ?x274 (* 80 (* q r r r d)) ?x2227 ?x2228 ?x2230 ?x2246)))
 (let ((?x2757 (* 3 (* q q q x x))))
 (let ((?x2760 (* 6 (* q q r x x))))
 (let ((?x2762 (* (- 1) (* q q x x x))))
 (let ((?x2758 (* (- 12) (* q q r r x))))
 (let ((?x2312 (* (- 3) (* q q q q x))))
 (let ((?x2308 (* q q q q q)))
 (let ((?x2307 (* 16 ?x1587)))
 (let ((?x1094 (* q q q r x)))
 (let ((?x2314 (* (- 12) ?x1094)))
 (let ((?x938 (* q q q q r)))
 (let ((?x2309 (* 6 ?x938)))
 (let ((?x791 (* q q q r r)))
 (let ((?x2313 (* 12 ?x791)))
 (let ((?x762 (+ ?x2313 ?x2309 ?x2314 ?x2526 ?x2366 ?x1376 ?x2307 ?x2131 ?x2524 ?x2521 ?x2137 ?x2154 ?x2158 ?x2520 ?x2246 ?x2308 ?x2312 ?x2758 ?x2762 ?x2760 ?x2757)))
 (let (($x1715 (or (not (= (* ?x762 ?x1055) 0)) (not (= (* ?x876 ?x1055) 0)) (not (= (* ?x2446 ?x1055) 0)) (not (= (* ?x912 ?x1055) 0)))))
 (let (($x1045 (= ?x1055 0)))
 (let (($x1027 (and $x1045 $x1715)))
 (let ((?x2710 (* 16 d)))
 (let ((?x2952 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 (* (- 8) (* d 2)) ?x2710 ?x2428 ?x2426 ?x2689)))
 (let ((?x2166 (* q r r r d d)))
 (let ((?x2699 (* (- 64) ?x2166)))
 (let ((?x2157 (* r r r r d)))
 (let ((?x2694 (* (- 128) ?x2157)))
 (let ((?x2152 (* r r r r d d)))
 (let ((?x2753 (* (- 32) ?x2152)))
 (let ((?x2702 (* 384 ?x1687)))
 (let ((?x2941 (+ (* (- 8) (* d 2 d ?x2808 r r r)) (* (- 8) (* d d d ?x2808 r r r)) (* (- 8) (* d 2 d ?x153 r r r)) (* (- 8) (* d d d ?x153 r r r)) ?x2707 (* (- 8) (* d 2 d ?x124 r r r)) (* (- 8) (* d d 2 ?x124 r r r)) (* (- 8) (* d 2 2 ?x124 r r r)) (* 16 (* r r r x d d)) (* 64 (* r r r x d)) (* (- 8) (* d d d q r r r)) ?x2526 ?x2366 (* (- 8) (* d d 2 ?x153 r r r)) (* (- 8) (* d d d ?x124 r r r)) (* (- 8) (* d 2 2 ?x153 r r r)) ?x2705 (* (- 8) (* d 2 d q r r r)) ?x1376 (* (- 8) (* d 2 2 q r r r)) ?x1588 ?x2702 (* (- 8) (* d d 2 q r r r)) ?x2131 ?x2524 ?x2521 ?x2137 ?x2753 ?x2154 ?x2698 ?x2694 ?x2158 ?x2520 (* (- 16) ?x2165) ?x2699 (* 192 ?x2185) ?x274 (* (- 128) (* q r r r d)) ?x2787 ?x2788 ?x2246 (* (- 8) (* d d 2 (- 4) r r r)) (* (- 8) (* d 2 2 (- 4) r r r)) (* (- 8) (* d 2 d (- 4) r r r)) (* (- 8) (* d d d (- 4) r r r)) (* (- 8) (* d d 2 ?x2808 r r r)) (* (- 8) (* d 2 2 ?x2808 r r r)) ?x2852)))
 (let ((?x2768 (* 8 d)))
 (let ((?x2642 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 (* (- 4) (* d 2)) ?x2768 ?x2428 ?x2426 ?x2689)))
 (let ((?x2773 (* (- 32) ?x2166)))
 (let ((?x2752 (* (- 64) ?x2157)))
 (let ((?x2182 (* 96 ?x1687)))
 (let ((?x2618 (+ (* (- 4) (* d 2 d ?x153 r r r)) (* (- 4) (* d d d ?x153 r r r)) ?x478 (* (- 4) (* d 2 d ?x124 r r r)) (* (- 4) (* d d 2 ?x124 r r r)) (* (- 4) (* d 2 2 ?x124 r r r)) (* 8 (* r r r x d d)) (* 32 (* r r r x d)) (* (- 4) (* d d d q r r r)) ?x2526 ?x2366 (* (- 4) (* d d 2 ?x153 r r r)) (* (- 4) (* d d d ?x124 r r r)) (* (- 4) (* d 2 2 ?x153 r r r)) ?x2772 (* (- 4) (* d 2 d q r r r)) (* (- 4) (* d d d (- 2) r r r)) ?x1376 (* (- 4) (* d 2 2 q r r r)) ?x1588 (* (- 4) (* d 2 2 (- 2) r r r)) ?x2182 (* (- 4) (* d d 2 q r r r)) (* (- 4) (* d d 2 ?x2733 r r r)) (* (- 4) (* d 2 2 ?x2733 r r r)) ?x2131 ?x2524 ?x2521 ?x2137 (* (- 16) ?x2152) ?x2154 ?x2775 ?x2752 ?x2158 ?x2520 (* (- 4) (* d 2 d ?x2733 r r r)) (* (- 8) ?x2165) ?x2773 (* 48 ?x2185) (* 8 ?x2191) (* (- 64) (* q r r r d)) (* (- 4) (* d d d ?x2733 r r r)) ?x2751 ?x2749 ?x2246 (* (- 4) (* d d 2 (- 2) r r r)) (* (- 4) (* d 2 d (- 2) r r r)) ?x2537)))
 (let ((?x2780 (* 2 (* d 4))))
 (let ((?x2785 (* (- 8) d)))
 (let ((?x2194 (* q r r r d)))
 (let ((?x2196 (* 56 ?x2194)))
 (let ((?x2190 (* 24 ?x2191)))
 (let ((?x2184 (* 64 ?x2185)))
 (let ((?x2167 (* 32 ?x2166)))
 (let ((?x2159 (* 8 ?x2163)))
 (let ((?x2151 (* 64 ?x2157)))
 (let ((?x2150 (* 32 ?x2152)))
 (let ((?x2136 (* 16 ?x2138)))
 (let ((?x2132 (* 8 ?x2135)))
 (let ((?x1686 (* 2 (* d d q ?x153 r r r))))
 (let ((?x1669 (* 2 (* d 2 q ?x153 r r r))))
 (let ((?x1667 (* 2 (* d d 4 ?x153 r r r))))
 (let ((?x1655 (* 2 (* d 2 4 ?x153 r r r))))
 (let ((?x1653 (* 2 (* d 2 q d r r r))))
 (let ((?x1615 (* 2 (* d d 4 d r r r))))
 (let ((?x1611 (* 2 (* d 2 4 d r r r))))
 (let ((?x1608 (* 2 (* d d q ?x124 r r r))))
 (let ((?x1598 (* 2 (* d 2 q ?x124 r r r))))
 (let ((?x1596 (* 2 (* d d 4 ?x124 r r r))))
 (let ((?x1593 (* 2 (* d 2 4 ?x124 r r r))))
 (let ((?x1590 (* 2 (* d 2 q q r r r))))
 (let ((?x1581 (* 2 (* d d 4 q r r r))))
 (let ((?x1272 (* 2 (* d d q 2 r r r))))
 (let ((?x1212 (* 2 (* d 2 4 q r r r))))
 (let ((?x1452 (* (- 4) ?x1165)))
 (let ((?x1343 (* (- 8) ?x1154)))
 (let ((?x1273 (* 2 (* d 2 q 2 r r r))))
 (let ((?x605 (* 2 (* d d 4 2 r r r))))
 (let ((?x519 (* 2 (* d 2 4 2 r r r))))
 (let ((?x1692 (+ ?x478 ?x519 ?x605 (* (- 16) (* r r r x d d)) ?x1273 ?x716 (* (- 32) (* r r r x d)) ?x1343 ?x1452 ?x1212 ?x1272 ?x1266 ?x1581 ?x1376 ?x1459 ?x1588 ?x1590 ?x1593 ?x1596 ?x1598 ?x1608 ?x1611 ?x1615 ?x1653 ?x1655 ?x1667 ?x1669 ?x1686 ?x2182 ?x2131 ?x2132 ?x2136 ?x2137 ?x2142 ?x2150 ?x2154 ?x2156 ?x2151 ?x2158 ?x2159 ?x2162 ?x2167 ?x2184 ?x2190 ?x2196 ?x2227 ?x2228 ?x2230 ?x2246)))
 (let ((?x1741 (* ?x1692 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 ?x2785 ?x2428 ?x2426 ?x2689 ?x2780))))
 (let ((?x199 (+ (* 2 (* d 2 q r r r q)) (* 2 (* d 2 ?x153 r r r q)) ?x2313 ?x2309 ?x2314 ?x1343 ?x1452 ?x1376 (* 2 (* d d ?x153 r r r q)) (* 2 (* d 2 ?x124 r r r q)) ?x2307 (* 2 (* d d ?x124 r r r q)) ?x2131 ?x2132 ?x2136 ?x2137 ?x2154 ?x2158 ?x2159 ?x2246 ?x2308 ?x2312 ?x2758 ?x2762 ?x2760 ?x2757)))
 (let (($x2912 (or (not (= (* ?x199 ?x1055) 0)) (not (= ?x1741 0)) (not (= (* ?x2618 ?x2642) 0)) (not (= (* ?x2941 ?x2952) 0)))))
 (let (($x2904 (and $x1045 $x2912)))
 (rewrite (= $x2904 $x1027))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x448 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x901 (* 4 (* d00 r00))))
 (let ((?x2808 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x124 (* 2 r)))
 (let ((?x747 (+ (- 4) ?x124 ?x153 q ?x2808)))
 (let ((?x1006 (+ 2 d)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x1015 (* 4 (* ?x1006 r))))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x890 (* (- 8) x)))
 (let ((?x401 (* 16 r)))
 (let ((?x1120 (+ (- 32) ?x401 ?x890 ?x30 (* (- 16) d) ?x156 ?x1015 ?x188 ?x204 (* (+ (- 8) q) ?x1006 ?x1006) (* (- 2) (* (+ (- 8) q) ?x1006)) ?x254 (* (- 4) (* ?x1006 ?x747)) ?x901)))
 (let ((?x1113 (+ (* (+ (- 8) q) ?x1006 ?x1006 ?x1006 ?x747 r r r) (* (+ (- 8) q) (+ (- 8) q) ?x747 ?x747 ?x747))))
 (let (($x1128 (not (= (* ?x1113 ?x1120) 0))))
 (let ((?x2785 (* (- 8) d)))
 (let ((?x1070 (+ (- 16) ?x401 ?x890 ?x30 ?x2785 ?x156 ?x1015 ?x188 ?x204 (* (+ (- 4) q) ?x1006 ?x1006) (* (- 2) (* (+ (- 4) q) ?x1006)) ?x254 (* (- 4) (* ?x1006 (+ (- 2) ?x124 ?x153 q (* (- 1) d)))) ?x901)))
 (let ((?x2733 (* (- 1) d)))
 (let ((?x1040 (+ (- 2) ?x124 ?x153 q ?x2733)))
 (let ((?x2717 (+ (- 4) q)))
 (let ((?x1043 (+ (* ?x2717 ?x1006 ?x1006 ?x1006 ?x1040 r r r) (* ?x2717 ?x2717 ?x1040 ?x1040 ?x1040))))
 (let (($x1072 (not (= (* ?x1043 ?x1070) 0))))
 (let ((?x1036 (+ ?x401 ?x890 ?x30 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 q) (* (- 2) (* ?x1006 q)) ?x254 (* (- 4) (* ?x1006 (+ ?x124 ?x153 q))) ?x901)))
 (let ((?x1007 (+ ?x124 ?x153 q)))
 (let ((?x1009 (+ (* ?x1006 ?x1006 ?x1006 ?x1007 r r r q) (* ?x1007 ?x1007 ?x1007 q q))))
 (let (($x1039 (not (= (* ?x1009 ?x1036) 0))))
 (let ((?x2768 (* 8 d)))
 (let ((?x1105 (+ 16 ?x401 ?x890 ?x30 ?x2768 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 (+ 4 q)) (* (- 2) (* ?x1006 (+ 4 q))) ?x254 (* (- 4) (* ?x1006 (+ 2 ?x124 ?x153 q d))) ?x901)))
 (let ((?x1083 (+ 2 ?x124 ?x153 q d)))
 (let ((?x2265 (+ 4 q)))
 (let ((?x1073 (+ (* ?x1006 ?x1006 ?x1006 ?x2265 ?x1083 r r r) (* ?x2265 ?x2265 ?x1083 ?x1083 ?x1083))))
 (let (($x746 (not (= (* ?x1073 ?x1105) 0))))
 (let ((?x986 (* 4 (* x d))))
 (let ((?x185 (* 8 r)))
 (let ((?x1001 (+ ?x185 ?x156 ?x986 ?x188 ?x204 (* d d q) (* (- 2) (* d q)) ?x254 (* (- 4) (* d r)) ?x901)))
 (let (($x1002 (= ?x1001 0)))
 (and $x1002 (or $x746 $x1039 $x1072 $x1128))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x2918 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2429 (* r d)))
 (let ((?x2689 (* (- 4) ?x2429)))
 (let ((?x2426 (* q d d)))
 (let ((?x2428 (* (- 2) (* q d))))
 (let ((?x2710 (* 16 d)))
 (let ((?x986 (* 4 (* x d))))
 (let ((?x291 (* r00 d00)))
 (let ((?x292 (* 4 ?x291)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x185 (* 8 r)))
 (let ((?x2952 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 (* (- 8) (* d 2)) ?x2710 ?x2428 ?x2426 ?x2689)))
 (let ((?x2808 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x124 (* 2 r)))
 (let ((?x2611 (+ (- 4) q ?x124 ?x153 ?x2808)))
 (let ((?x2821 (+ (- 8) q)))
 (let ((?x2852 (* ?x2821 ?x2821 ?x2611 ?x2611 ?x2611)))
 (let ((?x2246 (* (- 8) (* q r r r x))))
 (let ((?x2229 (* r r r x)))
 (let ((?x2788 (* 64 ?x2229)))
 (let ((?x2228 (* q r r r d d d d)))
 (let ((?x2787 (* (- 2) ?x2228)))
 (let ((?x2191 (* r r r d d d)))
 (let ((?x274 (* 32 ?x2191)))
 (let ((?x2166 (* q r r r d d)))
 (let ((?x2699 (* (- 64) ?x2166)))
 (let ((?x2163 (* q q r r r d)))
 (let ((?x2520 (* 12 ?x2163)))
 (let ((?x2158 (* 6 (* q q r r r d d))))
 (let ((?x2157 (* r r r r d)))
 (let ((?x2694 (* (- 128) ?x2157)))
 (let ((?x2155 (* r r r r)))
 (let ((?x2698 (* (- 128) ?x2155)))
 (let ((?x2154 (* q q r r r d d d)))
 (let ((?x2152 (* r r r r d d)))
 (let ((?x2753 (* (- 32) ?x2152)))
 (let ((?x2137 (* 16 (* q r r r r))))
 (let ((?x2138 (* q r r r r d)))
 (let ((?x2521 (* 24 ?x2138)))
 (let ((?x2135 (* q r r r r d d)))
 (let ((?x2524 (* 12 ?x2135)))
 (let ((?x2131 (* 2 (* q r r r r d d d))))
 (let ((?x1687 (* r r r d)))
 (let ((?x2702 (* 384 ?x1687)))
 (let ((?x1587 (* q q r r r)))
 (let ((?x1588 (* 8 ?x1587)))
 (let ((?x1376 (* (- 1) (* q r r r x d d d))))
 (let ((?x1271 (* q r r r)))
 (let ((?x2705 (* (- 96) ?x1271)))
 (let ((?x1165 (* q r r r x d d)))
 (let ((?x2366 (* (- 6) ?x1165)))
 (let ((?x1154 (* q r r r x d)))
 (let ((?x2526 (* (- 12) ?x1154)))
 (let ((?x477 (* r r r)))
 (let ((?x2707 (* 256 ?x477)))
 (let ((?x2941 (+ (* (- 8) (* d 2 d ?x2808 r r r)) (* (- 8) (* d d d ?x2808 r r r)) (* (- 8) (* d 2 d ?x153 r r r)) (* (- 8) (* d d d ?x153 r r r)) ?x2707 (* (- 8) (* d 2 d ?x124 r r r)) (* (- 8) (* d d 2 ?x124 r r r)) (* (- 8) (* d 2 2 ?x124 r r r)) (* 16 (* r r r x d d)) (* 64 (* r r r x d)) (* (- 8) (* d d d q r r r)) ?x2526 ?x2366 (* (- 8) (* d d 2 ?x153 r r r)) (* (- 8) (* d d d ?x124 r r r)) (* (- 8) (* d 2 2 ?x153 r r r)) ?x2705 (* (- 8) (* d 2 d q r r r)) ?x1376 (* (- 8) (* d 2 2 q r r r)) ?x1588 ?x2702 (* (- 8) (* d d 2 q r r r)) ?x2131 ?x2524 ?x2521 ?x2137 ?x2753 ?x2154 ?x2698 ?x2694 ?x2158 ?x2520 (* (- 16) (* q r r r d d d)) ?x2699 (* 192 (* r r r d d)) ?x274 (* (- 128) (* q r r r d)) ?x2787 ?x2788 ?x2246 (* (- 8) (* d d 2 (- 4) r r r)) (* (- 8) (* d 2 2 (- 4) r r r)) (* (- 8) (* d 2 d (- 4) r r r)) (* (- 8) (* d d d (- 4) r r r)) (* (- 8) (* d d 2 ?x2808 r r r)) (* (- 8) (* d 2 2 ?x2808 r r r)) ?x2852)))
 (let ((?x2768 (* 8 d)))
 (let ((?x2642 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 (* (- 4) (* d 2)) ?x2768 ?x2428 ?x2426 ?x2689)))
 (let ((?x2733 (* (- 1) d)))
 (let ((?x1256 (+ (- 2) q ?x124 ?x153 ?x2733)))
 (let ((?x2717 (+ (- 4) q)))
 (let ((?x2537 (* ?x2717 ?x2717 ?x1256 ?x1256 ?x1256)))
 (let ((?x2749 (* 32 ?x2229)))
 (let ((?x2751 (* (- 1) ?x2228)))
 (let ((?x2773 (* (- 32) ?x2166)))
 (let ((?x2752 (* (- 64) ?x2157)))
 (let ((?x2775 (* (- 64) ?x2155)))
 (let ((?x2182 (* 96 ?x1687)))
 (let ((?x2772 (* (- 48) ?x1271)))
 (let ((?x478 (* 64 ?x477)))
 (let ((?x2618 (+ (* (- 4) (* d 2 d ?x153 r r r)) (* (- 4) (* d d d ?x153 r r r)) ?x478 (* (- 4) (* d 2 d ?x124 r r r)) (* (- 4) (* d d 2 ?x124 r r r)) (* (- 4) (* d 2 2 ?x124 r r r)) (* 8 (* r r r x d d)) (* 32 (* r r r x d)) (* (- 4) (* d d d q r r r)) ?x2526 ?x2366 (* (- 4) (* d d 2 ?x153 r r r)) (* (- 4) (* d d d ?x124 r r r)) (* (- 4) (* d 2 2 ?x153 r r r)) ?x2772 (* (- 4) (* d 2 d q r r r)) (* (- 4) (* d d d (- 2) r r r)) ?x1376 (* (- 4) (* d 2 2 q r r r)) ?x1588 (* (- 4) (* d 2 2 (- 2) r r r)) ?x2182 (* (- 4) (* d d 2 q r r r)) (* (- 4) (* d d 2 ?x2733 r r r)) (* (- 4) (* d 2 2 ?x2733 r r r)) ?x2131 ?x2524 ?x2521 ?x2137 (* (- 16) ?x2152) ?x2154 ?x2775 ?x2752 ?x2158 ?x2520 (* (- 4) (* d 2 d ?x2733 r r r)) (* (- 8) (* q r r r d d d)) ?x2773 (* 48 (* r r r d d)) (* 8 ?x2191) (* (- 64) (* q r r r d)) (* (- 4) (* d d d ?x2733 r r r)) ?x2751 ?x2749 ?x2246 (* (- 4) (* d d 2 (- 2) r r r)) (* (- 4) (* d 2 d (- 2) r r r)) ?x2537)))
 (let ((?x2780 (* 2 (* d 4))))
 (let ((?x2785 (* (- 8) d)))
 (let ((?x2230 (* (- 32) ?x2229)))
 (let ((?x2226 (* r r r d d d d)))
 (let ((?x2227 (* 4 ?x2226)))
 (let ((?x2194 (* q r r r d)))
 (let ((?x2196 (* 56 ?x2194)))
 (let ((?x2190 (* 24 ?x2191)))
 (let ((?x2185 (* r r r d d)))
 (let ((?x2184 (* 64 ?x2185)))
 (let ((?x2167 (* 32 ?x2166)))
 (let ((?x2165 (* q r r r d d d)))
 (let ((?x2162 (* 12 ?x2165)))
 (let ((?x2159 (* 8 ?x2163)))
 (let ((?x2151 (* 64 ?x2157)))
 (let ((?x2156 (* 64 ?x2155)))
 (let ((?x2150 (* 32 ?x2152)))
 (let ((?x2147 (* r r r r d d d)))
 (let ((?x2142 (* 8 ?x2147)))
 (let ((?x2136 (* 16 ?x2138)))
 (let ((?x2132 (* 8 ?x2135)))
 (let ((?x1686 (* 2 (* d d q ?x153 r r r))))
 (let ((?x1669 (* 2 (* d 2 q ?x153 r r r))))
 (let ((?x1667 (* 2 (* d d 4 ?x153 r r r))))
 (let ((?x1655 (* 2 (* d 2 4 ?x153 r r r))))
 (let ((?x1653 (* 2 (* d 2 q d r r r))))
 (let ((?x1615 (* 2 (* d d 4 d r r r))))
 (let ((?x1611 (* 2 (* d 2 4 d r r r))))
 (let ((?x1608 (* 2 (* d d q ?x124 r r r))))
 (let ((?x1598 (* 2 (* d 2 q ?x124 r r r))))
 (let ((?x1596 (* 2 (* d d 4 ?x124 r r r))))
 (let ((?x1593 (* 2 (* d 2 4 ?x124 r r r))))
 (let ((?x1590 (* 2 (* d 2 q q r r r))))
 (let ((?x670 (+ 2 q ?x124 ?x153 d)))
 (let ((?x2265 (+ 4 q)))
 (let ((?x1459 (* ?x2265 ?x2265 ?x670 ?x670 ?x670)))
 (let ((?x1581 (* 2 (* d d 4 q r r r))))
 (let ((?x1266 (* 48 ?x1271)))
 (let ((?x1272 (* 2 (* d d q 2 r r r))))
 (let ((?x1212 (* 2 (* d 2 4 q r r r))))
 (let ((?x1452 (* (- 4) ?x1165)))
 (let ((?x1343 (* (- 8) ?x1154)))
 (let ((?x714 (* r r r x d d d)))
 (let ((?x716 (* (- 4) ?x714)))
 (let ((?x1273 (* 2 (* d 2 q 2 r r r))))
 (let ((?x605 (* 2 (* d d 4 2 r r r))))
 (let ((?x519 (* 2 (* d 2 4 2 r r r))))
 (let ((?x1692 (+ ?x478 ?x519 ?x605 (* (- 16) (* r r r x d d)) ?x1273 ?x716 (* (- 32) (* r r r x d)) ?x1343 ?x1452 ?x1212 ?x1272 ?x1266 ?x1581 ?x1376 ?x1459 ?x1588 ?x1590 ?x1593 ?x1596 ?x1598 ?x1608 ?x1611 ?x1615 ?x1653 ?x1655 ?x1667 ?x1669 ?x1686 ?x2182 ?x2131 ?x2132 ?x2136 ?x2137 ?x2142 ?x2150 ?x2154 ?x2156 ?x2151 ?x2158 ?x2159 ?x2162 ?x2167 ?x2184 ?x2190 ?x2196 ?x2227 ?x2228 ?x2230 ?x2246)))
 (let ((?x1741 (* ?x1692 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 ?x2785 ?x2428 ?x2426 ?x2689 ?x2780))))
 (let ((?x1055 (+ ?x185 ?x156 ?x204 ?x188 ?x254 ?x292 ?x986 ?x2428 ?x2426 ?x2689)))
 (let ((?x2757 (* 3 (* q q q x x))))
 (let ((?x2760 (* 6 (* q q r x x))))
 (let ((?x2762 (* (- 1) (* q q x x x))))
 (let ((?x2758 (* (- 12) (* q q r r x))))
 (let ((?x2312 (* (- 3) (* q q q q x))))
 (let ((?x2308 (* q q q q q)))
 (let ((?x2307 (* 16 ?x1587)))
 (let ((?x1094 (* q q q r x)))
 (let ((?x2314 (* (- 12) ?x1094)))
 (let ((?x938 (* q q q q r)))
 (let ((?x2309 (* 6 ?x938)))
 (let ((?x791 (* q q q r r)))
 (let ((?x2313 (* 12 ?x791)))
 (let ((?x199 (+ (* 2 (* d 2 q r r r q)) (* 2 (* d 2 ?x153 r r r q)) ?x2313 ?x2309 ?x2314 ?x1343 ?x1452 ?x1376 (* 2 (* d d ?x153 r r r q)) (* 2 (* d 2 ?x124 r r r q)) ?x2307 (* 2 (* d d ?x124 r r r q)) ?x2131 ?x2132 ?x2136 ?x2137 ?x2154 ?x2158 ?x2159 ?x2246 ?x2308 ?x2312 ?x2758 ?x2762 ?x2760 ?x2757)))
 (let (($x2912 (or (not (= (* ?x199 ?x1055) 0)) (not (= ?x1741 0)) (not (= (* ?x2618 ?x2642) 0)) (not (= (* ?x2941 ?x2952) 0)))))
 (let (($x1045 (= ?x1055 0)))
 (let (($x2904 (and $x1045 $x2912)))
 (let ((?x901 (* 4 (* d00 r00))))
 (let ((?x1015 (* 4 (* (+ 2 d) r))))
 (let ((?x30 (* 8 q)))
 (let ((?x890 (* (- 8) x)))
 (let ((?x401 (* 16 r)))
 (let ((?x1120 (+ (- 32) ?x401 ?x890 ?x30 (* (- 16) d) ?x156 ?x1015 ?x188 ?x204 (* ?x2821 (+ 2 d) (+ 2 d)) (* (- 2) (* ?x2821 (+ 2 d))) ?x254 (* (- 4) (* (+ 2 d) (+ (- 4) ?x124 ?x153 q ?x2808))) ?x901)))
 (let ((?x747 (+ (- 4) ?x124 ?x153 q ?x2808)))
 (let ((?x1006 (+ 2 d)))
 (let ((?x1113 (+ (* ?x2821 ?x1006 ?x1006 ?x1006 ?x747 r r r) (* ?x2821 ?x2821 ?x747 ?x747 ?x747))))
 (let (($x1128 (not (= (* ?x1113 ?x1120) 0))))
 (let ((?x1070 (+ (- 16) ?x401 ?x890 ?x30 ?x2785 ?x156 ?x1015 ?x188 ?x204 (* ?x2717 ?x1006 ?x1006) (* (- 2) (* ?x2717 ?x1006)) ?x254 (* (- 4) (* ?x1006 (+ (- 2) ?x124 ?x153 q ?x2733))) ?x901)))
 (let ((?x1040 (+ (- 2) ?x124 ?x153 q ?x2733)))
 (let ((?x1043 (+ (* ?x2717 ?x1006 ?x1006 ?x1006 ?x1040 r r r) (* ?x2717 ?x2717 ?x1040 ?x1040 ?x1040))))
 (let (($x1072 (not (= (* ?x1043 ?x1070) 0))))
 (let ((?x1036 (+ ?x401 ?x890 ?x30 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 q) (* (- 2) (* ?x1006 q)) ?x254 (* (- 4) (* ?x1006 (+ ?x124 ?x153 q))) ?x901)))
 (let ((?x1007 (+ ?x124 ?x153 q)))
 (let ((?x1009 (+ (* ?x1006 ?x1006 ?x1006 ?x1007 r r r q) (* ?x1007 ?x1007 ?x1007 q q))))
 (let (($x1039 (not (= (* ?x1009 ?x1036) 0))))
 (let ((?x1105 (+ 16 ?x401 ?x890 ?x30 ?x2768 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 ?x2265) (* (- 2) (* ?x1006 ?x2265)) ?x254 (* (- 4) (* ?x1006 (+ 2 ?x124 ?x153 q d))) ?x901)))
 (let ((?x1083 (+ 2 ?x124 ?x153 q d)))
 (let ((?x1073 (+ (* ?x1006 ?x1006 ?x1006 ?x2265 ?x1083 r r r) (* ?x2265 ?x2265 ?x1083 ?x1083 ?x1083))))
 (let (($x746 (not (= (* ?x1073 ?x1105) 0))))
 (let ((?x1001 (+ ?x185 ?x156 ?x986 ?x188 ?x204 (* d d q) (* (- 2) (* d q)) ?x254 (* (- 4) (* d r)) ?x901)))
 (let (($x1002 (= ?x1001 0)))
 (let (($x271 (and $x1002 (or $x746 $x1039 $x1072 $x1128))))
 (rewrite (= $x271 $x2904))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x752 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x901 (* 4 (* d00 r00))))
 (let ((?x2808 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x124 (* 2 r)))
 (let ((?x747 (+ (- 4) ?x124 ?x153 q ?x2808)))
 (let ((?x1006 (+ 2 d)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x1015 (* 4 (* ?x1006 r))))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x890 (* (- 8) x)))
 (let ((?x401 (* 16 r)))
 (let ((?x1120 (+ (- 32) ?x401 ?x890 ?x30 (* (- 16) d) ?x156 ?x1015 ?x188 ?x204 (* (+ (- 8) q) ?x1006 ?x1006) (* (- 2) (* (+ (- 8) q) ?x1006)) ?x254 (* (- 4) (* ?x1006 ?x747)) ?x901)))
 (let ((?x1113 (+ (* (+ (- 8) q) ?x1006 ?x1006 ?x1006 ?x747 r r r) (* (+ (- 8) q) (+ (- 8) q) ?x747 ?x747 ?x747))))
 (let (($x1128 (not (= (* ?x1113 ?x1120) 0))))
 (let ((?x2768 (* 8 d)))
 (let ((?x1105 (+ 16 ?x401 ?x890 ?x30 ?x2768 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 (+ 4 q)) (* (- 2) (* ?x1006 (+ 4 q))) ?x254 (* (- 4) (* ?x1006 (+ 2 ?x124 ?x153 q d))) ?x901)))
 (let ((?x1083 (+ 2 ?x124 ?x153 q d)))
 (let ((?x2265 (+ 4 q)))
 (let ((?x1073 (+ (* ?x1006 ?x1006 ?x1006 ?x2265 ?x1083 r r r) (* ?x2265 ?x2265 ?x1083 ?x1083 ?x1083))))
 (let (($x746 (not (= (* ?x1073 ?x1105) 0))))
 (let ((?x2785 (* (- 8) d)))
 (let ((?x1070 (+ (- 16) ?x401 ?x890 ?x30 ?x2785 ?x156 ?x1015 ?x188 ?x204 (* (+ (- 4) q) ?x1006 ?x1006) (* (- 2) (* (+ (- 4) q) ?x1006)) ?x254 (* (- 4) (* ?x1006 (+ (- 2) ?x124 ?x153 q (* (- 1) d)))) ?x901)))
 (let ((?x2733 (* (- 1) d)))
 (let ((?x1040 (+ (- 2) ?x124 ?x153 q ?x2733)))
 (let ((?x2717 (+ (- 4) q)))
 (let ((?x1043 (+ (* ?x2717 ?x1006 ?x1006 ?x1006 ?x1040 r r r) (* ?x2717 ?x2717 ?x1040 ?x1040 ?x1040))))
 (let (($x1072 (not (= (* ?x1043 ?x1070) 0))))
 (let ((?x1036 (+ ?x401 ?x890 ?x30 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 q) (* (- 2) (* ?x1006 q)) ?x254 (* (- 4) (* ?x1006 (+ ?x124 ?x153 q))) ?x901)))
 (let ((?x1007 (+ ?x124 ?x153 q)))
 (let ((?x1009 (+ (* ?x1006 ?x1006 ?x1006 ?x1007 r r r q) (* ?x1007 ?x1007 ?x1007 q q))))
 (let (($x1039 (not (= (* ?x1009 ?x1036) 0))))
 (let ((?x986 (* 4 (* x d))))
 (let ((?x185 (* 8 r)))
 (let ((?x1001 (+ ?x185 ?x156 ?x986 ?x188 ?x204 (* d d q) (* (- 2) (* d q)) ?x254 (* (- 4) (* d r)) ?x901)))
 (let (($x1002 (= ?x1001 0)))
 (and $x1002 (or $x1039 $x1072 $x746 $x1128))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x916 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x901 (* 4 (* d00 r00))))
 (let ((?x2808 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x124 (* 2 r)))
 (let ((?x747 (+ (- 4) ?x124 ?x153 q ?x2808)))
 (let ((?x1006 (+ 2 d)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x1015 (* 4 (* ?x1006 r))))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x890 (* (- 8) x)))
 (let ((?x401 (* 16 r)))
 (let ((?x1120 (+ (- 32) ?x401 ?x890 ?x30 (* (- 16) d) ?x156 ?x1015 ?x188 ?x204 (* (+ (- 8) q) ?x1006 ?x1006) (* (- 2) (* (+ (- 8) q) ?x1006)) ?x254 (* (- 4) (* ?x1006 ?x747)) ?x901)))
 (let ((?x1113 (+ (* (+ (- 8) q) ?x1006 ?x1006 ?x1006 ?x747 r r r) (* (+ (- 8) q) (+ (- 8) q) ?x747 ?x747 ?x747))))
 (let (($x1128 (not (= (* ?x1113 ?x1120) 0))))
 (let ((?x2785 (* (- 8) d)))
 (let ((?x1070 (+ (- 16) ?x401 ?x890 ?x30 ?x2785 ?x156 ?x1015 ?x188 ?x204 (* (+ (- 4) q) ?x1006 ?x1006) (* (- 2) (* (+ (- 4) q) ?x1006)) ?x254 (* (- 4) (* ?x1006 (+ (- 2) ?x124 ?x153 q (* (- 1) d)))) ?x901)))
 (let ((?x2733 (* (- 1) d)))
 (let ((?x1040 (+ (- 2) ?x124 ?x153 q ?x2733)))
 (let ((?x2717 (+ (- 4) q)))
 (let ((?x1043 (+ (* ?x2717 ?x1006 ?x1006 ?x1006 ?x1040 r r r) (* ?x2717 ?x2717 ?x1040 ?x1040 ?x1040))))
 (let (($x1072 (not (= (* ?x1043 ?x1070) 0))))
 (let ((?x1036 (+ ?x401 ?x890 ?x30 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 q) (* (- 2) (* ?x1006 q)) ?x254 (* (- 4) (* ?x1006 (+ ?x124 ?x153 q))) ?x901)))
 (let ((?x1007 (+ ?x124 ?x153 q)))
 (let ((?x1009 (+ (* ?x1006 ?x1006 ?x1006 ?x1007 r r r q) (* ?x1007 ?x1007 ?x1007 q q))))
 (let (($x1039 (not (= (* ?x1009 ?x1036) 0))))
 (let ((?x2768 (* 8 d)))
 (let ((?x1105 (+ 16 ?x401 ?x890 ?x30 ?x2768 ?x156 ?x1015 ?x188 ?x204 (* ?x1006 ?x1006 (+ 4 q)) (* (- 2) (* ?x1006 (+ 4 q))) ?x254 (* (- 4) (* ?x1006 (+ 2 ?x124 ?x153 q d))) ?x901)))
 (let ((?x1083 (+ 2 ?x124 ?x153 q d)))
 (let ((?x2265 (+ 4 q)))
 (let ((?x1073 (+ (* ?x1006 ?x1006 ?x1006 ?x2265 ?x1083 r r r) (* ?x2265 ?x2265 ?x1083 ?x1083 ?x1083))))
 (let (($x746 (not (= (* ?x1073 ?x1105) 0))))
 (let ((?x986 (* 4 (* x d))))
 (let ((?x185 (* 8 r)))
 (let ((?x1001 (+ ?x185 ?x156 ?x986 ?x188 ?x204 (* d d q) (* (- 2) (* d q)) ?x254 (* (- 4) (* d r)) ?x901)))
 (let (($x1002 (= ?x1001 0)))
 (let (($x271 (and $x1002 (or $x746 $x1039 $x1072 $x1128))))
 (let (($x1124 (and $x1002 (or $x1039 $x1072 $x746 $x1128))))
 (rewrite (= $x1124 $x271))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x149 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x126 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x132 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x143 (+ (* ?x62 ?x62 ?x62 ?x132 ?x126 r r r) (* ?x132 ?x132 ?x126 ?x126 ?x126))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x130 (- (+ (- (* 8 ?x126) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x137 (+ (- (+ (- ?x130 ?x41) (* ?x62 ?x62 ?x132)) (* 2 ?x62 ?x132)) ?x49)))
 (let ((?x103 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x109 (- q 4)))
 (let ((?x120 (+ (* ?x62 ?x62 ?x62 ?x109 ?x103 r r r) (* ?x109 ?x109 ?x103 ?x103 ?x103))))
 (let ((?x107 (- (+ (- (* 8 ?x103) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x114 (+ (- (+ (- ?x107 ?x41) (* ?x62 ?x62 ?x109)) (* 2 ?x62 ?x109)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x82 (+ ?x58 q)))
 (let ((?x98 (+ (* ?x62 ?x62 ?x62 q ?x82 r r r) (* q q ?x82 ?x82 ?x82))))
 (let ((?x86 (- (+ (- (* 8 ?x82) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x92 (+ (- (+ (- ?x86 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (+ (* ?x62 ?x62 ?x62 ?x67 ?x59 r r r) (* ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x147 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x78) 0)) (not (= (* (+ (- ?x92 (* 4 ?x62 ?x82)) ?x53) ?x98) 0)) (not (= (* (+ (- ?x114 (* 4 ?x62 ?x103)) ?x53) ?x120) 0)) (not (= (* (+ (- ?x137 (* 4 ?x62 ?x126)) ?x53) ?x143) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x147))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x924 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x901 (* 4 (* d00 r00))))
 (let ((?x2117 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x962 (+ (- 4) ?x57 ?x153 q ?x2117)))
 (let ((?x2056 (+ 2 d)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x373 (* 4 (* ?x2056 r))))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x299 (* 8 q)))
 (let ((?x890 (* (- 8) x)))
 (let ((?x1268 (* 16 r)))
 (let ((?x1366 (+ (- 32) ?x1268 ?x890 ?x299 (* (- 16) d) ?x156 ?x373 ?x188 ?x204 (* (+ (- 8) q) ?x2056 ?x2056) (* (- 2) (* (+ (- 8) q) ?x2056)) ?x254 (* (- 4) (* ?x2056 ?x962)) ?x901)))
 (let ((?x1379 (+ (* (+ (- 8) q) ?x2056 ?x2056 ?x2056 ?x962 r r r) (* (+ (- 8) q) (+ (- 8) q) ?x962 ?x962 ?x962))))
 (let ((?x185 (* 8 d)))
 (let ((?x878 (+ 16 ?x1268 ?x890 ?x299 ?x185 ?x156 ?x373 ?x188 ?x204 (* ?x2056 ?x2056 (+ 4 q)) (* (- 2) (* ?x2056 (+ 4 q))) ?x254 (* (- 4) (* ?x2056 (+ 2 ?x57 ?x153 q d))) ?x901)))
 (let ((?x2636 (+ 2 ?x57 ?x153 q d)))
 (let ((?x343 (+ 4 q)))
 (let ((?x884 (+ (* ?x2056 ?x2056 ?x2056 ?x343 ?x2636 r r r) (* ?x343 ?x343 ?x2636 ?x2636 ?x2636))))
 (let ((?x446 (* (- 8) d)))
 (let ((?x1069 (+ (- 16) ?x1268 ?x890 ?x299 ?x446 ?x156 ?x373 ?x188 ?x204 (* (+ (- 4) q) ?x2056 ?x2056) (* (- 2) (* (+ (- 4) q) ?x2056)) ?x254 (* (- 4) (* ?x2056 (+ (- 2) ?x57 ?x153 q (* (- 1) d)))) ?x901)))
 (let ((?x1316 (* (- 1) d)))
 (let ((?x814 (+ (- 2) ?x57 ?x153 q ?x1316)))
 (let ((?x1241 (+ (- 4) q)))
 (let ((?x740 (+ (* ?x1241 ?x2056 ?x2056 ?x2056 ?x814 r r r) (* ?x1241 ?x1241 ?x814 ?x814 ?x814))))
 (let ((?x963 (+ ?x1268 ?x890 ?x299 ?x156 ?x373 ?x188 ?x204 (* ?x2056 ?x2056 q) (* (- 2) (* ?x2056 q)) ?x254 (* (- 4) (* ?x2056 (+ ?x57 ?x153 q))) ?x901)))
 (let ((?x1514 (+ ?x57 ?x153 q)))
 (let ((?x981 (+ (* ?x2056 ?x2056 ?x2056 ?x1514 r r r q) (* ?x1514 ?x1514 ?x1514 q q))))
 (let (($x1000 (or (not (= (* ?x981 ?x963) 0)) (not (= (* ?x740 ?x1069) 0)) (not (= (* ?x884 ?x878) 0)) (not (= (* ?x1379 ?x1366) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x910 (+ ?x30 ?x156 (* 4 (* x d)) ?x188 ?x204 ?x44 (* (- 2) (* d q)) ?x254 (* (- 4) (* d r)) ?x901)))
 (and (= ?x910 0) $x1000)))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1254 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x901 (* 4 (* d00 r00))))
 (let ((?x2117 (* (- 2) d)))
 (let ((?x153 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x962 (+ (- 4) ?x57 ?x153 q ?x2117)))
 (let ((?x2056 (+ 2 d)))
 (let ((?x253 (* d00 q00)))
 (let ((?x254 (* 2 ?x253)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x204 (* (- 1) ?x41)))
 (let ((?x174 (* d00 x00)))
 (let ((?x188 (* (- 4) ?x174)))
 (let ((?x373 (* 4 (* ?x2056 r))))
 (let ((?x156 (* (- 8) r00)))
 (let ((?x299 (* 8 q)))
 (let ((?x890 (* (- 8) x)))
 (let ((?x1268 (* 16 r)))
 (let ((?x1366 (+ (- 32) ?x1268 ?x890 ?x299 (* (- 16) d) ?x156 ?x373 ?x188 ?x204 (* (+ (- 8) q) ?x2056 ?x2056) (* (- 2) (* (+ (- 8) q) ?x2056)) ?x254 (* (- 4) (* ?x2056 ?x962)) ?x901)))
 (let ((?x1379 (+ (* (+ (- 8) q) ?x2056 ?x2056 ?x2056 ?x962 r r r) (* (+ (- 8) q) (+ (- 8) q) ?x962 ?x962 ?x962))))
 (let ((?x185 (* 8 d)))
 (let ((?x878 (+ 16 ?x1268 ?x890 ?x299 ?x185 ?x156 ?x373 ?x188 ?x204 (* ?x2056 ?x2056 (+ 4 q)) (* (- 2) (* ?x2056 (+ 4 q))) ?x254 (* (- 4) (* ?x2056 (+ 2 ?x57 ?x153 q d))) ?x901)))
 (let ((?x2636 (+ 2 ?x57 ?x153 q d)))
 (let ((?x343 (+ 4 q)))
 (let ((?x884 (+ (* ?x2056 ?x2056 ?x2056 ?x343 ?x2636 r r r) (* ?x343 ?x343 ?x2636 ?x2636 ?x2636))))
 (let ((?x446 (* (- 8) d)))
 (let ((?x1069 (+ (- 16) ?x1268 ?x890 ?x299 ?x446 ?x156 ?x373 ?x188 ?x204 (* (+ (- 4) q) ?x2056 ?x2056) (* (- 2) (* (+ (- 4) q) ?x2056)) ?x254 (* (- 4) (* ?x2056 (+ (- 2) ?x57 ?x153 q (* (- 1) d)))) ?x901)))
 (let ((?x1316 (* (- 1) d)))
 (let ((?x814 (+ (- 2) ?x57 ?x153 q ?x1316)))
 (let ((?x1241 (+ (- 4) q)))
 (let ((?x740 (+ (* ?x1241 ?x2056 ?x2056 ?x2056 ?x814 r r r) (* ?x1241 ?x1241 ?x814 ?x814 ?x814))))
 (let ((?x963 (+ ?x1268 ?x890 ?x299 ?x156 ?x373 ?x188 ?x204 (* ?x2056 ?x2056 q) (* (- 2) (* ?x2056 q)) ?x254 (* (- 4) (* ?x2056 (+ ?x57 ?x153 q))) ?x901)))
 (let ((?x1514 (+ ?x57 ?x153 q)))
 (let ((?x981 (+ (* ?x2056 ?x2056 ?x2056 ?x1514 r r r q) (* ?x1514 ?x1514 ?x1514 q q))))
 (let (($x1000 (or (not (= (* ?x981 ?x963) 0)) (not (= (* ?x740 ?x1069) 0)) (not (= (* ?x884 ?x878) 0)) (not (= (* ?x1379 ?x1366) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x910 (+ ?x30 ?x156 (* 4 (* x d)) ?x188 ?x204 ?x44 (* (- 2) (* d q)) ?x254 (* (- 4) (* d r)) ?x901)))
 (let (($x1003 (and (= ?x910 0) $x1000)))
 (let ((?x126 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x132 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x143 (+ (* ?x62 ?x62 ?x62 ?x132 ?x126 r r r) (* ?x132 ?x132 ?x126 ?x126 ?x126))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x130 (- (+ (- (* 8 ?x126) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x137 (+ (- (+ (- ?x130 ?x41) (* ?x62 ?x62 ?x132)) (* 2 ?x62 ?x132)) ?x49)))
 (let ((?x103 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x109 (- q 4)))
 (let ((?x120 (+ (* ?x62 ?x62 ?x62 ?x109 ?x103 r r r) (* ?x109 ?x109 ?x103 ?x103 ?x103))))
 (let ((?x107 (- (+ (- (* 8 ?x103) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x114 (+ (- (+ (- ?x107 ?x41) (* ?x62 ?x62 ?x109)) (* 2 ?x62 ?x109)) ?x49)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x82 (+ ?x58 q)))
 (let ((?x98 (+ (* ?x62 ?x62 ?x62 q ?x82 r r r) (* q q ?x82 ?x82 ?x82))))
 (let ((?x86 (- (+ (- (* 8 ?x82) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x92 (+ (- (+ (- ?x86 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (+ (* ?x62 ?x62 ?x62 ?x67 ?x59 r r r) (* ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x147 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x78) 0)) (not (= (* (+ (- ?x92 (* 4 ?x62 ?x82)) ?x53) ?x98) 0)) (not (= (* (+ (- ?x114 (* 4 ?x62 ?x103)) ?x53) ?x120) 0)) (not (= (* (+ (- ?x137 (* 4 ?x62 ?x126)) ?x53) ?x143) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x148 (and (= ?x54 0) $x147)))
 (rewrite (= $x148 $x1003)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1133 (trans (quant-intro (proof-bind ?x1254) (= $x149 $x924)) (elim-unused (= $x924 $x752)) (= $x149 $x752))))
 (let ((@x27 (asserted $x149)))
 (let ((@x947 (mp (mp @x27 @x1133 $x752) (quant-intro (proof-bind ?x916) (= $x752 $x448)) $x448)))
 (let ((@x2018 (mp (mp @x947 (rewrite (= $x448 $x448)) $x448) (quant-intro (proof-bind ?x2918) (= $x448 $x2931)) $x2931)))
 (let ((@x2334 (mp~ (mp @x2018 (quant-intro (proof-bind ?x2177) (= $x2931 $x2192)) $x2192) (sk (~ $x2192 $x1920)) $x1920)))
 (let ((@x1851 (mp @x2334 (rewrite (= $x1920 $x609)) $x609)))
 (let ((@x559 (and-elim @x1851 $x1848)))
 (let ((@x503 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1848) $x214)) @x559 $x214)))
 (let (($x1463 (<= ?x413 0)))
 (let ((@x2989 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1848) $x1463)) @x559 $x1463)))
 (let (($x1904 (not (<= ?x2451 0))))
 (let (($x1062 (<= ?x346 0)))
 (let (($x1777 (>= ?x346 0)))
 (let ((@x1897 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1930 (not $x1062) (not $x1777))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1777)) @x2989 @x503 false) $x1777) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1062)) @x2989 @x503 false) $x1062) $x1930)))
 (let (($x2543 (>= ?x1695 0)))
 (let (($x2562 (<= ?x1695 0)))
 (let ((@x1917 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1845 (not $x2562) (not $x2543))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2562)) @x2989 @x503 false) $x2562) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2543)) @x2989 @x503 false) $x2543) $x1845)))
 (let (($x801 (>= ?x2178 0)))
 (let (($x2879 (<= ?x2178 0)))
 (let ((@x208 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1825 (not $x2879) (not $x801))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2879)) @x2989 @x503 false) $x2879) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x801)) @x2989 @x503 false) $x801) $x1825)))
 (let ((@x333 (unit-resolution (unit-resolution (and-elim @x1851 $x443) @x208 @x1917 (or $x217 $x2418)) @x1897 $x2418)))
 (let (($x219 (>= ?x2451 0)))
 (let ((@x2630 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x175 $x1904 (not $x219))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x219)) @x2989 @x503 false) $x219) @x333 $x1904)))
 ((_ th-lemma arith farkas 1 1 1) @x2630 @x2989 @x503 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1136
 :arith-nonlinear-bounds    16
 :arith-num-rows            12
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 108
 :arith-tableau-max-rows    12
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.13
 :memory                    3.46
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1547469
 :num-checks                1
 :propagations              36
 :rlimit-count              13142
 :time                      0.01
 :total-time                0.03)
