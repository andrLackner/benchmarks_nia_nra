unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x2333 (* (- 18) (* x00 z!1))))
 (let ((?x2943 (* z00 z00 y!2)))
 (let ((?x2918 (* (- 108) x!3)))
 (let ((?x1533 (* y!2 z!1)))
 (let ((?x2534 (* 12 ?x1533)))
 (let ((?x1023 (* y00 z!1)))
 (let ((?x1193 (* (- 12) ?x1023)))
 (let ((?x2920 (* (- 72) y!2)))
 (let ((?x651 (* y00 y00)))
 (let ((?x1103 (* 24 ?x651)))
 (let ((?x584 (* z00 y00)))
 (let ((?x859 (* (- 6) ?x584)))
 (let ((?x581 (* x!3 z!1)))
 (let ((?x2455 (* 18 ?x581)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2331 (+ ?x67 ?x74 ?x2455 ?x859 (* (- 18) (* z00 x00)) ?x1103 (* (- 1) (* z00 z00 y00)) (* 6 (* z00 y!2)) ?x2920 ?x1193 (* 18 (* z00 x!3)) (* (- 12) (* y00 y!2)) ?x2534 (* (- 12) (* y!2 y!2)) ?x2918 (* (- 1) (* z00 y!2 z!1)) ?x2943 (* z00 y00 z!1) ?x2333)))
 (let (($x2849 (<= ?x2331 0)))
 (let (($x2545 (= ?x2331 0)))
 (let ((?x1259 (+ y!2 x!3)))
 (let ((?x2661 (+ y!2 z!1)))
 (let ((?x1553 (+ 6 z!1)))
 (let ((?x1050 (+ 1 n!0)))
 (let ((?x799 (* 12 (* y00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x1556 (* (- 18) (* x00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x858 (* 6 (* y00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x1375 (* 12 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x1671 (* 18 (* x00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x674 (* (- 12) (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x560 (* (- 1) (* z00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2035 (* (- 12) (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x463 (* (- 12) (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x486 (* (- 18) (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x1042 (* (- 1) (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259))))
 (let ((?x2103 (* (- 18) (* x00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x2111 (* (- 1) (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x2099 (* 6 (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2184 (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)))
 (let ((?x2750 (* (- 12) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x1363 (* (- 1) (* y00 z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x444 (* 6 (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x2775 (* 12 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2783 (* 24 (* y00 y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x735 (* 18 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x736 (* 18 (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259 ?x1259))))
 (let ((?x1007 (* (- 12) (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x1283 (* (- 1) (* y00 z00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x1402 (* (- 6) (* z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x1447 (* (- 18) (* z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259 ?x1259))))
 (let ((?x2766 (* (- 1) (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2769 (* 18 (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2773 (* (- 18) (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x1973 (* (- 12) (* ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2767 (* (- 12) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x503 (* (- 6) (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x2363 (* 12 (* ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2365 (* 18 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259 ?x1259))))
 (let ((?x2338 (* (- 24) (* y00 y00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x781 (* (- 6) (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x1069 (* (- 1) (* y00 z00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x2610 (* (- 18) (* ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259 ?x1259))))
 (let ((?x737 (* y00 z00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)))
 (let ((?x461 (* (- 1) (* z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x2001 (* 24 (* y00 y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259))))
 (let ((?x1558 (* 12 (* y00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x1033 (* 18 (* x00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259))))
 (let ((?x765 (+ ?x1033 (* (- 72) (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) (* (- 108) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259 ?x1259)) (* (- 24) (* y00 y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) (* 18 (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259)) ?x1558 ?x2001 ?x461 (* (- 18) (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259)) (* 12 (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259)) (* (- 18) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259)) (* y00 z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259) ?x737 (* 6 (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) ?x2610 ?x1069 (* 6 (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259)) ?x781 (* (- 18) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259)) ?x2338 ?x2365 ?x2363 (* 18 (* x00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) (* 72 (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259)) (* 108 (* ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259 ?x1259)) (* (- 72) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259)) (* (- 6) (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) ?x503 (* (- 12) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) (* 108 (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259)) (* (- 72) (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259)) ?x2767 ?x1973 (* (- 108) (* x00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259)) (* (- 72) (* y00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259)) ?x2773 (* z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259) ?x2769 ?x2766 ?x1447 (* (- 6) (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259)) ?x1402 (* 108 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259)) ?x1283 ?x1007 ?x736 (* (- 108) (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) (* 12 (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661)) ?x735 (* (- 72) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259)) ?x2783 (* 12 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661)) (* y00 z00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259) ?x2775 (* (- 108) (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259)) (* (- 1) (* z00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) ?x444 (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259) ?x1363 ?x2750 (* (- 24) (* y00 y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259)) (* 72 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) ?x2184 ?x2099 ?x2111 ?x2103 ?x1042 (* 108 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259)) ?x486 ?x463 (* 18 (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661)) (* (- 18) (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259)) (* 12 (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259)) ?x2035 (* z00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259) (* 12 (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) ?x560 (* (- 12) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259)) (* 72 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x1259 ?x1259)) (* 72 (* ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259)) ?x674 (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259) ?x1671 (* 12 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259)) (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259) (* (- 1) (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661)) ?x1375 (* 108 (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259)) ?x858 (* 72 (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259 ?x1259)) (* (- 108) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259)) (* z00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x1259 ?x1259 ?x1259) (* 18 (* x00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x1259 ?x1259)) ?x1556 ?x799)))
 (let (($x710 (= ?x765 0)))
 (let (($x603 (not $x710)))
 (let ((?x1026 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x2310 (* y!2 y!2)))
 (let ((?x2737 (* 24 ?x2310)))
 (let ((?x966 (* 108 (* x!3 x!3))))
 (let ((?x1369 (* 108 (* x00 x00))))
 (let ((?x1266 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1262 (* z00 z00 z00 y00)))
 (let ((?x1172 (* (- 36) (* z00 y00 x00))))
 (let ((?x1057 (* 16 (* y00 y00 y00))))
 (let ((?x971 (* z00 z00 x00)))
 (let ((?x1222 (* (- 18) ?x971)))
 (let ((?x843 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x785 (* z00 z00 y00)))
 (let ((?x1323 (* (- 10) ?x785)))
 (let ((?x760 (* z00 y00 y00)))
 (let ((?x795 (* (- 12) ?x760)))
 (let ((?x1122 (* 96 ?x651)))
 (let ((?x621 (* z00 x00)))
 (let ((?x539 (* 36 ?x621)))
 (let ((?x949 (* 24 ?x584)))
 (let ((?x531 (* y00 x00)))
 (let ((?x522 (* 216 ?x531)))
 (let ((?x1694 (+ ?x522 (* z00 z00 y!2 y!2) (* (- 2) (* z00 z00 z00 x!3)) ?x949 ?x539 (* 18 (* z00 z00 x!3)) ?x1122 (* (- 108) (* x00 y!2)) ?x795 (* 108 (* y!2 x!3)) ?x1323 (* (- 24) (* z00 y!2)) ?x843 (* (- 6) (* z00 y!2 y!2)) ?x1222 ?x1057 (* 18 (* z00 y00 y!2)) (* (- 216) (* y00 x!3)) ?x1172 (* (- 1) (* z00 z00 z00 y!2)) ?x1262 ?x1266 ?x1369 ?x966 (* (- 36) (* z00 x!3)) (* (- 120) (* y00 y!2)) (* 36 (* z00 y00 x!3)) (* (- 216) (* x00 x!3)) (* (- 12) (* y00 y!2 y!2)) ?x2737 (* 10 ?x2943) ?x1026)))
 (let ((?x1136 (* z00 y00 y!2)))
 (let ((?x2983 (* 36 ?x651)))
 (let ((?x700 (* 6 ?x584)))
 (let ((?x1180 (+ ?x67 ?x74 (* 18 ?x531) ?x2455 ?x700 (* 3 (* z00 z00 x!3)) ?x2983 (* (- 18) (* x00 y!2)) ?x760 (* 18 (* y!2 x!3)) (* (- 3) ?x785) (* (- 6) (* z00 y!2)) ?x2920 (* (- 2) (* z00 y!2 y!2)) (* (- 3) ?x971) ?x1193 ?x1136 (* (- 18) (* y00 x!3)) (* (- 3) (* z00 x00 z!1)) (* 3 (* z00 x!3 z!1)) (* (- 36) (* y00 y!2)) ?x2534 (* (- 1) (* y00 y!2 z!1)) (* (- 1) (* y!2 y!2 z!1)) (* 2 (* y00 y00 z!1)) ?x2918 (* 3 ?x2943) ?x2333)))
 (let ((?x443 (* z00 z00)))
 (let ((?x2258 (* (- 6) ?x443)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2919 (+ ?x67 ?x55 ?x74 ?x2258 (* (- 18) ?x584) (* 6 (* z00 z!1)) ?x2920 (* 12 ?x1023) (* 6 ?x1533) (* (- 1) (* z00 z00 z!1)) ?x2918)))
 (let (($x2916 (= ?x2919 0)))
 (let ((?x1049 (* z!1 z!1)))
 (let ((?x2804 (* (- 1) ?x443)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x659 (+ ?x49 ?x43 ?x2804 (* (- 12) y!2) ?x1049 (* (- 6) z!1))))
 (let (($x1523 (= ?x659 0)))
 (let ((?x660 (* (- 6) n00)))
 (let ((?x682 (+ z00 ?x660 (* 6 n!0) (* (- 1) z!1))))
 (let (($x683 (= ?x682 0)))
 (let (($x2842 (and $x683 $x1523 $x2916 $x2545 (= ?x1180 0) (= ?x1694 0) $x603)))
 (let ((?x575 (+ x!3 y!2)))
 (let ((?x1024 (* 12 (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x2584 (* (- 1) (* z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2656 (* (- 18) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x1526 (* (- 1) (* z00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x681 (* (- 1) (* z00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x2904 (* (- 12) (* y00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2280 (* (- 18) (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2871 (* 12 (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2870 (* 6 (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x2171 (* 6 (* z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x1871 (* 18 (* x00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2317 (* (- 12) (* y00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x910 (* (- 6) (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x1055 (* (- 18) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575 ?x575))))
 (let ((?x911 (* 18 (* z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575 ?x575))))
 (let ((?x1623 (* 24 (* y00 y00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x921 (* (- 24) (* y00 y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x777 (* (- 18) (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575 ?x575))))
 (let ((?x3019 (* (- 1) (* y00 z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575))))
 (let ((?x1490 (* (- 1) (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x1704 (* 12 (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x1672 (* 18 (* x00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x995 (* 6 (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2043 (* (- 18) (* x00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2232 (* 18 (* ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575 ?x575))))
 (let ((?x1669 (* (- 1) (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x1155 (* (- 12) (* ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x1149 (* (- 24) (* y00 y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x2197 (* 18 (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x1043 (* (- 12) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x1185 (* (- 6) (* y00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x3096 (* (- 12) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x2073 (* z00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)))
 (let ((?x583 (* (- 6) (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x945 (* 12 (* ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x856 (* 12 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x2806 (* (- 1) (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x3089 (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661)))
 (let ((?x2896 (* 18 (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2619 (* (- 1) (* y00 z00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x3092 (* 12 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x852 (* 12 (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575))))
 (let ((?x1411 (* (- 18) (* x00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2281 (+ (* 72 (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) (* 108 (* x00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575)) (* (- 12) (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661)) ?x1411 ?x852 (* (- 12) (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575)) (* (- 18) (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575)) (* y00 z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575) ?x3092 (* (- 12) (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) ?x2619 ?x2896 (* (- 12) (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575)) ?x3089 ?x2806 ?x856 (* (- 72) (* ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575)) (* (- 72) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575)) (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575) (* 72 (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575)) ?x945 ?x583 (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575) (* y00 z00 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575) ?x2073 (* (- 108) (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575)) ?x3096 ?x1185 ?x1043 (* y00 z00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575) (* (- 108) (* ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575 ?x575)) (* (- 1) ?x737) (* (- 6) (* y00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) (* (- 1) ?x2184) (* 72 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575 ?x575)) (* (- 6) (* y00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575)) (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575 ?x575) (* (- 18) (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661)) ?x2197 ?x1149 ?x1155 (* 24 (* y00 y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) ?x1669 ?x2232 (* 108 (* x00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575)) (* (- 18) (* x00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575)) ?x2043 ?x995 ?x1672 (* 108 (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) ?x1704 ?x1490 (* (- 72) (* y00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575)) ?x3019 ?x777 ?x921 (* (- 108) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575)) (* 18 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575)) (* (- 108) (* x00 ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575)) (* 12 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575)) ?x1623 (* 24 (* y00 y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575)) ?x911 (* (- 72) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) (* (- 18) (* x00 z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661)) (* 72 (* y00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575)) ?x1055 (* 108 (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575 ?x575)) ?x910 (* 6 (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) (* 12 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661)) ?x2317 ?x1871 ?x2171 (* 6 (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575)) ?x2870 (* (- 72) (* y00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575)) ?x2871 (* 72 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575)) ?x2280 (* 18 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x1553 ?x2661 ?x575)) (* z00 z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x575 ?x575) (* (- 12) (* ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575)) ?x2904 ?x681 (* (- 108) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575)) (* (- 12) (* ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661)) (* 108 (* ?x1050 ?x1050 ?x1050 ?x1553 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575)) ?x1526 ?x2656 (* 18 (* z00 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575 ?x575 ?x575)) ?x2584 (* 18 (* z00 ?x1050 ?x1050 ?x1050 ?x1553 ?x1553 ?x1553 ?x2661 ?x575)) ?x1024 (* z00 z00 ?x1050 ?x1553 ?x1553 ?x2661 ?x2661 ?x2661 ?x2661 ?x575 ?x575 ?x575))))
 (let ((?x2632 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x522 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x949 ?x539 ?x2737 ?x1122 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x795 ?x1323 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x843 ?x966 ?x1026 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1222 (* (- 216) (* x!3 y00)) ?x1057 (* (- 12) (* y!2 y!2 y00)) ?x1172 (* (- 216) (* x!3 x00)) ?x1262 ?x1266 (* 36 (* x!3 z00 y00)) ?x1369)))
 (let ((?x972 (* 3 ?x971)))
 (let ((?x1034 (* 3 ?x785)))
 (let ((?x767 (* (- 1) ?x760)))
 (let ((?x755 (* 18 (* z!1 x00))))
 (let ((?x954 (* (- 36) ?x651)))
 (let ((?x2524 (* z!1 y00)))
 (let ((?x2283 (* 12 ?x2524)))
 (let ((?x1215 (* (- 18) ?x581)))
 (let ((?x532 (* (- 18) ?x531)))
 (let ((?x490 (* (- 12) ?x1533)))
 (let ((?x1718 (* y!2 y!2 z!1)))
 (let ((?x663 (* (- 108) x00)))
 (let ((?x606 (* (- 72) y00)))
 (let ((?x422 (* 72 y!2)))
 (let ((?x2809 (* 108 x!3)))
 (let ((?x3095 (+ ?x2809 ?x422 ?x606 ?x663 (* (- 3) (* y!2 z00 z00)) ?x1718 ?x490 ?x532 (* (- 18) (* x!3 y!2)) ?x1215 ?x2283 ?x859 ?x954 ?x755 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x767 ?x1034 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x972 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x680 (* (- 24) ?x651)))
 (let ((?x622 (* 18 ?x621)))
 (let ((?x2800 (+ ?x2809 ?x422 ?x606 ?x663 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x490 ?x1215 ?x2283 ?x700 ?x622 (* 12 ?x2310) ?x680 ?x755 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x785 (* (- 18) (* x!3 z00)))))
 (let ((?x585 (* 18 ?x584)))
 (let ((?x547 (* 6 ?x443)))
 (let ((?x536 (* (- 1) ?x55)))
 (let ((?x715 (+ ?x2809 ?x422 ?x606 ?x536 ?x663 (* z!1 z00 z00) ?x547 (* (- 6) ?x1533) (* (- 12) ?x2524) ?x585 (* (- 6) (* z!1 z00)))))
 (let ((?x514 (* (- 12) y00)))
 (let ((?x513 (* (- 6) z00)))
 (let (($x2112 (= (+ (* 12 y!2) (* 6 z!1) ?x513 ?x514 (* (- 1) ?x1049) ?x443) 0)))
 (let (($x963 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x2112 (= ?x715 0) (= ?x2800 0) (= ?x3095 0) (= ?x2632 0) (not (= ?x2281 0)))))
 (let (($x1677 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x538 (+ 6 z)))
 (let ((?x552 (+ 1 n)))
 (let ((?x3233 (* z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3203 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x629 (* 12 ?x3203)))
 (let ((?x3172 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1391 (* 18 ?x3172)))
 (let ((?x3156 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 1) ?x3156)))
 (let ((?x3126 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x616 (* 18 ?x3126)))
 (let ((?x3109 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1975 (* (- 18) ?x3109)))
 (let ((?x3102 (* z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2357 (* (- 1) ?x3102)))
 (let ((?x3072 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x614 (* 108 ?x3072)))
 (let ((?x3055 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217)))
 (let ((?x613 (* (- 12) ?x3055)))
 (let ((?x3047 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1986 (* (- 108) ?x3047)))
 (let ((?x3040 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1920 (* (- 1) ?x3040)))
 (let ((?x3032 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1640 (* (- 12) ?x3032)))
 (let ((?x3024 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2013 (* (- 12) ?x3024)))
 (let ((?x3003 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2973 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x2241 (* 18 ?x2973)))
 (let ((?x2956 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1952 (* (- 18) ?x2956)))
 (let ((?x2926 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2423 (* 72 ?x2926)))
 (let ((?x2895 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2418 (* 12 ?x2895)))
 (let ((?x2878 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x883 (* (- 72) ?x2878)))
 (let ((?x2848 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x905 (* 6 ?x2848)))
 (let ((?x2817 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x994 (* 6 ?x2817)))
 (let ((?x2790 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1433 (* 6 ?x2790)))
 (let ((?x2761 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1430 (* 18 ?x2761)))
 (let ((?x2727 (* y00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1234 (* (- 12) ?x2727)))
 (let ((?x2694 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x902 (* 12 ?x2694)))
 (let ((?x2681 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1201 (* 6 ?x2681)))
 (let ((?x2671 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1435 (* (- 6) ?x2671)))
 (let ((?x2664 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2239 (* 108 ?x2664)))
 (let ((?x2593 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1239 (* (- 18) ?x2593)))
 (let ((?x2580 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1162 (* 72 ?x2580)))
 (let ((?x2562 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1036 (* (- 18) ?x2562)))
 (let ((?x2554 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x913 (* (- 72) ?x2554)))
 (let ((?x2457 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1219 (* 18 ?x2457)))
 (let ((?x2453 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x993 (* 24 ?x2453)))
 (let ((?x2427 (* y00 y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1220 (* 24 ?x2427)))
 (let ((?x2416 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1221 (* 12 ?x2416)))
 (let ((?x2395 (* x00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x405 (* (- 108) ?x2395)))
 (let ((?x2384 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x835 (* 18 ?x2384)))
 (let ((?x2345 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x428 (* (- 108) ?x2345)))
 (let ((?x2316 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1182 (* (- 24) ?x2316)))
 (let ((?x2305 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2298 (* (- 18) ?x2305)))
 (let ((?x2282 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1382 (* (- 1) ?x2282)))
 (let ((?x2216 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2436 (* (- 72) ?x2216)))
 (let ((?x2207 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* (- 1) ?x2207)))
 (let ((?x2192 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1737 (* 12 ?x2192)))
 (let ((?x2144 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2187 (* 108 ?x2144)))
 (let ((?x2133 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x931 (* 18 ?x2133)))
 (let ((?x2129 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2252 (* 6 ?x2129)))
 (let ((?x2030 (* x00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2629 (* (- 18) ?x2030)))
 (let ((?x2018 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2618 (* (- 18) ?x2018)))
 (let ((?x1984 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x908 (* 108 ?x1984)))
 (let ((?x1972 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2189 (* 18 ?x1972)))
 (let ((?x1933 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2438 (* (- 1) ?x1933)))
 (let ((?x1913 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2466 (* 24 ?x1913)))
 (let ((?x1898 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2249 (* (- 12) ?x1898)))
 (let ((?x1891 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1429 (* (- 24) ?x1891)))
 (let ((?x1886 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1432 (* 18 ?x1886)))
 (let ((?x1838 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x440 (* (- 18) ?x1838)))
 (let ((?x1801 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1783 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2621 (* (- 6) ?x1783)))
 (let ((?x1760 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2548 (* 72 ?x1760)))
 (let ((?x1743 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x2579 (* (- 1) ?x1743)))
 (let ((?x1697 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1198 (* (- 6) ?x1697)))
 (let ((?x1693 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2475 (* (- 1) ?x1693)))
 (let ((?x1650 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2571 (* (- 108) ?x1650)))
 (let ((?x1593 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1581 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2330 (* (- 12) ?x1581)))
 (let ((?x1547 (* y00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1054 (* (- 6) ?x1547)))
 (let ((?x1519 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2478 (* (- 12) ?x1519)))
 (let ((?x1492 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1060 (* (- 108) ?x1492)))
 (let ((?x1485 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1455 (* y00 z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1448 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1441 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2477 (* (- 6) ?x1441)))
 (let ((?x1415 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x650 (* 12 ?x1415)))
 (let ((?x1379 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2479 (* 72 ?x1379)))
 (let ((?x1352 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1337 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1233 (* (- 72) ?x1337)))
 (let ((?x1225 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1199 (* (- 72) ?x1225)))
 (let ((?x1175 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x907 (* 12 ?x1175)))
 (let ((?x1173 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x889 (* (- 1) ?x1173)))
 (let ((?x1095 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x985 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2328 (* (- 12) ?x985)))
 (let ((?x962 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x932 (* 18 ?x962)))
 (let ((?x946 (* y00 z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2704 (* (- 1) ?x946)))
 (let ((?x935 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x928 (* (- 12) ?x935)))
 (let ((?x853 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1982 (* 12 ?x853)))
 (let ((?x816 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x729 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x933 (* (- 18) ?x729)))
 (let ((?x720 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1865 (* (- 12) ?x720)))
 (let ((?x701 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x934 (* 12 ?x701)))
 (let ((?x521 (* x00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2472 (* (- 18) ?x521)))
 (let ((?x508 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2693 (* (- 12) ?x508)))
 (let ((?x450 (* x00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2701 (* 108 ?x450)))
 (let ((?x427 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1863 (* 72 ?x427)))
 (let ((?x3197 (+ ?x1863 ?x2701 ?x2693 ?x2472 ?x934 ?x1865 ?x933 ?x816 ?x1982 ?x928 ?x2704 ?x932 ?x2328 ?x1095 ?x889 ?x907 ?x1199 ?x1233 ?x1352 ?x2479 ?x650 ?x2477 ?x1448 ?x1455 ?x1485 ?x1060 ?x2478 ?x1054 ?x2330 ?x1593 ?x2571 ?x2475 ?x1198 ?x2579 ?x2548 ?x2621 ?x1801 ?x440 ?x1432 ?x1429 ?x2249 ?x2466 ?x2438 ?x2189 ?x908 ?x2618 ?x2629 ?x2252 ?x931 ?x2187 ?x1737 ?x1821 ?x2436 ?x1382 ?x2298 ?x1182 ?x428 ?x835 ?x405 ?x1221 ?x1220 ?x993 ?x1219 ?x913 ?x1036 ?x1162 ?x1239 ?x2239 ?x1435 ?x1201 ?x902 ?x1234 ?x1430 ?x1433 ?x994 ?x905 ?x883 ?x2418 ?x2423 ?x1952 ?x2241 ?x3003 ?x2013 ?x1640 ?x1920 ?x1986 ?x613 ?x614 ?x2357 ?x1975 ?x616 ?x1384 ?x1391 ?x629 ?x3233)))
 (let ((?x1369 (* 108 (* x00 x00))))
 (let ((?x1266 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1262 (* z00 z00 z00 y00)))
 (let ((?x1172 (* (- 36) (* z00 y00 x00))))
 (let ((?x1057 (* 16 (* y00 y00 y00))))
 (let ((?x971 (* z00 z00 x00)))
 (let ((?x1222 (* (- 18) ?x971)))
 (let ((?x927 (* (- 4) (* y y y))))
 (let ((?x875 (* 108 (* x x))))
 (let ((?x843 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x785 (* z00 z00 y00)))
 (let ((?x1323 (* (- 10) ?x785)))
 (let ((?x760 (* z00 y00 y00)))
 (let ((?x795 (* (- 12) ?x760)))
 (let ((?x651 (* y00 y00)))
 (let ((?x1122 (* 96 ?x651)))
 (let ((?x625 (* y y)))
 (let ((?x870 (* 24 ?x625)))
 (let ((?x621 (* z00 x00)))
 (let ((?x539 (* 36 ?x621)))
 (let ((?x584 (* z00 y00)))
 (let ((?x949 (* 24 ?x584)))
 (let ((?x531 (* y00 x00)))
 (let ((?x522 (* 216 ?x531)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1389 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x522 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x949 ?x539 ?x870 ?x1122 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x795 ?x1323 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x843 ?x875 ?x927 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1222 (* (- 216) (* x y00)) ?x1057 (* (- 12) (* y y y00)) ?x1172 (* (- 216) (* x x00)) ?x1262 ?x1266 (* 36 (* x z00 y00)) ?x1369)))
 (let (($x1394 (= ?x1389 0)))
 (let ((?x972 (* 3 ?x971)))
 (let ((?x1034 (* 3 ?x785)))
 (let ((?x767 (* (- 1) ?x760)))
 (let ((?x697 (* 18 (* z x00))))
 (let ((?x954 (* (- 36) ?x651)))
 (let ((?x859 (* (- 6) ?x584)))
 (let ((?x558 (* z y00)))
 (let ((?x559 (* 12 ?x558)))
 (let ((?x592 (* (- 18) (* x z))))
 (let ((?x532 (* (- 18) ?x531)))
 (let ((?x527 (* y z)))
 (let ((?x551 (* (- 12) ?x527)))
 (let ((?x135 (* y y z)))
 (let ((?x663 (* (- 108) x00)))
 (let ((?x606 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1090 (+ ?x64 ?x71 ?x606 ?x663 (* (- 3) (* y z00 z00)) ?x135 ?x551 ?x532 (* (- 18) (* x y)) ?x592 ?x559 ?x859 ?x954 ?x697 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x767 ?x1034 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x972 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1097 (= ?x1090 0)))
 (let ((?x680 (* (- 24) ?x651)))
 (let ((?x628 (* 12 ?x625)))
 (let ((?x622 (* 18 ?x621)))
 (let ((?x700 (* 6 ?x584)))
 (let ((?x103 (* y z z00)))
 (let ((?x839 (+ ?x64 ?x71 ?x606 ?x663 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x551 ?x592 ?x559 ?x700 ?x622 ?x628 ?x680 ?x697 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x785 (* (- 18) (* x z00)))))
 (let (($x844 (= ?x839 0)))
 (let ((?x585 (* 18 ?x584)))
 (let ((?x443 (* z00 z00)))
 (let ((?x547 (* 6 ?x443)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x536 (* (- 1) ?x55)))
 (let ((?x679 (+ ?x64 ?x71 ?x606 ?x536 ?x663 ?x76 ?x547 (* (- 6) ?x527) (* (- 12) ?x558) ?x585 (* (- 6) (* z z00)))))
 (let (($x684 (= ?x679 0)))
 (let ((?x50 (* z z)))
 (let ((?x515 (* (- 1) ?x50)))
 (let ((?x514 (* (- 12) y00)))
 (let ((?x513 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x517 (= (+ ?x45 ?x46 ?x513 ?x514 ?x515 ?x443) 0)))
 (let (($x435 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x435 $x517 $x684 $x844 $x1097 $x1394 (not (= ?x3197 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x3242 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x538 (+ 6 z)))
 (let ((?x552 (+ 1 n)))
 (let ((?x3233 (* z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3203 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x629 (* 12 ?x3203)))
 (let ((?x3172 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1391 (* 18 ?x3172)))
 (let ((?x3156 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 1) ?x3156)))
 (let ((?x3126 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x616 (* 18 ?x3126)))
 (let ((?x3109 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1975 (* (- 18) ?x3109)))
 (let ((?x3102 (* z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2357 (* (- 1) ?x3102)))
 (let ((?x3072 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x614 (* 108 ?x3072)))
 (let ((?x3055 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217)))
 (let ((?x613 (* (- 12) ?x3055)))
 (let ((?x3047 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1986 (* (- 108) ?x3047)))
 (let ((?x3040 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1920 (* (- 1) ?x3040)))
 (let ((?x3032 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1640 (* (- 12) ?x3032)))
 (let ((?x3024 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2013 (* (- 12) ?x3024)))
 (let ((?x3003 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2973 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x2241 (* 18 ?x2973)))
 (let ((?x2956 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1952 (* (- 18) ?x2956)))
 (let ((?x2926 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2423 (* 72 ?x2926)))
 (let ((?x2895 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2418 (* 12 ?x2895)))
 (let ((?x2878 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x883 (* (- 72) ?x2878)))
 (let ((?x2848 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x905 (* 6 ?x2848)))
 (let ((?x2817 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x994 (* 6 ?x2817)))
 (let ((?x2562 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1036 (* (- 18) ?x2562)))
 (let ((?x2554 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x913 (* (- 72) ?x2554)))
 (let ((?x2694 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x902 (* 12 ?x2694)))
 (let ((?x2453 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x993 (* 24 ?x2453)))
 (let ((?x2664 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2239 (* 108 ?x2664)))
 (let ((?x1891 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1429 (* (- 24) ?x1891)))
 (let ((?x2761 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1430 (* 18 ?x2761)))
 (let ((?x2790 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1433 (* 6 ?x2790)))
 (let ((?x2593 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1239 (* (- 18) ?x2593)))
 (let ((?x1886 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1432 (* 18 ?x1886)))
 (let ((?x2727 (* y00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1234 (* (- 12) ?x2727)))
 (let ((?x2416 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1221 (* 12 ?x2416)))
 (let ((?x1337 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1233 (* (- 72) ?x1337)))
 (let ((?x2580 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1162 (* 72 ?x2580)))
 (let ((?x2395 (* x00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x405 (* (- 108) ?x2395)))
 (let ((?x2457 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1219 (* 18 ?x2457)))
 (let ((?x2427 (* y00 y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1220 (* 24 ?x2427)))
 (let ((?x2384 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x835 (* 18 ?x2384)))
 (let ((?x2345 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x428 (* (- 108) ?x2345)))
 (let ((?x2316 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1182 (* (- 24) ?x2316)))
 (let ((?x2305 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2298 (* (- 18) ?x2305)))
 (let ((?x2192 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1737 (* 12 ?x2192)))
 (let ((?x2216 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2436 (* (- 72) ?x2216)))
 (let ((?x2207 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* (- 1) ?x2207)))
 (let ((?x1933 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2438 (* (- 1) ?x1933)))
 (let ((?x2144 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2187 (* 108 ?x2144)))
 (let ((?x1913 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2466 (* 24 ?x1913)))
 (let ((?x2018 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2618 (* (- 18) ?x2018)))
 (let ((?x2030 (* x00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2629 (* (- 18) ?x2030)))
 (let ((?x1650 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2571 (* (- 108) ?x1650)))
 (let ((?x1972 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2189 (* 18 ?x1972)))
 (let ((?x1095 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1783 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2621 (* (- 6) ?x1783)))
 (let ((?x1898 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2249 (* (- 12) ?x1898)))
 (let ((?x1743 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x2579 (* (- 1) ?x1743)))
 (let ((?x1838 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x440 (* (- 18) ?x1838)))
 (let ((?x1801 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1693 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2475 (* (- 1) ?x1693)))
 (let ((?x1760 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2548 (* 72 ?x1760)))
 (let ((?x1441 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2477 (* (- 6) ?x1441)))
 (let ((?x1581 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2330 (* (- 12) ?x1581)))
 (let ((?x1379 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2479 (* 72 ?x1379)))
 (let ((?x985 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2328 (* (- 12) ?x985)))
 (let ((?x1593 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x720 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1865 (* (- 12) ?x720)))
 (let ((?x1547 (* y00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1054 (* (- 6) ?x1547)))
 (let ((?x1519 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2478 (* (- 12) ?x1519)))
 (let ((?x1485 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x946 (* y00 z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2704 (* (- 1) ?x946)))
 (let ((?x427 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1863 (* 72 ?x427)))
 (let ((?x521 (* x00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2472 (* (- 18) ?x521)))
 (let ((?x508 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2693 (* (- 12) ?x508)))
 (let ((?x450 (* x00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2701 (* 108 ?x450)))
 (let ((?x1448 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1352 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2129 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2252 (* 6 ?x2129)))
 (let ((?x2681 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1201 (* 6 ?x2681)))
 (let ((?x1225 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1199 (* (- 72) ?x1225)))
 (let ((?x1697 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1198 (* (- 6) ?x1697)))
 (let ((?x1415 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x650 (* 12 ?x1415)))
 (let ((?x1492 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1060 (* (- 108) ?x1492)))
 (let ((?x2671 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1435 (* (- 6) ?x2671)))
 (let ((?x2282 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1382 (* (- 1) ?x2282)))
 (let ((?x816 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x853 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1982 (* 12 ?x853)))
 (let ((?x701 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x934 (* 12 ?x701)))
 (let ((?x729 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x933 (* (- 18) ?x729)))
 (let ((?x962 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x932 (* 18 ?x962)))
 (let ((?x1984 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x908 (* 108 ?x1984)))
 (let ((?x2133 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x931 (* 18 ?x2133)))
 (let ((?x935 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x928 (* (- 12) ?x935)))
 (let ((?x1175 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x907 (* 12 ?x1175)))
 (let ((?x1173 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x889 (* (- 1) ?x1173)))
 (let ((?x1455 (* y00 z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x647 (+ ?x1455 ?x889 ?x907 ?x928 ?x931 ?x908 ?x932 ?x933 ?x934 ?x1982 ?x816 ?x1382 ?x1435 ?x1060 ?x650 ?x1198 ?x1199 ?x1201 ?x2252 ?x1352 ?x1448 ?x2701 ?x2693 ?x2472 ?x1863 ?x2704 ?x1485 ?x2478 ?x1054 ?x1865 ?x1593 ?x2328 ?x2479 ?x2330 ?x2477 ?x2548 ?x2475 ?x1801 ?x440 ?x2579 ?x2249 ?x2621 ?x1095 ?x2189 ?x2571 ?x2629 ?x2618 ?x2466 ?x2187 ?x2438 ?x1821 ?x2436 ?x1737 ?x2298 ?x1182 ?x428 ?x835 ?x1220 ?x1219 ?x405 ?x1162 ?x1233 ?x1221 ?x1234 ?x1432 ?x1239 ?x1433 ?x1430 ?x1429 ?x2239 ?x993 ?x902 ?x913 ?x1036 ?x994 ?x905 ?x883 ?x2418 ?x2423 ?x1952 ?x2241 ?x3003 ?x2013 ?x1640 ?x1920 ?x1986 ?x613 ?x614 ?x2357 ?x1975 ?x616 ?x1384 ?x1391 ?x629 ?x3233)))
 (let ((?x1369 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x651 (* y00 y00)))
 (let ((?x1122 (* 96 ?x651)))
 (let ((?x1057 (* 16 (* y00 y00 y00))))
 (let ((?x927 (* (- 4) (* y y y))))
 (let ((?x875 (* 108 (* x x))))
 (let ((?x625 (* y y)))
 (let ((?x870 (* 24 ?x625)))
 (let ((?x1206 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x870 ?x875 ?x927 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1057 (* (- 6) (* z00 y y)) ?x1122 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1369 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2291 (= ?x1206 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2256 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1263 (* (- 108) x)))
 (let ((?x473 (* x00 z)))
 (let ((?x1083 (* (- 18) ?x473)))
 (let ((?x2983 (* 36 ?x651)))
 (let ((?x2617 (* z y)))
 (let ((?x2311 (* 12 ?x2617)))
 (let ((?x989 (* z00 y)))
 (let ((?x669 (* (- 6) ?x989)))
 (let ((?x1284 (* y00 z00)))
 (let ((?x494 (* 6 ?x1284)))
 (let ((?x1576 (* y00 z)))
 (let ((?x1401 (* (- 12) ?x1576)))
 (let ((?x897 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1712 (* z x)))
 (let ((?x2857 (* 18 ?x1712)))
 (let ((?x1463 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x2857 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x897 ?x1401 ?x494 (* (- 36) (* y00 y)) ?x669 ?x2311 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x2983 ?x1083 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1263 ?x67 (* (- 18) (* y00 x)) ?x2256 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x537 (* z00 z00 y)))
 (let ((?x1029 (* 6 ?x989)))
 (let ((?x1458 (* (- 6) ?x1284)))
 (let ((?x1103 (* 24 ?x651)))
 (let ((?x2613 (* y00 z00 z)))
 (let ((?x1076 (+ ?x2613 ?x2311 ?x2857 (* (- 18) (* x00 z00)) (* (- 12) ?x625) ?x1103 ?x1083 ?x1401 ?x1458 (* (- 12) (* y00 y)) ?x1263 ?x67 ?x1029 ?x2256 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x537)))
 (let ((?x1565 (* 12 ?x1576)))
 (let ((?x443 (* z00 z00)))
 (let ((?x2258 (* (- 6) ?x443)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2062 (+ (* 6 ?x2617) ?x55 ?x2258 ?x1565 (* (- 18) ?x1284) ?x1263 ?x67 (* 6 (* z00 z)) ?x2256 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x515 (* (- 1) ?x50)))
 (let ((?x513 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x514 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x443 ?x514 ?x45 ?x46 ?x513 ?x515) 0) (= ?x2062 0) (= ?x1076 0) (= ?x1463 0) $x2291 (not (= ?x647 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x3189 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x538 (+ 6 z)))
 (let ((?x552 (+ 1 n)))
 (let ((?x3233 (* z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3203 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x629 (* 12 ?x3203)))
 (let ((?x3172 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1391 (* 18 ?x3172)))
 (let ((?x3156 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 1) ?x3156)))
 (let ((?x3126 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x616 (* 18 ?x3126)))
 (let ((?x3109 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1975 (* (- 18) ?x3109)))
 (let ((?x3102 (* z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2357 (* (- 1) ?x3102)))
 (let ((?x3072 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x614 (* 108 ?x3072)))
 (let ((?x3055 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217)))
 (let ((?x613 (* (- 12) ?x3055)))
 (let ((?x3047 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1986 (* (- 108) ?x3047)))
 (let ((?x3040 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1920 (* (- 1) ?x3040)))
 (let ((?x3032 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1640 (* (- 12) ?x3032)))
 (let ((?x3024 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2013 (* (- 12) ?x3024)))
 (let ((?x3003 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2973 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x2241 (* 18 ?x2973)))
 (let ((?x2956 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1952 (* (- 18) ?x2956)))
 (let ((?x2926 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2423 (* 72 ?x2926)))
 (let ((?x2895 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2418 (* 12 ?x2895)))
 (let ((?x2878 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x883 (* (- 72) ?x2878)))
 (let ((?x2848 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x905 (* 6 ?x2848)))
 (let ((?x2817 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x994 (* 6 ?x2817)))
 (let ((?x2790 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1433 (* 6 ?x2790)))
 (let ((?x2761 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1430 (* 18 ?x2761)))
 (let ((?x2727 (* y00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1234 (* (- 12) ?x2727)))
 (let ((?x2694 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x902 (* 12 ?x2694)))
 (let ((?x2681 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1201 (* 6 ?x2681)))
 (let ((?x2671 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1435 (* (- 6) ?x2671)))
 (let ((?x2664 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2239 (* 108 ?x2664)))
 (let ((?x2593 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1239 (* (- 18) ?x2593)))
 (let ((?x2580 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1162 (* 72 ?x2580)))
 (let ((?x2562 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1036 (* (- 18) ?x2562)))
 (let ((?x2554 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x913 (* (- 72) ?x2554)))
 (let ((?x2457 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1219 (* 18 ?x2457)))
 (let ((?x2453 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x993 (* 24 ?x2453)))
 (let ((?x2427 (* y00 y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1220 (* 24 ?x2427)))
 (let ((?x2416 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1221 (* 12 ?x2416)))
 (let ((?x2395 (* x00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x405 (* (- 108) ?x2395)))
 (let ((?x2384 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x835 (* 18 ?x2384)))
 (let ((?x2345 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x428 (* (- 108) ?x2345)))
 (let ((?x2316 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1182 (* (- 24) ?x2316)))
 (let ((?x2305 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2298 (* (- 18) ?x2305)))
 (let ((?x2282 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1382 (* (- 1) ?x2282)))
 (let ((?x2216 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2436 (* (- 72) ?x2216)))
 (let ((?x2207 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* (- 1) ?x2207)))
 (let ((?x2192 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1737 (* 12 ?x2192)))
 (let ((?x2144 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2187 (* 108 ?x2144)))
 (let ((?x2133 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x931 (* 18 ?x2133)))
 (let ((?x2129 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2252 (* 6 ?x2129)))
 (let ((?x2030 (* x00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2629 (* (- 18) ?x2030)))
 (let ((?x2018 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2618 (* (- 18) ?x2018)))
 (let ((?x1984 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x908 (* 108 ?x1984)))
 (let ((?x1972 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2189 (* 18 ?x1972)))
 (let ((?x1933 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2438 (* (- 1) ?x1933)))
 (let ((?x1913 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2466 (* 24 ?x1913)))
 (let ((?x1898 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2249 (* (- 12) ?x1898)))
 (let ((?x1891 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1429 (* (- 24) ?x1891)))
 (let ((?x1886 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1432 (* 18 ?x1886)))
 (let ((?x1838 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x440 (* (- 18) ?x1838)))
 (let ((?x1801 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1783 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2621 (* (- 6) ?x1783)))
 (let ((?x1760 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2548 (* 72 ?x1760)))
 (let ((?x1743 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x2579 (* (- 1) ?x1743)))
 (let ((?x1697 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1198 (* (- 6) ?x1697)))
 (let ((?x1693 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2475 (* (- 1) ?x1693)))
 (let ((?x1650 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2571 (* (- 108) ?x1650)))
 (let ((?x1593 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1581 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2330 (* (- 12) ?x1581)))
 (let ((?x1547 (* y00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1054 (* (- 6) ?x1547)))
 (let ((?x1519 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2478 (* (- 12) ?x1519)))
 (let ((?x1492 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1060 (* (- 108) ?x1492)))
 (let ((?x1485 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1455 (* y00 z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1448 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1441 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2477 (* (- 6) ?x1441)))
 (let ((?x1415 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x650 (* 12 ?x1415)))
 (let ((?x1379 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2479 (* 72 ?x1379)))
 (let ((?x1352 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1337 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1233 (* (- 72) ?x1337)))
 (let ((?x1225 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1199 (* (- 72) ?x1225)))
 (let ((?x1175 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x907 (* 12 ?x1175)))
 (let ((?x1173 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x889 (* (- 1) ?x1173)))
 (let ((?x1095 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x985 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2328 (* (- 12) ?x985)))
 (let ((?x962 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x932 (* 18 ?x962)))
 (let ((?x946 (* y00 z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2704 (* (- 1) ?x946)))
 (let ((?x935 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x928 (* (- 12) ?x935)))
 (let ((?x853 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1982 (* 12 ?x853)))
 (let ((?x816 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x729 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x933 (* (- 18) ?x729)))
 (let ((?x720 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1865 (* (- 12) ?x720)))
 (let ((?x701 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x934 (* 12 ?x701)))
 (let ((?x521 (* x00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2472 (* (- 18) ?x521)))
 (let ((?x508 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2693 (* (- 12) ?x508)))
 (let ((?x450 (* x00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2701 (* 108 ?x450)))
 (let ((?x427 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1863 (* 72 ?x427)))
 (let ((?x3197 (+ ?x1863 ?x2701 ?x2693 ?x2472 ?x934 ?x1865 ?x933 ?x816 ?x1982 ?x928 ?x2704 ?x932 ?x2328 ?x1095 ?x889 ?x907 ?x1199 ?x1233 ?x1352 ?x2479 ?x650 ?x2477 ?x1448 ?x1455 ?x1485 ?x1060 ?x2478 ?x1054 ?x2330 ?x1593 ?x2571 ?x2475 ?x1198 ?x2579 ?x2548 ?x2621 ?x1801 ?x440 ?x1432 ?x1429 ?x2249 ?x2466 ?x2438 ?x2189 ?x908 ?x2618 ?x2629 ?x2252 ?x931 ?x2187 ?x1737 ?x1821 ?x2436 ?x1382 ?x2298 ?x1182 ?x428 ?x835 ?x405 ?x1221 ?x1220 ?x993 ?x1219 ?x913 ?x1036 ?x1162 ?x1239 ?x2239 ?x1435 ?x1201 ?x902 ?x1234 ?x1430 ?x1433 ?x994 ?x905 ?x883 ?x2418 ?x2423 ?x1952 ?x2241 ?x3003 ?x2013 ?x1640 ?x1920 ?x1986 ?x613 ?x614 ?x2357 ?x1975 ?x616 ?x1384 ?x1391 ?x629 ?x3233)))
 (let ((?x1369 (* 108 (* x00 x00))))
 (let ((?x1266 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1262 (* z00 z00 z00 y00)))
 (let ((?x1172 (* (- 36) (* z00 y00 x00))))
 (let ((?x1057 (* 16 (* y00 y00 y00))))
 (let ((?x971 (* z00 z00 x00)))
 (let ((?x1222 (* (- 18) ?x971)))
 (let ((?x927 (* (- 4) (* y y y))))
 (let ((?x875 (* 108 (* x x))))
 (let ((?x843 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x785 (* z00 z00 y00)))
 (let ((?x1323 (* (- 10) ?x785)))
 (let ((?x760 (* z00 y00 y00)))
 (let ((?x795 (* (- 12) ?x760)))
 (let ((?x651 (* y00 y00)))
 (let ((?x1122 (* 96 ?x651)))
 (let ((?x625 (* y y)))
 (let ((?x870 (* 24 ?x625)))
 (let ((?x621 (* z00 x00)))
 (let ((?x539 (* 36 ?x621)))
 (let ((?x584 (* z00 y00)))
 (let ((?x949 (* 24 ?x584)))
 (let ((?x531 (* y00 x00)))
 (let ((?x522 (* 216 ?x531)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1389 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x522 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x949 ?x539 ?x870 ?x1122 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x795 ?x1323 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x843 ?x875 ?x927 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1222 (* (- 216) (* x y00)) ?x1057 (* (- 12) (* y y y00)) ?x1172 (* (- 216) (* x x00)) ?x1262 ?x1266 (* 36 (* x z00 y00)) ?x1369)))
 (let (($x1394 (= ?x1389 0)))
 (let ((?x972 (* 3 ?x971)))
 (let ((?x1034 (* 3 ?x785)))
 (let ((?x767 (* (- 1) ?x760)))
 (let ((?x697 (* 18 (* z x00))))
 (let ((?x954 (* (- 36) ?x651)))
 (let ((?x859 (* (- 6) ?x584)))
 (let ((?x558 (* z y00)))
 (let ((?x559 (* 12 ?x558)))
 (let ((?x592 (* (- 18) (* x z))))
 (let ((?x532 (* (- 18) ?x531)))
 (let ((?x527 (* y z)))
 (let ((?x551 (* (- 12) ?x527)))
 (let ((?x135 (* y y z)))
 (let ((?x663 (* (- 108) x00)))
 (let ((?x606 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1090 (+ ?x64 ?x71 ?x606 ?x663 (* (- 3) (* y z00 z00)) ?x135 ?x551 ?x532 (* (- 18) (* x y)) ?x592 ?x559 ?x859 ?x954 ?x697 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x767 ?x1034 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x972 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1097 (= ?x1090 0)))
 (let ((?x680 (* (- 24) ?x651)))
 (let ((?x628 (* 12 ?x625)))
 (let ((?x622 (* 18 ?x621)))
 (let ((?x700 (* 6 ?x584)))
 (let ((?x103 (* y z z00)))
 (let ((?x839 (+ ?x64 ?x71 ?x606 ?x663 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x551 ?x592 ?x559 ?x700 ?x622 ?x628 ?x680 ?x697 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x785 (* (- 18) (* x z00)))))
 (let (($x844 (= ?x839 0)))
 (let ((?x585 (* 18 ?x584)))
 (let ((?x443 (* z00 z00)))
 (let ((?x547 (* 6 ?x443)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x536 (* (- 1) ?x55)))
 (let ((?x679 (+ ?x64 ?x71 ?x606 ?x536 ?x663 ?x76 ?x547 (* (- 6) ?x527) (* (- 12) ?x558) ?x585 (* (- 6) (* z z00)))))
 (let (($x684 (= ?x679 0)))
 (let ((?x50 (* z z)))
 (let ((?x515 (* (- 1) ?x50)))
 (let ((?x514 (* (- 12) y00)))
 (let ((?x513 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x517 (= (+ ?x45 ?x46 ?x513 ?x514 ?x515 ?x443) 0)))
 (let (($x435 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x775 (and $x435 $x517 $x684 $x844 $x1097 $x1394 (not (= ?x3197 0)))))
 (let ((?x647 (+ ?x1455 ?x889 ?x907 ?x928 ?x931 ?x908 ?x932 ?x933 ?x934 ?x1982 ?x816 ?x1382 ?x1435 ?x1060 ?x650 ?x1198 ?x1199 ?x1201 ?x2252 ?x1352 ?x1448 ?x2701 ?x2693 ?x2472 ?x1863 ?x2704 ?x1485 ?x2478 ?x1054 ?x1865 ?x1593 ?x2328 ?x2479 ?x2330 ?x2477 ?x2548 ?x2475 ?x1801 ?x440 ?x2579 ?x2249 ?x2621 ?x1095 ?x2189 ?x2571 ?x2629 ?x2618 ?x2466 ?x2187 ?x2438 ?x1821 ?x2436 ?x1737 ?x2298 ?x1182 ?x428 ?x835 ?x1220 ?x1219 ?x405 ?x1162 ?x1233 ?x1221 ?x1234 ?x1432 ?x1239 ?x1433 ?x1430 ?x1429 ?x2239 ?x993 ?x902 ?x913 ?x1036 ?x994 ?x905 ?x883 ?x2418 ?x2423 ?x1952 ?x2241 ?x3003 ?x2013 ?x1640 ?x1920 ?x1986 ?x613 ?x614 ?x2357 ?x1975 ?x616 ?x1384 ?x1391 ?x629 ?x3233)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1206 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x870 ?x875 ?x927 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1057 (* (- 6) (* z00 y y)) ?x1122 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1369 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2291 (= ?x1206 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2256 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1263 (* (- 108) x)))
 (let ((?x473 (* x00 z)))
 (let ((?x1083 (* (- 18) ?x473)))
 (let ((?x2983 (* 36 ?x651)))
 (let ((?x2617 (* z y)))
 (let ((?x2311 (* 12 ?x2617)))
 (let ((?x989 (* z00 y)))
 (let ((?x669 (* (- 6) ?x989)))
 (let ((?x1284 (* y00 z00)))
 (let ((?x494 (* 6 ?x1284)))
 (let ((?x1576 (* y00 z)))
 (let ((?x1401 (* (- 12) ?x1576)))
 (let ((?x897 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1712 (* z x)))
 (let ((?x2857 (* 18 ?x1712)))
 (let ((?x1463 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x2857 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x897 ?x1401 ?x494 (* (- 36) (* y00 y)) ?x669 ?x2311 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x2983 ?x1083 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1263 ?x67 (* (- 18) (* y00 x)) ?x2256 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x537 (* z00 z00 y)))
 (let ((?x1029 (* 6 ?x989)))
 (let ((?x1458 (* (- 6) ?x1284)))
 (let ((?x1103 (* 24 ?x651)))
 (let ((?x2613 (* y00 z00 z)))
 (let ((?x1076 (+ ?x2613 ?x2311 ?x2857 (* (- 18) (* x00 z00)) (* (- 12) ?x625) ?x1103 ?x1083 ?x1401 ?x1458 (* (- 12) (* y00 y)) ?x1263 ?x67 ?x1029 ?x2256 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x537)))
 (let ((?x1565 (* 12 ?x1576)))
 (let ((?x2258 (* (- 6) ?x443)))
 (let ((?x2062 (+ (* 6 ?x2617) ?x55 ?x2258 ?x1565 (* (- 18) ?x1284) ?x1263 ?x67 (* 6 (* z00 z)) ?x2256 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x658 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x443 ?x514 ?x45 ?x46 ?x513 ?x515) 0) (= ?x2062 0) (= ?x1076 0) (= ?x1463 0) $x2291 (not (= ?x647 0)))))
 (rewrite (= $x658 $x775))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1254 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x538 (+ 6 z)))
 (let ((?x552 (+ 1 n)))
 (let ((?x3233 (* z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3203 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3156 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3109 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3102 (* z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3032 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3003 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2956 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2895 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2848 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1891 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2761 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2790 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2593 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1886 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2727 (* y00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2457 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2427 (* y00 y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2316 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2305 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2192 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2207 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1933 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2030 (* x00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1972 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1898 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1743 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1801 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1693 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1441 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1581 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1593 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1547 (* y00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1519 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x946 (* y00 z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x521 (* x00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1448 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1352 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2129 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1415 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2671 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2282 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x816 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x853 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x701 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x962 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2133 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1173 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1455 (* y00 z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3247 (+ (* (- 1) ?x1455) ?x1173 (* (- 12) ?x1175) (* 12 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* (- 18) ?x2133) (* (- 108) (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 18) ?x962) (* 18 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 12) ?x701) (* (- 12) ?x853) (* (- 1) ?x816) ?x2282 (* 6 ?x2671) (* 108 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x1415) (* 6 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) (* 72 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* (- 6) ?x2129) (* (- 1) ?x1352) (* (- 1) ?x1448) (* (- 108) (* x00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)) (* 18 ?x521) (* (- 72) (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) ?x946 (* (- 1) (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* 12 ?x1519) (* 6 ?x1547) (* 12 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x1593) (* 12 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 72) (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* 12 ?x1581) (* 6 ?x1441) (* (- 72) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x1693 (* (- 1) ?x1801) (* 18 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)) ?x1743 (* 12 ?x1898) (* 6 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 1) (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)) (* (- 18) ?x1972) (* 108 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x2030) (* 18 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 24) (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) (* (- 108) (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) ?x1933 ?x2207 (* 72 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x2192) (* 18 ?x2305) (* 24 ?x2316) (* 108 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 24) ?x2427) (* (- 18) ?x2457) (* 108 (* x00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 72) (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 72 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* (- 12) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* 12 ?x2727) (* (- 18) ?x1886) (* 18 ?x2593) (* (- 6) ?x2790) (* (- 18) ?x2761) (* 24 ?x1891) (* (- 108) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 12) (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)) (* 72 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* 18 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) (* (- 6) (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x2848) (* 72 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2895) (* (- 72) (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 18 ?x2956) (* (- 18) (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216)) (* (- 1) ?x3003) (* 12 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 12 ?x3032) ?x3040 (* 108 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)) (* 12 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217)) (* (- 108) (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x3102 (* 18 ?x3109) (* (- 18) (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) ?x3156 (* (- 18) (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)) (* (- 12) ?x3203) (* (- 1) ?x3233))))
 (let ((?x1369 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x651 (* y00 y00)))
 (let ((?x1122 (* 96 ?x651)))
 (let ((?x1057 (* 16 (* y00 y00 y00))))
 (let ((?x927 (* (- 4) (* y y y))))
 (let ((?x875 (* 108 (* x x))))
 (let ((?x625 (* y y)))
 (let ((?x870 (* 24 ?x625)))
 (let ((?x1206 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x870 ?x875 ?x927 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1057 (* (- 6) (* z00 y y)) ?x1122 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1369 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2291 (= ?x1206 0)))
 (let ((?x615 (* y00 z y)))
 (let ((?x663 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x606 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1286 (* z y y)))
 (let ((?x473 (* x00 z)))
 (let ((?x484 (* 18 ?x473)))
 (let ((?x954 (* (- 36) ?x651)))
 (let ((?x2617 (* z y)))
 (let ((?x1549 (* (- 12) ?x2617)))
 (let ((?x989 (* z00 y)))
 (let ((?x1029 (* 6 ?x989)))
 (let ((?x1284 (* y00 z00)))
 (let ((?x1458 (* (- 6) ?x1284)))
 (let ((?x1576 (* y00 z)))
 (let ((?x1565 (* 12 ?x1576)))
 (let ((?x1712 (* z x)))
 (let ((?x1851 (* (- 18) ?x1712)))
 (let ((?x952 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1851 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1565 ?x1458 (* 36 (* y00 y)) ?x1029 ?x1549 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x954 ?x484 ?x1286 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x606 (* 18 (* y00 x)) ?x71 ?x663 ?x615 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x848 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x669 (* (- 6) ?x989)))
 (let ((?x494 (* 6 ?x1284)))
 (let ((?x680 (* (- 24) ?x651)))
 (let ((?x628 (* 12 ?x625)))
 (let ((?x1529 (+ (* (- 1) (* y00 z00 z)) ?x1549 ?x1851 (* 18 (* x00 z00)) ?x628 ?x680 ?x484 ?x1565 ?x494 (* 12 (* y00 y)) ?x64 ?x606 ?x669 ?x71 ?x663 ?x99 (* (- 18) (* z00 x)) ?x848 (* (- 1) (* z00 z00 y)))))
 (let ((?x1148 (* z00 z00 z)))
 (let ((?x1401 (* (- 12) ?x1576)))
 (let ((?x443 (* z00 z00)))
 (let ((?x547 (* 6 ?x443)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x536 (* (- 1) ?x55)))
 (let ((?x1152 (+ (* (- 6) ?x2617) ?x536 ?x547 ?x1401 (* 18 ?x1284) ?x64 ?x606 (* (- 6) (* z00 z)) ?x71 ?x663 ?x1148)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2804 (* (- 1) ?x443)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2804 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1152 0) (= ?x1529 0) (= ?x952 0) $x2291 (not (= ?x3247 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x3249 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x538 (+ 6 z)))
 (let ((?x552 (+ 1 n)))
 (let ((?x3233 (* z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3203 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x629 (* 12 ?x3203)))
 (let ((?x3172 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1391 (* 18 ?x3172)))
 (let ((?x3156 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1384 (* (- 1) ?x3156)))
 (let ((?x3126 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x616 (* 18 ?x3126)))
 (let ((?x3109 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1975 (* (- 18) ?x3109)))
 (let ((?x3102 (* z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2357 (* (- 1) ?x3102)))
 (let ((?x3072 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x614 (* 108 ?x3072)))
 (let ((?x3055 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217)))
 (let ((?x613 (* (- 12) ?x3055)))
 (let ((?x3047 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x1986 (* (- 108) ?x3047)))
 (let ((?x3040 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1920 (* (- 1) ?x3040)))
 (let ((?x3032 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1640 (* (- 12) ?x3032)))
 (let ((?x3024 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2013 (* (- 12) ?x3024)))
 (let ((?x3003 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2973 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216)))
 (let ((?x2241 (* 18 ?x2973)))
 (let ((?x2956 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1952 (* (- 18) ?x2956)))
 (let ((?x2926 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2423 (* 72 ?x2926)))
 (let ((?x2895 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2418 (* 12 ?x2895)))
 (let ((?x2878 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x883 (* (- 72) ?x2878)))
 (let ((?x2848 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x905 (* 6 ?x2848)))
 (let ((?x2817 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x994 (* 6 ?x2817)))
 (let ((?x2562 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1036 (* (- 18) ?x2562)))
 (let ((?x2554 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x913 (* (- 72) ?x2554)))
 (let ((?x2694 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x902 (* 12 ?x2694)))
 (let ((?x2453 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x993 (* 24 ?x2453)))
 (let ((?x2664 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2239 (* 108 ?x2664)))
 (let ((?x1891 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1429 (* (- 24) ?x1891)))
 (let ((?x2761 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1430 (* 18 ?x2761)))
 (let ((?x2790 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1433 (* 6 ?x2790)))
 (let ((?x2593 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1239 (* (- 18) ?x2593)))
 (let ((?x1886 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1432 (* 18 ?x1886)))
 (let ((?x2727 (* y00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1234 (* (- 12) ?x2727)))
 (let ((?x2416 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1221 (* 12 ?x2416)))
 (let ((?x1337 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1233 (* (- 72) ?x1337)))
 (let ((?x2580 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1162 (* 72 ?x2580)))
 (let ((?x2395 (* x00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x405 (* (- 108) ?x2395)))
 (let ((?x2457 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1219 (* 18 ?x2457)))
 (let ((?x2427 (* y00 y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1220 (* 24 ?x2427)))
 (let ((?x2384 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x835 (* 18 ?x2384)))
 (let ((?x2345 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x428 (* (- 108) ?x2345)))
 (let ((?x2316 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1182 (* (- 24) ?x2316)))
 (let ((?x2305 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2298 (* (- 18) ?x2305)))
 (let ((?x2192 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1737 (* 12 ?x2192)))
 (let ((?x2216 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2436 (* (- 72) ?x2216)))
 (let ((?x2207 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1821 (* (- 1) ?x2207)))
 (let ((?x1933 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2438 (* (- 1) ?x1933)))
 (let ((?x2144 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2187 (* 108 ?x2144)))
 (let ((?x1913 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2466 (* 24 ?x1913)))
 (let ((?x2018 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2618 (* (- 18) ?x2018)))
 (let ((?x2030 (* x00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2629 (* (- 18) ?x2030)))
 (let ((?x1650 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2571 (* (- 108) ?x1650)))
 (let ((?x1972 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2189 (* 18 ?x1972)))
 (let ((?x1095 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1783 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2621 (* (- 6) ?x1783)))
 (let ((?x1898 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2249 (* (- 12) ?x1898)))
 (let ((?x1743 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x2579 (* (- 1) ?x1743)))
 (let ((?x1838 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x440 (* (- 18) ?x1838)))
 (let ((?x1801 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1693 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2475 (* (- 1) ?x1693)))
 (let ((?x1760 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2548 (* 72 ?x1760)))
 (let ((?x1441 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2477 (* (- 6) ?x1441)))
 (let ((?x1581 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2330 (* (- 12) ?x1581)))
 (let ((?x1379 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2479 (* 72 ?x1379)))
 (let ((?x985 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x2328 (* (- 12) ?x985)))
 (let ((?x1593 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x720 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1865 (* (- 12) ?x720)))
 (let ((?x1547 (* y00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1054 (* (- 6) ?x1547)))
 (let ((?x1519 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2478 (* (- 12) ?x1519)))
 (let ((?x1485 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x946 (* y00 z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2704 (* (- 1) ?x946)))
 (let ((?x427 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1863 (* 72 ?x427)))
 (let ((?x521 (* x00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2472 (* (- 18) ?x521)))
 (let ((?x508 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x2693 (* (- 12) ?x508)))
 (let ((?x450 (* x00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2701 (* 108 ?x450)))
 (let ((?x1448 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1352 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2129 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2252 (* 6 ?x2129)))
 (let ((?x2681 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1201 (* 6 ?x2681)))
 (let ((?x1225 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1199 (* (- 72) ?x1225)))
 (let ((?x1697 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1198 (* (- 6) ?x1697)))
 (let ((?x1415 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x650 (* 12 ?x1415)))
 (let ((?x1492 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1060 (* (- 108) ?x1492)))
 (let ((?x2671 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1435 (* (- 6) ?x2671)))
 (let ((?x2282 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1382 (* (- 1) ?x2282)))
 (let ((?x816 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x853 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1982 (* 12 ?x853)))
 (let ((?x701 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x934 (* 12 ?x701)))
 (let ((?x729 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x933 (* (- 18) ?x729)))
 (let ((?x962 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x932 (* 18 ?x962)))
 (let ((?x1984 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x908 (* 108 ?x1984)))
 (let ((?x2133 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x931 (* 18 ?x2133)))
 (let ((?x935 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x928 (* (- 12) ?x935)))
 (let ((?x1175 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x907 (* 12 ?x1175)))
 (let ((?x1173 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x889 (* (- 1) ?x1173)))
 (let ((?x1455 (* y00 z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x647 (+ ?x1455 ?x889 ?x907 ?x928 ?x931 ?x908 ?x932 ?x933 ?x934 ?x1982 ?x816 ?x1382 ?x1435 ?x1060 ?x650 ?x1198 ?x1199 ?x1201 ?x2252 ?x1352 ?x1448 ?x2701 ?x2693 ?x2472 ?x1863 ?x2704 ?x1485 ?x2478 ?x1054 ?x1865 ?x1593 ?x2328 ?x2479 ?x2330 ?x2477 ?x2548 ?x2475 ?x1801 ?x440 ?x2579 ?x2249 ?x2621 ?x1095 ?x2189 ?x2571 ?x2629 ?x2618 ?x2466 ?x2187 ?x2438 ?x1821 ?x2436 ?x1737 ?x2298 ?x1182 ?x428 ?x835 ?x1220 ?x1219 ?x405 ?x1162 ?x1233 ?x1221 ?x1234 ?x1432 ?x1239 ?x1433 ?x1430 ?x1429 ?x2239 ?x993 ?x902 ?x913 ?x1036 ?x994 ?x905 ?x883 ?x2418 ?x2423 ?x1952 ?x2241 ?x3003 ?x2013 ?x1640 ?x1920 ?x1986 ?x613 ?x614 ?x2357 ?x1975 ?x616 ?x1384 ?x1391 ?x629 ?x3233)))
 (let ((?x1369 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x651 (* y00 y00)))
 (let ((?x1122 (* 96 ?x651)))
 (let ((?x1057 (* 16 (* y00 y00 y00))))
 (let ((?x927 (* (- 4) (* y y y))))
 (let ((?x875 (* 108 (* x x))))
 (let ((?x625 (* y y)))
 (let ((?x870 (* 24 ?x625)))
 (let ((?x1206 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x870 ?x875 ?x927 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1057 (* (- 6) (* z00 y y)) ?x1122 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1369 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2291 (= ?x1206 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2256 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1263 (* (- 108) x)))
 (let ((?x473 (* x00 z)))
 (let ((?x1083 (* (- 18) ?x473)))
 (let ((?x2983 (* 36 ?x651)))
 (let ((?x2617 (* z y)))
 (let ((?x2311 (* 12 ?x2617)))
 (let ((?x989 (* z00 y)))
 (let ((?x669 (* (- 6) ?x989)))
 (let ((?x1284 (* y00 z00)))
 (let ((?x494 (* 6 ?x1284)))
 (let ((?x1576 (* y00 z)))
 (let ((?x1401 (* (- 12) ?x1576)))
 (let ((?x897 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1712 (* z x)))
 (let ((?x2857 (* 18 ?x1712)))
 (let ((?x1463 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x2857 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x897 ?x1401 ?x494 (* (- 36) (* y00 y)) ?x669 ?x2311 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x2983 ?x1083 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1263 ?x67 (* (- 18) (* y00 x)) ?x2256 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x537 (* z00 z00 y)))
 (let ((?x1029 (* 6 ?x989)))
 (let ((?x1458 (* (- 6) ?x1284)))
 (let ((?x1103 (* 24 ?x651)))
 (let ((?x2613 (* y00 z00 z)))
 (let ((?x1076 (+ ?x2613 ?x2311 ?x2857 (* (- 18) (* x00 z00)) (* (- 12) ?x625) ?x1103 ?x1083 ?x1401 ?x1458 (* (- 12) (* y00 y)) ?x1263 ?x67 ?x1029 ?x2256 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x537)))
 (let ((?x1565 (* 12 ?x1576)))
 (let ((?x443 (* z00 z00)))
 (let ((?x2258 (* (- 6) ?x443)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2062 (+ (* 6 ?x2617) ?x55 ?x2258 ?x1565 (* (- 18) ?x1284) ?x1263 ?x67 (* 6 (* z00 z)) ?x2256 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x515 (* (- 1) ?x50)))
 (let ((?x513 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x514 (* (- 12) y00)))
 (let (($x658 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x443 ?x514 ?x45 ?x46 ?x513 ?x515) 0) (= ?x2062 0) (= ?x1076 0) (= ?x1463 0) $x2291 (not (= ?x647 0)))))
 (let ((?x3247 (+ (* (- 1) ?x1455) ?x1173 (* (- 12) ?x1175) (* 12 ?x935) (* (- 18) ?x2133) (* (- 108) ?x1984) (* (- 18) ?x962) (* 18 ?x729) (* (- 12) ?x701) (* (- 12) ?x853) (* (- 1) ?x816) ?x2282 (* 6 ?x2671) (* 108 ?x1492) (* (- 12) ?x1415) (* 6 ?x1697) (* 72 ?x1225) (* (- 6) ?x2681) (* (- 6) ?x2129) (* (- 1) ?x1352) (* (- 1) ?x1448) (* (- 108) ?x450) (* 12 ?x508) (* 18 ?x521) (* (- 72) ?x427) ?x946 (* (- 1) ?x1485) (* 12 ?x1519) (* 6 ?x1547) (* 12 ?x720) (* (- 1) ?x1593) (* 12 ?x985) (* (- 72) ?x1379) (* 12 ?x1581) (* 6 ?x1441) (* (- 72) ?x1760) ?x1693 (* (- 1) ?x1801) (* 18 ?x1838) ?x1743 (* 12 ?x1898) (* 6 ?x1783) (* (- 1) ?x1095) (* (- 18) ?x1972) (* 108 ?x1650) (* 18 ?x2030) (* 18 ?x2018) (* (- 24) ?x1913) (* (- 108) ?x2144) ?x1933 ?x2207 (* 72 ?x2216) (* (- 12) ?x2192) (* 18 ?x2305) (* 24 ?x2316) (* 108 ?x2345) (* (- 18) ?x2384) (* (- 24) ?x2427) (* (- 18) ?x2457) (* 108 ?x2395) (* (- 72) ?x2580) (* 72 ?x1337) (* (- 12) ?x2416) (* 12 ?x2727) (* (- 18) ?x1886) (* 18 ?x2593) (* (- 6) ?x2790) (* (- 18) ?x2761) (* 24 ?x1891) (* (- 108) ?x2664) (* (- 24) ?x2453) (* (- 12) ?x2694) (* 72 ?x2554) (* 18 ?x2562) (* (- 6) ?x2817) (* (- 6) ?x2848) (* 72 ?x2878) (* (- 12) ?x2895) (* (- 72) ?x2926) (* 18 ?x2956) (* (- 18) ?x2973) (* (- 1) ?x3003) (* 12 ?x3024) (* 12 ?x3032) ?x3040 (* 108 ?x3047) (* 12 ?x3055) (* (- 108) ?x3072) ?x3102 (* 18 ?x3109) (* (- 18) ?x3126) ?x3156 (* (- 18) ?x3172) (* (- 12) ?x3203) (* (- 1) ?x3233))))
 (let ((?x615 (* y00 z y)))
 (let ((?x663 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x606 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1286 (* z y y)))
 (let ((?x484 (* 18 ?x473)))
 (let ((?x954 (* (- 36) ?x651)))
 (let ((?x1549 (* (- 12) ?x2617)))
 (let ((?x1851 (* (- 18) ?x1712)))
 (let ((?x952 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1851 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x897) ?x1565 ?x1458 (* 36 (* y00 y)) ?x1029 ?x1549 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x954 ?x484 ?x1286 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x606 (* 18 (* y00 x)) ?x71 ?x663 ?x615 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x537))))
 (let ((?x848 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x680 (* (- 24) ?x651)))
 (let ((?x628 (* 12 ?x625)))
 (let ((?x1529 (+ (* (- 1) ?x2613) ?x1549 ?x1851 (* 18 (* x00 z00)) ?x628 ?x680 ?x484 ?x1565 ?x494 (* 12 (* y00 y)) ?x64 ?x606 ?x669 ?x71 ?x663 ?x99 (* (- 18) (* z00 x)) ?x848 (* (- 1) ?x537))))
 (let ((?x1148 (* z00 z00 z)))
 (let ((?x547 (* 6 ?x443)))
 (let ((?x536 (* (- 1) ?x55)))
 (let ((?x1152 (+ (* (- 6) ?x2617) ?x536 ?x547 ?x1401 (* 18 ?x1284) ?x64 ?x606 (* (- 6) (* z00 z)) ?x71 ?x663 ?x1148)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2804 (* (- 1) ?x443)))
 (let (($x1299 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2804 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1152 0) (= ?x1529 0) (= ?x952 0) $x2291 (not (= ?x3247 0)))))
 (rewrite (= $x1299 $x658))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x390 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x221 (+ ?x219 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x223 (- ?x221 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x229 (- (+ ?x223 (* 12 ?x215 ?x215 ?x215 ?x217 ?x217 y00 ?x218 ?x218 ?x218)) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 z00))))
 (let ((?x231 (- (- ?x229 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218)) (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x233 (+ ?x231 (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x237 (- ?x233 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218))))
 (let ((?x238 (- ?x237 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x239 (- ?x238 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x243 (+ ?x239 (* ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x245 (- ?x243 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ ?x245 (* 6 ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 z00) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x255 (- (- ?x248 (* 6 ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 z00)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x256 (- ?x255 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x257 (- ?x256 (* ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x258 (- ?x257 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x261 (+ ?x258 (* 12 ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 ?x218) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x265 (+ (- ?x261 (* 72 ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218)) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00 z00))))
 (let ((?x271 (+ (- ?x265 (* ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00) (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x273 (- ?x271 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 z00 z00))))
 (let ((?x275 (+ ?x273 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x280 (+ (- ?x275 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218)) (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 z00))))
 (let ((?x282 (- ?x280 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x286 (- (+ ?x282 (* ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 z00 z00)) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x291 (+ ?x286 (* 18 ?x215 ?x215 ?x215 x00 ?x217 ?x218 ?x218 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218) (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x295 (- (- ?x291 (* ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)) (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x299 (+ ?x295 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00) (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x303 (- (- ?x299 (* 24 ?x215 ?x215 ?x215 ?x217 y00 y00 ?x218 ?x218 ?x218)) (* 108 ?x215 ?x215 ?x215 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x307 (+ ?x303 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218))))
 (let ((?x309 (- ?x307 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x313 (+ ?x309 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00) (* 24 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x317 (- ?x313 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x318 (- ?x317 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218))))
 (let ((?x319 (- ?x318 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x321 (+ ?x319 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x323 (- ?x321 (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x327 (- (+ ?x323 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)) (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x329 (+ ?x327 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x331 (- ?x329 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x333 (+ ?x331 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x336 (- ?x333 (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x337 (- ?x336 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x339 (+ ?x337 (* 24 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218))))
 (let ((?x343 (- ?x339 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x344 (- ?x343 (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x348 (+ (- ?x344 (* 12 ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)) (* 72 ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x351 (- ?x348 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x352 (- ?x351 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 z00))))
 (let ((?x354 (+ ?x352 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x357 (- ?x354 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x358 (- ?x357 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x360 (+ ?x358 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 z00))))
 (let ((?x364 (- (- ?x360 (* 18 ?x215 ?x215 ?x215 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)) (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x370 (+ ?x364 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 z00 z00) (* 108 ?x215 ?x215 ?x215 ?x216 ?x217 ?x218 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x372 (- ?x370 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x375 (+ ?x372 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x377 (- ?x375 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x379 (+ ?x377 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x384 (- (- ?x379 (* 18 ?x215 ?x215 ?x215 ?x216 ?x217 ?x218 ?x218 ?x218 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x385 (- ?x384 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x385 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x550 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x538 (+ 6 z)))
 (let ((?x552 (+ 1 n)))
 (let ((?x3233 (* z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3203 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3156 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3109 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3102 (* z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3032 (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3003 (* z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2956 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2895 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2848 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1891 (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2761 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2790 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2593 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1886 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2727 (* y00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2457 (* z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2427 (* y00 y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2316 (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2305 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2192 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2207 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1933 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2030 (* x00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1972 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1898 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1743 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)))
 (let ((?x1801 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1693 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)))
 (let ((?x1441 (* z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1581 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1593 (* y00 z00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1547 (* y00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1519 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x946 (* y00 z00 z00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x521 (* x00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1448 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x1352 (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2129 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1415 (* ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2671 (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2282 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)))
 (let ((?x816 (* y00 z00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x853 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x701 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x962 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2133 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1173 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1455 (* y00 z00 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3247 (+ (* (- 1) ?x1455) ?x1173 (* (- 12) ?x1175) (* 12 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* (- 18) ?x2133) (* (- 108) (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 18) ?x962) (* 18 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 12) ?x701) (* (- 12) ?x853) (* (- 1) ?x816) ?x2282 (* 6 ?x2671) (* 108 (* x00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x1415) (* 6 (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) (* 72 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* (- 6) ?x2129) (* (- 1) ?x1352) (* (- 1) ?x1448) (* (- 108) (* x00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)) (* 18 ?x521) (* (- 72) (* y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) ?x946 (* (- 1) (* z00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* 12 ?x1519) (* 6 ?x1547) (* 12 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* (- 1) ?x1593) (* 12 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 72) (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* 12 ?x1581) (* 6 ?x1441) (* (- 72) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x1693 (* (- 1) ?x1801) (* 18 (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)) ?x1743 (* 12 ?x1898) (* 6 (* y00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 1) (* y00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217)) (* (- 18) ?x1972) (* 108 (* ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x2030) (* 18 (* x00 z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 24) (* y00 y00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) (* (- 108) (* x00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) ?x1933 ?x2207 (* 72 (* y00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 12) ?x2192) (* 18 ?x2305) (* 24 ?x2316) (* 108 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 18) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 24) ?x2427) (* (- 18) ?x2457) (* 108 (* x00 ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 72) (* y00 ?x552 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 72 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* (- 12) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* 12 ?x2727) (* (- 18) ?x1886) (* 18 ?x2593) (* (- 6) ?x2790) (* (- 18) ?x2761) (* 24 ?x1891) (* (- 108) (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 24) (* y00 y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216)) (* (- 12) (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x217)) (* 72 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217)) (* 18 (* x00 z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217)) (* (- 6) (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x216 ?x216)) (* (- 6) ?x2848) (* 72 (* y00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2895) (* (- 72) (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 18 ?x2956) (* (- 18) (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x538 ?x217 ?x216)) (* (- 1) ?x3003) (* 12 (* ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216)) (* 12 ?x3032) ?x3040 (* 108 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)) (* 12 (* ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x217 ?x217)) (* (- 108) (* ?x552 ?x552 ?x552 ?x538 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) ?x3102 (* 18 ?x3109) (* (- 18) (* z00 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216 ?x216 ?x216)) ?x3156 (* (- 18) (* z00 ?x552 ?x552 ?x552 ?x538 ?x538 ?x538 ?x217 ?x216)) (* (- 12) ?x3203) (* (- 1) ?x3233))))
 (let ((?x1369 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x651 (* y00 y00)))
 (let ((?x1122 (* 96 ?x651)))
 (let ((?x1057 (* 16 (* y00 y00 y00))))
 (let ((?x927 (* (- 4) (* y y y))))
 (let ((?x875 (* 108 (* x x))))
 (let ((?x625 (* y y)))
 (let ((?x870 (* 24 ?x625)))
 (let ((?x1206 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x870 ?x875 ?x927 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1057 (* (- 6) (* z00 y y)) ?x1122 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1369 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2291 (= ?x1206 0)))
 (let ((?x615 (* y00 z y)))
 (let ((?x663 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x606 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1286 (* z y y)))
 (let ((?x473 (* x00 z)))
 (let ((?x484 (* 18 ?x473)))
 (let ((?x954 (* (- 36) ?x651)))
 (let ((?x2617 (* z y)))
 (let ((?x1549 (* (- 12) ?x2617)))
 (let ((?x989 (* z00 y)))
 (let ((?x1029 (* 6 ?x989)))
 (let ((?x1284 (* y00 z00)))
 (let ((?x1458 (* (- 6) ?x1284)))
 (let ((?x1576 (* y00 z)))
 (let ((?x1565 (* 12 ?x1576)))
 (let ((?x1712 (* z x)))
 (let ((?x1851 (* (- 18) ?x1712)))
 (let ((?x952 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1851 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1565 ?x1458 (* 36 (* y00 y)) ?x1029 ?x1549 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x954 ?x484 ?x1286 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x606 (* 18 (* y00 x)) ?x71 ?x663 ?x615 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x848 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x669 (* (- 6) ?x989)))
 (let ((?x494 (* 6 ?x1284)))
 (let ((?x680 (* (- 24) ?x651)))
 (let ((?x628 (* 12 ?x625)))
 (let ((?x1529 (+ (* (- 1) (* y00 z00 z)) ?x1549 ?x1851 (* 18 (* x00 z00)) ?x628 ?x680 ?x484 ?x1565 ?x494 (* 12 (* y00 y)) ?x64 ?x606 ?x669 ?x71 ?x663 ?x99 (* (- 18) (* z00 x)) ?x848 (* (- 1) (* z00 z00 y)))))
 (let ((?x1148 (* z00 z00 z)))
 (let ((?x1401 (* (- 12) ?x1576)))
 (let ((?x443 (* z00 z00)))
 (let ((?x547 (* 6 ?x443)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x536 (* (- 1) ?x55)))
 (let ((?x1152 (+ (* (- 6) ?x2617) ?x536 ?x547 ?x1401 (* 18 ?x1284) ?x64 ?x606 (* (- 6) (* z00 z)) ?x71 ?x663 ?x1148)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2804 (* (- 1) ?x443)))
 (let (($x1299 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2804 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1152 0) (= ?x1529 0) (= ?x952 0) $x2291 (not (= ?x3247 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x221 (+ ?x219 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x223 (- ?x221 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x229 (- (+ ?x223 (* 12 ?x215 ?x215 ?x215 ?x217 ?x217 y00 ?x218 ?x218 ?x218)) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 z00))))
 (let ((?x231 (- (- ?x229 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218)) (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x233 (+ ?x231 (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x237 (- ?x233 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218))))
 (let ((?x238 (- ?x237 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x239 (- ?x238 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x243 (+ ?x239 (* ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00 z00) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x245 (- ?x243 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ ?x245 (* 6 ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 z00) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x255 (- (- ?x248 (* 6 ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 z00)) (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x256 (- ?x255 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x257 (- ?x256 (* ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x258 (- ?x257 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x261 (+ ?x258 (* 12 ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 ?x218) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x265 (+ (- ?x261 (* 72 ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218)) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00 z00))))
 (let ((?x271 (+ (- ?x265 (* ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00) (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x273 (- ?x271 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 z00 z00))))
 (let ((?x275 (+ ?x273 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x280 (+ (- ?x275 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218)) (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 z00))))
 (let ((?x282 (- ?x280 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x286 (- (+ ?x282 (* ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 z00 z00)) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x291 (+ ?x286 (* 18 ?x215 ?x215 ?x215 x00 ?x217 ?x218 ?x218 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218) (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x295 (- (- ?x291 (* ?x215 ?x215 ?x215 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)) (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x299 (+ ?x295 (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 z00) (* 18 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x303 (- (- ?x299 (* 24 ?x215 ?x215 ?x215 ?x217 y00 y00 ?x218 ?x218 ?x218)) (* 108 ?x215 ?x215 ?x215 x00 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x307 (+ ?x303 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218))))
 (let ((?x309 (- ?x307 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x313 (+ ?x309 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00) (* 24 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x317 (- ?x313 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x318 (- ?x317 (* 24 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218 ?x218))))
 (let ((?x319 (- ?x318 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x321 (+ ?x319 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x323 (- ?x321 (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x327 (- (+ ?x323 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)) (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x329 (+ ?x327 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x331 (- ?x329 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x333 (+ ?x331 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x336 (- ?x333 (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x337 (- ?x336 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x339 (+ ?x337 (* 24 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 y00 ?x218))))
 (let ((?x343 (- ?x339 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x344 (- ?x343 (* 24 ?x215 ?x215 ?x216 ?x216 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x348 (+ (- ?x344 (* 12 ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)) (* 72 ?x215 ?x215 ?x215 ?x217 ?x217 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 x00 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x351 (- ?x348 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x352 (- ?x351 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 z00))))
 (let ((?x354 (+ ?x352 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x357 (- ?x354 (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x358 (- ?x357 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x360 (+ ?x358 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 z00))))
 (let ((?x364 (- (- ?x360 (* 18 ?x215 ?x215 ?x215 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)) (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x370 (+ ?x364 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 z00 z00) (* 108 ?x215 ?x215 ?x215 ?x216 ?x217 ?x218 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x372 (- ?x370 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x375 (+ ?x372 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x377 (- ?x375 (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x379 (+ ?x377 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x384 (- (- ?x379 (* 18 ?x215 ?x215 ?x215 ?x216 ?x217 ?x218 ?x218 ?x218 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x385 (- ?x384 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x389 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x385 0))))))
 (rewrite (= $x389 $x1299)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x391 (asserted $x390)))
 (let ((@x3018 (mp (mp @x391 (quant-intro (proof-bind ?x550) (= $x390 $x1254)) $x1254) (rewrite (= $x1254 $x1254)) $x1254)))
 (let ((@x1658 (mp (mp @x3018 (quant-intro (proof-bind ?x3249) (= $x1254 $x3242)) $x3242) (quant-intro (proof-bind ?x3189) (= $x3242 $x1677)) $x1677)))
 (let ((@x1296 (mp (mp~ @x1658 (sk (~ $x1677 $x963)) $x963) (rewrite (= $x963 $x2842)) $x2842)))
 (let ((@x665 (and-elim @x1296 $x2545)))
 (let ((@x1174 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2545) $x2849)) @x665 $x2849)))
 (let (($x1506 (>= ?x2331 0)))
 (let ((@x2834 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2545) $x1506)) @x665 $x1506)))
 (let (($x802 (<= ?x2919 0)))
 (let ((@x2086 (and-elim @x1296 $x2916)))
 (let ((@x1246 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2916) $x802)) @x2086 $x802)))
 (let (($x894 (>= ?x2919 0)))
 (let ((@x1101 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2916) $x894)) @x2086 $x894)))
 (let (($x639 (<= ?x682 0)))
 (let ((@x586 (and-elim @x1296 $x683)))
 (let ((@x1224 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x683) $x639)) @x586 $x639)))
 (let (($x2949 (>= ?x682 0)))
 (let ((@x3227 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x683) $x2949)) @x586 $x2949)))
 (let (($x752 (<= ?x659 0)))
 (let ((@x2364 (and-elim @x1296 $x1523)))
 (let ((@x2004 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1523) $x752)) @x2364 $x752)))
 (let (($x2838 (>= ?x659 0)))
 (let ((@x470 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1523) $x2838)) @x2364 $x2838)))
 (let (($x2051 (not (<= ?x765 0))))
 (let (($x824 (>= ?x765 0)))
 (let ((@x2332 ((_ th-lemma arith) (hypothesis (not $x824)) @x3227 @x1224 @x470 @x2004 @x3227 @x1224 @x1101 @x1246 @x2834 @x1174 false)))
 (let ((@x573 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x710 $x2051 (not $x824))) (and-elim @x1296 $x603) (or $x2051 (not $x824)))))
 ((_ th-lemma arith) (unit-resolution @x573 (lemma @x2332 $x824) $x2051) @x3227 @x1224 @x470 @x2004 @x3227 @x1224 @x1101 @x1246 @x2834 @x1174 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1206
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      7
 :arith-tableau-max-columns 191
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                5.43
 :memory                    3.57
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                47867823
 :num-checks                1
 :propagations              14
 :rlimit-count              154389
 :time                      0.14
 :total-time                0.16)
