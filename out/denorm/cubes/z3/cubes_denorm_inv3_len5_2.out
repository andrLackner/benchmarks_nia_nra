unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x587 (* (- 3) k!2)))
 (let ((?x340 (* (- 3) c!3)))
 (let ((?x432 (* n!0 k!2)))
 (let ((?x586 (* 2 n!0)))
 (let ((?x648 (+ 3 (* n!0 m!1) ?x586 ?x432 ?x340 ?x587)))
 (let (($x2778 (<= ?x648 0)))
 (let ((?x247 (* (- 1) k!2)))
 (let ((?x168 (+ (* 3 n!0) ?x247 (* 3 (* n!0 n!0)))))
 (let (($x738 (<= ?x168 (- 1))))
 (let (($x170 (= ?x168 (- 1))))
 (let ((?x365 (* (- 1) (* c!3 c!3 k!2))))
 (let ((?x850 (* (- 2) (* c!3 k!2 k!2))))
 (let ((?x837 (* (- 1) (* k!2 k!2 k!2))))
 (let ((?x849 (* (- 1) (* c!3 c!3 m!1))))
 (let ((?x828 (+ c!3 k!2)))
 (let ((?x834 (+ k!2 m!1)))
 (let ((?x845 (+ 1 n!0)))
 (let ((?x815 (* ?x845 ?x845 ?x845 (+ 6 m!1) ?x834 ?x834 ?x828 ?x828)))
 (let ((?x820 (* (- 6) k!2)))
 (let ((?x789 (* k!2 k!2)))
 (let ((?x819 (* 5 ?x789)))
 (let ((?x877 (* (- 6) c!3)))
 (let ((?x269 (* (- 1) (* m!1 m!1))))
 (let ((?x261 (* 3 (* k!2 m!1))))
 (let ((?x221 (* 5 (* c!3 m!1))))
 (let ((?x253 (* 6 (* c!3 k!2))))
 (let ((?x225 (* (- 1) (* c!3 k!2 m!1))))
 (let ((?x119 (* c!3 m!1 m!1)))
 (let ((?x117 (* k!2 m!1 m!1)))
 (let ((?x604 (+ (* (- 4) (* n!0 c!3 k!2 k!2)) ?x117 ?x119 ?x225 ?x253 ?x221 ?x261 ?x269 (* 10 (* n!0 k!2 k!2)) (* (- 12) ?x432) (* (- 12) (* n!0 c!3)) (* 5 (* n!0 n!0 k!2 k!2)) (* (- 6) (* n!0 n!0 k!2)) (* 6 (* n!0 k!2 m!1)) (* (- 1) (* n!0 n!0 m!1 m!1)) (* (- 2) (* n!0 m!1 m!1)) (* 3 (* n!0 n!0 k!2 m!1)) ?x877 (* n!0 n!0 k!2 m!1 m!1) (* (- 2) (* n!0 c!3 c!3 m!1)) (* n!0 n!0 c!3 m!1 m!1) (* 5 (* n!0 n!0 c!3 m!1)) (* (- 1) (* n!0 n!0 c!3 k!2 m!1)) (* 2 (* n!0 c!3 m!1 m!1)) (* (- 1) (* n!0 n!0 c!3 c!3 k!2)) (* (- 2) (* n!0 n!0 c!3 k!2 k!2)) (* (- 1) (* n!0 n!0 c!3 c!3 m!1)) (* 12 (* n!0 c!3 k!2)) (* 10 (* n!0 c!3 m!1)) (* (- 2) (* n!0 c!3 k!2 m!1)) ?x819 (* 2 (* n!0 k!2 m!1 m!1)) (* 6 (* n!0 n!0 c!3 k!2)) (* (- 1) (* n!0 n!0 k!2 k!2 k!2)) ?x820 ?x815 ?x849 ?x837 ?x850 ?x365 (* (- 2) (* n!0 k!2 k!2 k!2)) (* (- 2) (* n!0 c!3 c!3 k!2)) (* (- 6) (* n!0 n!0 c!3)))))
 (let ((?x655 (* ?x604 ?x648)))
 (let (($x661 (= ?x655 0)))
 (let (($x841 (not $x661)))
 (let ((?x248 (+ ?x586 ?x432 ?x340 ?x247)))
 (let (($x600 (= ?x248 (- 1))))
 (let ((?x424 (+ (* 9 n!0) (* (- 9) (* n!0 c!3)) (* (- 18) c!3) ?x789 (* (- 5) k!2))))
 (let ((?x445 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x495 (= ?x445 (- 6))))
 (let (($x543 (and $x495 (= ?x424 (- 4)) $x600 $x170 $x841)))
 (let ((?x339 (+ ?x877 ?x820 ?x819 (* (- 12) (* k!2 n!0)) (* (- 12) (* c!3 n!0)) (* (- 2) (* m!1 m!1 n!0)) (* 6 (* k!2 m!1 n!0)) (* 10 (* k!2 k!2 n!0)) ?x269 ?x261 (* (- 1) (* m!1 m!1 n!0 n!0)) (* 3 (* k!2 m!1 n!0 n!0)) (* 5 (* k!2 k!2 n!0 n!0)) ?x221 ?x253 (* k!2 m!1 m!1 n!0 n!0) (* c!3 m!1 m!1 n!0 n!0) (* (- 1) (* c!3 k!2 m!1 n!0 n!0)) ?x225 ?x119 ?x117 (* 12 (* c!3 k!2 n!0)) (* 10 (* c!3 m!1 n!0)) (* (- 2) (* c!3 k!2 m!1 n!0)) (* 2 (* c!3 m!1 m!1 n!0)) (* 2 (* k!2 m!1 m!1 n!0)) (* 6 (* c!3 k!2 n!0 n!0)) (* 5 (* c!3 m!1 n!0 n!0)) (* (- 1) (* c!3 c!3 k!2 n!0 n!0)) (* (- 2) (* c!3 k!2 k!2 n!0 n!0)) (* (- 1) (* k!2 k!2 k!2 n!0 n!0)) (* (- 1) (* c!3 c!3 m!1 n!0 n!0)) ?x365 ?x850 ?x837 ?x849 ?x815 (* (- 2) (* c!3 c!3 k!2 n!0)) (* (- 4) (* c!3 k!2 k!2 n!0)) (* (- 2) (* k!2 k!2 k!2 n!0)) (* (- 2) (* c!3 c!3 m!1 n!0)) (* (- 6) (* c!3 n!0 n!0)) (* (- 6) (* k!2 n!0 n!0)))))
 (let (($x925 (= (* ?x339 (+ 3 ?x340 ?x587 ?x586 (* k!2 n!0) (* m!1 n!0))) 0)))
 (let (($x517 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x641 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x789) (* 9 (* c!3 n!0)))))
 (let (($x848 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x641 4) $x517 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not $x925))))
 (let (($x707 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x411 (+ 3 ?x223 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x992 (* (- 6) (* k n n))))
 (let ((?x989 (* (- 6) (* c n n))))
 (let ((?x882 (* (- 2) (* c c m n))))
 (let ((?x879 (* (- 2) (* k k k n))))
 (let ((?x876 (* (- 4) (* c k k n))))
 (let ((?x873 (* (- 2) (* c c k n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x847 (* (- 1) (* c c m))))
 (let ((?x846 (* (- 1) (* k k k))))
 (let ((?x870 (* (- 2) (* c k k))))
 (let ((?x844 (* (- 1) (* c c k))))
 (let ((?x843 (* (- 1) (* c c m n n))))
 (let ((?x842 (* (- 1) (* k k k n n))))
 (let ((?x867 (* (- 2) (* c k k n n))))
 (let ((?x840 (* (- 1) (* c c k n n))))
 (let ((?x982 (* 5 (* c m n n))))
 (let ((?x654 (* 6 (* c k n n))))
 (let ((?x678 (* 2 (* k m m n))))
 (let ((?x677 (* 2 (* c m m n))))
 (let ((?x875 (* (- 2) (* c k m n))))
 (let ((?x981 (* 10 (* c m n))))
 (let ((?x671 (* 12 (* c k n))))
 (let ((?x608 (* k m m)))
 (let ((?x605 (* c m m)))
 (let ((?x874 (* (- 1) (* c k m))))
 (let ((?x878 (* (- 1) (* c k m n n))))
 (let ((?x528 (* c m m n n)))
 (let ((?x527 (* k m m n n)))
 (let ((?x520 (* 6 (* c k))))
 (let ((?x514 (* c m)))
 (let ((?x985 (* 5 ?x514)))
 (let ((?x696 (* 5 (* k k n n))))
 (let ((?x984 (* 3 (* k m n n))))
 (let ((?x588 (* (- 1) (* m m n n))))
 (let ((?x473 (* k m)))
 (let ((?x988 (* 3 ?x473)))
 (let ((?x590 (* (- 1) (* m m))))
 (let ((?x693 (* 10 (* k k n))))
 (let ((?x622 (* 6 (* k m n))))
 (let ((?x582 (* (- 2) (* m m n))))
 (let ((?x148 (* c n)))
 (let ((?x980 (* (- 12) ?x148)))
 (let ((?x977 (* (- 12) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x689 (* 5 ?x49)))
 (let ((?x973 (* (- 6) k)))
 (let ((?x970 (* (- 6) c)))
 (let ((?x810 (+ ?x970 ?x973 ?x689 ?x977 ?x980 ?x582 ?x622 ?x693 ?x590 ?x988 ?x588 ?x984 ?x696 ?x985 ?x520 ?x527 ?x528 ?x878 ?x874 ?x605 ?x608 ?x671 ?x981 ?x875 ?x677 ?x678 ?x654 ?x982 ?x840 ?x867 ?x842 ?x843 ?x844 ?x870 ?x846 ?x847 ?x756 ?x873 ?x876 ?x879 ?x882 ?x989 ?x992)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 ?x148)) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 $x210 $x262 $x300 (not (= (* ?x810 ?x411) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x962 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x411 (+ 3 ?x223 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x992 (* (- 6) (* k n n))))
 (let ((?x989 (* (- 6) (* c n n))))
 (let ((?x882 (* (- 2) (* c c m n))))
 (let ((?x879 (* (- 2) (* k k k n))))
 (let ((?x876 (* (- 4) (* c k k n))))
 (let ((?x873 (* (- 2) (* c c k n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x847 (* (- 1) (* c c m))))
 (let ((?x846 (* (- 1) (* k k k))))
 (let ((?x870 (* (- 2) (* c k k))))
 (let ((?x844 (* (- 1) (* c c k))))
 (let ((?x843 (* (- 1) (* c c m n n))))
 (let ((?x842 (* (- 1) (* k k k n n))))
 (let ((?x867 (* (- 2) (* c k k n n))))
 (let ((?x840 (* (- 1) (* c c k n n))))
 (let ((?x982 (* 5 (* c m n n))))
 (let ((?x654 (* 6 (* c k n n))))
 (let ((?x678 (* 2 (* k m m n))))
 (let ((?x677 (* 2 (* c m m n))))
 (let ((?x875 (* (- 2) (* c k m n))))
 (let ((?x981 (* 10 (* c m n))))
 (let ((?x671 (* 12 (* c k n))))
 (let ((?x608 (* k m m)))
 (let ((?x605 (* c m m)))
 (let ((?x874 (* (- 1) (* c k m))))
 (let ((?x878 (* (- 1) (* c k m n n))))
 (let ((?x528 (* c m m n n)))
 (let ((?x527 (* k m m n n)))
 (let ((?x696 (* 5 (* k k n n))))
 (let ((?x984 (* 3 (* k m n n))))
 (let ((?x588 (* (- 1) (* m m n n))))
 (let ((?x590 (* (- 1) (* m m))))
 (let ((?x693 (* 10 (* k k n))))
 (let ((?x622 (* 6 (* k m n))))
 (let ((?x582 (* (- 2) (* m m n))))
 (let ((?x148 (* c n)))
 (let ((?x980 (* (- 12) ?x148)))
 (let ((?x977 (* (- 12) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x689 (* 5 ?x49)))
 (let ((?x973 (* (- 6) k)))
 (let ((?x970 (* (- 6) c)))
 (let ((?x233 (+ ?x970 ?x973 ?x689 ?x977 ?x980 ?x582 ?x622 ?x693 ?x590 (* (- 3) (* k m)) ?x588 ?x984 ?x696 (* (- 1) (* c m)) ?x527 ?x528 ?x878 ?x874 ?x605 ?x608 ?x671 ?x981 ?x875 ?x677 ?x678 ?x654 ?x982 ?x840 ?x867 ?x842 ?x843 ?x844 ?x870 ?x846 ?x847 ?x756 ?x873 ?x876 ?x879 ?x882 ?x989 ?x992 (* 6 (* m k)) (* 6 (* k c)) (* 6 (* m c)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 ?x148)) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 $x210 $x262 $x300 (not (= (* ?x233 ?x411) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x663 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x411 (+ 3 ?x223 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x992 (* (- 6) (* k n n))))
 (let ((?x989 (* (- 6) (* c n n))))
 (let ((?x882 (* (- 2) (* c c m n))))
 (let ((?x879 (* (- 2) (* k k k n))))
 (let ((?x876 (* (- 4) (* c k k n))))
 (let ((?x873 (* (- 2) (* c c k n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x847 (* (- 1) (* c c m))))
 (let ((?x846 (* (- 1) (* k k k))))
 (let ((?x870 (* (- 2) (* c k k))))
 (let ((?x844 (* (- 1) (* c c k))))
 (let ((?x843 (* (- 1) (* c c m n n))))
 (let ((?x842 (* (- 1) (* k k k n n))))
 (let ((?x867 (* (- 2) (* c k k n n))))
 (let ((?x840 (* (- 1) (* c c k n n))))
 (let ((?x982 (* 5 (* c m n n))))
 (let ((?x654 (* 6 (* c k n n))))
 (let ((?x678 (* 2 (* k m m n))))
 (let ((?x677 (* 2 (* c m m n))))
 (let ((?x875 (* (- 2) (* c k m n))))
 (let ((?x981 (* 10 (* c m n))))
 (let ((?x671 (* 12 (* c k n))))
 (let ((?x608 (* k m m)))
 (let ((?x605 (* c m m)))
 (let ((?x874 (* (- 1) (* c k m))))
 (let ((?x878 (* (- 1) (* c k m n n))))
 (let ((?x528 (* c m m n n)))
 (let ((?x527 (* k m m n n)))
 (let ((?x520 (* 6 (* c k))))
 (let ((?x514 (* c m)))
 (let ((?x985 (* 5 ?x514)))
 (let ((?x696 (* 5 (* k k n n))))
 (let ((?x984 (* 3 (* k m n n))))
 (let ((?x588 (* (- 1) (* m m n n))))
 (let ((?x473 (* k m)))
 (let ((?x988 (* 3 ?x473)))
 (let ((?x590 (* (- 1) (* m m))))
 (let ((?x693 (* 10 (* k k n))))
 (let ((?x622 (* 6 (* k m n))))
 (let ((?x582 (* (- 2) (* m m n))))
 (let ((?x148 (* c n)))
 (let ((?x980 (* (- 12) ?x148)))
 (let ((?x977 (* (- 12) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x689 (* 5 ?x49)))
 (let ((?x973 (* (- 6) k)))
 (let ((?x970 (* (- 6) c)))
 (let ((?x810 (+ ?x970 ?x973 ?x689 ?x977 ?x980 ?x582 ?x622 ?x693 ?x590 ?x988 ?x588 ?x984 ?x696 ?x985 ?x520 ?x527 ?x528 ?x878 ?x874 ?x605 ?x608 ?x671 ?x981 ?x875 ?x677 ?x678 ?x654 ?x982 ?x840 ?x867 ?x842 ?x843 ?x844 ?x870 ?x846 ?x847 ?x756 ?x873 ?x876 ?x879 ?x882 ?x989 ?x992)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 ?x148)) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x777 (and $x126 $x210 $x262 $x300 (not (= (* ?x810 ?x411) 0)))))
 (let ((?x233 (+ ?x970 ?x973 ?x689 ?x977 ?x980 ?x582 ?x622 ?x693 ?x590 (* (- 3) ?x473) ?x588 ?x984 ?x696 (* (- 1) ?x514) ?x527 ?x528 ?x878 ?x874 ?x605 ?x608 ?x671 ?x981 ?x875 ?x677 ?x678 ?x654 ?x982 ?x840 ?x867 ?x842 ?x843 ?x844 ?x870 ?x846 ?x847 ?x756 ?x873 ?x876 ?x879 ?x882 ?x989 ?x992 (* 6 (* m k)) (* 6 (* k c)) (* 6 (* m c)))))
 (let (($x249 (and $x126 $x210 $x262 $x300 (not (= (* ?x233 ?x411) 0)))))
 (rewrite (= $x249 $x777))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x895 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x897 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x788 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 6 m) (+ c k)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x416 (+ 6 m)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x793 (+ ?x756 (* (- 1) (* ?x343 ?x343 ?x71 ?x71)) (* ?x343 ?x343 ?x416 ?x71 ?x68) (* (- 1) (* ?x343 ?x343 ?x71 ?x68 ?x68)) ?x788)))
 (let (($x974 (not (= (* ?x793 ?x897) 0))))
 (let (($x695 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x194 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x194 $x695 $x974)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x941 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x411 (+ 3 ?x223 (* (- 3) k) ?x59 ?x55 (* m n))))
 (let ((?x992 (* (- 6) (* k n n))))
 (let ((?x989 (* (- 6) (* c n n))))
 (let ((?x882 (* (- 2) (* c c m n))))
 (let ((?x879 (* (- 2) (* k k k n))))
 (let ((?x876 (* (- 4) (* c k k n))))
 (let ((?x873 (* (- 2) (* c c k n))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x416 (+ 6 m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x847 (* (- 1) (* c c m))))
 (let ((?x846 (* (- 1) (* k k k))))
 (let ((?x870 (* (- 2) (* c k k))))
 (let ((?x844 (* (- 1) (* c c k))))
 (let ((?x843 (* (- 1) (* c c m n n))))
 (let ((?x842 (* (- 1) (* k k k n n))))
 (let ((?x867 (* (- 2) (* c k k n n))))
 (let ((?x840 (* (- 1) (* c c k n n))))
 (let ((?x982 (* 5 (* c m n n))))
 (let ((?x654 (* 6 (* c k n n))))
 (let ((?x678 (* 2 (* k m m n))))
 (let ((?x677 (* 2 (* c m m n))))
 (let ((?x875 (* (- 2) (* c k m n))))
 (let ((?x981 (* 10 (* c m n))))
 (let ((?x671 (* 12 (* c k n))))
 (let ((?x608 (* k m m)))
 (let ((?x605 (* c m m)))
 (let ((?x874 (* (- 1) (* c k m))))
 (let ((?x878 (* (- 1) (* c k m n n))))
 (let ((?x528 (* c m m n n)))
 (let ((?x527 (* k m m n n)))
 (let ((?x696 (* 5 (* k k n n))))
 (let ((?x984 (* 3 (* k m n n))))
 (let ((?x588 (* (- 1) (* m m n n))))
 (let ((?x590 (* (- 1) (* m m))))
 (let ((?x693 (* 10 (* k k n))))
 (let ((?x622 (* 6 (* k m n))))
 (let ((?x582 (* (- 2) (* m m n))))
 (let ((?x148 (* c n)))
 (let ((?x980 (* (- 12) ?x148)))
 (let ((?x977 (* (- 12) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x689 (* 5 ?x49)))
 (let ((?x973 (* (- 6) k)))
 (let ((?x970 (* (- 6) c)))
 (let ((?x233 (+ ?x970 ?x973 ?x689 ?x977 ?x980 ?x582 ?x622 ?x693 ?x590 (* (- 3) (* k m)) ?x588 ?x984 ?x696 (* (- 1) (* c m)) ?x527 ?x528 ?x878 ?x874 ?x605 ?x608 ?x671 ?x981 ?x875 ?x677 ?x678 ?x654 ?x982 ?x840 ?x867 ?x842 ?x843 ?x844 ?x870 ?x846 ?x847 ?x756 ?x873 ?x876 ?x879 ?x882 ?x989 ?x992 (* 6 (* m k)) (* 6 (* k c)) (* 6 (* m c)))))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 ?x148)) 4)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x249 (and $x126 $x210 $x262 $x300 (not (= (* ?x233 ?x411) 0)))))
 (let ((?x793 (+ ?x756 (* (- 1) (* ?x343 ?x343 ?x71 ?x71)) (* ?x343 ?x343 ?x416 ?x71 ?x68) (* (- 1) (* ?x343 ?x343 ?x71 ?x68 ?x68)) (* (- 1) (* ?x343 ?x343 ?x416 ?x68)))))
 (let ((?x798 (* ?x793 (+ 3 ?x223 (* (- 4) k) (* ?x343 ?x71) (* (- 1) m) ?x59))))
 (let (($x974 (not (= ?x798 0))))
 (let (($x695 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x194 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x635 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x194 $x695 $x974)))
 (rewrite (= $x635 $x249)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x975 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x897 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x788 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 6 m) (+ c k)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x416 (+ 6 m)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x793 (+ ?x756 (* (- 1) (* ?x343 ?x343 ?x71 ?x71)) (* ?x343 ?x343 ?x416 ?x71 ?x68) (* (- 1) (* ?x343 ?x343 ?x71 ?x68 ?x68)) ?x788)))
 (let (($x974 (not (= (* ?x793 ?x897) 0))))
 (let (($x695 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x626 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (and $x126 (= ?x626 (- 4)) (= (+ ?x223 (* n k) (* (- 1) k) ?x59) (- 1)) $x695 $x974))))))))))))))))) :qid k!34))
 ))
 (let ((?x926 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x897 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x788 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 6 m) (+ c k)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x416 (+ 6 m)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x793 (+ ?x756 (* (- 1) (* ?x343 ?x343 ?x71 ?x71)) (* ?x343 ?x343 ?x416 ?x71 ?x68) (* (- 1) (* ?x343 ?x343 ?x71 ?x68 ?x68)) ?x788)))
 (let (($x974 (not (= (* ?x793 ?x897) 0))))
 (let (($x695 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x194 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x635 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x194 $x695 $x974)))
 (let ((?x48 (* 9 n)))
 (let ((?x626 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x813 (and $x126 (= ?x626 (- 4)) (= (+ ?x223 (* n k) (* (- 1) k) ?x59) (- 1)) $x695 $x974)))
 (rewrite (= $x813 $x635))))))))))))))))))))))))))
 ))
 (let (($x93 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x81 (- (* ?x68 ?x68 ?x71 ?x71 (+ m 6) ?x72 ?x72 ?x72) (* ?x71 ?x71 ?x72 ?x72))))
 (let ((?x86 (- (+ ?x81 (* ?x68 ?x71 (+ m 6) ?x72 ?x72)) (* ?x68 ?x68 ?x71 ?x72 ?x72))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x90 (not (= (* ?x77 (- ?x86 (* ?x68 (+ m 6) ?x72 ?x72))) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x90)))))))))))))))) :qid k!34))
 ))
 (let ((?x817 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x223 (* (- 3) c)))
 (let ((?x897 (+ 3 ?x223 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x788 (* (- 1) (* (+ 1 n) (+ 1 n) (+ 6 m) (+ c k)))))
 (let ((?x68 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x343 (+ 1 n)))
 (let ((?x416 (+ 6 m)))
 (let ((?x756 (* ?x343 ?x343 ?x343 ?x416 ?x71 ?x71 ?x68 ?x68)))
 (let ((?x793 (+ ?x756 (* (- 1) (* ?x343 ?x343 ?x71 ?x71)) (* ?x343 ?x343 ?x416 ?x71 ?x68) (* (- 1) (* ?x343 ?x343 ?x71 ?x68 ?x68)) ?x788)))
 (let (($x974 (not (= (* ?x793 ?x897) 0))))
 (let (($x695 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x626 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m (* (- 6) n)) 6)))
 (let (($x813 (and $x126 (= ?x626 (- 4)) (= (+ ?x223 (* n k) (* (- 1) k) ?x59) (- 1)) $x695 $x974)))
 (let ((?x72 (+ n 1)))
 (let ((?x78 (+ m 6)))
 (let ((?x81 (- (* ?x68 ?x68 ?x71 ?x71 ?x78 ?x72 ?x72 ?x72) (* ?x71 ?x71 ?x72 ?x72))))
 (let ((?x86 (- (+ ?x81 (* ?x68 ?x71 ?x78 ?x72 ?x72)) (* ?x68 ?x68 ?x71 ?x72 ?x72))))
 (let ((?x77 (+ (- (+ (- 1 (* 3 ?x68)) (* ?x71 ?x72)) ?x71) (* 2 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x92 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (* ?x77 (- ?x86 (* ?x68 ?x78 ?x72 ?x72))) 0))))))
 (rewrite (= $x92 $x813))))))))))))))))))))))))))))))
 ))
 (let ((@x94 (asserted $x93)))
 (let ((@x921 (mp (mp @x94 (quant-intro (proof-bind ?x817) (= $x93 $x975)) $x975) (rewrite (= $x975 $x975)) $x975)))
 (let ((@x865 (mp (mp @x921 (quant-intro (proof-bind ?x926) (= $x975 $x895)) $x895) (quant-intro (proof-bind ?x941) (= $x895 $x962)) $x962)))
 (let ((@x628 (mp~ (mp @x865 (quant-intro (proof-bind ?x663) (= $x962 $x707)) $x707) (sk (~ $x707 $x848)) $x848)))
 (let ((@x869 (mp @x628 (rewrite (= $x848 $x543)) $x543)))
 (let ((@x164 (and-elim @x869 $x170)))
 (let ((@x384 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x170) $x738)) @x164 $x738)))
 (let (($x778 (>= ?x168 (- 1))))
 (let ((@x965 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x170) $x778)) @x164 $x778)))
 (let (($x785 (<= ?x248 (- 1))))
 (let ((@x156 (and-elim @x869 $x600)))
 (let ((@x330 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x600) $x785)) @x156 $x785)))
 (let (($x784 (>= ?x248 (- 1))))
 (let ((@x386 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x600) $x784)) @x156 $x784)))
 (let (($x719 (<= ?x445 (- 6))))
 (let ((@x556 (and-elim @x869 $x495)))
 (let ((@x612 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x495) $x719)) @x556 $x719)))
 (let (($x792 (>= ?x445 (- 6))))
 (let ((@x801 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x495) $x792)) @x556 $x792)))
 (let ((@x2899 ((_ th-lemma arith) (hypothesis (not $x2778)) @x801 @x612 @x386 @x330 @x965 @x384 false)))
 (let ((@x2938 (lemma @x2899 $x2778)))
 (let (($x2446 (>= ?x648 0)))
 (let ((@x2393 ((_ th-lemma arith) (hypothesis (not $x2446)) @x386 @x330 @x801 @x612 @x801 @x612 @x965 @x384 false)))
 (let ((@x2449 (lemma @x2393 $x2446)))
 (let (($x2939 (not (<= ?x655 0))))
 (let (($x714 (>= ?x655 0)))
 (let ((@x2742 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x714)) @x2449 (hypothesis $x2778) false) (or (not $x2778) $x714))))
 (let ((@x2958 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x661 $x2939 (not $x714))) (and-elim @x869 $x841) (or $x2939 (not $x714)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x2958 (unit-resolution @x2742 @x2938 $x714) $x2939) @x2449 @x2938 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 318
 :arith-assert-diseq        26
 :arith-assert-lower        3779
 :arith-assert-upper        1898
 :arith-bound-prop          184
 :arith-branch-var          38
 :arith-conflicts           104
 :arith-eq-adapter          24
 :arith-fixed-eqs           448
 :arith-gcd-tests           439
 :arith-gomory-cuts         30
 :arith-grobner             255
 :arith-ineq-splits         38
 :arith-max-min             46700
 :arith-nonlinear-bounds    1251
 :arith-nonlinear-horner    3456
 :arith-num-rows            31
 :arith-offset-eqs          22
 :arith-patches             83
 :arith-patches_succ        7
 :arith-pivots              27005
 :arith-pseudo-nonlinear    624
 :arith-row-summations      118468
 :arith-tableau-max-columns 115
 :arith-tableau-max-rows    31
 :conflicts                 109
 :decisions                 1311
 :del-clause                322
 :final-checks              642
 :max-memory                6.52
 :memory                    3.50
 :minimized-lits            45
 :mk-bool-var               1133
 :mk-clause                 1059
 :num-allocs                2363192963142.00
 :num-checks                1
 :propagations              1641
 :restarts                  1
 :rlimit-count              125859465
 :time                      192.42
 :total-time                192.05)
