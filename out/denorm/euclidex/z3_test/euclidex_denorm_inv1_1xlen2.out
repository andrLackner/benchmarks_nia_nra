unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun q!3 () Int)
(declare-fun s!0 () Int)
(declare-fun p!5 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x1200 (* q!3 r!1)))
 (let ((?x37 (* p00 s00)))
 (let ((?x1040 (+ ?x37 (* (- 1) (* q00 r00)) (* (- 1) (* p!5 s!0)) ?x1200)))
 (let (($x1314 (>= ?x1040 0)))
 (let (($x1056 (= ?x1040 0)))
 (let ((?x1201 (* (- 1) ?x1200)))
 (let ((?x720 (* p!5 s!0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x1306 (+ ?x139 ?x41 ?x720 ?x1201)))
 (let ((?x975 (* a!4 q!3 q!3)))
 (let ((?x159 (* (- 1) (* b!2 b!2 q!3 p!5 p!5 p!5 s!0 s!0 s!0))))
 (let ((?x1041 (+ (* (- 3) (* b!2 b!2 q!3 q!3 q!3 p!5 s!0 s!0 s!0)) ?x159 ?x975 (* b!2 b!2 q!3 q!3 q!3 q!3 s!0 s!0 s!0) (* 3 (* b!2 b!2 q!3 q!3 p!5 p!5 s!0 s!0 s!0)) (* (- 1) (* b!2 q!3 q!3)))))
 (let ((?x371 (* ?x1041 ?x1306)))
 (let (($x1243 (= ?x371 0)))
 (let ((?x266 (+ (* (- 2) (* a!4 b!2 q!3 p!5 p!5 p!5 r!1 r!1 r!1)) (* 3 (* b!2 b!2 p!5 p!5 p!5 p!5 s!0 r!1 r!1)) (* 6 (* a!4 b!2 p!5 p!5 p!5 p!5 s!0 s!0 r!1)) (* (- 1) (* b!2 b!2 p!5 p!5 p!5 p!5 r!1 r!1 r!1)) (* (- 2) (* a!4 b!2 p!5 p!5 p!5 p!5 s!0 s!0 s!0)) (* 3 (* a!4 a!4 q!3 p!5 p!5 p!5 s!0 s!0 r!1)) (* (- 1) (* a!4 a!4 q!3 p!5 p!5 p!5 s!0 s!0 s!0)) (* (- 1) (* a!4 a!4 p!5 p!5 p!5 p!5 r!1 r!1 r!1)) (* (- 3) (* a!4 a!4 p!5 p!5 p!5 p!5 s!0 s!0 r!1)) (* a!4 a!4 p!5 p!5 p!5 p!5 s!0 s!0 s!0) (* a!4 a!4 q!3 p!5 p!5 p!5 r!1 r!1 r!1) (* (- 3) (* a!4 a!4 q!3 p!5 p!5 p!5 s!0 r!1 r!1)) (* (- 3) (* b!2 b!2 q!3 p!5 p!5 p!5 s!0 r!1 r!1)) (* 3 (* b!2 b!2 q!3 p!5 p!5 p!5 s!0 s!0 r!1)) ?x159 ?x975 (* (- 6) (* a!4 b!2 p!5 p!5 p!5 p!5 s!0 r!1 r!1)) (* 2 (* a!4 b!2 p!5 p!5 p!5 p!5 r!1 r!1 r!1)) (* 6 (* a!4 b!2 q!3 p!5 p!5 p!5 s!0 r!1 r!1)) (* b!2 b!2 p!5 p!5 p!5 p!5 s!0 s!0 s!0) (* (- 3) (* b!2 b!2 p!5 p!5 p!5 p!5 s!0 s!0 r!1)) (* 2 (* a!4 b!2 q!3 p!5 p!5 p!5 s!0 s!0 s!0)) (* b!2 b!2 q!3 p!5 p!5 p!5 r!1 r!1 r!1) (* 3 (* a!4 a!4 p!5 p!5 p!5 p!5 s!0 r!1 r!1)) (* a!4 p!5 p!5) (* (- 2) (* a!4 q!3 p!5)) (* (- 6) (* a!4 b!2 q!3 p!5 p!5 p!5 s!0 s!0 r!1)))))
 (let ((?x176 (* ?x266 ?x1306)))
 (let (($x1248 (= ?x176 0)))
 (let (($x177 (not $x1248)))
 (let (($x1241 (or $x177 (not $x1243))))
 (let ((?x1046 (+ (* r00 b00 q!3) (* q00 a00 s!0) (* (- 1) (* s00 a00 q!3)) (* p00 s00 b!2) (* (- 1) (* q00 r00 b!2)) (* (- 1) (* p00 b00 s!0)))))
 (let ((?x612 (+ (* q00 a00 r!1) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* p00 s00 a!4) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5))))
 (let ((?x134 (* q00 a00)))
 (let ((?x1083 (+ ?x134 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) (* b!2 p!5))))
 (let ((?x626 (* b!2 r!1)))
 (let ((?x130 (* s00 a00)))
 (let (($x1070 (= (+ ?x130 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) ?x626) 0)))
 (let (($x666 (and $x1056 $x1070 (= ?x1083 0) (= ?x612 0) (= ?x1046 0) $x1241)))
 (let ((?x325 (+ ?x720 ?x139 ?x41 ?x1201)))
 (let ((?x1173 (* (- 1) (* p!5 p!5 p!5 q!3 b!2 b!2 s!0 s!0 s!0))))
 (let ((?x1132 (+ ?x975 (* (- 1) (* q!3 q!3 b!2)) ?x1173 (* q!3 q!3 q!3 q!3 b!2 b!2 s!0 s!0 s!0) (* 3 (* p!5 p!5 q!3 q!3 b!2 b!2 s!0 s!0 s!0)) (* (- 3) (* p!5 q!3 q!3 q!3 b!2 b!2 s!0 s!0 s!0)))))
 (let ((?x1147 (+ (* (- 1) (* p!5 p!5 p!5 p!5 a!4 a!4 r!1 r!1 r!1)) ?x975 (* (- 3) (* p!5 p!5 p!5 p!5 a!4 a!4 r!1 s!0 s!0)) (* p!5 p!5 p!5 p!5 a!4 a!4 s!0 s!0 s!0) (* 3 (* p!5 p!5 p!5 p!5 a!4 a!4 r!1 r!1 s!0)) (* p!5 p!5 a!4) (* (- 2) (* p!5 a!4 q!3)) (* (- 6) (* p!5 p!5 p!5 p!5 a!4 b!2 r!1 r!1 s!0)) (* 2 (* p!5 p!5 p!5 p!5 a!4 b!2 r!1 r!1 r!1)) (* 6 (* p!5 p!5 p!5 p!5 a!4 b!2 r!1 s!0 s!0)) (* (- 2) (* p!5 p!5 p!5 p!5 a!4 b!2 s!0 s!0 s!0)) (* (- 1) (* p!5 p!5 p!5 p!5 b!2 b!2 r!1 r!1 r!1)) (* 3 (* p!5 p!5 p!5 p!5 b!2 b!2 r!1 r!1 s!0)) (* (- 3) (* p!5 p!5 p!5 p!5 b!2 b!2 r!1 s!0 s!0)) (* p!5 p!5 p!5 p!5 b!2 b!2 s!0 s!0 s!0) (* p!5 p!5 p!5 a!4 a!4 q!3 r!1 r!1 r!1) (* (- 3) (* p!5 p!5 p!5 a!4 a!4 q!3 r!1 r!1 s!0)) (* 3 (* p!5 p!5 p!5 a!4 a!4 q!3 r!1 s!0 s!0)) (* (- 1) (* p!5 p!5 p!5 a!4 a!4 q!3 s!0 s!0 s!0)) (* (- 2) (* p!5 p!5 p!5 a!4 q!3 b!2 r!1 r!1 r!1)) (* 6 (* p!5 p!5 p!5 a!4 q!3 b!2 r!1 r!1 s!0)) (* (- 6) (* p!5 p!5 p!5 a!4 q!3 b!2 r!1 s!0 s!0)) (* 2 (* p!5 p!5 p!5 a!4 q!3 b!2 s!0 s!0 s!0)) (* p!5 p!5 p!5 q!3 b!2 b!2 r!1 r!1 r!1) (* (- 3) (* p!5 p!5 p!5 q!3 b!2 b!2 r!1 r!1 s!0)) (* 3 (* p!5 p!5 p!5 q!3 b!2 b!2 r!1 s!0 s!0)) ?x1173)))
 (let ((?x1290 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x897 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x135 (* p00 b00)))
 (let ((?x178 (* (- 1) ?x134)))
 (let ((?x785 (* a!4 q!3)))
 (let (($x784 (= (+ (* a!4 s!0) (* (- 1) ?x626) (* (- 1) ?x130) (* r00 b00)) 0)))
 (let (($x637 (and (= ?x325 0) $x784 (= (+ ?x785 ?x178 ?x135 (* (- 1) (* p!5 b!2))) 0) (= ?x897 0) (= ?x1290 0) (or (not (= (* ?x1147 ?x325) 0)) (not (= (* ?x1132 ?x325) 0))))))
 (let (($x1279 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x123 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x153 (+ ?x33 ?x139 ?x41 ?x123)))
 (let ((?x1120 (* (- 1) (* p p p q b b s s s))))
 (let ((?x378 (* (- 1) (* q q b))))
 (let ((?x370 (* a q q)))
 (let ((?x1300 (+ ?x370 ?x378 ?x1120 (* q q q q b b s s s) (* 3 (* p p q q b b s s s)) (* (- 3) (* p q q q b b s s s)))))
 (let ((?x605 (* (- 2) (* p a q))))
 (let ((?x578 (* p p a)))
 (let ((?x1187 (+ (* (- 1) (* p p p p a a r r r)) ?x370 (* (- 3) (* p p p p a a r s s)) (* p p p p a a s s s) (* 3 (* p p p p a a r r s)) ?x578 ?x605 (* (- 6) (* p p p p a b r r s)) (* 2 (* p p p p a b r r r)) (* 6 (* p p p p a b r s s)) (* (- 2) (* p p p p a b s s s)) (* (- 1) (* p p p p b b r r r)) (* 3 (* p p p p b b r r s)) (* (- 3) (* p p p p b b r s s)) (* p p p p b b s s s) (* p p p a a q r r r) (* (- 3) (* p p p a a q r r s)) (* 3 (* p p p a a q r s s)) (* (- 1) (* p p p a a q s s s)) (* (- 2) (* p p p a q b r r r)) (* 6 (* p p p a q b r r s)) (* (- 6) (* p p p a q b r s s)) (* 2 (* p p p a q b s s s)) (* p p p q b b r r r) (* (- 3) (* p p p q b b r r s)) (* 3 (* p p p q b b r s s)) ?x1120)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x310 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x315 (= ?x310 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x246 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x247 (= ?x246 0)))
 (let ((?x135 (* p00 b00)))
 (let ((?x134 (* q00 a00)))
 (let ((?x178 (* (- 1) ?x134)))
 (let (($x181 (= (+ (* a q) ?x178 ?x135 (* (- 1) (* p b))) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let (($x158 (= ?x153 0)))
 (and $x158 $x163 $x181 $x247 $x315 (or (not (= (* ?x1187 ?x153) 0)) (not (= (* ?x1300 ?x153) 0))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x145 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x229 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x597 (+ p ?x274)))
 (let ((?x424 (+ (* (- 1) (* ?x597 ?x597 ?x597 s s s b b q)) (* (+ a (* (- 1) b)) q q))))
 (let ((?x361 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x280 (+ q ?x340)))
 (let ((?x416 (* (- 1) a)))
 (let ((?x299 (+ b ?x416)))
 (let ((?x257 (* (- 1) r)))
 (let ((?x218 (+ s ?x257)))
 (let ((?x201 (+ (* (- 1) (* ?x218 ?x218 ?x218 ?x299 ?x299 ?x280 p p p)) (* ?x280 ?x280 a))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x311 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x610 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x581 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x271 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) (= ?x271 0) $x581 (= ?x610 0) (= ?x311 0) (or (not (= (* ?x201 ?x361) 0)) (not (= (* ?x424 ?x229) 0)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x1197 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x123 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x153 (+ ?x33 ?x139 ?x41 ?x123)))
 (let ((?x1120 (* (- 1) (* p p p q b b s s s))))
 (let ((?x378 (* (- 1) (* q q b))))
 (let ((?x370 (* a q q)))
 (let ((?x1300 (+ ?x370 ?x378 ?x1120 (* q q q q b b s s s) (* 3 (* p p q q b b s s s)) (* (- 3) (* p q q q b b s s s)))))
 (let ((?x605 (* (- 2) (* p a q))))
 (let ((?x578 (* p p a)))
 (let ((?x1187 (+ (* (- 1) (* p p p p a a r r r)) ?x370 (* (- 3) (* p p p p a a r s s)) (* p p p p a a s s s) (* 3 (* p p p p a a r r s)) ?x578 ?x605 (* (- 6) (* p p p p a b r r s)) (* 2 (* p p p p a b r r r)) (* 6 (* p p p p a b r s s)) (* (- 2) (* p p p p a b s s s)) (* (- 1) (* p p p p b b r r r)) (* 3 (* p p p p b b r r s)) (* (- 3) (* p p p p b b r s s)) (* p p p p b b s s s) (* p p p a a q r r r) (* (- 3) (* p p p a a q r r s)) (* 3 (* p p p a a q r s s)) (* (- 1) (* p p p a a q s s s)) (* (- 2) (* p p p a q b r r r)) (* 6 (* p p p a q b r r s)) (* (- 6) (* p p p a q b r s s)) (* 2 (* p p p a q b s s s)) (* p p p q b b r r r) (* (- 3) (* p p p q b b r r s)) (* 3 (* p p p q b b r s s)) ?x1120)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x310 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x315 (= ?x310 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x246 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x247 (= ?x246 0)))
 (let ((?x135 (* p00 b00)))
 (let ((?x134 (* q00 a00)))
 (let ((?x178 (* (- 1) ?x134)))
 (let (($x181 (= (+ (* a q) ?x178 ?x135 (* (- 1) (* p b))) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let (($x158 (= ?x153 0)))
 (let (($x1322 (and $x158 $x163 $x181 $x247 $x315 (or (not (= (* ?x1187 ?x153) 0)) (not (= (* ?x1300 ?x153) 0))))))
 (let ((?x229 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x597 (+ p ?x274)))
 (let ((?x424 (+ (* (- 1) (* ?x597 ?x597 ?x597 s s s b b q)) (* (+ a (* (- 1) b)) q q))))
 (let ((?x361 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x280 (+ q ?x340)))
 (let ((?x416 (* (- 1) a)))
 (let ((?x299 (+ b ?x416)))
 (let ((?x257 (* (- 1) r)))
 (let ((?x218 (+ s ?x257)))
 (let ((?x201 (+ (* (- 1) (* ?x218 ?x218 ?x218 ?x299 ?x299 ?x280 p p p)) (* ?x280 ?x280 a))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x311 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x610 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x581 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x271 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x147 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) (= ?x271 0) $x581 (= ?x610 0) (= ?x311 0) (or (not (= (* ?x201 ?x361) 0)) (not (= (* ?x424 ?x229) 0))))))
 (rewrite (= $x147 $x1322)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x114 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x100 (- s r)))
 (let ((?x98 (- q p)))
 (let ((?x105 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x108 (+ (* ?x31 ?x105 ?x105 p p p ?x98 ?x100 ?x100 ?x100) (* a ?x98 ?x98))))
 (let ((?x41 (* q00 r00)))
 (let ((?x109 (* (+ (- (+ (* ?x31 ?x98 r) (* p ?x100)) (* p00 s00)) ?x41) ?x108)))
 (let ((?x86 (- p q)))
 (let ((?x94 (+ (* ?x31 b b ?x86 ?x86 ?x86 q s s s) (* (- a b) q q))))
 (let ((?x90 (+ (- (+ (* ?x31 q (- r s)) (* ?x86 s)) (* p00 s00)) ?x41)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= (* ?x90 ?x94) 0)) (not (= ?x109 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x320 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x229 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x139 ?x41)))
 (let ((?x274 (* (- 1) q)))
 (let ((?x597 (+ p ?x274)))
 (let ((?x424 (+ (* (- 1) (* ?x597 ?x597 ?x597 s s s b b q)) (* (+ a (* (- 1) b)) q q))))
 (let ((?x361 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x139 ?x41)))
 (let ((?x340 (* (- 1) p)))
 (let ((?x280 (+ q ?x340)))
 (let ((?x416 (* (- 1) a)))
 (let ((?x299 (+ b ?x416)))
 (let ((?x257 (* (- 1) r)))
 (let ((?x218 (+ s ?x257)))
 (let ((?x201 (+ (* (- 1) (* ?x218 ?x218 ?x218 ?x299 ?x299 ?x280 p p p)) (* ?x280 ?x280 a))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x311 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x610 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x581 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x271 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x147 (and (= (+ (* (- 1) (* r q)) (* s p) ?x139 ?x41) 0) (= ?x271 0) $x581 (= ?x610 0) (= ?x311 0) (or (not (= (* ?x201 ?x361) 0)) (not (= (* ?x424 ?x229) 0))))))
 (let ((?x100 (- s r)))
 (let ((?x98 (- q p)))
 (let ((?x105 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x108 (+ (* ?x31 ?x105 ?x105 p p p ?x98 ?x100 ?x100 ?x100) (* a ?x98 ?x98))))
 (let (($x110 (= (* (+ (- (+ (* ?x31 ?x98 r) (* p ?x100)) ?x37) ?x41) ?x108) 0)))
 (let ((?x86 (- p q)))
 (let ((?x94 (+ (* ?x31 b b ?x86 ?x86 ?x86 q s s s) (* (- a b) q q))))
 (let ((?x95 (* (+ (- (+ (* ?x31 q (- r s)) (* ?x86 s)) ?x37) ?x41) ?x94)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x113 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x95 0)) (not $x110)))))
 (rewrite (= $x113 $x147)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x115 (asserted $x114)))
 (let ((@x259 (mp (mp @x115 (quant-intro (proof-bind ?x320) (= $x114 $x145)) $x145) (rewrite (= $x145 $x145)) $x145)))
 (let ((@x1305 (mp~ (mp @x259 (quant-intro (proof-bind ?x1197) (= $x145 $x1279)) $x1279) (sk (~ $x1279 $x637)) $x637)))
 (let ((@x297 (mp @x1305 (rewrite (= $x637 $x666)) $x666)))
 (let ((@x1253 (and-elim @x297 $x1056)))
 (let ((@x813 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1056) $x1314)) @x1253 $x1314)))
 (let (($x1313 (<= ?x1040 0)))
 (let ((@x969 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1056) $x1313)) @x1253 $x1313)))
 (let (($x684 (not (<= ?x176 0))))
 (let (($x396 (>= ?x371 0)))
 (let (($x723 (<= ?x371 0)))
 (let ((@x329 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1243 (not $x723) (not $x396))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x723)) @x969 @x813 false) $x723) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x396)) @x969 @x813 false) $x396) $x1243)))
 (let (($x592 (>= ?x176 0)))
 (let ((@x632 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1248 $x684 (not $x592))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x592)) @x969 @x813 false) $x592) (unit-resolution (and-elim @x297 $x1241) @x329 $x177) $x684)))
 ((_ th-lemma arith farkas 1 1 1) @x632 @x969 @x813 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             568
 :arith-nonlinear-horner    30
 :arith-num-rows            8
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 84
 :arith-tableau-max-rows    8
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                78.68
 :memory                    19.13
 :mk-bool-var               33
 :mk-clause                 40
 :num-allocs                407278108034.00
 :num-checks                1
 :propagations              19
 :rlimit-count              19127887
 :time                      10.73
 :total-time                10.74)
