unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x789 (* k!2 n!0)))
 (let ((?x951 (* (- 1) ?x789)))
 (let ((?x189 (* 3 c!3)))
 (let ((?x949 (* (- 2) n!0)))
 (let ((?x533 (+ k!2 ?x949 ?x189 ?x951)))
 (let (($x349 (<= ?x533 1)))
 (let (($x352 (= ?x533 1)))
 (let ((?x695 (+ k!2 c!3)))
 (let ((?x273 (+ k!2 m!1)))
 (let ((?x626 (+ 6 m!1)))
 (let ((?x671 (+ 1 n!0)))
 (let ((?x483 (* (- 3) (* ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695))))
 (let ((?x704 (* (- 1) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695))))
 (let ((?x405 (* (- 2) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695))))
 (let ((?x707 (* (- 36) ?x789)))
 (let ((?x406 (* 2 (* ?x671 ?x671 ?x671 ?x671 ?x626 ?x626 ?x273))))
 (let ((?x720 (* 108 c!3)))
 (let ((?x916 (* (- 1) (* ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x695 ?x695))))
 (let ((?x783 (* (- 1) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x273))))
 (let ((?x415 (* ?x671 ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x273)))
 (let ((?x498 (* (- 36) m!1)))
 (let ((?x635 (* (- 72) n!0)))
 (let ((?x361 (* 2 (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x695 ?x695))))
 (let ((?x252 (* 108 k!2)))
 (let ((?x130 (* 3 (* k!2 m!1 m!1))))
 (let ((?x952 (* (- 3) (* m!1 m!1))))
 (let ((?x636 (* 36 (* k!2 m!1))))
 (let ((?x205 (* 3 (* ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695 ?x695))))
 (let ((?x145 (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273)))
 (let ((?x531 (+ ?x145 (* ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x695 ?x695) ?x205 ?x636 ?x952 (* ?x626 ?x273 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695) (* ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695) ?x130 ?x252 (* (- 14) (* n!0 m!1 m!1)) ?x361 (* 3 (* m!1 m!1 c!3)) ?x635 (* (- 1) (* ?x626 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695)) ?x498 ?x415 (* (- 1) (* n!0 m!1 m!1 m!1)) (* (- 1) (* ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695)) ?x783 (* 36 (* m!1 c!3)) (* (- 3) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x695)) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x695 ?x695) ?x916 ?x720 ?x406 (* (- 2) (* ?x671 ?x626 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695)) ?x707 ?x405 (* (- 1) (* k!2 n!0 m!1 m!1)) (* (- 60) (* n!0 m!1)) (* 3 (* ?x626 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695 ?x695)) (* (- 1) (* ?x671 ?x626 ?x273 ?x273 ?x273 ?x273 ?x695 ?x695 ?x695)) ?x704 (* (- 12) (* k!2 n!0 m!1)) ?x483)))
 (let (($x925 (= ?x531 108)))
 (let (($x661 (not $x925)))
 (let ((?x162 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x245 (= ?x162 1)))
 (let ((?x706 (* 18 c!3)))
 (let ((?x755 (* (- 1) (* k!2 k!2))))
 (let ((?x761 (* (- 9) n!0)))
 (let ((?x216 (* 5 k!2)))
 (let ((?x146 (+ ?x216 ?x761 ?x755 ?x706 (* 9 (* n!0 c!3)))))
 (let (($x298 (= ?x146 4)))
 (let ((?x764 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x470 (= ?x764 (- 6))))
 (let (($x350 (and $x470 $x298 $x352 $x245 $x661)))
 (let ((?x493 (+ c!3 k!2)))
 (let ((?x757 (* (- 1) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493))))
 (let ((?x496 (* (- 1) (* ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x493 ?x493))))
 (let ((?x158 (* 3 (* ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493 ?x493))))
 (let ((?x186 (* 2 (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x493 ?x493))))
 (let ((?x1022 (* (- 2) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493))))
 (let ((?x414 (* (- 3) (* ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493))))
 (let ((?x543 (+ ?x720 ?x252 ?x498 ?x635 ?x707 (* ?x626 ?x273 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493) ?x414 ?x783 ?x415 (* (- 1) (* ?x671 ?x626 ?x273 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493)) ?x952 ?x1022 ?x130 (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x493 ?x493) (* 36 (* c!3 m!1)) ?x186 (* 3 (* c!3 m!1 m!1)) ?x636 ?x145 ?x158 (* (- 3) (* ?x671 ?x671 ?x671 ?x626 ?x626 ?x273 ?x493)) (* (- 1) (* k!2 m!1 m!1 n!0)) (* (- 1) (* m!1 m!1 m!1 n!0)) ?x496 ?x406 (* (- 14) (* m!1 m!1 n!0)) (* (- 12) (* k!2 m!1 n!0)) ?x757 (* (- 60) (* m!1 n!0)) (* ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493) (* 3 (* ?x626 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493 ?x493)) (* ?x671 ?x671 ?x626 ?x626 ?x626 ?x273 ?x273 ?x273 ?x493 ?x493) (* (- 1) (* ?x626 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493)) (* (- 1) (* ?x671 ?x671 ?x626 ?x626 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493)) (* (- 2) (* ?x671 ?x626 ?x273 ?x273 ?x273 ?x493 ?x493 ?x493)))))
 (let (($x488 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x706 ?x216 ?x761 ?x755 (* 9 (* c!3 n!0))) 4) (= (+ ?x189 k!2 ?x949 ?x951) 1) $x245 (not (= ?x543 108)))))
 (let (($x870 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x336 (+ 6 m)))
 (let ((?x418 (+ 1 n)))
 (let ((?x982 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x953 (* (- 2) ?x982)))
 (let ((?x924 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x1008 (* (- 1) ?x924)))
 (let ((?x909 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x901 (* (- 1) ?x909)))
 (let ((?x877 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x866 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x867 (* 3 ?x866)))
 (let ((?x786 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x778 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x527 (* (- 1) ?x778)))
 (let ((?x766 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x615 (* 2 ?x766)))
 (let ((?x657 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x540 (* (- 1) ?x657)))
 (let ((?x549 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x73)))
 (let ((?x341 (* (- 3) ?x549)))
 (let ((?x525 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x773 (* 3 ?x525)))
 (let ((?x499 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x462 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x182 (* 2 ?x462)))
 (let ((?x383 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x357 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x969 (* (- 2) ?x357)))
 (let ((?x316 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x324 (* (- 1) ?x316)))
 (let ((?x285 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x259 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x269 (* (- 1) ?x259)))
 (let ((?x225 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x132 (* (- 3) ?x225)))
 (let ((?x154 (* ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x937 (+ (* 108 c) (* 108 k) (* (- 36) m) (* (- 72) n) (* (- 36) (* k n)) ?x154 ?x132 ?x269 ?x285 ?x324 (* (- 3) (* m m)) ?x969 (* 3 (* k m m)) ?x383 (* 36 (* c m)) ?x182 (* 3 (* c m m)) (* 36 (* k m)) ?x499 ?x773 ?x341 (* (- 1) (* k m m n)) (* (- 1) (* m m m n)) ?x540 ?x615 (* (- 14) (* m m n)) (* (- 12) (* k m n)) ?x527 (* (- 60) (* m n)) ?x786 ?x867 ?x877 ?x901 ?x1008 ?x953)))
 (let (($x326 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x288 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x236 (= (+ ?x40 ?x44 ?x238 ?x239 (* 9 (* c n))) 4)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 $x236 $x288 $x326 (not (= ?x937 108))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x403 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x336 (+ 6 m)))
 (let ((?x418 (+ 1 n)))
 (let ((?x657 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x383 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x225 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x170 (* ?x418 ?x336 ?x336 ?x71)))
 (let ((?x259 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x316 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x462 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x909 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x924 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x357 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x778 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x525 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x786 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x494 (* ?x336 ?x336)))
 (let ((?x397 (+ ?x494 (* (- 1) (* ?x336 ?x336 ?x71)) (* (- 1) ?x786) (* (- 3) ?x525) ?x778 (* (- 1) (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)) (* (- 2) (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)) (* (- 3) (* ?x336 ?x336 ?x73)) (* 2 ?x357) ?x924 ?x909 (* (- 1) (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)) (* (- 3) (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)) (* (- 2) ?x462) (* 2 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 3 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x73)) ?x316 ?x259 (* (- 1) (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)) ?x170 (* 3 ?x225) (* (- 1) (* ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)) (* (- 1) ?x383) ?x657 (* 2 (* ?x418 ?x336 ?x336)))))
 (let (($x588 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x883 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x883 $x588 (not (= ?x397 0)))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x873 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x336 (+ 6 m)))
 (let ((?x418 (+ 1 n)))
 (let ((?x982 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x953 (* (- 2) ?x982)))
 (let ((?x924 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x1008 (* (- 1) ?x924)))
 (let ((?x909 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x901 (* (- 1) ?x909)))
 (let ((?x877 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x866 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x867 (* 3 ?x866)))
 (let ((?x786 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x778 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x527 (* (- 1) ?x778)))
 (let ((?x766 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x615 (* 2 ?x766)))
 (let ((?x657 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x540 (* (- 1) ?x657)))
 (let ((?x549 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x73)))
 (let ((?x341 (* (- 3) ?x549)))
 (let ((?x525 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x773 (* 3 ?x525)))
 (let ((?x499 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x462 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x182 (* 2 ?x462)))
 (let ((?x383 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x357 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x969 (* (- 2) ?x357)))
 (let ((?x316 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x324 (* (- 1) ?x316)))
 (let ((?x285 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x259 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x269 (* (- 1) ?x259)))
 (let ((?x225 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x132 (* (- 3) ?x225)))
 (let ((?x154 (* ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x937 (+ (* 108 c) (* 108 k) (* (- 36) m) (* (- 72) n) (* (- 36) (* k n)) ?x154 ?x132 ?x269 ?x285 ?x324 (* (- 3) (* m m)) ?x969 (* 3 (* k m m)) ?x383 (* 36 (* c m)) ?x182 (* 3 (* c m m)) (* 36 (* k m)) ?x499 ?x773 ?x341 (* (- 1) (* k m m n)) (* (- 1) (* m m m n)) ?x540 ?x615 (* (- 14) (* m m n)) (* (- 12) (* k m n)) ?x527 (* (- 60) (* m n)) ?x786 ?x867 ?x877 ?x901 ?x1008 ?x953)))
 (let (($x326 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x288 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x236 (= (+ ?x40 ?x44 ?x238 ?x239 (* 9 (* c n))) 4)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x781 (and $x152 $x236 $x288 $x326 (not (= ?x937 108)))))
 (let ((?x170 (* ?x418 ?x336 ?x336 ?x71)))
 (let ((?x494 (* ?x336 ?x336)))
 (let ((?x397 (+ ?x494 (* (- 1) (* ?x336 ?x336 ?x71)) (* (- 1) ?x786) (* (- 3) ?x525) ?x778 (* (- 1) ?x499) (* (- 2) ?x766) (* (- 3) (* ?x336 ?x336 ?x73)) (* 2 ?x357) ?x924 ?x909 (* (- 1) ?x877) (* (- 3) ?x866) (* (- 2) ?x462) (* 2 ?x982) (* 3 ?x549) ?x316 ?x259 (* (- 1) ?x285) ?x170 (* 3 ?x225) (* (- 1) ?x154) (* (- 1) ?x383) ?x657 (* 2 (* ?x418 ?x336 ?x336)))))
 (let (($x588 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x883 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x401 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x883 $x588 (not (= ?x397 0)))))
 (rewrite (= $x401 $x781))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x580 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x336 (+ 6 m)))
 (let ((?x418 (+ 1 n)))
 (let ((?x657 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x540 (* (- 1) ?x657)))
 (let ((?x383 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x154 (* ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x225 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x132 (* (- 3) ?x225)))
 (let ((?x285 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x259 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x269 (* (- 1) ?x259)))
 (let ((?x316 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x324 (* (- 1) ?x316)))
 (let ((?x549 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x73)))
 (let ((?x341 (* (- 3) ?x549)))
 (let ((?x982 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x953 (* (- 2) ?x982)))
 (let ((?x462 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x182 (* 2 ?x462)))
 (let ((?x866 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x867 (* 3 ?x866)))
 (let ((?x877 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x909 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x901 (* (- 1) ?x909)))
 (let ((?x924 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x1008 (* (- 1) ?x924)))
 (let ((?x357 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x969 (* (- 2) ?x357)))
 (let ((?x766 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x615 (* 2 ?x766)))
 (let ((?x499 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x778 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x527 (* (- 1) ?x778)))
 (let ((?x525 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x773 (* 3 ?x525)))
 (let ((?x786 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x596 (* ?x336 ?x336 ?x71)))
 (let ((?x489 (+ (* (- 1) (* ?x336 ?x336)) ?x596 ?x786 ?x773 ?x527 ?x499 ?x615 (* 3 (* ?x336 ?x336 ?x73)) ?x969 ?x1008 ?x901 ?x877 ?x867 ?x182 ?x953 ?x341 ?x324 ?x269 ?x285 (* (- 1) (* ?x418 ?x336 ?x336 ?x71)) ?x132 ?x154 ?x383 ?x540 (* (- 2) (* ?x418 ?x336 ?x336)))))
 (let (($x588 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x510 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x139 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (and $x152 (= ?x139 (- 4)) $x510 $x588 (not (= ?x489 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x381 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x336 (+ 6 m)))
 (let ((?x418 (+ 1 n)))
 (let ((?x657 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x383 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x225 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x170 (* ?x418 ?x336 ?x336 ?x71)))
 (let ((?x259 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x316 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x462 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x909 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x924 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x357 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x778 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x525 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x786 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x494 (* ?x336 ?x336)))
 (let ((?x397 (+ ?x494 (* (- 1) (* ?x336 ?x336 ?x71)) (* (- 1) ?x786) (* (- 3) ?x525) ?x778 (* (- 1) (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)) (* (- 2) (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)) (* (- 3) (* ?x336 ?x336 ?x73)) (* 2 ?x357) ?x924 ?x909 (* (- 1) (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)) (* (- 3) (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)) (* (- 2) ?x462) (* 2 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)) (* 3 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x73)) ?x316 ?x259 (* (- 1) (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)) ?x170 (* 3 ?x225) (* (- 1) (* ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)) (* (- 1) ?x383) ?x657 (* 2 (* ?x418 ?x336 ?x336)))))
 (let (($x588 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x883 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x239 (* (- 1) ?x49)))
 (let ((?x238 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x401 (and $x152 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x238 ?x239) 4) $x883 $x588 (not (= ?x397 0)))))
 (let ((?x540 (* (- 1) ?x657)))
 (let ((?x154 (* ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x132 (* (- 3) ?x225)))
 (let ((?x285 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x269 (* (- 1) ?x259)))
 (let ((?x324 (* (- 1) ?x316)))
 (let ((?x549 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x73)))
 (let ((?x341 (* (- 3) ?x549)))
 (let ((?x982 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x953 (* (- 2) ?x982)))
 (let ((?x182 (* 2 ?x462)))
 (let ((?x866 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x867 (* 3 ?x866)))
 (let ((?x877 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x901 (* (- 1) ?x909)))
 (let ((?x1008 (* (- 1) ?x924)))
 (let ((?x969 (* (- 2) ?x357)))
 (let ((?x766 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x615 (* 2 ?x766)))
 (let ((?x499 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x527 (* (- 1) ?x778)))
 (let ((?x773 (* 3 ?x525)))
 (let ((?x596 (* ?x336 ?x336 ?x71)))
 (let ((?x489 (+ (* (- 1) ?x494) ?x596 ?x786 ?x773 ?x527 ?x499 ?x615 (* 3 (* ?x336 ?x336 ?x73)) ?x969 ?x1008 ?x901 ?x877 ?x867 ?x182 ?x953 ?x341 ?x324 ?x269 ?x285 (* (- 1) ?x170) ?x132 ?x154 ?x383 ?x540 (* (- 2) (* ?x418 ?x336 ?x336)))))
 (let (($x510 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x139 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x785 (and $x152 (= ?x139 (- 4)) $x510 $x588 (not (= ?x489 0)))))
 (rewrite (= $x785 $x401)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x119 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ n 1)))
 (let ((?x69 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x73 (+ c k)))
 (let ((?x77 (+ (* (- 1) ?x69 ?x69) (* ?x71 ?x69 ?x69) (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74) (* 3 ?x73 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74))))
 (let ((?x79 (- ?x77 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x83 (+ ?x79 (* ?x71 ?x69 ?x69 ?x74 ?x74 ?x74) (* 2 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74 ?x74) (* 3 ?x73 ?x69 ?x69))))
 (let ((?x87 (- ?x83 (* 2 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x89 (- (- ?x87 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74)) (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69))))
 (let ((?x93 (+ ?x89 (* ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74) (* 3 ?x73 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69) (* 2 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x99 (- (- ?x93 (* 2 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x74)) (* 3 ?x73 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x101 (- (- ?x99 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x74)) (* ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x106 (- (+ ?x101 (* ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74 ?x74)) (* ?x71 ?x69 ?x69 ?x74))))
 (let ((?x107 (- ?x106 (* 3 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74))))
 (let ((?x110 (+ ?x107 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69) (* ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x113 (- ?x110 (* ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x113 (* 2 ?x69 ?x69 ?x74)) 0))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x777 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x336 (+ 6 m)))
 (let ((?x418 (+ 1 n)))
 (let ((?x657 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x540 (* (- 1) ?x657)))
 (let ((?x383 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x154 (* ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x225 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x132 (* (- 3) ?x225)))
 (let ((?x285 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x259 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71)))
 (let ((?x269 (* (- 1) ?x259)))
 (let ((?x316 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x324 (* (- 1) ?x316)))
 (let ((?x549 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x73)))
 (let ((?x341 (* (- 3) ?x549)))
 (let ((?x982 (* ?x418 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x953 (* (- 2) ?x982)))
 (let ((?x462 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x182 (* 2 ?x462)))
 (let ((?x866 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x867 (* 3 ?x866)))
 (let ((?x877 (* ?x418 ?x418 ?x336 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73)))
 (let ((?x909 (* ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x901 (* (- 1) ?x909)))
 (let ((?x924 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x1008 (* (- 1) ?x924)))
 (let ((?x357 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x969 (* (- 2) ?x357)))
 (let ((?x766 (* ?x418 ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x615 (* 2 ?x766)))
 (let ((?x499 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71)))
 (let ((?x778 (* ?x418 ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x527 (* (- 1) ?x778)))
 (let ((?x525 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73 ?x73)))
 (let ((?x773 (* 3 ?x525)))
 (let ((?x786 (* ?x418 ?x418 ?x336 ?x336 ?x71 ?x71 ?x71 ?x71 ?x73 ?x73 ?x73)))
 (let ((?x596 (* ?x336 ?x336 ?x71)))
 (let ((?x489 (+ (* (- 1) (* ?x336 ?x336)) ?x596 ?x786 ?x773 ?x527 ?x499 ?x615 (* 3 (* ?x336 ?x336 ?x73)) ?x969 ?x1008 ?x901 ?x877 ?x867 ?x182 ?x953 ?x341 ?x324 ?x269 ?x285 (* (- 1) (* ?x418 ?x336 ?x336 ?x71)) ?x132 ?x154 ?x383 ?x540 (* (- 2) (* ?x418 ?x336 ?x336)))))
 (let (($x588 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x510 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x139 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x152 (= (+ m (* (- 6) n)) 6)))
 (let (($x785 (and $x152 (= ?x139 (- 4)) $x510 $x588 (not (= ?x489 0)))))
 (let ((?x74 (+ n 1)))
 (let ((?x69 (+ m 6)))
 (let ((?x77 (+ (* (- 1) ?x69 ?x69) (* ?x71 ?x69 ?x69) (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74) (* 3 ?x73 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74))))
 (let ((?x79 (- ?x77 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x83 (+ ?x79 (* ?x71 ?x69 ?x69 ?x74 ?x74 ?x74) (* 2 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74 ?x74) (* 3 ?x73 ?x69 ?x69))))
 (let ((?x87 (- ?x83 (* 2 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x89 (- (- ?x87 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x74 ?x74)) (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69))))
 (let ((?x93 (+ ?x89 (* ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74) (* 3 ?x73 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69) (* 2 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x99 (- (- ?x93 (* 2 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x74)) (* 3 ?x73 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x101 (- (- ?x99 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x74)) (* ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x106 (- (+ ?x101 (* ?x71 ?x71 ?x69 ?x69 ?x74 ?x74 ?x74 ?x74)) (* ?x71 ?x69 ?x69 ?x74))))
 (let ((?x107 (- ?x106 (* 3 ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74))))
 (let ((?x110 (+ ?x107 (* ?x73 ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69) (* ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74 ?x74))))
 (let ((?x113 (- ?x110 (* ?x73 ?x73 ?x71 ?x71 ?x71 ?x71 ?x69 ?x69 ?x69 ?x74 ?x74))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x118 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x113 (* 2 ?x69 ?x69 ?x74)) 0))))))
 (rewrite (= $x118 $x785))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x120 (asserted $x119)))
 (let ((@x970 (mp (mp @x120 (quant-intro (proof-bind ?x777) (= $x119 $x580)) $x580) (rewrite (= $x580 $x580)) $x580)))
 (let ((@x452 (mp (mp @x970 (quant-intro (proof-bind ?x381) (= $x580 $x403)) $x403) (quant-intro (proof-bind ?x873) (= $x403 $x870)) $x870)))
 (let ((@x280 (mp (mp~ @x452 (sk (~ $x870 $x488)) $x488) (rewrite (= $x488 $x350)) $x350)))
 (let ((@x278 (and-elim @x280 $x352)))
 (let ((@x450 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x352) $x349)) @x278 $x349)))
 (let (($x131 (>= ?x533 1)))
 (let ((@x141 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x352) $x131)) @x278 $x131)))
 (let (($x1010 (<= ?x764 (- 6))))
 (let ((@x429 (and-elim @x280 $x470)))
 (let ((@x133 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x470) $x1010)) @x429 $x1010)))
 (let (($x592 (>= ?x764 (- 6))))
 (let ((@x768 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x470) $x592)) @x429 $x592)))
 (let (($x363 (<= ?x162 1)))
 (let ((@x609 (and-elim @x280 $x245)))
 (let ((@x529 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x245) $x363)) @x609 $x363)))
 (let (($x669 (>= ?x162 1)))
 (let ((@x999 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x245) $x669)) @x609 $x669)))
 (let (($x515 (<= ?x146 4)))
 (let ((@x235 (and-elim @x280 $x298)))
 (let ((@x864 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x298) $x515)) @x235 $x515)))
 (let (($x590 (>= ?x146 4)))
 (let ((@x183 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x298) $x590)) @x235 $x590)))
 (let (($x163 (not (<= ?x531 108))))
 (let (($x958 (>= ?x531 108)))
 (let ((@x266 ((_ th-lemma arith) (hypothesis (not $x958)) @x999 @x529 @x141 @x450 @x999 @x529 @x183 @x864 @x141 @x450 @x999 @x529 @x141 @x450 @x999 @x529 @x768 @x133 @x768 @x133 @x999 @x529 @x768 @x133 @x999 @x529 @x768 @x133 @x141 @x450 false)))
 (let ((@x978 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x925 $x163 (not $x958))) (and-elim @x280 $x661) (or $x163 (not $x958)))))
 ((_ th-lemma arith) (unit-resolution @x978 (lemma @x266 $x958) $x163) @x999 @x529 @x141 @x450 @x999 @x529 @x183 @x864 @x141 @x450 @x999 @x529 @x141 @x450 @x999 @x529 @x768 @x133 @x768 @x133 @x999 @x529 @x768 @x133 @x999 @x529 @x768 @x133 @x141 @x450 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        16
 :arith-assert-upper        18
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           8
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             487
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             5
 :arith-patches_succ        2
 :arith-pivots              12
 :arith-row-summations      33
 :arith-tableau-max-columns 67
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 8
 :del-clause                16
 :final-checks              9
 :max-memory                3.89
 :memory                    3.30
 :mk-bool-var               28
 :mk-clause                 16
 :num-allocs                2958235
 :num-checks                1
 :propagations              12
 :rlimit-count              35533
 :time                      0.03
 :total-time                0.04)
