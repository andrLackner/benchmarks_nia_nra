unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x959 (* (- 1) k!2)))
 (let ((?x943 (+ (* 3 n!0) ?x959 (* 3 (* n!0 n!0)))))
 (let (($x167 (<= ?x943 (- 1))))
 (let (($x860 (= ?x943 (- 1))))
 (let ((?x599 (+ m!1 k!2)))
 (let ((?x1070 (+ 6 m!1)))
 (let ((?x504 (+ 1 n!0)))
 (let ((?x1052 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599)))
 (let ((?x1025 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599)))
 (let ((?x454 (+ k!2 c!3)))
 (let ((?x946 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x863 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x829 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599)))
 (let ((?x825 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x821 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x703 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x701 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x608 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x607 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x592 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x576 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x569 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x550 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x544 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599)))
 (let ((?x514 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x488 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x445 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x431 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x416 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x378 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599)))
 (let ((?x353 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x351 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454)))
 (let ((?x343 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x330 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x308 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x305 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x295 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x291 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599)))
 (let ((?x279 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x278 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x269 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x242 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x221 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454)))
 (let ((?x213 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x208 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x205 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x204 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454)))
 (let ((?x196 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x195 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x183 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454)))
 (let ((?x178 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599 ?x454 ?x454 ?x454 ?x454)))
 (let ((?x174 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599)))
 (let ((?x1019 (+ ?x174 (* 3 ?x178) (* (- 2) ?x183) (* 3 ?x195) ?x196 (* (- 3) ?x204) (* (- 1) ?x205) (* 2 ?x208) (* (- 1) ?x213) ?x221 ?x242 (* 2 ?x269) (* (- 1) ?x278) (* (- 1) ?x279) (* (- 1) ?x291) (* (- 1) ?x295) (* (- 3) ?x305) ?x308 (* (- 1) ?x330) ?x343 (* (- 3) ?x351) ?x353 (* (- 1) ?x378) (* (- 2) ?x416) (* 3 ?x431) (* (- 3) ?x445) (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x599 ?x599 ?x599 ?x599 ?x599) (* 3 ?x488) (* (- 2) ?x514) (* 2 ?x544) (* 3 ?x550) (* (- 2) ?x569) (* (- 1) ?x576) ?x592 (* (- 1) ?x607) ?x608 (* (- 1) ?x701) (* (- 1) ?x703) (* (- 1) ?x821) (* (- 2) ?x825) ?x829 ?x863 (* (- 1) ?x946) (* 2 ?x1025) ?x1052)))
 (let (($x286 (= ?x1019 0)))
 (let (($x1148 (not $x286)))
 (let ((?x937 (+ (* 2 n!0) ?x959 (* n!0 k!2) (* (- 3) c!3))))
 (let (($x373 (= ?x937 (- 1))))
 (let ((?x1106 (* k!2 k!2)))
 (let ((?x1152 (+ (* 9 n!0) (* (- 9) (* n!0 c!3)) (* (- 5) k!2) ?x1106 (* (- 18) c!3))))
 (let (($x511 (= ?x1152 (- 4))))
 (let ((?x961 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x742 (= ?x961 (- 6))))
 (let (($x282 (and $x742 $x511 $x373 $x860 $x1148)))
 (let ((?x732 (+ c!3 k!2)))
 (let ((?x568 (+ k!2 m!1)))
 (let ((?x422 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x682 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x448 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568)))
 (let ((?x851 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732)))
 (let ((?x605 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568)))
 (let ((?x737 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568)))
 (let ((?x668 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x489 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x455 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732)))
 (let ((?x1178 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568)))
 (let ((?x441 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x691 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x1043 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x157 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x684 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x1154 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x687 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x1145 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x350 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x163 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568)))
 (let ((?x338 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x749 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568)))
 (let ((?x1253 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x1131 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x503 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x312 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x739 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x575 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x747 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x1042 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x1094 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x685 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x379 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x695 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x1124 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x506 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568)))
 (let ((?x799 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x936 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732)))
 (let ((?x586 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x232 (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x758 (* ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x733 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x413 (* ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732)))
 (let ((?x694 (* ?x504 ?x504 ?x504 ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732)))
 (let ((?x534 (+ ?x694 (* (- 1) ?x413) (* (- 2) ?x733) (* (- 1) ?x758) ?x232 (* 3 ?x586) (* (- 1) ?x936) (* 3 ?x799) ?x506 (* (- 3) ?x1124) (* (- 2) ?x695) (* (- 1) ?x379) ?x685 (* 3 ?x1094) (* (- 1) ?x1042) ?x747 (* 2 ?x575) (* 3 ?x739) (* 3 ?x312) (* (- 2) ?x503) (* (- 1) ?x1131) ?x1253 ?x749 (* (- 2) ?x338) (* (- 1) ?x163) (* (- 1) ?x350) ?x1145 (* (- 3) ?x687) ?x1154 (* (- 1) ?x684) ?x157 (* (- 1) ?x1043) (* (- 1) ?x691) (* (- 1) ?x441) (* (- 1) ?x1178) (* (- 3) ?x455) (* 2 ?x489) ?x668 ?x737 (* 2 ?x605) (* (- 3) ?x851) (* ?x504 ?x504 ?x1070 ?x1070 ?x1070 ?x1070 ?x1070 ?x568 ?x568 ?x568 ?x568 ?x568) (* 2 ?x448) (* (- 1) ?x682) (* (- 2) ?x422))))
 (let (($x915 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x919 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1106) (* 9 (* c!3 n!0)))))
 (let (($x349 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x919 4) $x915 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x534 0)))))
 (let (($x777 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x371 (+ 6 m)))
 (let ((?x374 (+ 1 n)))
 (let ((?x1262 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x847 (* (- 2) ?x1262)))
 (let ((?x1240 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1248 (* (- 1) ?x1240)))
 (let ((?x1226 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1217 (* 2 ?x1226)))
 (let ((?x1218 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1202 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1071 (* (- 3) ?x1202)))
 (let ((?x1120 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* 2 ?x1120)))
 (let ((?x1075 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1056 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1051 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x905 (* 2 ?x1051)))
 (let ((?x1029 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1039 (* (- 3) ?x1029)))
 (let ((?x986 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1144 (* (- 1) ?x986)))
 (let ((?x971 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x705 (* (- 1) ?x971)))
 (let ((?x932 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x924 (* (- 1) ?x932)))
 (let ((?x911 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x510 (* (- 1) ?x911)))
 (let ((?x908 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x894 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x972 (* (- 1) ?x894)))
 (let ((?x867 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x831 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1091 (* (- 3) ?x831)))
 (let ((?x820 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x785 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x889 (* (- 1) ?x785)))
 (let ((?x731 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x370 (* (- 1) ?x731)))
 (let ((?x723 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x752 (* (- 2) ?x723)))
 (let ((?x711 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x704 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x697 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x585 (* (- 1) ?x697)))
 (let ((?x661 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x526 (* (- 2) ?x661)))
 (let ((?x650 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x645 (* 3 ?x650)))
 (let ((?x642 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x637 (* 3 ?x642)))
 (let ((?x634 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x629 (* 2 ?x634)))
 (let ((?x621 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x579 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x410 (* (- 1) ?x579)))
 (let ((?x551 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x546 (* 3 ?x551)))
 (let ((?x520 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x492 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x335 (* (- 1) ?x492)))
 (let ((?x473 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x449 (* (- 2) ?x473)))
 (let ((?x467 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1063 (* (- 3) ?x467)))
 (let ((?x466 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x405 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x868 (* 3 ?x405)))
 (let ((?x386 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x394 (* (- 1) ?x386)))
 (let ((?x355 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x356 (* 3 ?x355)))
 (let ((?x319 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x292 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x303 (* (- 1) ?x292)))
 (let ((?x258 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x277 (* (- 2) ?x258)))
 (let ((?x201 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x216 (* (- 1) ?x201)))
 (let ((?x185 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1149 (+ ?x185 ?x216 ?x277 ?x303 ?x319 ?x356 ?x394 ?x868 ?x466 ?x1063 ?x449 ?x335 ?x520 ?x546 ?x410 ?x621 ?x629 ?x637 ?x645 ?x526 ?x585 ?x704 ?x711 ?x752 ?x370 ?x889 ?x820 ?x1091 ?x867 ?x972 ?x908 ?x510 ?x924 ?x705 ?x1144 ?x1039 ?x905 ?x1056 ?x1075 ?x1117 ?x1071 ?x1218 ?x1217 ?x1248 ?x847)))
 (let (($x361 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x323 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x274 (* (- 1) ?x49)))
 (let ((?x273 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x271 (= (+ ?x40 ?x44 ?x273 ?x274 (* 9 (* c n))) 4)))
 (let (($x187 (= (+ m (* (- 6) n)) 6)))
 (and $x187 $x271 $x323 $x361 (not (= ?x1149 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x764 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x371 (+ 6 m)))
 (let ((?x374 (+ 1 n)))
 (let ((?x1202 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1218 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1226 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x867 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x405 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x386 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1262 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1240 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x785 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x661 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x650 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x642 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x634 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x621 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x704 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x711 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x932 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x894 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x520 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x986 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1075 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x831 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1029 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1056 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x908 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1051 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1120 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x971 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x820 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x911 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x723 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x697 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x579 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x473 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x185 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x258 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x201 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x319 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x292 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x355 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x492 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x467 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x466 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1100 (+ ?x731 (* (- 1) ?x466) (* 3 ?x467) ?x492 (* (- 3) ?x355) ?x292 (* (- 1) ?x319) ?x201 (* 2 ?x258) (* (- 1) ?x185) (* 2 ?x473) ?x579 ?x697 (* 2 ?x723) ?x911 (* (- 1) ?x820) ?x971 (* (- 3) ?x551) (* (- 2) ?x1120) (* (- 2) ?x1051) (* (- 1) ?x908) (* (- 1) ?x1056) (* 3 ?x1029) (* 3 ?x831) (* (- 1) ?x1075) ?x986 (* (- 1) ?x520) ?x894 ?x932 (* (- 1) ?x711) (* (- 1) ?x704) (* (- 1) ?x621) (* (- 2) ?x634) (* (- 3) ?x642) (* (- 3) ?x650) (* 2 ?x661) ?x785 ?x1240 (* 2 ?x1262) ?x386 (* (- 3) ?x405) (* (- 1) ?x867) (* (- 2) ?x1226) (* (- 1) ?x1218) (* 3 ?x1202))))
 (let (($x1122 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1231 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x274 (* (- 1) ?x49)))
 (let ((?x273 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x187 (= (+ m (* (- 6) n)) 6)))
 (and $x187 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x273 ?x274) 4) $x1231 $x1122 (not (= ?x1100 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x606 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x371 (+ 6 m)))
 (let ((?x374 (+ 1 n)))
 (let ((?x1262 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x847 (* (- 2) ?x1262)))
 (let ((?x1240 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1248 (* (- 1) ?x1240)))
 (let ((?x1226 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1217 (* 2 ?x1226)))
 (let ((?x1218 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1202 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1071 (* (- 3) ?x1202)))
 (let ((?x1120 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* 2 ?x1120)))
 (let ((?x1075 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1056 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1051 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x905 (* 2 ?x1051)))
 (let ((?x1029 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1039 (* (- 3) ?x1029)))
 (let ((?x986 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1144 (* (- 1) ?x986)))
 (let ((?x971 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x705 (* (- 1) ?x971)))
 (let ((?x932 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x924 (* (- 1) ?x932)))
 (let ((?x911 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x510 (* (- 1) ?x911)))
 (let ((?x908 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x894 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x972 (* (- 1) ?x894)))
 (let ((?x867 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x831 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1091 (* (- 3) ?x831)))
 (let ((?x820 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x785 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x889 (* (- 1) ?x785)))
 (let ((?x731 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x370 (* (- 1) ?x731)))
 (let ((?x723 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x752 (* (- 2) ?x723)))
 (let ((?x711 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x704 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x697 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x585 (* (- 1) ?x697)))
 (let ((?x661 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x526 (* (- 2) ?x661)))
 (let ((?x650 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x645 (* 3 ?x650)))
 (let ((?x642 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x637 (* 3 ?x642)))
 (let ((?x634 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x629 (* 2 ?x634)))
 (let ((?x621 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x579 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x410 (* (- 1) ?x579)))
 (let ((?x551 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x546 (* 3 ?x551)))
 (let ((?x520 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x492 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x335 (* (- 1) ?x492)))
 (let ((?x473 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x449 (* (- 2) ?x473)))
 (let ((?x467 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1063 (* (- 3) ?x467)))
 (let ((?x466 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x405 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x868 (* 3 ?x405)))
 (let ((?x386 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x394 (* (- 1) ?x386)))
 (let ((?x355 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x356 (* 3 ?x355)))
 (let ((?x319 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x292 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x303 (* (- 1) ?x292)))
 (let ((?x258 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x277 (* (- 2) ?x258)))
 (let ((?x201 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x216 (* (- 1) ?x201)))
 (let ((?x185 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1149 (+ ?x185 ?x216 ?x277 ?x303 ?x319 ?x356 ?x394 ?x868 ?x466 ?x1063 ?x449 ?x335 ?x520 ?x546 ?x410 ?x621 ?x629 ?x637 ?x645 ?x526 ?x585 ?x704 ?x711 ?x752 ?x370 ?x889 ?x820 ?x1091 ?x867 ?x972 ?x908 ?x510 ?x924 ?x705 ?x1144 ?x1039 ?x905 ?x1056 ?x1075 ?x1117 ?x1071 ?x1218 ?x1217 ?x1248 ?x847)))
 (let (($x361 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x323 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x274 (* (- 1) ?x49)))
 (let ((?x273 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x271 (= (+ ?x40 ?x44 ?x273 ?x274 (* 9 (* c n))) 4)))
 (let (($x187 (= (+ m (* (- 6) n)) 6)))
 (let (($x941 (and $x187 $x271 $x323 $x361 (not (= ?x1149 0)))))
 (let ((?x1100 (+ ?x731 (* (- 1) ?x466) (* 3 ?x467) ?x492 (* (- 3) ?x355) ?x292 (* (- 1) ?x319) ?x201 (* 2 ?x258) (* (- 1) ?x185) (* 2 ?x473) ?x579 ?x697 (* 2 ?x723) ?x911 (* (- 1) ?x820) ?x971 (* (- 3) ?x551) (* (- 2) ?x1120) (* (- 2) ?x1051) (* (- 1) ?x908) (* (- 1) ?x1056) (* 3 ?x1029) (* 3 ?x831) (* (- 1) ?x1075) ?x986 (* (- 1) ?x520) ?x894 ?x932 (* (- 1) ?x711) (* (- 1) ?x704) (* (- 1) ?x621) (* (- 2) ?x634) (* (- 3) ?x642) (* (- 3) ?x650) (* 2 ?x661) ?x785 ?x1240 (* 2 ?x1262) ?x386 (* (- 3) ?x405) (* (- 1) ?x867) (* (- 2) ?x1226) (* (- 1) ?x1218) (* 3 ?x1202))))
 (let (($x1122 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1231 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x543 (and $x187 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x273 ?x274) 4) $x1231 $x1122 (not (= ?x1100 0)))))
 (rewrite (= $x543 $x941)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x210 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x75 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x371 (+ 6 m)))
 (let ((?x374 (+ 1 n)))
 (let ((?x1202 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1071 (* (- 3) ?x1202)))
 (let ((?x1218 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1226 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1217 (* 2 ?x1226)))
 (let ((?x867 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x405 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x868 (* 3 ?x405)))
 (let ((?x386 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x394 (* (- 1) ?x386)))
 (let ((?x1262 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x847 (* (- 2) ?x1262)))
 (let ((?x1240 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1248 (* (- 1) ?x1240)))
 (let ((?x785 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x889 (* (- 1) ?x785)))
 (let ((?x661 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x526 (* (- 2) ?x661)))
 (let ((?x650 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x645 (* 3 ?x650)))
 (let ((?x642 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x637 (* 3 ?x642)))
 (let ((?x634 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x629 (* 2 ?x634)))
 (let ((?x621 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x704 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x711 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x932 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x924 (* (- 1) ?x932)))
 (let ((?x894 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x972 (* (- 1) ?x894)))
 (let ((?x520 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x986 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1144 (* (- 1) ?x986)))
 (let ((?x1075 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x831 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1091 (* (- 3) ?x831)))
 (let ((?x1029 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1039 (* (- 3) ?x1029)))
 (let ((?x1056 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x908 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1051 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x905 (* 2 ?x1051)))
 (let ((?x1120 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* 2 ?x1120)))
 (let ((?x551 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x546 (* 3 ?x551)))
 (let ((?x971 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x705 (* (- 1) ?x971)))
 (let ((?x820 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x911 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x510 (* (- 1) ?x911)))
 (let ((?x723 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x752 (* (- 2) ?x723)))
 (let ((?x697 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x585 (* (- 1) ?x697)))
 (let ((?x579 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x410 (* (- 1) ?x579)))
 (let ((?x473 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x449 (* (- 2) ?x473)))
 (let ((?x185 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x258 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x277 (* (- 2) ?x258)))
 (let ((?x201 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x216 (* (- 1) ?x201)))
 (let ((?x319 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x292 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x303 (* (- 1) ?x292)))
 (let ((?x355 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x356 (* 3 ?x355)))
 (let ((?x492 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x335 (* (- 1) ?x492)))
 (let ((?x467 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1063 (* (- 3) ?x467)))
 (let ((?x466 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x370 (* (- 1) ?x731)))
 (let ((?x1015 (+ ?x370 ?x466 ?x1063 ?x335 ?x356 ?x303 ?x319 ?x216 ?x277 ?x185 ?x449 ?x410 ?x585 ?x752 ?x510 ?x820 ?x705 ?x546 ?x1117 ?x905 ?x908 ?x1056 ?x1039 ?x1091 ?x1075 ?x1144 ?x520 ?x972 ?x924 ?x711 ?x704 ?x621 ?x629 ?x637 ?x645 ?x526 ?x889 ?x1248 ?x847 ?x394 ?x868 ?x867 ?x1217 ?x1218 ?x1071)))
 (let (($x1122 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x376 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1110 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x187 (= (+ m (* (- 6) n)) 6)))
 (and $x187 (= ?x1110 (- 4)) $x376 $x1122 (not (= ?x1015 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x921 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x371 (+ 6 m)))
 (let ((?x374 (+ 1 n)))
 (let ((?x1202 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1218 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1226 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x867 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x405 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x386 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1262 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1240 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x785 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x661 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x650 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x642 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x634 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x621 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x704 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x711 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x932 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x894 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x520 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x986 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1075 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x831 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1029 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1056 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x908 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1051 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1120 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x971 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x820 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x911 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x723 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x697 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x579 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x473 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x185 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x258 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x201 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x319 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x292 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x355 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x492 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x467 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x466 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1100 (+ ?x731 (* (- 1) ?x466) (* 3 ?x467) ?x492 (* (- 3) ?x355) ?x292 (* (- 1) ?x319) ?x201 (* 2 ?x258) (* (- 1) ?x185) (* 2 ?x473) ?x579 ?x697 (* 2 ?x723) ?x911 (* (- 1) ?x820) ?x971 (* (- 3) ?x551) (* (- 2) ?x1120) (* (- 2) ?x1051) (* (- 1) ?x908) (* (- 1) ?x1056) (* 3 ?x1029) (* 3 ?x831) (* (- 1) ?x1075) ?x986 (* (- 1) ?x520) ?x894 ?x932 (* (- 1) ?x711) (* (- 1) ?x704) (* (- 1) ?x621) (* (- 2) ?x634) (* (- 3) ?x642) (* (- 3) ?x650) (* 2 ?x661) ?x785 ?x1240 (* 2 ?x1262) ?x386 (* (- 3) ?x405) (* (- 1) ?x867) (* (- 2) ?x1226) (* (- 1) ?x1218) (* 3 ?x1202))))
 (let (($x1122 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1231 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x274 (* (- 1) ?x49)))
 (let ((?x273 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x187 (= (+ m (* (- 6) n)) 6)))
 (let (($x543 (and $x187 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x273 ?x274) 4) $x1231 $x1122 (not (= ?x1100 0)))))
 (let ((?x1071 (* (- 3) ?x1202)))
 (let ((?x1217 (* 2 ?x1226)))
 (let ((?x868 (* 3 ?x405)))
 (let ((?x394 (* (- 1) ?x386)))
 (let ((?x847 (* (- 2) ?x1262)))
 (let ((?x1248 (* (- 1) ?x1240)))
 (let ((?x889 (* (- 1) ?x785)))
 (let ((?x526 (* (- 2) ?x661)))
 (let ((?x645 (* 3 ?x650)))
 (let ((?x637 (* 3 ?x642)))
 (let ((?x629 (* 2 ?x634)))
 (let ((?x924 (* (- 1) ?x932)))
 (let ((?x972 (* (- 1) ?x894)))
 (let ((?x1144 (* (- 1) ?x986)))
 (let ((?x1091 (* (- 3) ?x831)))
 (let ((?x1039 (* (- 3) ?x1029)))
 (let ((?x905 (* 2 ?x1051)))
 (let ((?x1117 (* 2 ?x1120)))
 (let ((?x546 (* 3 ?x551)))
 (let ((?x705 (* (- 1) ?x971)))
 (let ((?x510 (* (- 1) ?x911)))
 (let ((?x752 (* (- 2) ?x723)))
 (let ((?x585 (* (- 1) ?x697)))
 (let ((?x410 (* (- 1) ?x579)))
 (let ((?x449 (* (- 2) ?x473)))
 (let ((?x277 (* (- 2) ?x258)))
 (let ((?x216 (* (- 1) ?x201)))
 (let ((?x303 (* (- 1) ?x292)))
 (let ((?x356 (* 3 ?x355)))
 (let ((?x335 (* (- 1) ?x492)))
 (let ((?x1063 (* (- 3) ?x467)))
 (let ((?x370 (* (- 1) ?x731)))
 (let ((?x1015 (+ ?x370 ?x466 ?x1063 ?x335 ?x356 ?x303 ?x319 ?x216 ?x277 ?x185 ?x449 ?x410 ?x585 ?x752 ?x510 ?x820 ?x705 ?x546 ?x1117 ?x905 ?x908 ?x1056 ?x1039 ?x1091 ?x1075 ?x1144 ?x520 ?x972 ?x924 ?x711 ?x704 ?x621 ?x629 ?x637 ?x645 ?x526 ?x889 ?x1248 ?x847 ?x394 ?x868 ?x867 ?x1217 ?x1218 ?x1071)))
 (let (($x376 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1110 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1125 (and $x187 (= ?x1110 (- 4)) $x376 $x1122 (not (= ?x1015 0)))))
 (rewrite (= $x1125 $x543)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x154 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x75 (+ c k)))
 (let ((?x148 (* 3 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x145 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x144 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x143 (* 3 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x137 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x136 (* 2 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x135 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x134 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x133 (* 2 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x131 (* 3 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x130 (* 3 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x129 (* 2 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x128 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x126 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x123 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x122 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x120 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x118 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x116 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x113 (* 3 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 3 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x110 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x108 (* 2 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x107 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x106 (* 3 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x104 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x102 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x96 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 2 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x94 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x93 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x92 (* 2 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x90 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x87 (* 2 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x86 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x84 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x82 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x80 (* 3 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x77 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x76 (* 3 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x73 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x72 (* (- 1) ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x88 (- (+ (- (+ (- (- (+ ?x72 ?x73) ?x76) ?x77) ?x80) ?x82) ?x84) ?x86)))
 (let ((?x101 (- (- (- (- (- (+ (- ?x88 ?x87) ?x90) ?x92) ?x93) ?x94) ?x95) ?x96)))
 (let ((?x115 (- (- (+ (- (+ ?x101 ?x102) ?x104) ?x106 ?x107 ?x108 ?x109 ?x110) ?x112) ?x113)))
 (let ((?x132 (+ (- (- (+ (- (+ ?x115 ?x116) ?x118) ?x120) ?x122) ?x123) ?x126 ?x127 ?x128 ?x129 ?x130 ?x131)))
 (let ((?x147 (+ (- (- (- (- (- ?x132 ?x133) ?x134) ?x135) ?x136) ?x137) ?x143 ?x144 ?x145 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x147 ?x148) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x471 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x75 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x371 (+ 6 m)))
 (let ((?x374 (+ 1 n)))
 (let ((?x1202 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1071 (* (- 3) ?x1202)))
 (let ((?x1218 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1226 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1217 (* 2 ?x1226)))
 (let ((?x867 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x405 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x868 (* 3 ?x405)))
 (let ((?x386 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x394 (* (- 1) ?x386)))
 (let ((?x1262 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x847 (* (- 2) ?x1262)))
 (let ((?x1240 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x1248 (* (- 1) ?x1240)))
 (let ((?x785 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x889 (* (- 1) ?x785)))
 (let ((?x661 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x526 (* (- 2) ?x661)))
 (let ((?x650 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x645 (* 3 ?x650)))
 (let ((?x642 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x637 (* 3 ?x642)))
 (let ((?x634 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x629 (* 2 ?x634)))
 (let ((?x621 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x704 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x711 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x932 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x924 (* (- 1) ?x932)))
 (let ((?x894 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x972 (* (- 1) ?x894)))
 (let ((?x520 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x986 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1144 (* (- 1) ?x986)))
 (let ((?x1075 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x831 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1091 (* (- 3) ?x831)))
 (let ((?x1029 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75)))
 (let ((?x1039 (* (- 3) ?x1029)))
 (let ((?x1056 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x908 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1051 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x905 (* 2 ?x1051)))
 (let ((?x1120 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* 2 ?x1120)))
 (let ((?x551 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x546 (* 3 ?x551)))
 (let ((?x971 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x705 (* (- 1) ?x971)))
 (let ((?x820 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x911 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x510 (* (- 1) ?x911)))
 (let ((?x723 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x752 (* (- 2) ?x723)))
 (let ((?x697 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75)))
 (let ((?x585 (* (- 1) ?x697)))
 (let ((?x579 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x410 (* (- 1) ?x579)))
 (let ((?x473 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x449 (* (- 2) ?x473)))
 (let ((?x185 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x258 (* ?x374 ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x277 (* (- 2) ?x258)))
 (let ((?x201 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x216 (* (- 1) ?x201)))
 (let ((?x319 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x292 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x303 (* (- 1) ?x292)))
 (let ((?x355 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75)))
 (let ((?x356 (* 3 ?x355)))
 (let ((?x492 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x335 (* (- 1) ?x492)))
 (let ((?x467 (* ?x374 ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75)))
 (let ((?x1063 (* (- 3) ?x467)))
 (let ((?x466 (* ?x374 ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x374 ?x374 ?x371 ?x371 ?x371 ?x371 ?x371 ?x371 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x370 (* (- 1) ?x731)))
 (let ((?x1015 (+ ?x370 ?x466 ?x1063 ?x335 ?x356 ?x303 ?x319 ?x216 ?x277 ?x185 ?x449 ?x410 ?x585 ?x752 ?x510 ?x820 ?x705 ?x546 ?x1117 ?x905 ?x908 ?x1056 ?x1039 ?x1091 ?x1075 ?x1144 ?x520 ?x972 ?x924 ?x711 ?x704 ?x621 ?x629 ?x637 ?x645 ?x526 ?x889 ?x1248 ?x847 ?x394 ?x868 ?x867 ?x1217 ?x1218 ?x1071)))
 (let (($x1122 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x376 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1110 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x187 (= (+ m (* (- 6) n)) 6)))
 (let (($x1125 (and $x187 (= ?x1110 (- 4)) $x376 $x1122 (not (= ?x1015 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x148 (* 3 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x145 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x144 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x143 (* 3 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x137 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x136 (* 2 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x135 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x134 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x133 (* 2 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x131 (* 3 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x130 (* 3 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x129 (* 2 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x128 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x126 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x123 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x122 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x120 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x118 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x116 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x113 (* 3 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x112 (* 3 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x110 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x108 (* 2 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x107 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x106 (* 3 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x104 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x102 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x96 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x95 (* 2 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x94 (* ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x93 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x92 (* 2 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x90 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x87 (* 2 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x86 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x84 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x82 (* ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x80 (* 3 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x77 (* ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x76 (* 3 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x73 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x72 (* (- 1) ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x88 (- (+ (- (+ (- (- (+ ?x72 ?x73) ?x76) ?x77) ?x80) ?x82) ?x84) ?x86)))
 (let ((?x101 (- (- (- (- (- (+ (- ?x88 ?x87) ?x90) ?x92) ?x93) ?x94) ?x95) ?x96)))
 (let ((?x115 (- (- (+ (- (+ ?x101 ?x102) ?x104) ?x106 ?x107 ?x108 ?x109 ?x110) ?x112) ?x113)))
 (let ((?x132 (+ (- (- (+ (- (+ ?x115 ?x116) ?x118) ?x120) ?x122) ?x123) ?x126 ?x127 ?x128 ?x129 ?x130 ?x131)))
 (let ((?x147 (+ (- (- (- (- (- ?x132 ?x133) ?x134) ?x135) ?x136) ?x137) ?x143 ?x144 ?x145 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x153 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x147 ?x148) 0))))))
 (rewrite (= $x153 $x1125)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x155 (asserted $x154)))
 (let ((@x1028 (mp (mp @x155 (quant-intro (proof-bind ?x471) (= $x154 $x210)) $x210) (rewrite (= $x210 $x210)) $x210)))
 (let ((@x197 (mp (mp @x1028 (quant-intro (proof-bind ?x921) (= $x210 $x764)) $x764) (quant-intro (proof-bind ?x606) (= $x764 $x777)) $x777)))
 (let ((@x572 (mp (mp~ @x197 (sk (~ $x777 $x349)) $x349) (rewrite (= $x349 $x282)) $x282)))
 (let ((@x884 (and-elim @x572 $x860)))
 (let ((@x750 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x860) $x167)) @x884 $x167)))
 (let (($x1087 (>= ?x943 (- 1))))
 (let ((@x218 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x860) $x1087)) @x884 $x1087)))
 (let (($x683 (<= ?x1152 (- 4))))
 (let ((@x535 (and-elim @x572 $x511)))
 (let ((@x164 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x511) $x683)) @x535 $x683)))
 (let (($x609 (>= ?x1152 (- 4))))
 (let ((@x826 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x511) $x609)) @x535 $x609)))
 (let (($x688 (<= ?x937 (- 1))))
 (let ((@x524 (and-elim @x572 $x373)))
 (let ((@x677 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x373) $x688)) @x524 $x688)))
 (let (($x475 (>= ?x937 (- 1))))
 (let ((@x267 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x373) $x475)) @x524 $x475)))
 (let (($x462 (<= ?x961 (- 6))))
 (let ((@x288 (and-elim @x572 $x742)))
 (let ((@x290 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x462)) @x288 $x462)))
 (let (($x1177 (>= ?x961 (- 6))))
 (let ((@x602 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x742) $x1177)) @x288 $x1177)))
 (let (($x507 (not (<= ?x1019 0))))
 (let (($x679 (>= ?x1019 0)))
 (let ((@x735 ((_ th-lemma arith) (hypothesis (not $x679)) @x218 @x750 @x602 @x290 @x602 @x290 @x218 @x750 @x267 @x677 @x218 @x750 @x826 @x164 @x218 @x750 @x218 @x750 false)))
 (let ((@x352 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x286 $x507 (not $x679))) (and-elim @x572 $x1148) (or $x507 (not $x679)))))
 ((_ th-lemma arith) (unit-resolution @x352 (lemma @x735 $x679) $x507) @x218 @x750 @x602 @x290 @x602 @x290 @x218 @x750 @x267 @x677 @x218 @x750 @x826 @x164 @x218 @x750 @x218 @x750 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        17
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           2
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             549
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             1
 :arith-pivots              7
 :arith-row-summations      6
 :arith-tableau-max-columns 75
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.60
 :memory                    3.52
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                63229268
 :num-checks                1
 :propagations              11
 :rlimit-count              142939
 :time                      0.17
 :total-time                0.19)
