unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x3501 (* (- 1) s!1)))
 (let ((?x365 (* r00 r00)))
 (let ((?x4283 (* (- 3) ?x365)))
 (let ((?x10990 (+ s00 ?x4283 ?x3501 (* 3 (* r!2 r!2)))))
 (let (($x4899 (<= ?x10990 0)))
 (let (($x10992 (= ?x10990 0)))
 (let ((?x11366 (* s!1 s!1 s!1)))
 (let ((?x3631 (* (- 45) ?x11366)))
 (let ((?x3737 (+ 3 (* 6 r!2) s!1)))
 (let ((?x3524 (+ ?x3501 x!0)))
 (let ((?x1044 (+ 1 r!2)))
 (let ((?x10942 (* (- 36) (* r00 ?x1044 ?x1044 ?x3524 ?x3524 ?x3524 ?x3737))))
 (let ((?x6343 (* 45 (* x!0 x!0 x!0))))
 (let ((?x5339 (* (- 6) (* s!1 x!0 x!0 x!0 x!0))))
 (let ((?x4145 (* 162 (* r!2 x!0 x!0 x!0))))
 (let ((?x6264 (* 333 (* s!1 s!1 s!1 x!0))))
 (let ((?x6261 (* 432 (* r!2 r!2 s!1 s!1 x!0))))
 (let ((?x8657 (* 384 (* r!2 s!1 x!0 x!0 x!0))))
 (let ((?x6220 (* (- 6) (* s!1 s!1 s!1 s!1 s!1))))
 (let ((?x6282 (* (- 72) (* x!0 x!0 x!0 x!0))))
 (let ((?x6280 (* (- 477) (* s!1 s!1 x!0 x!0))))
 (let ((?x6154 (* 486 (* r!2 s!1 s!1 x!0))))
 (let ((?x6090 (* (- 144) (* r!2 r!2 s!1 s!1 s!1))))
 (let ((?x6284 (* (- 12) (* s00 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x6262 (* (- 87) (* s!1 s!1 s!1 s!1))))
 (let ((?x6062 (* 303 (* s!1 x!0 x!0 x!0))))
 (let ((?x6072 (* (- 135) (* s!1 x!0 x!0))))
 (let ((?x4052 (* (- 432) (* r!2 r!2 s!1 x!0 x!0))))
 (let ((?x6225 (* 24 (* s!1 s!1 s!1 s!1 x!0))))
 (let ((?x6164 (* (- 486) (* r!2 s!1 x!0 x!0))))
 (let ((?x6150 (* (- 162) (* r!2 s!1 s!1 s!1))))
 (let ((?x6051 (* 135 (* s!1 s!1 x!0))))
 (let ((?x4051 (* (- 90) (* r!2 x!0 x!0 x!0 x!0))))
 (let ((?x3739 (* (- 8) (* ?x1044 ?x3524 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x3305 (* (- 2) (* ?x1044 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737 ?x3737))))
 (let ((?x5518 (* 24 (* s!1 s!1 x!0 x!0 x!0))))
 (let ((?x6190 (* (- 9) (* ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x2404 (* (- 4) (* r00 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737 ?x3737))))
 (let ((?x2108 (* 36 (* r00 r00 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x1775 (* (- 2) (* s00 ?x1044 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x1595 (* 144 (* r!2 r!2 x!0 x!0 x!0))))
 (let ((?x1450 (* (- 114) (* r!2 s!1 s!1 s!1 s!1))))
 (let ((?x1457 (* (- 36) (* s!1 s!1 s!1 x!0 x!0))))
 (let ((?x1455 (* (- 612) (* r!2 s!1 s!1 x!0 x!0))))
 (let ((?x1452 (* 432 (* r!2 s!1 s!1 s!1 x!0))))
 (let ((?x1230 (* (- 3) (* ?x3524 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x1224 (* 6 (* x00 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x1196 (* (- 3) (* ?x1044 ?x3524 ?x3524 ?x3737 ?x3737 ?x3737))))
 (let ((?x1187 (* 24 (* r00 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x920 (* 2 (* r00 s00 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x1080 (* 24 (* ?x1044 ?x1044 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x953 (* (- 4) (* r00 ?x3524 ?x3524 ?x3524 ?x3737 ?x3737))))
 (let ((?x9330 (* (- 54) (* ?x1044 ?x1044 ?x3524 ?x3524 ?x3524 ?x3737))))
 (let ((?x5822 (+ (* 84 (* s00 r00 r!2 s!1 s!1 x!0)) ?x9330 (* 2 (* s00 s00 r00 s!1 s!1 x!0)) (* 90 (* x00 r!2 x!0 x!0 x!0)) (* 2 (* s00 s00 r00 r!2 s!1 s!1 s!1)) (* 108 (* s00 x00 r!2 s!1 x!0)) (* (- 72) (* s00 r00 x!0 x!0)) (* 12 (* s00 s00 r00 r!2 r!2 s!1 s!1)) (* (- 1296) (* x00 r!2 s!1 x!0)) (* 72 (* x00 x!0 x!0 x!0)) (* 324 (* x00 r!2 r!2 r!2 x!0 x!0)) (* (- 36) (* s00 r00 r00 x!0 x!0 x!0)) (* 6 (* x00 s!1 x!0 x!0 x!0)) (* (- 36) (* s00 s00 r00 r!2 s!1 x!0)) ?x953 ?x1080 ?x920 ?x1187 ?x1196 ?x1224 ?x1230 (* (- 180) (* r00 x00 s!1 x!0 x!0)) (* 6 (* s00 s00 r00 s!1 s!1)) (* 72 (* s00 x00 r!2 r!2 s!1 x!0)) ?x1452 ?x1455 ?x1457 ?x1450 ?x1595 (* (- 38) (* s00 s00 s!1 x!0 x!0)) ?x1775 (* (- 144) (* s00 r00 r!2 r!2 x!0 x!0)) (* 30 (* s00 r00 s!1 x!0 x!0)) ?x2108 (* (- 144) (* r00 x00 r!2 s!1 s!1 x!0)) (* (- 300) (* s00 s00 r!2 r!2 s!1 x!0)) ?x2404 (* 36 (* s00 x00 s!1 x!0)) (* (- 4) (* s00 s00 r00 r!2 s!1 s!1 x!0)) (* 432 (* s00 r00 r00 r!2 r!2 s!1 x!0)) (* 14 (* s00 s!1 s!1 s!1 s!1)) (* (- 18) (* s00 x00 s!1 s!1)) (* (- 18) (* s00 r00 x!0 x!0 x!0)) (* (- 216) (* s00 r00 r00 r!2 r!2 x!0 x!0)) (* (- 36) (* s00 r00 r00 r!2 s!1 x!0 x!0)) (* (- 18) (* s00 x00 x!0 x!0)) (* (- 36) (* s00 r00 r00 r!2 s!1 s!1 s!1)) (* 648 (* s00 r00 r00 r!2 s!1 x!0)) (* (- 540) (* r00 x00 s!1 x!0)) (* (- 108) (* s00 r00 r00 x!0 x!0)) (* 72 (* s00 r00 r00 r!2 s!1 s!1 x!0)) (* (- 324) (* s00 r00 r00 r!2 x!0 x!0)) (* (- 6) (* s00 r00 s!1 s!1 s!1)) (* (- 48) (* s00 s!1 s!1 s!1 x!0)) (* (- 1836) (* r00 x00 r!2 s!1 x!0)) ?x6190 (* 72 (* s00 r00 r00 s!1 x!0 x!0)) (* 24 (* s00 r!2 r!2 x!0 x!0 x!0)) (* 11 (* s00 s00 r!2 s!1 x!0 x!0)) (* 270 (* r00 s!1 s!1 s!1 x!0)) (* 150 (* s00 s00 r!2 r!2 s!1 s!1)) (* (- 216) (* s00 r00 r!2 x!0 x!0)) (* 90 (* r00 x00 r!2 s!1 s!1 s!1)) ?x5518 ?x3305 (* (- 324) (* r00 r!2 r!2 x!0 x!0 x!0)) (* (- 72) (* r00 r00 x00 r!2 s!1 s!1 x!0)) (* (- 162) (* x00 r!2 s!1 x!0 x!0)) ?x3739 (* 162 (* x00 x!0 x!0)) (* 54 (* x00 r!2 r!2 s!1 x!0 x!0)) (* 90 (* r00 x00 x!0 x!0 x!0)) ?x4051 (* 18 (* x00 s!1 s!1 s!1 x!0)) (* (- 36) (* s00 r00 r00 s!1 s!1 x!0)) (* 432 (* s00 r00 r!2 s!1 x!0)) (* (- 6) (* x00 s!1 s!1 s!1 s!1)) (* (- 6) (* s00 x00 s!1 s!1 x!0)) (* (- 36) (* s00 r00 r!2 s!1 s!1 s!1)) (* (- 6) (* s00 x00 x!0 x!0 x!0)) (* 162 (* x00 s!1 s!1)) (* (- 324) (* x00 s!1 x!0)) (* (- 36) (* r00 r00 s!1 s!1 s!1 s!1)) (* (- 450) (* r00 s!1 s!1 x!0 x!0)) (* (- 432) (* r00 x00 r!2 r!2 r!2 s!1 x!0)) (* 216 (* r00 x00 r!2 r!2 r!2 x!0 x!0)) (* (- 18) (* r00 r!2 s!1 s!1 s!1 x!0)) (* (- 54) (* r00 r!2 s!1 s!1 x!0 x!0)) (* 6 (* s00 x!0 x!0 x!0 x!0)) (* 6 (* s00 s00 r00 x!0 x!0)) (* (- 32) (* s00 s!1 x!0 x!0 x!0)) (* 864 (* r00 x00 r!2 r!2 s!1 s!1)) (* (- 972) (* r00 r!2 r!2 s!1 s!1 x!0)) (* (- 6) (* s00 x00 r!2 s!1 s!1 s!1)) (* 810 (* x00 r!2 r!2 s!1 s!1)) ?x6051 ?x6150 ?x6164 ?x6225 (* (- 8) (* s00 s00 r!2 r!2 s!1 s!1 x!0)) (* 4 (* s00 s00 r!2 r!2 s!1 x!0 x!0)) (* 2 (* s00 s00 r00 x!0 x!0 x!0)) (* 36 (* r00 r00 x00 x!0 x!0 x!0)) (* 24 (* s00 s00 r!2 r!2 r!2 s!1 s!1)) (* (- 48) (* s00 s00 r!2 r!2 r!2 s!1 x!0)) ?x4052 ?x6072 ?x6062 (* 4 (* s00 s00 r!2 r!2 s!1 s!1 s!1)) ?x6262 ?x6284 ?x6090 ?x6154 (* 270 (* r00 x00 x!0 x!0)) ?x6280 ?x6282 ?x6220 (* (- 18) (* x00 s!1 s!1 x!0 x!0)) ?x8657 ?x6261 ?x6264 ?x4145 ?x5339 ?x6343 (* 6 (* s00 r00 s!1 s!1 s!1 x!0)) (* (- 12) (* s00 r!2 s!1 s!1 x!0 x!0)) (* (- 1620) (* x00 r!2 r!2 s!1 x!0)) (* (- 18) (* x00 s!1 s!1 s!1)) (* (- 36) (* r00 r!2 x!0 x!0 x!0 x!0)) (* (- 24) (* s00 s00 r00 r!2 r!2 s!1 x!0)) (* 648 (* x00 r!2 s!1 s!1)) (* 330 (* r00 s!1 x!0 x!0 x!0)) (* 90 (* r00 r!2 s!1 x!0 x!0 x!0)) (* (- 90) (* r00 x!0 x!0 x!0 x!0)) (* 54 (* x00 r!2 r!2 s!1 s!1 s!1)) (* (- 4) (* s00 r!2 s!1 s!1 s!1 s!1)) (* (- 144) (* s00 r00 r!2 r!2 s!1 s!1)) (* 144 (* s00 r00 s!1 x!0)) (* 108 (* x00 s!1 s!1 x!0)) (* 2 (* s00 r00 s!1 x!0 x!0 x!0)) (* (- 216) (* s00 r00 r!2 s!1 s!1)) (* (- 72) (* s00 r00 s!1 s!1)) (* (- 108) (* x00 r!2 r!2 s!1 s!1 x!0)) (* 288 (* s00 r00 r!2 r!2 s!1 x!0)) (* (- 108) (* s00 r00 r00 s!1 s!1)) (* 12 (* s00 x00 r!2 s!1 s!1 x!0)) (* 4 (* s00 s00 r!2 x!0 x!0 x!0)) (* (- 54) (* s00 x00 r!2 s!1 s!1)) (* (- 36) (* s00 x00 r!2 r!2 s!1 s!1)) (* 216 (* s00 r00 r00 s!1 x!0)) (* 12 (* s00 s00 r00 r!2 r!2 x!0 x!0)) (* (- 6) (* s00 x00 r!2 s!1 x!0 x!0)) (* 141 (* s00 r!2 s!1 x!0 x!0)) (* 57 (* s00 s00 x!0 x!0)) (* (- 60) (* s00 r00 r!2 s!1 x!0 x!0)) (* 4 (* s00 r!2 s!1 x!0 x!0 x!0)) (* (- 114) (* s00 s00 s!1 x!0)) (* 57 (* s00 s00 s!1 s!1)) (* (- 60) (* s00 r!2 x!0 x!0 x!0)) (* 918 (* r00 x00 r!2 s!1 s!1)) (* 270 (* r00 x00 s!1 s!1)) (* (- 102) (* s00 r!2 s!1 s!1 x!0)) (* 21 (* s00 r!2 s!1 s!1 s!1)) (* (- 39) (* s00 x!0 x!0 x!0)) (* 36 (* r00 x00 r!2 x!0 x!0 x!0)) (* (- 87) (* s00 s!1 s!1 x!0)) (* 102 (* s00 s!1 x!0 x!0)) (* 24 (* s00 s!1 s!1 s!1)) (* (- 54) (* s00 x00 r!2 x!0 x!0)) (* (- 36) (* s00 x00 r!2 r!2 x!0 x!0)) (* (- 324) (* s00 r00 r00 r!2 s!1 s!1)) (* 18 (* s00 s00 r00 r!2 s!1 s!1)) (* (- 6) (* s00 r00 s!1 s!1 x!0)) (* 864 (* r00 x00 r!2 r!2 x!0 x!0)) (* 12 (* s00 r!2 s!1 s!1 s!1 x!0)) (* 12 (* s00 r00 r!2 x!0 x!0 x!0)) (* 18 (* r00 r!2 s!1 s!1 s!1 s!1)) (* (- 60) (* r00 s!1 s!1 s!1 s!1)) (* 918 (* r00 x00 r!2 x!0 x!0)) (* (- 72) (* r00 x00 r!2 r!2 s!1 s!1 x!0)) (* 90 (* r00 x00 s!1 s!1 x!0)) (* (- 12) (* s00 s00 r00 s!1 x!0)) (* 36 (* r00 x00 r!2 r!2 s!1 s!1 s!1)) (* 216 (* r00 x00 r!2 r!2 r!2 s!1 s!1)) (* (- 2) (* s00 r00 s!1 s!1 s!1 s!1)) (* (- 6) (* s00 r00 s!1 s!1 x!0 x!0)) (* (- 216) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 1728) (* r00 x00 r!2 r!2 s!1 x!0)) (* (- 366) (* s00 s00 r!2 s!1 x!0)) (* 12 (* s00 x00 s!1 x!0 x!0)) (* 90 (* s00 s!1 x!0)) (* 144 (* r00 r00 s!1 x!0 x!0 x!0)) (* (- 90) (* r00 x!0 x!0 x!0)) (* (- 4) (* s00 s00 r00 s!1 x!0 x!0)) (* 120 (* s00 r!2 r!2 s!1 s!1 x!0)) (* (- 48) (* s00 r!2 r!2 s!1 s!1 s!1)) (* (- 324) (* r00 r00 r!2 s!1 s!1 x!0)) (* (- 216) (* r00 r00 s!1 s!1 x!0 x!0)) (* (- 342) (* r00 r!2 x!0 x!0 x!0)) (* 288 (* s00 r!2 r!2 r!2 s!1 x!0)) (* 414 (* s00 r!2 s!1 x!0)) (* 216 (* r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 19 (* s00 s00 s!1 s!1 x!0)) (* 342 (* r00 r!2 s!1 s!1 s!1)) (* 18 (* r00 x00 r!2 s!1 x!0 x!0)) (* 648 (* x00 r!2 x!0 x!0)) (* 108 (* r00 r00 r!2 s!1 s!1 x!0 x!0)) (* (- 144) (* s00 r!2 r!2 r!2 x!0 x!0)) (* (- 144) (* s00 r!2 r!2 r!2 s!1 s!1)) (* (- 306) (* s00 r!2 r!2 x!0 x!0)) (* (- 207) (* s00 r!2 x!0 x!0)) (* 612 (* s00 r!2 r!2 s!1 x!0)) (* (- 306) (* s00 r!2 r!2 s!1 s!1)) (* (- 45) (* s00 x!0 x!0)) (* (- 207) (* s00 r!2 s!1 s!1)) (* (- 648) (* r00 r00 r!2 r!2 s!1 s!1 x!0)) (* 108 (* r00 r00 r!2 s!1 s!1 s!1)) (* 324 (* x00 r!2 r!2 r!2 s!1 s!1)) (* 19 (* s00 s00 x!0 x!0 x!0)) (* (- 162) (* x00 s!1 x!0 x!0)) (* (- 36) (* r00 r00 x!0 x!0 x!0 x!0)) (* 18 (* s00 s00 r00 r!2 x!0 x!0)) (* 144 (* r00 r00 s!1 s!1 s!1 x!0)) (* 324 (* r00 r00 r!2 s!1 x!0 x!0)) (* 2 (* s00 s00 r00 r!2 s!1 x!0 x!0)) (* (- 96) (* s00 r!2 r!2 s!1 x!0 x!0)) (* 648 (* r00 r00 r!2 r!2 s!1 x!0 x!0)) (* (- 108) (* r00 r00 r!2 s!1 s!1 s!1 x!0)) (* 90 (* r00 s!1 s!1 s!1)) (* 270 (* r00 s!1 x!0 x!0)) (* 1026 (* r00 r!2 s!1 x!0 x!0)) (* (- 34) (* s00 s00 r!2 s!1 s!1 x!0)) (* 19 (* s00 s00 r!2 s!1 s!1 s!1)) (* 150 (* s00 s00 r!2 r!2 x!0 x!0)) (* 183 (* s00 s00 r!2 x!0 x!0)) (* 972 (* r00 r!2 r!2 s!1 x!0 x!0)) (* 18 (* x00 r!2 s!1 s!1 s!1)) (* (- 36) (* r00 r00 r!2 s!1 x!0 x!0 x!0)) (* 54 (* x00 r!2 s!1 s!1 x!0)) (* (- 216) (* r00 r00 r!2 r!2 x!0 x!0 x!0)) (* (- 108) (* r00 r00 r!2 x!0 x!0 x!0)) (* (- 1026) (* r00 r!2 s!1 s!1 x!0)) (* (- 270) (* r00 s!1 s!1 x!0)) (* 36 (* r00 r00 r!2 s!1 s!1 s!1 s!1)) (* 183 (* s00 s00 r!2 s!1 s!1)) (* (- 45) (* s00 s!1 s!1)) (* 324 (* r00 r!2 r!2 s!1 s!1 s!1)) (* 60 (* s00 s!1 s!1 x!0 x!0)) ?x10942 (* 324 (* r00 r00 x00 r!2 s!1 s!1)) (* (- 216) (* r00 r00 x00 s!1 x!0)) ?x3631 (* 24 (* s00 s00 r!2 r!2 r!2 x!0 x!0)) (* (- 72) (* r00 r00 x00 s!1 x!0 x!0)) (* 36 (* r00 r00 x00 r!2 s!1 x!0 x!0)) (* 324 (* r00 r00 x00 r!2 x!0 x!0)) (* 810 (* x00 r!2 r!2 x!0 x!0)) (* (- 648) (* r00 r00 x00 r!2 s!1 x!0)) (* 108 (* r00 r00 x00 x!0 x!0)) (* 216 (* r00 r00 x00 r!2 r!2 s!1 s!1)) (* (- 648) (* x00 r!2 r!2 r!2 s!1 x!0)) (* 108 (* r00 r00 x00 s!1 s!1)) (* (- 432) (* r00 r00 x00 r!2 r!2 s!1 x!0)) (* 216 (* r00 r00 x00 r!2 r!2 x!0 x!0)) (* 36 (* r00 r00 x00 r!2 s!1 s!1 s!1)) (* 36 (* r00 x00 r!2 r!2 s!1 x!0 x!0)) (* 36 (* r00 r00 x00 s!1 s!1 x!0)))))
 (let (($x5815 (= ?x5822 0)))
 (let (($x6837 (not $x5815)))
 (let ((?x9934 (* r00 r00 s!1)))
 (let ((?x7822 (* 36 ?x9934)))
 (let ((?x9381 (* (- 9) s!1)))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6129 (* 108 ?x1410)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4923 (* 16 ?x1248)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x2300 (* (- 432) ?x946)))
 (let ((?x869 (* s00 x00)))
 (let ((?x4731 (* (- 108) ?x869)))
 (let ((?x711 (* s00 r00 r00)))
 (let ((?x9368 (* (- 36) ?x711)))
 (let ((?x655 (* s00 s00)))
 (let ((?x4995 (* 51 ?x655)))
 (let ((?x586 (* r00 x00)))
 (let ((?x8437 (* 108 ?x586)))
 (let ((?x137 (* 9 s00)))
 (let ((?x8753 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x8437 ?x4995 ?x9368 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x4731 ?x2300 (* 108 (* x00 s!1)) (* 216 (* s00 r00 r00 r00)) ?x4923 (* (- 216) (* r00 r00 r00 s!1)) ?x6129 (* (- 108) (* s!1 x!0)) (* 108 (* x!0 x!0)) (* 15 (* s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* x00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 54 (* r00 s!1)) (* (- 108) (* r00 x!0)) ?x9381 (* 108 (* s00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) ?x7822 (* (- 66) (* s00 s!1)) (* (- 4) ?x11366) (* 108 (* s00 x!0)))))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x2382 (* 36 ?x941)))
 (let ((?x2255 (* (- 6) ?x869)))
 (let ((?x2384 (* 15 ?x655)))
 (let ((?x1811 (* 54 ?x586)))
 (let ((?x5414 (+ ?x137 (* (- 24) (* s00 r00)) ?x1811 ?x2384 ?x9368 (* 2 (* s00 s00 r00)) ?x2255 ?x2382 (* 6 (* x00 s!1)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* s!1 x!0)) (* (- 24) (* s00 r!2)) (* 36 (* r00 x00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* (- 54) (* r!2 x!0)) (* 24 (* r!2 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 3) (* s!1 s!1)) (* (- 2) (* r!2 s!1 s!1)) (* 24 (* r00 s!1)) (* 54 (* x00 r!2)) (* (- 54) (* r00 x!0)) ?x9381 (* 2 (* s00 r00 s!1)) ?x7822 (* (- 12) (* s00 s!1)) (* 6 (* s00 x!0)))))
 (let (($x9619 (= ?x5414 0)))
 (let ((?x4521 (* (- 3) s!1)))
 (let ((?x7547 (* 4 ?x655)))
 (let ((?x8957 (* 18 ?x586)))
 (let ((?x44 (* 3 s00)))
 (let ((?x5105 (+ ?x44 (* (- 9) (* s00 r00)) ?x8957 ?x7547 (* (- 6) ?x711) (* (- 9) (* s00 r!2)) (* (- 18) (* r!2 x!0)) (* 9 (* r!2 s!1)) (* (- 2) (* s!1 s!1)) (* 9 (* r00 s!1)) (* 18 (* x00 r!2)) (* (- 18) (* r00 x!0)) ?x4521 (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x9934) (* (- 2) (* s00 s!1)))))
 (let (($x3648 (= ?x5105 0)))
 (let ((?x4520 (* 6 x!0)))
 (let ((?x4525 (* 3 r!2)))
 (let ((?x4513 (* r!2 s!1)))
 (let ((?x2928 (* 2 ?x4513)))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x490 (* s00 r00)))
 (let ((?x568 (* (- 6) ?x490)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x3455 (+ ?x44 ?x564 ?x565 ?x568 ?x534 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x2928 ?x4525 ?x4521 ?x4520)))
 (let (($x8455 (= ?x3455 0)))
 (let (($x5819 (and $x10992 $x8455 $x3648 $x9619 (= ?x8753 0) $x6837)))
 (let ((?x10923 (+ (* 12 (* r!2 x!0 x!0 x!0 s00 r00)) (* 12 (* r!2 s!1 s!1 s!1 x!0 s00)) ?x3739 ?x3631 (* (- 36) (* s!1 s!1 s!1 s!1 r00 r00)) (* (- 45) (* s!1 s!1 s00)) (* 648 (* r!2 s!1 s!1 x00)) (* (- 12) (* r!2 s!1 s!1 x!0 x!0 s00)) (* (- 2) (* s!1 s!1 s!1 s!1 s00 r00)) (* 6 (* s!1 s!1 s!1 x!0 s00 r00)) (* (- 6) (* s!1 s!1 x!0 x!0 s00 r00)) (* 216 (* r!2 r!2 r!2 s!1 s!1 r00 x00)) (* 36 (* r!2 r!2 s!1 s!1 s!1 r00 x00)) (* 90 (* s!1 s!1 x!0 r00 x00)) (* (- 12) (* s!1 x!0 s00 s00 r00)) (* (- 72) (* r!2 r!2 s!1 s!1 x!0 r00 x00)) (* (- 24) (* r!2 r!2 s!1 x!0 s00 s00 r00)) (* 918 (* r!2 x!0 x!0 r00 x00)) (* (- 60) (* s!1 s!1 s!1 s!1 r00)) (* 18 (* r!2 s!1 s!1 s!1 s!1 r00)) (* 270 (* s!1 s!1 s!1 x!0 r00)) (* 864 (* r!2 r!2 x!0 x!0 r00 x00)) (* (- 18) (* r!2 s!1 s!1 s!1 x!0 r00)) (* (- 450) (* s!1 s!1 x!0 x!0 r00)) (* (- 54) (* r!2 s!1 s!1 x!0 x!0 r00)) (* (- 432) (* r!2 r!2 r!2 s!1 x!0 r00 x00)) (* 6 (* x!0 x!0 x!0 x!0 s00)) (* 330 (* s!1 x!0 x!0 x!0 r00)) (* 90 (* r!2 s!1 x!0 x!0 x!0 r00)) (* 216 (* r!2 r!2 r!2 x!0 x!0 r00 x00)) (* 6 (* x!0 x!0 s00 s00 r00)) (* 90 (* r!2 s!1 s!1 s!1 r00 x00)) (* (- 144) (* r!2 s!1 s!1 x!0 r00 x00)) (* (- 90) (* x!0 x!0 x!0 x!0 r00)) (* (- 1836) (* r!2 s!1 x!0 r00 x00)) (* (- 36) (* r!2 x!0 x!0 x!0 x!0 r00)) (* 12 (* r!2 r!2 s!1 s!1 s00 s00 r00)) (* 2 (* s!1 x!0 x!0 x!0 s00 r00)) (* (- 1620) (* r!2 r!2 s!1 x!0 x00)) (* (- 1296) (* r!2 s!1 x!0 x00)) (* 810 (* r!2 r!2 s!1 s!1 x00)) (* 108 (* s!1 s!1 x!0 x00)) (* (- 18) (* s!1 s!1 s!1 x00)) (* 6 (* s!1 x!0 x!0 x!0 x00)) (* 72 (* x!0 x!0 x!0 x00)) (* (- 36) (* r!2 s!1 x!0 s00 s00 r00)) (* (- 180) (* s!1 x!0 x!0 r00 x00)) (* 6 (* s!1 s!1 s00 s00 r00)) ?x6343 ?x6062 ?x6051 ?x6090 ?x6072 ?x6261 ?x6150 ?x6262 ?x6154 ?x6264 ?x6164 ?x6280 ?x4145 ?x6282 ?x5339 ?x6284 ?x6190 (* 324 (* r!2 r!2 r!2 x!0 x!0 x00)) (* 54 (* r!2 r!2 s!1 s!1 s!1 x00)) (* (- 108) (* r!2 r!2 s!1 s!1 x!0 x00)) ?x1450 ?x6220 ?x1452 ?x6225 ?x1455 (* (- 4) (* r!2 s!1 s!1 s!1 s!1 s00)) ?x1457 ?x8657 ?x5518 (* 270 (* x!0 x!0 r00 x00)) ?x4052 ?x4051 (* (- 1728) (* r!2 r!2 s!1 x!0 r00 x00)) (* (- 36) (* x!0 x!0 x!0 s00 r00 r00)) (* (- 18) (* s!1 s!1 x!0 x!0 x00)) (* 72 (* s!1 x!0 x!0 s00 r00 r00)) (* 18 (* s!1 s!1 s!1 x!0 x00)) (* (- 6) (* s!1 s!1 s!1 s!1 x00)) (* (- 36) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 6) (* s!1 s!1 x!0 s00 x00)) (* 12 (* s!1 x!0 x!0 s00 x00)) (* (- 6) (* x!0 x!0 x!0 s00 x00)) (* (- 72) (* s!1 s!1 s00 r00)) (* (- 216) (* r!2 s!1 s!1 s00 r00)) (* (- 144) (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 s00 r00)) (* 144 (* s!1 x!0 s00 r00)) (* 432 (* r!2 s!1 x!0 s00 r00)) (* 288 (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 6) (* s!1 s!1 x!0 s00 r00)) (* 84 (* r!2 s!1 s!1 x!0 s00 r00)) (* (- 72) (* x!0 x!0 s00 r00)) (* (- 216) (* r!2 x!0 x!0 s00 r00)) (* (- 144) (* r!2 r!2 x!0 x!0 s00 r00)) (* 30 (* s!1 x!0 x!0 s00 r00)) (* (- 60) (* r!2 s!1 x!0 x!0 s00 r00)) (* 4 (* r!2 x!0 x!0 x!0 s00 s00)) ?x9330 (* 24 (* s!1 s!1 s!1 s00)) (* (- 87) (* s!1 s!1 x!0 s00)) (* 102 (* s!1 x!0 x!0 s00)) (* (- 39) (* x!0 x!0 x!0 s00)) (* 21 (* r!2 s!1 s!1 s!1 s00)) (* (- 102) (* r!2 s!1 s!1 x!0 s00)) (* 141 (* r!2 s!1 x!0 x!0 s00)) (* 270 (* s!1 s!1 r00 x00)) (* (- 60) (* r!2 x!0 x!0 x!0 s00)) (* 918 (* r!2 s!1 s!1 r00 x00)) (* 57 (* s!1 s!1 s00 s00)) (* (- 114) (* s!1 x!0 s00 s00)) (* 4 (* r!2 s!1 x!0 x!0 x!0 s00)) (* 57 (* x!0 x!0 s00 s00)) ?x2108 (* 12 (* r!2 r!2 x!0 x!0 s00 s00 r00)) (* 162 (* x!0 x!0 x00)) (* (- 162) (* r!2 s!1 x!0 x!0 x00)) (* 54 (* r!2 r!2 s!1 x!0 x!0 x00)) (* 162 (* s!1 s!1 x00)) (* (- 324) (* s!1 x!0 x00)) (* 24 (* r!2 r!2 x!0 x!0 x!0 s00)) (* 2 (* r!2 s!1 s!1 s!1 s00 s00 r00)) (* 90 (* r!2 x!0 x!0 x!0 x00)) (* 2 (* s!1 s!1 x!0 s00 s00 r00)) ?x2404 (* (- 18) (* x!0 x!0 x!0 s00 r00)) (* (- 4) (* r!2 s!1 s!1 x!0 s00 s00 r00)) (* (- 18) (* x!0 x!0 s00 x00)) (* 36 (* s!1 x!0 s00 x00)) (* (- 18) (* s!1 s!1 s00 x00)) (* (- 54) (* r!2 s!1 s!1 s00 x00)) (* 864 (* r!2 r!2 s!1 s!1 r00 x00)) (* (- 36) (* r!2 r!2 s!1 s!1 s00 x00)) (* (- 6) (* r!2 s!1 s!1 s!1 s00 x00)) (* 108 (* r!2 s!1 x!0 s00 x00)) (* 72 (* r!2 r!2 s!1 x!0 s00 x00)) (* 90 (* x!0 x!0 x!0 r00 x00)) (* 12 (* r!2 s!1 s!1 x!0 s00 x00)) (* 36 (* r!2 x!0 x!0 x!0 r00 x00)) (* (- 54) (* r!2 x!0 x!0 s00 x00)) (* (- 36) (* r!2 r!2 x!0 x!0 s00 x00)) (* (- 6) (* r!2 s!1 x!0 x!0 s00 x00)) (* (- 108) (* s!1 s!1 s00 r00 r00)) (* (- 324) (* r!2 s!1 s!1 s00 r00 r00)) (* (- 216) (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 36) (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 216 (* s!1 x!0 s00 r00 r00)) (* 648 (* r!2 s!1 x!0 s00 r00 r00)) (* 432 (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 540) (* s!1 x!0 r00 x00)) (* 72 (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 108) (* x!0 x!0 s00 r00 r00)) (* (- 324) (* r!2 x!0 x!0 s00 r00 r00)) (* (- 216) (* r!2 r!2 x!0 x!0 s00 r00 r00)) (* (- 6) (* s!1 s!1 s!1 s00 r00)) (* (- 36) (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* 14 (* s!1 s!1 s!1 s!1 s00)) (* (- 48) (* s!1 s!1 s!1 x!0 s00)) (* 60 (* s!1 s!1 x!0 x!0 s00)) (* (- 32) (* s!1 x!0 x!0 x!0 s00)) (* 18 (* r!2 s!1 s!1 s00 s00 r00)) (* 36 (* r!2 r!2 s!1 x!0 x!0 r00 x00)) (* 18 (* r!2 s!1 x!0 x!0 r00 x00)) ?x953 (* 90 (* s!1 x!0 s00)) (* (- 45) (* x!0 x!0 s00)) (* (- 207) (* r!2 s!1 s!1 s00)) (* (- 306) (* r!2 r!2 s!1 s!1 s00)) (* 414 (* r!2 s!1 x!0 s00)) (* 612 (* r!2 r!2 s!1 x!0 s00)) (* (- 207) (* r!2 x!0 x!0 s00)) (* (- 306) (* r!2 r!2 x!0 x!0 s00)) (* (- 144) (* r!2 r!2 r!2 s!1 s!1 s00)) (* (- 48) (* r!2 r!2 s!1 s!1 s!1 s00)) (* 288 (* r!2 r!2 r!2 s!1 x!0 s00)) (* 120 (* r!2 r!2 s!1 s!1 x!0 s00)) (* (- 144) (* r!2 r!2 r!2 x!0 x!0 s00)) ?x1080 (* (- 96) (* r!2 r!2 s!1 x!0 x!0 s00)) (* 2 (* r!2 s!1 x!0 x!0 s00 s00 r00)) (* 144 (* s!1 s!1 s!1 x!0 r00 r00)) (* (- 216) (* s!1 s!1 x!0 x!0 r00 r00)) (* 144 (* s!1 x!0 x!0 x!0 r00 r00)) (* 18 (* r!2 x!0 x!0 s00 s00 r00)) (* (- 36) (* x!0 x!0 x!0 x!0 r00 r00)) (* (- 4) (* s!1 x!0 x!0 s00 s00 r00)) (* (- 162) (* s!1 x!0 x!0 x00)) (* 324 (* r!2 r!2 r!2 s!1 s!1 x00)) (* 19 (* x!0 x!0 x!0 s00 s00)) (* 108 (* r!2 s!1 s!1 s!1 r00 r00)) (* 216 (* r!2 r!2 s!1 s!1 s!1 r00 r00)) (* (- 324) (* r!2 s!1 s!1 x!0 r00 r00)) (* (- 648) (* r!2 r!2 s!1 s!1 x!0 r00 r00)) (* 648 (* r!2 x!0 x!0 x00)) (* 108 (* r!2 s!1 s!1 x!0 x!0 r00 r00)) (* 648 (* r!2 r!2 s!1 x!0 x!0 r00 r00)) (* 324 (* r!2 s!1 x!0 x!0 r00 r00)) (* (- 108) (* r!2 s!1 s!1 s!1 x!0 r00 r00)) ?x1187 ?x920 (* 36 (* r!2 s!1 s!1 s!1 s!1 r00 r00)) ?x1196 (* (- 108) (* r!2 x!0 x!0 x!0 r00 r00)) (* (- 216) (* r!2 r!2 x!0 x!0 x!0 r00 r00)) (* (- 36) (* r!2 s!1 x!0 x!0 x!0 r00 r00)) (* 18 (* r!2 s!1 s!1 s!1 x00)) (* 54 (* r!2 s!1 s!1 x!0 x00)) ?x1224 ?x1230 (* 150 (* r!2 r!2 x!0 x!0 s00 s00)) (* 19 (* r!2 s!1 s!1 s!1 s00 s00)) (* 19 (* s!1 s!1 x!0 s00 s00)) (* (- 34) (* r!2 s!1 s!1 x!0 s00 s00)) (* (- 90) (* x!0 x!0 x!0 r00)) (* 1026 (* r!2 s!1 x!0 x!0 r00)) (* 270 (* s!1 x!0 x!0 r00)) (* 90 (* s!1 s!1 s!1 r00)) (* 342 (* r!2 s!1 s!1 s!1 r00)) (* (- 270) (* s!1 s!1 x!0 r00)) (* (- 1026) (* r!2 s!1 s!1 x!0 r00)) (* 183 (* r!2 s!1 s!1 s00 s00)) (* (- 342) (* r!2 x!0 x!0 x!0 r00)) (* (- 366) (* r!2 s!1 x!0 s00 s00)) (* (- 324) (* r!2 r!2 x!0 x!0 x!0 r00)) (* 972 (* r!2 r!2 s!1 x!0 x!0 r00)) (* 183 (* r!2 x!0 x!0 s00 s00)) (* 150 (* r!2 r!2 s!1 s!1 s00 s00)) (* (- 300) (* r!2 r!2 s!1 x!0 s00 s00)) (* (- 972) (* r!2 r!2 s!1 s!1 x!0 r00)) (* (- 38) (* s!1 x!0 x!0 s00 s00)) (* 11 (* r!2 s!1 x!0 x!0 s00 s00)) (* 324 (* r!2 r!2 s!1 s!1 s!1 r00)) (* 810 (* r!2 r!2 x!0 x!0 x00)) (* (- 648) (* r!2 r!2 r!2 s!1 x!0 x00)) (* 108 (* s!1 s!1 r00 r00 x00)) ?x1595 (* 324 (* r!2 s!1 s!1 r00 r00 x00)) (* (- 216) (* s!1 x!0 r00 r00 x00)) (* (- 648) (* r!2 s!1 x!0 r00 r00 x00)) (* 108 (* x!0 x!0 r00 r00 x00)) (* 324 (* r!2 x!0 x!0 r00 r00 x00)) (* 216 (* r!2 r!2 s!1 s!1 r00 r00 x00)) (* (- 432) (* r!2 r!2 s!1 x!0 r00 r00 x00)) (* 216 (* r!2 r!2 x!0 x!0 r00 r00 x00)) (* 36 (* r!2 s!1 s!1 s!1 r00 r00 x00)) (* 36 (* s!1 s!1 x!0 r00 r00 x00)) (* (- 72) (* r!2 s!1 s!1 x!0 r00 r00 x00)) (* (- 72) (* s!1 x!0 x!0 r00 r00 x00)) (* 36 (* r!2 s!1 x!0 x!0 r00 r00 x00)) ?x3305 (* 2 (* x!0 x!0 x!0 s00 s00 r00)) ?x1775 (* 36 (* x!0 x!0 x!0 r00 r00 x00)) (* 24 (* r!2 r!2 r!2 s!1 s!1 s00 s00)) (* (- 48) (* r!2 r!2 r!2 s!1 x!0 s00 s00)) (* 24 (* r!2 r!2 r!2 x!0 x!0 s00 s00)) (* 4 (* r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 8) (* r!2 r!2 s!1 s!1 x!0 s00 s00)) (* 4 (* r!2 r!2 s!1 x!0 x!0 s00 s00)) ?x10942)))
 (let ((?x1440 (* (- 108) ?x1410)))
 (let ((?x1439 (* (- 16) ?x1248)))
 (let ((?x1120 (* s00 r00 r00 r00)))
 (let ((?x1435 (* (- 216) ?x1120)))
 (let ((?x947 (* 432 ?x946)))
 (let ((?x1193 (* 108 ?x869)))
 (let ((?x795 (* s00 s00 r00 r00)))
 (let ((?x796 (* 36 ?x795)))
 (let ((?x732 (* s00 s00 r00)))
 (let ((?x1076 (* 108 ?x732)))
 (let ((?x1064 (* 36 ?x711)))
 (let ((?x1429 (* (- 51) ?x655)))
 (let ((?x2915 (* s!1 r00 r00)))
 (let ((?x2870 (* (- 36) ?x2915)))
 (let ((?x1426 (* (- 108) ?x586)))
 (let ((?x577 (* s00 r00 x00)))
 (let ((?x1425 (* (- 216) ?x577)))
 (let ((?x584 (* 54 ?x490)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x6607 (* 9 s!1)))
 (let ((?x1009 (+ ?x6607 ?x1051 ?x584 ?x1425 ?x1426 (* (- 15) (* s!1 s!1)) ?x2870 ?x1429 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1064 ?x1076 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x796 (* (- 108) (* s!1 s00 r00)) (* 4 ?x11366) ?x1193 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x947 (* 12 (* s!1 s!1 s00)) ?x1435 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1439 (* 216 (* x!0 x00)) ?x1440)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x760 (* (- 2) ?x732)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x628 (* 24 ?x490)))
 (let ((?x7599 (+ ?x6607 ?x1051 (* (- 24) ?x4513) (* 24 (* r!2 s00)) ?x628 ?x615 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x2870 ?x980 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1064 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x760 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x870 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x954 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x712 (* 6 ?x711)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x605 (* 9 ?x490)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x8224 (+ (* 3 s!1) ?x442 (* (- 9) ?x4513) (* 9 (* r!2 s00)) ?x605 ?x600 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x2915) ?x668 (* 18 (* x!0 r00)) ?x712 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3885 (+ ?x4525 ?x4521 ?x4520 ?x44 ?x564 ?x565 ?x2928 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x568 ?x534)))
 (let (($x1982 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x365)) 0)))
 (let (($x10944 (and $x1982 (= ?x3885 0) (= ?x8224 0) (= ?x7599 0) (= ?x1009 0) (not (= ?x10923 0)))))
 (let (($x3442 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (* 6 r)))
 (let ((?x1472 (+ 3 ?x216 s)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1453 (+ ?x344 x)))
 (let ((?x1447 (+ 1 r)))
 (let ((?x12802 (+ (* 12 (* r x x x s00 r00)) (* 12 (* r s s s x s00)) (* (- 8) (* ?x1447 ?x1453 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 45) (* s s s)) (* (- 36) (* s s s s r00 r00)) (* (- 45) (* s s s00)) (* 648 (* r s s x00)) (* (- 12) (* r s s x x s00)) (* (- 2) (* s s s s s00 r00)) (* 6 (* s s s x s00 r00)) (* (- 6) (* s s x x s00 r00)) (* 216 (* r r r s s r00 x00)) (* 36 (* r r s s s r00 x00)) (* 90 (* s s x r00 x00)) (* (- 12) (* s x s00 s00 r00)) (* (- 72) (* r r s s x r00 x00)) (* (- 24) (* r r s x s00 s00 r00)) (* 918 (* r x x r00 x00)) (* (- 60) (* s s s s r00)) (* 18 (* r s s s s r00)) (* 270 (* s s s x r00)) (* 864 (* r r x x r00 x00)) (* (- 18) (* r s s s x r00)) (* (- 450) (* s s x x r00)) (* (- 54) (* r s s x x r00)) (* (- 432) (* r r r s x r00 x00)) (* 6 (* x x x x s00)) (* 330 (* s x x x r00)) (* 90 (* r s x x x r00)) (* 216 (* r r r x x r00 x00)) (* 6 (* x x s00 s00 r00)) (* 90 (* r s s s r00 x00)) (* (- 144) (* r s s x r00 x00)) (* (- 90) (* x x x x r00)) (* (- 1836) (* r s x r00 x00)) (* (- 36) (* r x x x x r00)) (* 12 (* r r s s s00 s00 r00)) (* 2 (* s x x x s00 r00)) (* (- 1620) (* r r s x x00)) (* (- 1296) (* r s x x00)) (* 810 (* r r s s x00)) (* 108 (* s s x x00)) (* (- 18) (* s s s x00)) (* 6 (* s x x x x00)) (* 72 (* x x x x00)) (* (- 36) (* r s x s00 s00 r00)) (* (- 180) (* s x x r00 x00)) (* 6 (* s s s00 s00 r00)) (* 45 (* x x x)) (* 303 (* s x x x)) (* 135 (* s s x)) (* (- 144) (* r r s s s)) (* (- 135) (* s x x)) (* 432 (* r r s s x)) (* (- 162) (* r s s s)) (* (- 87) (* s s s s)) (* 486 (* r s s x)) (* 333 (* s s s x)) (* (- 486) (* r s x x)) (* (- 477) (* s s x x)) (* 162 (* r x x x)) (* (- 72) (* x x x x)) (* (- 6) (* s x x x x)) (* (- 12) (* s00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 9) (* ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 324 (* r r r x x x00)) (* 54 (* r r s s s x00)) (* (- 108) (* r r s s x x00)) (* (- 114) (* r s s s s)) (* (- 6) (* s s s s s)) (* 432 (* r s s s x)) (* 24 (* s s s s x)) (* (- 612) (* r s s x x)) (* (- 4) (* r s s s s s00)) (* (- 36) (* s s s x x)) (* 384 (* r s x x x)) (* 24 (* s s x x x)) (* 270 (* x x r00 x00)) (* (- 432) (* r r s x x)) (* (- 90) (* r x x x x)) (* (- 1728) (* r r s x r00 x00)) (* (- 36) (* x x x s00 r00 r00)) (* (- 18) (* s s x x x00)) (* 72 (* s x x s00 r00 r00)) (* 18 (* s s s x x00)) (* (- 6) (* s s s s x00)) (* (- 36) (* s s x s00 r00 r00)) (* (- 6) (* s s x s00 x00)) (* 12 (* s x x s00 x00)) (* (- 6) (* x x x s00 x00)) (* (- 72) (* s s s00 r00)) (* (- 216) (* r s s s00 r00)) (* (- 144) (* r r s s s00 r00)) (* (- 36) (* r s s s s00 r00)) (* 144 (* s x s00 r00)) (* 432 (* r s x s00 r00)) (* 288 (* r r s x s00 r00)) (* (- 6) (* s s x s00 r00)) (* 84 (* r s s x s00 r00)) (* (- 72) (* x x s00 r00)) (* (- 216) (* r x x s00 r00)) (* (- 144) (* r r x x s00 r00)) (* 30 (* s x x s00 r00)) (* (- 60) (* r s x x s00 r00)) (* 4 (* r x x x s00 s00)) (* (- 54) (* ?x1447 ?x1447 ?x1453 ?x1453 ?x1453 ?x1472)) (* 24 (* s s s s00)) (* (- 87) (* s s x s00)) (* 102 (* s x x s00)) (* (- 39) (* x x x s00)) (* 21 (* r s s s s00)) (* (- 102) (* r s s x s00)) (* 141 (* r s x x s00)) (* 270 (* s s r00 x00)) (* (- 60) (* r x x x s00)) (* 918 (* r s s r00 x00)) (* 57 (* s s s00 s00)) (* (- 114) (* s x s00 s00)) (* 4 (* r s x x x s00)) (* 57 (* x x s00 s00)) (* 36 (* r00 r00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 12 (* r r x x s00 s00 r00)) (* 162 (* x x x00)) (* (- 162) (* r s x x x00)) (* 54 (* r r s x x x00)) (* 162 (* s s x00)) (* (- 324) (* s x x00)) (* 24 (* r r x x x s00)) (* 2 (* r s s s s00 s00 r00)) (* 90 (* r x x x x00)) (* 2 (* s s x s00 s00 r00)) (* (- 4) (* r00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472 ?x1472)) (* (- 18) (* x x x s00 r00)) (* (- 4) (* r s s x s00 s00 r00)) (* (- 18) (* x x s00 x00)) (* 36 (* s x s00 x00)) (* (- 18) (* s s s00 x00)) (* (- 54) (* r s s s00 x00)) (* 864 (* r r s s r00 x00)) (* (- 36) (* r r s s s00 x00)) (* (- 6) (* r s s s s00 x00)) (* 108 (* r s x s00 x00)) (* 72 (* r r s x s00 x00)) (* 90 (* x x x r00 x00)) (* 12 (* r s s x s00 x00)) (* 36 (* r x x x r00 x00)) (* (- 54) (* r x x s00 x00)) (* (- 36) (* r r x x s00 x00)) (* (- 6) (* r s x x s00 x00)) (* (- 108) (* s s s00 r00 r00)) (* (- 324) (* r s s s00 r00 r00)) (* (- 216) (* r r s s s00 r00 r00)) (* (- 36) (* r s s s s00 r00 r00)) (* 216 (* s x s00 r00 r00)) (* 648 (* r s x s00 r00 r00)) (* 432 (* r r s x s00 r00 r00)) (* (- 540) (* s x r00 x00)) (* 72 (* r s s x s00 r00 r00)) (* (- 108) (* x x s00 r00 r00)) (* (- 324) (* r x x s00 r00 r00)) (* (- 216) (* r r x x s00 r00 r00)) (* (- 6) (* s s s s00 r00)) (* (- 36) (* r s x x s00 r00 r00)) (* 14 (* s s s s s00)) (* (- 48) (* s s s x s00)) (* 60 (* s s x x s00)) (* (- 32) (* s x x x s00)) (* 18 (* r s s s00 s00 r00)) (* 36 (* r r s x x r00 x00)) (* 18 (* r s x x r00 x00)) (* (- 4) (* r00 ?x1453 ?x1453 ?x1453 ?x1472 ?x1472)) (* 90 (* s x s00)) (* (- 45) (* x x s00)) (* (- 207) (* r s s s00)) (* (- 306) (* r r s s s00)) (* 414 (* r s x s00)) (* 612 (* r r s x s00)) (* (- 207) (* r x x s00)) (* (- 306) (* r r x x s00)) (* (- 144) (* r r r s s s00)) (* (- 48) (* r r s s s s00)) (* 288 (* r r r s x s00)) (* 120 (* r r s s x s00)) (* (- 144) (* r r r x x s00)) (* 24 (* ?x1447 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 96) (* r r s x x s00)) (* 2 (* r s x x s00 s00 r00)) (* 144 (* s s s x r00 r00)) (* (- 216) (* s s x x r00 r00)) (* 144 (* s x x x r00 r00)) (* 18 (* r x x s00 s00 r00)) (* (- 36) (* x x x x r00 r00)) (* (- 4) (* s x x s00 s00 r00)) (* (- 162) (* s x x x00)) (* 324 (* r r r s s x00)) (* 19 (* x x x s00 s00)) (* 108 (* r s s s r00 r00)) (* 216 (* r r s s s r00 r00)) (* (- 324) (* r s s x r00 r00)) (* (- 648) (* r r s s x r00 r00)) (* 648 (* r x x x00)) (* 108 (* r s s x x r00 r00)) (* 648 (* r r s x x r00 r00)) (* 324 (* r s x x r00 r00)) (* (- 108) (* r s s s x r00 r00)) (* 24 (* r00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 2 (* r00 s00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 36 (* r s s s s r00 r00)) (* (- 3) (* ?x1447 ?x1453 ?x1453 ?x1472 ?x1472 ?x1472)) (* (- 108) (* r x x x r00 r00)) (* (- 216) (* r r x x x r00 r00)) (* (- 36) (* r s x x x r00 r00)) (* 18 (* r s s s x00)) (* 54 (* r s s x x00)) (* 6 (* x00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 3) (* ?x1453 ?x1453 ?x1453 ?x1472 ?x1472)) (* 150 (* r r x x s00 s00)) (* 19 (* r s s s s00 s00)) (* 19 (* s s x s00 s00)) (* (- 34) (* r s s x s00 s00)) (* (- 90) (* x x x r00)) (* 1026 (* r s x x r00)) (* 270 (* s x x r00)) (* 90 (* s s s r00)) (* 342 (* r s s s r00)) (* (- 270) (* s s x r00)) (* (- 1026) (* r s s x r00)) (* 183 (* r s s s00 s00)) (* (- 342) (* r x x x r00)) (* (- 366) (* r s x s00 s00)) (* (- 324) (* r r x x x r00)) (* 972 (* r r s x x r00)) (* 183 (* r x x s00 s00)) (* 150 (* r r s s s00 s00)) (* (- 300) (* r r s x s00 s00)) (* (- 972) (* r r s s x r00)) (* (- 38) (* s x x s00 s00)) (* 11 (* r s x x s00 s00)) (* 324 (* r r s s s r00)) (* 810 (* r r x x x00)) (* (- 648) (* r r r s x x00)) (* 108 (* s s r00 r00 x00)) (* 144 (* r r x x x)) (* 324 (* r s s r00 r00 x00)) (* (- 216) (* s x r00 r00 x00)) (* (- 648) (* r s x r00 r00 x00)) (* 108 (* x x r00 r00 x00)) (* 324 (* r x x r00 r00 x00)) (* 216 (* r r s s r00 r00 x00)) (* (- 432) (* r r s x r00 r00 x00)) (* 216 (* r r x x r00 r00 x00)) (* 36 (* r s s s r00 r00 x00)) (* 36 (* s s x r00 r00 x00)) (* (- 72) (* r s s x r00 r00 x00)) (* (- 72) (* s x x r00 r00 x00)) (* 36 (* r s x x r00 r00 x00)) (* (- 2) (* ?x1447 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472 ?x1472)) (* 2 (* x x x s00 s00 r00)) (* (- 2) (* s00 ?x1447 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 36 (* x x x r00 r00 x00)) (* 24 (* r r r s s s00 s00)) (* (- 48) (* r r r s x s00 s00)) (* 24 (* r r r x x s00 s00)) (* 4 (* r r s s s s00 s00)) (* (- 8) (* r r s s x s00 s00)) (* 4 (* r r s x x s00 s00)) (* (- 36) (* r00 ?x1447 ?x1447 ?x1453 ?x1453 ?x1453 ?x1472)))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x1440 (* (- 108) ?x1410)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x1439 (* (- 16) ?x1248)))
 (let ((?x1120 (* s00 r00 r00 r00)))
 (let ((?x1435 (* (- 216) ?x1120)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x947 (* 432 ?x946)))
 (let ((?x869 (* s00 x00)))
 (let ((?x1193 (* 108 ?x869)))
 (let ((?x795 (* s00 s00 r00 r00)))
 (let ((?x796 (* 36 ?x795)))
 (let ((?x732 (* s00 s00 r00)))
 (let ((?x1076 (* 108 ?x732)))
 (let ((?x711 (* s00 r00 r00)))
 (let ((?x1064 (* 36 ?x711)))
 (let ((?x655 (* s00 s00)))
 (let ((?x1429 (* (- 51) ?x655)))
 (let ((?x629 (* s r00 r00)))
 (let ((?x928 (* (- 36) ?x629)))
 (let ((?x586 (* r00 x00)))
 (let ((?x1426 (* (- 108) ?x586)))
 (let ((?x577 (* s00 r00 x00)))
 (let ((?x1425 (* (- 216) ?x577)))
 (let ((?x490 (* s00 r00)))
 (let ((?x584 (* 54 ?x490)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1441 (+ ?x143 ?x1051 ?x584 ?x1425 ?x1426 (* (- 15) (* s s)) ?x928 ?x1429 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1064 ?x1076 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x796 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1193 (* 108 (* s x)) (* (- 108) (* x x)) ?x947 (* 12 (* s s s00)) ?x1435 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1439 (* 216 (* x x00)) ?x1440)))
 (let (($x1442 (= ?x1441 0)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x760 (* (- 2) ?x732)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x628 (* 24 ?x490)))
 (let ((?x1143 (+ ?x143 ?x1051 (* (- 24) (* r s)) (* 24 (* r s00)) ?x628 ?x615 ?x633 (* 54 (* r x)) (* 36 (* r x r00)) ?x928 ?x980 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1064 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x760 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x870 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x954 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1148 (= ?x1143 0)))
 (let ((?x712 (* 6 ?x711)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x605 (* 9 ?x490)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x809 (+ ?x47 ?x442 (* (- 9) (* r s)) (* 9 (* r s00)) ?x605 ?x600 ?x610 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x629) ?x668 (* 18 (* x r00)) ?x712 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x816 (= ?x809 0)))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x568 (* (- 6) ?x490)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x563 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x569 (+ ?x43 ?x563 ?x56 ?x44 ?x564 ?x565 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x568 ?x534)))
 (let (($x570 (= ?x569 0)))
 (let ((?x365 (* r00 r00)))
 (let ((?x366 (* 3 ?x365)))
 (let ((?x395 (* (- 1) s00)))
 (let (($x398 (= (+ s ?x395 (* (- 3) (* r r)) ?x366) 0)))
 (and $x398 $x570 $x816 $x1148 $x1442 (not (= ?x12802 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1741 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (* 6 r)))
 (let ((?x7601 (+ 3 s ?x216)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1795 (+ x ?x344)))
 (let ((?x1447 (+ 1 r)))
 (let ((?x8531 (+ (* 2 (* r00 s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 6 (* s00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 9 (* s00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 36 (* r00 x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 6 (* x00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 6) (* ?x1795 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 6) (* s00 x00 ?x1795 ?x1795 ?x1795)) (* (- 24) (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 15 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 54) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 15 (* s00 s00 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 24 (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 2 (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 24) (* r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 3) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 6) (* s00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 54 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 8) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 9 (* s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 54 (* r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 6 (* x00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 3) (* ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 2) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 54) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 s00 ?x1795 ?x1795 ?x1795)) (* (- 2) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)))))
 (let (($x6544 (not (= ?x8531 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6129 (* 108 ?x1410)))
 (let ((?x6042 (* (- 9) s)))
 (let ((?x7480 (* r00 r00 s00)))
 (let ((?x6367 (* (- 36) ?x7480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x4995 (* 51 ?x655)))
 (let ((?x7551 (* r00 r00 s)))
 (let ((?x2086 (* 36 ?x7551)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4923 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x4731 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x2300 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x8437 (* 108 ?x586)))
 (let ((?x6134 (+ (* 216 (* r00 s00 x00)) ?x8437 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2300 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4923 (* (- 108) (* x s)) ?x2086 ?x4995 (* (- 108) (* r00 x)) ?x137 ?x6367 ?x6042 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6129)))
 (let (($x6137 (= ?x6134 0)))
 (let ((?x2384 (* 15 ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x2382 (* 36 ?x941)))
 (let ((?x2255 (* (- 6) ?x869)))
 (let ((?x1811 (* 54 ?x586)))
 (let ((?x1609 (+ (* 24 (* s r)) ?x1811 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2255 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2086 ?x2382 ?x2384 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6367 (* 54 (* x00 r)) ?x6042 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x563 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7547 (* 4 ?x655)))
 (let ((?x8957 (* 18 ?x586)))
 (let ((?x1805 (+ (* 9 (* s r)) ?x8957 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7551) ?x7547 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x7480) (* 18 (* x00 r)) ?x563 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6488 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x563 ?x564 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x565 ?x534)))
 (let (($x4062 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x4062 (= ?x6488 0) (= ?x1805 0) (= ?x1609 0) $x6137 $x6544))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1936 (lambda ((r Int) (s Int) (x Int) )(let ((?x216 (* 6 r)))
 (let ((?x1472 (+ 3 ?x216 s)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1453 (+ ?x344 x)))
 (let ((?x1447 (+ 1 r)))
 (let ((?x12802 (+ (* 12 (* r x x x s00 r00)) (* 12 (* r s s s x s00)) (* (- 8) (* ?x1447 ?x1453 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 45) (* s s s)) (* (- 36) (* s s s s r00 r00)) (* (- 45) (* s s s00)) (* 648 (* r s s x00)) (* (- 12) (* r s s x x s00)) (* (- 2) (* s s s s s00 r00)) (* 6 (* s s s x s00 r00)) (* (- 6) (* s s x x s00 r00)) (* 216 (* r r r s s r00 x00)) (* 36 (* r r s s s r00 x00)) (* 90 (* s s x r00 x00)) (* (- 12) (* s x s00 s00 r00)) (* (- 72) (* r r s s x r00 x00)) (* (- 24) (* r r s x s00 s00 r00)) (* 918 (* r x x r00 x00)) (* (- 60) (* s s s s r00)) (* 18 (* r s s s s r00)) (* 270 (* s s s x r00)) (* 864 (* r r x x r00 x00)) (* (- 18) (* r s s s x r00)) (* (- 450) (* s s x x r00)) (* (- 54) (* r s s x x r00)) (* (- 432) (* r r r s x r00 x00)) (* 6 (* x x x x s00)) (* 330 (* s x x x r00)) (* 90 (* r s x x x r00)) (* 216 (* r r r x x r00 x00)) (* 6 (* x x s00 s00 r00)) (* 90 (* r s s s r00 x00)) (* (- 144) (* r s s x r00 x00)) (* (- 90) (* x x x x r00)) (* (- 1836) (* r s x r00 x00)) (* (- 36) (* r x x x x r00)) (* 12 (* r r s s s00 s00 r00)) (* 2 (* s x x x s00 r00)) (* (- 1620) (* r r s x x00)) (* (- 1296) (* r s x x00)) (* 810 (* r r s s x00)) (* 108 (* s s x x00)) (* (- 18) (* s s s x00)) (* 6 (* s x x x x00)) (* 72 (* x x x x00)) (* (- 36) (* r s x s00 s00 r00)) (* (- 180) (* s x x r00 x00)) (* 6 (* s s s00 s00 r00)) (* 45 (* x x x)) (* 303 (* s x x x)) (* 135 (* s s x)) (* (- 144) (* r r s s s)) (* (- 135) (* s x x)) (* 432 (* r r s s x)) (* (- 162) (* r s s s)) (* (- 87) (* s s s s)) (* 486 (* r s s x)) (* 333 (* s s s x)) (* (- 486) (* r s x x)) (* (- 477) (* s s x x)) (* 162 (* r x x x)) (* (- 72) (* x x x x)) (* (- 6) (* s x x x x)) (* (- 12) (* s00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 9) (* ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 324 (* r r r x x x00)) (* 54 (* r r s s s x00)) (* (- 108) (* r r s s x x00)) (* (- 114) (* r s s s s)) (* (- 6) (* s s s s s)) (* 432 (* r s s s x)) (* 24 (* s s s s x)) (* (- 612) (* r s s x x)) (* (- 4) (* r s s s s s00)) (* (- 36) (* s s s x x)) (* 384 (* r s x x x)) (* 24 (* s s x x x)) (* 270 (* x x r00 x00)) (* (- 432) (* r r s x x)) (* (- 90) (* r x x x x)) (* (- 1728) (* r r s x r00 x00)) (* (- 36) (* x x x s00 r00 r00)) (* (- 18) (* s s x x x00)) (* 72 (* s x x s00 r00 r00)) (* 18 (* s s s x x00)) (* (- 6) (* s s s s x00)) (* (- 36) (* s s x s00 r00 r00)) (* (- 6) (* s s x s00 x00)) (* 12 (* s x x s00 x00)) (* (- 6) (* x x x s00 x00)) (* (- 72) (* s s s00 r00)) (* (- 216) (* r s s s00 r00)) (* (- 144) (* r r s s s00 r00)) (* (- 36) (* r s s s s00 r00)) (* 144 (* s x s00 r00)) (* 432 (* r s x s00 r00)) (* 288 (* r r s x s00 r00)) (* (- 6) (* s s x s00 r00)) (* 84 (* r s s x s00 r00)) (* (- 72) (* x x s00 r00)) (* (- 216) (* r x x s00 r00)) (* (- 144) (* r r x x s00 r00)) (* 30 (* s x x s00 r00)) (* (- 60) (* r s x x s00 r00)) (* 4 (* r x x x s00 s00)) (* (- 54) (* ?x1447 ?x1447 ?x1453 ?x1453 ?x1453 ?x1472)) (* 24 (* s s s s00)) (* (- 87) (* s s x s00)) (* 102 (* s x x s00)) (* (- 39) (* x x x s00)) (* 21 (* r s s s s00)) (* (- 102) (* r s s x s00)) (* 141 (* r s x x s00)) (* 270 (* s s r00 x00)) (* (- 60) (* r x x x s00)) (* 918 (* r s s r00 x00)) (* 57 (* s s s00 s00)) (* (- 114) (* s x s00 s00)) (* 4 (* r s x x x s00)) (* 57 (* x x s00 s00)) (* 36 (* r00 r00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 12 (* r r x x s00 s00 r00)) (* 162 (* x x x00)) (* (- 162) (* r s x x x00)) (* 54 (* r r s x x x00)) (* 162 (* s s x00)) (* (- 324) (* s x x00)) (* 24 (* r r x x x s00)) (* 2 (* r s s s s00 s00 r00)) (* 90 (* r x x x x00)) (* 2 (* s s x s00 s00 r00)) (* (- 4) (* r00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472 ?x1472)) (* (- 18) (* x x x s00 r00)) (* (- 4) (* r s s x s00 s00 r00)) (* (- 18) (* x x s00 x00)) (* 36 (* s x s00 x00)) (* (- 18) (* s s s00 x00)) (* (- 54) (* r s s s00 x00)) (* 864 (* r r s s r00 x00)) (* (- 36) (* r r s s s00 x00)) (* (- 6) (* r s s s s00 x00)) (* 108 (* r s x s00 x00)) (* 72 (* r r s x s00 x00)) (* 90 (* x x x r00 x00)) (* 12 (* r s s x s00 x00)) (* 36 (* r x x x r00 x00)) (* (- 54) (* r x x s00 x00)) (* (- 36) (* r r x x s00 x00)) (* (- 6) (* r s x x s00 x00)) (* (- 108) (* s s s00 r00 r00)) (* (- 324) (* r s s s00 r00 r00)) (* (- 216) (* r r s s s00 r00 r00)) (* (- 36) (* r s s s s00 r00 r00)) (* 216 (* s x s00 r00 r00)) (* 648 (* r s x s00 r00 r00)) (* 432 (* r r s x s00 r00 r00)) (* (- 540) (* s x r00 x00)) (* 72 (* r s s x s00 r00 r00)) (* (- 108) (* x x s00 r00 r00)) (* (- 324) (* r x x s00 r00 r00)) (* (- 216) (* r r x x s00 r00 r00)) (* (- 6) (* s s s s00 r00)) (* (- 36) (* r s x x s00 r00 r00)) (* 14 (* s s s s s00)) (* (- 48) (* s s s x s00)) (* 60 (* s s x x s00)) (* (- 32) (* s x x x s00)) (* 18 (* r s s s00 s00 r00)) (* 36 (* r r s x x r00 x00)) (* 18 (* r s x x r00 x00)) (* (- 4) (* r00 ?x1453 ?x1453 ?x1453 ?x1472 ?x1472)) (* 90 (* s x s00)) (* (- 45) (* x x s00)) (* (- 207) (* r s s s00)) (* (- 306) (* r r s s s00)) (* 414 (* r s x s00)) (* 612 (* r r s x s00)) (* (- 207) (* r x x s00)) (* (- 306) (* r r x x s00)) (* (- 144) (* r r r s s s00)) (* (- 48) (* r r s s s s00)) (* 288 (* r r r s x s00)) (* 120 (* r r s s x s00)) (* (- 144) (* r r r x x s00)) (* 24 (* ?x1447 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 96) (* r r s x x s00)) (* 2 (* r s x x s00 s00 r00)) (* 144 (* s s s x r00 r00)) (* (- 216) (* s s x x r00 r00)) (* 144 (* s x x x r00 r00)) (* 18 (* r x x s00 s00 r00)) (* (- 36) (* x x x x r00 r00)) (* (- 4) (* s x x s00 s00 r00)) (* (- 162) (* s x x x00)) (* 324 (* r r r s s x00)) (* 19 (* x x x s00 s00)) (* 108 (* r s s s r00 r00)) (* 216 (* r r s s s r00 r00)) (* (- 324) (* r s s x r00 r00)) (* (- 648) (* r r s s x r00 r00)) (* 648 (* r x x x00)) (* 108 (* r s s x x r00 r00)) (* 648 (* r r s x x r00 r00)) (* 324 (* r s x x r00 r00)) (* (- 108) (* r s s s x r00 r00)) (* 24 (* r00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 2 (* r00 s00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 36 (* r s s s s r00 r00)) (* (- 3) (* ?x1447 ?x1453 ?x1453 ?x1472 ?x1472 ?x1472)) (* (- 108) (* r x x x r00 r00)) (* (- 216) (* r r x x x r00 r00)) (* (- 36) (* r s x x x r00 r00)) (* 18 (* r s s s x00)) (* 54 (* r s s x x00)) (* 6 (* x00 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* (- 3) (* ?x1453 ?x1453 ?x1453 ?x1472 ?x1472)) (* 150 (* r r x x s00 s00)) (* 19 (* r s s s s00 s00)) (* 19 (* s s x s00 s00)) (* (- 34) (* r s s x s00 s00)) (* (- 90) (* x x x r00)) (* 1026 (* r s x x r00)) (* 270 (* s x x r00)) (* 90 (* s s s r00)) (* 342 (* r s s s r00)) (* (- 270) (* s s x r00)) (* (- 1026) (* r s s x r00)) (* 183 (* r s s s00 s00)) (* (- 342) (* r x x x r00)) (* (- 366) (* r s x s00 s00)) (* (- 324) (* r r x x x r00)) (* 972 (* r r s x x r00)) (* 183 (* r x x s00 s00)) (* 150 (* r r s s s00 s00)) (* (- 300) (* r r s x s00 s00)) (* (- 972) (* r r s s x r00)) (* (- 38) (* s x x s00 s00)) (* 11 (* r s x x s00 s00)) (* 324 (* r r s s s r00)) (* 810 (* r r x x x00)) (* (- 648) (* r r r s x x00)) (* 108 (* s s r00 r00 x00)) (* 144 (* r r x x x)) (* 324 (* r s s r00 r00 x00)) (* (- 216) (* s x r00 r00 x00)) (* (- 648) (* r s x r00 r00 x00)) (* 108 (* x x r00 r00 x00)) (* 324 (* r x x r00 r00 x00)) (* 216 (* r r s s r00 r00 x00)) (* (- 432) (* r r s x r00 r00 x00)) (* 216 (* r r x x r00 r00 x00)) (* 36 (* r s s s r00 r00 x00)) (* 36 (* s s x r00 r00 x00)) (* (- 72) (* r s s x r00 r00 x00)) (* (- 72) (* s x x r00 r00 x00)) (* 36 (* r s x x r00 r00 x00)) (* (- 2) (* ?x1447 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472 ?x1472)) (* 2 (* x x x s00 s00 r00)) (* (- 2) (* s00 ?x1447 ?x1447 ?x1453 ?x1453 ?x1472 ?x1472)) (* 36 (* x x x r00 r00 x00)) (* 24 (* r r r s s s00 s00)) (* (- 48) (* r r r s x s00 s00)) (* 24 (* r r r x x s00 s00)) (* 4 (* r r s s s s00 s00)) (* (- 8) (* r r s s x s00 s00)) (* 4 (* r r s x x s00 s00)) (* (- 36) (* r00 ?x1447 ?x1447 ?x1453 ?x1453 ?x1453 ?x1472)))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x1440 (* (- 108) ?x1410)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x1439 (* (- 16) ?x1248)))
 (let ((?x1120 (* s00 r00 r00 r00)))
 (let ((?x1435 (* (- 216) ?x1120)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x947 (* 432 ?x946)))
 (let ((?x869 (* s00 x00)))
 (let ((?x1193 (* 108 ?x869)))
 (let ((?x795 (* s00 s00 r00 r00)))
 (let ((?x796 (* 36 ?x795)))
 (let ((?x732 (* s00 s00 r00)))
 (let ((?x1076 (* 108 ?x732)))
 (let ((?x711 (* s00 r00 r00)))
 (let ((?x1064 (* 36 ?x711)))
 (let ((?x655 (* s00 s00)))
 (let ((?x1429 (* (- 51) ?x655)))
 (let ((?x629 (* s r00 r00)))
 (let ((?x928 (* (- 36) ?x629)))
 (let ((?x586 (* r00 x00)))
 (let ((?x1426 (* (- 108) ?x586)))
 (let ((?x577 (* s00 r00 x00)))
 (let ((?x1425 (* (- 216) ?x577)))
 (let ((?x490 (* s00 r00)))
 (let ((?x584 (* 54 ?x490)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1441 (+ ?x143 ?x1051 ?x584 ?x1425 ?x1426 (* (- 15) (* s s)) ?x928 ?x1429 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1064 ?x1076 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x796 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1193 (* 108 (* s x)) (* (- 108) (* x x)) ?x947 (* 12 (* s s s00)) ?x1435 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1439 (* 216 (* x x00)) ?x1440)))
 (let (($x1442 (= ?x1441 0)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x760 (* (- 2) ?x732)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x628 (* 24 ?x490)))
 (let ((?x1143 (+ ?x143 ?x1051 (* (- 24) (* r s)) (* 24 (* r s00)) ?x628 ?x615 ?x633 (* 54 (* r x)) (* 36 (* r x r00)) ?x928 ?x980 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1064 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x760 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x870 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x954 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1148 (= ?x1143 0)))
 (let ((?x712 (* 6 ?x711)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x605 (* 9 ?x490)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x809 (+ ?x47 ?x442 (* (- 9) (* r s)) (* 9 (* r s00)) ?x605 ?x600 ?x610 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x629) ?x668 (* 18 (* x r00)) ?x712 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x816 (= ?x809 0)))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x568 (* (- 6) ?x490)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x563 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x569 (+ ?x43 ?x563 ?x56 ?x44 ?x564 ?x565 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x568 ?x534)))
 (let (($x570 (= ?x569 0)))
 (let ((?x365 (* r00 r00)))
 (let ((?x366 (* 3 ?x365)))
 (let ((?x395 (* (- 1) s00)))
 (let (($x398 (= (+ s ?x395 (* (- 3) (* r r)) ?x366) 0)))
 (let (($x12808 (and $x398 $x570 $x816 $x1148 $x1442 (not (= ?x12802 0)))))
 (let ((?x7601 (+ 3 s ?x216)))
 (let ((?x1795 (+ x ?x344)))
 (let ((?x8531 (+ (* 2 (* r00 s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 6 (* s00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 9 (* s00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 36 (* r00 x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 6 (* x00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 6) (* ?x1795 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 6) (* s00 x00 ?x1795 ?x1795 ?x1795)) (* (- 24) (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 15 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 54) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 15 (* s00 s00 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 24 (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 2 (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 24) (* r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 3) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 6) (* s00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 54 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 8) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 9 (* s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 54 (* r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 6 (* x00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 3) (* ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 2) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 54) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 s00 ?x1795 ?x1795 ?x1795)) (* (- 2) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)))))
 (let (($x6544 (not (= ?x8531 0))))
 (let ((?x6129 (* 108 ?x1410)))
 (let ((?x6042 (* (- 9) s)))
 (let ((?x7480 (* r00 r00 s00)))
 (let ((?x6367 (* (- 36) ?x7480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x4995 (* 51 ?x655)))
 (let ((?x7551 (* r00 r00 s)))
 (let ((?x2086 (* 36 ?x7551)))
 (let ((?x4923 (* 16 ?x1248)))
 (let ((?x4731 (* (- 108) ?x869)))
 (let ((?x2300 (* (- 432) ?x946)))
 (let ((?x8437 (* 108 ?x586)))
 (let ((?x6134 (+ (* 216 (* r00 s00 x00)) ?x8437 (* (- 54) (* r00 s00)) (* 15 ?x609) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2300 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4923 (* (- 108) (* x s)) ?x2086 ?x4995 (* (- 108) (* r00 x)) ?x137 ?x6367 ?x6042 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6129)))
 (let (($x6137 (= ?x6134 0)))
 (let ((?x2384 (* 15 ?x655)))
 (let ((?x2382 (* 36 ?x941)))
 (let ((?x2255 (* (- 6) ?x869)))
 (let ((?x1811 (* 54 ?x586)))
 (let ((?x1609 (+ (* 24 (* s r)) ?x1811 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x609) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2255 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2086 ?x2382 ?x2384 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6367 (* 54 (* x00 r)) ?x6042 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x7547 (* 4 ?x655)))
 (let ((?x8957 (* 18 ?x586)))
 (let ((?x1805 (+ (* 9 (* s r)) ?x8957 (* (- 9) (* r00 s00)) (* (- 2) ?x609) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7551) ?x7547 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x7480) (* 18 (* x00 r)) ?x563 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x6488 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x563 ?x564 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x565 ?x534)))
 (let (($x4062 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) ?x365)) 0)))
 (let (($x1735 (and $x4062 (= ?x6488 0) (= ?x1805 0) (= ?x1609 0) $x6137 $x6544)))
 (rewrite (= $x1735 $x12808))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x6109 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (* 6 r)))
 (let ((?x7601 (+ 3 s ?x216)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1795 (+ x ?x344)))
 (let ((?x1447 (+ 1 r)))
 (let ((?x8531 (+ (* 2 (* r00 s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 6 (* s00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 9 (* s00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 36 (* r00 x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 6 (* x00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 6) (* ?x1795 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 6) (* s00 x00 ?x1795 ?x1795 ?x1795)) (* (- 24) (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 15 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 54) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 15 (* s00 s00 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 24 (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 2 (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 24) (* r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 3) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 6) (* s00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 54 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 8) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 9 (* s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 54 (* r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 6 (* x00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 3) (* ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 2) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 54) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 s00 ?x1795 ?x1795 ?x1795)) (* (- 2) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)))))
 (let (($x6544 (not (= ?x8531 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6129 (* 108 ?x1410)))
 (let ((?x6042 (* (- 9) s)))
 (let ((?x7480 (* r00 r00 s00)))
 (let ((?x6367 (* (- 36) ?x7480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x4995 (* 51 ?x655)))
 (let ((?x7551 (* r00 r00 s)))
 (let ((?x2086 (* 36 ?x7551)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4923 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x4731 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x2300 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x8437 (* 108 ?x586)))
 (let ((?x6134 (+ (* 216 (* r00 s00 x00)) ?x8437 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2300 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4923 (* (- 108) (* x s)) ?x2086 ?x4995 (* (- 108) (* r00 x)) ?x137 ?x6367 ?x6042 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6129)))
 (let (($x6137 (= ?x6134 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x4337 (+ (* (- 24) (* s r)) ?x615 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x633 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x870 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7551) ?x954 ?x980 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1051 (* 36 ?x7480) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x8982 (+ (* (- 9) (* s r)) ?x600 (* 9 (* r00 s00)) ?x610 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7551) ?x668 (* 18 (* r00 x)) ?x442 (* 6 ?x7480) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7468 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x442 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x4062 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x4062 (= ?x7468 0) (= ?x8982 0) (= ?x4337 0) $x6137 $x6544)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1742 (lambda ((r Int) (s Int) (x Int) )(let ((?x216 (* 6 r)))
 (let ((?x7601 (+ 3 s ?x216)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1795 (+ x ?x344)))
 (let ((?x1447 (+ 1 r)))
 (let ((?x8531 (+ (* 2 (* r00 s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 6 (* s00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 9 (* s00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 36 (* r00 x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 6 (* x00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 6) (* ?x1795 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 6) (* s00 x00 ?x1795 ?x1795 ?x1795)) (* (- 24) (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 15 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 54) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 15 (* s00 s00 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 24 (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 2 (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 24) (* r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 3) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 6) (* s00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 54 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 8) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 9 (* s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 54 (* r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 6 (* x00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 3) (* ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 2) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 54) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 s00 ?x1795 ?x1795 ?x1795)) (* (- 2) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)))))
 (let (($x6544 (not (= ?x8531 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6129 (* 108 ?x1410)))
 (let ((?x6042 (* (- 9) s)))
 (let ((?x7480 (* r00 r00 s00)))
 (let ((?x6367 (* (- 36) ?x7480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x4995 (* 51 ?x655)))
 (let ((?x7551 (* r00 r00 s)))
 (let ((?x2086 (* 36 ?x7551)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4923 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x4731 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x2300 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x8437 (* 108 ?x586)))
 (let ((?x6134 (+ (* 216 (* r00 s00 x00)) ?x8437 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2300 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4923 (* (- 108) (* x s)) ?x2086 ?x4995 (* (- 108) (* r00 x)) ?x137 ?x6367 ?x6042 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6129)))
 (let (($x6137 (= ?x6134 0)))
 (let ((?x2384 (* 15 ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x2382 (* 36 ?x941)))
 (let ((?x2255 (* (- 6) ?x869)))
 (let ((?x1811 (* 54 ?x586)))
 (let ((?x1609 (+ (* 24 (* s r)) ?x1811 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2255 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x2086 ?x2382 ?x2384 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x6367 (* 54 (* x00 r)) ?x6042 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x563 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x7547 (* 4 ?x655)))
 (let ((?x8957 (* 18 ?x586)))
 (let ((?x1805 (+ (* 9 (* s r)) ?x8957 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x7551) ?x7547 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x7480) (* 18 (* x00 r)) ?x563 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x533 (* r00 r00 r00)))
 (let ((?x534 (* 12 ?x533)))
 (let ((?x565 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x564 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x6488 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x563 ?x564 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x565 ?x534)))
 (let (($x4062 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1735 (and $x4062 (= ?x6488 0) (= ?x1805 0) (= ?x1609 0) $x6137 $x6544)))
 (let ((?x143 (* 9 s)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x4337 (+ (* (- 24) (* s r)) ?x615 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x633 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x870 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7551) ?x954 ?x980 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1051 (* 36 ?x7480) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x8982 (+ (* (- 9) (* s r)) ?x600 (* 9 (* r00 s00)) ?x610 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7551) ?x668 (* 18 (* r00 x)) ?x442 (* 6 ?x7480) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7468 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x442 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x533))))
 (let (($x7591 (and $x4062 (= ?x7468 0) (= ?x8982 0) (= ?x4337 0) $x6137 $x6544)))
 (rewrite (= $x7591 $x1735)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x341 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x216 (* 6 r)))
 (let ((?x217 (+ s ?x216 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x221 (+ (* 0 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 ?x212 r00 ?x213 ?x213 ?x213 ?x213) (* 2 ?x212 r00 ?x217 s00 s00 ?x213 ?x213) (* 6 s00 ?x213 ?x213 ?x213 ?x213) (* 9 s00 ?x213 ?x213 ?x213))))
 (let ((?x226 (+ (- ?x221 (* 36 ?x212 r00 ?x213 ?x213 ?x213 ?x213)) (* 36 ?x212 ?x212 r00 ?x217 ?x213 ?x213 x00) (* 0 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x231 (+ (- ?x226 (* 4 r00 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 6 ?x217 ?x213 ?x213 ?x213 x00) (* 36 ?x212 r00 r00 ?x217 ?x217 ?x213 ?x213))))
 (let ((?x237 (- (- ?x231 (* 9 ?x217 ?x213 ?x213 ?x213)) (* 6 ?x217 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x239 (- (- ?x237 (* 4 ?x212 r00 ?x217 ?x217 ?x217 ?x213 ?x213)) (* 36 r00 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x242 (+ ?x239 (* 0 ?x212 s00 ?x213 ?x213 ?x213 ?x213) (* 0 ?x212 r00 ?x217 s00 ?x213 ?x213 ?x213))))
 (let ((?x247 (- (- ?x242 (* 6 s00 ?x213 ?x213 ?x213 x00)) (* 24 ?x212 r00 ?x217 s00 ?x213 ?x213))))
 (let ((?x251 (+ (- ?x247 (* 24 ?x212 s00 ?x213 ?x213 ?x213)) (* 15 ?x212 ?x217 s00 s00 ?x213 ?x213) (* 36 ?x212 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x259 (+ (- ?x251 (* 54 r00 ?x213 ?x213 ?x213 ?x213)) (* 0 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 54 ?x212 ?x212 ?x217 ?x213 ?x213 x00) (* 0 ?x212 r00 r00 ?x213 ?x213 ?x213 x00) (* 0 ?x212 ?x212 r00 ?x213 ?x213 ?x213 x00) (* 0 ?x212 r00 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x268 (+ (- ?x259 (* 54 ?x212 ?x212 ?x217 ?x213 ?x213 ?x213)) (* 15 s00 s00 ?x213 ?x213 ?x213) (* 54 ?x212 ?x213 ?x213 ?x213 x00) (* 0 ?x212 r00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 r00 ?x217 ?x217 ?x213 ?x213 ?x213) (* 24 ?x212 r00 ?x217 ?x217 ?x213 ?x213) (* 2 ?x212 r00 ?x217 ?x217 s00 ?x213 ?x213))))
 (let ((?x275 (- (- ?x268 (* 24 r00 s00 ?x213 ?x213 ?x213)) (* 3 ?x212 ?x217 ?x217 ?x217 ?x213 ?x213))))
 (let ((?x277 (- (- ?x275 (* 6 ?x212 ?x217 s00 ?x213 ?x213 x00)) (* 36 ?x212 r00 r00 ?x217 s00 ?x213 ?x213))))
 (let ((?x283 (+ (- ?x277 (* 12 ?x217 s00 ?x213 ?x213 ?x213)) (* 24 ?x212 ?x212 ?x217 ?x217 ?x213 ?x213) (* 0 ?x212 ?x212 ?x217 ?x217 ?x213 ?x213 ?x213) (* 54 ?x212 r00 ?x217 ?x213 ?x213 x00) (* 24 ?x212 ?x217 ?x213 ?x213 ?x213))))
 (let ((?x291 (+ (- ?x283 (* 8 ?x212 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x217 s00 ?x213 ?x213 ?x213) (* 0 ?x212 ?x217 ?x213 ?x213 ?x213 ?x213) (* 9 ?x212 ?x217 s00 ?x213 ?x213) (* 0 ?x212 ?x212 ?x217 s00 ?x213 ?x213 ?x213))))
 (let ((?x295 (+ (- ?x291 (* 24 ?x212 ?x212 ?x217 s00 ?x213 ?x213)) (* 54 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x299 (+ (- ?x295 (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213)) (* 2 r00 ?x217 s00 ?x213 ?x213 ?x213))))
 (let ((?x303 (- (- ?x299 (* 12 ?x212 ?x217 ?x217 s00 ?x213 ?x213)) (* 9 ?x212 ?x217 ?x217 ?x213 ?x213))))
 (let ((?x307 (- (+ ?x303 (* 4 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 36 ?x212 r00 r00 ?x217 ?x213 ?x213 ?x213))))
 (let ((?x310 (+ ?x307 (* 0 ?x212 r00 r00 s00 ?x213 ?x213 ?x213) (* 6 ?x212 ?x217 ?x217 ?x213 ?x213 x00))))
 (let ((?x315 (+ (- ?x310 (* 3 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 36 ?x212 r00 r00 ?x217 ?x213 ?x213 x00) (* 24 r00 ?x217 ?x213 ?x213 ?x213))))
 (let ((?x319 (- (- ?x315 (* 2 ?x212 ?x212 ?x217 ?x217 ?x217 ?x213 ?x213)) (* 54 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x323 (+ ?x319 (* 2 r00 s00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 r00 s00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 s00 ?x213 ?x213 ?x213 x00))))
 (let ((?x328 (+ (- ?x323 (* 2 ?x212 ?x212 ?x217 ?x217 s00 ?x213 ?x213)) (* 0 ?x212 ?x217 ?x213 ?x213 ?x213 x00) (* 36 r00 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x334 (+ (- ?x328 (* 54 ?x212 r00 ?x217 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x212 ?x217 s00 s00 ?x213 ?x213) (* 36 r00 r00 ?x217 ?x213 ?x213 ?x213) (* 0 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let (($x338 (not (= (- ?x334 (* 36 ?x212 ?x212 r00 ?x217 ?x213 ?x213 ?x213)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x338))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x7518 (lambda ((r Int) (s Int) (x Int) )(let ((?x216 (* 6 r)))
 (let ((?x7601 (+ 3 s ?x216)))
 (let ((?x344 (* (- 1) s)))
 (let ((?x1795 (+ x ?x344)))
 (let ((?x1447 (+ 1 r)))
 (let ((?x8531 (+ (* 2 (* r00 s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 6 (* s00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 9 (* s00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 36 (* r00 x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 6 (* x00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 6) (* ?x1795 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 4) (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 6) (* s00 x00 ?x1795 ?x1795 ?x1795)) (* (- 24) (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 15 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 54) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 15 (* s00 s00 ?x1795 ?x1795 ?x1795)) (* 54 (* x00 ?x1447 ?x1795 ?x1795 ?x1795)) (* 24 (* r00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 2 (* r00 s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 24) (* r00 s00 ?x1795 ?x1795 ?x1795)) (* (- 3) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 6) (* s00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 r00 s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 54 (* r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 8) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 9 (* s00 ?x1447 ?x1795 ?x1795 ?x7601)) (* (- 24) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 54 (* r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 12) (* s00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 9) (* ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1795 ?x1795 ?x1795)) (* (- 36) (* r00 r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 6 (* x00 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* (- 3) (* ?x1795 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1447 ?x1795 ?x1795 ?x7601)) (* 24 (* r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 2) (* ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601 ?x7601)) (* (- 54) (* ?x1447 ?x1795 ?x1795 ?x1795 ?x1795)) (* 2 (* r00 s00 s00 ?x1795 ?x1795 ?x1795)) (* (- 2) (* s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601 ?x7601)) (* 36 (* r00 r00 x00 ?x1795 ?x1795 ?x1795)) (* (- 54) (* r00 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)) (* 4 (* s00 s00 ?x1447 ?x1447 ?x1795 ?x1795 ?x7601)) (* 36 (* r00 r00 ?x1795 ?x1795 ?x1795 ?x7601)) (* (- 36) (* r00 ?x1447 ?x1447 ?x1795 ?x1795 ?x1795 ?x7601)))))
 (let (($x6544 (not (= ?x8531 0))))
 (let ((?x1410 (* x00 x00)))
 (let ((?x6129 (* 108 ?x1410)))
 (let ((?x6042 (* (- 9) s)))
 (let ((?x7480 (* r00 r00 s00)))
 (let ((?x6367 (* (- 36) ?x7480)))
 (let ((?x137 (* 9 s00)))
 (let ((?x655 (* s00 s00)))
 (let ((?x4995 (* 51 ?x655)))
 (let ((?x7551 (* r00 r00 s)))
 (let ((?x2086 (* 36 ?x7551)))
 (let ((?x1248 (* s00 s00 s00)))
 (let ((?x4923 (* 16 ?x1248)))
 (let ((?x869 (* s00 x00)))
 (let ((?x4731 (* (- 108) ?x869)))
 (let ((?x946 (* r00 r00 r00 x00)))
 (let ((?x2300 (* (- 432) ?x946)))
 (let ((?x586 (* r00 x00)))
 (let ((?x8437 (* 108 ?x586)))
 (let ((?x6134 (+ (* 216 (* r00 s00 x00)) ?x8437 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2300 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x4731 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4923 (* (- 108) (* x s)) ?x2086 ?x4995 (* (- 108) (* r00 x)) ?x137 ?x6367 ?x6042 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6129)))
 (let (($x6137 (= ?x6134 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1051 (* (- 9) s00)))
 (let ((?x980 (* (- 15) ?x655)))
 (let ((?x941 (* r00 r00 x00)))
 (let ((?x954 (* (- 36) ?x941)))
 (let ((?x870 (* 6 ?x869)))
 (let ((?x609 (* s s)))
 (let ((?x633 (* 3 ?x609)))
 (let ((?x615 (* (- 54) ?x586)))
 (let ((?x4337 (+ (* (- 24) (* s r)) ?x615 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x633 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x870 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x7551) ?x954 ?x980 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1051 (* 36 ?x7480) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x442 (* (- 3) s00)))
 (let ((?x668 (* (- 4) ?x655)))
 (let ((?x610 (* 2 ?x609)))
 (let ((?x600 (* (- 18) ?x586)))
 (let ((?x8982 (+ (* (- 9) (* s r)) ?x600 (* 9 (* r00 s00)) ?x610 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x7551) ?x668 (* 18 (* r00 x)) ?x442 (* 6 ?x7480) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x7468 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x442 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x4062 (= (+ s00 ?x344 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x7591 (and $x4062 (= ?x7468 0) (= ?x8982 0) (= ?x4337 0) $x6137 $x6544)))
 (let ((?x213 (- x s)))
 (let ((?x217 (+ s ?x216 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x221 (+ (* 0 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 ?x212 r00 ?x213 ?x213 ?x213 ?x213) (* 2 ?x212 r00 ?x217 s00 s00 ?x213 ?x213) (* 6 s00 ?x213 ?x213 ?x213 ?x213) (* 9 s00 ?x213 ?x213 ?x213))))
 (let ((?x226 (+ (- ?x221 (* 36 ?x212 r00 ?x213 ?x213 ?x213 ?x213)) (* 36 ?x212 ?x212 r00 ?x217 ?x213 ?x213 x00) (* 0 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x231 (+ (- ?x226 (* 4 r00 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 6 ?x217 ?x213 ?x213 ?x213 x00) (* 36 ?x212 r00 r00 ?x217 ?x217 ?x213 ?x213))))
 (let ((?x237 (- (- ?x231 (* 9 ?x217 ?x213 ?x213 ?x213)) (* 6 ?x217 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x239 (- (- ?x237 (* 4 ?x212 r00 ?x217 ?x217 ?x217 ?x213 ?x213)) (* 36 r00 r00 s00 ?x213 ?x213 ?x213))))
 (let ((?x242 (+ ?x239 (* 0 ?x212 s00 ?x213 ?x213 ?x213 ?x213) (* 0 ?x212 r00 ?x217 s00 ?x213 ?x213 ?x213))))
 (let ((?x247 (- (- ?x242 (* 6 s00 ?x213 ?x213 ?x213 x00)) (* 24 ?x212 r00 ?x217 s00 ?x213 ?x213))))
 (let ((?x251 (+ (- ?x247 (* 24 ?x212 s00 ?x213 ?x213 ?x213)) (* 15 ?x212 ?x217 s00 s00 ?x213 ?x213) (* 36 ?x212 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x259 (+ (- ?x251 (* 54 r00 ?x213 ?x213 ?x213 ?x213)) (* 0 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 54 ?x212 ?x212 ?x217 ?x213 ?x213 x00) (* 0 ?x212 r00 r00 ?x213 ?x213 ?x213 x00) (* 0 ?x212 ?x212 r00 ?x213 ?x213 ?x213 x00) (* 0 ?x212 r00 r00 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x268 (+ (- ?x259 (* 54 ?x212 ?x212 ?x217 ?x213 ?x213 ?x213)) (* 15 s00 s00 ?x213 ?x213 ?x213) (* 54 ?x212 ?x213 ?x213 ?x213 x00) (* 0 ?x212 r00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 r00 ?x217 ?x217 ?x213 ?x213 ?x213) (* 24 ?x212 r00 ?x217 ?x217 ?x213 ?x213) (* 2 ?x212 r00 ?x217 ?x217 s00 ?x213 ?x213))))
 (let ((?x275 (- (- ?x268 (* 24 r00 s00 ?x213 ?x213 ?x213)) (* 3 ?x212 ?x217 ?x217 ?x217 ?x213 ?x213))))
 (let ((?x277 (- (- ?x275 (* 6 ?x212 ?x217 s00 ?x213 ?x213 x00)) (* 36 ?x212 r00 r00 ?x217 s00 ?x213 ?x213))))
 (let ((?x283 (+ (- ?x277 (* 12 ?x217 s00 ?x213 ?x213 ?x213)) (* 24 ?x212 ?x212 ?x217 ?x217 ?x213 ?x213) (* 0 ?x212 ?x212 ?x217 ?x217 ?x213 ?x213 ?x213) (* 54 ?x212 r00 ?x217 ?x213 ?x213 x00) (* 24 ?x212 ?x217 ?x213 ?x213 ?x213))))
 (let ((?x291 (+ (- ?x283 (* 8 ?x212 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x217 s00 ?x213 ?x213 ?x213) (* 0 ?x212 ?x217 ?x213 ?x213 ?x213 ?x213) (* 9 ?x212 ?x217 s00 ?x213 ?x213) (* 0 ?x212 ?x212 ?x217 s00 ?x213 ?x213 ?x213))))
 (let ((?x295 (+ (- ?x291 (* 24 ?x212 ?x212 ?x217 s00 ?x213 ?x213)) (* 54 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x299 (+ (- ?x295 (* 36 r00 r00 ?x213 ?x213 ?x213 ?x213)) (* 2 r00 ?x217 s00 ?x213 ?x213 ?x213))))
 (let ((?x303 (- (- ?x299 (* 12 ?x212 ?x217 ?x217 s00 ?x213 ?x213)) (* 9 ?x212 ?x217 ?x217 ?x213 ?x213))))
 (let ((?x307 (- (+ ?x303 (* 4 ?x212 s00 s00 ?x213 ?x213 ?x213)) (* 36 ?x212 r00 r00 ?x217 ?x213 ?x213 ?x213))))
 (let ((?x310 (+ ?x307 (* 0 ?x212 r00 r00 s00 ?x213 ?x213 ?x213) (* 6 ?x212 ?x217 ?x217 ?x213 ?x213 x00))))
 (let ((?x315 (+ (- ?x310 (* 3 ?x217 ?x217 ?x213 ?x213 ?x213)) (* 36 ?x212 r00 r00 ?x217 ?x213 ?x213 x00) (* 24 r00 ?x217 ?x213 ?x213 ?x213))))
 (let ((?x319 (- (- ?x315 (* 2 ?x212 ?x212 ?x217 ?x217 ?x217 ?x213 ?x213)) (* 54 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x323 (+ ?x319 (* 2 r00 s00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 r00 s00 s00 ?x213 ?x213 ?x213) (* 0 ?x212 s00 ?x213 ?x213 ?x213 x00))))
 (let ((?x328 (+ (- ?x323 (* 2 ?x212 ?x212 ?x217 ?x217 s00 ?x213 ?x213)) (* 0 ?x212 ?x217 ?x213 ?x213 ?x213 x00) (* 36 r00 r00 ?x213 ?x213 ?x213 x00))))
 (let ((?x334 (+ (- ?x328 (* 54 ?x212 r00 ?x217 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x212 ?x217 s00 s00 ?x213 ?x213) (* 36 r00 r00 ?x217 ?x213 ?x213 ?x213) (* 0 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let (($x338 (not (= (- ?x334 (* 36 ?x212 ?x212 r00 ?x217 ?x213 ?x213 ?x213)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x340 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x338))))
 (rewrite (= $x340 $x7591)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x342 (asserted $x341)))
 (let ((@x4293 (mp (mp @x342 (quant-intro (proof-bind ?x7518) (= $x341 $x6109)) $x6109) (rewrite (= $x6109 $x6109)) $x6109)))
 (let ((@x4512 (mp (mp @x4293 (quant-intro (proof-bind ?x1742) (= $x6109 $x1741)) $x1741) (quant-intro (proof-bind ?x1936) (= $x1741 $x3442)) $x3442)))
 (let ((@x8761 (mp (mp~ @x4512 (sk (~ $x3442 $x10944)) $x10944) (rewrite (= $x10944 $x5819)) $x5819)))
 (let ((@x8764 (and-elim @x8761 $x10992)))
 (let ((@x5681 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10992) $x4899)) @x8764 $x4899)))
 (let (($x6937 (>= ?x10990 0)))
 (let ((@x1656 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x10992) $x6937)) @x8764 $x6937)))
 (let (($x6935 (<= ?x3455 0)))
 (let ((@x4292 (and-elim @x8761 $x8455)))
 (let ((@x9516 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8455) $x6935)) @x4292 $x6935)))
 (let (($x1267 (>= ?x3455 0)))
 (let ((@x1338 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x8455) $x1267)) @x4292 $x1267)))
 (let (($x718 (<= ?x5105 0)))
 (let ((@x7192 (and-elim @x8761 $x3648)))
 (let ((@x12066 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3648) $x718)) @x7192 $x718)))
 (let (($x6933 (>= ?x5105 0)))
 (let ((@x9610 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3648) $x6933)) @x7192 $x6933)))
 (let (($x6939 (<= ?x5414 0)))
 (let ((@x4294 (and-elim @x8761 $x9619)))
 (let ((@x2659 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9619) $x6939)) @x4294 $x6939)))
 (let (($x6832 (>= ?x5414 0)))
 (let ((@x8425 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9619) $x6832)) @x4294 $x6832)))
 (let (($x3614 (not (<= ?x5822 0))))
 (let (($x6827 (>= ?x5822 0)))
 (let ((@x6054 ((_ th-lemma arith) (hypothesis (not $x6827)) @x1656 @x5681 @x9610 @x12066 @x8425 @x2659 @x8425 @x2659 @x9610 @x12066 @x1338 @x9516 @x1656 @x5681 false)))
 (let ((@x8334 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x5815 $x3614 (not $x6827))) (and-elim @x8761 $x6837) (or $x3614 (not $x6827)))))
 ((_ th-lemma arith) (unit-resolution @x8334 (lemma @x6054 $x6827) $x3614) @x1656 @x5681 @x9610 @x12066 @x8425 @x2659 @x8425 @x2659 @x9610 @x12066 @x1338 @x9516 @x1656 @x5681 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        45
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2530
 :arith-nonlinear-bounds    38
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 433
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                5.99
 :memory                    4.64
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                4765480
 :num-checks                1
 :propagations              12
 :rlimit-count              66157
 :time                      0.06
 :total-time                0.08)
