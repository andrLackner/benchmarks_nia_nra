unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x1024 (* q!3 d!1 d!1)))
 (let ((?x529 (* 4 (* x!0 d!1))))
 (let ((?x700 (* (- 4) (* r!2 d!1))))
 (let ((?x594 (* q!3 d!1)))
 (let ((?x370 (* (- 2) ?x594)))
 (let ((?x275 (* r00 d00)))
 (let ((?x276 (* 4 ?x275)))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x1047 (* 8 r!2)))
 (let ((?x568 (+ ?x1047 ?x140 ?x188 ?x172 ?x238 ?x276 (* 8 d!1) (* (- 4) (* d!1 2)) ?x370 ?x700 ?x529 ?x1024)))
 (let (($x1072 (not (= ?x568 0))))
 (let ((?x589 (+ ?x1047 ?x140 ?x188 ?x172 ?x238 ?x276 (* 16 d!1) (* (- 8) (* d!1 2)) ?x370 ?x700 ?x529 ?x1024)))
 (let (($x567 (not (= ?x589 0))))
 (let ((?x1035 (+ ?x1047 ?x140 ?x188 ?x172 ?x238 ?x276 (* (- 8) d!1) ?x370 ?x700 (* 2 (* d!1 4)) ?x529 ?x1024)))
 (let (($x1000 (not (= ?x1035 0))))
 (let ((?x421 (+ ?x1047 ?x140 ?x188 ?x172 ?x238 ?x276 ?x370 ?x700 ?x529 ?x1024)))
 (let (($x910 (= ?x421 0)))
 (let (($x641 (not $x910)))
 (let (($x758 (or $x641 $x1000 $x567 $x1072)))
 (let (($x605 (and $x910 $x758)))
 (let ((?x32 (* 8 r00)))
 (let ((?x487 (+ ?x32 ?x41 (* 4 ?x158) (* (- 2) ?x237) (* (- 4) ?x275) (* (- 4) (* d!1 x!0)) (* 4 (* d!1 r!2)) (* 2 ?x594) (* (- 8) r!2) (* (- 1) ?x1024))))
 (let (($x664 (= ?x487 0)))
 (let (($x929 (not $x664)))
 (let (($x767 (and $x664 $x929)))
 (let ((@x468 (monotonicity (rewrite (= $x641 $x929)) (rewrite (= $x1000 $x929)) (rewrite (= $x567 $x929)) (rewrite (= $x1072 $x929)) (= $x758 (or $x929 $x929 $x929 $x929)))))
 (let ((@x734 (trans @x468 (rewrite (= (or $x929 $x929 $x929 $x929) $x929)) (= $x758 $x929))))
 (let ((?x574 (* d!1 r!2)))
 (let ((?x547 (* (- 4) ?x574)))
 (let ((?x424 (* d!1 x!0)))
 (let ((?x456 (* 4 ?x424)))
 (let ((?x647 (+ ?x140 ?x188 ?x172 ?x238 ?x276 ?x456 ?x547 ?x370 ?x1047 ?x1024)))
 (let (($x285 (= ?x647 0)))
 (let ((@x142 (rewrite (= (+ ?x1047 ?x140 ?x188 ?x172 ?x238 ?x276 ?x370 ?x547 ?x456 ?x1024) ?x647))))
 (let ((@x167 (monotonicity (rewrite (= ?x700 ?x547)) (rewrite (= ?x529 ?x456)) (= ?x421 (+ ?x1047 ?x140 ?x188 ?x172 ?x238 ?x276 ?x370 ?x547 ?x456 ?x1024)))))
 (let ((@x550 (trans (monotonicity (trans @x167 @x142 (= ?x421 ?x647)) (= $x910 $x285)) (rewrite (= $x285 $x664)) (= $x910 $x664))))
 (let ((@x307 (trans (monotonicity @x550 @x734 (= $x605 $x767)) (rewrite (= $x767 false)) (= $x605 false))))
 (let (($x432 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1111 (* q d d)))
 (let ((?x631 (* 4 (* x d))))
 (let ((?x732 (* r d)))
 (let ((?x747 (* (- 4) ?x732)))
 (let ((?x731 (* (- 2) (* q d))))
 (let ((?x816 (* 8 d)))
 (let ((?x275 (* r00 d00)))
 (let ((?x276 (* 4 ?x275)))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x169 (* 8 r)))
 (let ((?x677 (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x816 (* (- 4) (* d 2)) ?x731 ?x747 ?x631 ?x1111)))
 (let ((?x824 (* 16 d)))
 (let ((?x807 (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x824 (* (- 8) (* d 2)) ?x731 ?x747 ?x631 ?x1111)))
 (let ((?x763 (* 2 (* d 4))))
 (let ((?x748 (* (- 8) d)))
 (let (($x516 (= (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x748 ?x731 ?x747 ?x763 ?x631 ?x1111) 0)))
 (let (($x1060 (= (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x731 ?x747 ?x631 ?x1111) 0)))
 (let (($x558 (or (not $x1060) (not $x516) (not (= ?x807 0)) (not (= ?x677 0)))))
 (and $x1060 $x558))))))))))))))))))))))))) :qid k!31))
 ))
 (let (($x263 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x419 (* 4 (* d00 r00))))
 (let ((?x667 (+ 2 d)))
 (let ((?x1086 (* ?x667 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x795 (* 4 (* ?x667 r))))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x748 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x360 (* (- 8) x)))
 (let ((?x385 (* 16 r)))
 (let ((?x1088 (+ ?x385 ?x360 ?x30 ?x748 ?x140 ?x795 ?x172 ?x188 (* (+ (- 4) q) ?x667 ?x667) (* (- 2) (* (+ (- 4) q) ?x667)) ?x238 (* (- 4) ?x1086) ?x419)))
 (let (($x1061 (not (= ?x1088 16))))
 (let ((?x958 (* ?x667 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x987 (+ ?x385 ?x360 ?x30 (* (- 16) d) ?x140 ?x795 ?x172 ?x188 (* (+ (- 8) q) ?x667 ?x667) (* (- 2) (* (+ (- 8) q) ?x667)) ?x238 (* (- 4) ?x958) ?x419)))
 (let (($x1012 (not (= ?x987 32))))
 (let ((?x997 (+ ?x385 ?x360 ?x30 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x238 (* (- 4) (* ?x667 (+ (* 2 r) (* (- 1) x) q))) ?x419)))
 (let (($x999 (not (= ?x997 0))))
 (let ((?x446 (* (- 4) (* ?x667 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x816 (* 8 d)))
 (let ((?x447 (+ ?x385 ?x360 ?x30 ?x816 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 (+ 4 q)) (* (- 2) (* ?x667 (+ 4 q))) ?x238 ?x446 ?x419)))
 (let (($x242 (not (= ?x447 (- 16)))))
 (let ((?x631 (* 4 (* x d))))
 (let ((?x169 (* 8 r)))
 (let ((?x663 (+ ?x169 ?x140 ?x631 ?x172 ?x188 (* d d q) (* (- 2) (* d q)) ?x238 (* (- 4) (* d r)) ?x419)))
 (let (($x666 (= ?x663 0)))
 (and $x666 (or $x242 $x999 $x1012 $x1061)))))))))))))))))))))))))))))))) :qid k!31))
 ))
 (let ((?x799 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1111 (* q d d)))
 (let ((?x631 (* 4 (* x d))))
 (let ((?x732 (* r d)))
 (let ((?x747 (* (- 4) ?x732)))
 (let ((?x731 (* (- 2) (* q d))))
 (let ((?x816 (* 8 d)))
 (let ((?x275 (* r00 d00)))
 (let ((?x276 (* 4 ?x275)))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x169 (* 8 r)))
 (let ((?x677 (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x816 (* (- 4) (* d 2)) ?x731 ?x747 ?x631 ?x1111)))
 (let ((?x824 (* 16 d)))
 (let ((?x807 (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x824 (* (- 8) (* d 2)) ?x731 ?x747 ?x631 ?x1111)))
 (let ((?x763 (* 2 (* d 4))))
 (let ((?x748 (* (- 8) d)))
 (let (($x516 (= (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x748 ?x731 ?x747 ?x763 ?x631 ?x1111) 0)))
 (let (($x1060 (= (+ ?x169 ?x140 ?x188 ?x172 ?x238 ?x276 ?x731 ?x747 ?x631 ?x1111) 0)))
 (let (($x558 (or (not $x1060) (not $x516) (not (= ?x807 0)) (not (= ?x677 0)))))
 (let (($x913 (and $x1060 $x558)))
 (let ((?x419 (* 4 (* d00 r00))))
 (let ((?x667 (+ 2 d)))
 (let ((?x1086 (* ?x667 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x795 (* 4 (* ?x667 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x360 (* (- 8) x)))
 (let ((?x385 (* 16 r)))
 (let ((?x1088 (+ ?x385 ?x360 ?x30 ?x748 ?x140 ?x795 ?x172 ?x188 (* (+ (- 4) q) ?x667 ?x667) (* (- 2) (* (+ (- 4) q) ?x667)) ?x238 (* (- 4) ?x1086) ?x419)))
 (let (($x1061 (not (= ?x1088 16))))
 (let ((?x958 (* ?x667 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x987 (+ ?x385 ?x360 ?x30 (* (- 16) d) ?x140 ?x795 ?x172 ?x188 (* (+ (- 8) q) ?x667 ?x667) (* (- 2) (* (+ (- 8) q) ?x667)) ?x238 (* (- 4) ?x958) ?x419)))
 (let (($x1012 (not (= ?x987 32))))
 (let ((?x997 (+ ?x385 ?x360 ?x30 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x238 (* (- 4) (* ?x667 (+ (* 2 r) (* (- 1) x) q))) ?x419)))
 (let (($x999 (not (= ?x997 0))))
 (let ((?x446 (* (- 4) (* ?x667 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x447 (+ ?x385 ?x360 ?x30 ?x816 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 (+ 4 q)) (* (- 2) (* ?x667 (+ 4 q))) ?x238 ?x446 ?x419)))
 (let (($x242 (not (= ?x447 (- 16)))))
 (let ((?x663 (+ ?x169 ?x140 ?x631 ?x172 ?x188 (* d d q) (* (- 2) (* d q)) ?x238 (* (- 4) (* d r)) ?x419)))
 (let (($x666 (= ?x663 0)))
 (let (($x754 (and $x666 (or $x242 $x999 $x1012 $x1061))))
 (rewrite (= $x754 $x913))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1093 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x419 (* 4 (* d00 r00))))
 (let ((?x667 (+ 2 d)))
 (let ((?x1086 (* ?x667 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x795 (* 4 (* ?x667 r))))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x748 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x360 (* (- 8) x)))
 (let ((?x385 (* 16 r)))
 (let ((?x1088 (+ ?x385 ?x360 ?x30 ?x748 ?x140 ?x795 ?x172 ?x188 (* (+ (- 4) q) ?x667 ?x667) (* (- 2) (* (+ (- 4) q) ?x667)) ?x238 (* (- 4) ?x1086) ?x419)))
 (let (($x1061 (not (= ?x1088 16))))
 (let ((?x446 (* (- 4) (* ?x667 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x816 (* 8 d)))
 (let ((?x447 (+ ?x385 ?x360 ?x30 ?x816 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 (+ 4 q)) (* (- 2) (* ?x667 (+ 4 q))) ?x238 ?x446 ?x419)))
 (let (($x242 (not (= ?x447 (- 16)))))
 (let ((?x958 (* ?x667 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x987 (+ ?x385 ?x360 ?x30 (* (- 16) d) ?x140 ?x795 ?x172 ?x188 (* (+ (- 8) q) ?x667 ?x667) (* (- 2) (* (+ (- 8) q) ?x667)) ?x238 (* (- 4) ?x958) ?x419)))
 (let (($x1012 (not (= ?x987 32))))
 (let ((?x997 (+ ?x385 ?x360 ?x30 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x238 (* (- 4) (* ?x667 (+ (* 2 r) (* (- 1) x) q))) ?x419)))
 (let (($x999 (not (= ?x997 0))))
 (let ((?x631 (* 4 (* x d))))
 (let ((?x169 (* 8 r)))
 (let ((?x663 (+ ?x169 ?x140 ?x631 ?x172 ?x188 (* d d q) (* (- 2) (* d q)) ?x238 (* (- 4) (* d r)) ?x419)))
 (let (($x666 (= ?x663 0)))
 (and $x666 (or $x999 $x1012 $x242 $x1061)))))))))))))))))))))))))))))))) :qid k!31))
 ))
 (let ((?x512 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x419 (* 4 (* d00 r00))))
 (let ((?x667 (+ 2 d)))
 (let ((?x1086 (* ?x667 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x795 (* 4 (* ?x667 r))))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x748 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x360 (* (- 8) x)))
 (let ((?x385 (* 16 r)))
 (let ((?x1088 (+ ?x385 ?x360 ?x30 ?x748 ?x140 ?x795 ?x172 ?x188 (* (+ (- 4) q) ?x667 ?x667) (* (- 2) (* (+ (- 4) q) ?x667)) ?x238 (* (- 4) ?x1086) ?x419)))
 (let (($x1061 (not (= ?x1088 16))))
 (let ((?x958 (* ?x667 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x987 (+ ?x385 ?x360 ?x30 (* (- 16) d) ?x140 ?x795 ?x172 ?x188 (* (+ (- 8) q) ?x667 ?x667) (* (- 2) (* (+ (- 8) q) ?x667)) ?x238 (* (- 4) ?x958) ?x419)))
 (let (($x1012 (not (= ?x987 32))))
 (let ((?x997 (+ ?x385 ?x360 ?x30 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 q) (* (- 2) (* ?x667 q)) ?x238 (* (- 4) (* ?x667 (+ (* 2 r) (* (- 1) x) q))) ?x419)))
 (let (($x999 (not (= ?x997 0))))
 (let ((?x446 (* (- 4) (* ?x667 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x816 (* 8 d)))
 (let ((?x447 (+ ?x385 ?x360 ?x30 ?x816 ?x140 ?x795 ?x172 ?x188 (* ?x667 ?x667 (+ 4 q)) (* (- 2) (* ?x667 (+ 4 q))) ?x238 ?x446 ?x419)))
 (let (($x242 (not (= ?x447 (- 16)))))
 (let ((?x631 (* 4 (* x d))))
 (let ((?x169 (* 8 r)))
 (let ((?x663 (+ ?x169 ?x140 ?x631 ?x172 ?x188 (* d d q) (* (- 2) (* d q)) ?x238 (* (- 4) (* d r)) ?x419)))
 (let (($x666 (= ?x663 0)))
 (let (($x754 (and $x666 (or $x242 $x999 $x1012 $x1061))))
 (let (($x1092 (and $x666 (or $x999 $x1012 $x242 $x1061))))
 (rewrite (= $x1092 $x754)))))))))))))))))))))))))))))))))))
 ))
 (let (($x133 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x53 (* 4 d00 r00)))
 (let ((?x114 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x118 (- (+ (- (* 8 ?x114) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x124 (- (+ (- ?x118 ?x41) (* ?x62 ?x62 (- q 8))) (* 2 ?x62 (- q 8)))))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x97 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x105 (- (+ (- (- (+ ?x97 ?x63) ?x39) ?x41) (* ?x62 ?x62 (- q 4))) (* 2 ?x62 (- q 4)))))
 (let ((?x108 (- (+ ?x105 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x82 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x88 (+ (- (+ (- ?x82 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x92 (= (+ (- ?x88 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) 0)))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 (+ q 4))) (* 2 ?x62 (+ q 4)))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x131 (or (not (= (+ ?x74 ?x53) 0)) (not $x92) (not (= (+ ?x108 ?x53) 0)) (not (= (+ (- (+ ?x124 ?x49) (* 4 ?x62 ?x114)) ?x53) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x45 (+ (- (- (+ (- (* 8 r) ?x32) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (and (= ?x54 0) $x131)))))))))))))))))))))))) :qid k!31))
 ))
 (let (($x804 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x419 (* 4 (* d00 r00))))
 (let ((?x520 (+ 2 d)))
 (let ((?x1008 (* ?x520 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x137 (* 4 (* ?x520 r))))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x430 (* (- 8) d)))
 (let ((?x166 (* 8 q)))
 (let ((?x360 (* (- 8) x)))
 (let ((?x932 (* 16 r)))
 (let ((?x448 (+ ?x932 ?x360 ?x166 ?x430 ?x140 ?x137 ?x172 ?x188 (* (+ (- 4) q) ?x520 ?x520) (* (- 2) (* (+ (- 4) q) ?x520)) ?x238 (* (- 4) ?x1008) ?x419)))
 (let ((?x703 (* (- 4) (* ?x520 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x169 (* 8 d)))
 (let ((?x788 (+ ?x932 ?x360 ?x166 ?x169 ?x140 ?x137 ?x172 ?x188 (* ?x520 ?x520 (+ 4 q)) (* (- 2) (* ?x520 (+ 4 q))) ?x238 ?x703 ?x419)))
 (let ((?x828 (* ?x520 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x612 (+ ?x932 ?x360 ?x166 (* (- 16) d) ?x140 ?x137 ?x172 ?x188 (* (+ (- 8) q) ?x520 ?x520) (* (- 2) (* (+ (- 8) q) ?x520)) ?x238 (* (- 4) ?x828) ?x419)))
 (let ((?x163 (+ ?x932 ?x360 ?x166 ?x140 ?x137 ?x172 ?x188 (* ?x520 ?x520 q) (* (- 2) (* ?x520 q)) ?x238 (* (- 4) (* ?x520 (+ (* 2 r) (* (- 1) x) q))) ?x419)))
 (let (($x662 (or (not (= ?x163 0)) (not (= ?x612 32)) (not (= ?x788 (- 16))) (not (= ?x448 16)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x226 (+ ?x30 ?x140 (* 4 (* x d)) ?x172 ?x188 ?x44 (* (- 2) (* d q)) ?x238 (* (- 4) (* d r)) ?x419)))
 (and (= ?x226 0) $x662))))))))))))))))))))))))))) :qid k!31))
 ))
 (let ((?x806 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x419 (* 4 (* d00 r00))))
 (let ((?x520 (+ 2 d)))
 (let ((?x1008 (* ?x520 (+ (- 2) (* 2 r) (* (- 1) x) q (* (- 1) d)))))
 (let ((?x237 (* d00 q00)))
 (let ((?x238 (* 2 ?x237)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x188 (* (- 1) ?x41)))
 (let ((?x158 (* d00 x00)))
 (let ((?x172 (* (- 4) ?x158)))
 (let ((?x137 (* 4 (* ?x520 r))))
 (let ((?x140 (* (- 8) r00)))
 (let ((?x430 (* (- 8) d)))
 (let ((?x166 (* 8 q)))
 (let ((?x360 (* (- 8) x)))
 (let ((?x932 (* 16 r)))
 (let ((?x448 (+ ?x932 ?x360 ?x166 ?x430 ?x140 ?x137 ?x172 ?x188 (* (+ (- 4) q) ?x520 ?x520) (* (- 2) (* (+ (- 4) q) ?x520)) ?x238 (* (- 4) ?x1008) ?x419)))
 (let ((?x703 (* (- 4) (* ?x520 (+ 2 (* 2 r) (* (- 1) x) q d)))))
 (let ((?x169 (* 8 d)))
 (let ((?x788 (+ ?x932 ?x360 ?x166 ?x169 ?x140 ?x137 ?x172 ?x188 (* ?x520 ?x520 (+ 4 q)) (* (- 2) (* ?x520 (+ 4 q))) ?x238 ?x703 ?x419)))
 (let ((?x828 (* ?x520 (+ (- 4) (* 2 r) (* (- 1) x) q (* (- 2) d)))))
 (let ((?x612 (+ ?x932 ?x360 ?x166 (* (- 16) d) ?x140 ?x137 ?x172 ?x188 (* (+ (- 8) q) ?x520 ?x520) (* (- 2) (* (+ (- 8) q) ?x520)) ?x238 (* (- 4) ?x828) ?x419)))
 (let ((?x163 (+ ?x932 ?x360 ?x166 ?x140 ?x137 ?x172 ?x188 (* ?x520 ?x520 q) (* (- 2) (* ?x520 q)) ?x238 (* (- 4) (* ?x520 (+ (* 2 r) (* (- 1) x) q))) ?x419)))
 (let (($x662 (or (not (= ?x163 0)) (not (= ?x612 32)) (not (= ?x788 (- 16))) (not (= ?x448 16)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x226 (+ ?x30 ?x140 (* 4 (* x d)) ?x172 ?x188 ?x44 (* (- 2) (* d q)) ?x238 (* (- 4) (* d r)) ?x419)))
 (let (($x256 (and (= ?x226 0) $x662)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x114 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x118 (- (+ (- (* 8 ?x114) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x124 (- (+ (- ?x118 ?x41) (* ?x62 ?x62 (- q 8))) (* 2 ?x62 (- q 8)))))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x32 (* 8 r00)))
 (let ((?x97 (- (* 8 (- (- (+ (- (* 2 r) x) q) d) 2)) ?x32)))
 (let ((?x105 (- (+ (- (- (+ ?x97 ?x63) ?x39) ?x41) (* ?x62 ?x62 (- q 4))) (* 2 ?x62 (- q 4)))))
 (let ((?x108 (- (+ ?x105 ?x49) (* 4 ?x62 (- (- (+ (- (* 2 r) x) q) d) 2)))))
 (let ((?x82 (- (+ (- (* 8 (+ (- (* 2 r) x) q)) ?x32) ?x63) ?x39)))
 (let ((?x88 (+ (- (+ (- ?x82 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x92 (= (+ (- ?x88 (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53) 0)))
 (let ((?x64 (+ (- (* 8 (+ (- (* 2 r) x) q d 2)) ?x32) ?x63)))
 (let ((?x71 (- (+ (- (- ?x64 ?x39) ?x41) (* ?x62 ?x62 (+ q 4))) (* 2 ?x62 (+ q 4)))))
 (let ((?x74 (- (+ ?x71 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q d 2)))))
 (let (($x131 (or (not (= (+ ?x74 ?x53) 0)) (not $x92) (not (= (+ ?x108 ?x53) 0)) (not (= (+ (- (+ ?x124 ?x49) (* 4 ?x62 ?x114)) ?x53) 0)))))
 (let ((?x48 (- (+ (- (- (+ (- ?x30 ?x32) (* 4 d x)) ?x39) ?x41) ?x44) (* 2 d q))))
 (let (($x132 (and (= (+ (- (+ ?x48 ?x49) (* 4 d r)) ?x53) 0) $x131)))
 (rewrite (= $x132 $x256)))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1097 (trans (quant-intro (proof-bind ?x806) (= $x133 $x804)) (elim-unused (= $x804 $x1093)) (= $x133 $x1093))))
 (let ((@x27 (asserted $x133)))
 (let ((@x951 (mp (mp @x27 @x1097 $x1093) (quant-intro (proof-bind ?x512) (= $x1093 $x263)) $x263)))
 (let ((@x715 (mp (mp @x951 (rewrite (= $x263 $x263)) $x263) (quant-intro (proof-bind ?x799) (= $x263 $x432)) $x432)))
 (mp (mp~ @x715 (sk (~ $x432 $x605)) $x605) @x307 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:max-memory   19.53
 :memory       19.17
 :num-allocs   417548
 :num-checks   1
 :rlimit-count 2408
 :time         0.01
 :total-time   0.02)
