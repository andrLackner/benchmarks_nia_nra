unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x615 (* r!2 r!2)))
 (let ((?x1219 (* 3 ?x615)))
 (let ((?x1179 (* (- 1) s!1)))
 (let ((?x250 (* r00 r00)))
 (let ((?x264 (* (- 3) ?x250)))
 (let ((?x1070 (+ s00 ?x264 ?x1179 ?x1219)))
 (let (($x1268 (<= ?x1070 0)))
 (let (($x1079 (= ?x1070 0)))
 (let ((?x1215 (* 6 r!2)))
 (let ((?x630 (+ 3 s!1 ?x1215)))
 (let ((?x1211 (+ ?x1179 x!0)))
 (let ((?x1191 (+ 1 r!2)))
 (let ((?x1100 (* ?x1191 ?x1191 ?x1191 ?x1191 ?x1191 ?x1191 ?x1191 ?x1211 ?x1211 ?x1211 ?x1211 ?x1211 ?x1211 ?x630 ?x630 ?x630 ?x630 ?x630 ?x1070)))
 (let (($x631 (= ?x1100 0)))
 (let (($x233 (not $x631)))
 (let ((?x1295 (* x00 x00)))
 (let ((?x293 (* 108 ?x1295)))
 (let ((?x1214 (* r00 r00 s!1)))
 (let ((?x334 (* 36 ?x1214)))
 (let ((?x1133 (* s00 s00 s00)))
 (let ((?x1037 (* 16 ?x1133)))
 (let ((?x831 (* r00 r00 r00 x00)))
 (let ((?x1338 (* (- 432) ?x831)))
 (let ((?x754 (* s00 x00)))
 (let ((?x857 (* (- 108) ?x754)))
 (let ((?x596 (* s00 r00 r00)))
 (let ((?x529 (* (- 36) ?x596)))
 (let ((?x540 (* s00 s00)))
 (let ((?x1106 (* 51 ?x540)))
 (let ((?x471 (* r00 x00)))
 (let ((?x486 (* 108 ?x471)))
 (let ((?x1233 (* (- 9) s!1)))
 (let ((?x137 (* 9 s00)))
 (let ((?x465 (+ ?x137 (* 15 (* s!1 s!1)) (* (- 54) (* s00 r00)) ?x1233 (* 216 (* s00 r00 x00)) (* (- 4) (* s!1 s!1 s!1)) ?x486 (* 108 (* s00 r00 s!1)) ?x1106 (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 432 (* r00 r00 r00 x!0)) (* (- 12) (* s00 s!1 s!1)) ?x529 (* (- 108) (* s00 s00 r00)) (* (- 216) (* x00 x!0)) (* (- 108) (* s!1 x!0)) (* (- 36) (* s00 s00 r00 r00)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) ?x857 (* (- 108) (* r00 x!0)) ?x1338 (* (- 216) (* r00 r00 r00 s!1)) (* 216 (* s00 r00 r00 r00)) (* 108 (* x!0 x!0)) ?x1037 (* 108 (* s00 x!0)) ?x334 ?x293 (* 108 (* x00 s!1)))))
 (let ((?x1165 (+ ?x137 (* (- 3) (* s!1 s!1)) (* (- 24) (* s00 r00)) ?x1233 (* 54 ?x471) (* 2 (* s00 r00 s!1)) (* 15 ?x540) ?x529 (* 2 (* s00 s00 r00)) (* (- 6) (* s!1 x!0)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* (- 6) ?x754) (* (- 54) (* r00 x!0)) (* (- 24) (* s00 r!2)) (* 36 (* r00 r00 x00)) (* (- 2) (* s00 s!1 r!2)) (* (- 4) (* r00 s!1 s!1)) (* 24 (* s!1 r!2)) (* 36 (* r00 x00 r!2)) (* 4 (* s00 s00 r!2)) (* 6 (* s00 x!0)) ?x334 (* 54 (* x00 r!2)) (* (- 36) (* r00 x!0 r!2)) (* (- 54) (* x!0 r!2)) (* 6 (* x00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 36) (* r00 r00 x!0)))))
 (let ((?x1114 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1254 (+ ?x44 (* (- 2) (* s!1 s!1)) (* (- 9) (* s00 r00)) ?x1114 (* 18 ?x471) (* 6 (* s00 r00 r!2)) (* 4 ?x540) (* (- 6) ?x596) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* (- 18) (* r00 x!0)) (* (- 9) (* s00 r!2)) (* 9 (* s!1 r!2)) (* 6 ?x1214) (* 18 (* x00 r!2)) (* (- 18) (* x!0 r!2)) (* (- 6) (* r00 s!1 r!2)))))
 (let ((?x1101 (* 3 r!2)))
 (let ((?x1142 (* 6 x!0)))
 (let ((?x418 (* r00 r00 r00)))
 (let ((?x419 (* 12 ?x418)))
 (let ((?x375 (* s00 r00)))
 (let ((?x453 (* (- 6) ?x375)))
 (let ((?x450 (* (- 6) x00)))
 (let ((?x449 (* (- 3) r00)))
 (let ((?x1358 (+ ?x44 ?x449 ?x450 ?x453 ?x419 ?x1114 ?x1142 (* 4 (* s00 r!2)) (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)) ?x1101)))
 (let (($x1099 (and $x1079 (= ?x1358 0) (= ?x1254 0) (= ?x1165 0) (= ?x465 0) $x233)))
 (let ((?x1212 (+ 3 ?x1215 s!1)))
 (let ((?x1220 (* ?x1191 ?x1191 ?x1191 ?x1191 ?x1191 ?x1191 ?x1191 ?x1211 ?x1211 ?x1211 ?x1211 ?x1211 ?x1211 ?x1212 ?x1212 ?x1212 ?x1212 ?x1212 (+ ?x1179 s00 ?x1219 ?x264))))
 (let ((?x1325 (* (- 108) ?x1295)))
 (let ((?x1324 (* (- 16) ?x1133)))
 (let ((?x1005 (* s00 r00 r00 r00)))
 (let ((?x1320 (* (- 216) ?x1005)))
 (let ((?x832 (* 432 ?x831)))
 (let ((?x1078 (* 108 ?x754)))
 (let ((?x680 (* s00 s00 r00 r00)))
 (let ((?x681 (* 36 ?x680)))
 (let ((?x617 (* s00 s00 r00)))
 (let ((?x961 (* 108 ?x617)))
 (let ((?x949 (* 36 ?x596)))
 (let ((?x1314 (* (- 51) ?x540)))
 (let ((?x1430 (* s!1 r00 r00)))
 (let ((?x706 (* (- 36) ?x1430)))
 (let ((?x1311 (* (- 108) ?x471)))
 (let ((?x462 (* s00 r00 x00)))
 (let ((?x1310 (* (- 216) ?x462)))
 (let ((?x469 (* 54 ?x375)))
 (let ((?x936 (* (- 9) s00)))
 (let ((?x1217 (* 9 s!1)))
 (let ((?x1210 (+ ?x1217 ?x936 ?x469 ?x1310 ?x1311 (* (- 15) (* s!1 s!1)) ?x706 ?x1314 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x949 ?x961 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x681 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1078 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x832 (* 12 (* s!1 s!1 s00)) ?x1320 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1324 (* 216 (* x!0 x00)) ?x1325)))
 (let ((?x826 (* r00 r00 x00)))
 (let ((?x839 (* (- 36) ?x826)))
 (let ((?x755 (* 6 ?x754)))
 (let ((?x645 (* (- 2) ?x617)))
 (let ((?x865 (* (- 15) ?x540)))
 (let ((?x500 (* (- 54) ?x471)))
 (let ((?x513 (* 24 ?x375)))
 (let ((?x1277 (+ ?x1217 ?x936 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x513 ?x500 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x706 ?x865 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x949 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x645 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x755 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x839 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x597 (* 6 ?x596)))
 (let ((?x553 (* (- 4) ?x540)))
 (let ((?x485 (* (- 18) ?x471)))
 (let ((?x490 (* 9 ?x375)))
 (let ((?x327 (* (- 3) s00)))
 (let ((?x901 (+ (* 3 s!1) ?x327 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x490 ?x485 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1430) ?x553 (* 18 (* x!0 r00)) ?x597 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1168 (+ ?x1101 ?x1114 ?x1142 ?x44 ?x449 ?x450 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x453 ?x419)))
 (let (($x1261 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x615) (* 3 ?x250)) 0) (= ?x1168 0) (= ?x901 0) (= ?x1277 0) (= ?x1210 0) (not (= ?x1220 0)))))
 (let (($x543 (exists ((r Int) (s Int) (x Int) )(! (let ((?x250 (* r00 r00)))
 (let ((?x264 (* (- 3) ?x250)))
 (let ((?x238 (* r r)))
 (let ((?x239 (* 3 ?x238)))
 (let ((?x229 (* (- 1) s)))
 (let ((?x211 (* 6 r)))
 (let ((?x1332 (+ 3 ?x211 s)))
 (let ((?x1427 (+ ?x229 x)))
 (let ((?x1365 (+ 1 r)))
 (let ((?x1163 (* ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427 ?x1332 ?x1332 ?x1332 ?x1332 ?x1332 (+ ?x229 s00 ?x239 ?x264))))
 (let ((?x1295 (* x00 x00)))
 (let ((?x1325 (* (- 108) ?x1295)))
 (let ((?x1133 (* s00 s00 s00)))
 (let ((?x1324 (* (- 16) ?x1133)))
 (let ((?x1005 (* s00 r00 r00 r00)))
 (let ((?x1320 (* (- 216) ?x1005)))
 (let ((?x831 (* r00 r00 r00 x00)))
 (let ((?x832 (* 432 ?x831)))
 (let ((?x754 (* s00 x00)))
 (let ((?x1078 (* 108 ?x754)))
 (let ((?x680 (* s00 s00 r00 r00)))
 (let ((?x681 (* 36 ?x680)))
 (let ((?x617 (* s00 s00 r00)))
 (let ((?x961 (* 108 ?x617)))
 (let ((?x596 (* s00 r00 r00)))
 (let ((?x949 (* 36 ?x596)))
 (let ((?x540 (* s00 s00)))
 (let ((?x1314 (* (- 51) ?x540)))
 (let ((?x514 (* s r00 r00)))
 (let ((?x813 (* (- 36) ?x514)))
 (let ((?x471 (* r00 x00)))
 (let ((?x1311 (* (- 108) ?x471)))
 (let ((?x462 (* s00 r00 x00)))
 (let ((?x1310 (* (- 216) ?x462)))
 (let ((?x375 (* s00 r00)))
 (let ((?x469 (* 54 ?x375)))
 (let ((?x936 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1326 (+ ?x143 ?x936 ?x469 ?x1310 ?x1311 (* (- 15) (* s s)) ?x813 ?x1314 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x949 ?x961 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x681 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1078 (* 108 (* s x)) (* (- 108) (* x x)) ?x832 (* 12 (* s s s00)) ?x1320 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1324 (* 216 (* x x00)) ?x1325)))
 (let (($x1327 (= ?x1326 0)))
 (let ((?x826 (* r00 r00 x00)))
 (let ((?x839 (* (- 36) ?x826)))
 (let ((?x755 (* 6 ?x754)))
 (let ((?x645 (* (- 2) ?x617)))
 (let ((?x865 (* (- 15) ?x540)))
 (let ((?x494 (* s s)))
 (let ((?x518 (* 3 ?x494)))
 (let ((?x500 (* (- 54) ?x471)))
 (let ((?x513 (* 24 ?x375)))
 (let ((?x1028 (+ ?x143 ?x936 (* (- 24) (* r s)) (* 24 (* r s00)) ?x513 ?x500 ?x518 (* 54 (* r x)) (* 36 (* r x r00)) ?x813 ?x865 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x949 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x645 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x755 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x839 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1033 (= ?x1028 0)))
 (let ((?x597 (* 6 ?x596)))
 (let ((?x553 (* (- 4) ?x540)))
 (let ((?x495 (* 2 ?x494)))
 (let ((?x485 (* (- 18) ?x471)))
 (let ((?x490 (* 9 ?x375)))
 (let ((?x327 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x694 (+ ?x47 ?x327 (* (- 9) (* r s)) (* 9 (* r s00)) ?x490 ?x485 ?x495 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x514) ?x553 (* 18 (* x r00)) ?x597 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x701 (= ?x694 0)))
 (let ((?x418 (* r00 r00 r00)))
 (let ((?x419 (* 12 ?x418)))
 (let ((?x453 (* (- 6) ?x375)))
 (let ((?x450 (* (- 6) x00)))
 (let ((?x449 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x454 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x449 ?x450 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x453 ?x419)))
 (let (($x455 (= ?x454 0)))
 (let (($x283 (= (+ s (* (- 1) s00) (* (- 3) ?x238) (* 3 ?x250)) 0)))
 (and $x283 $x455 $x701 $x1033 $x1327 (not (= ?x1163 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x846 (exists ((r Int) (s Int) (x Int) )(! (let ((?x250 (* r00 r00)))
 (let ((?x264 (* (- 3) ?x250)))
 (let ((?x229 (* (- 1) s)))
 (let ((?x995 (+ (- 3) s00 ?x229 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x264)))
 (let ((?x211 (* 6 r)))
 (let ((?x1134 (+ 3 s ?x211)))
 (let ((?x593 (+ x ?x229)))
 (let ((?x1365 (+ 1 r)))
 (let ((?x981 (* ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x593 ?x593 ?x593 ?x593 ?x593 ?x593 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x995)))
 (let ((?x1295 (* x00 x00)))
 (let ((?x293 (* 108 ?x1295)))
 (let ((?x137 (* 9 s00)))
 (let ((?x540 (* s00 s00)))
 (let ((?x1106 (* 51 ?x540)))
 (let ((?x1133 (* s00 s00 s00)))
 (let ((?x1037 (* 16 ?x1133)))
 (let ((?x754 (* s00 x00)))
 (let ((?x857 (* (- 108) ?x754)))
 (let ((?x831 (* r00 r00 r00 x00)))
 (let ((?x1338 (* (- 432) ?x831)))
 (let ((?x471 (* r00 x00)))
 (let ((?x486 (* 108 ?x471)))
 (let ((?x319 (+ (* 216 (* r00 s00 x00)) ?x486 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1338 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x857 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1037 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1106 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x293)))
 (let ((?x143 (* 9 s)))
 (let ((?x936 (* (- 9) s00)))
 (let ((?x865 (* (- 15) ?x540)))
 (let ((?x826 (* r00 r00 x00)))
 (let ((?x839 (* (- 36) ?x826)))
 (let ((?x755 (* 6 ?x754)))
 (let ((?x494 (* s s)))
 (let ((?x518 (* 3 ?x494)))
 (let ((?x500 (* (- 54) ?x471)))
 (let ((?x568 (+ (* (- 24) (* s r)) ?x500 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x518 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x755 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x839 ?x865 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x936 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x327 (* (- 3) s00)))
 (let ((?x553 (* (- 4) ?x540)))
 (let ((?x495 (* 2 ?x494)))
 (let ((?x485 (* (- 18) ?x471)))
 (let ((?x731 (+ (* (- 9) (* s r)) ?x485 (* 9 (* r00 s00)) ?x495 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x553 (* 18 (* r00 x)) ?x327 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x298 (* (- 3) r)))
 (let ((?x1018 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x298 ?x327 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (and (= (+ s00 ?x229 (* 3 (* r r)) ?x264) 0) (= ?x1018 0) (= ?x731 0) (= ?x568 0) (= ?x319 0) (not (= ?x981 0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1413 (lambda ((r Int) (s Int) (x Int) )(let ((?x250 (* r00 r00)))
 (let ((?x264 (* (- 3) ?x250)))
 (let ((?x238 (* r r)))
 (let ((?x239 (* 3 ?x238)))
 (let ((?x229 (* (- 1) s)))
 (let ((?x211 (* 6 r)))
 (let ((?x1332 (+ 3 ?x211 s)))
 (let ((?x1427 (+ ?x229 x)))
 (let ((?x1365 (+ 1 r)))
 (let ((?x1163 (* ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427 ?x1427 ?x1332 ?x1332 ?x1332 ?x1332 ?x1332 (+ ?x229 s00 ?x239 ?x264))))
 (let ((?x1295 (* x00 x00)))
 (let ((?x1325 (* (- 108) ?x1295)))
 (let ((?x1133 (* s00 s00 s00)))
 (let ((?x1324 (* (- 16) ?x1133)))
 (let ((?x1005 (* s00 r00 r00 r00)))
 (let ((?x1320 (* (- 216) ?x1005)))
 (let ((?x831 (* r00 r00 r00 x00)))
 (let ((?x832 (* 432 ?x831)))
 (let ((?x754 (* s00 x00)))
 (let ((?x1078 (* 108 ?x754)))
 (let ((?x680 (* s00 s00 r00 r00)))
 (let ((?x681 (* 36 ?x680)))
 (let ((?x617 (* s00 s00 r00)))
 (let ((?x961 (* 108 ?x617)))
 (let ((?x596 (* s00 r00 r00)))
 (let ((?x949 (* 36 ?x596)))
 (let ((?x540 (* s00 s00)))
 (let ((?x1314 (* (- 51) ?x540)))
 (let ((?x514 (* s r00 r00)))
 (let ((?x813 (* (- 36) ?x514)))
 (let ((?x471 (* r00 x00)))
 (let ((?x1311 (* (- 108) ?x471)))
 (let ((?x462 (* s00 r00 x00)))
 (let ((?x1310 (* (- 216) ?x462)))
 (let ((?x375 (* s00 r00)))
 (let ((?x469 (* 54 ?x375)))
 (let ((?x936 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1326 (+ ?x143 ?x936 ?x469 ?x1310 ?x1311 (* (- 15) (* s s)) ?x813 ?x1314 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x949 ?x961 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x681 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1078 (* 108 (* s x)) (* (- 108) (* x x)) ?x832 (* 12 (* s s s00)) ?x1320 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1324 (* 216 (* x x00)) ?x1325)))
 (let (($x1327 (= ?x1326 0)))
 (let ((?x826 (* r00 r00 x00)))
 (let ((?x839 (* (- 36) ?x826)))
 (let ((?x755 (* 6 ?x754)))
 (let ((?x645 (* (- 2) ?x617)))
 (let ((?x865 (* (- 15) ?x540)))
 (let ((?x494 (* s s)))
 (let ((?x518 (* 3 ?x494)))
 (let ((?x500 (* (- 54) ?x471)))
 (let ((?x513 (* 24 ?x375)))
 (let ((?x1028 (+ ?x143 ?x936 (* (- 24) (* r s)) (* 24 (* r s00)) ?x513 ?x500 ?x518 (* 54 (* r x)) (* 36 (* r x r00)) ?x813 ?x865 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x949 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x645 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x755 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x839 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1033 (= ?x1028 0)))
 (let ((?x597 (* 6 ?x596)))
 (let ((?x553 (* (- 4) ?x540)))
 (let ((?x495 (* 2 ?x494)))
 (let ((?x485 (* (- 18) ?x471)))
 (let ((?x490 (* 9 ?x375)))
 (let ((?x327 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x694 (+ ?x47 ?x327 (* (- 9) (* r s)) (* 9 (* r s00)) ?x490 ?x485 ?x495 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x514) ?x553 (* 18 (* x r00)) ?x597 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x701 (= ?x694 0)))
 (let ((?x418 (* r00 r00 r00)))
 (let ((?x419 (* 12 ?x418)))
 (let ((?x453 (* (- 6) ?x375)))
 (let ((?x450 (* (- 6) x00)))
 (let ((?x449 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x454 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x449 ?x450 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x453 ?x419)))
 (let (($x455 (= ?x454 0)))
 (let (($x283 (= (+ s (* (- 1) s00) (* (- 3) ?x238) (* 3 ?x250)) 0)))
 (let (($x1150 (and $x283 $x455 $x701 $x1033 $x1327 (not (= ?x1163 0)))))
 (let ((?x1134 (+ 3 s ?x211)))
 (let ((?x593 (+ x ?x229)))
 (let ((?x981 (* ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x593 ?x593 ?x593 ?x593 ?x593 ?x593 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 (+ (- 3) s00 ?x229 (* (- 6) r) (* 3 (* ?x1365 ?x1365)) ?x264))))
 (let ((?x293 (* 108 ?x1295)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1106 (* 51 ?x540)))
 (let ((?x1037 (* 16 ?x1133)))
 (let ((?x857 (* (- 108) ?x754)))
 (let ((?x1338 (* (- 432) ?x831)))
 (let ((?x486 (* 108 ?x471)))
 (let ((?x319 (+ (* 216 (* r00 s00 x00)) ?x486 (* (- 54) (* r00 s00)) (* 15 ?x494) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1338 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x857 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1037 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1106 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x293)))
 (let ((?x568 (+ (* (- 24) (* s r)) ?x500 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x518 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x755 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x839 ?x865 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x936 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x731 (+ (* (- 9) (* s r)) ?x485 (* 9 (* r00 s00)) ?x495 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x553 (* 18 (* r00 x)) ?x327 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x298 (* (- 3) r)))
 (let ((?x1018 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x298 ?x327 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x418))))
 (let (($x1284 (and (= (+ s00 ?x229 ?x239 ?x264) 0) (= ?x1018 0) (= ?x731 0) (= ?x568 0) (= ?x319 0) (not (= ?x981 0)))))
 (rewrite (= $x1284 $x1150)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x226 (exists ((r Int) (s Int) (x Int) )(! (let ((?x220 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x221 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) (- 1) ?x215 ?x215 ?x215 ?x212 ?x212 ?x220 ?x220 ?x220 ?x215 ?x212 ?x220 ?x215 ?x215 ?x215 ?x212 ?x212 ?x220 ?x220)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x221 0))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1366 (lambda ((r Int) (s Int) (x Int) )(let ((?x250 (* r00 r00)))
 (let ((?x264 (* (- 3) ?x250)))
 (let ((?x229 (* (- 1) s)))
 (let ((?x995 (+ (- 3) s00 ?x229 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x264)))
 (let ((?x211 (* 6 r)))
 (let ((?x1134 (+ 3 s ?x211)))
 (let ((?x593 (+ x ?x229)))
 (let ((?x1365 (+ 1 r)))
 (let ((?x981 (* ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x1365 ?x593 ?x593 ?x593 ?x593 ?x593 ?x593 ?x1134 ?x1134 ?x1134 ?x1134 ?x1134 ?x995)))
 (let ((?x1295 (* x00 x00)))
 (let ((?x293 (* 108 ?x1295)))
 (let ((?x137 (* 9 s00)))
 (let ((?x540 (* s00 s00)))
 (let ((?x1106 (* 51 ?x540)))
 (let ((?x1133 (* s00 s00 s00)))
 (let ((?x1037 (* 16 ?x1133)))
 (let ((?x754 (* s00 x00)))
 (let ((?x857 (* (- 108) ?x754)))
 (let ((?x831 (* r00 r00 r00 x00)))
 (let ((?x1338 (* (- 432) ?x831)))
 (let ((?x471 (* r00 x00)))
 (let ((?x486 (* 108 ?x471)))
 (let ((?x319 (+ (* 216 (* r00 s00 x00)) ?x486 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1338 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x857 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x1037 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1106 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x293)))
 (let ((?x143 (* 9 s)))
 (let ((?x936 (* (- 9) s00)))
 (let ((?x865 (* (- 15) ?x540)))
 (let ((?x826 (* r00 r00 x00)))
 (let ((?x839 (* (- 36) ?x826)))
 (let ((?x755 (* 6 ?x754)))
 (let ((?x494 (* s s)))
 (let ((?x518 (* 3 ?x494)))
 (let ((?x500 (* (- 54) ?x471)))
 (let ((?x568 (+ (* (- 24) (* s r)) ?x500 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x518 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x755 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x839 ?x865 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x936 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x327 (* (- 3) s00)))
 (let ((?x553 (* (- 4) ?x540)))
 (let ((?x495 (* 2 ?x494)))
 (let ((?x485 (* (- 18) ?x471)))
 (let ((?x731 (+ (* (- 9) (* s r)) ?x485 (* 9 (* r00 s00)) ?x495 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x553 (* 18 (* r00 x)) ?x327 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x298 (* (- 3) r)))
 (let ((?x1018 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x298 ?x327 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1284 (and (= (+ s00 ?x229 (* 3 (* r r)) ?x264) 0) (= ?x1018 0) (= ?x731 0) (= ?x568 0) (= ?x319 0) (not (= ?x981 0)))))
 (let ((?x220 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x221 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) (- 1) ?x215 ?x215 ?x215 ?x212 ?x212 ?x220 ?x220 ?x220 ?x215 ?x212 ?x220 ?x215 ?x215 ?x215 ?x212 ?x212 ?x220 ?x220)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x225 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x221 0))))))
 (rewrite (= $x225 $x1284)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x227 (asserted $x226)))
 (let ((@x1048 (mp (mp @x227 (quant-intro (proof-bind ?x1366) (= $x226 $x846)) $x846) (rewrite (= $x846 $x846)) $x846)))
 (let ((@x1259 (mp~ (mp @x1048 (quant-intro (proof-bind ?x1413) (= $x846 $x543)) $x543) (sk (~ $x543 $x1261)) $x1261)))
 (let ((@x907 (mp @x1259 (rewrite (= $x1261 $x1099)) $x1099)))
 (let ((@x897 (and-elim @x907 $x1079)))
 (let ((@x678 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1079) $x1268)) @x897 $x1268)))
 (let (($x1267 (>= ?x1070 0)))
 (let ((@x757 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1079) $x1267)) @x897 $x1267)))
 (let (($x761 (not (<= ?x1100 0))))
 (let (($x269 (>= ?x1100 0)))
 (let ((@x727 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x631 $x761 (not $x269))) (and-elim @x907 $x233) (or $x761 (not $x269)))))
 (let ((@x367 (unit-resolution @x727 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x269)) @x757 @x678 false) $x269) $x761)))
 ((_ th-lemma arith farkas 1 1 1) @x367 @x757 @x678 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        9
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-num-rows            8
 :arith-pseudo-nonlinear    2
 :arith-tableau-max-columns 94
 :arith-tableau-max-rows    8
 :conflicts                 2
 :decisions                 1
 :del-clause                17
 :max-memory                19.86
 :memory                    19.27
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                625308
 :num-checks                1
 :propagations              12
 :rlimit-count              5619
 :time                      0.01
 :total-time                0.02)
