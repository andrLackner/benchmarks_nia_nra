unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1756 (* y00 y!2 z!1)))
 (let ((?x1704 (* y!2 y!2)))
 (let ((?x606 (* (- 12) ?x1704)))
 (let ((?x1544 (* x!3 z!1)))
 (let ((?x1340 (* (- 36) ?x1544)))
 (let ((?x1506 (* z!1 z!1)))
 (let ((?x1315 (* (- 6) ?x1506)))
 (let ((?x1068 (* 6 (* z00 z!1))))
 (let ((?x1048 (* z00 y!2 z!1)))
 (let ((?x902 (* 2 (* y!2 z!1 z!1))))
 (let ((?x845 (* z00 z00 x00)))
 (let ((?x846 (* 3 ?x845)))
 (let ((?x793 (* z!1 z!1 z!1)))
 (let ((?x659 (* z00 z00 y00)))
 (let ((?x908 (* 3 ?x659)))
 (let ((?x634 (* z00 y00 y00)))
 (let ((?x641 (* (- 1) ?x634)))
 (let ((?x589 (* y!2 y!2 z!1)))
 (let ((?x525 (* y00 y00)))
 (let ((?x1690 (* (- 48) ?x525)))
 (let ((?x495 (* z00 x00)))
 (let ((?x496 (* 18 ?x495)))
 (let ((?x458 (* z00 y00)))
 (let ((?x733 (* (- 6) ?x458)))
 (let ((?x405 (* y00 x00)))
 (let ((?x406 (* (- 18) ?x405)))
 (let ((?x887 (+ ?x406 (* (- 18) (* z00 x!3)) (* 3 (* z00 x00 z!1)) (* (- 1) (* z00 y00 y!2)) ?x733 (* 36 (* x00 z!1)) (* (- 1) (* z00 y00 z!1)) ?x496 (* (- 6) (* z00 z00 y!2)) (* 2 (* z00 z!1 z!1)) ?x1690 ?x589 ?x641 ?x908 (* (- 3) (* z00 x!3 z!1)) (* 54 (* y00 z!1)) (* (- 12) (* z00 y!2)) ?x793 ?x846 ?x902 (* 18 (* x00 y!2)) ?x1048 (* (- 18) (* y!2 x!3)) ?x1068 (* 18 (* y00 x!3)) (* (- 3) (* z00 z00 z!1)) (* (- 2) (* y00 y00 z!1)) (* (- 36) (* y!2 z!1)) ?x1315 (* (- 3) (* z00 z00 x!3)) ?x1340 (* 2 (* z00 y!2 y!2)) (* 60 (* y00 y!2)) ?x606 (* y00 z!1 z!1) ?x1756)))
 (let (($x1633 (<= ?x887 0)))
 (let ((?x1442 (* (- 108) x!3)))
 (let ((?x1249 (* (- 72) y!2)))
 (let ((?x74 (* 108 x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1447 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* (- 18) ?x458) ?x1249 (* 12 (* y00 z!1)) ?x1442 ?x1068 (* (- 1) (* z00 z00 z!1)) (* 6 (* y!2 z!1)))))
 (let (($x1131 (<= ?x1447 0)))
 (let (($x519 (= ?x1447 0)))
 (let ((?x899 (+ y!2 x!3)))
 (let ((?x594 (+ y!2 z!1)))
 (let ((?x531 (+ 6 z!1)))
 (let ((?x632 (+ 1 n!0)))
 (let ((?x896 (* ?x632 ?x632 ?x632 ?x531 ?x594 ?x594 ?x594 ?x594 ?x594 ?x594 ?x594 ?x594 ?x899 ?x899 ?x899 ?x899 ?x887)))
 (let (($x983 (= ?x896 0)))
 (let (($x1008 (not $x983)))
 (let ((?x910 (* 24 ?x1704)))
 (let ((?x1260 (* 108 (* x00 x00))))
 (let ((?x1157 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1153 (* z00 z00 z00 y00)))
 (let ((?x1063 (* (- 36) (* z00 y00 x00))))
 (let ((?x997 (* 108 (* x!3 x!3))))
 (let ((?x977 (* 16 (* y00 y00 y00))))
 (let ((?x1113 (* (- 18) ?x845)))
 (let ((?x744 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x1214 (* (- 10) ?x659)))
 (let ((?x700 (* (- 12) ?x634)))
 (let ((?x1013 (* 96 ?x525)))
 (let ((?x998 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x462 (* 36 ?x495)))
 (let ((?x855 (* 24 ?x458)))
 (let ((?x424 (* 216 ?x405)))
 (let ((?x863 (+ ?x424 (* (- 36) (* z00 x!3)) (* 18 (* z00 y00 y!2)) ?x855 ?x462 (* 10 (* z00 z00 y!2)) ?x998 (* (- 2) (* z00 z00 z00 x!3)) ?x1013 ?x700 ?x1214 ?x744 (* (- 1) (* z00 z00 z00 y!2)) (* (- 24) (* z00 y!2)) ?x1113 ?x977 ?x997 (* (- 108) (* x00 y!2)) ?x1063 (* 108 (* y!2 x!3)) ?x1153 ?x1157 (* (- 216) (* y00 x!3)) ?x1260 (* 36 (* z00 y00 x!3)) (* (- 216) (* x00 x!3)) (* z00 z00 y!2 y!2) (* 18 (* z00 z00 x!3)) (* (- 6) (* z00 y!2 y!2)) (* (- 120) (* y00 y!2)) (* (- 12) (* y00 y!2 y!2)) ?x910)))
 (let (($x1094 (= ?x863 0)))
 (let ((?x1689 (* 18 ?x1544)))
 (let ((?x1403 (* y!2 z!1)))
 (let ((?x1699 (* 12 ?x1403)))
 (let ((?x741 (* y00 z!1)))
 (let ((?x1115 (* (- 12) ?x741)))
 (let ((?x467 (* x00 z!1)))
 (let ((?x988 (* (- 18) ?x467)))
 (let ((?x574 (* 6 ?x458)))
 (let ((?x434 (* z00 y00 y!2)))
 (let ((?x767 (+ ?x67 ?x74 (* 18 ?x405) (* (- 3) (* z00 x00 z!1)) ?x434 ?x574 ?x988 (* 3 (* z00 z00 y!2)) (* 36 ?x525) ?x1249 (* (- 1) ?x589) ?x634 (* (- 3) ?x659) (* 3 (* z00 x!3 z!1)) ?x1115 ?x1442 (* (- 6) (* z00 y!2)) (* (- 3) ?x845) (* (- 18) (* x00 y!2)) (* 18 (* y!2 x!3)) (* (- 18) (* y00 x!3)) (* 2 (* y00 y00 z!1)) ?x1699 (* 3 (* z00 z00 x!3)) ?x1689 (* (- 2) (* z00 y!2 y!2)) (* (- 36) (* y00 y!2)) (* (- 1) ?x1756))))
 (let (($x944 (= ?x767 0)))
 (let ((?x497 (* z00 z00 y!2)))
 (let ((?x471 (* z00 y00 z!1)))
 (let ((?x1711 (+ ?x67 ?x74 (* 18 (* z00 x!3)) ?x733 ?x988 ?x471 (* (- 18) ?x495) ?x497 (* 24 ?x525) ?x1249 (* (- 1) ?x659) ?x1115 ?x1442 (* 6 (* z00 y!2)) (* (- 1) ?x1048) ?x1699 ?x1689 (* (- 12) (* y00 y!2)) ?x606)))
 (let (($x1715 (= ?x1711 0)))
 (let ((?x317 (* z00 z00)))
 (let ((?x364 (* (- 1) ?x317)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x1422 (+ ?x49 ?x43 ?x364 (* (- 12) y!2) ?x1506 (* (- 6) z!1))))
 (let (($x373 (= ?x1422 0)))
 (let (($x504 (and (= (+ z00 (* (- 6) n00) (* 6 n!0) (* (- 1) z!1)) 0) $x373 $x519 $x1715 $x944 $x1094 $x1008)))
 (let ((?x360 (* (- 2) (* z!1 y00 y00))))
 (let ((?x1071 (* y!2 z!1 y00)))
 (let ((?x488 (* x!3 y00)))
 (let ((?x489 (* 18 ?x488)))
 (let ((?x989 (* y!2 x00)))
 (let ((?x311 (* 18 ?x989)))
 (let ((?x1142 (* y!2 y!2 z00)))
 (let ((?x850 (* 2 ?x1142)))
 (let ((?x684 (* (- 3) (* x!3 z!1 z00))))
 (let ((?x957 (* y!2 z00 y00)))
 (let ((?x1077 (* (- 1) ?x957)))
 (let ((?x269 (* x!3 z00)))
 (let ((?x1202 (* (- 18) ?x269)))
 (let ((?x956 (* 3 (* z!1 z00 x00))))
 (let ((?x617 (* x!3 z00 z00)))
 (let ((?x1587 (* (- 3) ?x617)))
 (let ((?x612 (* x!3 y!2)))
 (let ((?x1026 (* (- 18) ?x612)))
 (let ((?x783 (* (- 1) (* z!1 z00 y00))))
 (let ((?x1578 (* y!2 z!1 z00)))
 (let ((?x653 (+ ?x1315 (* (- 3) (* z!1 z00 z00)) ?x1578 (* (- 6) (* y!2 z00 z00)) ?x589 (* 6 (* z!1 y!2)) ?x783 (* (- 42) ?x1403) ?x406 ?x1026 ?x1340 (* 54 (* z!1 y00)) ?x733 (* 6 (* z!1 z00)) ?x496 ?x606 ?x1690 (* 36 (* z!1 x00)) (* 60 (* y!2 y00)) ?x1587 (* (- 12) (* y!2 z00)) ?x641 ?x908 ?x956 ?x1202 ?x1077 ?x684 ?x850 ?x311 ?x846 ?x489 ?x1071 ?x360 (* 2 (* z!1 z!1 z00)) ?x902 ?x793 (* z!1 z!1 y00))))
 (let ((?x1643 (+ x!3 y!2)))
 (let ((?x1406 (* ?x632 ?x632 ?x632 ?x531 ?x594 ?x594 ?x594 ?x594 ?x594 ?x594 ?x594 ?x594 ?x1643 ?x1643 ?x1643 ?x1643 ?x653)))
 (let ((?x593 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x424 (* 108 ?x612) ?x855 (* (- 2) (* x!3 z00 z00 z00)) ?x462 ?x910 ?x1013 (* (- 120) (* y!2 y00)) (* 18 ?x617) (* (- 24) (* y!2 z00)) ?x700 ?x1214 (* (- 36) ?x269) (* 18 ?x957) ?x744 ?x997 ?x998 (* (- 6) ?x1142) (* (- 108) ?x989) ?x1113 (* (- 216) ?x488) ?x977 (* (- 12) (* y!2 y!2 y00)) ?x1063 (* (- 216) (* x!3 x00)) ?x1153 ?x1157 (* 36 (* x!3 z00 y00)) ?x1260)))
 (let ((?x1636 (* z!1 x00)))
 (let ((?x611 (* 18 ?x1636)))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x1404 (* z!1 y00)))
 (let ((?x1382 (* 12 ?x1404)))
 (let ((?x1703 (* (- 18) ?x1544)))
 (let ((?x806 (* (- 12) ?x1403)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x784 (* 72 y!2)))
 (let ((?x1697 (* 108 x!3)))
 (let ((?x392 (+ ?x1697 ?x784 ?x480 ?x537 (* (- 3) (* y!2 z00 z00)) ?x589 ?x806 ?x406 ?x1026 ?x1703 ?x1382 ?x733 ?x828 ?x611 (* 36 (* y!2 y00)) ?x1587 (* 6 (* y!2 z00)) ?x641 ?x908 ?x956 ?x1077 ?x684 ?x850 ?x311 ?x846 ?x489 ?x1071 ?x360)))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x518 (+ ?x1697 ?x784 ?x480 ?x537 ?x1578 (* (- 1) (* y!2 z00 z00)) ?x783 ?x806 ?x1703 ?x1382 ?x574 ?x496 (* 12 ?x1704) ?x554 ?x611 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x659 ?x1202)))
 (let ((?x459 (* 18 ?x458)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x1091 (* z!1 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x1521 (+ ?x1697 ?x784 ?x480 ?x410 ?x537 ?x1091 ?x421 (* (- 6) ?x1403) (* (- 12) ?x1404) ?x459 (* (- 6) (* z!1 z00)))))
 (let ((?x388 (* (- 12) y00)))
 (let ((?x387 (* (- 6) z00)))
 (let (($x515 (= (+ (* 12 y!2) (* 6 z!1) ?x387 ?x388 (* (- 1) ?x1506) ?x317) 0)))
 (let (($x1572 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x515 (= ?x1521 0) (= ?x518 0) (= ?x392 0) (= ?x593 0) (not (= ?x1406 0)))))
 (let (($x582 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x1637 (* z z y00)))
 (let ((?x1498 (* z z z)))
 (let ((?x1526 (* 2 (* y z z))))
 (let ((?x1441 (* 2 (* z z z00))))
 (let ((?x933 (* (- 2) (* z y00 y00))))
 (let ((?x905 (* y z y00)))
 (let ((?x875 (* x y00)))
 (let ((?x876 (* 18 ?x875)))
 (let ((?x845 (* z00 z00 x00)))
 (let ((?x846 (* 3 ?x845)))
 (let ((?x841 (* y x00)))
 (let ((?x842 (* 18 ?x841)))
 (let ((?x803 (* y y z00)))
 (let ((?x804 (* 2 ?x803)))
 (let ((?x790 (* (- 3) (* x z z00))))
 (let ((?x679 (* y z00 y00)))
 (let ((?x696 (* (- 1) ?x679)))
 (let ((?x670 (* x z00)))
 (let ((?x683 (* (- 18) ?x670)))
 (let ((?x663 (* 3 (* z z00 x00))))
 (let ((?x659 (* z00 z00 y00)))
 (let ((?x908 (* 3 ?x659)))
 (let ((?x634 (* z00 y00 y00)))
 (let ((?x641 (* (- 1) ?x634)))
 (let ((?x607 (* y z00)))
 (let ((?x1429 (* (- 12) ?x607)))
 (let ((?x580 (* x z00 z00)))
 (let ((?x596 (* (- 3) ?x580)))
 (let ((?x577 (* y y00)))
 (let ((?x1656 (* 60 ?x577)))
 (let ((?x525 (* y00 y00)))
 (let ((?x1690 (* (- 48) ?x525)))
 (let ((?x499 (* y y)))
 (let ((?x1552 (* (- 12) ?x499)))
 (let ((?x495 (* z00 x00)))
 (let ((?x496 (* 18 ?x495)))
 (let ((?x493 (* z z00)))
 (let ((?x494 (* 6 ?x493)))
 (let ((?x458 (* z00 y00)))
 (let ((?x733 (* (- 6) ?x458)))
 (let ((?x431 (* x z)))
 (let ((?x978 (* (- 36) ?x431)))
 (let ((?x422 (* x y)))
 (let ((?x492 (* (- 18) ?x422)))
 (let ((?x405 (* y00 x00)))
 (let ((?x406 (* (- 18) ?x405)))
 (let ((?x400 (* (- 1) (* z z00 y00))))
 (let ((?x135 (* y y z)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x1741 (* (- 6) ?x105)))
 (let ((?x103 (* y z z00)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x1732 (* (- 3) ?x76)))
 (let ((?x50 (* z z)))
 (let ((?x1551 (* (- 6) ?x50)))
 (let ((?x1297 (+ ?x1551 ?x1732 ?x103 ?x1741 ?x135 (* 6 (* z y)) ?x400 (* (- 42) (* y z)) ?x406 ?x492 ?x978 (* 54 (* z y00)) ?x733 ?x494 ?x496 ?x1552 ?x1690 (* 36 (* z x00)) ?x1656 ?x596 ?x1429 ?x641 ?x908 ?x663 ?x683 ?x696 ?x790 ?x804 ?x842 ?x846 ?x876 ?x905 ?x933 ?x1441 ?x1526 ?x1498 ?x1637)))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x756 (+ 6 z)))
 (let ((?x1749 (+ 1 n)))
 (let ((?x562 (* ?x1749 ?x1749 ?x1749 ?x756 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x215 ?x215 ?x215 ?x215 ?x1297)))
 (let ((?x1260 (* 108 (* x00 x00))))
 (let ((?x1157 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1153 (* z00 z00 z00 y00)))
 (let ((?x1063 (* (- 36) (* z00 y00 x00))))
 (let ((?x977 (* 16 (* y00 y00 y00))))
 (let ((?x1113 (* (- 18) ?x845)))
 (let ((?x818 (* (- 4) (* y y y))))
 (let ((?x762 (* 108 (* x x))))
 (let ((?x744 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x1214 (* (- 10) ?x659)))
 (let ((?x700 (* (- 12) ?x634)))
 (let ((?x1013 (* 96 ?x525)))
 (let ((?x757 (* 24 ?x499)))
 (let ((?x462 (* 36 ?x495)))
 (let ((?x855 (* 24 ?x458)))
 (let ((?x424 (* 216 ?x405)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1280 (+ (* 10 ?x105) ?x201 (* (- 1) (* y z00 z00 z00)) ?x424 (* 108 ?x422) ?x855 (* (- 2) (* x z00 z00 z00)) ?x462 ?x757 ?x1013 (* (- 120) ?x577) (* 18 ?x580) (* (- 24) ?x607) ?x700 ?x1214 (* (- 36) ?x670) (* 18 ?x679) ?x744 ?x762 ?x818 (* (- 6) ?x803) (* (- 108) ?x841) ?x1113 (* (- 216) ?x875) ?x977 (* (- 12) (* y y y00)) ?x1063 (* (- 216) (* x x00)) ?x1153 ?x1157 (* 36 (* x z00 y00)) ?x1260)))
 (let (($x1285 (= ?x1280 0)))
 (let ((?x570 (* z x00)))
 (let ((?x571 (* 18 ?x570)))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x432 (* z y00)))
 (let ((?x433 (* 12 ?x432)))
 (let ((?x466 (* (- 18) ?x431)))
 (let ((?x401 (* y z)))
 (let ((?x425 (* (- 12) ?x401)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x964 (+ ?x64 ?x71 ?x480 ?x537 (* (- 3) ?x105) ?x135 ?x425 ?x406 ?x492 ?x466 ?x433 ?x733 ?x828 ?x571 (* 36 ?x577) ?x596 (* 6 ?x607) ?x641 ?x908 ?x663 ?x696 ?x790 ?x804 ?x842 ?x846 ?x876 ?x905 ?x933)))
 (let (($x971 (= ?x964 0)))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x574 (* 6 ?x458)))
 (let ((?x713 (+ ?x64 ?x71 ?x480 ?x537 ?x103 (* (- 1) ?x105) ?x400 ?x425 ?x466 ?x433 ?x574 ?x496 ?x502 ?x554 ?x571 (* 12 ?x577) (* (- 6) ?x607) ?x659 ?x683)))
 (let (($x718 (= ?x713 0)))
 (let ((?x459 (* 18 ?x458)))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x553 (+ ?x64 ?x71 ?x480 ?x410 ?x537 ?x76 ?x421 (* (- 6) ?x401) (* (- 12) ?x432) ?x459 (* (- 6) ?x493))))
 (let (($x558 (= ?x553 0)))
 (let ((?x388 (* (- 12) y00)))
 (let ((?x387 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x391 (= (+ ?x45 ?x46 ?x387 ?x388 (* (- 1) ?x50) ?x317) 0)))
 (let (($x309 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x309 $x391 $x558 $x718 $x971 $x1285 (not (= ?x562 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x1257 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x99 (* y00 z00 z00)))
 (let ((?x1623 (* 3 ?x99)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x516 (* x00 z00 z00)))
 (let ((?x711 (* 3 ?x516)))
 (let ((?x525 (* y00 y00)))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x1171 (* y00 z00)))
 (let ((?x667 (* (- 6) ?x1171)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x628 (* (- 1) ?x113)))
 (let ((?x1064 (* x00 y00)))
 (let ((?x1065 (* (- 18) ?x1064)))
 (let ((?x1112 (+ ?x1065 (* (- 18) (* (+ y z) (+ x y))) (* (- 18) (* (+ 6 z) (+ x y))) (* (- 3) (* z00 z00 (+ x y))) ?x628 (* 3 (* x00 z00 (+ 6 z))) (* (- 1) (* y00 z00 (+ y z))) (* 12 (* y00 (+ 6 z))) ?x667 (* 36 (* y00 (+ y z))) (* 6 (* z00 (+ y z))) (* (- 12) (* (+ 6 z) (+ y z))) (* (- 3) (* z00 (+ 6 z) (+ x y))) (* 2 (* z00 (+ y z) (+ y z))) ?x828 (* 18 (* x00 (+ 6 z))) (* (+ 6 z) (+ y z) (+ y z)) (* 18 (* x00 (+ y z))) ?x711 ?x64 (* 180 y) ?x480 (* 18 (* y00 (+ x y))) (* 72 z) ?x537 (* y00 (+ 6 z) (+ y z)) ?x1623 (* (- 2) (* y00 y00 (+ 6 z))) (* (- 3) (* z00 z00 (+ y z))))))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x756 (+ 6 z)))
 (let ((?x1749 (+ 1 n)))
 (let ((?x1205 (* ?x1749 ?x1749 ?x1749 ?x756 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x215 ?x215 ?x215 ?x215 ?x1112)))
 (let ((?x1260 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1013 (* 96 ?x525)))
 (let ((?x977 (* 16 (* y00 y00 y00))))
 (let ((?x818 (* (- 4) (* y y y))))
 (let ((?x762 (* 108 (* x x))))
 (let ((?x499 (* y y)))
 (let ((?x757 (* 24 ?x499)))
 (let ((?x832 (+ (* 216 ?x1064) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) ?x113) (* (- 1) (* y00 y00 z00 z00)) ?x757 ?x762 ?x818 (* 18 (* y00 z00 y)) (* 24 ?x1171) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x977 (* (- 6) (* z00 y y)) ?x1013 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) ?x516) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) ?x99) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1260 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x1534 (* x00 y)))
 (let ((?x1535 (* 18 ?x1534)))
 (let ((?x1482 (* x00 z)))
 (let ((?x1368 (* 18 ?x1482)))
 (let ((?x367 (* z y)))
 (let ((?x600 (* (- 12) ?x367)))
 (let ((?x1212 (* y00 z)))
 (let ((?x1225 (* 12 ?x1212)))
 (let ((?x1197 (* (- 18) (* z x))))
 (let ((?x1291 (+ ?x1065 (* (- 18) (* y x)) ?x1197 (* (- 3) (* z00 z00 x)) ?x628 (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1225 ?x667 (* 36 (* y00 y)) (* 6 (* z00 y)) ?x600 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x828 ?x1368 (* z y y) ?x1535 ?x711 ?x64 ?x480 (* 18 (* y00 x)) ?x71 ?x537 (* y00 z y) ?x1623 (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x955 (+ (* (- 1) (* y00 z00 z)) ?x600 ?x1197 (* 18 (* x00 z00)) ?x502 ?x554 ?x1368 ?x1225 (* 6 ?x1171) (* 12 (* y00 y)) ?x64 ?x480 (* (- 6) (* z00 y)) ?x71 ?x537 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x1145 (+ (* (- 6) ?x367) ?x410 ?x421 (* (- 12) ?x1212) (* 18 ?x1171) ?x64 ?x480 (* (- 6) (* z00 z)) ?x71 ?x537 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x364 (* (- 1) ?x317)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x364 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1145 0) (= ?x955 0) (= ?x1291 0) (= ?x832 0) (not (= ?x1205 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1594 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x1637 (* z z y00)))
 (let ((?x1498 (* z z z)))
 (let ((?x1526 (* 2 (* y z z))))
 (let ((?x1441 (* 2 (* z z z00))))
 (let ((?x933 (* (- 2) (* z y00 y00))))
 (let ((?x905 (* y z y00)))
 (let ((?x875 (* x y00)))
 (let ((?x876 (* 18 ?x875)))
 (let ((?x845 (* z00 z00 x00)))
 (let ((?x846 (* 3 ?x845)))
 (let ((?x841 (* y x00)))
 (let ((?x842 (* 18 ?x841)))
 (let ((?x803 (* y y z00)))
 (let ((?x804 (* 2 ?x803)))
 (let ((?x790 (* (- 3) (* x z z00))))
 (let ((?x679 (* y z00 y00)))
 (let ((?x696 (* (- 1) ?x679)))
 (let ((?x670 (* x z00)))
 (let ((?x683 (* (- 18) ?x670)))
 (let ((?x663 (* 3 (* z z00 x00))))
 (let ((?x659 (* z00 z00 y00)))
 (let ((?x908 (* 3 ?x659)))
 (let ((?x634 (* z00 y00 y00)))
 (let ((?x641 (* (- 1) ?x634)))
 (let ((?x607 (* y z00)))
 (let ((?x1429 (* (- 12) ?x607)))
 (let ((?x580 (* x z00 z00)))
 (let ((?x596 (* (- 3) ?x580)))
 (let ((?x577 (* y y00)))
 (let ((?x1656 (* 60 ?x577)))
 (let ((?x525 (* y00 y00)))
 (let ((?x1690 (* (- 48) ?x525)))
 (let ((?x499 (* y y)))
 (let ((?x1552 (* (- 12) ?x499)))
 (let ((?x495 (* z00 x00)))
 (let ((?x496 (* 18 ?x495)))
 (let ((?x493 (* z z00)))
 (let ((?x494 (* 6 ?x493)))
 (let ((?x458 (* z00 y00)))
 (let ((?x733 (* (- 6) ?x458)))
 (let ((?x431 (* x z)))
 (let ((?x978 (* (- 36) ?x431)))
 (let ((?x422 (* x y)))
 (let ((?x492 (* (- 18) ?x422)))
 (let ((?x405 (* y00 x00)))
 (let ((?x406 (* (- 18) ?x405)))
 (let ((?x400 (* (- 1) (* z z00 y00))))
 (let ((?x135 (* y y z)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x1741 (* (- 6) ?x105)))
 (let ((?x103 (* y z z00)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x1732 (* (- 3) ?x76)))
 (let ((?x50 (* z z)))
 (let ((?x1551 (* (- 6) ?x50)))
 (let ((?x1297 (+ ?x1551 ?x1732 ?x103 ?x1741 ?x135 (* 6 (* z y)) ?x400 (* (- 42) (* y z)) ?x406 ?x492 ?x978 (* 54 (* z y00)) ?x733 ?x494 ?x496 ?x1552 ?x1690 (* 36 (* z x00)) ?x1656 ?x596 ?x1429 ?x641 ?x908 ?x663 ?x683 ?x696 ?x790 ?x804 ?x842 ?x846 ?x876 ?x905 ?x933 ?x1441 ?x1526 ?x1498 ?x1637)))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x756 (+ 6 z)))
 (let ((?x1749 (+ 1 n)))
 (let ((?x562 (* ?x1749 ?x1749 ?x1749 ?x756 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x215 ?x215 ?x215 ?x215 ?x1297)))
 (let ((?x1260 (* 108 (* x00 x00))))
 (let ((?x1157 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1153 (* z00 z00 z00 y00)))
 (let ((?x1063 (* (- 36) (* z00 y00 x00))))
 (let ((?x977 (* 16 (* y00 y00 y00))))
 (let ((?x1113 (* (- 18) ?x845)))
 (let ((?x818 (* (- 4) (* y y y))))
 (let ((?x762 (* 108 (* x x))))
 (let ((?x744 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x1214 (* (- 10) ?x659)))
 (let ((?x700 (* (- 12) ?x634)))
 (let ((?x1013 (* 96 ?x525)))
 (let ((?x757 (* 24 ?x499)))
 (let ((?x462 (* 36 ?x495)))
 (let ((?x855 (* 24 ?x458)))
 (let ((?x424 (* 216 ?x405)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1280 (+ (* 10 ?x105) ?x201 (* (- 1) (* y z00 z00 z00)) ?x424 (* 108 ?x422) ?x855 (* (- 2) (* x z00 z00 z00)) ?x462 ?x757 ?x1013 (* (- 120) ?x577) (* 18 ?x580) (* (- 24) ?x607) ?x700 ?x1214 (* (- 36) ?x670) (* 18 ?x679) ?x744 ?x762 ?x818 (* (- 6) ?x803) (* (- 108) ?x841) ?x1113 (* (- 216) ?x875) ?x977 (* (- 12) (* y y y00)) ?x1063 (* (- 216) (* x x00)) ?x1153 ?x1157 (* 36 (* x z00 y00)) ?x1260)))
 (let (($x1285 (= ?x1280 0)))
 (let ((?x570 (* z x00)))
 (let ((?x571 (* 18 ?x570)))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x432 (* z y00)))
 (let ((?x433 (* 12 ?x432)))
 (let ((?x466 (* (- 18) ?x431)))
 (let ((?x401 (* y z)))
 (let ((?x425 (* (- 12) ?x401)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x964 (+ ?x64 ?x71 ?x480 ?x537 (* (- 3) ?x105) ?x135 ?x425 ?x406 ?x492 ?x466 ?x433 ?x733 ?x828 ?x571 (* 36 ?x577) ?x596 (* 6 ?x607) ?x641 ?x908 ?x663 ?x696 ?x790 ?x804 ?x842 ?x846 ?x876 ?x905 ?x933)))
 (let (($x971 (= ?x964 0)))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x574 (* 6 ?x458)))
 (let ((?x713 (+ ?x64 ?x71 ?x480 ?x537 ?x103 (* (- 1) ?x105) ?x400 ?x425 ?x466 ?x433 ?x574 ?x496 ?x502 ?x554 ?x571 (* 12 ?x577) (* (- 6) ?x607) ?x659 ?x683)))
 (let (($x718 (= ?x713 0)))
 (let ((?x459 (* 18 ?x458)))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x553 (+ ?x64 ?x71 ?x480 ?x410 ?x537 ?x76 ?x421 (* (- 6) ?x401) (* (- 12) ?x432) ?x459 (* (- 6) ?x493))))
 (let (($x558 (= ?x553 0)))
 (let ((?x388 (* (- 12) y00)))
 (let ((?x387 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x391 (= (+ ?x45 ?x46 ?x387 ?x388 (* (- 1) ?x50) ?x317) 0)))
 (let (($x309 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x481 (and $x309 $x391 $x558 $x718 $x971 $x1285 (not (= ?x562 0)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1623 (* 3 ?x99)))
 (let ((?x516 (* x00 z00 z00)))
 (let ((?x711 (* 3 ?x516)))
 (let ((?x1171 (* y00 z00)))
 (let ((?x667 (* (- 6) ?x1171)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x628 (* (- 1) ?x113)))
 (let ((?x1064 (* x00 y00)))
 (let ((?x1065 (* (- 18) ?x1064)))
 (let ((?x1112 (+ ?x1065 (* (- 18) (* ?x216 ?x215)) (* (- 18) (* ?x756 ?x215)) (* (- 3) (* z00 z00 ?x215)) ?x628 (* 3 (* x00 z00 ?x756)) (* (- 1) (* y00 z00 ?x216)) (* 12 (* y00 ?x756)) ?x667 (* 36 (* y00 ?x216)) (* 6 (* z00 ?x216)) (* (- 12) (* ?x756 ?x216)) (* (- 3) (* z00 ?x756 ?x215)) (* 2 (* z00 ?x216 ?x216)) ?x828 (* 18 (* x00 ?x756)) (* ?x756 ?x216 ?x216) (* 18 (* x00 ?x216)) ?x711 ?x64 (* 180 y) ?x480 (* 18 (* y00 ?x215)) (* 72 z) ?x537 (* y00 ?x756 ?x216) ?x1623 (* (- 2) (* y00 y00 ?x756)) (* (- 3) (* z00 z00 ?x216)))))
 (let ((?x1205 (* ?x1749 ?x1749 ?x1749 ?x756 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x215 ?x215 ?x215 ?x215 ?x1112)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x832 (+ (* 216 ?x1064) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) ?x113) (* (- 1) (* y00 y00 z00 z00)) ?x757 ?x762 ?x818 (* 18 (* y00 z00 y)) (* 24 ?x1171) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x977 (* (- 6) (* z00 y y)) ?x1013 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) ?x516) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) ?x99) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1260 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x1534 (* x00 y)))
 (let ((?x1535 (* 18 ?x1534)))
 (let ((?x1482 (* x00 z)))
 (let ((?x1368 (* 18 ?x1482)))
 (let ((?x367 (* z y)))
 (let ((?x600 (* (- 12) ?x367)))
 (let ((?x1212 (* y00 z)))
 (let ((?x1225 (* 12 ?x1212)))
 (let ((?x1197 (* (- 18) (* z x))))
 (let ((?x1291 (+ ?x1065 (* (- 18) (* y x)) ?x1197 (* (- 3) (* z00 z00 x)) ?x628 (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1225 ?x667 (* 36 (* y00 y)) (* 6 (* z00 y)) ?x600 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x828 ?x1368 (* z y y) ?x1535 ?x711 ?x64 ?x480 (* 18 (* y00 x)) ?x71 ?x537 (* y00 z y) ?x1623 (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x955 (+ (* (- 1) (* y00 z00 z)) ?x600 ?x1197 (* 18 (* x00 z00)) ?x502 ?x554 ?x1368 ?x1225 (* 6 ?x1171) (* 12 (* y00 y)) ?x64 ?x480 (* (- 6) (* z00 y)) ?x71 ?x537 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x1145 (+ (* (- 6) ?x367) ?x410 ?x421 (* (- 12) ?x1212) (* 18 ?x1171) ?x64 ?x480 (* (- 6) (* z00 z)) ?x71 ?x537 (* z00 z00 z))))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x364 (* (- 1) ?x317)))
 (let (($x623 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x364 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1145 0) (= ?x955 0) (= ?x1291 0) (= ?x832 0) (not (= ?x1205 0)))))
 (rewrite (= $x623 $x481))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x264 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ y z)))
 (let ((?x258 (+ n 1)))
 (let ((?x215 (+ x y)))
 (let ((?x218 (+ z 6)))
 (let ((?x29 (- 1)))
 (let ((?x144 (* 3 y00 z00 z00)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x137 (* 3 x00 z00 z00)))
 (let ((?x133 (* 36 y00 y00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x222 (- (- (* (- 18) x00 y00) (* 18 ?x215 ?x216)) (* 18 ?x215 ?x218))))
 (let ((?x226 (+ (- (- ?x222 (* 3 ?x215 z00 z00)) ?x113) (* 3 x00 ?x218 z00))))
 (let ((?x234 (+ (- (+ (- ?x226 (* ?x216 y00 z00)) (* 12 y00 ?x218)) ?x91) (* 36 ?x216 y00) (* 6 ?x216 z00))))
 (let ((?x240 (+ (- (- ?x234 (* 12 ?x216 ?x218)) (* 3 ?x215 ?x218 z00)) (* 2 ?x216 ?x216 z00))))
 (let ((?x246 (+ (- ?x240 ?x133) (* 18 x00 ?x218) (* ?x216 ?x216 ?x218) (* 18 x00 ?x216) ?x137 (* 108 ?x215))))
 (let ((?x253 (+ (- (+ (- ?x246 ?x67) (* 18 ?x215 y00) (* 72 ?x216)) ?x74) (* ?x216 y00 ?x218) ?x144)))
 (let ((?x259 (* (- (- ?x253 (* 2 y00 y00 ?x218)) (* 3 ?x216 z00 z00)) ?x29 ?x258 ?x258 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x215 ?x216 ?x216 ?x216 ?x258 ?x216 ?x216)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) ?x133) ?x90 ?x135 (* 18 x00 y) ?x137 ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) ?x144)))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x259 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1262 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x99 (* y00 z00 z00)))
 (let ((?x1623 (* 3 ?x99)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x516 (* x00 z00 z00)))
 (let ((?x711 (* 3 ?x516)))
 (let ((?x525 (* y00 y00)))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x1171 (* y00 z00)))
 (let ((?x667 (* (- 6) ?x1171)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x628 (* (- 1) ?x113)))
 (let ((?x1064 (* x00 y00)))
 (let ((?x1065 (* (- 18) ?x1064)))
 (let ((?x1112 (+ ?x1065 (* (- 18) (* (+ y z) (+ x y))) (* (- 18) (* (+ 6 z) (+ x y))) (* (- 3) (* z00 z00 (+ x y))) ?x628 (* 3 (* x00 z00 (+ 6 z))) (* (- 1) (* y00 z00 (+ y z))) (* 12 (* y00 (+ 6 z))) ?x667 (* 36 (* y00 (+ y z))) (* 6 (* z00 (+ y z))) (* (- 12) (* (+ 6 z) (+ y z))) (* (- 3) (* z00 (+ 6 z) (+ x y))) (* 2 (* z00 (+ y z) (+ y z))) ?x828 (* 18 (* x00 (+ 6 z))) (* (+ 6 z) (+ y z) (+ y z)) (* 18 (* x00 (+ y z))) ?x711 ?x64 (* 180 y) ?x480 (* 18 (* y00 (+ x y))) (* 72 z) ?x537 (* y00 (+ 6 z) (+ y z)) ?x1623 (* (- 2) (* y00 y00 (+ 6 z))) (* (- 3) (* z00 z00 (+ y z))))))
 (let ((?x215 (+ x y)))
 (let ((?x216 (+ y z)))
 (let ((?x756 (+ 6 z)))
 (let ((?x1749 (+ 1 n)))
 (let ((?x1205 (* ?x1749 ?x1749 ?x1749 ?x756 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x215 ?x215 ?x215 ?x215 ?x1112)))
 (let ((?x1260 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1013 (* 96 ?x525)))
 (let ((?x977 (* 16 (* y00 y00 y00))))
 (let ((?x818 (* (- 4) (* y y y))))
 (let ((?x762 (* 108 (* x x))))
 (let ((?x499 (* y y)))
 (let ((?x757 (* 24 ?x499)))
 (let ((?x832 (+ (* 216 ?x1064) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) ?x113) (* (- 1) (* y00 y00 z00 z00)) ?x757 ?x762 ?x818 (* 18 (* y00 z00 y)) (* 24 ?x1171) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x977 (* (- 6) (* z00 y y)) ?x1013 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) ?x516) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) ?x99) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1260 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x1534 (* x00 y)))
 (let ((?x1535 (* 18 ?x1534)))
 (let ((?x1482 (* x00 z)))
 (let ((?x1368 (* 18 ?x1482)))
 (let ((?x367 (* z y)))
 (let ((?x600 (* (- 12) ?x367)))
 (let ((?x1212 (* y00 z)))
 (let ((?x1225 (* 12 ?x1212)))
 (let ((?x1197 (* (- 18) (* z x))))
 (let ((?x1291 (+ ?x1065 (* (- 18) (* y x)) ?x1197 (* (- 3) (* z00 z00 x)) ?x628 (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x1225 ?x667 (* 36 (* y00 y)) (* 6 (* z00 y)) ?x600 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x828 ?x1368 (* z y y) ?x1535 ?x711 ?x64 ?x480 (* 18 (* y00 x)) ?x71 ?x537 (* y00 z y) ?x1623 (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x955 (+ (* (- 1) (* y00 z00 z)) ?x600 ?x1197 (* 18 (* x00 z00)) ?x502 ?x554 ?x1368 ?x1225 (* 6 ?x1171) (* 12 (* y00 y)) ?x64 ?x480 (* (- 6) (* z00 y)) ?x71 ?x537 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x1145 (+ (* (- 6) ?x367) ?x410 ?x421 (* (- 12) ?x1212) (* 18 ?x1171) ?x64 ?x480 (* (- 6) (* z00 z)) ?x71 ?x537 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x364 (* (- 1) ?x317)))
 (let (($x623 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x364 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1145 0) (= ?x955 0) (= ?x1291 0) (= ?x832 0) (not (= ?x1205 0)))))
 (let ((?x258 (+ n 1)))
 (let ((?x218 (+ z 6)))
 (let ((?x29 (- 1)))
 (let ((?x144 (* 3 y00 z00 z00)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x137 (* 3 x00 z00 z00)))
 (let ((?x133 (* 36 y00 y00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x222 (- (- (* (- 18) x00 y00) (* 18 ?x215 ?x216)) (* 18 ?x215 ?x218))))
 (let ((?x226 (+ (- (- ?x222 (* 3 ?x215 z00 z00)) ?x113) (* 3 x00 ?x218 z00))))
 (let ((?x234 (+ (- (+ (- ?x226 (* ?x216 y00 z00)) (* 12 y00 ?x218)) ?x91) (* 36 ?x216 y00) (* 6 ?x216 z00))))
 (let ((?x240 (+ (- (- ?x234 (* 12 ?x216 ?x218)) (* 3 ?x215 ?x218 z00)) (* 2 ?x216 ?x216 z00))))
 (let ((?x246 (+ (- ?x240 ?x133) (* 18 x00 ?x218) (* ?x216 ?x216 ?x218) (* 18 x00 ?x216) ?x137 (* 108 ?x215))))
 (let ((?x253 (+ (- (+ (- ?x246 ?x67) (* 18 ?x215 y00) (* 72 ?x216)) ?x74) (* ?x216 y00 ?x218) ?x144)))
 (let ((?x259 (* (- (- ?x253 (* 2 y00 y00 ?x218)) (* 3 ?x216 z00 z00)) ?x29 ?x258 ?x258 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x218 ?x215 ?x216 ?x216 ?x216 ?x258 ?x216 ?x216)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) ?x133) ?x90 ?x135 (* 18 x00 y) ?x137 ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) ?x144)))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x263 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x259 0))))))
 (rewrite (= $x263 $x623))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x265 (asserted $x264)))
 (let ((@x1089 (mp (mp @x265 (quant-intro (proof-bind ?x1262) (= $x264 $x1257)) $x1257) (rewrite (= $x1257 $x1257)) $x1257)))
 (let ((@x991 (mp~ (mp @x1089 (quant-intro (proof-bind ?x1594) (= $x1257 $x582)) $x582) (sk (~ $x582 $x1572)) $x1572)))
 (let ((@x1322 (mp @x991 (rewrite (= $x1572 $x504)) $x504)))
 (let ((@x534 (and-elim @x1322 $x519)))
 (let ((@x1603 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x519) $x1131)) @x534 $x1131)))
 (let (($x826 (>= ?x1447 0)))
 (let ((@x1035 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x519) $x826)) @x534 $x826)))
 (let (($x843 (<= ?x1711 0)))
 (let ((@x1722 (and-elim @x1322 $x1715)))
 (let ((@x1019 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1715) $x843)) @x1722 $x843)))
 (let (($x825 (>= ?x1711 0)))
 (let ((@x1222 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1715) $x825)) @x1722 $x825)))
 (let (($x808 (<= ?x767 0)))
 (let ((@x1237 (and-elim @x1322 $x944)))
 (let ((@x305 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x944) $x808)) @x1237 $x808)))
 (let (($x820 (>= ?x767 0)))
 (let ((@x849 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x944) $x820)) @x1237 $x820)))
 (let (($x1151 (<= ?x1422 0)))
 (let ((@x847 (and-elim @x1322 $x373)))
 (let ((@x1694 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x373) $x1151)) @x847 $x1151)))
 (let (($x1138 (>= ?x1422 0)))
 (let ((@x1347 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x373) $x1138)) @x847 $x1138)))
 (let (($x1275 (<= ?x863 0)))
 (let ((@x1361 (and-elim @x1322 $x1094)))
 (let ((@x4369 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1094) $x1275)) @x1361 $x1275)))
 (let (($x819 (>= ?x863 0)))
 (let ((@x4372 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1094) $x819)) @x1361 $x819)))
 (let ((@x4285 ((_ th-lemma arith) (hypothesis (not $x1633)) @x1347 @x1694 @x1035 @x1603 @x4372 @x4369 @x4372 @x4369 @x1347 @x1694 @x849 @x305 @x1222 @x1019 @x849 @x305 @x1222 @x1019 @x1035 @x1603 false)))
 (let ((@x4345 (lemma @x4285 $x1633)))
 (let (($x4045 (>= ?x887 0)))
 (let ((@x4374 ((_ th-lemma arith) (hypothesis (not $x4045)) @x1035 @x1603 @x4372 @x4369 @x4372 @x4369 @x849 @x305 @x849 @x305 @x1222 @x1019 @x4372 @x4369 @x1222 @x1019 @x1035 @x1603 @x1347 @x1694 @x849 @x305 @x1222 @x1019 @x1035 @x1603 false)))
 (let ((@x4375 (lemma @x4374 $x4045)))
 (let (($x4379 (not (<= ?x896 0))))
 (let (($x1372 (>= ?x896 0)))
 (let ((@x3840 ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1372)) (hypothesis $x4045) (hypothesis $x1633) false)))
 (let ((@x4377 (unit-resolution (lemma @x3840 (or (not $x4045) $x1372 (not $x1633))) @x4375 (or $x1372 (not $x1633)))))
 (let ((@x4383 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x983 $x4379 (not $x1372))) (and-elim @x1322 $x1008) (or $x4379 (not $x1372)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x4383 (unit-resolution @x4377 @x4345 $x1372) $x4379) @x4375 @x4345 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 444
 :arith-assert-diseq        35
 :arith-assert-lower        1801
 :arith-assert-upper        1960
 :arith-bound-prop          53
 :arith-branch-var          62
 :arith-conflicts           87
 :arith-eq-adapter          29
 :arith-fixed-eqs           543
 :arith-gcd-tests           1368
 :arith-gomory-cuts         44
 :arith-grobner             137
 :arith-ineq-splits         62
 :arith-max-min             13142
 :arith-nonlinear-bounds    240
 :arith-nonlinear-horner    1982
 :arith-num-rows            30
 :arith-offset-eqs          25
 :arith-patches             188
 :arith-patches_succ        64
 :arith-pivots              5891
 :arith-pseudo-nonlinear    570
 :arith-row-summations      28167
 :arith-tableau-max-columns 137
 :arith-tableau-max-rows    30
 :conflicts                 104
 :decisions                 626
 :del-clause                449
 :final-checks              397
 :max-memory                21.86
 :memory                    19.43
 :minimized-lits            11
 :mk-bool-var               857
 :mk-clause                 798
 :num-allocs                30129619
 :num-checks                1
 :propagations              857
 :restarts                  1
 :rlimit-count              3894746
 :time                      0.59
 :total-time                0.61)
