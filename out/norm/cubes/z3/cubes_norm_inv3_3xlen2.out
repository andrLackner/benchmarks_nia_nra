unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x401 (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0)))))
 (let (($x1051 (<= ?x401 1)))
 (let (($x971 (= ?x401 1)))
 (let ((?x770 (+ k!2 c!3)))
 (let ((?x292 (+ m!1 k!2)))
 (let ((?x991 (+ 6 m!1)))
 (let ((?x506 (+ 1 n!0)))
 (let ((?x1103 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x989 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x884 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x858 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x841 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x803 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x802 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x790 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x788 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x708 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x701 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x697 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x681 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x559 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x544 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x528 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x507 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x481 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x463 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x461 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x429 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x425 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x395 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x369 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x366 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x350 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x326 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x324 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x301 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x263 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x254 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x245 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x204 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x189 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x167 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x154 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x292 ?x292 ?x292 ?x292 ?x770 ?x770 ?x770 ?x770 ?x770 ?x770)))
 (let ((?x465 (+ ?x154 (* (- 2) ?x167) (* 2 ?x189) (* (- 1) ?x204) (* (- 1) ?x245) (* (- 2) ?x254) ?x263 (* (- 3) ?x301) (* 3 ?x324) ?x326 (* 2 ?x350) (* (- 1) ?x366) (* (- 2) ?x369) (* (- 1) ?x395) (* (- 1) ?x425) ?x429 (* 2 ?x461) (* 2 ?x463) (* (- 3) ?x481) (* (- 2) ?x507) (* 2 ?x528) ?x544 (* (- 3) ?x559) (* (- 3) ?x681) ?x697 (* 3 ?x701) (* (- 1) ?x708) (* (- 2) ?x788) (* (- 1) ?x790) ?x802 (* (- 2) ?x803) (* (- 1) ?x841) ?x858 (* 2 ?x884) (* 3 ?x989) (* 3 ?x1103))))
 (let (($x335 (= ?x465 0)))
 (let (($x299 (not $x335)))
 (let ((?x659 (* (- 1) (* k!2 n!0))))
 (let ((?x664 (* 3 c!3)))
 (let ((?x392 (* (- 2) n!0)))
 (let ((?x703 (+ k!2 ?x392 ?x664 ?x659)))
 (let (($x906 (= ?x703 1)))
 (let ((?x764 (* 18 c!3)))
 (let ((?x1079 (* (- 9) n!0)))
 (let ((?x958 (* 5 k!2)))
 (let ((?x994 (* (- 1) (* k!2 k!2))))
 (let ((?x842 (+ (* 9 (* n!0 c!3)) ?x994 ?x958 ?x1079 ?x764)))
 (let (($x818 (= ?x842 4)))
 (let ((?x768 (+ m!1 (* (- 6) n!0))))
 (let (($x399 (= ?x768 6)))
 (let (($x839 (and $x399 $x818 $x906 $x971 $x299)))
 (let ((?x1090 (+ c!3 k!2)))
 (let ((?x804 (+ k!2 m!1)))
 (let ((?x200 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x185 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x287 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x877 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x182 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x685 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x573 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x562 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x293 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x240 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x995 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x998 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x241 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x879 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x694 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x996 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x560 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x1153 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x885 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x1101 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x342 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x636 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x280 (* ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x784 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x598 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x328 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x756 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x758 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x272 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x360 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x151 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x765 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x762 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x650 (* ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x586 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x689 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x506 ?x991 ?x991 ?x991 ?x991 ?x991 ?x991 ?x804 ?x804 ?x804 ?x1090 ?x1090 ?x1090 ?x1090)))
 (let ((?x785 (+ (* 2 ?x689) (* (- 1) ?x586) (* (- 3) ?x650) (* (- 1) ?x762) (* 3 ?x765) ?x151 (* 2 ?x360) ?x272 (* (- 1) ?x758) (* (- 2) ?x756) (* (- 2) ?x328) (* (- 2) ?x598) (* (- 3) ?x784) ?x280 (* 2 ?x636) ?x342 (* 3 ?x1101) (* (- 2) ?x885) (* 3 ?x1153) (* (- 3) ?x560) (* (- 2) ?x996) (* (- 1) ?x694) ?x879 (* (- 2) ?x241) (* 3 ?x998) ?x995 (* (- 1) ?x240) (* 2 ?x293) ?x562 (* (- 1) ?x573) (* (- 3) ?x685) (* (- 1) ?x182) ?x877 (* 2 ?x287) (* (- 1) ?x185) (* 2 ?x200))))
 (let (($x269 (and $x399 (= (+ ?x764 ?x958 ?x1079 ?x994 (* 9 (* c!3 n!0))) 4) (= (+ ?x664 k!2 ?x392 ?x659) 1) $x971 (not (= ?x785 0)))))
 (let (($x217 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x557 (* 2 ?x1124)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x1084)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x891 (* 2 ?x1069)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x695 (* (- 1) ?x1018)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1112 (* (- 3) ?x1010)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x715 (* (- 1) ?x1001)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x505 (* 2 ?x864)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x912 (* (- 1) ?x810)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x641 (* 3 ?x787)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* (- 2) ?x731)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1108 (* (- 1) ?x686)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x693 (* (- 2) ?x678)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1110 (* (- 3) ?x670)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* 3 ?x660)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x552 (* (- 2) ?x632)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1114 (* 3 ?x585)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x575 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x903 (* 2 ?x575)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x902 (* (- 3) ?x547)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x897 (* (- 2) ?x542)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x883 (* (- 2) ?x527)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1134 (* (- 2) ?x517)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x593 (* (- 1) ?x489)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x872 (* 2 ?x368)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1055 (* 3 ?x313)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) ?x289)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1056 (* (- 3) ?x247)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1058 (* (- 1) ?x228)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x888 (* 2 ?x144)))
 (let ((?x213 (+ ?x888 ?x1058 ?x1056 ?x1043 ?x1055 ?x344 ?x872 ?x386 ?x593 ?x1134 ?x883 ?x897 ?x902 ?x565 ?x903 ?x584 ?x1114 ?x552 ?x627 ?x1110 ?x693 ?x1108 ?x719 ?x1117 ?x641 ?x798 ?x912 ?x505 ?x952 ?x715 ?x1112 ?x695 ?x1031 ?x891 ?x563 ?x557)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x256 (= (+ ?x40 ?x44 ?x258 ?x259 (* 9 (* c n))) 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 $x256 $x308 $x346 (not (= ?x213 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1100 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x505 (* 2 ?x864)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x1084)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x557 (* 2 ?x1124)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x912 (* (- 1) ?x810)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x593 (* (- 1) ?x489)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* (- 2) ?x731)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1108 (* (- 1) ?x686)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x693 (* (- 2) ?x678)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1110 (* (- 3) ?x670)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x695 (* (- 1) ?x1018)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1112 (* (- 3) ?x1010)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x715 (* (- 1) ?x1001)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1114 (* 3 ?x585)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x552 (* (- 2) ?x632)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1134 (* (- 2) ?x517)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x891 (* 2 ?x1069)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* 3 ?x660)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x902 (* (- 3) ?x547)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x872 (* 2 ?x368)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x897 (* (- 2) ?x542)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x883 (* (- 2) ?x527)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x888 (* 2 ?x144)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1056 (* (- 3) ?x247)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1058 (* (- 1) ?x228)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1055 (* 3 ?x313)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) ?x289)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x641 (* 3 ?x787)))
 (let ((?x575 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x903 (* 2 ?x575)))
 (let ((?x710 (+ ?x903 ?x641 ?x344 ?x1043 ?x1055 ?x1058 ?x1056 ?x888 ?x883 ?x897 ?x798 ?x386 ?x872 ?x902 ?x565 ?x627 ?x891 ?x1134 ?x719 ?x552 ?x584 ?x1114 ?x715 ?x1112 ?x695 ?x1031 ?x1110 ?x693 ?x1108 ?x1117 ?x593 ?x912 ?x557 ?x563 ?x505 ?x952)))
 (let (($x216 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x775 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x258 ?x259) 4) $x775 $x216 (not (= ?x710 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x202 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x557 (* 2 ?x1124)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x1084)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x891 (* 2 ?x1069)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x695 (* (- 1) ?x1018)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1112 (* (- 3) ?x1010)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x715 (* (- 1) ?x1001)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x505 (* 2 ?x864)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x912 (* (- 1) ?x810)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x641 (* 3 ?x787)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* (- 2) ?x731)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1108 (* (- 1) ?x686)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x693 (* (- 2) ?x678)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1110 (* (- 3) ?x670)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* 3 ?x660)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x552 (* (- 2) ?x632)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1114 (* 3 ?x585)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x575 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x903 (* 2 ?x575)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x902 (* (- 3) ?x547)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x897 (* (- 2) ?x542)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x883 (* (- 2) ?x527)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1134 (* (- 2) ?x517)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x593 (* (- 1) ?x489)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x872 (* 2 ?x368)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1055 (* 3 ?x313)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) ?x289)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1056 (* (- 3) ?x247)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1058 (* (- 1) ?x228)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x888 (* 2 ?x144)))
 (let ((?x213 (+ ?x888 ?x1058 ?x1056 ?x1043 ?x1055 ?x344 ?x872 ?x386 ?x593 ?x1134 ?x883 ?x897 ?x902 ?x565 ?x903 ?x584 ?x1114 ?x552 ?x627 ?x1110 ?x693 ?x1108 ?x719 ?x1117 ?x641 ?x798 ?x912 ?x505 ?x952 ?x715 ?x1112 ?x695 ?x1031 ?x891 ?x563 ?x557)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x256 (= (+ ?x40 ?x44 ?x258 ?x259 (* 9 (* c n))) 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x218 (and $x172 $x256 $x308 $x346 (not (= ?x213 0)))))
 (let ((?x710 (+ ?x903 ?x641 ?x344 ?x1043 ?x1055 ?x1058 ?x1056 ?x888 ?x883 ?x897 ?x798 ?x386 ?x872 ?x902 ?x565 ?x627 ?x891 ?x1134 ?x719 ?x552 ?x584 ?x1114 ?x715 ?x1112 ?x695 ?x1031 ?x1110 ?x693 ?x1108 ?x1117 ?x593 ?x912 ?x557 ?x563 ?x505 ?x952)))
 (let (($x216 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x775 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x630 (and $x172 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x258 ?x259) 4) $x775 $x216 (not (= ?x710 0)))))
 (rewrite (= $x630 $x218))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1143 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x575 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x938 (+ (* (- 2) ?x575) (* (- 3) ?x787) (* (- 1) ?x344) ?x289 (* (- 3) ?x313) ?x228 (* 3 ?x247) (* (- 2) ?x144) (* 2 ?x527) (* 2 ?x542) (* (- 1) ?x798) (* (- 1) ?x386) (* (- 2) ?x368) (* 3 ?x547) (* (- 1) ?x565) (* (- 3) ?x660) (* (- 2) ?x1069) (* 2 ?x517) (* (- 1) ?x719) (* 2 ?x632) (* (- 1) ?x584) (* (- 3) ?x585) ?x1001 (* 3 ?x1010) ?x1018 (* (- 1) ?x1031) (* 3 ?x670) (* 2 ?x678) ?x686 (* 2 ?x731) ?x489 ?x810 (* (- 2) ?x1124) ?x1084 (* (- 2) ?x864) (* (- 1) ?x952))))
 (let (($x216 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x275 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x357 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 (= ?x357 (- 4)) $x275 $x216 (not (= ?x938 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x467 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x505 (* 2 ?x864)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x1084)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x557 (* 2 ?x1124)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x912 (* (- 1) ?x810)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x593 (* (- 1) ?x489)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1117 (* (- 2) ?x731)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1108 (* (- 1) ?x686)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x693 (* (- 2) ?x678)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1110 (* (- 3) ?x670)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x695 (* (- 1) ?x1018)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1112 (* (- 3) ?x1010)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x715 (* (- 1) ?x1001)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1114 (* 3 ?x585)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x552 (* (- 2) ?x632)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1134 (* (- 2) ?x517)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x891 (* 2 ?x1069)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* 3 ?x660)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x902 (* (- 3) ?x547)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x872 (* 2 ?x368)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x897 (* (- 2) ?x542)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x883 (* (- 2) ?x527)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x888 (* 2 ?x144)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1056 (* (- 3) ?x247)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1058 (* (- 1) ?x228)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1055 (* 3 ?x313)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1043 (* (- 1) ?x289)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x641 (* 3 ?x787)))
 (let ((?x575 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x903 (* 2 ?x575)))
 (let ((?x710 (+ ?x903 ?x641 ?x344 ?x1043 ?x1055 ?x1058 ?x1056 ?x888 ?x883 ?x897 ?x798 ?x386 ?x872 ?x902 ?x565 ?x627 ?x891 ?x1134 ?x719 ?x552 ?x584 ?x1114 ?x715 ?x1112 ?x695 ?x1031 ?x1110 ?x693 ?x1108 ?x1117 ?x593 ?x912 ?x557 ?x563 ?x505 ?x952)))
 (let (($x216 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x775 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x630 (and $x172 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x258 ?x259) 4) $x775 $x216 (not (= ?x710 0)))))
 (let ((?x938 (+ (* (- 2) ?x575) (* (- 3) ?x787) (* (- 1) ?x344) ?x289 (* (- 3) ?x313) ?x228 (* 3 ?x247) (* (- 2) ?x144) (* 2 ?x527) (* 2 ?x542) (* (- 1) ?x798) (* (- 1) ?x386) (* (- 2) ?x368) (* 3 ?x547) (* (- 1) ?x565) (* (- 3) ?x660) (* (- 2) ?x1069) (* 2 ?x517) (* (- 1) ?x719) (* 2 ?x632) (* (- 1) ?x584) (* (- 3) ?x585) ?x1001 (* 3 ?x1010) ?x1018 (* (- 1) ?x1031) (* 3 ?x670) (* 2 ?x678) ?x686 (* 2 ?x731) ?x489 ?x810 (* (- 2) ?x1124) ?x1084 (* (- 2) ?x864) (* (- 1) ?x952))))
 (let (($x275 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x357 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x193 (and $x172 (= ?x357 (- 4)) $x275 $x216 (not (= ?x938 0)))))
 (rewrite (= $x193 $x630))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x139 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x132 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x131 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x129 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x124 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x122 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x121 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x120 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x118 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x116 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x114 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x104 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x96 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x78 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 2) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ (- (- ?x73 ?x74) ?x75) ?x78) ?x80) ?x82 ?x83) ?x85) ?x87 ?x88)))
 (let ((?x103 (- (- (- (+ (- (- (- ?x89 ?x90) ?x91) ?x92) ?x96) ?x98) ?x99) ?x100)))
 (let ((?x117 (+ (- (- (+ (- (+ ?x103 ?x104) ?x106) ?x108) ?x110) ?x111) ?x114 ?x115 ?x116)))
 (let ((?x133 (- (+ (- (+ (- ?x117 ?x118) ?x120 ?x121 ?x122 ?x123 ?x124 ?x125) ?x127) ?x129) ?x131)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x133 ?x132) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x577 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x952 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x864 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1084 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1124 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x810 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x731 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x686 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x678 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x670 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1031 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1010 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1001 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x585 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x584 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x632 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x719 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x517 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1069 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x660 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x565 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x368 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x386 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x798 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x542 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x527 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x144 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x247 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x228 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x313 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x289 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x344 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x787 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x575 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x938 (+ (* (- 2) ?x575) (* (- 3) ?x787) (* (- 1) ?x344) ?x289 (* (- 3) ?x313) ?x228 (* 3 ?x247) (* (- 2) ?x144) (* 2 ?x527) (* 2 ?x542) (* (- 1) ?x798) (* (- 1) ?x386) (* (- 2) ?x368) (* 3 ?x547) (* (- 1) ?x565) (* (- 3) ?x660) (* (- 2) ?x1069) (* 2 ?x517) (* (- 1) ?x719) (* 2 ?x632) (* (- 1) ?x584) (* (- 3) ?x585) ?x1001 (* 3 ?x1010) ?x1018 (* (- 1) ?x1031) (* 3 ?x670) (* 2 ?x678) ?x686 (* 2 ?x731) ?x489 ?x810 (* (- 2) ?x1124) ?x1084 (* (- 2) ?x864) (* (- 1) ?x952))))
 (let (($x216 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x275 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x357 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x193 (and $x172 (= ?x357 (- 4)) $x275 $x216 (not (= ?x938 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x132 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x131 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x129 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x124 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x122 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x121 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x120 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x118 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x116 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x114 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x110 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x106 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x104 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x98 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x96 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x92 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x90 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 2 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 2 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x78 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 3 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 2) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (+ (- (+ (- (- ?x73 ?x74) ?x75) ?x78) ?x80) ?x82 ?x83) ?x85) ?x87 ?x88)))
 (let ((?x103 (- (- (- (+ (- (- (- ?x89 ?x90) ?x91) ?x92) ?x96) ?x98) ?x99) ?x100)))
 (let ((?x117 (+ (- (- (+ (- (+ ?x103 ?x104) ?x106) ?x108) ?x110) ?x111) ?x114 ?x115 ?x116)))
 (let ((?x133 (- (+ (- (+ (- ?x117 ?x118) ?x120 ?x121 ?x122 ?x123 ?x124 ?x125) ?x127) ?x129) ?x131)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x138 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x133 ?x132) 0))))))
 (rewrite (= $x138 $x193)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x140 (asserted $x139)))
 (let ((@x409 (mp (mp @x140 (quant-intro (proof-bind ?x577) (= $x139 $x1143)) $x1143) (rewrite (= $x1143 $x1143)) $x1143)))
 (let ((@x286 (mp (mp @x409 (quant-intro (proof-bind ?x467) (= $x1143 $x1100)) $x1100) (quant-intro (proof-bind ?x202) (= $x1100 $x217)) $x217)))
 (let ((@x297 (mp (mp~ @x286 (sk (~ $x217 $x269)) $x269) (rewrite (= $x269 $x839)) $x839)))
 (let ((@x332 (and-elim @x297 $x971)))
 (let ((@x170 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x971) $x1051)) @x332 $x1051)))
 (let (($x211 (>= ?x401 1)))
 (let ((@x959 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x971) $x211)) @x332 $x211)))
 (let (($x870 (<= ?x768 6)))
 (let ((@x230 (and-elim @x297 $x399)))
 (let ((@x807 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x399) $x870)) @x230 $x870)))
 (let (($x264 (>= ?x768 6)))
 (let ((@x150 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x399) $x264)) @x230 $x264)))
 (let (($x853 (<= ?x842 4)))
 (let ((@x294 (and-elim @x297 $x818)))
 (let ((@x854 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x818) $x853)) @x294 $x853)))
 (let (($x403 (>= ?x842 4)))
 (let ((@x690 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x818) $x403)) @x294 $x403)))
 (let (($x345 (<= ?x703 1)))
 (let ((@x890 (and-elim @x297 $x906)))
 (let ((@x161 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x906) $x345)) @x890 $x345)))
 (let (($x190 (>= ?x703 1)))
 (let ((@x797 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x906) $x190)) @x890 $x190)))
 (let (($x282 (not (<= ?x465 0))))
 (let (($x316 (>= ?x465 0)))
 (let ((@x849 ((_ th-lemma arith) (hypothesis (not $x316)) @x959 @x170 @x150 @x807 @x959 @x170 @x797 @x161 @x959 @x170 @x690 @x854 @x959 @x170 @x150 @x807 @x959 @x170 false)))
 (let ((@x290 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x335 $x282 (not $x316))) (and-elim @x297 $x299) (or $x282 (not $x316)))))
 ((_ th-lemma arith) (unit-resolution @x290 (lemma @x849 $x316) $x282) @x959 @x170 @x150 @x807 @x959 @x170 @x797 @x161 @x959 @x170 @x690 @x854 @x959 @x170 @x150 @x807 @x959 @x170 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             457
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 66
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.65
 :memory                    3.47
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                88614492
 :num-checks                1
 :propagations              11
 :rlimit-count              146625
 :time                      0.17
 :total-time                0.18)
