unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x112 (+ m!1 (* (- 6) n!0))))
 (let (($x607 (<= ?x112 6)))
 (let (($x503 (= ?x112 6)))
 (let ((?x414 (+ k!2 c!3)))
 (let ((?x530 (+ m!1 k!2)))
 (let ((?x191 (+ 6 m!1)))
 (let ((?x103 (+ 1 n!0)))
 (let ((?x320 (+ (* 6 (* ?x103 ?x103 ?x103 ?x191 ?x191 ?x530 ?x530 ?x530 ?x414 ?x414)) (* (- 1) (* ?x103 ?x103 ?x191 ?x191 ?x191 ?x530 ?x530 ?x530 ?x414 ?x414)) (* ?x103 ?x103 ?x191 ?x191 ?x191 ?x191 ?x530 ?x530 ?x414 ?x414) (* (- 6) (* ?x103 ?x103 ?x103 ?x191 ?x191 ?x191 ?x530 ?x530 ?x414 ?x414)) (* 6 (* ?x103 ?x103 ?x191 ?x191 ?x530 ?x530 ?x530 ?x414 ?x414)) (* (- 6) (* ?x103 ?x191 ?x191 ?x191 ?x530 ?x414 ?x414 ?x414)) (* (- 6) (* ?x191 ?x191 ?x191 ?x530 ?x414 ?x414 ?x414)) (* (- 6) (* ?x103 ?x103 ?x191 ?x191 ?x191 ?x530 ?x530 ?x414 ?x414)) (* ?x191 ?x191 ?x191 ?x191 ?x530 ?x414 ?x414 ?x414))))
 (let (($x159 (= ?x320 0)))
 (let (($x167 (not $x159)))
 (let (($x181 (= (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0)) (- 1))))
 (let (($x281 (= (+ (* k!2 n!0) (* (- 1) k!2) (* (- 3) c!3) (* 2 n!0)) (- 1))))
 (let ((?x98 (* k!2 k!2)))
 (let ((?x516 (+ ?x98 (* (- 5) k!2) (* (- 18) c!3) (* (- 9) (* c!3 n!0)) (* 9 n!0))))
 (let (($x622 (and $x503 (= ?x516 (- 4)) $x281 $x181 $x167)))
 (let ((?x188 (+ c!3 k!2)))
 (let ((?x194 (+ k!2 m!1)))
 (let ((?x292 (+ (* 6 (* ?x103 ?x103 ?x103 ?x191 ?x191 ?x191 ?x194 ?x194 ?x188 ?x188)) (* (- 1) (* ?x191 ?x191 ?x191 ?x191 ?x194 ?x188 ?x188 ?x188)) (* 6 (* ?x103 ?x103 ?x191 ?x191 ?x191 ?x194 ?x194 ?x188 ?x188)) (* 6 (* ?x191 ?x191 ?x191 ?x194 ?x188 ?x188 ?x188)) (* (- 1) (* ?x103 ?x103 ?x191 ?x191 ?x191 ?x191 ?x194 ?x194 ?x188 ?x188)) (* (- 6) (* ?x103 ?x103 ?x103 ?x191 ?x191 ?x194 ?x194 ?x194 ?x188 ?x188)) (* (- 6) (* ?x103 ?x103 ?x191 ?x191 ?x194 ?x194 ?x194 ?x188 ?x188)) (* 6 (* ?x103 ?x191 ?x191 ?x191 ?x194 ?x188 ?x188 ?x188)) (* ?x103 ?x103 ?x191 ?x191 ?x191 ?x194 ?x194 ?x194 ?x188 ?x188))))
 (let (($x190 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x416 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x98) (* 9 (* c!3 n!0)))))
 (let (($x294 (and $x503 (= ?x416 4) $x190 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x292 0)))))
 (let (($x147 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x311 (+ 1 n)))
 (let ((?x508 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x217 (+ (* 6 (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x306 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) ?x508)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x208 $x260 $x298 (not (= ?x217 0)))))))))))))))))) :qid k!34))
 ))
 (let (($x244 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x336 (* ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x311 (+ 1 n)))
 (let ((?x352 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x176 (* ?x306 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x535 (+ ?x176 (* (- 6) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x352 (* (- 6) ?x336))))
 (let (($x174 (not (= ?x535 0))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x214 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x214 $x153 $x174)))))))))))))))))) :qid k!34))
 ))
 (let ((?x271 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x311 (+ 1 n)))
 (let ((?x508 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x217 (+ (* 6 (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 1) (* ?x306 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) ?x508)))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x253 (and $x124 $x208 $x260 $x298 (not (= ?x217 0)))))
 (let ((?x352 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x176 (* ?x306 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x535 (+ ?x176 (* (- 6) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x508) (* 6 (* ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x352 (* (- 6) (* ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))))
 (let (($x174 (not (= ?x535 0))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x214 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x287 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x214 $x153 $x174)))
 (rewrite (= $x287 $x253))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x336 (* ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x311 (+ 1 n)))
 (let ((?x352 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x176 (* ?x306 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x535 (+ ?x176 (* (- 6) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x352 (* (- 6) ?x336))))
 (let (($x174 (not (= ?x535 0))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x242 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x171 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 (= ?x171 (- 4)) $x242 $x153 $x174)))))))))))))))) :qid k!34))
 ))
 (let ((?x391 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x336 (* ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x311 (+ 1 n)))
 (let ((?x352 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x176 (* ?x306 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x535 (+ ?x176 (* (- 6) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x352 (* (- 6) ?x336))))
 (let (($x174 (not (= ?x535 0))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x214 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x287 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x214 $x153 $x174)))
 (let (($x242 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x171 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x199 (and $x124 (= ?x171 (- 4)) $x242 $x153 $x174)))
 (rewrite (= $x199 $x287)))))))))))))))))))))))))
 ))
 (let (($x91 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ n 1)))
 (let ((?x77 (- (* ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70) (* 6 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x78 (- ?x77 (* 6 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x80 (- (- ?x78 (* 6 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x72)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x84 (+ ?x80 (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72) (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72 ?x72) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let (($x88 (not (= (- ?x84 (* 6 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70)) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x88)))))))))))))))))) :qid k!34))
 ))
 (let ((?x180 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x336 (* ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x311 (+ 1 n)))
 (let ((?x352 (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)))
 (let ((?x176 (* ?x306 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x535 (+ ?x176 (* (- 6) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68)) (* (- 6) (* ?x311 ?x306 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)) (* (- 1) (* ?x311 ?x311 ?x306 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) (* 6 (* ?x311 ?x311 ?x311 ?x306 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68)) ?x352 (* (- 6) ?x336))))
 (let (($x174 (not (= ?x535 0))))
 (let (($x153 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x242 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x171 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x199 (and $x124 (= ?x171 (- 4)) $x242 $x153 $x174)))
 (let ((?x70 (+ m 6)))
 (let ((?x72 (+ n 1)))
 (let ((?x77 (- (* ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70) (* 6 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x78 (- ?x77 (* 6 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72 ?x72))))
 (let ((?x80 (- (- ?x78 (* 6 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x72)) (* ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let ((?x84 (+ ?x80 (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72) (* 6 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x72 ?x72 ?x72) (* ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x72 ?x72))))
 (let (($x88 (not (= (- ?x84 (* 6 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70)) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x90 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x88))))
 (rewrite (= $x90 $x199))))))))))))))))))))))))))))))))
 ))
 (let ((@x92 (asserted $x91)))
 (let ((@x374 (mp (mp @x92 (quant-intro (proof-bind ?x180) (= $x91 $x175)) $x175) (rewrite (= $x175 $x175)) $x175)))
 (let ((@x118 (mp (mp @x374 (quant-intro (proof-bind ?x391) (= $x175 $x244)) $x244) (quant-intro (proof-bind ?x271) (= $x244 $x147)) $x147)))
 (let ((@x493 (mp (mp~ @x118 (sk (~ $x147 $x294)) $x294) (rewrite (= $x294 $x622)) $x622)))
 (let ((@x500 (and-elim @x493 $x503)))
 (let ((@x558 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x503) $x607)) @x500 $x607)))
 (let (($x383 (>= ?x112 6)))
 (let ((@x621 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x503) $x383)) @x500 $x383)))
 (let (($x133 (not (<= ?x320 0))))
 (let (($x405 (>= ?x320 0)))
 (let ((@x428 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x159 $x133 (not $x405))) (and-elim @x493 $x167) (or $x133 (not $x405)))))
 (let ((@x163 (unit-resolution @x428 (lemma ((_ th-lemma arith) (hypothesis (not $x405)) @x621 @x558 false) $x405) $x133)))
 ((_ th-lemma arith) @x163 @x621 @x558 false)))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        10
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             152
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        2
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 38
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.64
 :memory                    3.13
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1201091
 :num-checks                1
 :propagations              10
 :rlimit-count              3988
 :time                      0.01
 :total-time                0.02)
