unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun p!5 () Int)
(declare-fun q!3 () Int)
(declare-fun a!4 () Int)
(declare-fun s!0 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x322 (* p!5 b!2)))
 (let ((?x323 (* (- 1) ?x322)))
 (let ((?x319 (* a!4 q!3)))
 (let ((?x128 (* q00 a00)))
 (let ((?x174 (* (- 1) ?x128)))
 (let ((?x113 (* p00 b00)))
 (let ((?x122 (+ ?x113 ?x174 ?x319 ?x323)))
 (let (($x670 (>= ?x122 0)))
 (let (($x165 (= ?x122 0)))
 (let ((?x188 (* (- 1) ?x319)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x231 (+ ?x127 ?x128 ?x188 ?x322)))
 (let ((?x572 (+ p!5 (* (- 1) q!3))))
 (let ((?x574 (+ a!4 (* (- 1) b!2))))
 (let ((?x575 (+ r!1 (* (- 1) s!0))))
 (let ((?x702 (* ?x575 ?x575 ?x575 ?x575 ?x575 ?x574 ?x574 ?x574 ?x574 ?x574 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572 ?x231 s!0 s!0 s!0 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let (($x701 (= ?x702 0)))
 (let ((?x305 (+ (* (- 1) p!5) q!3)))
 (let ((?x336 (+ (* (- 1) a!4) b!2)))
 (let ((?x325 (+ (* (- 1) r!1) s!0)))
 (let ((?x591 (* ?x325 ?x325 ?x325 ?x336 ?x336 ?x336 ?x336 ?x305 ?x305 ?x305 ?x305 ?x231 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let (($x596 (= ?x591 0)))
 (let (($x226 (not $x596)))
 (let (($x729 (or $x226 (not $x701))))
 (let ((?x722 (+ (* q00 r00 b!2) (* p00 b00 s!0) (* (- 1) (* p00 s00 b!2)) (* s00 a00 q!3) (* (- 1) (* r00 b00 q!3)) (* (- 1) (* q00 a00 s!0)))))
 (let ((?x678 (+ (* r00 b00 p!5) (* p00 s00 a!4) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* q00 a00 r!1) (* (- 1) (* q00 r00 a!4)))))
 (let ((?x124 (* s00 a00)))
 (let ((?x135 (+ ?x124 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) (* r!1 b!2))))
 (let ((?x41 (* q00 r00)))
 (let ((?x295 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x677 (and (= (+ ?x37 ?x295 (* r!1 q!3) (* (- 1) (* p!5 s!0))) 0) (= ?x135 0) $x165 (= ?x678 0) (= ?x722 0) $x729)))
 (let ((?x212 (+ ?x127 ?x188 ?x128 ?x322)))
 (let ((?x693 (* ?x575 ?x575 ?x575 ?x575 ?x575 ?x574 ?x574 ?x574 ?x574 ?x574 ?x572 ?x572 ?x572 ?x572 ?x572 ?x572 ?x212 s!0 s!0 s!0 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let ((?x287 (* ?x325 ?x325 ?x325 ?x336 ?x336 ?x336 ?x336 ?x305 ?x305 ?x305 ?x305 ?x212 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let ((?x166 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x676 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x142 (* r00 b00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x298 (* a!4 s!0)))
 (let (($x181 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x688 (and $x181 (= (+ ?x298 (* (- 1) (* b!2 r!1)) ?x131 ?x142) 0) (= (+ ?x113 ?x319 ?x174 ?x323) 0) (= ?x676 0) (= ?x166 0) (or (not (= ?x287 0)) (not (= ?x693 0))))))
 (let (($x179 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x159 (* p b)))
 (let ((?x128 (* q00 a00)))
 (let ((?x120 (* a q)))
 (let ((?x121 (* (- 1) ?x120)))
 (let ((?x113 (* p00 b00)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x679 (+ ?x127 ?x121 ?x128 ?x159)))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x707 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x679 s s s b b b b q q q q)))
 (let ((?x255 (* (- 1) p)))
 (let ((?x267 (+ ?x255 q)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x628 (+ ?x351 b)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x585 (+ ?x589 s)))
 (let ((?x674 (* ?x585 ?x585 ?x585 ?x628 ?x628 ?x628 ?x628 ?x267 ?x267 ?x267 ?x267 ?x679 r r r r r a a a a a p p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let (($x177 (= (+ ?x113 ?x120 (* (- 1) ?x128) (* (- 1) ?x159)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x152 (= (+ ?x33 ?x133 ?x41 (* (- 1) (* q r))) 0)))
 (and $x152 $x157 $x177 $x243 $x311 (or (not (= ?x674 0)) (not (= ?x707 0)))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x136 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x189 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x189 s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x603 (+ q ?x255)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x603 ?x603 ?x603 ?x603 ?x220 r r r r r a a a a a p p p p p p)))
 (let (($x588 (or (not (= ?x145 0)) (not (= ?x222 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x198 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x627 (* p00 s00 a)))
 (let ((?x308 (* b00 r00 p)))
 (let ((?x329 (+ ?x308 ?x627 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x264 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x201 (* r b)))
 (let (($x605 (= (+ ?x201 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x295 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x129 (* r q)))
 (and (= (+ ?x129 (* (- 1) (* s p)) ?x37 ?x295) 0) $x605 $x264 (= ?x329 0) $x207 $x588)))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x158 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x159 (* p b)))
 (let ((?x128 (* q00 a00)))
 (let ((?x120 (* a q)))
 (let ((?x121 (* (- 1) ?x120)))
 (let ((?x113 (* p00 b00)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x679 (+ ?x127 ?x121 ?x128 ?x159)))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x707 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x679 s s s b b b b q q q q)))
 (let ((?x255 (* (- 1) p)))
 (let ((?x267 (+ ?x255 q)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x628 (+ ?x351 b)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x585 (+ ?x589 s)))
 (let ((?x674 (* ?x585 ?x585 ?x585 ?x628 ?x628 ?x628 ?x628 ?x267 ?x267 ?x267 ?x267 ?x679 r r r r r a a a a a p p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let (($x177 (= (+ ?x113 ?x120 (* (- 1) ?x128) (* (- 1) ?x159)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x152 (= (+ ?x33 ?x133 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x726 (and $x152 $x157 $x177 $x243 $x311 (or (not (= ?x674 0)) (not (= ?x707 0))))))
 (let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 (+ (* (- 1) (* ?x254 q)) ?x55 ?x279 (* ?x302 b)) s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q ?x255) a)) ?x55 ?x279 (* (+ b ?x351) p))))
 (let ((?x603 (+ q ?x255)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x603 ?x603 ?x603 ?x603 ?x220 r r r r r a a a a a p p p p p p)))
 (let (($x588 (or (not (= ?x145 0)) (not (= ?x222 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x198 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x627 (* p00 s00 a)))
 (let ((?x308 (* b00 r00 p)))
 (let ((?x329 (+ ?x308 ?x627 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x264 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x201 (* r b)))
 (let (($x605 (= (+ ?x201 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x206 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x576 (and $x206 $x605 $x264 (= ?x329 0) $x207 $x588)))
 (rewrite (= $x576 $x726)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x247 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x189 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x189 s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x603 (+ q ?x255)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x603 ?x603 ?x603 ?x603 ?x220 r r r r r a a a a a p p p p p p)))
 (let (($x588 (or (not (= ?x145 0)) (not (= ?x222 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x198 0)))
 (let ((?x625 (* a00 s00 p)))
 (let ((?x330 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x150 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x330 ?x625 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x335 (* s a)))
 (let (($x265 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x335 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x280 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x280 ?x133 ?x41) 0) $x265 (= (+ (* (- 1) (* q a)) ?x55 ?x279 (* b p)) 0) (= ?x150 0) $x207 $x588))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x307 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x189 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x189 s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x603 (+ q ?x255)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x603 ?x603 ?x603 ?x603 ?x220 r r r r r a a a a a p p p p p p)))
 (let (($x588 (or (not (= ?x145 0)) (not (= ?x222 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x198 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x627 (* p00 s00 a)))
 (let ((?x308 (* b00 r00 p)))
 (let ((?x329 (+ ?x308 ?x627 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x264 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x201 (* r b)))
 (let (($x605 (= (+ ?x201 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x295 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x129 (* r q)))
 (let (($x576 (and (= (+ ?x129 (* (- 1) (* s p)) ?x37 ?x295) 0) $x605 $x264 (= ?x329 0) $x207 $x588)))
 (let ((?x625 (* a00 s00 p)))
 (let ((?x330 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x270 (= (+ (* (- 1) ?x308) (* (- 1) ?x627) ?x65 ?x330 ?x625 (* (- 1) ?x69)) 0)))
 (let (($x265 (= (+ (* (- 1) ?x201) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x315 (and (= (+ (* (- 1) ?x129) (* s p) (* (- 1) ?x37) ?x41) 0) $x265 (= (+ (* (- 1) (* q a)) ?x55 ?x279 (* b p)) 0) $x270 $x207 $x588)))
 (rewrite (= $x315 $x576)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x102 (- s r)))
 (let ((?x99 (- b a)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x101 (+ (- (+ (* ?x31 a ?x95) (* a00 q00)) (* b00 p00)) (* ?x99 p))))
 (let ((?x103 (* ?x101 ?x31 a p p p ?x95 r r r ?x102 ?x102 a a a ?x99 ?x99 ?x99 p ?x95 ?x95 ?x95 r r a ?x99 p p ?x102)))
 (let ((?x88 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x91 (- r s)))
 (let ((?x90 (+ (- (+ (* ?x31 ?x84 q) (* a00 q00)) (* b00 p00)) (* b ?x88))))
 (let ((?x92 (* ?x90 ?x31 ?x84 ?x88 ?x88 ?x88 q ?x91 ?x91 ?x91 s s ?x84 ?x84 ?x84 b b b ?x88 q q q ?x91 ?x91 ?x84 b ?x88 ?x88 s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x138 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x279 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x189 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x279 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x189 s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x279 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x603 (+ q ?x255)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x603 ?x603 ?x603 ?x603 ?x220 r r r r r a a a a a p p p p p p)))
 (let (($x588 (or (not (= ?x145 0)) (not (= ?x222 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x198 0)))
 (let ((?x625 (* a00 s00 p)))
 (let ((?x330 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x150 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x330 ?x625 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x335 (* s a)))
 (let (($x265 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x335 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x280 (* s p)))
 (let (($x315 (and (= (+ (* (- 1) (* r q)) ?x280 ?x133 ?x41) 0) $x265 (= (+ (* (- 1) (* q a)) ?x55 ?x279 (* b p)) 0) (= ?x150 0) $x207 $x588)))
 (let ((?x102 (- s r)))
 (let ((?x99 (- b a)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x103 (* (+ (- (+ (* ?x31 a ?x95) ?x55) ?x57) (* ?x99 p)) ?x31 a p p p ?x95 r r r ?x102 ?x102 a a a ?x99 ?x99 ?x99 p ?x95 ?x95 ?x95 r r a ?x99 p p ?x102)))
 (let ((?x88 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x91 (- r s)))
 (let ((?x92 (* (+ (- (+ (* ?x31 ?x84 q) ?x55) ?x57) (* b ?x88)) ?x31 ?x84 ?x88 ?x88 ?x88 q ?x91 ?x91 ?x91 s s ?x84 ?x84 ?x84 b b b ?x88 q q q ?x91 ?x91 ?x84 b ?x88 ?x88 s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x107 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) ?x57) (* b p)) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))
 (rewrite (= $x107 $x315)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x132 (mp (mp @x109 (quant-intro (proof-bind ?x138) (= $x108 $x247)) $x247) (rewrite (= $x247 $x247)) $x247)))
 (let ((@x271 (mp (mp @x132 (quant-intro (proof-bind ?x307) (= $x247 $x136)) $x136) (quant-intro (proof-bind ?x158) (= $x136 $x179)) $x179)))
 (let ((@x703 (mp (mp~ @x271 (sk (~ $x179 $x688)) $x688) (rewrite (= $x688 $x677)) $x677)))
 (let ((@x704 (and-elim @x703 $x165)))
 (let ((@x597 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x165) $x670)) @x704 $x670)))
 (let (($x716 (<= ?x122 0)))
 (let ((@x618 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x165) $x716)) @x704 $x716)))
 (let (($x662 (not (<= ?x591 0))))
 (let (($x686 (>= ?x702 0)))
 (let (($x259 (<= ?x702 0)))
 (let ((@x664 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x701 (not $x259) (not $x686))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x259)) @x618 @x597 false) $x259) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x686)) @x618 @x597 false) $x686) $x701)))
 (let (($x345 (>= ?x591 0)))
 (let ((@x659 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x596 $x662 (not $x345))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x345)) @x618 @x597 false) $x345) (unit-resolution (and-elim @x703 $x729) @x664 $x226) $x662)))
 ((_ th-lemma arith farkas 1 1 1) @x659 @x618 @x597 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.62
 :memory                    3.13
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1377730
 :num-checks                1
 :propagations              19
 :rlimit-count              9329
 :time                      0.01
 :total-time                0.02)
