unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x252 (* r00 r00)))
 (let ((?x266 (* (- 3) ?x252)))
 (let ((?x1335 (+ s00 ?x266 (* (- 1) s!1) (* 3 (* r!2 r!2)))))
 (let (($x1167 (<= ?x1335 0)))
 (let (($x617 (= ?x1335 0)))
 (let ((?x710 (* 3 (* r!2 r!2 r!2 x!0))))
 (let ((?x1401 (* (- 3) (* r!2 r!2 s!1))))
 (let ((?x1067 (* s00 x!0)))
 (let ((?x939 (* s!1 s!1)))
 (let ((?x771 (* r!2 s!1 s!1)))
 (let ((?x1162 (+ 3 (* 6 r!2) s!1)))
 (let ((?x661 (+ 1 r!2)))
 (let ((?x768 (* (- 1) (* ?x661 ?x661 ?x661 ?x1162 ?x1162 ?x1162 s!1))))
 (let ((?x1427 (* (- 3) (* ?x661 ?x661 ?x661 ?x1162 ?x1162 ?x1162 r00 r00))))
 (let ((?x656 (* (- 3) (* r!2 r!2 r!2 s!1))))
 (let ((?x1264 (* 3 (* ?x661 ?x661 ?x661 ?x1162 ?x1162 ?x1162 r!2 r!2))))
 (let ((?x434 (* ?x661 ?x661 ?x661 ?x1162 ?x1162 ?x1162 s00)))
 (let ((?x333 (* 3 (* r!2 r!2 x!0))))
 (let ((?x1392 (+ ?x333 (* 3 (* r00 r00 s!1)) ?x434 ?x1264 ?x656 ?x1427 (* (- 3) (* r00 r00 x!0)) ?x768 ?x771 (* (- 1) (* s00 s!1)) ?x939 (* (- 1) (* r!2 x!0 s!1)) (* (- 1) (* x!0 s!1)) ?x1067 (* (- 1) (* s00 r!2 s!1)) (* 3 (* r00 r00 r!2 s!1)) ?x1401 ?x710 (* (- 3) (* r00 r00 r!2 x!0)) (* s00 r!2 x!0))))
 (let (($x530 (= ?x1392 0)))
 (let (($x737 (not $x530)))
 (let ((?x848 (* (- 9) s!1)))
 (let ((?x1297 (* x00 x00)))
 (let ((?x1330 (* 108 ?x1297)))
 (let ((?x1135 (* s00 s00 s00)))
 (let ((?x985 (* 16 ?x1135)))
 (let ((?x833 (* r00 r00 r00 x00)))
 (let ((?x311 (* (- 432) ?x833)))
 (let ((?x756 (* s00 x00)))
 (let ((?x812 (* (- 108) ?x756)))
 (let ((?x598 (* s00 r00 r00)))
 (let ((?x820 (* (- 36) ?x598)))
 (let ((?x542 (* s00 s00)))
 (let ((?x1078 (* 51 ?x542)))
 (let ((?x473 (* r00 x00)))
 (let ((?x488 (* 108 ?x473)))
 (let ((?x274 (* r00 r00 s!1)))
 (let ((?x976 (* 36 ?x274)))
 (let ((?x137 (* 9 s00)))
 (let ((?x840 (+ ?x137 ?x976 (* 54 (* r00 s!1)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x488 ?x1078 (* (- 216) (* s00 r00 x!0)) ?x820 (* (- 4) (* s!1 s!1 s!1)) (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 12) (* s00 s!1 s!1)) ?x812 (* 36 (* r00 r00 s!1 s!1)) ?x311 (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* x00 x!0)) (* (- 66) (* s00 s!1)) (* 15 ?x939) (* 432 (* r00 r00 r00 x!0)) (* 108 (* x!0 x!0)) (* 216 (* s00 r00 r00 r00)) (* (- 108) (* x!0 s!1)) (* 108 ?x1067) ?x985 ?x1330 ?x848 (* 108 (* x00 s!1)) (* (- 108) (* r00 x!0)) (* 108 (* s00 r00 s!1)))))
 (let ((?x851 (+ ?x137 ?x976 (* 24 (* r00 s!1)) (* (- 24) (* s00 r00)) (* 54 ?x473) (* 15 ?x542) (* (- 4) (* r00 s!1 s!1)) ?x820 (* 2 (* s00 s00 r00)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 6) ?x756) (* (- 2) ?x771) (* 54 (* x00 r!2)) (* 36 (* r00 r00 x00)) (* (- 12) (* s00 s!1)) (* (- 3) ?x939) (* (- 6) (* x!0 s!1)) (* (- 36) (* r00 r!2 x!0)) (* 6 ?x1067) (* (- 2) (* s00 r!2 s!1)) (* (- 54) (* r!2 x!0)) (* 24 (* r!2 s!1)) (* 4 (* s00 s00 r!2)) (* (- 24) (* s00 r!2)) ?x848 (* 6 (* x00 s!1)) (* (- 54) (* r00 x!0)) (* 2 (* s00 r00 s!1)))))
 (let (($x887 (= ?x851 0)))
 (let ((?x1008 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1238 (+ ?x44 (* 6 ?x274) (* 9 (* r00 s!1)) (* (- 9) (* s00 r00)) (* 18 ?x473) (* 4 ?x542) (* (- 6) ?x598) (* 18 (* x00 r!2)) (* 6 (* s00 r00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* (- 2) (* s00 s!1)) (* (- 2) ?x939) (* (- 18) (* r!2 x!0)) (* 9 (* r!2 s!1)) (* (- 9) (* s00 r!2)) ?x1008 (* (- 18) (* r00 x!0)))))
 (let (($x1222 (= ?x1238 0)))
 (let ((?x1164 (* r!2 s!1)))
 (let ((?x863 (* 2 ?x1164)))
 (let ((?x920 (* 6 x!0)))
 (let ((?x420 (* r00 r00 r00)))
 (let ((?x421 (* 12 ?x420)))
 (let ((?x377 (* s00 r00)))
 (let ((?x455 (* (- 6) ?x377)))
 (let ((?x942 (* 3 r!2)))
 (let ((?x452 (* (- 6) x00)))
 (let ((?x451 (* (- 3) r00)))
 (let ((?x1195 (+ ?x44 ?x451 ?x452 (* (- 12) (* r00 r00 r!2)) ?x942 ?x455 ?x421 ?x920 ?x863 (* 4 (* s00 r!2)) ?x1008)))
 (let (($x371 (and $x617 (= ?x1195 0) $x1222 $x887 (= ?x840 0) $x737)))
 (let ((?x1266 (* x!0 s00)))
 (let ((?x750 (+ ?x939 ?x656 (* 3 (* s!1 r00 r00)) ?x1266 ?x434 ?x768 (* (- 1) (* s!1 s00)) ?x771 (* (- 1) (* s!1 x!0)) (* (- 1) (* r!2 s!1 x!0)) (* (- 1) (* r!2 s!1 s00)) (* (- 3) (* r!2 x!0 r00 r00)) (* 3 (* r!2 s!1 r00 r00)) ?x710 ?x1264 (* (- 3) (* x!0 r00 r00)) (* r!2 x!0 s00) ?x1427 ?x333 ?x1401)))
 (let ((?x1327 (* (- 108) ?x1297)))
 (let ((?x1326 (* (- 16) ?x1135)))
 (let ((?x1007 (* s00 r00 r00 r00)))
 (let ((?x1322 (* (- 216) ?x1007)))
 (let ((?x834 (* 432 ?x833)))
 (let ((?x1080 (* 108 ?x756)))
 (let ((?x682 (* s00 s00 r00 r00)))
 (let ((?x683 (* 36 ?x682)))
 (let ((?x619 (* s00 s00 r00)))
 (let ((?x963 (* 108 ?x619)))
 (let ((?x951 (* 36 ?x598)))
 (let ((?x1316 (* (- 51) ?x542)))
 (let ((?x1143 (* s!1 r00 r00)))
 (let ((?x955 (* (- 36) ?x1143)))
 (let ((?x1313 (* (- 108) ?x473)))
 (let ((?x464 (* s00 r00 x00)))
 (let ((?x1312 (* (- 216) ?x464)))
 (let ((?x471 (* 54 ?x377)))
 (let ((?x938 (* (- 9) s00)))
 (let ((?x923 (* 9 s!1)))
 (let ((?x653 (+ ?x923 ?x938 ?x471 ?x1312 ?x1313 (* (- 15) ?x939) ?x955 ?x1316 (* (- 108) ?x1266) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x951 ?x963 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x683 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1080 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x834 (* 12 (* s!1 s!1 s00)) ?x1322 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1326 (* 216 (* x!0 x00)) ?x1327)))
 (let ((?x828 (* r00 r00 x00)))
 (let ((?x841 (* (- 36) ?x828)))
 (let ((?x757 (* 6 ?x756)))
 (let ((?x647 (* (- 2) ?x619)))
 (let ((?x867 (* (- 15) ?x542)))
 (let ((?x502 (* (- 54) ?x473)))
 (let ((?x515 (* 24 ?x377)))
 (let ((?x435 (+ ?x923 ?x938 (* (- 24) ?x1164) (* 24 (* r!2 s00)) ?x515 ?x502 (* 3 ?x939) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x955 ?x867 (* (- 6) ?x1266) (* 54 (* x!0 r00)) ?x951 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x647 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x757 (* 2 ?x771) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x841 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x599 (* 6 ?x598)))
 (let ((?x555 (* (- 4) ?x542)))
 (let ((?x487 (* (- 18) ?x473)))
 (let ((?x492 (* 9 ?x377)))
 (let ((?x329 (* (- 3) s00)))
 (let ((?x1415 (+ (* 3 s!1) ?x329 (* (- 9) ?x1164) (* 9 (* r!2 s00)) ?x492 ?x487 (* 2 ?x939) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1143) ?x555 (* 18 (* x!0 r00)) ?x599 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x503 (+ ?x942 ?x1008 ?x920 ?x44 ?x451 ?x452 ?x863 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x455 ?x421)))
 (let (($x1028 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x252)) 0)))
 (let (($x1438 (and $x1028 (= ?x503 0) (= ?x1415 0) (= ?x435 0) (= ?x653 0) (not (= ?x750 0)))))
 (let (($x1071 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1334 (+ 3 ?x211 s)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x760 (* r s s)))
 (let ((?x551 (* x s00)))
 (let ((?x496 (* s s)))
 (let ((?x1230 (+ ?x496 (* (- 3) (* r r r s)) (* 3 (* s r00 r00)) ?x551 (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 s00) (* (- 1) (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 s)) (* (- 1) (* s s00)) ?x760 (* (- 1) (* s x)) (* (- 1) (* r s x)) (* (- 1) (* r s s00)) (* (- 3) (* r x r00 r00)) (* 3 (* r s r00 r00)) (* 3 (* r r r x)) (* 3 (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 r r)) (* (- 3) (* x r00 r00)) (* r x s00) (* (- 3) (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 r00 r00)) (* 3 (* r r x)) (* (- 3) (* r r s)))))
 (let ((?x1297 (* x00 x00)))
 (let ((?x1327 (* (- 108) ?x1297)))
 (let ((?x1135 (* s00 s00 s00)))
 (let ((?x1326 (* (- 16) ?x1135)))
 (let ((?x1007 (* s00 r00 r00 r00)))
 (let ((?x1322 (* (- 216) ?x1007)))
 (let ((?x833 (* r00 r00 r00 x00)))
 (let ((?x834 (* 432 ?x833)))
 (let ((?x756 (* s00 x00)))
 (let ((?x1080 (* 108 ?x756)))
 (let ((?x682 (* s00 s00 r00 r00)))
 (let ((?x683 (* 36 ?x682)))
 (let ((?x619 (* s00 s00 r00)))
 (let ((?x963 (* 108 ?x619)))
 (let ((?x598 (* s00 r00 r00)))
 (let ((?x951 (* 36 ?x598)))
 (let ((?x542 (* s00 s00)))
 (let ((?x1316 (* (- 51) ?x542)))
 (let ((?x516 (* s r00 r00)))
 (let ((?x815 (* (- 36) ?x516)))
 (let ((?x473 (* r00 x00)))
 (let ((?x1313 (* (- 108) ?x473)))
 (let ((?x464 (* s00 r00 x00)))
 (let ((?x1312 (* (- 216) ?x464)))
 (let ((?x377 (* s00 r00)))
 (let ((?x471 (* 54 ?x377)))
 (let ((?x938 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1328 (+ ?x143 ?x938 ?x471 ?x1312 ?x1313 (* (- 15) ?x496) ?x815 ?x1316 (* (- 108) ?x551) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x951 ?x963 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x683 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1080 (* 108 (* s x)) (* (- 108) (* x x)) ?x834 (* 12 (* s s s00)) ?x1322 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1326 (* 216 (* x x00)) ?x1327)))
 (let (($x1329 (= ?x1328 0)))
 (let ((?x828 (* r00 r00 x00)))
 (let ((?x841 (* (- 36) ?x828)))
 (let ((?x757 (* 6 ?x756)))
 (let ((?x647 (* (- 2) ?x619)))
 (let ((?x867 (* (- 15) ?x542)))
 (let ((?x520 (* 3 ?x496)))
 (let ((?x502 (* (- 54) ?x473)))
 (let ((?x515 (* 24 ?x377)))
 (let ((?x1030 (+ ?x143 ?x938 (* (- 24) (* r s)) (* 24 (* r s00)) ?x515 ?x502 ?x520 (* 54 (* r x)) (* 36 (* r x r00)) ?x815 ?x867 (* (- 6) ?x551) (* 54 (* x r00)) ?x951 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x647 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x757 (* 2 ?x760) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x841 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1035 (= ?x1030 0)))
 (let ((?x599 (* 6 ?x598)))
 (let ((?x555 (* (- 4) ?x542)))
 (let ((?x497 (* 2 ?x496)))
 (let ((?x487 (* (- 18) ?x473)))
 (let ((?x492 (* 9 ?x377)))
 (let ((?x329 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x696 (+ ?x47 ?x329 (* (- 9) (* r s)) (* 9 (* r s00)) ?x492 ?x487 ?x497 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x516) ?x555 (* 18 (* x r00)) ?x599 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x703 (= ?x696 0)))
 (let ((?x420 (* r00 r00 r00)))
 (let ((?x421 (* 12 ?x420)))
 (let ((?x455 (* (- 6) ?x377)))
 (let ((?x452 (* (- 6) x00)))
 (let ((?x451 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x456 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x451 ?x452 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x455 ?x421)))
 (let (($x457 (= ?x456 0)))
 (let ((?x252 (* r00 r00)))
 (let ((?x253 (* 3 ?x252)))
 (let ((?x282 (* (- 1) s00)))
 (let (($x285 (= (+ s ?x282 (* (- 3) (* r r)) ?x253) 0)))
 (and $x285 $x457 $x703 $x1035 $x1329 (not (= ?x1230 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x323 (exists ((r Int) (s Int) (x Int) )(! (let ((?x252 (* r00 r00)))
 (let ((?x266 (* (- 3) ?x252)))
 (let ((?x231 (* (- 1) s)))
 (let ((?x402 (+ (- 3) s00 ?x231 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x266)))
 (let ((?x211 (* 6 r)))
 (let ((?x1136 (+ 3 s ?x211)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x1360 (* (+ (* ?x1367 (+ x ?x231)) (* ?x1367 ?x1367 ?x1367 ?x1136 ?x1136 ?x1136)) ?x402)))
 (let ((?x1297 (* x00 x00)))
 (let ((?x1330 (* 108 ?x1297)))
 (let ((?x137 (* 9 s00)))
 (let ((?x542 (* s00 s00)))
 (let ((?x1078 (* 51 ?x542)))
 (let ((?x1135 (* s00 s00 s00)))
 (let ((?x985 (* 16 ?x1135)))
 (let ((?x756 (* s00 x00)))
 (let ((?x812 (* (- 108) ?x756)))
 (let ((?x833 (* r00 r00 r00 x00)))
 (let ((?x311 (* (- 432) ?x833)))
 (let ((?x473 (* r00 x00)))
 (let ((?x488 (* 108 ?x473)))
 (let ((?x704 (+ (* 216 (* r00 s00 x00)) ?x488 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x311 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x812 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x985 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1078 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1330)))
 (let ((?x143 (* 9 s)))
 (let ((?x938 (* (- 9) s00)))
 (let ((?x867 (* (- 15) ?x542)))
 (let ((?x828 (* r00 r00 x00)))
 (let ((?x841 (* (- 36) ?x828)))
 (let ((?x757 (* 6 ?x756)))
 (let ((?x496 (* s s)))
 (let ((?x520 (* 3 ?x496)))
 (let ((?x502 (* (- 54) ?x473)))
 (let ((?x478 (+ (* (- 24) (* s r)) ?x502 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x520 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x757 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x841 ?x867 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x938 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x329 (* (- 3) s00)))
 (let ((?x555 (* (- 4) ?x542)))
 (let ((?x497 (* 2 ?x496)))
 (let ((?x487 (* (- 18) ?x473)))
 (let ((?x817 (+ (* (- 9) (* s r)) ?x487 (* 9 (* r00 s00)) ?x497 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x555 (* 18 (* r00 x)) ?x329 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x300 (* (- 3) r)))
 (let ((?x1020 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x300 ?x329 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (and (= (+ s00 ?x231 (* 3 (* r r)) ?x266) 0) (= ?x1020 0) (= ?x817 0) (= ?x478 0) (= ?x704 0) (not (= ?x1360 0))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1073 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1334 (+ 3 ?x211 s)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x760 (* r s s)))
 (let ((?x551 (* x s00)))
 (let ((?x496 (* s s)))
 (let ((?x1230 (+ ?x496 (* (- 3) (* r r r s)) (* 3 (* s r00 r00)) ?x551 (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 s00) (* (- 1) (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 s)) (* (- 1) (* s s00)) ?x760 (* (- 1) (* s x)) (* (- 1) (* r s x)) (* (- 1) (* r s s00)) (* (- 3) (* r x r00 r00)) (* 3 (* r s r00 r00)) (* 3 (* r r r x)) (* 3 (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 r r)) (* (- 3) (* x r00 r00)) (* r x s00) (* (- 3) (* ?x1367 ?x1367 ?x1367 ?x1334 ?x1334 ?x1334 r00 r00)) (* 3 (* r r x)) (* (- 3) (* r r s)))))
 (let ((?x1297 (* x00 x00)))
 (let ((?x1327 (* (- 108) ?x1297)))
 (let ((?x1135 (* s00 s00 s00)))
 (let ((?x1326 (* (- 16) ?x1135)))
 (let ((?x1007 (* s00 r00 r00 r00)))
 (let ((?x1322 (* (- 216) ?x1007)))
 (let ((?x833 (* r00 r00 r00 x00)))
 (let ((?x834 (* 432 ?x833)))
 (let ((?x756 (* s00 x00)))
 (let ((?x1080 (* 108 ?x756)))
 (let ((?x682 (* s00 s00 r00 r00)))
 (let ((?x683 (* 36 ?x682)))
 (let ((?x619 (* s00 s00 r00)))
 (let ((?x963 (* 108 ?x619)))
 (let ((?x598 (* s00 r00 r00)))
 (let ((?x951 (* 36 ?x598)))
 (let ((?x542 (* s00 s00)))
 (let ((?x1316 (* (- 51) ?x542)))
 (let ((?x516 (* s r00 r00)))
 (let ((?x815 (* (- 36) ?x516)))
 (let ((?x473 (* r00 x00)))
 (let ((?x1313 (* (- 108) ?x473)))
 (let ((?x464 (* s00 r00 x00)))
 (let ((?x1312 (* (- 216) ?x464)))
 (let ((?x377 (* s00 r00)))
 (let ((?x471 (* 54 ?x377)))
 (let ((?x938 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1328 (+ ?x143 ?x938 ?x471 ?x1312 ?x1313 (* (- 15) ?x496) ?x815 ?x1316 (* (- 108) ?x551) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x951 ?x963 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x683 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1080 (* 108 (* s x)) (* (- 108) (* x x)) ?x834 (* 12 (* s s s00)) ?x1322 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1326 (* 216 (* x x00)) ?x1327)))
 (let (($x1329 (= ?x1328 0)))
 (let ((?x828 (* r00 r00 x00)))
 (let ((?x841 (* (- 36) ?x828)))
 (let ((?x757 (* 6 ?x756)))
 (let ((?x647 (* (- 2) ?x619)))
 (let ((?x867 (* (- 15) ?x542)))
 (let ((?x520 (* 3 ?x496)))
 (let ((?x502 (* (- 54) ?x473)))
 (let ((?x515 (* 24 ?x377)))
 (let ((?x1030 (+ ?x143 ?x938 (* (- 24) (* r s)) (* 24 (* r s00)) ?x515 ?x502 ?x520 (* 54 (* r x)) (* 36 (* r x r00)) ?x815 ?x867 (* (- 6) ?x551) (* 54 (* x r00)) ?x951 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x647 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x757 (* 2 ?x760) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x841 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1035 (= ?x1030 0)))
 (let ((?x599 (* 6 ?x598)))
 (let ((?x555 (* (- 4) ?x542)))
 (let ((?x497 (* 2 ?x496)))
 (let ((?x487 (* (- 18) ?x473)))
 (let ((?x492 (* 9 ?x377)))
 (let ((?x329 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x696 (+ ?x47 ?x329 (* (- 9) (* r s)) (* 9 (* r s00)) ?x492 ?x487 ?x497 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x516) ?x555 (* 18 (* x r00)) ?x599 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x703 (= ?x696 0)))
 (let ((?x420 (* r00 r00 r00)))
 (let ((?x421 (* 12 ?x420)))
 (let ((?x455 (* (- 6) ?x377)))
 (let ((?x452 (* (- 6) x00)))
 (let ((?x451 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x456 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x451 ?x452 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x455 ?x421)))
 (let (($x457 (= ?x456 0)))
 (let ((?x252 (* r00 r00)))
 (let ((?x253 (* 3 ?x252)))
 (let ((?x282 (* (- 1) s00)))
 (let (($x285 (= (+ s ?x282 (* (- 3) (* r r)) ?x253) 0)))
 (let (($x1096 (and $x285 $x457 $x703 $x1035 $x1329 (not (= ?x1230 0)))))
 (let ((?x266 (* (- 3) ?x252)))
 (let ((?x231 (* (- 1) s)))
 (let ((?x1136 (+ 3 s ?x211)))
 (let ((?x1360 (* (+ (* ?x1367 (+ x ?x231)) (* ?x1367 ?x1367 ?x1367 ?x1136 ?x1136 ?x1136)) (+ (- 3) s00 ?x231 (* (- 6) r) (* 3 (* ?x1367 ?x1367)) ?x266))))
 (let ((?x1330 (* 108 ?x1297)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1078 (* 51 ?x542)))
 (let ((?x985 (* 16 ?x1135)))
 (let ((?x812 (* (- 108) ?x756)))
 (let ((?x311 (* (- 432) ?x833)))
 (let ((?x488 (* 108 ?x473)))
 (let ((?x704 (+ (* 216 (* r00 s00 x00)) ?x488 (* (- 54) (* r00 s00)) (* 15 ?x496) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x311 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x812 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x985 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1078 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1330)))
 (let ((?x478 (+ (* (- 24) (* s r)) ?x502 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x520 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x757 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x841 ?x867 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x938 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x817 (+ (* (- 9) (* s r)) ?x487 (* 9 (* r00 s00)) ?x497 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x555 (* 18 (* r00 x)) ?x329 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x300 (* (- 3) r)))
 (let ((?x1020 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x300 ?x329 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x420))))
 (let (($x1290 (and (= (+ s00 ?x231 (* 3 (* r r)) ?x266) 0) (= ?x1020 0) (= ?x817 0) (= ?x478 0) (= ?x704 0) (not (= ?x1360 0)))))
 (rewrite (= $x1290 $x1096)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x228 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x223 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) (+ (* ?x215 (- x s)) (* ?x215 ?x215 ?x215 ?x212 ?x212 ?x212)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x223 0)))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1416 (lambda ((r Int) (s Int) (x Int) )(let ((?x252 (* r00 r00)))
 (let ((?x266 (* (- 3) ?x252)))
 (let ((?x231 (* (- 1) s)))
 (let ((?x402 (+ (- 3) s00 ?x231 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x266)))
 (let ((?x211 (* 6 r)))
 (let ((?x1136 (+ 3 s ?x211)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x1360 (* (+ (* ?x1367 (+ x ?x231)) (* ?x1367 ?x1367 ?x1367 ?x1136 ?x1136 ?x1136)) ?x402)))
 (let ((?x1297 (* x00 x00)))
 (let ((?x1330 (* 108 ?x1297)))
 (let ((?x137 (* 9 s00)))
 (let ((?x542 (* s00 s00)))
 (let ((?x1078 (* 51 ?x542)))
 (let ((?x1135 (* s00 s00 s00)))
 (let ((?x985 (* 16 ?x1135)))
 (let ((?x756 (* s00 x00)))
 (let ((?x812 (* (- 108) ?x756)))
 (let ((?x833 (* r00 r00 r00 x00)))
 (let ((?x311 (* (- 432) ?x833)))
 (let ((?x473 (* r00 x00)))
 (let ((?x488 (* 108 ?x473)))
 (let ((?x704 (+ (* 216 (* r00 s00 x00)) ?x488 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x311 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x812 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x985 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1078 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1330)))
 (let ((?x143 (* 9 s)))
 (let ((?x938 (* (- 9) s00)))
 (let ((?x867 (* (- 15) ?x542)))
 (let ((?x828 (* r00 r00 x00)))
 (let ((?x841 (* (- 36) ?x828)))
 (let ((?x757 (* 6 ?x756)))
 (let ((?x496 (* s s)))
 (let ((?x520 (* 3 ?x496)))
 (let ((?x502 (* (- 54) ?x473)))
 (let ((?x478 (+ (* (- 24) (* s r)) ?x502 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x520 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x757 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x841 ?x867 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x938 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x329 (* (- 3) s00)))
 (let ((?x555 (* (- 4) ?x542)))
 (let ((?x497 (* 2 ?x496)))
 (let ((?x487 (* (- 18) ?x473)))
 (let ((?x817 (+ (* (- 9) (* s r)) ?x487 (* 9 (* r00 s00)) ?x497 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x555 (* 18 (* r00 x)) ?x329 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x300 (* (- 3) r)))
 (let ((?x1020 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) ?x300 ?x329 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1290 (and (= (+ s00 ?x231 (* 3 (* r r)) ?x266) 0) (= ?x1020 0) (= ?x817 0) (= ?x478 0) (= ?x704 0) (not (= ?x1360 0)))))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x223 (* (- (+ (- s00 ?x212) (* 3 ?x215 ?x215)) (* 3 r00 r00)) (+ (* ?x215 (- x s)) (* ?x215 ?x215 ?x215 ?x212 ?x212 ?x212)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x227 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x223 0))))))
 (rewrite (= $x227 $x1290)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x229 (asserted $x228)))
 (let ((@x1050 (mp (mp @x229 (quant-intro (proof-bind ?x1416) (= $x228 $x323)) $x323) (rewrite (= $x323 $x323)) $x323)))
 (let ((@x514 (mp~ (mp @x1050 (quant-intro (proof-bind ?x1073) (= $x323 $x1071)) $x1071) (sk (~ $x1071 $x1438)) $x1438)))
 (let ((@x971 (mp @x514 (rewrite (= $x1438 $x371)) $x371)))
 (let ((@x991 (and-elim @x971 $x617)))
 (let ((@x607 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x617) $x1167)) @x991 $x1167)))
 (let (($x324 (>= ?x1335 0)))
 (let ((@x475 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x617) $x324)) @x991 $x324)))
 (let (($x1187 (<= ?x1238 0)))
 (let ((@x247 (and-elim @x971 $x1222)))
 (let ((@x593 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1222) $x1187)) @x247 $x1187)))
 (let (($x1356 (>= ?x1238 0)))
 (let ((@x1054 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1222) $x1356)) @x247 $x1356)))
 (let (($x1188 (<= ?x851 0)))
 (let ((@x836 (and-elim @x971 $x887)))
 (let ((@x1385 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x887) $x1188)) @x836 $x1188)))
 (let (($x799 (>= ?x851 0)))
 (let ((@x616 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x887) $x799)) @x836 $x799)))
 (let (($x1002 (not (<= ?x1392 0))))
 (let (($x1192 (>= ?x1392 0)))
 (let ((@x438 ((_ th-lemma arith) (hypothesis (not $x1192)) @x475 @x607 @x616 @x1385 @x1054 @x593 @x616 @x1385 @x1054 @x593 @x475 @x607 @x616 @x1385 @x475 @x607 @x1054 @x593 @x475 @x607 false)))
 (let ((@x821 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x530 $x1002 (not $x1192))) (and-elim @x971 $x737) (or $x1002 (not $x1192)))))
 ((_ th-lemma arith) (unit-resolution @x821 (lemma @x438 $x1192) $x1002) @x475 @x607 @x616 @x1385 @x1054 @x593 @x616 @x1385 @x1054 @x593 @x475 @x607 @x616 @x1385 @x475 @x607 @x1054 @x593 @x475 @x607 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             520
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    16
 :arith-num-rows            8
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 106
 :arith-tableau-max-rows    8
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                19.92
 :memory                    19.26
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                953057
 :num-checks                1
 :propagations              12
 :rlimit-count              38559
 :time                      0.02
 :total-time                0.04)
