unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(proof
(let ((?x3754 (* r00 r00 s!1)))
 (let ((?x3430 (* 36 ?x3754)))
 (let ((?x3432 (* (- 9) s!1)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x3729 (* 36 ?x879)))
 (let ((?x807 (* s00 x00)))
 (let ((?x3740 (* (- 6) ?x807)))
 (let ((?x649 (* s00 r00 r00)))
 (let ((?x544 (* (- 36) ?x649)))
 (let ((?x593 (* s00 s00)))
 (let ((?x1900 (* 15 ?x593)))
 (let ((?x524 (* r00 x00)))
 (let ((?x3711 (* 54 ?x524)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2003 (+ ?x137 (* (- 24) (* s00 r00)) ?x3711 ?x1900 ?x544 (* 2 (* s00 s00 r00)) ?x3740 ?x3729 (* (- 2) (* s00 r!2 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* s00 x!0)) (* (- 36) (* r00 r00 x!0)) (* (- 6) (* s!1 x!0)) (* (- 36) (* r00 r!2 x!0)) (* 36 (* r00 x00 r!2)) (* (- 2) (* r!2 s!1 s!1)) ?x3432 (* (- 3) (* s!1 s!1)) (* 6 (* x00 s!1)) ?x3430 (* (- 24) (* s00 r!2)) (* 4 (* s00 s00 r!2)) (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 24 (* r00 s!1)) (* 2 (* s00 r00 s!1)) (* 24 (* r!2 s!1)) (* (- 54) (* r!2 x!0)))))
 (let (($x1889 (<= ?x2003 0)))
 (let (($x3453 (= ?x2003 0)))
 (let ((?x3160 (+ 3 (* 6 r!2) s!1)))
 (let ((?x3139 (* (- 1) s!1)))
 (let ((?x3143 (+ ?x3139 x!0)))
 (let ((?x2937 (+ 1 r!2)))
 (let ((?x3854 (* (- 9) (* s00 ?x2937 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3839 (* 6 (* r00 r00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x3825 (* (- 18) (* r00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3830 (* (- 2) (* s00 ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x3819 (* 4 (* s00 s00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3815 (* 9 (* ?x2937 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x3770 (* (- 9) (* r00 s00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3809 (* (- 18) (* ?x2937 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x3796 (* (- 3) (* ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x3775 (* (- 6) (* r00 r00 s00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3514 (* (- 2) (* ?x3160 ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x3718 (* 18 (* r00 x00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3820 (* (- 18) (* ?x2937 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3722 (* 18 (* x00 ?x2937 ?x3160 ?x3160 ?x3160))))
 (let ((?x2426 (* 3 (* s00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3709 (* 9 (* ?x2937 ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x3684 (* 9 (* r00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x2207 (* (- 6) (* r00 ?x2937 ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x3202 (* 6 (* r00 s00 ?x2937 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x3516 (* 9 (* r00 ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x3455 (* 18 (* x00 ?x2937 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160))))
 (let ((?x609 (* (- 2) (* s00 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x3667 (* (- 2) (* ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x2900 (* (- 9) (* s00 ?x2937 ?x3160 ?x3160 ?x3160))))
 (let ((?x2974 (* (- 6) (* r00 ?x2937 ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x2286 (* (- 3) (* ?x2937 ?x2937 ?x3143 ?x3143 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x2459 (* (- 18) (* r00 ?x3143 ?x3160 ?x3160 ?x3160))))
 (let ((?x3703 (* 6 (* r00 r00 ?x3160 ?x3160 ?x3160 ?x3160))))
 (let ((?x1111 (* (- 162) ?x649)))
 (let ((?x1110 (* 108 ?x593)))
 (let ((?x1109 (* 486 ?x524)))
 (let ((?x428 (* s00 r00)))
 (let ((?x365 (* (- 81) ?x428)))
 (let ((?x367 (* 81 s00)))
 (let ((?x958 (+ ?x367 ?x365 (* 27 (* s00 s!1 s!1)) ?x1109 ?x1110 ?x1111 (* (- 3) (* s00 r00 s!1 s!1 s!1)) (* 1296 (* s00 r00 r!2 r!2 r!2 r!2)) (* 324 (* s00 r00 r!2 r!2 s!1)) (* 1296 (* s00 r00 r!2 r!2 r!2)) (* 54 (* s00 r!2 s!1 s!1)) (* (- 27) (* s00 r00 s!1 s!1)) (* 6 (* s00 r00 r!2 s!1 s!1 s!1)) (* 324 (* s00 r!2 s!1)) (* (- 1944) (* s00 r00 r00 r!2 r!2)) (* 486 (* r00 x00 s!1)) ?x3703 ?x2459 (* 3 (* s00 s!1 s!1 s!1)) ?x2286 (* 648 (* s00 r00 r!2 r!2 r!2 s!1)) (* 2916 (* r00 x00 r!2)) (* 972 (* s00 r!2 r!2)) (* 432 (* s00 s00 r!2 s!1)) (* 4 (* s00 s00 s!1 s!1 s!1)) (* 18 (* r00 x00 s!1 s!1 s!1)) (* 324 (* r00 x00 r!2 s!1 s!1)) (* 162 (* r00 x00 s!1 s!1)) (* 1944 (* r00 x00 r!2 r!2 s!1)) (* 1944 (* r00 x00 r!2 s!1)) ?x2974 ?x2900 (* (- 162) (* s00 r00 r!2 s!1)) ?x3667 (* 5832 (* r00 x00 r!2 r!2)) (* (- 972) (* s00 r00 r00 r!2)) (* 1296 (* s00 s00 r!2 r!2)) (* 864 (* s00 s00 r!2 r!2 r!2)) (* 432 (* s00 s00 r!2 r!2 s!1)) (* 72 (* s00 s00 r!2 s!1 s!1)) (* 324 (* s00 r!2 r!2 s!1)) (* 648 (* s00 r!2 r!2 r!2)) (* (- 1296) (* s00 r00 r00 r!2 r!2 r!2)) (* (- 648) (* s00 r00 r00 r!2 r!2 s!1)) (* (- 108) (* s00 r00 r00 r!2 s!1 s!1)) (* (- 54) (* s00 r00 r00 s!1 s!1)) (* (- 6) (* s00 r00 r00 s!1 s!1 s!1)) ?x609 (* (- 648) (* s00 r00 r00 r!2 s!1)) (* 3888 (* r00 x00 r!2 r!2 r!2)) (* 108 (* s00 r00 r!2 r!2 s!1 s!1)) (* (- 162) (* s00 r00 r00 s!1)) (* 108 (* s00 s00 s!1)) (* 36 (* s00 s00 s!1 s!1)) ?x3455 (* (- 324) (* s00 r00 r!2)) ?x3516 ?x3202 ?x2207 ?x3684 ?x3709 ?x2426 ?x3722 ?x3820 ?x3718 ?x3514 ?x3775 ?x3796 ?x3809 ?x3770 ?x3815 ?x3819 ?x3830 ?x3825 ?x3839 ?x3854 (* 486 (* s00 r!2)) (* 648 (* s00 s00 r!2)) (* 81 (* s00 s!1)) (* (- 81) (* s00 r00 s!1)))))
 (let (($x720 (= ?x958 0)))
 (let (($x3331 (not $x720)))
 (let ((?x1348 (* x00 x00)))
 (let ((?x3494 (* 108 ?x1348)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3376 (* 16 ?x1186)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x2013 (* (- 432) ?x884)))
 (let ((?x3189 (* (- 108) ?x807)))
 (let ((?x3343 (* 51 ?x593)))
 (let ((?x3396 (* 108 ?x524)))
 (let ((?x3745 (+ ?x137 (* (- 54) ?x428) (* (- 12) (* s00 s!1 s!1)) (* 216 (* s00 r00 x00)) ?x3396 ?x3343 ?x544 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x3189 ?x2013 (* 216 (* s00 r00 r00 r00)) (* (- 216) (* x00 x!0)) ?x3376 (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* s00 x!0)) ?x3494 (* (- 108) (* s!1 x!0)) (* 108 (* x!0 x!0)) ?x3432 (* 15 (* s!1 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 432 (* r00 r00 r00 x!0)) (* 108 (* x00 s!1)) ?x3430 (* (- 108) (* r00 x!0)) (* (- 66) (* s00 s!1)) (* 54 (* r00 s!1)) (* 108 (* s00 r00 s!1)) (* 36 (* r00 r00 s!1 s!1)))))
 (let (($x1595 (= ?x3745 0)))
 (let ((?x3307 (* (- 3) s!1)))
 (let ((?x3584 (* 4 ?x593)))
 (let ((?x4029 (* 18 ?x524)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2720 (+ ?x44 (* (- 9) ?x428) ?x4029 ?x3584 (* (- 6) ?x649) ?x3307 (* (- 2) (* s!1 s!1)) (* 6 (* s00 r00 r!2)) (* 6 ?x3754) (* (- 9) (* s00 r!2)) (* (- 6) (* r00 r!2 s!1)) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* r00 s!1)) (* 9 (* r!2 s!1)) (* (- 18) (* r!2 x!0)))))
 (let (($x2725 (= ?x2720 0)))
 (let ((?x4034 (* r!2 s!1)))
 (let ((?x1926 (* 2 ?x4034)))
 (let ((?x3623 (* 6 x!0)))
 (let ((?x3252 (* 3 r!2)))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x506 (* (- 6) ?x428)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x3923 (+ ?x44 ?x502 ?x503 ?x506 ?x472 ?x3252 ?x3307 ?x3623 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x1926)))
 (let (($x3926 (= ?x3923 0)))
 (let ((?x303 (* r00 r00)))
 (let ((?x1571 (* (- 3) ?x303)))
 (let ((?x3758 (+ s00 ?x1571 ?x3139 (* 3 (* r!2 r!2)))))
 (let (($x3892 (= ?x3758 0)))
 (let (($x2439 (and $x3892 $x3926 $x2725 $x3453 $x1595 $x3331)))
 (let ((?x3863 (+ ?x367 (* 486 (* r!2 s00)) (* (- 1944) (* r!2 r!2 s00 r00 r00)) ?x365 ?x1109 ?x1110 ?x1111 (* 81 (* s!1 s00)) ?x2286 ?x2459 (* (- 324) (* r!2 s00 r00)) (* (- 81) (* s!1 s00 r00)) ?x609 (* 648 (* r!2 s00 s00)) (* 324 (* r!2 s!1 s00)) (* 27 (* s!1 s!1 s00)) (* 2916 (* r!2 r00 x00)) ?x2974 ?x2900 ?x3667 ?x3202 (* (- 972) (* r!2 s00 r00 r00)) (* 3 (* s!1 s!1 s!1 s00)) ?x3514 ?x3516 (* 108 (* s!1 s00 s00)) (* 36 (* s!1 s!1 s00 s00)) (* 4 (* s!1 s!1 s!1 s00 s00)) (* (- 162) (* s!1 s00 r00 r00)) (* 1296 (* r!2 r!2 s00 s00)) (* 432 (* r!2 s!1 s00 s00)) (* 864 (* r!2 r!2 r!2 s00 s00)) (* 432 (* r!2 r!2 s!1 s00 s00)) (* 72 (* r!2 s!1 s!1 s00 s00)) ?x3718 ?x3722 ?x2426 ?x3709 (* 648 (* r!2 r!2 r!2 s00)) ?x3703 (* 54 (* r!2 s!1 s!1 s00)) (* 324 (* r!2 r!2 s!1 s00)) ?x3684 ?x2207 (* (- 54) (* s!1 s!1 s00 r00 r00)) (* (- 108) (* r!2 s!1 s!1 s00 r00 r00)) (* (- 6) (* s!1 s!1 s!1 s00 r00 r00)) (* (- 648) (* r!2 r!2 s!1 s00 r00 r00)) (* (- 1296) (* r!2 r!2 r!2 s00 r00 r00)) ?x3455 (* (- 648) (* r!2 s!1 s00 r00 r00)) (* 486 (* s!1 r00 x00)) (* 1944 (* r!2 s!1 r00 x00)) (* 1944 (* r!2 r!2 s!1 r00 x00)) (* 162 (* s!1 s!1 r00 x00)) (* 324 (* r!2 s!1 s!1 r00 x00)) (* 18 (* s!1 s!1 s!1 r00 x00)) ?x3775 (* 3888 (* r!2 r!2 r!2 r00 x00)) ?x3796 (* 5832 (* r!2 r!2 r00 x00)) ?x3809 ?x3770 ?x3815 ?x3819 ?x3820 ?x3825 (* 972 (* r!2 r!2 s00)) (* (- 162) (* r!2 s!1 s00 r00)) ?x3830 (* (- 27) (* s!1 s!1 s00 r00)) ?x3839 (* 1296 (* r!2 r!2 r!2 s00 r00)) (* 324 (* r!2 r!2 s!1 s00 r00)) (* (- 3) (* s!1 s!1 s!1 s00 r00)) (* 1296 (* r!2 r!2 r!2 r!2 s00 r00)) (* 648 (* r!2 r!2 r!2 s!1 s00 r00)) (* 108 (* r!2 r!2 s!1 s!1 s00 r00)) ?x3854 (* 6 (* r!2 s!1 s!1 s!1 s00 r00)))))
 (let ((?x1378 (* (- 108) ?x1348)))
 (let ((?x1377 (* (- 16) ?x1186)))
 (let ((?x1058 (* s00 r00 r00 r00)))
 (let ((?x1373 (* (- 216) ?x1058)))
 (let ((?x885 (* 432 ?x884)))
 (let ((?x1131 (* 108 ?x807)))
 (let ((?x733 (* s00 s00 r00 r00)))
 (let ((?x734 (* 36 ?x733)))
 (let ((?x670 (* s00 s00 r00)))
 (let ((?x1014 (* 108 ?x670)))
 (let ((?x1002 (* 36 ?x649)))
 (let ((?x1367 (* (- 51) ?x593)))
 (let ((?x3704 (* s!1 r00 r00)))
 (let ((?x3291 (* (- 36) ?x3704)))
 (let ((?x1364 (* (- 108) ?x524)))
 (let ((?x515 (* s00 r00 x00)))
 (let ((?x1363 (* (- 216) ?x515)))
 (let ((?x522 (* 54 ?x428)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x3249 (* 9 s!1)))
 (let ((?x3392 (+ ?x3249 ?x989 ?x522 ?x1363 ?x1364 (* (- 15) (* s!1 s!1)) ?x3291 ?x1367 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1002 ?x1014 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x734 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1131 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x885 (* 12 (* s!1 s!1 s00)) ?x1373 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1377 (* 216 (* x!0 x00)) ?x1378)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x698 (* (- 2) ?x670)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x566 (* 24 ?x428)))
 (let ((?x4043 (+ ?x3249 ?x989 (* (- 24) ?x4034) (* 24 (* r!2 s00)) ?x566 ?x553 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x3291 ?x918 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1002 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x698 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x808 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x892 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x650 (* 6 ?x649)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x543 (* 9 ?x428)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x2390 (+ (* 3 s!1) ?x380 (* (- 9) ?x4034) (* 9 (* r!2 s00)) ?x543 ?x538 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x3704) ?x606 (* 18 (* x!0 r00)) ?x650 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x3694 (+ ?x3252 ?x3307 ?x3623 ?x44 ?x502 ?x503 ?x1926 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x506 ?x472)))
 (let (($x4056 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x303)) 0)))
 (let (($x3862 (and $x4056 (= ?x3694 0) (= ?x2390 0) (= ?x4043 0) (= ?x3392 0) (not (= ?x3863 0)))))
 (let (($x3211 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1385 (+ 3 ?x211 s)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1587 (+ ?x282 x)))
 (let ((?x1450 (+ 1 r)))
 (let ((?x690 (* s s00)))
 (let ((?x1546 (* 81 ?x690)))
 (let ((?x649 (* s00 r00 r00)))
 (let ((?x1111 (* (- 162) ?x649)))
 (let ((?x593 (* s00 s00)))
 (let ((?x1110 (* 108 ?x593)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1109 (* 486 ?x524)))
 (let ((?x428 (* s00 r00)))
 (let ((?x365 (* (- 81) ?x428)))
 (let ((?x401 (* r s00)))
 (let ((?x1542 (* 486 ?x401)))
 (let ((?x367 (* 81 s00)))
 (let ((?x1550 (+ ?x367 ?x1542 (* (- 1944) (* r r s00 r00 r00)) ?x365 ?x1109 ?x1110 ?x1111 ?x1546 (* (- 3) (* ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 18) (* r00 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 324) (* r s00 r00)) (* (- 81) (* s s00 r00)) (* (- 2) (* s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* 648 (* r s00 s00)) (* 324 (* r s s00)) (* 27 (* s s s00)) (* 2916 (* r r00 x00)) (* (- 6) (* r00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 9) (* s00 ?x1450 ?x1385 ?x1385 ?x1385)) (* (- 2) (* ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385 ?x1385)) (* 6 (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 972) (* r s00 r00 r00)) (* 3 (* s s s s00)) (* (- 2) (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385)) (* 9 (* r00 ?x1385 ?x1385 ?x1385 ?x1385)) (* 108 (* s s00 s00)) (* 36 (* s s s00 s00)) (* 4 (* s s s s00 s00)) (* (- 162) (* s s00 r00 r00)) (* 1296 (* r r s00 s00)) (* 432 (* r s s00 s00)) (* 864 (* r r r s00 s00)) (* 432 (* r r s s00 s00)) (* 72 (* r s s s00 s00)) (* 18 (* r00 x00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 18 (* x00 ?x1450 ?x1385 ?x1385 ?x1385)) (* 3 (* s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 9 (* ?x1450 ?x1385 ?x1385 ?x1385 ?x1385)) (* 648 (* r r r s00)) (* 6 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385)) (* 54 (* r s s s00)) (* 324 (* r r s s00)) (* 9 (* r00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 6) (* r00 ?x1450 ?x1385 ?x1385 ?x1385 ?x1385)) (* (- 54) (* s s s00 r00 r00)) (* (- 108) (* r s s s00 r00 r00)) (* (- 6) (* s s s s00 r00 r00)) (* (- 648) (* r r s s00 r00 r00)) (* (- 1296) (* r r r s00 r00 r00)) (* 18 (* x00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 648) (* r s s00 r00 r00)) (* 486 (* s r00 x00)) (* 1944 (* r s r00 x00)) (* 1944 (* r r s r00 x00)) (* 162 (* s s r00 x00)) (* 324 (* r s s r00 x00)) (* 18 (* s s s r00 x00)) (* (- 6) (* r00 r00 s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 3888 (* r r r r00 x00)) (* (- 3) (* ?x1385 ?x1385 ?x1385 ?x1385)) (* 5832 (* r r r00 x00)) (* (- 18) (* ?x1450 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 9) (* r00 s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 9 (* ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* 4 (* s00 s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 18) (* ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 18) (* r00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 972 (* r r s00)) (* (- 162) (* r s s00 r00)) (* (- 2) (* s00 ?x1385 ?x1385 ?x1385 ?x1385)) (* (- 27) (* s s s00 r00)) (* 6 (* r00 r00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* 1296 (* r r r s00 r00)) (* 324 (* r r s s00 r00)) (* (- 3) (* s s s s00 r00)) (* 1296 (* r r r r s00 r00)) (* 648 (* r r r s s00 r00)) (* 108 (* r r s s s00 r00)) (* (- 9) (* s00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 6 (* r s s s s00 r00)))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x1378 (* (- 108) ?x1348)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x1377 (* (- 16) ?x1186)))
 (let ((?x1058 (* s00 r00 r00 r00)))
 (let ((?x1373 (* (- 216) ?x1058)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x885 (* 432 ?x884)))
 (let ((?x807 (* s00 x00)))
 (let ((?x1131 (* 108 ?x807)))
 (let ((?x733 (* s00 s00 r00 r00)))
 (let ((?x734 (* 36 ?x733)))
 (let ((?x670 (* s00 s00 r00)))
 (let ((?x1014 (* 108 ?x670)))
 (let ((?x1002 (* 36 ?x649)))
 (let ((?x1367 (* (- 51) ?x593)))
 (let ((?x567 (* s r00 r00)))
 (let ((?x866 (* (- 36) ?x567)))
 (let ((?x1364 (* (- 108) ?x524)))
 (let ((?x515 (* s00 r00 x00)))
 (let ((?x1363 (* (- 216) ?x515)))
 (let ((?x522 (* 54 ?x428)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1379 (+ ?x143 ?x989 ?x522 ?x1363 ?x1364 (* (- 15) (* s s)) ?x866 ?x1367 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1002 ?x1014 (* 66 ?x690) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x734 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1131 (* 108 (* s x)) (* (- 108) (* x x)) ?x885 (* 12 (* s s s00)) ?x1373 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1377 (* 216 (* x x00)) ?x1378)))
 (let (($x1380 (= ?x1379 0)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x698 (* (- 2) ?x670)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x566 (* 24 ?x428)))
 (let ((?x1081 (+ ?x143 ?x989 (* (- 24) (* r s)) (* 24 ?x401) ?x566 ?x553 ?x571 (* 54 (* r x)) (* 36 (* r x r00)) ?x866 ?x918 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1002 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x698 (* 12 ?x690) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x808 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x892 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1086 (= ?x1081 0)))
 (let ((?x650 (* 6 ?x649)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x543 (* 9 ?x428)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x747 (+ ?x47 ?x380 (* (- 9) (* r s)) (* 9 ?x401) ?x543 ?x538 ?x548 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x567) ?x606 (* 18 (* x r00)) ?x650 (* (- 18) (* r x00)) (* 2 ?x690) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x754 (= ?x747 0)))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x506 (* (- 6) ?x428)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x501 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x507 (+ ?x43 ?x501 ?x56 ?x44 ?x502 ?x503 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x401) ?x506 ?x472)))
 (let (($x508 (= ?x507 0)))
 (let ((?x303 (* r00 r00)))
 (let ((?x304 (* 3 ?x303)))
 (let ((?x333 (* (- 1) s00)))
 (let (($x336 (= (+ s ?x333 (* (- 3) (* r r)) ?x304) 0)))
 (and $x336 $x508 $x754 $x1086 $x1380 (not (= ?x1550 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2463 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x634 (+ 3 s ?x211)))
 (let ((?x1450 (+ 1 r)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1246 (+ x ?x282)))
 (let ((?x1950 (+ (* 9 (* r00 s00 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x634 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634 ?x634)) (* 3 (* ?x634 ?x634 ?x634 ?x634)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* s00 ?x634 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x634 ?x634 ?x634 ?x634 ?x634)) (* 2 (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x634 ?x634 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x634 ?x634 ?x634 ?x634)) (* 18 (* ?x1450 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x634 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 18 (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x634 ?x634 ?x634)) (* 3 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x634 ?x634 ?x634)))))
 (let (($x2078 (not (= ?x1950 0))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x3494 (* 108 ?x1348)))
 (let ((?x3428 (* (- 9) s)))
 (let ((?x2075 (* r00 r00 s00)))
 (let ((?x3408 (* (- 36) ?x2075)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3343 (* 51 ?x593)))
 (let ((?x2484 (* r00 r00 s)))
 (let ((?x1899 (* 36 ?x2484)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3376 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x3189 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x2013 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x3396 (* 108 ?x524)))
 (let ((?x3500 (+ (* 216 (* r00 s00 x00)) ?x3396 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2013 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3189 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3376 (* (- 108) (* x s)) ?x1899 ?x3343 (* (- 108) (* r00 x)) ?x137 ?x3408 ?x3428 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3494)))
 (let (($x3505 (= ?x3500 0)))
 (let ((?x1900 (* 15 ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x3729 (* 36 ?x879)))
 (let ((?x3740 (* (- 6) ?x807)))
 (let ((?x3711 (* 54 ?x524)))
 (let ((?x700 (+ (* 24 (* s r)) ?x3711 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3740 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1899 ?x3729 ?x1900 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3408 (* 54 (* x00 r)) ?x3428 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x501 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3584 (* 4 ?x593)))
 (let ((?x4029 (* 18 ?x524)))
 (let ((?x3601 (+ (* 9 (* s r)) ?x4029 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2484) ?x3584 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2075) (* 18 (* x00 r)) ?x501 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3982 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x501 ?x502 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x503 ?x472)))
 (let (($x3114 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x3114 (= ?x3982 0) (= ?x3601 0) (= ?x700 0) $x3505 $x2078))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3220 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1385 (+ 3 ?x211 s)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1587 (+ ?x282 x)))
 (let ((?x1450 (+ 1 r)))
 (let ((?x690 (* s s00)))
 (let ((?x1546 (* 81 ?x690)))
 (let ((?x649 (* s00 r00 r00)))
 (let ((?x1111 (* (- 162) ?x649)))
 (let ((?x593 (* s00 s00)))
 (let ((?x1110 (* 108 ?x593)))
 (let ((?x524 (* r00 x00)))
 (let ((?x1109 (* 486 ?x524)))
 (let ((?x428 (* s00 r00)))
 (let ((?x365 (* (- 81) ?x428)))
 (let ((?x401 (* r s00)))
 (let ((?x1542 (* 486 ?x401)))
 (let ((?x367 (* 81 s00)))
 (let ((?x1550 (+ ?x367 ?x1542 (* (- 1944) (* r r s00 r00 r00)) ?x365 ?x1109 ?x1110 ?x1111 ?x1546 (* (- 3) (* ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 18) (* r00 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 324) (* r s00 r00)) (* (- 81) (* s s00 r00)) (* (- 2) (* s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* 648 (* r s00 s00)) (* 324 (* r s s00)) (* 27 (* s s s00)) (* 2916 (* r r00 x00)) (* (- 6) (* r00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 9) (* s00 ?x1450 ?x1385 ?x1385 ?x1385)) (* (- 2) (* ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385 ?x1385)) (* 6 (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 972) (* r s00 r00 r00)) (* 3 (* s s s s00)) (* (- 2) (* ?x1385 ?x1385 ?x1385 ?x1385 ?x1385)) (* 9 (* r00 ?x1385 ?x1385 ?x1385 ?x1385)) (* 108 (* s s00 s00)) (* 36 (* s s s00 s00)) (* 4 (* s s s s00 s00)) (* (- 162) (* s s00 r00 r00)) (* 1296 (* r r s00 s00)) (* 432 (* r s s00 s00)) (* 864 (* r r r s00 s00)) (* 432 (* r r s s00 s00)) (* 72 (* r s s s00 s00)) (* 18 (* r00 x00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 18 (* x00 ?x1450 ?x1385 ?x1385 ?x1385)) (* 3 (* s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 9 (* ?x1450 ?x1385 ?x1385 ?x1385 ?x1385)) (* 648 (* r r r s00)) (* 6 (* r00 r00 ?x1385 ?x1385 ?x1385 ?x1385)) (* 54 (* r s s s00)) (* 324 (* r r s s00)) (* 9 (* r00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 6) (* r00 ?x1450 ?x1385 ?x1385 ?x1385 ?x1385)) (* (- 54) (* s s s00 r00 r00)) (* (- 108) (* r s s s00 r00 r00)) (* (- 6) (* s s s s00 r00 r00)) (* (- 648) (* r r s s00 r00 r00)) (* (- 1296) (* r r r s00 r00 r00)) (* 18 (* x00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 648) (* r s s00 r00 r00)) (* 486 (* s r00 x00)) (* 1944 (* r s r00 x00)) (* 1944 (* r r s r00 x00)) (* 162 (* s s r00 x00)) (* 324 (* r s s r00 x00)) (* 18 (* s s s r00 x00)) (* (- 6) (* r00 r00 s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 3888 (* r r r r00 x00)) (* (- 3) (* ?x1385 ?x1385 ?x1385 ?x1385)) (* 5832 (* r r r00 x00)) (* (- 18) (* ?x1450 ?x1587 ?x1385 ?x1385 ?x1385)) (* (- 9) (* r00 s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 9 (* ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* 4 (* s00 s00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 18) (* ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* (- 18) (* r00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 972 (* r r s00)) (* (- 162) (* r s s00 r00)) (* (- 2) (* s00 ?x1385 ?x1385 ?x1385 ?x1385)) (* (- 27) (* s s s00 r00)) (* 6 (* r00 r00 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385 ?x1385)) (* 1296 (* r r r s00 r00)) (* 324 (* r r s s00 r00)) (* (- 3) (* s s s s00 r00)) (* 1296 (* r r r r s00 r00)) (* 648 (* r r r s s00 r00)) (* 108 (* r r s s s00 r00)) (* (- 9) (* s00 ?x1450 ?x1450 ?x1450 ?x1587 ?x1587 ?x1587 ?x1385 ?x1385)) (* 6 (* r s s s s00 r00)))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x1378 (* (- 108) ?x1348)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x1377 (* (- 16) ?x1186)))
 (let ((?x1058 (* s00 r00 r00 r00)))
 (let ((?x1373 (* (- 216) ?x1058)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x885 (* 432 ?x884)))
 (let ((?x807 (* s00 x00)))
 (let ((?x1131 (* 108 ?x807)))
 (let ((?x733 (* s00 s00 r00 r00)))
 (let ((?x734 (* 36 ?x733)))
 (let ((?x670 (* s00 s00 r00)))
 (let ((?x1014 (* 108 ?x670)))
 (let ((?x1002 (* 36 ?x649)))
 (let ((?x1367 (* (- 51) ?x593)))
 (let ((?x567 (* s r00 r00)))
 (let ((?x866 (* (- 36) ?x567)))
 (let ((?x1364 (* (- 108) ?x524)))
 (let ((?x515 (* s00 r00 x00)))
 (let ((?x1363 (* (- 216) ?x515)))
 (let ((?x522 (* 54 ?x428)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1379 (+ ?x143 ?x989 ?x522 ?x1363 ?x1364 (* (- 15) (* s s)) ?x866 ?x1367 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1002 ?x1014 (* 66 ?x690) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x734 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1131 (* 108 (* s x)) (* (- 108) (* x x)) ?x885 (* 12 (* s s s00)) ?x1373 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1377 (* 216 (* x x00)) ?x1378)))
 (let (($x1380 (= ?x1379 0)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x698 (* (- 2) ?x670)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x566 (* 24 ?x428)))
 (let ((?x1081 (+ ?x143 ?x989 (* (- 24) (* r s)) (* 24 ?x401) ?x566 ?x553 ?x571 (* 54 (* r x)) (* 36 (* r x r00)) ?x866 ?x918 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1002 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x698 (* 12 ?x690) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x808 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x892 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1086 (= ?x1081 0)))
 (let ((?x650 (* 6 ?x649)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x543 (* 9 ?x428)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x747 (+ ?x47 ?x380 (* (- 9) (* r s)) (* 9 ?x401) ?x543 ?x538 ?x548 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x567) ?x606 (* 18 (* x r00)) ?x650 (* (- 18) (* r x00)) (* 2 ?x690) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x754 (= ?x747 0)))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x506 (* (- 6) ?x428)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x501 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x507 (+ ?x43 ?x501 ?x56 ?x44 ?x502 ?x503 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 ?x401) ?x506 ?x472)))
 (let (($x508 (= ?x507 0)))
 (let ((?x303 (* r00 r00)))
 (let ((?x304 (* 3 ?x303)))
 (let ((?x333 (* (- 1) s00)))
 (let (($x336 (= (+ s ?x333 (* (- 3) (* r r)) ?x304) 0)))
 (let (($x2097 (and $x336 $x508 $x754 $x1086 $x1380 (not (= ?x1550 0)))))
 (let ((?x634 (+ 3 s ?x211)))
 (let ((?x1246 (+ x ?x282)))
 (let ((?x1950 (+ (* 9 (* r00 s00 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x634 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634 ?x634)) (* 3 (* ?x634 ?x634 ?x634 ?x634)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* s00 ?x634 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x634 ?x634 ?x634 ?x634 ?x634)) (* 2 (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x634 ?x634 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x634 ?x634 ?x634 ?x634)) (* 18 (* ?x1450 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x634 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 18 (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x634 ?x634 ?x634)) (* 3 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x634 ?x634 ?x634)))))
 (let (($x2078 (not (= ?x1950 0))))
 (let ((?x3494 (* 108 ?x1348)))
 (let ((?x3428 (* (- 9) s)))
 (let ((?x2075 (* r00 r00 s00)))
 (let ((?x3408 (* (- 36) ?x2075)))
 (let ((?x137 (* 9 s00)))
 (let ((?x3343 (* 51 ?x593)))
 (let ((?x2484 (* r00 r00 s)))
 (let ((?x1899 (* 36 ?x2484)))
 (let ((?x3376 (* 16 ?x1186)))
 (let ((?x3189 (* (- 108) ?x807)))
 (let ((?x2013 (* (- 432) ?x884)))
 (let ((?x3396 (* 108 ?x524)))
 (let ((?x3500 (+ (* 216 (* r00 s00 x00)) ?x3396 (* (- 54) (* r00 s00)) (* 15 ?x547) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2013 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3189 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3376 (* (- 108) (* x s)) ?x1899 ?x3343 (* (- 108) (* r00 x)) ?x137 ?x3408 ?x3428 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3494)))
 (let (($x3505 (= ?x3500 0)))
 (let ((?x1900 (* 15 ?x593)))
 (let ((?x3729 (* 36 ?x879)))
 (let ((?x3740 (* (- 6) ?x807)))
 (let ((?x3711 (* 54 ?x524)))
 (let ((?x700 (+ (* 24 (* s r)) ?x3711 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x547) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3740 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1899 ?x3729 ?x1900 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3408 (* 54 (* x00 r)) ?x3428 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3584 (* 4 ?x593)))
 (let ((?x4029 (* 18 ?x524)))
 (let ((?x3601 (+ (* 9 (* s r)) ?x4029 (* (- 9) (* r00 s00)) (* (- 2) ?x547) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2484) ?x3584 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2075) (* 18 (* x00 r)) ?x501 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x3982 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x501 ?x502 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x503 ?x472)))
 (let (($x3114 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) ?x303)) 0)))
 (let (($x705 (and $x3114 (= ?x3982 0) (= ?x3601 0) (= ?x700 0) $x3505 $x2078)))
 (rewrite (= $x705 $x2097)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3107 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x634 (+ 3 s ?x211)))
 (let ((?x1450 (+ 1 r)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1246 (+ x ?x282)))
 (let ((?x1950 (+ (* 9 (* r00 s00 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x634 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634 ?x634)) (* 3 (* ?x634 ?x634 ?x634 ?x634)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* s00 ?x634 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x634 ?x634 ?x634 ?x634 ?x634)) (* 2 (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x634 ?x634 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x634 ?x634 ?x634 ?x634)) (* 18 (* ?x1450 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x634 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 18 (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x634 ?x634 ?x634)) (* 3 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x634 ?x634 ?x634)))))
 (let (($x2078 (not (= ?x1950 0))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x3494 (* 108 ?x1348)))
 (let ((?x3428 (* (- 9) s)))
 (let ((?x2075 (* r00 r00 s00)))
 (let ((?x3408 (* (- 36) ?x2075)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3343 (* 51 ?x593)))
 (let ((?x2484 (* r00 r00 s)))
 (let ((?x1899 (* 36 ?x2484)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3376 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x3189 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x2013 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x3396 (* 108 ?x524)))
 (let ((?x3500 (+ (* 216 (* r00 s00 x00)) ?x3396 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2013 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3189 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3376 (* (- 108) (* x s)) ?x1899 ?x3343 (* (- 108) (* r00 x)) ?x137 ?x3408 ?x3428 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3494)))
 (let (($x3505 (= ?x3500 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x711 (+ (* (- 24) (* s r)) ?x553 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x571 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x808 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2484) ?x892 ?x918 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x989 (* 36 ?x2075) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x3602 (+ (* (- 9) (* s r)) ?x538 (* 9 (* r00 s00)) ?x548 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2484) ?x606 (* 18 (* r00 x)) ?x380 (* 6 ?x2075) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1329 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x380 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3114 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x3114 (= ?x1329 0) (= ?x3602 0) (= ?x711 0) $x3505 $x2078)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1479 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x634 (+ 3 s ?x211)))
 (let ((?x1450 (+ 1 r)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1246 (+ x ?x282)))
 (let ((?x1950 (+ (* 9 (* r00 s00 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x634 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634 ?x634)) (* 3 (* ?x634 ?x634 ?x634 ?x634)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* s00 ?x634 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x634 ?x634 ?x634 ?x634 ?x634)) (* 2 (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x634 ?x634 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x634 ?x634 ?x634 ?x634)) (* 18 (* ?x1450 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x634 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 18 (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x634 ?x634 ?x634)) (* 3 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x634 ?x634 ?x634)))))
 (let (($x2078 (not (= ?x1950 0))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x3494 (* 108 ?x1348)))
 (let ((?x3428 (* (- 9) s)))
 (let ((?x2075 (* r00 r00 s00)))
 (let ((?x3408 (* (- 36) ?x2075)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3343 (* 51 ?x593)))
 (let ((?x2484 (* r00 r00 s)))
 (let ((?x1899 (* 36 ?x2484)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3376 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x3189 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x2013 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x3396 (* 108 ?x524)))
 (let ((?x3500 (+ (* 216 (* r00 s00 x00)) ?x3396 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2013 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3189 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3376 (* (- 108) (* x s)) ?x1899 ?x3343 (* (- 108) (* r00 x)) ?x137 ?x3408 ?x3428 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3494)))
 (let (($x3505 (= ?x3500 0)))
 (let ((?x1900 (* 15 ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x3729 (* 36 ?x879)))
 (let ((?x3740 (* (- 6) ?x807)))
 (let ((?x3711 (* 54 ?x524)))
 (let ((?x700 (+ (* 24 (* s r)) ?x3711 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3740 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1899 ?x3729 ?x1900 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x3408 (* 54 (* x00 r)) ?x3428 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x501 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3584 (* 4 ?x593)))
 (let ((?x4029 (* 18 ?x524)))
 (let ((?x3601 (+ (* 9 (* s r)) ?x4029 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x2484) ?x3584 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2075) (* 18 (* x00 r)) ?x501 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x471 (* r00 r00 r00)))
 (let ((?x472 (* 12 ?x471)))
 (let ((?x503 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x502 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3982 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x501 ?x502 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x503 ?x472)))
 (let (($x3114 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x705 (and $x3114 (= ?x3982 0) (= ?x3601 0) (= ?x700 0) $x3505 $x2078)))
 (let ((?x143 (* 9 s)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x711 (+ (* (- 24) (* s r)) ?x553 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x571 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x808 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2484) ?x892 ?x918 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x989 (* 36 ?x2075) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x3602 (+ (* (- 9) (* s r)) ?x538 (* 9 (* r00 s00)) ?x548 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2484) ?x606 (* 18 (* r00 x)) ?x380 (* 6 ?x2075) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1329 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x380 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x471))))
 (let (($x596 (and $x3114 (= ?x1329 0) (= ?x3602 0) (= ?x711 0) $x3505 $x2078)))
 (rewrite (= $x596 $x705)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x279 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x218 (- x s)))
 (let ((?x217 (+ (* 9 r00 ?x212 ?x212 ?x212 s00) (* 6 ?x215 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x222 (- (- ?x217 (* 4 ?x215 ?x215 ?x212 ?x212 s00 s00 ?x218 ?x218 ?x218)) (* 9 ?x215 ?x215 ?x215 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218))))
 (let ((?x224 (+ ?x222 (* 6 ?x215 ?x215 ?x215 r00 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218))))
 (let ((?x231 (+ (- ?x224 (* 18 ?x215 ?x215 r00 ?x212 ?x212 ?x218 ?x218 ?x218 x00)) (* 2 ?x215 ?x215 ?x212 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218) (* 3 ?x212 ?x212 ?x212 ?x212) (* 9 ?x215 ?x215 r00 ?x212 ?x212 s00 ?x218 ?x218 ?x218) (* 2 ?x212 ?x212 ?x212 ?x212 s00))))
 (let ((?x233 (- ?x231 (* 6 ?x215 ?x215 ?x215 r00 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x236 (+ ?x233 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212) (* 2 ?x215 ?x215 ?x212 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x240 (+ (- ?x236 (* 18 ?x215 ?x215 ?x215 ?x212 ?x212 ?x218 ?x218 ?x218 x00)) (* 9 ?x215 ?x215 ?x215 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x244 (+ (- ?x240 (* 9 r00 ?x212 ?x212 ?x212 ?x212)) (* 9 ?x215 ?x212 ?x212 ?x212 s00))))
 (let ((?x248 (- (- ?x244 (* 4 ?x212 ?x212 ?x212 s00 s00)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x251 (+ ?x248 (* 18 ?x215 ?x212 ?x212 ?x212 ?x218) (* 18 ?x215 ?x215 r00 ?x212 ?x212 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x256 (+ (- ?x251 (* 9 ?x215 ?x212 ?x212 ?x212 ?x212)) (* 6 ?x215 ?x215 r00 r00 ?x212 ?x212 s00 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x212 ?x212 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x259 (- ?x256 (* 6 ?x215 ?x215 r00 r00 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218))))
 (let ((?x264 (+ (- ?x259 (* 3 ?x212 ?x212 ?x212 s00)) (* 3 ?x215 ?x215 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218) (* 18 r00 ?x212 ?x212 ?x212 ?x218) (* 6 r00 r00 ?x212 ?x212 ?x212 s00))))
 (let ((?x271 (- (- ?x264 (* 18 ?x215 ?x212 ?x212 ?x212 x00)) (* 3 ?x215 ?x215 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x273 (- (- ?x271 (* 9 ?x215 ?x215 r00 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218)) (* 18 r00 ?x212 ?x212 ?x212 x00))))
 (let (($x277 (or (not (= (- ?x273 (* 6 ?x215 r00 ?x212 ?x212 ?x212 s00)) 0)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x277))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x486 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x634 (+ 3 s ?x211)))
 (let ((?x1450 (+ 1 r)))
 (let ((?x282 (* (- 1) s)))
 (let ((?x1246 (+ x ?x282)))
 (let ((?x1950 (+ (* 9 (* r00 s00 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x634 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634 ?x634)) (* 3 (* ?x634 ?x634 ?x634 ?x634)) (* 9 (* r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* s00 ?x634 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 2 (* ?x634 ?x634 ?x634 ?x634 ?x634)) (* 2 (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x634 ?x634 ?x634 ?x634)) (* 9 (* s00 ?x1450 ?x634 ?x634 ?x634)) (* (- 4) (* s00 s00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x634 ?x634 ?x634 ?x634)) (* 18 (* ?x1450 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* ?x1450 ?x634 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* 18 (* ?x1450 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 6) (* r00 r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x634 ?x634 ?x634)) (* 3 (* ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* 18 (* r00 ?x1246 ?x634 ?x634 ?x634)) (* 6 (* r00 r00 s00 ?x634 ?x634 ?x634)) (* (- 18) (* x00 ?x1450 ?x634 ?x634 ?x634)) (* (- 3) (* s00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634)) (* (- 9) (* r00 ?x1450 ?x1450 ?x1246 ?x1246 ?x1246 ?x634 ?x634 ?x634)) (* (- 18) (* r00 x00 ?x634 ?x634 ?x634)) (* (- 6) (* r00 s00 ?x1450 ?x634 ?x634 ?x634)))))
 (let (($x2078 (not (= ?x1950 0))))
 (let ((?x1348 (* x00 x00)))
 (let ((?x3494 (* 108 ?x1348)))
 (let ((?x3428 (* (- 9) s)))
 (let ((?x2075 (* r00 r00 s00)))
 (let ((?x3408 (* (- 36) ?x2075)))
 (let ((?x137 (* 9 s00)))
 (let ((?x593 (* s00 s00)))
 (let ((?x3343 (* 51 ?x593)))
 (let ((?x2484 (* r00 r00 s)))
 (let ((?x1899 (* 36 ?x2484)))
 (let ((?x1186 (* s00 s00 s00)))
 (let ((?x3376 (* 16 ?x1186)))
 (let ((?x807 (* s00 x00)))
 (let ((?x3189 (* (- 108) ?x807)))
 (let ((?x884 (* r00 r00 r00 x00)))
 (let ((?x2013 (* (- 432) ?x884)))
 (let ((?x524 (* r00 x00)))
 (let ((?x3396 (* 108 ?x524)))
 (let ((?x3500 (+ (* 216 (* r00 s00 x00)) ?x3396 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2013 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3189 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3376 (* (- 108) (* x s)) ?x1899 ?x3343 (* (- 108) (* r00 x)) ?x137 ?x3408 ?x3428 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3494)))
 (let (($x3505 (= ?x3500 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x989 (* (- 9) s00)))
 (let ((?x918 (* (- 15) ?x593)))
 (let ((?x879 (* r00 r00 x00)))
 (let ((?x892 (* (- 36) ?x879)))
 (let ((?x808 (* 6 ?x807)))
 (let ((?x547 (* s s)))
 (let ((?x571 (* 3 ?x547)))
 (let ((?x553 (* (- 54) ?x524)))
 (let ((?x711 (+ (* (- 24) (* s r)) ?x553 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x571 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x808 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x2484) ?x892 ?x918 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x989 (* 36 ?x2075) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x380 (* (- 3) s00)))
 (let ((?x606 (* (- 4) ?x593)))
 (let ((?x548 (* 2 ?x547)))
 (let ((?x538 (* (- 18) ?x524)))
 (let ((?x3602 (+ (* (- 9) (* s r)) ?x538 (* 9 (* r00 s00)) ?x548 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x2484) ?x606 (* 18 (* r00 x)) ?x380 (* 6 ?x2075) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1329 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x380 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x3114 (= (+ s00 ?x282 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x596 (and $x3114 (= ?x1329 0) (= ?x3602 0) (= ?x711 0) $x3505 $x2078)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x215 (+ r 1)))
 (let ((?x218 (- x s)))
 (let ((?x217 (+ (* 9 r00 ?x212 ?x212 ?x212 s00) (* 6 ?x215 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x222 (- (- ?x217 (* 4 ?x215 ?x215 ?x212 ?x212 s00 s00 ?x218 ?x218 ?x218)) (* 9 ?x215 ?x215 ?x215 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218))))
 (let ((?x224 (+ ?x222 (* 6 ?x215 ?x215 ?x215 r00 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218))))
 (let ((?x231 (+ (- ?x224 (* 18 ?x215 ?x215 r00 ?x212 ?x212 ?x218 ?x218 ?x218 x00)) (* 2 ?x215 ?x215 ?x212 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218) (* 3 ?x212 ?x212 ?x212 ?x212) (* 9 ?x215 ?x215 r00 ?x212 ?x212 s00 ?x218 ?x218 ?x218) (* 2 ?x212 ?x212 ?x212 ?x212 s00))))
 (let ((?x233 (- ?x231 (* 6 ?x215 ?x215 ?x215 r00 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x236 (+ ?x233 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212) (* 2 ?x215 ?x215 ?x212 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x240 (+ (- ?x236 (* 18 ?x215 ?x215 ?x215 ?x212 ?x212 ?x218 ?x218 ?x218 x00)) (* 9 ?x215 ?x215 ?x215 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x244 (+ (- ?x240 (* 9 r00 ?x212 ?x212 ?x212 ?x212)) (* 9 ?x215 ?x212 ?x212 ?x212 s00))))
 (let ((?x248 (- (- ?x244 (* 4 ?x212 ?x212 ?x212 s00 s00)) (* 6 r00 r00 ?x212 ?x212 ?x212 ?x212))))
 (let ((?x251 (+ ?x248 (* 18 ?x215 ?x212 ?x212 ?x212 ?x218) (* 18 ?x215 ?x215 r00 ?x212 ?x212 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x256 (+ (- ?x251 (* 9 ?x215 ?x212 ?x212 ?x212 ?x212)) (* 6 ?x215 ?x215 r00 r00 ?x212 ?x212 s00 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x212 ?x212 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x259 (- ?x256 (* 6 ?x215 ?x215 r00 r00 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218))))
 (let ((?x264 (+ (- ?x259 (* 3 ?x212 ?x212 ?x212 s00)) (* 3 ?x215 ?x215 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218) (* 18 r00 ?x212 ?x212 ?x212 ?x218) (* 6 r00 r00 ?x212 ?x212 ?x212 s00))))
 (let ((?x271 (- (- ?x264 (* 18 ?x215 ?x212 ?x212 ?x212 x00)) (* 3 ?x215 ?x215 ?x212 ?x212 s00 ?x218 ?x218 ?x218))))
 (let ((?x273 (- (- ?x271 (* 9 ?x215 ?x215 r00 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218)) (* 18 r00 ?x212 ?x212 ?x212 x00))))
 (let (($x277 (or (not (= (- ?x273 (* 6 ?x215 r00 ?x212 ?x212 ?x212 s00)) 0)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x278 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x277)))
 (rewrite (= $x278 $x596))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x280 (asserted $x279)))
 (let ((@x4024 (mp (mp @x280 (quant-intro (proof-bind ?x486) (= $x279 $x3107)) $x3107) (rewrite (= $x3107 $x3107)) $x3107)))
 (let ((@x2083 (mp (mp @x4024 (quant-intro (proof-bind ?x1479) (= $x3107 $x2463)) $x2463) (quant-intro (proof-bind ?x3220) (= $x2463 $x3211)) $x3211)))
 (let ((@x607 (mp (mp~ @x2083 (sk (~ $x3211 $x3862)) $x3862) (rewrite (= $x3862 $x2439)) $x2439)))
 (let ((@x1306 (and-elim @x607 $x3453)))
 (let ((@x3112 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3453) $x1889)) @x1306 $x1889)))
 (let (($x3218 (>= ?x2003 0)))
 (let ((@x2919 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3453) $x3218)) @x1306 $x3218)))
 (let (($x3244 (<= ?x2720 0)))
 (let ((@x880 (and-elim @x607 $x2725)))
 (let ((@x2410 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2725) $x3244)) @x880 $x3244)))
 (let (($x479 (>= ?x2720 0)))
 (let ((@x3999 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2725) $x479)) @x880 $x479)))
 (let (($x1856 (<= ?x3745 0)))
 (let ((@x1305 (and-elim @x607 $x1595)))
 (let ((@x3119 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1595) $x1856)) @x1305 $x1856)))
 (let (($x714 (>= ?x3745 0)))
 (let ((@x3886 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1595) $x714)) @x1305 $x714)))
 (let (($x2331 (<= ?x3758 0)))
 (let ((@x1292 (and-elim @x607 $x3892)))
 (let ((@x3118 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3892) $x2331)) @x1292 $x2331)))
 (let (($x3968 (>= ?x3758 0)))
 (let ((@x2041 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3892) $x3968)) @x1292 $x3968)))
 (let (($x825 (<= ?x3923 0)))
 (let ((@x1307 (and-elim @x607 $x3926)))
 (let ((@x3767 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3926) $x825)) @x1307 $x825)))
 (let (($x3966 (>= ?x3923 0)))
 (let ((@x494 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3926) $x3966)) @x1307 $x3966)))
 (let (($x3103 (not (<= ?x958 0))))
 (let (($x1875 (>= ?x958 0)))
 (let ((@x3580 ((_ th-lemma arith) (hypothesis (not $x1875)) @x2041 @x3118 @x3999 @x2410 @x3999 @x2410 @x2919 @x3112 @x2919 @x3112 @x2041 @x3118 @x3999 @x2410 @x2919 @x3112 @x3886 @x3119 @x2041 @x3118 @x3999 @x2410 @x2041 @x3118 @x494 @x3767 @x2041 @x3118 @x3886 @x3119 @x3999 @x2410 @x2919 @x3112 false)))
 (let ((@x782 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x720 $x3103 (not $x1875))) (and-elim @x607 $x3331) (or $x3103 (not $x1875)))))
 ((_ th-lemma arith) (unit-resolution @x782 (lemma @x3580 $x1875) $x3103) @x2041 @x3118 @x3999 @x2410 @x3999 @x2410 @x2919 @x3112 @x2919 @x3112 @x2041 @x3118 @x3999 @x2410 @x2919 @x3112 @x3886 @x3119 @x2041 @x3118 @x3999 @x2410 @x2041 @x3118 @x494 @x3767 @x2041 @x3118 @x3886 @x3119 @x3999 @x2410 @x2919 @x3112 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        31
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             960
 :arith-nonlinear-bounds    24
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      13
 :arith-tableau-max-columns 184
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.88
 :memory                    3.58
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                11985033
 :num-checks                1
 :propagations              12
 :rlimit-count              103608
 :time                      0.07
 :total-time                0.08)
