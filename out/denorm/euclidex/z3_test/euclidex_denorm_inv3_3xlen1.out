unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun q!3 () Int)
(declare-fun s!0 () Int)
(declare-fun r!1 () Int)
(proof
(let ((?x620 (* p!5 b!2)))
 (let ((?x555 (* (- 1) ?x620)))
 (let ((?x313 (* q!3 a!4)))
 (let ((?x128 (* q00 a00)))
 (let ((?x174 (* (- 1) ?x128)))
 (let ((?x113 (* p00 b00)))
 (let ((?x233 (+ ?x113 ?x174 ?x313 ?x555)))
 (let (($x689 (>= ?x233 0)))
 (let (($x627 (= ?x233 0)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x686 (+ ?x127 ?x128 (* (- 1) ?x313) ?x620)))
 (let ((?x212 (* (- 1) q!3)))
 (let ((?x732 (+ ?x212 p!5)))
 (let ((?x188 (+ a!4 (* (- 1) b!2))))
 (let ((?x602 (+ r!1 (* (- 1) s!0))))
 (let ((?x728 (* ?x602 ?x602 ?x602 ?x602 ?x602 ?x188 ?x188 ?x188 ?x188 ?x188 ?x732 ?x732 ?x732 ?x732 ?x732 ?x732 ?x686 s!0 s!0 s!0 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let (($x726 (= ?x728 0)))
 (let ((?x129 (* (- 1) p!5)))
 (let ((?x574 (+ q!3 ?x129)))
 (let ((?x603 (+ (* (- 1) a!4) b!2)))
 (let ((?x193 (+ (* (- 1) r!1) s!0)))
 (let ((?x678 (* ?x193 ?x193 ?x193 ?x603 ?x603 ?x603 ?x603 ?x574 ?x574 ?x574 ?x574 ?x686 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let (($x676 (= ?x678 0)))
 (let (($x677 (not $x676)))
 (let (($x740 (or $x677 (not $x726))))
 (let ((?x591 (+ (* p00 s00 b!2) (* (- 1) (* q00 r00 b!2)) (* (- 1) (* p00 b00 s!0)) (* r00 b00 q!3) (* (- 1) (* s00 a00 q!3)) (* q00 a00 s!0))))
 (let ((?x551 (+ (* q00 a00 r!1) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* p00 s00 a!4) (* r00 b00 p!5) (* (- 1) (* q00 r00 a!4)))))
 (let ((?x124 (* s00 a00)))
 (let ((?x588 (+ ?x124 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) (* r!1 b!2))))
 (let ((?x169 (* q!3 r!1)))
 (let ((?x37 (* p00 s00)))
 (let (($x232 (= (+ ?x37 (* (- 1) (* q00 r00)) ?x169 (* (- 1) (* p!5 s!0))) 0)))
 (let (($x675 (and $x232 (= ?x588 0) $x627 (= ?x551 0) (= ?x591 0) $x740)))
 (let ((?x279 (+ ?x127 (* (- 1) (* a!4 q!3)) ?x128 ?x620)))
 (let ((?x211 (+ p!5 ?x212)))
 (let ((?x217 (* ?x602 ?x602 ?x602 ?x602 ?x602 ?x188 ?x188 ?x188 ?x188 ?x188 ?x211 ?x211 ?x211 ?x211 ?x211 ?x211 ?x279 s!0 s!0 s!0 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3)))
 (let ((?x308 (+ ?x129 q!3)))
 (let ((?x321 (* ?x193 ?x193 ?x193 ?x603 ?x603 ?x603 ?x603 ?x308 ?x308 ?x308 ?x308 ?x279 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5 p!5)))
 (let ((?x587 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x325 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x142 (* r00 b00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x332 (* a!4 s!0)))
 (let (($x290 (= (+ (* p!5 s!0) (* (- 1) ?x37) (* q00 r00) (* (- 1) ?x169)) 0)))
 (let (($x224 (and $x290 (= (+ ?x332 (* (- 1) (* b!2 r!1)) ?x131 ?x142) 0) (= (+ ?x113 (* a!4 q!3) ?x174 ?x555) 0) (= ?x325 0) (= ?x587 0) (or (not (= ?x321 0)) (not (= ?x217 0))))))
 (let (($x144 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x159 (* p b)))
 (let ((?x128 (* q00 a00)))
 (let ((?x120 (* a q)))
 (let ((?x121 (* (- 1) ?x120)))
 (let ((?x113 (* p00 b00)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x304 (+ ?x127 ?x121 ?x128 ?x159)))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x548 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x304 s s s b b b b q q q q)))
 (let ((?x255 (* (- 1) p)))
 (let ((?x267 (+ ?x255 q)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x628 (+ ?x351 b)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x585 (+ ?x589 s)))
 (let ((?x619 (* ?x585 ?x585 ?x585 ?x628 ?x628 ?x628 ?x628 ?x267 ?x267 ?x267 ?x267 ?x304 r r r r r a a a a a p p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let (($x177 (= (+ ?x113 ?x120 (* (- 1) ?x128) (* (- 1) ?x159)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x152 (= (+ ?x33 ?x133 ?x41 (* (- 1) (* q r))) 0)))
 (and $x152 $x157 $x177 $x243 $x311 (or (not (= ?x619 0)) (not (= ?x548 0)))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x247 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x265 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x189 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x265 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x189 s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x265 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x280 (+ q ?x255)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x280 ?x280 ?x280 ?x280 ?x220 r r r r r a a a a a p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x342 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x609 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) (= ?x609 0) (= (+ (* (- 1) (* q a)) ?x55 ?x265 (* b p)) 0) (= ?x342 0) (= ?x198 0) (or (not (= ?x145 0)) (not (= ?x222 0)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x166 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x159 (* p b)))
 (let ((?x128 (* q00 a00)))
 (let ((?x120 (* a q)))
 (let ((?x121 (* (- 1) ?x120)))
 (let ((?x113 (* p00 b00)))
 (let ((?x127 (* (- 1) ?x113)))
 (let ((?x304 (+ ?x127 ?x121 ?x128 ?x159)))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x548 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x304 s s s b b b b q q q q)))
 (let ((?x255 (* (- 1) p)))
 (let ((?x267 (+ ?x255 q)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x628 (+ ?x351 b)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x585 (+ ?x589 s)))
 (let ((?x619 (* ?x585 ?x585 ?x585 ?x628 ?x628 ?x628 ?x628 ?x267 ?x267 ?x267 ?x267 ?x304 r r r r r a a a a a p p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x306 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x311 (= ?x306 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x242 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x243 (= ?x242 0)))
 (let (($x177 (= (+ ?x113 ?x120 (* (- 1) ?x128) (* (- 1) ?x159)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x152 (= (+ ?x33 ?x133 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x567 (and $x152 $x157 $x177 $x243 $x311 (or (not (= ?x619 0)) (not (= ?x548 0))))))
 (let ((?x57 (* b00 p00)))
 (let ((?x265 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 (+ (* (- 1) (* ?x254 q)) ?x55 ?x265 (* ?x302 b)) s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q ?x255) a)) ?x55 ?x265 (* (+ b ?x351) p))))
 (let ((?x280 (+ q ?x255)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x280 ?x280 ?x280 ?x280 ?x220 r r r r r a a a a a p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x342 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x609 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x257 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) (= ?x609 0) (= (+ (* (- 1) (* q a)) ?x55 ?x265 (* b p)) 0) (= ?x342 0) (= ?x198 0) (or (not (= ?x145 0)) (not (= ?x222 0))))))
 (rewrite (= $x257 $x567))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x102 (- s r)))
 (let ((?x99 (- b a)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x101 (+ (- (+ (* ?x31 a ?x95) (* a00 q00)) (* b00 p00)) (* ?x99 p))))
 (let ((?x103 (* ?x101 ?x31 a p p p ?x95 r r r ?x102 ?x102 a a a ?x99 ?x99 ?x99 p ?x95 ?x95 ?x95 r r a ?x99 p p ?x102)))
 (let ((?x88 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x91 (- r s)))
 (let ((?x90 (+ (- (+ (* ?x31 ?x84 q) (* a00 q00)) (* b00 p00)) (* b ?x88))))
 (let ((?x92 (* ?x90 ?x31 ?x84 ?x88 ?x88 ?x88 q ?x91 ?x91 ?x91 s s ?x84 ?x84 ?x84 b b b ?x88 q q q ?x91 ?x91 ?x84 b ?x88 ?x88 s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x138 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x265 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x189 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x265 (* (+ p (* (- 1) q)) b))))
 (let ((?x302 (+ p (* (- 1) q))))
 (let ((?x252 (* (- 1) b)))
 (let ((?x254 (+ a ?x252)))
 (let ((?x340 (+ r (* (- 1) s))))
 (let ((?x222 (* ?x340 ?x340 ?x340 ?x340 ?x340 ?x254 ?x254 ?x254 ?x254 ?x254 ?x302 ?x302 ?x302 ?x302 ?x302 ?x302 ?x189 s s s b b b b q q q q)))
 (let ((?x220 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x265 (* (+ b (* (- 1) a)) p))))
 (let ((?x255 (* (- 1) p)))
 (let ((?x280 (+ q ?x255)))
 (let ((?x351 (* (- 1) a)))
 (let ((?x192 (+ b ?x351)))
 (let ((?x589 (* (- 1) r)))
 (let ((?x234 (+ s ?x589)))
 (let ((?x145 (* ?x234 ?x234 ?x234 ?x192 ?x192 ?x192 ?x192 ?x280 ?x280 ?x280 ?x280 ?x220 r r r r r a a a a a p p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x198 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x342 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x609 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let (($x257 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) (= ?x609 0) (= (+ (* (- 1) (* q a)) ?x55 ?x265 (* b p)) 0) (= ?x342 0) (= ?x198 0) (or (not (= ?x145 0)) (not (= ?x222 0))))))
 (let ((?x102 (- s r)))
 (let ((?x99 (- b a)))
 (let ((?x95 (- q p)))
 (let ((?x31 (- 1)))
 (let ((?x103 (* (+ (- (+ (* ?x31 a ?x95) ?x55) ?x57) (* ?x99 p)) ?x31 a p p p ?x95 r r r ?x102 ?x102 a a a ?x99 ?x99 ?x99 p ?x95 ?x95 ?x95 r r a ?x99 p p ?x102)))
 (let ((?x88 (- p q)))
 (let ((?x84 (- a b)))
 (let ((?x91 (- r s)))
 (let ((?x92 (* (+ (- (+ (* ?x31 ?x84 q) ?x55) ?x57) (* b ?x88)) ?x31 ?x84 ?x88 ?x88 ?x88 q ?x91 ?x91 ?x91 s s ?x84 ?x84 ?x84 b b b ?x88 q q q ?x91 ?x91 ?x84 b ?x88 ?x88 s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x107 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) ?x57) (* b p)) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))
 (rewrite (= $x107 $x257)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x115 (mp (mp @x109 (quant-intro (proof-bind ?x138) (= $x108 $x247)) $x247) (rewrite (= $x247 $x247)) $x247)))
 (let ((@x244 (mp~ (mp @x115 (quant-intro (proof-bind ?x166) (= $x247 $x144)) $x144) (sk (~ $x144 $x224)) $x224)))
 (let ((@x733 (mp @x244 (rewrite (= $x224 $x675)) $x675)))
 (let ((@x737 (and-elim @x733 $x627)))
 (let ((@x612 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x627) $x689)) @x737 $x689)))
 (let (($x692 (<= ?x233 0)))
 (let ((@x597 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x627) $x692)) @x737 $x692)))
 (let (($x130 (not (<= ?x678 0))))
 (let (($x573 (>= ?x728 0)))
 (let (($x679 (<= ?x728 0)))
 (let ((@x165 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x726 (not $x679) (not $x573))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x679)) @x597 @x612 false) $x679) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x573)) @x597 @x612 false) $x573) $x726)))
 (let (($x680 (>= ?x678 0)))
 (let ((@x287 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x676 $x130 (not $x680))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x680)) @x597 @x612 false) $x680) (unit-resolution (and-elim @x733 $x740) @x165 $x677) $x130)))
 ((_ th-lemma arith farkas 1 1 1) @x287 @x597 @x612 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                19.58
 :memory                    19.11
 :mk-bool-var               33
 :mk-clause                 40
 :num-allocs                531747
 :num-checks                1
 :propagations              19
 :rlimit-count              10057
 :time                      0.01
 :total-time                0.03)
