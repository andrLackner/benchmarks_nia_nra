unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun z!1 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x6465 (* (- 18) (* x00 z!1))))
 (let ((?x6151 (* z!1 x!3)))
 (let ((?x6621 (* 18 ?x6151)))
 (let ((?x5926 (* y00 z!1)))
 (let ((?x6112 (* (- 12) ?x5926)))
 (let ((?x5617 (* z00 z00 y!2)))
 (let ((?x6361 (* (- 108) x!3)))
 (let ((?x3547 (* y!2 z!1)))
 (let ((?x5882 (* 12 ?x3547)))
 (let ((?x5623 (* (- 72) y!2)))
 (let ((?x586 (* y00 y00)))
 (let ((?x3925 (* 24 ?x586)))
 (let ((?x519 (* z00 y00)))
 (let ((?x794 (* (- 6) ?x519)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x6395 (+ ?x67 ?x74 ?x794 (* (- 18) (* z00 x00)) ?x3925 (* (- 1) (* z00 z00 y00)) ?x5623 (* (- 12) (* y!2 y!2)) ?x5882 ?x6361 ?x5617 ?x6112 (* z00 y00 z!1) ?x6621 ?x6465 (* (- 12) (* y00 y!2)) (* (- 1) (* z00 y!2 z!1)) (* 18 (* z00 x!3)) (* 6 (* z00 y!2)))))
 (let (($x5625 (<= ?x6395 0)))
 (let (($x6396 (= ?x6395 0)))
 (let ((?x7089 (+ y!2 x!3)))
 (let ((?x3597 (+ y!2 z!1)))
 (let ((?x3410 (+ 6 z!1)))
 (let ((?x4387 (+ 1 n!0)))
 (let ((?x4278 (* (- 1) (* y00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089))))
 (let ((?x4277 (* (- 2) (* y00 y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089))))
 (let ((?x5365 (* 3 (* x00 z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089))))
 (let ((?x4704 (* (- 1) (* y00 y00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089))))
 (let ((?x5519 (* 3 (* x00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089))))
 (let ((?x5526 (* (- 3) (* z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089 ?x7089))))
 (let ((?x5551 (* (- 3) (* z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089 ?x7089))))
 (let ((?x3125 (* 3 (* y00 z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089))))
 (let ((?x6317 (* (- 3) (* z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089))))
 (let ((?x5638 (* 2 (* z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x3597 ?x7089))))
 (let ((?x4280 (+ ?x5638 (* (- 1296) (* y!2 z!1 z!1 z!1)) (* (- 1) (* y00 y!2 z!1 z!1 z!1 z!1 x!3)) (* 864 (* z00 y00 y!2 z!1)) (* 18 (* z00 y00 y!2 y!2 z!1 z!1)) (* 18 (* x00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) (* (- 7776) (* x00 z!1 x!3)) (* 648 (* z00 z00 y!2 y!2 z!1)) (* (- 1080) (* z00 z!1 z!1 x!3)) (* 972 (* z00 z00 y!2 z!1 x!3)) (* 54 (* z00 z00 z!1 z!1 x!3 x!3)) (* (- 19440) (* y!2 y!2 z!1)) (* (- 18) (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089 ?x7089)) (* (- 72) (* y!2 z!1 z!1 z!1 z!1)) (* 324 (* z00 z00 z!1 x!3 x!3)) (* 648 (* z00 z00 x!3 x!3)) (* (- 7776) (* z!1 z!1 x!3)) (* 9 (* z00 z00 y!2 z!1 z!1 z!1 x!3)) (* (- 1188) (* y00 y!2 y!2 z!1 z!1)) (* 12 (* ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x7089)) (* (- 324) (* z00 z00 x00 y!2 z!1)) (* (- 648) (* z00 z00 y00 y!2)) (* (- 216) (* z00 y!2 y!2 z!1 x!3)) (* (- 2) (* z00 z!1 z!1 z!1 z!1 z!1 x!3)) (* (- 432) (* z00 y!2 y!2 x!3)) (* (- 2) (* z00 y!2 z!1 z!1 z!1 z!1 z!1)) (* (- 54) (* z00 z00 x00 z!1 z!1 x!3)) (* (- 324) (* z00 z00 x00 z!1 x!3)) (* z00 y00 y00 y!2 z!1 z!1 z!1) (* 216 (* z00 y00 y00 x!3)) ?x6317 (* 108 (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089 ?x7089)) (* (- 16848) (* y00 y!2 x!3)) (* (- 3) (* z00 x00 z!1 z!1 z!1 z!1 x!3)) (* (- 3888) (* z00 x00 y!2)) (* 3888 (* y00 x00 x!3)) (* 3888 (* y00 x00 y!2)) (* (- 2592) (* z00 x00 y!2 z!1)) (* (- 54) (* z00 z00 y00 z!1 z!1 x!3)) (* (- 78) (* y00 y!2 y!2 z!1 z!1 z!1)) (* (- 18) (* x00 y!2 z!1 z!1 z!1 x!3)) (* 12 (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) (* (- 18) (* x00 y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) (* 18 (* z00 y00 y00 z!1 z!1 x!3)) (* 3 (* z00 z00 y!2 z!1 z!1 z!1 z!1)) (* 3 (* z00 z00 z!1 z!1 z!1 z!1 x!3)) (* (- 1296) (* z!1 z!1 z!1 x!3)) (* (- 324) (* z00 z00 y00 y!2 z!1)) (* (- 3) (* z00 z00 y00 y!2 z!1 z!1 z!1)) (* (- 648) (* x00 y!2 z!1 z!1 z!1)) (* (- 54) (* z00 z00 x00 y!2 z!1 z!1)) (* z00 y00 y00 z!1 z!1 z!1 x!3) (* (- 648) (* z00 x00 z!1 z!1 x!3)) (* 2 (* y00 y00 y!2 z!1 z!1 z!1 z!1)) (* 18 (* ?x3410 ?x3410 ?x3410 ?x3410 ?x7089 ?x7089)) (* (- 38880) (* y!2 y!2)) (* 24 (* z00 y00 z!1 z!1 z!1 x!3)) (* (- 324) (* z00 z!1 z!1 z!1 x!3)) (* 1080 (* y00 y00 y!2 z!1 z!1)) (* (- 216) (* z00 y!2 y!2 y!2 z!1)) (* (- 36) (* z00 y!2 y!2 y!2 z!1 z!1)) (* (- 3888) (* x00 y!2 y!2)) (* 1944 (* z00 z00 y!2 x!3)) (* 1944 (* y00 x00 z!1 x!3)) (* 1944 (* y00 x00 y!2 z!1)) (* (- 72) (* z00 x00 z!1 z!1 z!1 x!3)) (* (- 648) (* z00 x00 y!2 z!1 z!1)) (* 324 (* y00 x00 z!1 z!1 x!3)) (* 324 (* y00 x00 y!2 z!1 z!1)) (* (- 3) (* z00 x00 y!2 z!1 z!1 z!1 z!1)) (* (- 54) (* z00 z00 y00 y!2 z!1 z!1)) (* 648 (* z00 z00 z!1 x!3)) (* 18 (* z00 y00 y00 y!2 z!1 z!1)) (* (- 1944) (* x00 y!2 y!2 z!1)) (* (- 324) (* x00 y!2 y!2 z!1 z!1)) (* 108 (* z00 y00 y00 z!1 x!3)) (* z00 y00 z!1 z!1 z!1 z!1 x!3) (* 216 (* z00 y00 y00 y!2)) (* (- 324) (* x00 y!2 z!1 z!1 x!3)) (* (- 1) (* y00 y!2 z!1 z!1 z!1 z!1 z!1)) (* (- 3) (* z00 z00 x00 y!2 z!1 z!1 z!1)) (* (- 1) (* y00 z!1 z!1 z!1 z!1 z!1 x!3)) (* (- 18) (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089 ?x7089)) (* (- 72) (* y00 y!2 z!1 z!1 z!1 z!1)) (* 18 (* x00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089)) (* (- 23328) (* x!3 x!3)) (* (- 96) (* y00 y!2 z!1 z!1 z!1 x!3)) (* (- 324) (* z00 z00 y00 z!1 x!3)) (* 6 (* z00 z00 y!2 y!2 z!1 z!1 z!1)) (* (- 180) (* y!2 y!2 z!1 z!1 z!1)) (* (- 3240) (* y!2 y!2 z!1 z!1)) (* (- 15552) ?x3547) (* (- 8640) (* y00 y!2 z!1 x!3)) (* 864 (* z00 y00 z!1 x!3)) (* (- 1944) (* x00 y!2 z!1 x!3)) (* (- 12) (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089)) (* 84 (* y00 y00 z!1 z!1 z!1 x!3)) (* (- 1) (* z00 y!2 y!2 z!1 z!1 z!1 z!1)) (* (- 7776) (* x00 y!2 z!1)) (* (- 3888) (* z00 x00 x!3)) (* (- 3888) (* x00 y!2 z!1 z!1)) (* (- 3888) (* x00 z!1 z!1 x!3)) (* (- 648) (* x00 z!1 z!1 z!1 x!3)) (* z00 y00 y!2 z!1 z!1 z!1 z!1) (* z00 y00 y!2 z!1 z!1 z!1 x!3) (* (- 2) (* z00 y!2 y!2 y!2 z!1 z!1 z!1)) (* (- 36) (* x00 z!1 z!1 z!1 z!1 x!3)) (* (- 72) (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) (* 108 (* z00 y00 y!2 y!2 z!1)) (* 108 (* z00 y00 y!2 z!1 x!3)) (* (- 3) (* z00 z00 y00 z!1 z!1 z!1 x!3)) (* 162 (* z00 z00 y!2 z!1 z!1 x!3)) (* 324 (* z00 z00 z!1 z!1 x!3)) (* 324 (* z00 z00 y!2 z!1 z!1)) (* (- 7776) (* y!2 z!1 z!1)) (* 10368 (* y00 y00 x!3)) (* 5616 (* y00 y00 z!1 x!3)) (* 10368 (* y00 y00 y!2)) (* 5616 (* y00 y00 y!2 z!1)) (* (- 1) (* ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) (* (- 3) (* z00 z00 x00 z!1 z!1 z!1 x!3)) (* 216 (* z00 y00 y!2 z!1 z!1)) (* 72 (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089)) ?x3125 (* 2 (* y00 y00 z!1 z!1 z!1 z!1 x!3)) (* (- 11664) (* y00 z!1 x!3)) (* (- 11664) (* y00 y!2 z!1)) (* (- 6) (* y00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) (* 24 (* z00 y00 y!2 z!1 z!1 z!1)) (* 84 (* y00 y00 y!2 z!1 z!1 z!1)) (* 216 (* z00 y00 z!1 z!1 x!3)) (* 1296 (* z00 y00 y!2)) (* 648 (* z00 z00 y!2 z!1)) (* (- 1944) (* y00 z!1 x!3 x!3)) (* 648 (* z00 z!1 z!1 x!3 x!3)) (* 72 (* z00 z!1 z!1 z!1 x!3 x!3)) (* 3888 (* z00 x!3 x!3)) (* 756 (* z00 y!2 z!1 z!1 x!3)) (* 1080 (* z00 y!2 y!2 z!1)) (* 3 (* z00 z!1 z!1 z!1 z!1 x!3 x!3)) (* (- 18) (* y00 z!1 z!1 z!1 x!3 x!3)) (* (- 324) (* y00 z!1 z!1 x!3 x!3)) (* 66 (* z00 y!2 z!1 z!1 z!1 x!3)) (* 54 (* z00 z00 y!2 z!1 z!1 z!1)) (* 54 (* z00 z00 z!1 z!1 z!1 x!3)) (* (- 6) (* z00 y!2 y!2 z!1 z!1 z!1)) (* (- 42) (* z00 z!1 z!1 z!1 z!1 x!3)) (* (- 3888) (* x00 y!2 x!3)) (* (- 72) (* z00 x00 y!2 z!1 z!1 z!1)) (* (- 72) (* z!1 z!1 z!1 z!1 x!3)) (* 2 (* z00 y!2 z!1 z!1 z!1 z!1 x!3)) (* z00 y00 y!2 y!2 z!1 z!1 z!1) (* 3672 (* z00 y!2 z!1 x!3)) (* (- 42) (* z00 y!2 z!1 z!1 z!1 z!1)) (* 6480 (* z00 y!2 x!3)) (* 2592 (* z00 z!1 x!3 x!3)) (* (- 3888) (* y00 x!3 x!3)) (* 108 (* z00 y!2 y!2 z!1 z!1)) (* (- 648) (* z00 z00 x00 x!3)) ?x5551 (* 3 (* z00 z00 z!1 z!1 z!1 x!3 x!3)) (* (- 2) (* z00 y!2 y!2 z!1 z!1 z!1 x!3)) ?x5526 (* (- 15552) ?x6151) (* (- 36) (* y00 y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) ?x5519 (* 36 (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089)) (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089) (* 18 (* ?x3410 ?x3410 ?x3410 ?x3597 ?x7089 ?x7089)) (* (- 1) (* y00 y!2 y!2 z!1 z!1 z!1 z!1)) (* (- 6696) (* y00 y!2 y!2 z!1)) (* (- 1512) (* y00 y!2 z!1 z!1 x!3)) (* (- 1296) (* z00 y!2 z!1)) (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x3597 ?x7089) (* 108 (* z00 y00 y00 y!2 z!1)) (* (- 72) (* y00 z!1 z!1 z!1 z!1 x!3)) (* 2592 (* z00 y!2 y!2)) (* (- 1296) (* z00 z!1 x!3)) (* 18 (* y00 x00 y!2 z!1 z!1 z!1)) (* 18 (* y00 x00 z!1 z!1 z!1 x!3)) (* (- 62208) (* y!2 x!3)) (* 1296 (* z00 z00 y!2 y!2)) (* (- 2592) (* z00 x00 z!1 x!3)) (* (- 36) (* x00 y!2 z!1 z!1 z!1 z!1)) (* (- 432) (* z00 y!2 y!2 y!2)) (* (- 12960) (* y00 y!2 y!2)) (* (- 108) (* x00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089)) (* 1296 (* z00 y00 x!3)) (* (- 6048) (* y00 y!2 z!1 z!1)) (* (- 1080) (* y00 z!1 z!1 z!1 x!3)) (* (- 1080) (* y00 y!2 z!1 z!1 z!1)) (* (- 108) (* z!1 z!1 z!1 x!3 x!3)) (* (- 288) (* y!2 z!1 z!1 z!1 x!3)) (* 18 (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x7089 ?x7089)) (* 108 (* z00 z00 y!2 y!2 z!1 z!1)) (* (- 11664) (* z!1 x!3 x!3)) (* (- 31104) (* y!2 z!1 x!3)) (* (- 1944) (* z!1 z!1 x!3 x!3)) (* (- 5184) (* y!2 z!1 z!1 x!3)) ?x4704 (* 6 (* z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x7089)) (* 216 (* z00 y00 y!2 y!2)) (* (- 648) (* z00 z00 x00 y!2)) ?x5365 (* (- 324) (* z00 y!2 z!1 z!1 z!1)) (* 1080 (* y00 y00 z!1 z!1 x!3)) (* (- 6048) (* y00 z!1 z!1 x!3)) (* (- 1080) (* z00 y!2 z!1 z!1)) (* (- 648) (* z00 z00 y00 x!3)) (* (- 36) (* z00 y!2 y!2 z!1 z!1 x!3)) (* 18 (* z00 y00 y!2 z!1 z!1 x!3)) (* (- 18) (* x00 y!2 y!2 z!1 z!1 z!1)) ?x4277 ?x4278 (* 216 (* z00 y00 y!2 x!3)))))
 (let (($x4281 (= ?x4280 0)))
 (let (($x4707 (not $x4281)))
 (let ((?x7063 (* z00 z00 y!2 y!2)))
 (let ((?x3593 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x3167 (* x!3 x!3)))
 (let ((?x3384 (* 108 ?x3167)))
 (let ((?x2541 (* y!2 y!2)))
 (let ((?x3165 (* 24 ?x2541)))
 (let ((?x1304 (* 108 (* x00 x00))))
 (let ((?x1201 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1197 (* z00 z00 z00 y00)))
 (let ((?x1107 (* (- 36) (* z00 y00 x00))))
 (let ((?x992 (* 16 (* y00 y00 y00))))
 (let ((?x906 (* z00 z00 x00)))
 (let ((?x1157 (* (- 18) ?x906)))
 (let ((?x778 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x720 (* z00 z00 y00)))
 (let ((?x1258 (* (- 10) ?x720)))
 (let ((?x695 (* z00 y00 y00)))
 (let ((?x730 (* (- 12) ?x695)))
 (let ((?x1057 (* 96 ?x586)))
 (let ((?x556 (* z00 x00)))
 (let ((?x474 (* 36 ?x556)))
 (let ((?x884 (* 24 ?x519)))
 (let ((?x466 (* y00 x00)))
 (let ((?x457 (* 216 ?x466)))
 (let ((?x7109 (+ ?x457 ?x884 ?x474 ?x1057 ?x730 ?x1258 ?x778 ?x1157 ?x992 ?x1107 ?x1197 ?x1201 ?x1304 ?x3165 ?x3384 ?x3593 (* (- 216) (* x00 x!3)) (* 10 ?x5617) (* 18 (* z00 z00 x!3)) (* 18 (* z00 y00 y!2)) (* (- 120) (* y00 y!2)) (* (- 216) (* y00 x!3)) (* (- 108) (* x00 y!2)) (* (- 6) (* z00 y!2 y!2)) (* (- 36) (* z00 x!3)) (* (- 24) (* z00 y!2)) (* 108 (* y!2 x!3)) ?x7063 (* (- 1) (* z00 z00 z00 y!2)) (* (- 2) (* z00 z00 z00 x!3)) (* (- 12) (* y00 y!2 y!2)) (* 36 (* z00 y00 x!3)))))
 (let (($x7112 (= ?x7109 0)))
 (let ((?x5669 (* z00 y00 y!2)))
 (let ((?x6315 (* 36 ?x586)))
 (let ((?x635 (* 6 ?x519)))
 (let ((?x7056 (+ ?x67 ?x74 (* 18 ?x466) ?x635 ?x6315 ?x695 (* (- 3) ?x720) (* (- 3) ?x906) (* (- 1) (* y!2 y!2 z!1)) ?x5623 ?x5882 ?x6361 (* (- 1) (* y00 y!2 z!1)) (* 3 ?x5617) (* 3 (* z00 z00 x!3)) ?x5669 ?x6112 ?x6621 ?x6465 (* (- 36) (* y00 y!2)) (* (- 18) (* y00 x!3)) (* (- 18) (* x00 y!2)) (* (- 2) (* z00 y!2 y!2)) (* 3 (* z00 z!1 x!3)) (* (- 3) (* z00 x00 z!1)) (* (- 6) (* z00 y!2)) (* 18 (* y!2 x!3)) (* 2 (* y00 y00 z!1)))))
 (let (($x7057 (= ?x7056 0)))
 (let ((?x378 (* z00 z00)))
 (let ((?x3914 (* (- 6) ?x378)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x6257 (+ ?x67 ?x55 ?x74 ?x3914 (* (- 18) ?x519) ?x5623 (* 6 ?x3547) ?x6361 (* (- 1) (* z00 z00 z!1)) (* 6 (* z00 z!1)) (* 12 ?x5926))))
 (let (($x6375 (= ?x6257 0)))
 (let ((?x1702 (* z!1 z!1)))
 (let ((?x2320 (* (- 1) ?x378)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x4438 (+ ?x49 ?x43 ?x2320 ?x1702 (* (- 12) y!2) (* (- 6) z!1))))
 (let (($x5709 (= ?x4438 0)))
 (let ((?x2330 (* (- 6) n00)))
 (let ((?x5686 (+ z00 ?x2330 (* (- 1) z!1) (* 6 n!0))))
 (let (($x4424 (= ?x5686 0)))
 (let (($x7062 (and $x4424 $x5709 $x6375 $x6396 $x7057 $x7112 $x4707)))
 (let ((?x4343 (* (- 18) (* x00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 (+ x!3 y!2)))))
 (let ((?x1831 (+ x!3 y!2)))
 (let ((?x3103 (* 3 (* z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831))))
 (let ((?x959 (* (- 1) (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x3597 ?x1831))))
 (let ((?x3178 (* (- 1) (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831))))
 (let ((?x3036 (* 3 (* z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831 ?x1831))))
 (let ((?x1353 (* (- 3) (* x00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831))))
 (let ((?x1423 (* 3 (* z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831 ?x1831))))
 (let ((?x440 (* 2 (* y00 y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831))))
 (let ((?x4682 (* (- 3) (* y00 z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831))))
 (let ((?x3390 (* (- 2) (* z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x3597 ?x1831))))
 (let ((?x3403 (* (- 3) (* x00 z00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831))))
 (let ((?x4851 (+ (* 1296 (* y!2 z!1 z00)) (* 19440 (* y!2 y!2 z!1)) (* (- 1296) (* y!2 y!2 z00 z00)) (* 2592 (* x!3 z!1 z00 x00)) (* 36 (* y!2 z!1 z!1 z!1 z!1 x00)) (* 432 (* y!2 y!2 y!2 z00)) (* 15552 ?x3547) (* 62208 (* x!3 y!2)) (* 108 (* x00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831)) (* 15552 (* x!3 z!1)) ?x3403 (* 324 (* y!2 z!1 z!1 z!1 z00)) (* 38880 ?x2541) ?x3390 (* (- 18) (* x00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831)) (* ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831) (* (- 1296) (* y!2 z00 y00)) (* 216 (* y!2 y!2 y!2 z!1 z00)) (* 3888 (* y!2 y!2 x00)) (* 23328 ?x3167) (* 36 (* y!2 y!2 y!2 z!1 z!1 z00)) (* 1296 (* x!3 z!1 z00)) (* (- 2592) (* y!2 y!2 z00)) (* 3888 (* x!3 z00 x00)) (* 11664 (* y!2 z!1 y00)) (* 12960 (* y!2 y!2 y00)) (* (- 10368) (* x!3 y00 y00)) (* (- 10368) (* y!2 y00 y00)) (* (- 5616) (* x!3 z!1 y00 y00)) (* (- 5616) (* y!2 z!1 y00 y00)) (* 1080 (* x!3 z!1 z!1 z00)) (* 6 (* y00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831)) (* (- 1080) (* x!3 z!1 z!1 y00 y00)) (* 324 (* x!3 z!1 z!1 z!1 z00)) (* (- 1080) (* y!2 z!1 z!1 y00 y00)) (* (- 84) (* x!3 z!1 z!1 z!1 y00 y00)) (* (- 1296) (* x!3 z00 y00)) (* (- 84) (* y!2 z!1 z!1 z!1 y00 y00)) (* 1080 (* y!2 z!1 z!1 z00)) (* 6048 (* x!3 z!1 z!1 y00)) (* 6048 (* y!2 z!1 z!1 y00)) (* 1080 (* x!3 z!1 z!1 z!1 y00)) (* 1080 (* y!2 z!1 z!1 z!1 y00)) (* 108 (* x!3 x!3 z!1 z!1 z!1)) (* 288 (* x!3 y!2 z!1 z!1 z!1)) (* 180 (* y!2 y!2 z!1 z!1 z!1)) (* 11664 (* x!3 z!1 y00)) (* (- 2) (* x!3 z!1 z!1 z!1 z!1 y00 y00)) ?x4682 (* (- 18) (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831 ?x1831)) (* 3 (* x!3 z!1 z!1 z!1 z00 z00 y00)) (* 11664 (* x!3 x!3 z!1)) (* 31104 (* x!3 y!2 z!1)) (* 1944 (* x!3 x!3 z!1 z!1)) (* 5184 (* x!3 y!2 z!1 z!1)) (* 3240 (* y!2 y!2 z!1 z!1)) (* y00 y00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831) (* (- 6) (* z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831)) (* 54 (* x!3 z!1 z!1 z00 z00 y00)) (* (- 216) (* y!2 z!1 z!1 z00 y00)) (* (- 24) (* x!3 z!1 z!1 z!1 z00 y00)) (* (- 24) (* y!2 z!1 z!1 z!1 z00 y00)) (* (- 216) (* x!3 z!1 z!1 z00 y00)) (* (- 864) (* y!2 z!1 z00 y00)) (* (- 864) (* x!3 z!1 z00 y00)) (* (- 9) (* x!3 y!2 z!1 z!1 z!1 z00 z00)) (* (- 6) (* y!2 y!2 z!1 z!1 z!1 z00 z00)) (* (- 3) (* x!3 z!1 z!1 z!1 z!1 z00 z00)) (* (- 3) (* y!2 z!1 z!1 z!1 z!1 z00 z00)) (* (- 1944) (* x!3 y!2 z00 z00)) (* (- 648) (* x!3 z!1 z00 z00)) (* (- 648) (* y!2 z!1 z00 z00)) (* (- 972) (* x!3 y!2 z!1 z00 z00)) (* (- 648) (* y!2 y!2 z!1 z00 z00)) (* (- 324) (* x!3 z!1 z!1 z00 z00)) (* (- 324) (* y!2 z!1 z!1 z00 z00)) (* (- 162) (* x!3 y!2 z!1 z!1 z00 z00)) (* (- 72) (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831)) (* (- 108) (* y!2 y!2 z!1 z!1 z00 z00)) (* (- 54) (* x!3 z!1 z!1 z!1 z00 z00)) (* (- 54) (* y!2 z!1 z!1 z!1 z00 z00)) (* (- 66) (* x!3 y!2 z!1 z!1 z!1 z00)) (* 6 (* y!2 y!2 z!1 z!1 z!1 z00)) (* 3888 (* x!3 y!2 x00)) (* 42 (* x!3 z!1 z!1 z!1 z!1 z00)) (* 42 (* y!2 z!1 z!1 z!1 z!1 z00)) (* 72 (* y!2 z!1 z!1 z!1 z00 x00)) (* (- 18) (* x!3 z!1 z!1 z!1 y00 x00)) (* (- 18) (* y!2 z!1 z!1 z!1 y00 x00)) (* 3 (* y!2 z!1 z!1 z!1 z!1 z00 x00)) (* (- 324) (* y!2 z!1 z!1 y00 x00)) (* (- 324) (* x!3 z!1 z!1 y00 x00)) (* 648 (* y!2 z!1 z!1 z00 x00)) (* 72 (* x!3 z!1 z!1 z!1 z00 x00)) (* (- 1944) (* y!2 z!1 y00 x00)) (* (- 1944) (* x!3 z!1 y00 x00)) (* 3 (* x!3 z!1 z!1 z!1 z!1 z00 x00)) (* 3888 (* y!2 z00 x00)) (* (- 3888) (* x!3 y00 x00)) (* (- 3888) (* y!2 y00 x00)) (* 2592 (* y!2 z!1 z00 x00)) (* (- 216) (* y!2 y!2 z00 y00)) (* 648 (* y!2 z00 z00 x00)) (* (- 108) (* x!3 y!2 z!1 z00 y00)) (* (- 108) (* y!2 y!2 z!1 z00 y00)) (* 36 (* x!3 z!1 z!1 z!1 z!1 x00)) (* 72 (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831)) (* 1944 (* x!3 y!2 z!1 x00)) (* 18 (* y!2 y!2 z!1 z!1 z!1 x00)) (* (- 18) (* x!3 y!2 z!1 z!1 z00 y00)) ?x440 (* (- 18) (* y!2 y!2 z!1 z!1 z00 y00)) (* (- 1) (* y!2 y!2 z!1 z!1 z!1 z00 y00)) (* (- 1) (* x!3 y!2 z!1 z!1 z!1 z00 y00)) (* (- 1) (* y!2 z!1 z!1 z!1 z!1 z00 y00)) (* (- 1) (* x!3 z!1 z!1 z!1 z!1 z00 y00)) (* 3 (* x!3 z!1 z!1 z!1 z00 z00 x00)) (* (- 216) (* x!3 y!2 z00 y00)) (* y00 z00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831) (* 648 (* x!3 z00 z00 y00)) (* 324 (* y!2 z!1 z00 z00 y00)) (* 648 (* y!2 z00 z00 y00)) (* 3 (* y!2 z!1 z!1 z!1 z00 z00 y00)) (* 7776 (* x!3 z!1 z!1)) (* 7776 (* y!2 z!1 z!1)) (* 1296 (* x!3 z!1 z!1 z!1)) (* 1296 (* y!2 z!1 z!1 z!1)) (* (- 18) (* ?x3410 ?x3410 ?x3410 ?x3410 ?x1831 ?x1831)) (* 72 (* x!3 z!1 z!1 z!1 z!1)) (* 72 (* y!2 z!1 z!1 z!1 z!1)) (* 18 (* x00 y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831)) (* (- 12) (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831)) (* 2 (* x!3 y!2 y!2 z!1 z!1 z!1 z00)) (* 2 (* y!2 y!2 y!2 z!1 z!1 z!1 z00)) (* (- 2) (* x!3 y!2 z!1 z!1 z!1 z!1 z00)) (* y!2 y!2 z!1 z!1 z!1 z!1 z00) (* 2 (* x!3 z!1 z!1 z!1 z!1 z!1 z00)) (* 2 (* y!2 z!1 z!1 z!1 z!1 z!1 z00)) (* 432 (* x!3 y!2 y!2 z00)) (* 216 (* x!3 y!2 y!2 z!1 z00)) (* 324 (* y!2 z!1 z00 z00 x00)) (* 36 (* x!3 y!2 y!2 z!1 z!1 z00)) (* 648 (* x!3 z00 z00 x00)) (* 18 (* x!3 x!3 z!1 z!1 z!1 y00)) (* 324 (* x!3 x!3 z!1 z!1 y00)) (* 3888 (* x!3 x!3 y00)) (* (- 3) (* x!3 x!3 z!1 z!1 z!1 z!1 z00)) (* (- 3672) (* x!3 y!2 z!1 z00)) (* (- 1080) (* y!2 y!2 z!1 z00)) (* (- 756) (* x!3 y!2 z!1 z!1 z00)) (* (- 108) (* y!2 y!2 z!1 z!1 z00)) (* (- 72) (* x!3 x!3 z!1 z!1 z!1 z00)) (* (- 3888) (* x!3 x!3 z00)) (* (- 6480) (* x!3 y!2 z00)) (* (- 2592) (* x!3 x!3 z!1 z00)) (* (- 648) (* x!3 x!3 z!1 z!1 z00)) (* 1944 (* x!3 x!3 z!1 y00)) ?x1423 (* (- 3) (* x!3 x!3 z!1 z!1 z!1 z00 z00)) (* 54 (* y!2 z!1 z!1 z00 z00 y00)) (* (- 648) (* x!3 x!3 z00 z00)) (* (- 324) (* x!3 x!3 z!1 z00 z00)) (* 18 (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831 ?x1831)) (* 12 (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831)) (* (- 54) (* x!3 x!3 z!1 z!1 z00 z00)) ?x1353 (* 36 (* y00 y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831)) (* 324 (* x!3 z!1 z00 z00 x00)) (* 54 (* y!2 z!1 z!1 z00 z00 x00)) (* 648 (* y!2 z!1 z!1 z!1 x00)) (* 648 (* x!3 z!1 z!1 z!1 x00)) (* 3888 (* y!2 z!1 z!1 x00)) (* 3888 (* x!3 z!1 z!1 x00)) (* 7776 (* y!2 z!1 x00)) (* 7776 (* x!3 z!1 x00)) (* 54 (* x!3 z!1 z!1 z00 z00 x00)) (* 96 (* x!3 y!2 z!1 z!1 z!1 y00)) (* 324 (* x!3 z!1 z00 z00 y00)) (* (- 12) (* ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x1831)) (* 1188 (* y!2 y!2 z!1 z!1 y00)) ?x3036 (* 1512 (* x!3 y!2 z!1 z!1 y00)) ?x3178 (* (- 36) (* y00 ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x3597 ?x1831)) (* 6696 (* y!2 y!2 z!1 y00)) (* 8640 (* x!3 y!2 z!1 y00)) (* (- 2) (* y!2 z!1 z!1 z!1 z!1 y00 y00)) (* 16848 (* x!3 y!2 y00)) (* (- 108) (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831 ?x1831)) (* 78 (* y!2 y!2 z!1 z!1 z!1 y00)) ?x959 (* 72 (* x!3 z!1 z!1 z!1 z!1 y00)) (* 72 (* y!2 z!1 z!1 z!1 z!1 y00)) ?x3103 (* 18 (* ?x4387 ?x4387 ?x3410 ?x3410 ?x3410 ?x3410 ?x3597 ?x3597 ?x1831 ?x1831)) (* (- 18) (* ?x3410 ?x3410 ?x3410 ?x3597 ?x1831 ?x1831)) ?x4343 (* x!3 y!2 z!1 z!1 z!1 z!1 y00) (* y!2 y!2 z!1 z!1 z!1 z!1 y00) (* x!3 z!1 z!1 z!1 z!1 z!1 y00) (* y!2 z!1 z!1 z!1 z!1 z!1 y00) (* 3 (* y!2 z!1 z!1 z!1 z00 z00 x00)) (* (- 216) (* x!3 z00 y00 y00)) (* 324 (* x!3 y!2 z!1 z!1 x00)) (* (- 216) (* y!2 z00 y00 y00)) (* (- 108) (* x!3 z!1 z00 y00 y00)) (* (- 108) (* y!2 z!1 z00 y00 y00)) (* 18 (* x!3 y!2 z!1 z!1 z!1 x00)) (* (- 18) (* x!3 z!1 z!1 z00 y00 y00)) (* (- 18) (* y!2 z!1 z!1 z00 y00 y00)) (* 1944 (* y!2 y!2 z!1 x00)) (* 324 (* y!2 y!2 z!1 z!1 x00)) (* 648 (* x!3 z!1 z!1 z00 x00)) (* (- 1) (* x!3 z!1 z!1 z!1 z00 y00 y00)) (* (- 1) (* y!2 z!1 z!1 z!1 z00 y00 y00)))))
 (let ((?x3596 (* y!2 y!2 z00 z00)))
 (let ((?x3588 (+ (* 10 (* y!2 z00 z00)) ?x3596 (* (- 1) (* y!2 z00 z00 z00)) ?x457 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x884 ?x474 ?x3165 ?x1057 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x730 ?x1258 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x778 ?x3384 ?x3593 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1157 (* (- 216) (* x!3 y00)) ?x992 (* (- 12) (* y!2 y!2 y00)) ?x1107 (* (- 216) (* x!3 x00)) ?x1197 ?x1201 (* 36 (* x!3 z00 y00)) ?x1304)))
 (let ((?x1507 (* y!2 z!1 y00)))
 (let ((?x907 (* 3 ?x906)))
 (let ((?x969 (* 3 ?x720)))
 (let ((?x702 (* (- 1) ?x695)))
 (let ((?x4620 (* 18 (* z!1 x00))))
 (let ((?x889 (* (- 36) ?x586)))
 (let ((?x3136 (* z!1 y00)))
 (let ((?x3400 (* 12 ?x3136)))
 (let ((?x3662 (* x!3 z!1)))
 (let ((?x1700 (* (- 18) ?x3662)))
 (let ((?x467 (* (- 18) ?x466)))
 (let ((?x4365 (* (- 12) ?x3547)))
 (let ((?x1160 (* y!2 y!2 z!1)))
 (let ((?x598 (* (- 108) x00)))
 (let ((?x541 (* (- 72) y00)))
 (let ((?x3139 (* 72 y!2)))
 (let ((?x4303 (* 108 x!3)))
 (let ((?x3397 (+ ?x4303 ?x3139 ?x541 ?x598 (* (- 3) (* y!2 z00 z00)) ?x1160 ?x4365 ?x467 (* (- 18) (* x!3 y!2)) ?x1700 ?x3400 ?x794 ?x889 ?x4620 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x702 ?x969 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x907 (* 18 (* x!3 y00)) ?x1507 (* (- 2) (* z!1 y00 y00)))))
 (let ((?x615 (* (- 24) ?x586)))
 (let ((?x557 (* 18 ?x556)))
 (let ((?x3394 (* y!2 z!1 z00)))
 (let ((?x1158 (+ ?x4303 ?x3139 ?x541 ?x598 ?x3394 (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x4365 ?x1700 ?x3400 ?x635 ?x557 (* 12 ?x2541) ?x615 ?x4620 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x720 (* (- 18) (* x!3 z00)))))
 (let ((?x520 (* 18 ?x519)))
 (let ((?x482 (* 6 ?x378)))
 (let ((?x471 (* (- 1) ?x55)))
 (let ((?x2534 (+ ?x4303 ?x3139 ?x541 ?x471 ?x598 (* z!1 z00 z00) ?x482 (* (- 6) ?x3547) (* (- 12) ?x3136) ?x520 (* (- 6) (* z!1 z00)))))
 (let ((?x449 (* (- 12) y00)))
 (let ((?x448 (* (- 6) z00)))
 (let (($x4388 (= (+ (* 12 y!2) (* 6 z!1) ?x448 ?x449 (* (- 1) ?x1702) ?x378) 0)))
 (let (($x4850 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x4388 (= ?x2534 0) (= ?x1158 0) (= ?x3397 0) (= ?x3588 0) (not (= ?x4851 0)))))
 (let (($x7761 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x6087 (* y z z z z z y00)))
 (let ((?x6084 (* x z z z z z y00)))
 (let ((?x6081 (* y y z z z z y00)))
 (let ((?x6078 (* x y z z z z y00)))
 (let ((?x216 (+ x y)))
 (let ((?x224 (+ y z)))
 (let ((?x465 (+ 6 z)))
 (let ((?x1399 (+ 1 n)))
 (let ((?x6049 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x6061 (* (- 18) ?x6049)))
 (let ((?x6024 (* ?x465 ?x465 ?x465 ?x224 ?x216 ?x216)))
 (let ((?x6036 (* (- 18) ?x6024)))
 (let ((?x6010 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x6011 (* 18 ?x6010)))
 (let ((?x5965 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5899 (* 3 ?x5965)))
 (let ((?x5939 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5946 (* (- 1) ?x5939)))
 (let ((?x5888 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5891 (* (- 108) ?x5888)))
 (let ((?x5821 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5811 (* (- 36) ?x5821)))
 (let ((?x5792 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5791 (* (- 1) ?x5792)))
 (let ((?x5779 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5772 (* 3 ?x5779)))
 (let ((?x5743 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5731 (* (- 12) ?x5743)))
 (let ((?x5336 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5234 (* 36 ?x5336)))
 (let ((?x5318 (* x00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5327 (* (- 3) ?x5318)))
 (let ((?x5300 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5301 (* 12 ?x5300)))
 (let ((?x5295 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5212 (* 18 ?x5295)))
 (let ((?x5211 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5258 (* 3 ?x5211)))
 (let ((?x4257 (* y y z z z z z00)))
 (let ((?x4063 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1228 (* (- 12) ?x4063)))
 (let ((?x4046 (* x00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x4047 (* 18 ?x4046)))
 (let ((?x3977 (* ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)))
 (let ((?x4021 (* (- 18) ?x3977)))
 (let ((?x3670 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x3433 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3436 (* 2 ?x3433)))
 (let ((?x3369 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3371 (* 72 ?x3369)))
 (let ((?x2621 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2643 (* (- 72) ?x2621)))
 (let ((?x2108 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2770 (* (- 6) ?x2108)))
 (let ((?x2104 (* y00 y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1832 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x1857 (* (- 18) ?x1832)))
 (let ((?x1829 (* y00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3693 (* (- 3) ?x1829)))
 (let ((?x1187 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1188 (* 6 ?x1187)))
 (let ((?x809 (* x x)))
 (let ((?x6604 (* 23328 ?x809)))
 (let ((?x609 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x600 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2013 (* (- 18) ?x600)))
 (let ((?x573 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x4541 (* (- 2) ?x573)))
 (let ((?x560 (* y y)))
 (let ((?x6469 (* 38880 ?x560)))
 (let ((?x530 (* x00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2133 (* (- 3) ?x530)))
 (let ((?x492 (* x z)))
 (let ((?x6473 (* 15552 ?x492)))
 (let ((?x485 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1095 (* 108 ?x485)))
 (let ((?x483 (* x y)))
 (let ((?x6472 (* 62208 ?x483)))
 (let ((?x462 (* y z)))
 (let ((?x6474 (* 15552 ?x462)))
 (let ((?x7754 (+ (* 1296 (* y z z00)) (* 19440 (* y y z)) (* (- 1296) (* y y z00 z00)) (* 2592 (* x z z00 x00)) (* 36 (* y z z z z x00)) (* 432 (* y y y z00)) ?x6474 ?x6472 ?x1095 ?x6473 ?x2133 (* 324 (* y z z z z00)) ?x6469 ?x4541 ?x2013 ?x609 (* (- 1296) (* y z00 y00)) (* 216 (* y y y z z00)) (* 3888 (* y y x00)) ?x6604 (* 36 (* y y y z z z00)) (* 1296 (* x z z00)) (* (- 2592) (* y y z00)) (* 3888 (* x z00 x00)) (* 11664 (* y z y00)) (* 12960 (* y y y00)) (* (- 10368) (* x y00 y00)) (* (- 10368) (* y y00 y00)) (* (- 5616) (* x z y00 y00)) (* (- 5616) (* y z y00 y00)) (* 1080 (* x z z z00)) ?x1188 (* (- 1080) (* x z z y00 y00)) (* 324 (* x z z z z00)) (* (- 1080) (* y z z y00 y00)) (* (- 84) (* x z z z y00 y00)) (* (- 1296) (* x z00 y00)) (* (- 84) (* y z z z y00 y00)) (* 1080 (* y z z z00)) (* 6048 (* x z z y00)) (* 6048 (* y z z y00)) (* 1080 (* x z z z y00)) (* 1080 (* y z z z y00)) (* 108 (* x x z z z)) (* 288 (* x y z z z)) (* 180 (* y y z z z)) (* 11664 (* x z y00)) (* (- 2) (* x z z z z y00 y00)) ?x3693 ?x1857 (* 3 (* x z z z z00 z00 y00)) (* 11664 (* x x z)) (* 31104 (* x y z)) (* 1944 (* x x z z)) (* 5184 (* x y z z)) (* 3240 (* y y z z)) ?x2104 ?x2770 (* 54 (* x z z z00 z00 y00)) (* (- 216) (* y z z z00 y00)) (* (- 24) (* x z z z z00 y00)) (* (- 24) (* y z z z z00 y00)) (* (- 216) (* x z z z00 y00)) (* (- 864) (* y z z00 y00)) (* (- 864) (* x z z00 y00)) (* (- 9) (* x y z z z z00 z00)) (* (- 6) (* y y z z z z00 z00)) (* (- 3) (* x z z z z z00 z00)) (* (- 3) (* y z z z z z00 z00)) (* (- 1944) (* x y z00 z00)) (* (- 648) (* x z z00 z00)) (* (- 648) (* y z z00 z00)) (* (- 972) (* x y z z00 z00)) (* (- 648) (* y y z z00 z00)) (* (- 324) (* x z z z00 z00)) (* (- 324) (* y z z z00 z00)) (* (- 162) (* x y z z z00 z00)) ?x2643 (* (- 108) (* y y z z z00 z00)) (* (- 54) (* x z z z z00 z00)) (* (- 54) (* y z z z z00 z00)) (* (- 66) (* x y z z z z00)) (* 6 (* y y z z z z00)) (* 3888 (* x y x00)) (* 42 (* x z z z z z00)) (* 42 (* y z z z z z00)) (* 72 (* y z z z z00 x00)) (* (- 18) (* x z z z y00 x00)) (* (- 18) (* y z z z y00 x00)) (* 3 (* y z z z z z00 x00)) (* (- 324) (* y z z y00 x00)) (* (- 324) (* x z z y00 x00)) (* 648 (* y z z z00 x00)) (* 72 (* x z z z z00 x00)) (* (- 1944) (* y z y00 x00)) (* (- 1944) (* x z y00 x00)) (* 3 (* x z z z z z00 x00)) (* 3888 (* y z00 x00)) (* (- 3888) (* x y00 x00)) (* (- 3888) (* y y00 x00)) (* 2592 (* y z z00 x00)) (* (- 216) (* y y z00 y00)) (* 648 (* y z00 z00 x00)) (* (- 108) (* x y z z00 y00)) (* (- 108) (* y y z z00 y00)) (* 36 (* x z z z z x00)) ?x3371 (* 1944 (* x y z x00)) (* 18 (* y y z z z x00)) (* (- 18) (* x y z z z00 y00)) ?x3436 (* (- 18) (* y y z z z00 y00)) (* (- 1) (* y y z z z z00 y00)) (* (- 1) (* x y z z z z00 y00)) (* (- 1) (* y z z z z z00 y00)) (* (- 1) (* x z z z z z00 y00)) (* 3 (* x z z z z00 z00 x00)) (* (- 216) (* x y z00 y00)) ?x3670 (* 648 (* x z00 z00 y00)) (* 324 (* y z z00 z00 y00)) (* 648 (* y z00 z00 y00)) (* 3 (* y z z z z00 z00 y00)) (* 7776 (* x z z)) (* 7776 (* y z z)) (* 1296 (* x z z z)) (* 1296 (* y z z z)) ?x4021 (* 72 (* x z z z z)) (* 72 (* y z z z z)) ?x4047 ?x1228 (* 2 (* x y y z z z z00)) (* 2 (* y y y z z z z00)) (* (- 2) (* x y z z z z z00)) ?x4257 (* 2 (* x z z z z z z00)) (* 2 (* y z z z z z z00)) (* 432 (* x y y z00)) (* 216 (* x y y z z00)) (* 324 (* y z z00 z00 x00)) (* 36 (* x y y z z z00)) (* 648 (* x z00 z00 x00)) (* 18 (* x x z z z y00)) (* 324 (* x x z z y00)) (* 3888 (* x x y00)) (* (- 3) (* x x z z z z z00)) (* (- 3672) (* x y z z00)) (* (- 1080) (* y y z z00)) (* (- 756) (* x y z z z00)) (* (- 108) (* y y z z z00)) (* (- 72) (* x x z z z z00)) (* (- 3888) (* x x z00)) (* (- 6480) (* x y z00)) (* (- 2592) (* x x z z00)) (* (- 648) (* x x z z z00)) (* 1944 (* x x z y00)) ?x5258 (* (- 3) (* x x z z z z00 z00)) (* 54 (* y z z z00 z00 y00)) (* (- 648) (* x x z00 z00)) (* (- 324) (* x x z z00 z00)) ?x5212 ?x5301 (* (- 54) (* x x z z z00 z00)) ?x5327 ?x5234 (* 324 (* x z z00 z00 x00)) (* 54 (* y z z z00 z00 x00)) (* 648 (* y z z z x00)) (* 648 (* x z z z x00)) (* 3888 (* y z z x00)) (* 3888 (* x z z x00)) (* 7776 (* y z x00)) (* 7776 (* x z x00)) (* 54 (* x z z z00 z00 x00)) (* 96 (* x y z z z y00)) (* 324 (* x z z00 z00 y00)) ?x5731 (* 1188 (* y y z z y00)) ?x5772 (* 1512 (* x y z z y00)) ?x5791 ?x5811 (* 6696 (* y y z y00)) (* 8640 (* x y z y00)) (* (- 2) (* y z z z z y00 y00)) (* 16848 (* x y y00)) ?x5891 (* 78 (* y y z z z y00)) ?x5946 (* 72 (* x z z z z y00)) (* 72 (* y z z z z y00)) ?x5899 ?x6011 ?x6036 ?x6061 ?x6078 ?x6081 ?x6084 ?x6087 (* 3 (* y z z z z00 z00 x00)) (* (- 216) (* x z00 y00 y00)) (* 324 (* x y z z x00)) (* (- 216) (* y z00 y00 y00)) (* (- 108) (* x z z00 y00 y00)) (* (- 108) (* y z z00 y00 y00)) (* 18 (* x y z z z x00)) (* (- 18) (* x z z z00 y00 y00)) (* (- 18) (* y z z z00 y00 y00)) (* 1944 (* y y z x00)) (* 324 (* y y z z x00)) (* 648 (* x z z z00 x00)) (* (- 1) (* x z z z z00 y00 y00)) (* (- 1) (* y z z z z00 y00 y00)))))
 (let ((?x1304 (* 108 (* x00 x00))))
 (let ((?x1201 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1197 (* z00 z00 z00 y00)))
 (let ((?x1107 (* (- 36) (* z00 y00 x00))))
 (let ((?x992 (* 16 (* y00 y00 y00))))
 (let ((?x906 (* z00 z00 x00)))
 (let ((?x1157 (* (- 18) ?x906)))
 (let ((?x823 (* y y y)))
 (let ((?x862 (* (- 4) ?x823)))
 (let ((?x810 (* 108 ?x809)))
 (let ((?x778 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x720 (* z00 z00 y00)))
 (let ((?x1258 (* (- 10) ?x720)))
 (let ((?x695 (* z00 y00 y00)))
 (let ((?x730 (* (- 12) ?x695)))
 (let ((?x586 (* y00 y00)))
 (let ((?x1057 (* 96 ?x586)))
 (let ((?x805 (* 24 ?x560)))
 (let ((?x556 (* z00 x00)))
 (let ((?x474 (* 36 ?x556)))
 (let ((?x519 (* z00 y00)))
 (let ((?x884 (* 24 ?x519)))
 (let ((?x466 (* y00 x00)))
 (let ((?x457 (* 216 ?x466)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1324 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x457 (* (- 2) (* x z00 z00 z00)) (* 108 ?x483) ?x884 ?x474 ?x805 ?x1057 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x730 ?x1258 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x778 ?x810 ?x862 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1157 (* (- 216) (* x y00)) ?x992 (* (- 12) (* y y y00)) ?x1107 (* (- 216) (* x x00)) ?x1197 ?x1201 (* 36 (* x z00 y00)) ?x1304)))
 (let (($x1329 (= ?x1324 0)))
 (let ((?x966 (* y z y00)))
 (let ((?x907 (* 3 ?x906)))
 (let ((?x969 (* 3 ?x720)))
 (let ((?x702 (* (- 1) ?x695)))
 (let ((?x632 (* 18 (* z x00))))
 (let ((?x889 (* (- 36) ?x586)))
 (let ((?x794 (* (- 6) ?x519)))
 (let ((?x493 (* z y00)))
 (let ((?x494 (* 12 ?x493)))
 (let ((?x527 (* (- 18) ?x492)))
 (let ((?x467 (* (- 18) ?x466)))
 (let ((?x486 (* (- 12) ?x462)))
 (let ((?x135 (* y y z)))
 (let ((?x598 (* (- 108) x00)))
 (let ((?x541 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1025 (+ ?x64 ?x71 ?x541 ?x598 (* (- 3) (* y z00 z00)) ?x135 ?x486 ?x467 (* (- 18) ?x483) ?x527 ?x494 ?x794 ?x889 ?x632 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x702 ?x969 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x907 (* 18 (* x y00)) ?x966 (* (- 2) (* z y00 y00)))))
 (let (($x1032 (= ?x1025 0)))
 (let ((?x615 (* (- 24) ?x586)))
 (let ((?x563 (* 12 ?x560)))
 (let ((?x557 (* 18 ?x556)))
 (let ((?x635 (* 6 ?x519)))
 (let ((?x103 (* y z z00)))
 (let ((?x774 (+ ?x64 ?x71 ?x541 ?x598 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x486 ?x527 ?x494 ?x635 ?x557 ?x563 ?x615 ?x632 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x720 (* (- 18) (* x z00)))))
 (let (($x779 (= ?x774 0)))
 (let ((?x520 (* 18 ?x519)))
 (let ((?x378 (* z00 z00)))
 (let ((?x482 (* 6 ?x378)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x471 (* (- 1) ?x55)))
 (let ((?x614 (+ ?x64 ?x71 ?x541 ?x471 ?x598 ?x76 ?x482 (* (- 6) ?x462) (* (- 12) ?x493) ?x520 (* (- 6) (* z z00)))))
 (let (($x619 (= ?x614 0)))
 (let ((?x50 (* z z)))
 (let ((?x450 (* (- 1) ?x50)))
 (let ((?x449 (* (- 12) y00)))
 (let ((?x448 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x452 (= (+ ?x45 ?x46 ?x448 ?x449 ?x450 ?x378) 0)))
 (let (($x370 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x370 $x452 $x619 $x779 $x1032 $x1329 (not (= ?x7754 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x2439 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x465 (+ 6 z)))
 (let ((?x4507 (* x00 ?x465 ?x465 ?x465 ?x465 ?x216)))
 (let ((?x224 (+ y z)))
 (let ((?x1399 (+ 1 n)))
 (let ((?x573 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2104 (* y00 y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3433 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5350 (* y00 y00 z00 ?x465 ?x465 ?x465 ?x216)))
 (let ((?x5318 (* x00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5211 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5965 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5939 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5759 (* y00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5779 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5792 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x530 (* x00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3670 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x1829 (* y00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1564 (+ (* 2 (* y00 y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 36 (* y00 y00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) (* y00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* 3 ?x1829) (* (- 108) (* ?x465 ?x465 ?x465 ?x216 ?x216)) (* 72 (* y00 ?x465 ?x465 ?x465 ?x216)) (* (- 12) (* y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 18 (* ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 1) ?x3670) (* 6 (* y00 z00 ?x465 ?x465 ?x465 ?x216)) (* 3 (* z00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 72) (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* (- 18) (* x00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 12 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 6 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* (- 3) (* x00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* (- 6) (* z00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 18 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)) (* 18 (* x00 y00 ?x465 ?x465 ?x465 ?x216)) (* (- 1) (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 3 ?x530) (* (- 18) (* y00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 3) (* x00 z00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 36 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) ?x5792 (* (- 3) ?x5779) ?x5759 (* 12 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 72) (* ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 2) (* z00 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5939 (* (- 3) ?x5965) (* (- 18) (* x00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 108 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)) (* (- 18) (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)) (* 18 (* ?x465 ?x465 ?x465 ?x224 ?x216 ?x216)) (* 18 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* 3 (* z00 ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 3 (* z00 z00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 36) (* y00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 72 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* 108 (* x00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) ?x5211) (* (- 18) (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216 ?x216)) (* (- 12) (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* (- 1) (* y00 ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 3 ?x5318) (* (- 36) (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5350 (* (- 108) (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 18 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* (- 2) ?x3433) (* (- 1) ?x2104) (* (- 6) (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 2 ?x573) (* (- 18) ?x4507))))
 (let ((?x1304 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x586 (* y00 y00)))
 (let ((?x1057 (* 96 ?x586)))
 (let ((?x992 (* 16 (* y00 y00 y00))))
 (let ((?x823 (* y y y)))
 (let ((?x862 (* (- 4) ?x823)))
 (let ((?x809 (* x x)))
 (let ((?x810 (* 108 ?x809)))
 (let ((?x560 (* y y)))
 (let ((?x805 (* 24 ?x560)))
 (let ((?x3323 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x805 ?x810 ?x862 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x992 (* (- 6) (* z00 y y)) ?x1057 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1304 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3333 (= ?x3323 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x3920 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x3916 (* (- 108) x)))
 (let ((?x1323 (* x00 z)))
 (let ((?x3918 (* (- 18) ?x1323)))
 (let ((?x6315 (* 36 ?x586)))
 (let ((?x2325 (* z y)))
 (let ((?x3639 (* 12 ?x2325)))
 (let ((?x1560 (* z00 y)))
 (let ((?x1586 (* (- 6) ?x1560)))
 (let ((?x2393 (* y00 z00)))
 (let ((?x1295 (* 6 ?x2393)))
 (let ((?x2365 (* y00 z)))
 (let ((?x2376 (* (- 12) ?x2365)))
 (let ((?x2214 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x2367 (* z x)))
 (let ((?x6003 (* 18 ?x2367)))
 (let ((?x3321 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x6003 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x2214 ?x2376 ?x1295 (* (- 36) (* y00 y)) ?x1586 ?x3639 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x6315 ?x3918 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x3916 ?x67 (* (- 18) (* y00 x)) ?x3920 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3648 (* z00 z00 y)))
 (let ((?x1562 (* 6 ?x1560)))
 (let ((?x6326 (* (- 6) ?x2393)))
 (let ((?x3925 (* 24 ?x586)))
 (let ((?x2321 (* y00 z00 z)))
 (let ((?x3928 (+ ?x2321 ?x3639 ?x6003 (* (- 18) (* x00 z00)) (* (- 12) ?x560) ?x3925 ?x3918 ?x2376 ?x6326 (* (- 12) (* y00 y)) ?x3916 ?x67 ?x1562 ?x3920 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3648)))
 (let ((?x2366 (* 12 ?x2365)))
 (let ((?x378 (* z00 z00)))
 (let ((?x3914 (* (- 6) ?x378)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2869 (+ (* 6 ?x2325) ?x55 ?x3914 ?x2366 (* (- 18) ?x2393) ?x3916 ?x67 (* 6 (* z00 z)) ?x3920 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x450 (* (- 1) ?x50)))
 (let ((?x448 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x449 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x378 ?x449 ?x45 ?x46 ?x448 ?x450) 0) (= ?x2869 0) (= ?x3928 0) (= ?x3321 0) $x3333 (not (= ?x1564 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x7763 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x6087 (* y z z z z z y00)))
 (let ((?x6084 (* x z z z z z y00)))
 (let ((?x6081 (* y y z z z z y00)))
 (let ((?x6078 (* x y z z z z y00)))
 (let ((?x216 (+ x y)))
 (let ((?x224 (+ y z)))
 (let ((?x465 (+ 6 z)))
 (let ((?x1399 (+ 1 n)))
 (let ((?x6049 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x6061 (* (- 18) ?x6049)))
 (let ((?x6024 (* ?x465 ?x465 ?x465 ?x224 ?x216 ?x216)))
 (let ((?x6036 (* (- 18) ?x6024)))
 (let ((?x6010 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x6011 (* 18 ?x6010)))
 (let ((?x5965 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5899 (* 3 ?x5965)))
 (let ((?x5939 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5946 (* (- 1) ?x5939)))
 (let ((?x5888 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5891 (* (- 108) ?x5888)))
 (let ((?x5821 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5811 (* (- 36) ?x5821)))
 (let ((?x5792 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5791 (* (- 1) ?x5792)))
 (let ((?x5779 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5772 (* 3 ?x5779)))
 (let ((?x5743 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5731 (* (- 12) ?x5743)))
 (let ((?x5336 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5234 (* 36 ?x5336)))
 (let ((?x5318 (* x00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5327 (* (- 3) ?x5318)))
 (let ((?x5300 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5301 (* 12 ?x5300)))
 (let ((?x5295 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5212 (* 18 ?x5295)))
 (let ((?x5211 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5258 (* 3 ?x5211)))
 (let ((?x4257 (* y y z z z z z00)))
 (let ((?x4063 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1228 (* (- 12) ?x4063)))
 (let ((?x4046 (* x00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x4047 (* 18 ?x4046)))
 (let ((?x3977 (* ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)))
 (let ((?x4021 (* (- 18) ?x3977)))
 (let ((?x3670 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x3433 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3436 (* 2 ?x3433)))
 (let ((?x3369 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3371 (* 72 ?x3369)))
 (let ((?x2621 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2643 (* (- 72) ?x2621)))
 (let ((?x2108 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2770 (* (- 6) ?x2108)))
 (let ((?x2104 (* y00 y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1832 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x1857 (* (- 18) ?x1832)))
 (let ((?x1829 (* y00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3693 (* (- 3) ?x1829)))
 (let ((?x1187 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1188 (* 6 ?x1187)))
 (let ((?x809 (* x x)))
 (let ((?x6604 (* 23328 ?x809)))
 (let ((?x609 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x600 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2013 (* (- 18) ?x600)))
 (let ((?x573 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x4541 (* (- 2) ?x573)))
 (let ((?x560 (* y y)))
 (let ((?x6469 (* 38880 ?x560)))
 (let ((?x530 (* x00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2133 (* (- 3) ?x530)))
 (let ((?x492 (* x z)))
 (let ((?x6473 (* 15552 ?x492)))
 (let ((?x485 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1095 (* 108 ?x485)))
 (let ((?x483 (* x y)))
 (let ((?x6472 (* 62208 ?x483)))
 (let ((?x462 (* y z)))
 (let ((?x6474 (* 15552 ?x462)))
 (let ((?x7754 (+ (* 1296 (* y z z00)) (* 19440 (* y y z)) (* (- 1296) (* y y z00 z00)) (* 2592 (* x z z00 x00)) (* 36 (* y z z z z x00)) (* 432 (* y y y z00)) ?x6474 ?x6472 ?x1095 ?x6473 ?x2133 (* 324 (* y z z z z00)) ?x6469 ?x4541 ?x2013 ?x609 (* (- 1296) (* y z00 y00)) (* 216 (* y y y z z00)) (* 3888 (* y y x00)) ?x6604 (* 36 (* y y y z z z00)) (* 1296 (* x z z00)) (* (- 2592) (* y y z00)) (* 3888 (* x z00 x00)) (* 11664 (* y z y00)) (* 12960 (* y y y00)) (* (- 10368) (* x y00 y00)) (* (- 10368) (* y y00 y00)) (* (- 5616) (* x z y00 y00)) (* (- 5616) (* y z y00 y00)) (* 1080 (* x z z z00)) ?x1188 (* (- 1080) (* x z z y00 y00)) (* 324 (* x z z z z00)) (* (- 1080) (* y z z y00 y00)) (* (- 84) (* x z z z y00 y00)) (* (- 1296) (* x z00 y00)) (* (- 84) (* y z z z y00 y00)) (* 1080 (* y z z z00)) (* 6048 (* x z z y00)) (* 6048 (* y z z y00)) (* 1080 (* x z z z y00)) (* 1080 (* y z z z y00)) (* 108 (* x x z z z)) (* 288 (* x y z z z)) (* 180 (* y y z z z)) (* 11664 (* x z y00)) (* (- 2) (* x z z z z y00 y00)) ?x3693 ?x1857 (* 3 (* x z z z z00 z00 y00)) (* 11664 (* x x z)) (* 31104 (* x y z)) (* 1944 (* x x z z)) (* 5184 (* x y z z)) (* 3240 (* y y z z)) ?x2104 ?x2770 (* 54 (* x z z z00 z00 y00)) (* (- 216) (* y z z z00 y00)) (* (- 24) (* x z z z z00 y00)) (* (- 24) (* y z z z z00 y00)) (* (- 216) (* x z z z00 y00)) (* (- 864) (* y z z00 y00)) (* (- 864) (* x z z00 y00)) (* (- 9) (* x y z z z z00 z00)) (* (- 6) (* y y z z z z00 z00)) (* (- 3) (* x z z z z z00 z00)) (* (- 3) (* y z z z z z00 z00)) (* (- 1944) (* x y z00 z00)) (* (- 648) (* x z z00 z00)) (* (- 648) (* y z z00 z00)) (* (- 972) (* x y z z00 z00)) (* (- 648) (* y y z z00 z00)) (* (- 324) (* x z z z00 z00)) (* (- 324) (* y z z z00 z00)) (* (- 162) (* x y z z z00 z00)) ?x2643 (* (- 108) (* y y z z z00 z00)) (* (- 54) (* x z z z z00 z00)) (* (- 54) (* y z z z z00 z00)) (* (- 66) (* x y z z z z00)) (* 6 (* y y z z z z00)) (* 3888 (* x y x00)) (* 42 (* x z z z z z00)) (* 42 (* y z z z z z00)) (* 72 (* y z z z z00 x00)) (* (- 18) (* x z z z y00 x00)) (* (- 18) (* y z z z y00 x00)) (* 3 (* y z z z z z00 x00)) (* (- 324) (* y z z y00 x00)) (* (- 324) (* x z z y00 x00)) (* 648 (* y z z z00 x00)) (* 72 (* x z z z z00 x00)) (* (- 1944) (* y z y00 x00)) (* (- 1944) (* x z y00 x00)) (* 3 (* x z z z z z00 x00)) (* 3888 (* y z00 x00)) (* (- 3888) (* x y00 x00)) (* (- 3888) (* y y00 x00)) (* 2592 (* y z z00 x00)) (* (- 216) (* y y z00 y00)) (* 648 (* y z00 z00 x00)) (* (- 108) (* x y z z00 y00)) (* (- 108) (* y y z z00 y00)) (* 36 (* x z z z z x00)) ?x3371 (* 1944 (* x y z x00)) (* 18 (* y y z z z x00)) (* (- 18) (* x y z z z00 y00)) ?x3436 (* (- 18) (* y y z z z00 y00)) (* (- 1) (* y y z z z z00 y00)) (* (- 1) (* x y z z z z00 y00)) (* (- 1) (* y z z z z z00 y00)) (* (- 1) (* x z z z z z00 y00)) (* 3 (* x z z z z00 z00 x00)) (* (- 216) (* x y z00 y00)) ?x3670 (* 648 (* x z00 z00 y00)) (* 324 (* y z z00 z00 y00)) (* 648 (* y z00 z00 y00)) (* 3 (* y z z z z00 z00 y00)) (* 7776 (* x z z)) (* 7776 (* y z z)) (* 1296 (* x z z z)) (* 1296 (* y z z z)) ?x4021 (* 72 (* x z z z z)) (* 72 (* y z z z z)) ?x4047 ?x1228 (* 2 (* x y y z z z z00)) (* 2 (* y y y z z z z00)) (* (- 2) (* x y z z z z z00)) ?x4257 (* 2 (* x z z z z z z00)) (* 2 (* y z z z z z z00)) (* 432 (* x y y z00)) (* 216 (* x y y z z00)) (* 324 (* y z z00 z00 x00)) (* 36 (* x y y z z z00)) (* 648 (* x z00 z00 x00)) (* 18 (* x x z z z y00)) (* 324 (* x x z z y00)) (* 3888 (* x x y00)) (* (- 3) (* x x z z z z z00)) (* (- 3672) (* x y z z00)) (* (- 1080) (* y y z z00)) (* (- 756) (* x y z z z00)) (* (- 108) (* y y z z z00)) (* (- 72) (* x x z z z z00)) (* (- 3888) (* x x z00)) (* (- 6480) (* x y z00)) (* (- 2592) (* x x z z00)) (* (- 648) (* x x z z z00)) (* 1944 (* x x z y00)) ?x5258 (* (- 3) (* x x z z z z00 z00)) (* 54 (* y z z z00 z00 y00)) (* (- 648) (* x x z00 z00)) (* (- 324) (* x x z z00 z00)) ?x5212 ?x5301 (* (- 54) (* x x z z z00 z00)) ?x5327 ?x5234 (* 324 (* x z z00 z00 x00)) (* 54 (* y z z z00 z00 x00)) (* 648 (* y z z z x00)) (* 648 (* x z z z x00)) (* 3888 (* y z z x00)) (* 3888 (* x z z x00)) (* 7776 (* y z x00)) (* 7776 (* x z x00)) (* 54 (* x z z z00 z00 x00)) (* 96 (* x y z z z y00)) (* 324 (* x z z00 z00 y00)) ?x5731 (* 1188 (* y y z z y00)) ?x5772 (* 1512 (* x y z z y00)) ?x5791 ?x5811 (* 6696 (* y y z y00)) (* 8640 (* x y z y00)) (* (- 2) (* y z z z z y00 y00)) (* 16848 (* x y y00)) ?x5891 (* 78 (* y y z z z y00)) ?x5946 (* 72 (* x z z z z y00)) (* 72 (* y z z z z y00)) ?x5899 ?x6011 ?x6036 ?x6061 ?x6078 ?x6081 ?x6084 ?x6087 (* 3 (* y z z z z00 z00 x00)) (* (- 216) (* x z00 y00 y00)) (* 324 (* x y z z x00)) (* (- 216) (* y z00 y00 y00)) (* (- 108) (* x z z00 y00 y00)) (* (- 108) (* y z z00 y00 y00)) (* 18 (* x y z z z x00)) (* (- 18) (* x z z z00 y00 y00)) (* (- 18) (* y z z z00 y00 y00)) (* 1944 (* y y z x00)) (* 324 (* y y z z x00)) (* 648 (* x z z z00 x00)) (* (- 1) (* x z z z z00 y00 y00)) (* (- 1) (* y z z z z00 y00 y00)))))
 (let ((?x1304 (* 108 (* x00 x00))))
 (let ((?x1201 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1197 (* z00 z00 z00 y00)))
 (let ((?x1107 (* (- 36) (* z00 y00 x00))))
 (let ((?x992 (* 16 (* y00 y00 y00))))
 (let ((?x906 (* z00 z00 x00)))
 (let ((?x1157 (* (- 18) ?x906)))
 (let ((?x823 (* y y y)))
 (let ((?x862 (* (- 4) ?x823)))
 (let ((?x810 (* 108 ?x809)))
 (let ((?x778 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x720 (* z00 z00 y00)))
 (let ((?x1258 (* (- 10) ?x720)))
 (let ((?x695 (* z00 y00 y00)))
 (let ((?x730 (* (- 12) ?x695)))
 (let ((?x586 (* y00 y00)))
 (let ((?x1057 (* 96 ?x586)))
 (let ((?x805 (* 24 ?x560)))
 (let ((?x556 (* z00 x00)))
 (let ((?x474 (* 36 ?x556)))
 (let ((?x519 (* z00 y00)))
 (let ((?x884 (* 24 ?x519)))
 (let ((?x466 (* y00 x00)))
 (let ((?x457 (* 216 ?x466)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1324 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x457 (* (- 2) (* x z00 z00 z00)) (* 108 ?x483) ?x884 ?x474 ?x805 ?x1057 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x730 ?x1258 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x778 ?x810 ?x862 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1157 (* (- 216) (* x y00)) ?x992 (* (- 12) (* y y y00)) ?x1107 (* (- 216) (* x x00)) ?x1197 ?x1201 (* 36 (* x z00 y00)) ?x1304)))
 (let (($x1329 (= ?x1324 0)))
 (let ((?x966 (* y z y00)))
 (let ((?x907 (* 3 ?x906)))
 (let ((?x969 (* 3 ?x720)))
 (let ((?x702 (* (- 1) ?x695)))
 (let ((?x632 (* 18 (* z x00))))
 (let ((?x889 (* (- 36) ?x586)))
 (let ((?x794 (* (- 6) ?x519)))
 (let ((?x493 (* z y00)))
 (let ((?x494 (* 12 ?x493)))
 (let ((?x527 (* (- 18) ?x492)))
 (let ((?x467 (* (- 18) ?x466)))
 (let ((?x486 (* (- 12) ?x462)))
 (let ((?x135 (* y y z)))
 (let ((?x598 (* (- 108) x00)))
 (let ((?x541 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1025 (+ ?x64 ?x71 ?x541 ?x598 (* (- 3) (* y z00 z00)) ?x135 ?x486 ?x467 (* (- 18) ?x483) ?x527 ?x494 ?x794 ?x889 ?x632 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x702 ?x969 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x907 (* 18 (* x y00)) ?x966 (* (- 2) (* z y00 y00)))))
 (let (($x1032 (= ?x1025 0)))
 (let ((?x615 (* (- 24) ?x586)))
 (let ((?x563 (* 12 ?x560)))
 (let ((?x557 (* 18 ?x556)))
 (let ((?x635 (* 6 ?x519)))
 (let ((?x103 (* y z z00)))
 (let ((?x774 (+ ?x64 ?x71 ?x541 ?x598 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x486 ?x527 ?x494 ?x635 ?x557 ?x563 ?x615 ?x632 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x720 (* (- 18) (* x z00)))))
 (let (($x779 (= ?x774 0)))
 (let ((?x520 (* 18 ?x519)))
 (let ((?x378 (* z00 z00)))
 (let ((?x482 (* 6 ?x378)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x471 (* (- 1) ?x55)))
 (let ((?x614 (+ ?x64 ?x71 ?x541 ?x471 ?x598 ?x76 ?x482 (* (- 6) ?x462) (* (- 12) ?x493) ?x520 (* (- 6) (* z z00)))))
 (let (($x619 (= ?x614 0)))
 (let ((?x50 (* z z)))
 (let ((?x450 (* (- 1) ?x50)))
 (let ((?x449 (* (- 12) y00)))
 (let ((?x448 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x452 (= (+ ?x45 ?x46 ?x448 ?x449 ?x450 ?x378) 0)))
 (let (($x370 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x1538 (and $x370 $x452 $x619 $x779 $x1032 $x1329 (not (= ?x7754 0)))))
 (let ((?x5350 (* y00 y00 z00 ?x465 ?x465 ?x465 ?x216)))
 (let ((?x5759 (* y00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x1564 (+ (* 2 (* y00 y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 36 (* y00 y00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) (* y00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* 3 ?x1829) (* (- 108) (* ?x465 ?x465 ?x465 ?x216 ?x216)) (* 72 (* y00 ?x465 ?x465 ?x465 ?x216)) (* (- 12) (* y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 18 ?x3977) (* (- 1) ?x3670) (* 6 (* y00 z00 ?x465 ?x465 ?x465 ?x216)) (* 3 (* z00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 72) ?x3369) (* (- 18) ?x4046) (* 12 ?x4063) (* 6 ?x2108) (* (- 3) (* x00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* (- 6) (* z00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 18 ?x1832) (* 18 (* x00 y00 ?x465 ?x465 ?x465 ?x216)) (* (- 1) ?x609) (* 3 ?x530) (* (- 18) (* y00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 3) (* x00 z00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 36 ?x5821) ?x5792 (* (- 3) ?x5779) ?x5759 (* 12 ?x5743) (* (- 72) (* ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 2) (* z00 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5939 (* (- 3) ?x5965) (* (- 18) (* x00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 108 ?x5888) (* (- 18) ?x6010) (* 18 ?x6024) (* 18 ?x6049) (* 3 (* z00 ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 3 (* z00 z00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 36) (* y00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 72 ?x2621) (* 108 (* x00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) ?x5211) (* (- 18) ?x5295) (* (- 12) ?x5300) (* (- 1) (* y00 ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 3 ?x5318) (* (- 36) ?x5336) ?x5350 (* (- 108) ?x485) (* 18 ?x600) (* (- 2) ?x3433) (* (- 1) ?x2104) (* (- 6) ?x1187) (* 2 ?x573) (* (- 18) (* x00 ?x465 ?x465 ?x465 ?x465 ?x216)))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x3323 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x805 ?x810 ?x862 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x992 (* (- 6) (* z00 y y)) ?x1057 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1304 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3333 (= ?x3323 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x3920 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x3916 (* (- 108) x)))
 (let ((?x1323 (* x00 z)))
 (let ((?x3918 (* (- 18) ?x1323)))
 (let ((?x6315 (* 36 ?x586)))
 (let ((?x2325 (* z y)))
 (let ((?x3639 (* 12 ?x2325)))
 (let ((?x1560 (* z00 y)))
 (let ((?x1586 (* (- 6) ?x1560)))
 (let ((?x2393 (* y00 z00)))
 (let ((?x1295 (* 6 ?x2393)))
 (let ((?x2365 (* y00 z)))
 (let ((?x2376 (* (- 12) ?x2365)))
 (let ((?x2214 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x2367 (* z x)))
 (let ((?x6003 (* 18 ?x2367)))
 (let ((?x3321 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x6003 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x2214 ?x2376 ?x1295 (* (- 36) (* y00 y)) ?x1586 ?x3639 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x6315 ?x3918 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x3916 ?x67 (* (- 18) (* y00 x)) ?x3920 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3648 (* z00 z00 y)))
 (let ((?x1562 (* 6 ?x1560)))
 (let ((?x6326 (* (- 6) ?x2393)))
 (let ((?x3925 (* 24 ?x586)))
 (let ((?x2321 (* y00 z00 z)))
 (let ((?x3928 (+ ?x2321 ?x3639 ?x6003 (* (- 18) (* x00 z00)) (* (- 12) ?x560) ?x3925 ?x3918 ?x2376 ?x6326 (* (- 12) (* y00 y)) ?x3916 ?x67 ?x1562 ?x3920 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3648)))
 (let ((?x2366 (* 12 ?x2365)))
 (let ((?x3914 (* (- 6) ?x378)))
 (let ((?x2869 (+ (* 6 ?x2325) ?x55 ?x3914 ?x2366 (* (- 18) ?x2393) ?x3916 ?x67 (* 6 (* z00 z)) ?x3920 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x2250 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x378 ?x449 ?x45 ?x46 ?x448 ?x450) 0) (= ?x2869 0) (= ?x3928 0) (= ?x3321 0) $x3333 (not (= ?x1564 0)))))
 (rewrite (= $x2250 $x1538))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2375 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x465 (+ 6 z)))
 (let ((?x4507 (* x00 ?x465 ?x465 ?x465 ?x465 ?x216)))
 (let ((?x224 (+ y z)))
 (let ((?x1399 (+ 1 n)))
 (let ((?x573 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x4541 (* (- 2) ?x573)))
 (let ((?x1187 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1188 (* 6 ?x1187)))
 (let ((?x2104 (* y00 y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3433 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3436 (* 2 ?x3433)))
 (let ((?x600 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2013 (* (- 18) ?x600)))
 (let ((?x485 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1095 (* 108 ?x485)))
 (let ((?x5336 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5234 (* 36 ?x5336)))
 (let ((?x5318 (* x00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5327 (* (- 3) ?x5318)))
 (let ((?x5307 (* y00 ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5300 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5301 (* 12 ?x5300)))
 (let ((?x5295 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5212 (* 18 ?x5295)))
 (let ((?x5211 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5258 (* 3 ?x5211)))
 (let ((?x2621 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2643 (* (- 72) ?x2621)))
 (let ((?x6049 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x6061 (* (- 18) ?x6049)))
 (let ((?x6024 (* ?x465 ?x465 ?x465 ?x224 ?x216 ?x216)))
 (let ((?x6036 (* (- 18) ?x6024)))
 (let ((?x6010 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x6011 (* 18 ?x6010)))
 (let ((?x5888 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5891 (* (- 108) ?x5888)))
 (let ((?x5965 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5899 (* 3 ?x5965)))
 (let ((?x5939 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5946 (* (- 1) ?x5939)))
 (let ((?x5743 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5731 (* (- 12) ?x5743)))
 (let ((?x5779 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5772 (* 3 ?x5779)))
 (let ((?x5792 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5791 (* (- 1) ?x5792)))
 (let ((?x5821 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5811 (* (- 36) ?x5821)))
 (let ((?x530 (* x00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2133 (* (- 3) ?x530)))
 (let ((?x609 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1832 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x1857 (* (- 18) ?x1832)))
 (let ((?x2108 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2770 (* (- 6) ?x2108)))
 (let ((?x4063 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1228 (* (- 12) ?x4063)))
 (let ((?x4046 (* x00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x4047 (* 18 ?x4046)))
 (let ((?x3369 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3371 (* 72 ?x3369)))
 (let ((?x3670 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x3977 (* ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)))
 (let ((?x4021 (* (- 18) ?x3977)))
 (let ((?x1829 (* y00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3693 (* (- 3) ?x1829)))
 (let ((?x4492 (+ (* (- 2) (* y00 y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* (- 36) (* y00 y00 ?x465 ?x465 ?x465 ?x216)) (* 3 (* y00 z00 z00 ?x465 ?x465 ?x465 ?x216)) ?x3693 (* 108 (* ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 72) (* y00 ?x465 ?x465 ?x465 ?x216)) (* 12 (* y00 ?x465 ?x465 ?x465 ?x465 ?x216)) ?x4021 ?x3670 (* (- 6) (* y00 z00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) (* z00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x3371 ?x4047 ?x1228 ?x2770 (* 3 (* x00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* 6 (* z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x1857 (* (- 18) (* x00 y00 ?x465 ?x465 ?x465 ?x216)) ?x609 ?x2133 (* 18 (* y00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 3 (* x00 z00 ?x465 ?x465 ?x465 ?x465 ?x216)) ?x5811 ?x5791 ?x5772 (* (- 1) (* y00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x5731 (* 72 (* ?x465 ?x465 ?x465 ?x224 ?x216)) (* 2 (* z00 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5946 ?x5899 (* 18 (* x00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x5891 ?x6011 ?x6036 ?x6061 (* (- 3) (* z00 ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 3) (* z00 z00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 36 (* y00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x2643 (* (- 108) (* x00 ?x465 ?x465 ?x465 ?x216)) ?x5258 ?x5212 ?x5301 ?x5307 ?x5327 ?x5234 (* (- 1) (* y00 y00 z00 ?x465 ?x465 ?x465 ?x216)) ?x1095 ?x2013 ?x3436 ?x2104 ?x1188 ?x4541 (* 18 ?x4507))))
 (let ((?x1304 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x586 (* y00 y00)))
 (let ((?x1057 (* 96 ?x586)))
 (let ((?x992 (* 16 (* y00 y00 y00))))
 (let ((?x823 (* y y y)))
 (let ((?x862 (* (- 4) ?x823)))
 (let ((?x809 (* x x)))
 (let ((?x810 (* 108 ?x809)))
 (let ((?x560 (* y y)))
 (let ((?x805 (* 24 ?x560)))
 (let ((?x3323 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x805 ?x810 ?x862 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x992 (* (- 6) (* z00 y y)) ?x1057 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1304 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3333 (= ?x3323 0)))
 (let ((?x3822 (* y00 z y)))
 (let ((?x598 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x541 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x3712 (* z y y)))
 (let ((?x1323 (* x00 z)))
 (let ((?x1327 (* 18 ?x1323)))
 (let ((?x889 (* (- 36) ?x586)))
 (let ((?x2325 (* z y)))
 (let ((?x2358 (* (- 12) ?x2325)))
 (let ((?x1560 (* z00 y)))
 (let ((?x1562 (* 6 ?x1560)))
 (let ((?x2393 (* y00 z00)))
 (let ((?x6326 (* (- 6) ?x2393)))
 (let ((?x2365 (* y00 z)))
 (let ((?x2366 (* 12 ?x2365)))
 (let ((?x2367 (* z x)))
 (let ((?x2400 (* (- 18) ?x2367)))
 (let ((?x3879 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2400 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2366 ?x6326 (* 36 (* y00 y)) ?x1562 ?x2358 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x889 ?x1327 ?x3712 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x541 (* 18 (* y00 x)) ?x71 ?x598 ?x3822 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x3146 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1586 (* (- 6) ?x1560)))
 (let ((?x1295 (* 6 ?x2393)))
 (let ((?x615 (* (- 24) ?x586)))
 (let ((?x563 (* 12 ?x560)))
 (let ((?x3687 (+ (* (- 1) (* y00 z00 z)) ?x2358 ?x2400 (* 18 (* x00 z00)) ?x563 ?x615 ?x1327 ?x2366 ?x1295 (* 12 (* y00 y)) ?x64 ?x541 ?x1586 ?x71 ?x598 ?x99 (* (- 18) (* z00 x)) ?x3146 (* (- 1) (* z00 z00 y)))))
 (let ((?x812 (* z00 z00 z)))
 (let ((?x2376 (* (- 12) ?x2365)))
 (let ((?x378 (* z00 z00)))
 (let ((?x482 (* 6 ?x378)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x471 (* (- 1) ?x55)))
 (let ((?x841 (+ (* (- 6) ?x2325) ?x471 ?x482 ?x2376 (* 18 ?x2393) ?x64 ?x541 (* (- 6) (* z00 z)) ?x71 ?x598 ?x812)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2320 (* (- 1) ?x378)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2320 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x841 0) (= ?x3687 0) (= ?x3879 0) $x3333 (not (= ?x4492 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x5979 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x465 (+ 6 z)))
 (let ((?x4507 (* x00 ?x465 ?x465 ?x465 ?x465 ?x216)))
 (let ((?x224 (+ y z)))
 (let ((?x1399 (+ 1 n)))
 (let ((?x573 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2104 (* y00 y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3433 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5350 (* y00 y00 z00 ?x465 ?x465 ?x465 ?x216)))
 (let ((?x5318 (* x00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5211 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5965 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5939 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5759 (* y00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5779 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5792 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x530 (* x00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3670 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x1829 (* y00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1564 (+ (* 2 (* y00 y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 36 (* y00 y00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) (* y00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* 3 ?x1829) (* (- 108) (* ?x465 ?x465 ?x465 ?x216 ?x216)) (* 72 (* y00 ?x465 ?x465 ?x465 ?x216)) (* (- 12) (* y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 18 (* ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 1) ?x3670) (* 6 (* y00 z00 ?x465 ?x465 ?x465 ?x216)) (* 3 (* z00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 72) (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* (- 18) (* x00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 12 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 6 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* (- 3) (* x00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* (- 6) (* z00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 18 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)) (* 18 (* x00 y00 ?x465 ?x465 ?x465 ?x216)) (* (- 1) (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 3 ?x530) (* (- 18) (* y00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 3) (* x00 z00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* 36 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) ?x5792 (* (- 3) ?x5779) ?x5759 (* 12 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 72) (* ?x465 ?x465 ?x465 ?x224 ?x216)) (* (- 2) (* z00 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5939 (* (- 3) ?x5965) (* (- 18) (* x00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 108 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)) (* (- 18) (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)) (* 18 (* ?x465 ?x465 ?x465 ?x224 ?x216 ?x216)) (* 18 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* 3 (* z00 ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 3 (* z00 z00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 36) (* y00 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 72 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* 108 (* x00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) ?x5211) (* (- 18) (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216 ?x216)) (* (- 12) (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)) (* (- 1) (* y00 ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)) (* 3 ?x5318) (* (- 36) (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5350 (* (- 108) (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 18 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* (- 2) ?x3433) (* (- 1) ?x2104) (* (- 6) (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) (* 2 ?x573) (* (- 18) ?x4507))))
 (let ((?x1304 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x586 (* y00 y00)))
 (let ((?x1057 (* 96 ?x586)))
 (let ((?x992 (* 16 (* y00 y00 y00))))
 (let ((?x823 (* y y y)))
 (let ((?x862 (* (- 4) ?x823)))
 (let ((?x809 (* x x)))
 (let ((?x810 (* 108 ?x809)))
 (let ((?x560 (* y y)))
 (let ((?x805 (* 24 ?x560)))
 (let ((?x3323 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x805 ?x810 ?x862 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x992 (* (- 6) (* z00 y y)) ?x1057 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1304 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3333 (= ?x3323 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x3920 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x3916 (* (- 108) x)))
 (let ((?x1323 (* x00 z)))
 (let ((?x3918 (* (- 18) ?x1323)))
 (let ((?x6315 (* 36 ?x586)))
 (let ((?x2325 (* z y)))
 (let ((?x3639 (* 12 ?x2325)))
 (let ((?x1560 (* z00 y)))
 (let ((?x1586 (* (- 6) ?x1560)))
 (let ((?x2393 (* y00 z00)))
 (let ((?x1295 (* 6 ?x2393)))
 (let ((?x2365 (* y00 z)))
 (let ((?x2376 (* (- 12) ?x2365)))
 (let ((?x2214 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x2367 (* z x)))
 (let ((?x6003 (* 18 ?x2367)))
 (let ((?x3321 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x6003 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x2214 ?x2376 ?x1295 (* (- 36) (* y00 y)) ?x1586 ?x3639 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x6315 ?x3918 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x3916 ?x67 (* (- 18) (* y00 x)) ?x3920 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3648 (* z00 z00 y)))
 (let ((?x1562 (* 6 ?x1560)))
 (let ((?x6326 (* (- 6) ?x2393)))
 (let ((?x3925 (* 24 ?x586)))
 (let ((?x2321 (* y00 z00 z)))
 (let ((?x3928 (+ ?x2321 ?x3639 ?x6003 (* (- 18) (* x00 z00)) (* (- 12) ?x560) ?x3925 ?x3918 ?x2376 ?x6326 (* (- 12) (* y00 y)) ?x3916 ?x67 ?x1562 ?x3920 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3648)))
 (let ((?x2366 (* 12 ?x2365)))
 (let ((?x378 (* z00 z00)))
 (let ((?x3914 (* (- 6) ?x378)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2869 (+ (* 6 ?x2325) ?x55 ?x3914 ?x2366 (* (- 18) ?x2393) ?x3916 ?x67 (* 6 (* z00 z)) ?x3920 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x450 (* (- 1) ?x50)))
 (let ((?x448 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x449 (* (- 12) y00)))
 (let (($x2250 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x378 ?x449 ?x45 ?x46 ?x448 ?x450) 0) (= ?x2869 0) (= ?x3928 0) (= ?x3321 0) $x3333 (not (= ?x1564 0)))))
 (let ((?x4541 (* (- 2) ?x573)))
 (let ((?x1187 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1188 (* 6 ?x1187)))
 (let ((?x3436 (* 2 ?x3433)))
 (let ((?x600 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2013 (* (- 18) ?x600)))
 (let ((?x485 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1095 (* 108 ?x485)))
 (let ((?x5336 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5234 (* 36 ?x5336)))
 (let ((?x5327 (* (- 3) ?x5318)))
 (let ((?x5307 (* y00 ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5300 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5301 (* 12 ?x5300)))
 (let ((?x5295 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5212 (* 18 ?x5295)))
 (let ((?x5258 (* 3 ?x5211)))
 (let ((?x2621 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2643 (* (- 72) ?x2621)))
 (let ((?x6049 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x6061 (* (- 18) ?x6049)))
 (let ((?x6024 (* ?x465 ?x465 ?x465 ?x224 ?x216 ?x216)))
 (let ((?x6036 (* (- 18) ?x6024)))
 (let ((?x6010 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x6011 (* 18 ?x6010)))
 (let ((?x5888 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5891 (* (- 108) ?x5888)))
 (let ((?x5899 (* 3 ?x5965)))
 (let ((?x5946 (* (- 1) ?x5939)))
 (let ((?x5743 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5731 (* (- 12) ?x5743)))
 (let ((?x5772 (* 3 ?x5779)))
 (let ((?x5791 (* (- 1) ?x5792)))
 (let ((?x5821 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5811 (* (- 36) ?x5821)))
 (let ((?x2133 (* (- 3) ?x530)))
 (let ((?x609 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1832 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x1857 (* (- 18) ?x1832)))
 (let ((?x2108 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2770 (* (- 6) ?x2108)))
 (let ((?x4063 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1228 (* (- 12) ?x4063)))
 (let ((?x4046 (* x00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x4047 (* 18 ?x4046)))
 (let ((?x3369 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3371 (* 72 ?x3369)))
 (let ((?x3977 (* ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)))
 (let ((?x4021 (* (- 18) ?x3977)))
 (let ((?x3693 (* (- 3) ?x1829)))
 (let ((?x4492 (+ (* (- 2) (* y00 y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* (- 36) (* y00 y00 ?x465 ?x465 ?x465 ?x216)) (* 3 (* y00 z00 z00 ?x465 ?x465 ?x465 ?x216)) ?x3693 (* 108 (* ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 72) (* y00 ?x465 ?x465 ?x465 ?x216)) (* 12 (* y00 ?x465 ?x465 ?x465 ?x465 ?x216)) ?x4021 ?x3670 (* (- 6) (* y00 z00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) (* z00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x3371 ?x4047 ?x1228 ?x2770 (* 3 (* x00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* 6 (* z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x1857 (* (- 18) (* x00 y00 ?x465 ?x465 ?x465 ?x216)) ?x609 ?x2133 (* 18 (* y00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 3 (* x00 z00 ?x465 ?x465 ?x465 ?x465 ?x216)) ?x5811 ?x5791 ?x5772 (* (- 1) ?x5759) ?x5731 (* 72 (* ?x465 ?x465 ?x465 ?x224 ?x216)) (* 2 (* z00 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5946 ?x5899 (* 18 (* x00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x5891 ?x6011 ?x6036 ?x6061 (* (- 3) (* z00 ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 3) (* z00 z00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 36 (* y00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x2643 (* (- 108) (* x00 ?x465 ?x465 ?x465 ?x216)) ?x5258 ?x5212 ?x5301 ?x5307 ?x5327 ?x5234 (* (- 1) ?x5350) ?x1095 ?x2013 ?x3436 ?x2104 ?x1188 ?x4541 (* 18 ?x4507))))
 (let ((?x3822 (* y00 z y)))
 (let ((?x598 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x541 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x3712 (* z y y)))
 (let ((?x1327 (* 18 ?x1323)))
 (let ((?x889 (* (- 36) ?x586)))
 (let ((?x2358 (* (- 12) ?x2325)))
 (let ((?x2400 (* (- 18) ?x2367)))
 (let ((?x3879 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2400 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x2214) ?x2366 ?x6326 (* 36 (* y00 y)) ?x1562 ?x2358 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x889 ?x1327 ?x3712 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x541 (* 18 (* y00 x)) ?x71 ?x598 ?x3822 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x3648))))
 (let ((?x3146 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x615 (* (- 24) ?x586)))
 (let ((?x563 (* 12 ?x560)))
 (let ((?x3687 (+ (* (- 1) ?x2321) ?x2358 ?x2400 (* 18 (* x00 z00)) ?x563 ?x615 ?x1327 ?x2366 ?x1295 (* 12 (* y00 y)) ?x64 ?x541 ?x1586 ?x71 ?x598 ?x99 (* (- 18) (* z00 x)) ?x3146 (* (- 1) ?x3648))))
 (let ((?x812 (* z00 z00 z)))
 (let ((?x482 (* 6 ?x378)))
 (let ((?x471 (* (- 1) ?x55)))
 (let ((?x841 (+ (* (- 6) ?x2325) ?x471 ?x482 ?x2376 (* 18 ?x2393) ?x64 ?x541 (* (- 6) (* z00 z)) ?x71 ?x598 ?x812)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2320 (* (- 1) ?x378)))
 (let (($x1373 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2320 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x841 0) (= ?x3687 0) (= ?x3879 0) $x3333 (not (= ?x4492 0)))))
 (rewrite (= $x1373 $x2250)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x325 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x217 (+ z 6)))
 (let ((?x216 (+ x y)))
 (let ((?x224 (+ y z)))
 (let ((?x223 (+ n 1)))
 (let ((?x220 (- (* (- 2) ?x216 y00 y00 ?x217 ?x217 ?x217 ?x217) (* 36 ?x216 y00 y00 ?x217 ?x217 ?x217))))
 (let ((?x226 (- (+ ?x220 (* 3 ?x216 y00 ?x217 ?x217 ?x217 z00 z00)) (* 3 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x230 (- (+ ?x226 (* 108 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 72 ?x216 y00 ?x217 ?x217 ?x217))))
 (let ((?x234 (- (+ ?x230 (* 12 ?x216 y00 ?x217 ?x217 ?x217 ?x217)) (* 18 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x236 (+ ?x234 (* ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 y00 ?x217 ?x217 ?x217 z00))))
 (let ((?x240 (- (- ?x236 (* 6 ?x216 y00 ?x217 ?x217 ?x217 z00)) (* 3 ?x216 ?x224 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x243 (+ ?x240 (* 72 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217) (* 18 ?x223 ?x223 ?x216 x00 ?x224 ?x224 y00 ?x217 ?x217 ?x217))))
 (let ((?x246 (- ?x243 (* 12 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x247 (- ?x246 (* 6 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 z00))))
 (let ((?x250 (+ ?x247 (* 3 ?x216 x00 ?x217 ?x217 ?x217 z00 z00) (* 6 ?x216 ?x224 ?x217 ?x217 ?x217 z00))))
 (let ((?x253 (- ?x250 (* 18 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217))))
 (let ((?x256 (+ (- ?x253 (* 18 ?x216 x00 y00 ?x217 ?x217 ?x217)) (* ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x258 (- ?x256 (* 3 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x261 (+ ?x258 (* 18 ?x216 ?x216 y00 ?x217 ?x217 ?x217) (* 3 ?x216 x00 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x264 (- ?x261 (* 36 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 y00 ?x217 ?x217 ?x217))))
 (let ((?x265 (- ?x264 (* ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 y00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x267 (+ ?x265 (* 3 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x271 (- (- ?x267 (* ?x216 ?x224 y00 ?x217 ?x217 ?x217 z00)) (* 12 ?x216 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x274 (+ ?x271 (* 72 ?x216 ?x224 ?x217 ?x217 ?x217) (* 2 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 z00))))
 (let ((?x276 (- ?x274 (* ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x279 (+ ?x276 (* 3 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 z00 z00) (* 18 ?x216 x00 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x283 (+ (- ?x279 (* 108 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217)) (* 18 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x289 (- (- ?x283 (* 18 ?x216 ?x216 ?x224 ?x217 ?x217 ?x217)) (* 18 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x291 (- (- ?x289 (* 3 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00)) (* 3 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x296 (- (+ ?x291 (* 36 ?x216 ?x224 y00 ?x217 ?x217 ?x217)) (* 72 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x302 (+ (- ?x296 (* 108 ?x216 x00 ?x217 ?x217 ?x217)) (* 3 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 z00 z00) (* 18 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217) (* 12 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217) (* ?x216 ?x224 y00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x304 (- ?x302 (* 3 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x306 (+ ?x304 (* 36 ?x223 ?x223 ?x216 ?x224 ?x224 y00 y00 ?x217 ?x217 ?x217))))
 (let ((?x310 (+ (- ?x306 (* ?x216 y00 y00 ?x217 ?x217 ?x217 z00)) (* 108 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x312 (- ?x310 (* 18 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x316 (+ ?x312 (* 2 ?x223 ?x223 ?x216 ?x224 ?x224 y00 y00 ?x217 ?x217 ?x217 ?x217) (* ?x223 ?x223 ?x216 ?x224 ?x224 y00 y00 ?x217 ?x217 ?x217 z00) (* 6 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217 z00))))
 (let ((?x318 (- ?x316 (* 2 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 z00))))
 (let (($x323 (or (not (= (+ ?x318 (* 18 ?x216 x00 ?x217 ?x217 ?x217 ?x217)) 0)))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) $x323)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2319 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x465 (+ 6 z)))
 (let ((?x4507 (* x00 ?x465 ?x465 ?x465 ?x465 ?x216)))
 (let ((?x224 (+ y z)))
 (let ((?x1399 (+ 1 n)))
 (let ((?x573 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x4541 (* (- 2) ?x573)))
 (let ((?x1187 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1188 (* 6 ?x1187)))
 (let ((?x2104 (* y00 y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3433 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3436 (* 2 ?x3433)))
 (let ((?x600 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2013 (* (- 18) ?x600)))
 (let ((?x485 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1095 (* 108 ?x485)))
 (let ((?x5336 (* y00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5234 (* 36 ?x5336)))
 (let ((?x5318 (* x00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x5327 (* (- 3) ?x5318)))
 (let ((?x5307 (* y00 ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5300 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5301 (* 12 ?x5300)))
 (let ((?x5295 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5212 (* 18 ?x5295)))
 (let ((?x5211 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5258 (* 3 ?x5211)))
 (let ((?x2621 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2643 (* (- 72) ?x2621)))
 (let ((?x6049 (* x00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x6061 (* (- 18) ?x6049)))
 (let ((?x6024 (* ?x465 ?x465 ?x465 ?x224 ?x216 ?x216)))
 (let ((?x6036 (* (- 18) ?x6024)))
 (let ((?x6010 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x6011 (* 18 ?x6010)))
 (let ((?x5888 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5891 (* (- 108) ?x5888)))
 (let ((?x5965 (* z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5899 (* 3 ?x5965)))
 (let ((?x5939 (* ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5946 (* (- 1) ?x5939)))
 (let ((?x5743 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x216)))
 (let ((?x5731 (* (- 12) ?x5743)))
 (let ((?x5779 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x5772 (* 3 ?x5779)))
 (let ((?x5792 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5791 (* (- 1) ?x5792)))
 (let ((?x5821 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x5811 (* (- 36) ?x5821)))
 (let ((?x530 (* x00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x2133 (* (- 3) ?x530)))
 (let ((?x609 (* ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1832 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216 ?x216)))
 (let ((?x1857 (* (- 18) ?x1832)))
 (let ((?x2108 (* z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x2770 (* (- 6) ?x2108)))
 (let ((?x4063 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x1228 (* (- 12) ?x4063)))
 (let ((?x4046 (* x00 y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x4047 (* 18 ?x4046)))
 (let ((?x3369 (* y00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3371 (* 72 ?x3369)))
 (let ((?x3670 (* y00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x224 ?x216)))
 (let ((?x3977 (* ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)))
 (let ((?x4021 (* (- 18) ?x3977)))
 (let ((?x1829 (* y00 z00 z00 ?x1399 ?x1399 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)))
 (let ((?x3693 (* (- 3) ?x1829)))
 (let ((?x4492 (+ (* (- 2) (* y00 y00 ?x465 ?x465 ?x465 ?x465 ?x216)) (* (- 36) (* y00 y00 ?x465 ?x465 ?x465 ?x216)) (* 3 (* y00 z00 z00 ?x465 ?x465 ?x465 ?x216)) ?x3693 (* 108 (* ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 72) (* y00 ?x465 ?x465 ?x465 ?x216)) (* 12 (* y00 ?x465 ?x465 ?x465 ?x465 ?x216)) ?x4021 ?x3670 (* (- 6) (* y00 z00 ?x465 ?x465 ?x465 ?x216)) (* (- 3) (* z00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x3371 ?x4047 ?x1228 ?x2770 (* 3 (* x00 z00 z00 ?x465 ?x465 ?x465 ?x216)) (* 6 (* z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x1857 (* (- 18) (* x00 y00 ?x465 ?x465 ?x465 ?x216)) ?x609 ?x2133 (* 18 (* y00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 3 (* x00 z00 ?x465 ?x465 ?x465 ?x465 ?x216)) ?x5811 ?x5791 ?x5772 (* (- 1) (* y00 z00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x5731 (* 72 (* ?x465 ?x465 ?x465 ?x224 ?x216)) (* 2 (* z00 ?x465 ?x465 ?x465 ?x224 ?x224 ?x216)) ?x5946 ?x5899 (* 18 (* x00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x5891 ?x6011 ?x6036 ?x6061 (* (- 3) (* z00 ?x465 ?x465 ?x465 ?x465 ?x216 ?x216)) (* (- 3) (* z00 z00 ?x465 ?x465 ?x465 ?x216 ?x216)) (* 36 (* y00 ?x465 ?x465 ?x465 ?x224 ?x216)) ?x2643 (* (- 108) (* x00 ?x465 ?x465 ?x465 ?x216)) ?x5258 ?x5212 ?x5301 ?x5307 ?x5327 ?x5234 (* (- 1) (* y00 y00 z00 ?x465 ?x465 ?x465 ?x216)) ?x1095 ?x2013 ?x3436 ?x2104 ?x1188 ?x4541 (* 18 ?x4507))))
 (let ((?x1304 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x586 (* y00 y00)))
 (let ((?x1057 (* 96 ?x586)))
 (let ((?x992 (* 16 (* y00 y00 y00))))
 (let ((?x823 (* y y y)))
 (let ((?x862 (* (- 4) ?x823)))
 (let ((?x809 (* x x)))
 (let ((?x810 (* 108 ?x809)))
 (let ((?x560 (* y y)))
 (let ((?x805 (* 24 ?x560)))
 (let ((?x3323 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x805 ?x810 ?x862 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x992 (* (- 6) (* z00 y y)) ?x1057 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1304 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3333 (= ?x3323 0)))
 (let ((?x3822 (* y00 z y)))
 (let ((?x598 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x541 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x3712 (* z y y)))
 (let ((?x1323 (* x00 z)))
 (let ((?x1327 (* 18 ?x1323)))
 (let ((?x889 (* (- 36) ?x586)))
 (let ((?x2325 (* z y)))
 (let ((?x2358 (* (- 12) ?x2325)))
 (let ((?x1560 (* z00 y)))
 (let ((?x1562 (* 6 ?x1560)))
 (let ((?x2393 (* y00 z00)))
 (let ((?x6326 (* (- 6) ?x2393)))
 (let ((?x2365 (* y00 z)))
 (let ((?x2366 (* 12 ?x2365)))
 (let ((?x2367 (* z x)))
 (let ((?x2400 (* (- 18) ?x2367)))
 (let ((?x3879 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2400 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2366 ?x6326 (* 36 (* y00 y)) ?x1562 ?x2358 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x889 ?x1327 ?x3712 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x541 (* 18 (* y00 x)) ?x71 ?x598 ?x3822 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x3146 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1586 (* (- 6) ?x1560)))
 (let ((?x1295 (* 6 ?x2393)))
 (let ((?x615 (* (- 24) ?x586)))
 (let ((?x563 (* 12 ?x560)))
 (let ((?x3687 (+ (* (- 1) (* y00 z00 z)) ?x2358 ?x2400 (* 18 (* x00 z00)) ?x563 ?x615 ?x1327 ?x2366 ?x1295 (* 12 (* y00 y)) ?x64 ?x541 ?x1586 ?x71 ?x598 ?x99 (* (- 18) (* z00 x)) ?x3146 (* (- 1) (* z00 z00 y)))))
 (let ((?x812 (* z00 z00 z)))
 (let ((?x2376 (* (- 12) ?x2365)))
 (let ((?x378 (* z00 z00)))
 (let ((?x482 (* 6 ?x378)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x471 (* (- 1) ?x55)))
 (let ((?x841 (+ (* (- 6) ?x2325) ?x471 ?x482 ?x2376 (* 18 ?x2393) ?x64 ?x541 (* (- 6) (* z00 z)) ?x71 ?x598 ?x812)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2320 (* (- 1) ?x378)))
 (let (($x1373 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2320 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x841 0) (= ?x3687 0) (= ?x3879 0) $x3333 (not (= ?x4492 0)))))
 (let ((?x217 (+ z 6)))
 (let ((?x223 (+ n 1)))
 (let ((?x220 (- (* (- 2) ?x216 y00 y00 ?x217 ?x217 ?x217 ?x217) (* 36 ?x216 y00 y00 ?x217 ?x217 ?x217))))
 (let ((?x226 (- (+ ?x220 (* 3 ?x216 y00 ?x217 ?x217 ?x217 z00 z00)) (* 3 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x230 (- (+ ?x226 (* 108 ?x216 ?x216 ?x217 ?x217 ?x217)) (* 72 ?x216 y00 ?x217 ?x217 ?x217))))
 (let ((?x234 (- (+ ?x230 (* 12 ?x216 y00 ?x217 ?x217 ?x217 ?x217)) (* 18 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x236 (+ ?x234 (* ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 y00 ?x217 ?x217 ?x217 z00))))
 (let ((?x240 (- (- ?x236 (* 6 ?x216 y00 ?x217 ?x217 ?x217 z00)) (* 3 ?x216 ?x224 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x243 (+ ?x240 (* 72 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217) (* 18 ?x223 ?x223 ?x216 x00 ?x224 ?x224 y00 ?x217 ?x217 ?x217))))
 (let ((?x246 (- ?x243 (* 12 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x247 (- ?x246 (* 6 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 z00))))
 (let ((?x250 (+ ?x247 (* 3 ?x216 x00 ?x217 ?x217 ?x217 z00 z00) (* 6 ?x216 ?x224 ?x217 ?x217 ?x217 z00))))
 (let ((?x253 (- ?x250 (* 18 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217))))
 (let ((?x256 (+ (- ?x253 (* 18 ?x216 x00 y00 ?x217 ?x217 ?x217)) (* ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x258 (- ?x256 (* 3 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x261 (+ ?x258 (* 18 ?x216 ?x216 y00 ?x217 ?x217 ?x217) (* 3 ?x216 x00 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x264 (- ?x261 (* 36 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 y00 ?x217 ?x217 ?x217))))
 (let ((?x265 (- ?x264 (* ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 y00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x267 (+ ?x265 (* 3 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x271 (- (- ?x267 (* ?x216 ?x224 y00 ?x217 ?x217 ?x217 z00)) (* 12 ?x216 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x274 (+ ?x271 (* 72 ?x216 ?x224 ?x217 ?x217 ?x217) (* 2 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 z00))))
 (let ((?x276 (- ?x274 (* ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x279 (+ ?x276 (* 3 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 z00 z00) (* 18 ?x216 x00 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x283 (+ (- ?x279 (* 108 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217)) (* 18 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x289 (- (- ?x283 (* 18 ?x216 ?x216 ?x224 ?x217 ?x217 ?x217)) (* 18 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x291 (- (- ?x289 (* 3 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 z00)) (* 3 ?x216 ?x216 ?x217 ?x217 ?x217 z00 z00))))
 (let ((?x296 (- (+ ?x291 (* 36 ?x216 ?x224 y00 ?x217 ?x217 ?x217)) (* 72 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x302 (+ (- ?x296 (* 108 ?x216 x00 ?x217 ?x217 ?x217)) (* 3 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x217 ?x217 ?x217 z00 z00) (* 18 ?x223 ?x223 ?x216 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217) (* 12 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217) (* ?x216 ?x224 y00 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x304 (- ?x302 (* 3 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217 z00))))
 (let ((?x306 (+ ?x304 (* 36 ?x223 ?x223 ?x216 ?x224 ?x224 y00 y00 ?x217 ?x217 ?x217))))
 (let ((?x310 (+ (- ?x306 (* ?x216 y00 y00 ?x217 ?x217 ?x217 z00)) (* 108 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217))))
 (let ((?x312 (- ?x310 (* 18 ?x223 ?x223 ?x216 x00 ?x224 ?x224 ?x217 ?x217 ?x217 ?x217))))
 (let ((?x316 (+ ?x312 (* 2 ?x223 ?x223 ?x216 ?x224 ?x224 y00 y00 ?x217 ?x217 ?x217 ?x217) (* ?x223 ?x223 ?x216 ?x224 ?x224 y00 y00 ?x217 ?x217 ?x217 z00) (* 6 ?x223 ?x223 ?x216 ?x224 ?x224 y00 ?x217 ?x217 ?x217 z00))))
 (let ((?x318 (- ?x316 (* 2 ?x223 ?x223 ?x216 ?x224 ?x224 ?x224 ?x224 ?x217 ?x217 ?x217 z00))))
 (let (($x323 (or (not (= (+ ?x318 (* 18 ?x216 x00 ?x217 ?x217 ?x217 ?x217)) 0)))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x324 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) $x323)))
 (rewrite (= $x324 $x1373)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x326 (asserted $x325)))
 (let ((@x3909 (mp (mp @x326 (quant-intro (proof-bind ?x2319) (= $x325 $x2375)) $x2375) (rewrite (= $x2375 $x2375)) $x2375)))
 (let ((@x2532 (mp (mp @x3909 (quant-intro (proof-bind ?x5979) (= $x2375 $x2439)) $x2439) (quant-intro (proof-bind ?x7763) (= $x2439 $x7761)) $x7761)))
 (let ((@x4709 (mp (mp~ @x2532 (sk (~ $x7761 $x4850)) $x4850) (rewrite (= $x4850 $x7062)) $x7062)))
 (let ((@x6387 (and-elim @x4709 $x6396)))
 (let ((@x5824 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6396) $x5625)) @x6387 $x5625)))
 (let (($x6485 (>= ?x6395 0)))
 (let ((@x5790 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6396) $x6485)) @x6387 $x6485)))
 (let (($x6340 (<= ?x7056 0)))
 (let ((@x5663 (and-elim @x4709 $x7057)))
 (let ((@x3848 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7057) $x6340)) @x5663 $x6340)))
 (let (($x6568 (>= ?x7056 0)))
 (let ((@x2236 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7057) $x6568)) @x5663 $x6568)))
 (let (($x7102 (<= ?x7109 0)))
 (let ((@x6390 (and-elim @x4709 $x7112)))
 (let ((@x2603 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7112) $x7102)) @x6390 $x7102)))
 (let (($x6128 (>= ?x7109 0)))
 (let ((@x6394 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x7112) $x6128)) @x6390 $x6128)))
 (let (($x7032 (<= ?x4438 0)))
 (let ((@x7113 (and-elim @x4709 $x5709)))
 (let ((@x7036 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5709) $x7032)) @x7113 $x7032)))
 (let (($x7043 (>= ?x4438 0)))
 (let ((@x6572 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5709) $x7043)) @x7113 $x7043)))
 (let (($x5671 (<= ?x6257 0)))
 (let ((@x7116 (and-elim @x4709 $x6375)))
 (let ((@x2678 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6375) $x5671)) @x7116 $x5671)))
 (let (($x6509 (>= ?x6257 0)))
 (let ((@x2563 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x6375) $x6509)) @x7116 $x6509)))
 (let (($x6332 (<= ?x5686 0)))
 (let ((@x4710 (and-elim @x4709 $x4424)))
 (let ((@x5758 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4424) $x6332)) @x4710 $x6332)))
 (let (($x7065 (>= ?x5686 0)))
 (let ((@x859 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4424) $x7065)) @x4710 $x7065)))
 (let (($x7082 (not (<= ?x4280 0))))
 (let (($x7041 (>= ?x4280 0)))
 (let ((@x845 ((_ th-lemma arith) (hypothesis (not $x7041)) @x859 @x5758 @x2236 @x3848 @x6572 @x7036 @x859 @x5758 @x5790 @x5824 @x2236 @x3848 @x6394 @x2603 @x6394 @x2603 @x2236 @x3848 @x6394 @x2603 @x859 @x5758 @x2563 @x2678 @x5790 @x5824 @x5790 @x5824 @x6572 @x7036 @x6394 @x2603 @x2236 @x3848 @x5790 @x5824 false)))
 (let ((@x7090 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4281 $x7082 (not $x7041))) (and-elim @x4709 $x4707) (or $x7082 (not $x7041)))))
 ((_ th-lemma arith) (unit-resolution @x7090 (lemma @x845 $x7041) $x7082) @x859 @x5758 @x2236 @x3848 @x6572 @x7036 @x859 @x5758 @x5790 @x5824 @x2236 @x3848 @x6394 @x2603 @x6394 @x2603 @x2236 @x3848 @x6394 @x2603 @x859 @x5758 @x2563 @x2678 @x5790 @x5824 @x5790 @x5824 @x6572 @x7036 @x6394 @x2603 @x2236 @x3848 @x5790 @x5824 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        38
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             2042
 :arith-nonlinear-bounds    30
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      10
 :arith-tableau-max-columns 347
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                6.17
 :memory                    4.03
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                86468591
 :num-checks                1
 :propagations              14
 :rlimit-count              288257
 :time                      0.17
 :total-time                0.19)
