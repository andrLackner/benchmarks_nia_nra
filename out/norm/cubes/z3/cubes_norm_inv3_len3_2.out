unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x1169 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x504 (<= ?x1169 (- 6))))
 (let (($x1171 (= ?x1169 (- 6))))
 (let ((?x505 (+ m!1 k!2)))
 (let ((?x642 (+ 6 m!1)))
 (let ((?x645 (+ 1 n!0)))
 (let ((?x880 (* (- 3) c!3)))
 (let ((?x697 (+ (* 5 n!0) (* (- 216) m!1) ?x880 (* (- 218) (* n!0 k!2)) (* (- 18) (* n!0 m!1 m!1 k!2)) (* (- 2) (* ?x645 ?x645 ?x645 ?x645 ?x642 ?x642 ?x505)) (* (- 18) (* n!0 m!1 m!1 m!1)) (* (- 1) (* ?x645 ?x645 ?x642 ?x642 ?x642 ?x505 ?x505)) (* (- 108) (* n!0 m!1 k!2)) (* ?x645 ?x642 ?x642 ?x642 ?x505 ?x505) (* (- 2) (* ?x645 ?x645 ?x642 ?x642 ?x642 ?x505)) (* (- 1) (* m!1 m!1 m!1 m!1)) (* (- 18) (* m!1 m!1 m!1)) (* 3 (* ?x645 ?x645 ?x645 ?x642 ?x642 ?x505 (+ c!3 k!2))) (* (- 108) (* m!1 k!2)) (* 2 (* n!0 n!0)) (* (- 1) (* ?x645 ?x645 ?x645 ?x645 ?x642 ?x642 ?x505 ?x505)) (* ?x645 ?x645 ?x645 ?x642 ?x642 ?x505 ?x505) (* n!0 n!0 k!2) (* n!0 n!0 m!1) (* (- 215) (* n!0 m!1)) (* (- 1) (* n!0 m!1 m!1 m!1 m!1)) (* (- 219) k!2) (* (- 1) (* n!0 m!1 m!1 m!1 k!2)) (* (- 18) (* m!1 m!1 k!2)) (* (- 1) (* m!1 m!1 m!1 k!2)) (* (- 108) (* n!0 m!1 m!1)) (* 3 (* ?x645 ?x642 ?x642 ?x642 ?x505 (+ c!3 k!2))) (* (- 1) (* ?x645 ?x645 ?x645 ?x642 ?x642 ?x505)) (* (- 108) (* m!1 m!1)) (* (- 3) (* n!0 c!3)))))
 (let (($x471 (= ?x697 (- 3))))
 (let (($x474 (not $x471)))
 (let ((?x1035 (* (- 1) k!2)))
 (let ((?x204 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x1035)))
 (let (($x205 (= ?x204 (- 1))))
 (let ((?x365 (* n!0 k!2)))
 (let ((?x1037 (+ (* 2 n!0) ?x880 ?x365 ?x1035)))
 (let (($x1039 (= ?x1037 (- 1))))
 (let ((?x677 (* k!2 k!2)))
 (let ((?x337 (+ (* 9 n!0) (* (- 18) c!3) ?x677 (* (- 5) k!2) (* (- 9) (* n!0 c!3)))))
 (let (($x345 (= ?x337 (- 4))))
 (let (($x549 (and $x1171 $x345 $x1039 $x205 $x474)))
 (let ((?x590 (* m!1 m!1 m!1 m!1)))
 (let ((?x516 (* (- 3) (* ?x645 ?x645 ?x645 ?x642 ?x642 (+ k!2 m!1) (+ c!3 k!2)))))
 (let ((?x636 (* (- 1) (* ?x645 ?x645 ?x645 ?x642 ?x642 (+ k!2 m!1) (+ k!2 m!1)))))
 (let ((?x899 (* 3 c!3)))
 (let ((?x680 (+ ?x899 (* 219 k!2) (* 216 m!1) (* (- 5) n!0) (* 218 (* k!2 n!0)) (* 3 (* c!3 n!0)) (* (- 2) (* n!0 n!0)) (* k!2 m!1 m!1 m!1 n!0) (* m!1 m!1 m!1 m!1 n!0) (* 215 (* m!1 n!0)) (* (- 1) (* m!1 n!0 n!0)) (* (- 1) (* k!2 n!0 n!0)) ?x636 (* ?x645 ?x645 ?x645 ?x645 ?x642 ?x642 (+ k!2 m!1) (+ k!2 m!1)) (* 2 (* ?x645 ?x645 ?x642 ?x642 ?x642 (+ k!2 m!1))) (* ?x645 ?x645 ?x645 ?x642 ?x642 (+ k!2 m!1)) (* 2 (* ?x645 ?x645 ?x645 ?x645 ?x642 ?x642 (+ k!2 m!1))) (* (- 3) (* ?x645 ?x642 ?x642 ?x642 (+ k!2 m!1) (+ c!3 k!2))) (* ?x645 ?x645 ?x642 ?x642 ?x642 (+ k!2 m!1) (+ k!2 m!1)) ?x516 (* (- 1) (* ?x645 ?x642 ?x642 ?x642 (+ k!2 m!1) (+ k!2 m!1))) (* 108 (* k!2 m!1)) (* 108 (* m!1 m!1)) (* 18 (* k!2 m!1 m!1)) (* 18 (* m!1 m!1 m!1)) (* k!2 m!1 m!1 m!1) ?x590 (* 108 (* k!2 m!1 n!0)) (* 108 (* m!1 m!1 n!0)) (* 18 (* k!2 m!1 m!1 n!0)) (* 18 (* m!1 m!1 m!1 n!0)))))
 (let ((?x673 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x677) (* 9 (* c!3 n!0)))))
 (let (($x522 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x673 4) (= (+ ?x899 k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x680 3)))))
 (let (($x596 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x883 (* m m m n)))
 (let ((?x821 (* 18 ?x883)))
 (let ((?x879 (* k m m n)))
 (let ((?x152 (* 18 ?x879)))
 (let ((?x871 (* m m n)))
 (let ((?x178 (* 108 ?x871)))
 (let ((?x867 (* k m n)))
 (let ((?x424 (* 108 ?x867)))
 (let ((?x857 (* m m m m)))
 (let ((?x853 (* k m m m)))
 (let ((?x837 (* m m m)))
 (let ((?x820 (* 18 ?x837)))
 (let ((?x832 (* k m m)))
 (let ((?x188 (* 18 ?x832)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x357 (* (- 1) ?x794)))
 (let ((?x80 (+ c k)))
 (let ((?x786 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x703 (* (- 3) ?x786)))
 (let ((?x764 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x748 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x985 (* (- 3) ?x748)))
 (let ((?x717 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x534 (* 2 ?x717)))
 (let ((?x687 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x657 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x618 (* 2 ?x657)))
 (let ((?x604 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x581)))
 (let ((?x530 (* k n n)))
 (let ((?x668 (* (- 1) ?x530)))
 (let ((?x529 (* m n n)))
 (let ((?x669 (* (- 1) ?x529)))
 (let ((?x402 (* m n)))
 (let ((?x752 (* 215 ?x402)))
 (let ((?x390 (* m m m m n)))
 (let ((?x388 (* k m m m n)))
 (let ((?x280 (* n n)))
 (let ((?x1401 (* (- 2) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x580 (* 3 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x639 (* 218 ?x55)))
 (let ((?x753 (* (- 5) n)))
 (let ((?x1183 (* 216 m)))
 (let ((?x656 (* 219 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x658 (+ ?x53 ?x656 ?x1183 ?x753 ?x639 ?x580 ?x1401 ?x388 ?x390 ?x752 ?x669 ?x668 ?x613 ?x604 ?x618 ?x687 ?x534 ?x985 ?x764 ?x703 ?x357 (* 108 (* k m)) (* 108 (* m m)) ?x188 ?x820 ?x853 ?x857 ?x424 ?x178 ?x152 ?x821)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x658 3)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x771 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x883 (* m m m n)))
 (let ((?x821 (* 18 ?x883)))
 (let ((?x879 (* k m m n)))
 (let ((?x152 (* 18 ?x879)))
 (let ((?x871 (* m m n)))
 (let ((?x178 (* 108 ?x871)))
 (let ((?x867 (* k m n)))
 (let ((?x424 (* 108 ?x867)))
 (let ((?x857 (* m m m m)))
 (let ((?x853 (* k m m m)))
 (let ((?x837 (* m m m)))
 (let ((?x820 (* 18 ?x837)))
 (let ((?x832 (* k m m)))
 (let ((?x188 (* 18 ?x832)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x357 (* (- 1) ?x794)))
 (let ((?x80 (+ c k)))
 (let ((?x786 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x703 (* (- 3) ?x786)))
 (let ((?x764 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x748 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x985 (* (- 3) ?x748)))
 (let ((?x717 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x534 (* 2 ?x717)))
 (let ((?x687 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x657 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x618 (* 2 ?x657)))
 (let ((?x604 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x581)))
 (let ((?x530 (* k n n)))
 (let ((?x668 (* (- 1) ?x530)))
 (let ((?x529 (* m n n)))
 (let ((?x669 (* (- 1) ?x529)))
 (let ((?x402 (* m n)))
 (let ((?x752 (* 215 ?x402)))
 (let ((?x390 (* m m m m n)))
 (let ((?x388 (* k m m m n)))
 (let ((?x280 (* n n)))
 (let ((?x1401 (* (- 2) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x580 (* 3 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x639 (* 218 ?x55)))
 (let ((?x753 (* (- 5) n)))
 (let ((?x1183 (* 216 m)))
 (let ((?x656 (* 219 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x761 (+ ?x53 ?x656 ?x1183 ?x753 ?x639 ?x580 ?x1401 ?x388 ?x390 ?x752 ?x669 ?x668 ?x613 ?x604 ?x618 ?x687 ?x534 ?x985 ?x764 (* 6 (* m 6 k)) ?x703 ?x357 (* 72 (* k m)) (* 72 (* m m)) ?x188 ?x820 ?x853 ?x857 ?x424 ?x178 ?x152 ?x821 (* 6 (* m 6 m)))))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x761 3)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x284 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x883 (* m m m n)))
 (let ((?x821 (* 18 ?x883)))
 (let ((?x879 (* k m m n)))
 (let ((?x152 (* 18 ?x879)))
 (let ((?x871 (* m m n)))
 (let ((?x178 (* 108 ?x871)))
 (let ((?x867 (* k m n)))
 (let ((?x424 (* 108 ?x867)))
 (let ((?x857 (* m m m m)))
 (let ((?x853 (* k m m m)))
 (let ((?x837 (* m m m)))
 (let ((?x820 (* 18 ?x837)))
 (let ((?x832 (* k m m)))
 (let ((?x188 (* 18 ?x832)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x357 (* (- 1) ?x794)))
 (let ((?x80 (+ c k)))
 (let ((?x786 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x703 (* (- 3) ?x786)))
 (let ((?x764 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x748 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x985 (* (- 3) ?x748)))
 (let ((?x717 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x534 (* 2 ?x717)))
 (let ((?x687 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x657 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x618 (* 2 ?x657)))
 (let ((?x604 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x581)))
 (let ((?x530 (* k n n)))
 (let ((?x668 (* (- 1) ?x530)))
 (let ((?x529 (* m n n)))
 (let ((?x669 (* (- 1) ?x529)))
 (let ((?x402 (* m n)))
 (let ((?x752 (* 215 ?x402)))
 (let ((?x390 (* m m m m n)))
 (let ((?x388 (* k m m m n)))
 (let ((?x280 (* n n)))
 (let ((?x1401 (* (- 2) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x580 (* 3 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x639 (* 218 ?x55)))
 (let ((?x753 (* (- 5) n)))
 (let ((?x1183 (* 216 m)))
 (let ((?x656 (* 219 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x658 (+ ?x53 ?x656 ?x1183 ?x753 ?x639 ?x580 ?x1401 ?x388 ?x390 ?x752 ?x669 ?x668 ?x613 ?x604 ?x618 ?x687 ?x534 ?x985 ?x764 ?x703 ?x357 (* 108 (* k m)) (* 108 (* m m)) ?x188 ?x820 ?x853 ?x857 ?x424 ?x178 ?x152 ?x821)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x1003 (and $x135 $x219 $x271 $x309 (not (= ?x658 3)))))
 (let ((?x761 (+ ?x53 ?x656 ?x1183 ?x753 ?x639 ?x580 ?x1401 ?x388 ?x390 ?x752 ?x669 ?x668 ?x613 ?x604 ?x618 ?x687 ?x534 ?x985 ?x764 (* 6 (* m 6 k)) ?x703 ?x357 (* 72 (* k m)) (* 72 (* m m)) ?x188 ?x820 ?x853 ?x857 ?x424 ?x178 ?x152 ?x821 (* 6 (* m 6 m)))))
 (let (($x573 (and $x135 $x219 $x271 $x309 (not (= ?x761 3)))))
 (rewrite (= $x573 $x1003)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x387 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x357 (* (- 1) ?x794)))
 (let ((?x80 (+ c k)))
 (let ((?x786 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x703 (* (- 3) ?x786)))
 (let ((?x764 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x748 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x985 (* (- 3) ?x748)))
 (let ((?x717 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x534 (* 2 ?x717)))
 (let ((?x687 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x657 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x618 (* 2 ?x657)))
 (let ((?x604 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x581)))
 (let ((?x508 (* ?x322 ?x69)))
 (let ((?x515 (* ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x423 (+ ?x515 ?x508 (* (- 2) (* ?x322 ?x322)) ?x613 (* (- 1) (* ?x322 ?x322 ?x69)) ?x604 (* 3 (* ?x322 ?x80)) ?x618 ?x687 (* (- 1) n) ?x534 ?x985 ?x764 ?x703 ?x357)))
 (let (($x295 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x702 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x702 $x295 (not (= ?x423 1))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x781 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x883 (* m m m n)))
 (let ((?x821 (* 18 ?x883)))
 (let ((?x879 (* k m m n)))
 (let ((?x152 (* 18 ?x879)))
 (let ((?x871 (* m m n)))
 (let ((?x178 (* 108 ?x871)))
 (let ((?x867 (* k m n)))
 (let ((?x424 (* 108 ?x867)))
 (let ((?x857 (* m m m m)))
 (let ((?x853 (* k m m m)))
 (let ((?x837 (* m m m)))
 (let ((?x820 (* 18 ?x837)))
 (let ((?x832 (* k m m)))
 (let ((?x188 (* 18 ?x832)))
 (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x357 (* (- 1) ?x794)))
 (let ((?x80 (+ c k)))
 (let ((?x786 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x703 (* (- 3) ?x786)))
 (let ((?x764 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x748 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x985 (* (- 3) ?x748)))
 (let ((?x717 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x534 (* 2 ?x717)))
 (let ((?x687 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x657 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x618 (* 2 ?x657)))
 (let ((?x604 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x581)))
 (let ((?x530 (* k n n)))
 (let ((?x668 (* (- 1) ?x530)))
 (let ((?x529 (* m n n)))
 (let ((?x669 (* (- 1) ?x529)))
 (let ((?x402 (* m n)))
 (let ((?x752 (* 215 ?x402)))
 (let ((?x390 (* m m m m n)))
 (let ((?x388 (* k m m m n)))
 (let ((?x280 (* n n)))
 (let ((?x1401 (* (- 2) ?x280)))
 (let ((?x157 (* c n)))
 (let ((?x580 (* 3 ?x157)))
 (let ((?x55 (* k n)))
 (let ((?x639 (* 218 ?x55)))
 (let ((?x753 (* (- 5) n)))
 (let ((?x1183 (* 216 m)))
 (let ((?x656 (* 219 k)))
 (let ((?x53 (* 3 c)))
 (let ((?x761 (+ ?x53 ?x656 ?x1183 ?x753 ?x639 ?x580 ?x1401 ?x388 ?x390 ?x752 ?x669 ?x668 ?x613 ?x604 ?x618 ?x687 ?x534 ?x985 ?x764 (* 6 (* m 6 k)) ?x703 ?x357 (* 72 (* k m)) (* 72 (* m m)) ?x188 ?x820 ?x853 ?x857 ?x424 ?x178 ?x152 ?x821 (* 6 (* m 6 m)))))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) ?x280)) 1)))
 (let (($x271 (= (+ ?x53 k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x573 (and $x135 $x219 $x271 $x309 (not (= ?x761 3)))))
 (let ((?x508 (* ?x322 ?x69)))
 (let ((?x515 (* ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x423 (+ ?x515 ?x508 (* (- 2) (* ?x322 ?x322)) ?x613 (* (- 1) (* ?x322 ?x322 ?x69)) ?x604 (* 3 (* ?x322 ?x80)) ?x618 ?x687 (* (- 1) n) ?x534 ?x985 ?x764 ?x703 ?x357)))
 (let (($x295 (= (+ (* 3 ?x280) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x383 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) (= (+ ?x53 (* (- 1) (* n k)) k (* (- 2) n)) 1) $x295 (not (= ?x423 1)))))
 (rewrite (= $x383 $x573))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x822 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x542 (* ?x322 ?x322 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x810 (+ (* (- 1) (* ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 1) (* ?x322 ?x69)) (* 2 (* ?x322 ?x322)) ?x581 ?x542 (* (- 1) (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)) (* (- 3) (* ?x322 (+ c k))) (* (- 2) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)) n (* (- 2) (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)) (* 3 (* ?x322 ?x319 ?x319 ?x319 ?x69 (+ c k))) (* (- 1) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)) (* 3 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 (+ c k))) ?x794)))
 (let (($x295 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1209 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1055 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= ?x1055 (- 4)) $x1209 $x295 (not (= ?x810 (- 1))))))))))))))))) :qid k!34))
 ))
 (let ((?x1019 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x357 (* (- 1) ?x794)))
 (let ((?x80 (+ c k)))
 (let ((?x786 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x703 (* (- 3) ?x786)))
 (let ((?x764 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x748 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x80)))
 (let ((?x985 (* (- 3) ?x748)))
 (let ((?x717 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x534 (* 2 ?x717)))
 (let ((?x687 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)))
 (let ((?x657 (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x618 (* 2 ?x657)))
 (let ((?x604 (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x613 (* (- 1) ?x581)))
 (let ((?x508 (* ?x322 ?x69)))
 (let ((?x515 (* ?x322 ?x319 ?x319 ?x319 ?x69)))
 (let ((?x423 (+ ?x515 ?x508 (* (- 2) (* ?x322 ?x322)) ?x613 (* (- 1) (* ?x322 ?x322 ?x69)) ?x604 (* 3 (* ?x322 ?x80)) ?x618 ?x687 (* (- 1) n) ?x534 ?x985 ?x764 ?x703 ?x357)))
 (let (($x295 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x702 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x383 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x702 $x295 (not (= ?x423 1)))))
 (let ((?x542 (* ?x322 ?x322 ?x69)))
 (let ((?x810 (+ (* (- 1) ?x515) (* (- 1) ?x508) (* 2 (* ?x322 ?x322)) ?x581 ?x542 (* (- 1) ?x604) (* (- 3) (* ?x322 ?x80)) (* (- 2) ?x657) (* (- 1) ?x687) n (* (- 2) ?x717) (* 3 ?x748) (* (- 1) ?x764) (* 3 ?x786) ?x794)))
 (let (($x1209 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1055 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x512 (and $x135 (= ?x1055 (- 4)) $x1209 $x295 (not (= ?x810 (- 1))))))
 (rewrite (= $x512 $x383))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x78 (+ (- (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71) (* ?x69 ?x71)) (* 2 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x71 ?x71))))
 (let ((?x85 (- (- ?x78 (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)) (* 3 (+ c k) ?x71))))
 (let ((?x87 (- (- ?x85 (* 2 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x90 (- (+ ?x87 n 1) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x94 (- (+ ?x90 (* 3 (+ c k) ?x69 ?x70 ?x70 ?x70 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x97 (+ ?x94 (* 3 (+ c k) ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x826 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x322 (+ 1 n)))
 (let ((?x794 (* ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x542 (* ?x322 ?x322 ?x69)))
 (let ((?x581 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)))
 (let ((?x810 (+ (* (- 1) (* ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 1) (* ?x322 ?x69)) (* 2 (* ?x322 ?x322)) ?x581 ?x542 (* (- 1) (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 ?x69)) (* (- 3) (* ?x322 (+ c k))) (* (- 2) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69)) (* (- 1) (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)) n (* (- 2) (* ?x322 ?x322 ?x322 ?x322 ?x319 ?x319 ?x69)) (* 3 (* ?x322 ?x319 ?x319 ?x319 ?x69 (+ c k))) (* (- 1) (* ?x322 ?x322 ?x319 ?x319 ?x319 ?x69 ?x69)) (* 3 (* ?x322 ?x322 ?x322 ?x319 ?x319 ?x69 (+ c k))) ?x794)))
 (let (($x295 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1209 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1055 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x512 (and $x135 (= ?x1055 (- 4)) $x1209 $x295 (not (= ?x810 (- 1))))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x78 (+ (- (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71) (* ?x69 ?x71)) (* 2 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x71 ?x71))))
 (let ((?x85 (- (- ?x78 (* ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)) (* 3 (+ c k) ?x71))))
 (let ((?x87 (- (- ?x85 (* 2 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x90 (- (+ ?x87 n 1) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x94 (- (+ ?x90 (* 3 (+ c k) ?x69 ?x70 ?x70 ?x70 ?x71)) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x97 (+ ?x94 (* 3 (+ c k) ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x70 ?x70 ?x70 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x101 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))
 (rewrite (= $x101 $x512)))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x1020 (mp (mp @x103 (quant-intro (proof-bind ?x826) (= $x102 $x822)) $x822) (rewrite (= $x822 $x822)) $x822)))
 (let ((@x200 (mp (mp @x1020 (quant-intro (proof-bind ?x1019) (= $x822 $x387)) $x387) (quant-intro (proof-bind ?x781) (= $x387 $x771)) $x771)))
 (let ((@x1111 (mp~ (mp @x200 (quant-intro (proof-bind ?x284) (= $x771 $x596)) $x596) (sk (~ $x596 $x522)) $x522)))
 (let ((@x578 (mp @x1111 (rewrite (= $x522 $x549)) $x549)))
 (let ((@x609 (and-elim @x578 $x1171)))
 (let ((@x509 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1171) $x504)) @x609 $x504)))
 (let (($x541 (>= ?x1169 (- 6))))
 (let ((@x507 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1171) $x541)) @x609 $x541)))
 (let (($x1199 (<= ?x204 (- 1))))
 (let ((@x1059 (and-elim @x578 $x205)))
 (let ((@x361 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x205) $x1199)) @x1059 $x1199)))
 (let (($x1301 (>= ?x204 (- 1))))
 (let ((@x823 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x205) $x1301)) @x1059 $x1301)))
 (let (($x1227 (<= ?x1037 (- 1))))
 (let ((@x1051 (and-elim @x578 $x1039)))
 (let ((@x367 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1039) $x1227)) @x1051 $x1227)))
 (let (($x1016 (>= ?x1037 (- 1))))
 (let ((@x720 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1039) $x1016)) @x1051 $x1016)))
 (let (($x363 (<= ?x337 (- 4))))
 (let ((@x1049 (and-elim @x578 $x345)))
 (let ((@x506 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x345) $x363)) @x1049 $x363)))
 (let (($x1302 (>= ?x337 (- 4))))
 (let ((@x722 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x345) $x1302)) @x1049 $x1302)))
 (let (($x422 (not (<= ?x697 (- 3)))))
 (let (($x1015 (>= ?x697 (- 3))))
 (let ((@x694 ((_ th-lemma arith) (hypothesis (not $x1015)) @x507 @x509 @x823 @x361 @x720 @x367 @x823 @x361 @x823 @x361 @x722 @x506 @x823 @x361 @x507 @x509 @x507 @x509 @x823 @x361 @x720 @x367 @x507 @x509 @x722 @x506 @x823 @x361 false)))
 (let ((@x763 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x471 $x422 (not $x1015))) (and-elim @x578 $x474) (or $x422 (not $x1015)))))
 ((_ th-lemma arith) (unit-resolution @x763 (lemma @x694 $x1015) $x422) @x507 @x509 @x823 @x361 @x722 @x506 @x823 @x361 @x722 @x506 @x823 @x361 @x722 @x506 @x720 @x367 @x823 @x361 @x823 @x361 @x722 @x506 @x507 @x509 @x507 @x509 @x823 @x361 @x722 @x506 @x720 @x367 @x823 @x361 @x507 @x509 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        18
 :arith-assert-upper        35
 :arith-branch-var          2
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             324
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    19
 :arith-num-rows            10
 :arith-patches             5
 :arith-patches_succ        1
 :arith-pivots              10
 :arith-row-summations      22
 :arith-tableau-max-columns 64
 :arith-tableau-max-rows    10
 :conflicts                 3
 :decisions                 26
 :del-clause                16
 :final-checks              9
 :max-memory                3.86
 :memory                    3.27
 :mk-bool-var               47
 :mk-clause                 16
 :num-allocs                1504557
 :num-checks                1
 :propagations              11
 :rlimit-count              12053
 :time                      0.01
 :total-time                0.02)
