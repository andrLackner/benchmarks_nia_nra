unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x497 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 1) (* q!3 d!1 d!1)) (* (- 4) (* x!0 d!1)) (* (- 8) r!2) (* 2 (* q!3 d!1)) (* 4 (* r!2 d!1)))))
 (let (($x1095 (>= ?x497 0)))
 (let (($x507 (= ?x497 0)))
 (let ((?x1714 (* r!2 d!1)))
 (let ((?x185 (* (- 4) ?x1714)))
 (let ((?x1399 (* q!3 d!1)))
 (let ((?x184 (* (- 2) ?x1399)))
 (let ((?x1251 (* 8 r!2)))
 (let ((?x1002 (* x!0 d!1)))
 (let ((?x1324 (* 4 ?x1002)))
 (let ((?x985 (* q!3 d!1 d!1)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x976 (+ ?x164 ?x212 ?x196 ?x262 ?x300 ?x985 ?x1324 ?x1251 ?x184 ?x185)))
 (let ((?x1101 (* 2 (* q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1197 (* 16 ?x1714)))
 (let ((?x1706 (* q!3 q!3 r!2 d!1)))
 (let ((?x1698 (* q!3 r!2 d!1)))
 (let ((?x1265 (* (- 8) ?x1698)))
 (let ((?x1637 (* q!3 q!3 r!2 r!2)))
 (let ((?x1266 (* (- 10) ?x1637)))
 (let ((?x1420 (* 2 (* q!3 q!3 r!2))))
 (let ((?x438 (* 4 d!1)))
 (let ((?x1258 (* (- 1) ?x1399)))
 (let ((?x1270 (* x!0 r!2 r!2)))
 (let ((?x592 (* (- 16) ?x1270)))
 (let ((?x318 (* 32 r!2)))
 (let ((?x1117 (* r!2 r!2)))
 (let ((?x319 (* (- 32) ?x1117)))
 (let ((?x991 (* q!3 r!2)))
 (let ((?x829 (* (- 16) ?x991)))
 (let ((?x1022 (* (- 2) q!3)))
 (let ((?x917 (* q!3 q!3 r!2 r!2 d!1)))
 (let ((?x1682 (* (- 1) ?x917)))
 (let ((?x795 (* (- 1) (* x!0 q!3 q!3 r!2 r!2))))
 (let ((?x878 (* q!3 r!2 r!2 d!1)))
 (let ((?x1204 (* 8 ?x878)))
 (let ((?x798 (* q!3 r!2 r!2 r!2)))
 (let ((?x1262 (* (- 16) ?x798)))
 (let ((?x659 (* q!3 r!2 r!2)))
 (let ((?x1754 (* 32 ?x659)))
 (let ((?x651 (* q!3 q!3 q!3 r!2 r!2)))
 (let ((?x529 (* r!2 r!2 r!2)))
 (let ((?x1328 (* 32 ?x529)))
 (let ((?x449 (* r!2 r!2 d!1)))
 (let ((?x421 (* (- 16) ?x449)))
 (let ((?x168 (+ 8 ?x421 ?x1328 ?x651 ?x1754 ?x1262 ?x1204 ?x795 ?x1682 ?x1022 ?x829 ?x319 ?x318 ?x592 (* 8 (* x!0 q!3 r!2 r!2)) ?x1258 ?x438 ?x1420 ?x1266 ?x1265 ?x1706 ?x1197 ?x1101)))
 (let ((?x1446 (* ?x168 ?x976)))
 (let (($x1277 (= ?x1446 0)))
 (let (($x1445 (not $x1277)))
 (let ((?x669 (* 8 ?x1698)))
 (let ((?x1091 (* 10 ?x1637)))
 (let ((?x1205 (* (- 4) d!1)))
 (let ((?x1199 (* 32 ?x1117)))
 (let ((?x1203 (* 16 ?x449)))
 (let ((?x1107 (+ (- 8) ?x1203 ?x1328 ?x651 ?x1754 (* 16 ?x798) ?x1204 ?x795 ?x917 ?x1022 (* 16 ?x991) ?x1199 ?x318 ?x592 (* (- 8) (* x!0 q!3 r!2 r!2)) ?x1258 ?x1205 ?x1420 ?x1091 ?x669 ?x1706 ?x1197 ?x1101)))
 (let ((?x1263 (* ?x1107 ?x976)))
 (let (($x1690 (= ?x1263 0)))
 (let ((?x435 (* 64 ?x1714)))
 (let ((?x1704 (* (- 16) ?x1698)))
 (let ((?x652 (* (- 20) ?x1637)))
 (let ((?x1652 (* 8 d!1)))
 (let ((?x987 (* 128 r!2)))
 (let ((?x1171 (* (- 256) ?x1117)))
 (let ((?x586 (* (- 2) ?x917)))
 (let ((?x640 (* 128 ?x529)))
 (let ((?x1172 (* (- 128) ?x449)))
 (let ((?x1717 (+ 16 ?x1172 ?x640 ?x651 (* 128 ?x659) (* (- 32) ?x798) (* 32 ?x878) ?x795 ?x586 ?x1022 (* (- 32) ?x991) ?x1171 ?x987 (* (- 64) ?x1270) (* 16 (* x!0 q!3 r!2 r!2)) ?x1258 ?x1652 ?x1420 ?x652 ?x1704 ?x1706 ?x435 ?x1101)))
 (let ((?x274 (* ?x1717 ?x976)))
 (let (($x589 (= ?x274 0)))
 (let (($x295 (not $x589)))
 (let (($x1141 (or $x295 (not $x1690) (not (= (* (+ ?x651 ?x795 ?x1022 ?x1258 ?x1420 ?x1706 ?x1101) ?x976) 0)) $x1445)))
 (let (($x326 (and $x507 $x1141)))
 (let ((?x986 (+ ?x1251 ?x164 ?x212 ?x196 ?x262 ?x300 ?x184 ?x985 ?x185 ?x1324)))
 (let ((?x988 (* (- 1) (* q!3 q!3 r!2 r!2 x!0))))
 (let ((?x1525 (* (+ ?x1022 ?x988 ?x1101 ?x1258 (* 2 (* r!2 q!3 q!3)) ?x1706 ?x651) ?x986)))
 (let ((?x1519 (+ ?x1251 ?x164 ?x212 ?x196 ?x262 ?x300 (* (- 8) d!1) ?x184 ?x985 ?x185 (* 2 (* d!1 4)) ?x1324)))
 (let ((?x1198 (* 24 ?x659)))
 (let ((?x1413 (* r!2 r!2 x!0)))
 (let ((?x434 (* (- 16) ?x1413)))
 (let ((?x1511 (+ (- 8) ?x1022 ?x318 (* (- 4) (* q!3 r!2 r!2 x!0)) ?x988 (* 8 ?x991) ?x1199 ?x1203 ?x434 ?x1420 ?x1204 ?x917 ?x1101 ?x1205 (* 8 ?x798) ?x1258 ?x1197 (* 2 (* q!3 4 r!2)) ?x669 ?x1706 (* 4 (* q!3 2 r!2 r!2)) ?x1198 ?x1091 ?x651 (* 4 (* q!3 (* 2 r!2) r!2 r!2)) (* 4 (* q!3 (* (- 1) x!0) r!2 r!2)) ?x1328)))
 (let ((?x357 (+ ?x1251 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1652 (* (- 4) (* d!1 2)) ?x184 ?x985 ?x185 ?x1324)))
 (let ((?x1330 (+ 8 ?x1022 ?x318 (* 4 (* q!3 r!2 r!2 x!0)) ?x988 (* (- 8) ?x991) ?x319 ?x421 ?x434 ?x1420 (* 4 ?x878) ?x1682 ?x1101 (* (- 4) (* q!3 (- 2) r!2 r!2)) (* (- 4) (* q!3 (* (- 1) d!1) r!2 r!2)) ?x438 (* (- 8) ?x798) ?x1258 ?x1197 (* (- 4) (* q!3 2 r!2)) ?x1265 ?x1706 ?x1198 ?x1266 ?x651 (* (- 4) (* q!3 (* 2 r!2) r!2 r!2)) (* (- 4) (* q!3 (* (- 1) x!0) r!2 r!2)) ?x1328)))
 (let ((?x675 (+ ?x1251 ?x164 ?x212 ?x196 ?x262 ?x300 (* 16 d!1) (* (- 8) (* d!1 2)) ?x184 ?x985 ?x185 ?x1324)))
 (let ((?x673 (+ 16 ?x1022 ?x987 (* 8 (* q!3 r!2 r!2 x!0)) ?x988 ?x829 ?x1171 ?x1172 (* (- 64) ?x1413) ?x1420 (* 16 ?x878) ?x586 ?x1101 ?x1652 ?x1262 (* (- 8) (* q!3 (- 4) r!2 r!2)) (* (- 8) (* q!3 (* (- 2) d!1) r!2 r!2)) ?x1258 ?x435 (* (- 8) (* q!3 2 r!2)) ?x1704 ?x1706 (* 96 ?x659) ?x652 ?x651 (* (- 8) (* q!3 (* 2 r!2) r!2 r!2)) (* (- 8) (* q!3 (* (- 1) x!0) r!2 r!2)) ?x640)))
 (let (($x663 (or (not (= (* ?x673 ?x675) 0)) (not (= (* ?x1330 ?x357) 0)) (not (= (* ?x1511 ?x1519) 0)) (not (= ?x1525 0)))))
 (let (($x1528 (and (= ?x986 0) $x663)))
 (let (($x368 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1083 (* 4 (* x d))))
 (let ((?x1569 (* r d)))
 (let ((?x1606 (* (- 4) ?x1569)))
 (let ((?x1566 (* q d d)))
 (let ((?x1555 (* q d)))
 (let ((?x1568 (* (- 2) ?x1555)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1692 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1568 ?x1566 ?x1606 ?x1083)))
 (let ((?x1753 (* q q q r r)))
 (let ((?x1733 (* q q r d)))
 (let ((?x1723 (* (- 1) ?x1555)))
 (let ((?x720 (* 2 (* q q r r r))))
 (let ((?x236 (* (- 1) (* q q r r x))))
 (let ((?x1721 (* (- 2) q)))
 (let ((?x1301 (* (+ ?x1721 ?x236 ?x720 ?x1723 (* 2 (* r q q)) ?x1733 ?x1753) ?x1692)))
 (let ((?x1719 (* 2 (* d 4))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x1776 (* r r r)))
 (let ((?x1777 (* 32 ?x1776)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1758 (* q ?x161 r r)))
 (let ((?x1759 (* 4 ?x1758)))
 (let ((?x130 (* 2 r)))
 (let ((?x1756 (* q ?x130 r r)))
 (let ((?x1757 (* 4 ?x1756)))
 (let ((?x1751 (* q q r r)))
 (let ((?x1752 (* 10 ?x1751)))
 (let ((?x1749 (* q r r)))
 (let ((?x1750 (* 24 ?x1749)))
 (let ((?x1736 (* 4 (* q 2 r r))))
 (let ((?x1730 (* q r d)))
 (let ((?x1731 (* 8 ?x1730)))
 (let ((?x1727 (* 2 (* q 4 r))))
 (let ((?x1725 (* 16 ?x1569)))
 (let ((?x1388 (* q r r r)))
 (let ((?x999 (* 8 ?x1388)))
 (let ((?x1722 (* (- 4) d)))
 (let ((?x845 (* q q r r d)))
 (let ((?x823 (* q r r d)))
 (let ((?x828 (* 8 ?x823)))
 (let ((?x753 (* q q r)))
 (let ((?x1729 (* 2 ?x753)))
 (let ((?x723 (* r r x)))
 (let ((?x814 (* (- 16) ?x723)))
 (let ((?x722 (* r r d)))
 (let ((?x815 (* 16 ?x722)))
 (let ((?x377 (* r r)))
 (let ((?x1734 (* 32 ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x1728 (* 8 ?x273)))
 (let ((?x181 (* q r r x)))
 (let ((?x230 (* (- 4) ?x181)))
 (let ((?x1527 (* 32 r)))
 (let ((?x316 (+ (- 8) ?x1721 ?x1527 ?x230 ?x236 ?x1728 ?x1734 ?x815 ?x814 ?x1729 ?x828 ?x845 ?x720 ?x1722 ?x999 ?x1723 ?x1725 ?x1727 ?x1731 ?x1733 ?x1736 ?x1750 ?x1752 ?x1753 ?x1757 ?x1759 ?x1777)))
 (let ((?x348 (* ?x316 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1609 ?x1568 ?x1566 ?x1606 ?x1719 ?x1083))))
 (let ((?x432 (* 8 d)))
 (let ((?x1461 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x432 (* (- 4) (* d 2)) ?x1568 ?x1566 ?x1606 ?x1083)))
 (let ((?x1036 (* (- 4) ?x1758)))
 (let ((?x1037 (* (- 4) ?x1756)))
 (let ((?x907 (* (- 10) ?x1751)))
 (let ((?x897 (* (- 8) ?x1730)))
 (let ((?x1035 (* (- 8) ?x1388)))
 (let ((?x898 (* 4 d)))
 (let ((?x1115 (* (- 4) (* q (* (- 1) d) r r))))
 (let ((?x1058 (* (- 4) (* q (- 2) r r))))
 (let ((?x1030 (* (- 1) ?x845)))
 (let ((?x1033 (* 4 ?x823)))
 (let ((?x1034 (* (- 16) ?x722)))
 (let ((?x906 (* (- 32) ?x377)))
 (let ((?x580 (* (- 8) ?x273)))
 (let ((?x1029 (* 4 ?x181)))
 (let ((?x1312 (+ 8 ?x1721 ?x1527 ?x1029 ?x236 ?x580 ?x906 ?x1034 ?x814 ?x1729 ?x1033 ?x1030 ?x720 ?x1058 ?x1115 ?x898 ?x1035 ?x1723 ?x1725 (* (- 4) (* q 2 r)) ?x897 ?x1733 ?x1750 ?x907 ?x1753 ?x1037 ?x1036 ?x1777)))
 (let ((?x1406 (* 16 d)))
 (let ((?x425 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1406 (* (- 8) (* d 2)) ?x1568 ?x1566 ?x1606 ?x1083)))
 (let ((?x1415 (* 128 ?x1776)))
 (let ((?x1414 (* (- 8) ?x1758)))
 (let ((?x1392 (* (- 8) ?x1756)))
 (let ((?x1393 (* (- 20) ?x1751)))
 (let ((?x1394 (* 96 ?x1749)))
 (let ((?x1396 (* (- 16) ?x1730)))
 (let ((?x1398 (* 64 ?x1569)))
 (let ((?x1465 (* (- 8) (* q (* (- 2) d) r r))))
 (let ((?x1435 (* (- 8) (* q (- 4) r r))))
 (let ((?x1416 (* (- 16) ?x1388)))
 (let ((?x1427 (* (- 2) ?x845)))
 (let ((?x1426 (* 16 ?x823)))
 (let ((?x1428 (* (- 64) ?x723)))
 (let ((?x1417 (* (- 128) ?x722)))
 (let ((?x1395 (* (- 256) ?x377)))
 (let ((?x1397 (* (- 16) ?x273)))
 (let ((?x1429 (* 8 ?x181)))
 (let ((?x1402 (* 128 r)))
 (let ((?x847 (+ 16 ?x1721 ?x1402 ?x1429 ?x236 ?x1397 ?x1395 ?x1417 ?x1428 ?x1729 ?x1426 ?x1427 ?x720 ?x432 ?x1416 ?x1435 ?x1465 ?x1723 ?x1398 (* (- 8) (* q 2 r)) ?x1396 ?x1733 ?x1394 ?x1393 ?x1753 ?x1392 ?x1414 ?x1415)))
 (let (($x1335 (or (not (= (* ?x847 ?x425) 0)) (not (= (* ?x1312 ?x1461) 0)) (not (= ?x348 0)) (not (= ?x1301 0)))))
 (and (= ?x1692 0) $x1335)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1094 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x191 (* 4 (* d00 r00))))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x170 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x872 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1214 (* 4 (* ?x872 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1282 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1491 (+ (- 16) ?x409 ?x1282 ?x30 ?x1609 ?x164 ?x1214 ?x196 ?x212 (* (+ (- 4) q) ?x872 ?x872) (* (- 2) (* (+ (- 4) q) ?x872)) ?x262 (* (- 4) (* ?x872 ?x170)) ?x191)))
 (let ((?x1488 (+ (* (+ (- 4) q) (+ (- 4) q) ?x872 r) (* (+ (- 4) q) (+ (- 4) q) ?x170 r r) (* (- 1) (* (+ (- 4) q) ?x872)))))
 (let (($x1483 (not (= (* ?x1488 ?x1491) 0))))
 (let ((?x1219 (+ (- 32) ?x409 ?x1282 ?x30 (* (- 16) d) ?x164 ?x1214 ?x196 ?x212 (* (+ (- 8) q) ?x872 ?x872) (* (- 2) (* (+ (- 8) q) ?x872)) ?x262 (* (- 4) (* ?x872 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x191)))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x856 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x871 (+ (- 8) q)))
 (let ((?x876 (+ (* ?x871 ?x871 ?x872 r) (* ?x871 ?x871 ?x856 r r) (* (- 1) (* ?x871 ?x872)))))
 (let (($x668 (not (= (* ?x876 ?x1219) 0))))
 (let ((?x432 (* 8 d)))
 (let ((?x612 (+ 16 ?x409 ?x1282 ?x30 ?x432 ?x164 ?x1214 ?x196 ?x212 (* ?x872 ?x872 (+ 4 q)) (* (- 2) (* ?x872 (+ 4 q))) ?x262 (* (- 4) (* ?x872 (+ 2 ?x130 ?x161 q d))) ?x191)))
 (let ((?x1494 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1492 (+ 4 q)))
 (let ((?x477 (+ (* ?x872 ?x1492 ?x1492 r) (* ?x1492 ?x1492 ?x1494 r r) (* (- 1) (* ?x872 ?x1492)))))
 (let (($x615 (not (= (* ?x477 ?x612) 0))))
 (let ((?x884 (+ ?x409 ?x1282 ?x30 ?x164 ?x1214 ?x196 ?x212 (* ?x872 ?x872 q) (* (- 2) (* ?x872 q)) ?x262 (* (- 4) (* ?x872 (+ ?x130 ?x161 q))) ?x191)))
 (let ((?x896 (+ (* ?x872 r q q) (* (+ ?x130 ?x161 q) r r q q) (* (- 1) (* ?x872 q)))))
 (let (($x511 (not (= (* ?x896 ?x884) 0))))
 (let ((?x1083 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x840 (+ ?x193 ?x164 ?x1083 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x191)))
 (let (($x850 (= ?x840 0)))
 (and $x850 (or $x511 $x615 $x668 $x1483)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1233 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1083 (* 4 (* x d))))
 (let ((?x1569 (* r d)))
 (let ((?x1606 (* (- 4) ?x1569)))
 (let ((?x1566 (* q d d)))
 (let ((?x1555 (* q d)))
 (let ((?x1568 (* (- 2) ?x1555)))
 (let ((?x299 (* r00 d00)))
 (let ((?x300 (* 4 ?x299)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 r)))
 (let ((?x1692 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1568 ?x1566 ?x1606 ?x1083)))
 (let ((?x1753 (* q q q r r)))
 (let ((?x1733 (* q q r d)))
 (let ((?x1723 (* (- 1) ?x1555)))
 (let ((?x720 (* 2 (* q q r r r))))
 (let ((?x236 (* (- 1) (* q q r r x))))
 (let ((?x1721 (* (- 2) q)))
 (let ((?x1301 (* (+ ?x1721 ?x236 ?x720 ?x1723 (* 2 (* r q q)) ?x1733 ?x1753) ?x1692)))
 (let ((?x1719 (* 2 (* d 4))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x1776 (* r r r)))
 (let ((?x1777 (* 32 ?x1776)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x1758 (* q ?x161 r r)))
 (let ((?x1759 (* 4 ?x1758)))
 (let ((?x130 (* 2 r)))
 (let ((?x1756 (* q ?x130 r r)))
 (let ((?x1757 (* 4 ?x1756)))
 (let ((?x1751 (* q q r r)))
 (let ((?x1752 (* 10 ?x1751)))
 (let ((?x1749 (* q r r)))
 (let ((?x1750 (* 24 ?x1749)))
 (let ((?x1736 (* 4 (* q 2 r r))))
 (let ((?x1730 (* q r d)))
 (let ((?x1731 (* 8 ?x1730)))
 (let ((?x1727 (* 2 (* q 4 r))))
 (let ((?x1725 (* 16 ?x1569)))
 (let ((?x1388 (* q r r r)))
 (let ((?x999 (* 8 ?x1388)))
 (let ((?x1722 (* (- 4) d)))
 (let ((?x845 (* q q r r d)))
 (let ((?x823 (* q r r d)))
 (let ((?x828 (* 8 ?x823)))
 (let ((?x753 (* q q r)))
 (let ((?x1729 (* 2 ?x753)))
 (let ((?x723 (* r r x)))
 (let ((?x814 (* (- 16) ?x723)))
 (let ((?x722 (* r r d)))
 (let ((?x815 (* 16 ?x722)))
 (let ((?x377 (* r r)))
 (let ((?x1734 (* 32 ?x377)))
 (let ((?x273 (* q r)))
 (let ((?x1728 (* 8 ?x273)))
 (let ((?x181 (* q r r x)))
 (let ((?x230 (* (- 4) ?x181)))
 (let ((?x1527 (* 32 r)))
 (let ((?x316 (+ (- 8) ?x1721 ?x1527 ?x230 ?x236 ?x1728 ?x1734 ?x815 ?x814 ?x1729 ?x828 ?x845 ?x720 ?x1722 ?x999 ?x1723 ?x1725 ?x1727 ?x1731 ?x1733 ?x1736 ?x1750 ?x1752 ?x1753 ?x1757 ?x1759 ?x1777)))
 (let ((?x348 (* ?x316 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1609 ?x1568 ?x1566 ?x1606 ?x1719 ?x1083))))
 (let ((?x432 (* 8 d)))
 (let ((?x1461 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x432 (* (- 4) (* d 2)) ?x1568 ?x1566 ?x1606 ?x1083)))
 (let ((?x1036 (* (- 4) ?x1758)))
 (let ((?x1037 (* (- 4) ?x1756)))
 (let ((?x907 (* (- 10) ?x1751)))
 (let ((?x897 (* (- 8) ?x1730)))
 (let ((?x1035 (* (- 8) ?x1388)))
 (let ((?x898 (* 4 d)))
 (let ((?x1115 (* (- 4) (* q (* (- 1) d) r r))))
 (let ((?x1058 (* (- 4) (* q (- 2) r r))))
 (let ((?x1030 (* (- 1) ?x845)))
 (let ((?x1033 (* 4 ?x823)))
 (let ((?x1034 (* (- 16) ?x722)))
 (let ((?x906 (* (- 32) ?x377)))
 (let ((?x580 (* (- 8) ?x273)))
 (let ((?x1029 (* 4 ?x181)))
 (let ((?x1312 (+ 8 ?x1721 ?x1527 ?x1029 ?x236 ?x580 ?x906 ?x1034 ?x814 ?x1729 ?x1033 ?x1030 ?x720 ?x1058 ?x1115 ?x898 ?x1035 ?x1723 ?x1725 (* (- 4) (* q 2 r)) ?x897 ?x1733 ?x1750 ?x907 ?x1753 ?x1037 ?x1036 ?x1777)))
 (let ((?x1406 (* 16 d)))
 (let ((?x425 (+ ?x193 ?x164 ?x212 ?x196 ?x262 ?x300 ?x1406 (* (- 8) (* d 2)) ?x1568 ?x1566 ?x1606 ?x1083)))
 (let ((?x1415 (* 128 ?x1776)))
 (let ((?x1414 (* (- 8) ?x1758)))
 (let ((?x1392 (* (- 8) ?x1756)))
 (let ((?x1393 (* (- 20) ?x1751)))
 (let ((?x1394 (* 96 ?x1749)))
 (let ((?x1396 (* (- 16) ?x1730)))
 (let ((?x1398 (* 64 ?x1569)))
 (let ((?x1465 (* (- 8) (* q (* (- 2) d) r r))))
 (let ((?x1435 (* (- 8) (* q (- 4) r r))))
 (let ((?x1416 (* (- 16) ?x1388)))
 (let ((?x1427 (* (- 2) ?x845)))
 (let ((?x1426 (* 16 ?x823)))
 (let ((?x1428 (* (- 64) ?x723)))
 (let ((?x1417 (* (- 128) ?x722)))
 (let ((?x1395 (* (- 256) ?x377)))
 (let ((?x1397 (* (- 16) ?x273)))
 (let ((?x1429 (* 8 ?x181)))
 (let ((?x1402 (* 128 r)))
 (let ((?x847 (+ 16 ?x1721 ?x1402 ?x1429 ?x236 ?x1397 ?x1395 ?x1417 ?x1428 ?x1729 ?x1426 ?x1427 ?x720 ?x432 ?x1416 ?x1435 ?x1465 ?x1723 ?x1398 (* (- 8) (* q 2 r)) ?x1396 ?x1733 ?x1394 ?x1393 ?x1753 ?x1392 ?x1414 ?x1415)))
 (let (($x1335 (or (not (= (* ?x847 ?x425) 0)) (not (= (* ?x1312 ?x1461) 0)) (not (= ?x348 0)) (not (= ?x1301 0)))))
 (let (($x1344 (and (= ?x1692 0) $x1335)))
 (let ((?x191 (* 4 (* d00 r00))))
 (let ((?x1490 (* (- 4) (* (+ 2 d) (+ (- 2) ?x130 ?x161 q (* (- 1) d))))))
 (let ((?x1214 (* 4 (* (+ 2 d) r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1282 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1491 (+ (- 16) ?x409 ?x1282 ?x30 ?x1609 ?x164 ?x1214 ?x196 ?x212 (* (+ (- 4) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 4) q) (+ 2 d))) ?x262 ?x1490 ?x191)))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x170 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x499 (+ (- 4) q)))
 (let ((?x1488 (+ (* ?x499 ?x499 (+ 2 d) r) (* ?x499 ?x499 ?x170 r r) (* (- 1) (* ?x499 (+ 2 d))))))
 (let (($x1483 (not (= (* ?x1488 ?x1491) 0))))
 (let ((?x1218 (* (- 4) (* (+ 2 d) (+ (- 4) ?x130 ?x161 q (* (- 2) d))))))
 (let ((?x1219 (+ (- 32) ?x409 ?x1282 ?x30 (* (- 16) d) ?x164 ?x1214 ?x196 ?x212 (* (+ (- 8) q) (+ 2 d) (+ 2 d)) (* (- 2) (* (+ (- 8) q) (+ 2 d))) ?x262 ?x1218 ?x191)))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x856 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x871 (+ (- 8) q)))
 (let ((?x876 (+ (* ?x871 ?x871 (+ 2 d) r) (* ?x871 ?x871 ?x856 r r) (* (- 1) (* ?x871 (+ 2 d))))))
 (let (($x668 (not (= (* ?x876 ?x1219) 0))))
 (let ((?x612 (+ 16 ?x409 ?x1282 ?x30 ?x432 ?x164 ?x1214 ?x196 ?x212 (* (+ 2 d) (+ 2 d) (+ 4 q)) (* (- 2) (* (+ 2 d) (+ 4 q))) ?x262 (* (- 4) (* (+ 2 d) (+ 2 ?x130 ?x161 q d))) ?x191)))
 (let ((?x1494 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1492 (+ 4 q)))
 (let ((?x477 (+ (* (+ 2 d) ?x1492 ?x1492 r) (* ?x1492 ?x1492 ?x1494 r r) (* (- 1) (* (+ 2 d) ?x1492)))))
 (let (($x615 (not (= (* ?x477 ?x612) 0))))
 (let ((?x884 (+ ?x409 ?x1282 ?x30 ?x164 ?x1214 ?x196 ?x212 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x262 (* (- 4) (* (+ 2 d) (+ ?x130 ?x161 q))) ?x191)))
 (let ((?x896 (+ (* (+ 2 d) r q q) (* (+ ?x130 ?x161 q) r r q q) (* (- 1) (* (+ 2 d) q)))))
 (let (($x511 (not (= (* ?x896 ?x884) 0))))
 (let ((?x840 (+ ?x193 ?x164 ?x1083 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x191)))
 (let (($x850 (= ?x840 0)))
 (let (($x1646 (and $x850 (or $x511 $x615 $x668 $x1483))))
 (rewrite (= $x1646 $x1344)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x367 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x191 (* 4 (* d00 r00))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x1494 (+ 2 ?x130 ?x161 q d)))
 (let ((?x872 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1214 (* 4 (* ?x872 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x432 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1282 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x612 (+ 16 ?x409 ?x1282 ?x30 ?x432 ?x164 ?x1214 ?x196 ?x212 (* ?x872 ?x872 (+ 4 q)) (* (- 2) (* ?x872 (+ 4 q))) ?x262 (* (- 4) (* ?x872 ?x1494)) ?x191)))
 (let ((?x477 (+ (* ?x872 (+ 4 q) (+ 4 q) r) (* (+ 4 q) (+ 4 q) ?x1494 r r) (* (- 1) (* ?x872 (+ 4 q))))))
 (let (($x615 (not (= (* ?x477 ?x612) 0))))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x1491 (+ (- 16) ?x409 ?x1282 ?x30 ?x1609 ?x164 ?x1214 ?x196 ?x212 (* (+ (- 4) q) ?x872 ?x872) (* (- 2) (* (+ (- 4) q) ?x872)) ?x262 (* (- 4) (* ?x872 (+ (- 2) ?x130 ?x161 q (* (- 1) d)))) ?x191)))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x170 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x499 (+ (- 4) q)))
 (let ((?x1488 (+ (* ?x499 ?x499 ?x872 r) (* ?x499 ?x499 ?x170 r r) (* (- 1) (* ?x499 ?x872)))))
 (let (($x1483 (not (= (* ?x1488 ?x1491) 0))))
 (let ((?x884 (+ ?x409 ?x1282 ?x30 ?x164 ?x1214 ?x196 ?x212 (* ?x872 ?x872 q) (* (- 2) (* ?x872 q)) ?x262 (* (- 4) (* ?x872 (+ ?x130 ?x161 q))) ?x191)))
 (let ((?x896 (+ (* ?x872 r q q) (* (+ ?x130 ?x161 q) r r q q) (* (- 1) (* ?x872 q)))))
 (let (($x511 (not (= (* ?x896 ?x884) 0))))
 (let ((?x1219 (+ (- 32) ?x409 ?x1282 ?x30 (* (- 16) d) ?x164 ?x1214 ?x196 ?x212 (* (+ (- 8) q) ?x872 ?x872) (* (- 2) (* (+ (- 8) q) ?x872)) ?x262 (* (- 4) (* ?x872 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x191)))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x856 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x871 (+ (- 8) q)))
 (let ((?x876 (+ (* ?x871 ?x871 ?x872 r) (* ?x871 ?x871 ?x856 r r) (* (- 1) (* ?x871 ?x872)))))
 (let (($x668 (not (= (* ?x876 ?x1219) 0))))
 (let ((?x1083 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x840 (+ ?x193 ?x164 ?x1083 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x191)))
 (let (($x850 (= ?x840 0)))
 (and $x850 (or $x668 $x511 $x1483 $x615)))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1612 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x191 (* 4 (* d00 r00))))
 (let ((?x1104 (* (- 1) d)))
 (let ((?x161 (* (- 1) x)))
 (let ((?x130 (* 2 r)))
 (let ((?x170 (+ (- 2) ?x130 ?x161 q ?x1104)))
 (let ((?x872 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1214 (* 4 (* ?x872 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x1609 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x1282 (* (- 8) x)))
 (let ((?x409 (* 16 r)))
 (let ((?x1491 (+ (- 16) ?x409 ?x1282 ?x30 ?x1609 ?x164 ?x1214 ?x196 ?x212 (* (+ (- 4) q) ?x872 ?x872) (* (- 2) (* (+ (- 4) q) ?x872)) ?x262 (* (- 4) (* ?x872 ?x170)) ?x191)))
 (let ((?x1488 (+ (* (+ (- 4) q) (+ (- 4) q) ?x872 r) (* (+ (- 4) q) (+ (- 4) q) ?x170 r r) (* (- 1) (* (+ (- 4) q) ?x872)))))
 (let (($x1483 (not (= (* ?x1488 ?x1491) 0))))
 (let ((?x1219 (+ (- 32) ?x409 ?x1282 ?x30 (* (- 16) d) ?x164 ?x1214 ?x196 ?x212 (* (+ (- 8) q) ?x872 ?x872) (* (- 2) (* (+ (- 8) q) ?x872)) ?x262 (* (- 4) (* ?x872 (+ (- 4) ?x130 ?x161 q (* (- 2) d)))) ?x191)))
 (let ((?x1436 (* (- 2) d)))
 (let ((?x856 (+ (- 4) ?x130 ?x161 q ?x1436)))
 (let ((?x871 (+ (- 8) q)))
 (let ((?x876 (+ (* ?x871 ?x871 ?x872 r) (* ?x871 ?x871 ?x856 r r) (* (- 1) (* ?x871 ?x872)))))
 (let (($x668 (not (= (* ?x876 ?x1219) 0))))
 (let ((?x432 (* 8 d)))
 (let ((?x612 (+ 16 ?x409 ?x1282 ?x30 ?x432 ?x164 ?x1214 ?x196 ?x212 (* ?x872 ?x872 (+ 4 q)) (* (- 2) (* ?x872 (+ 4 q))) ?x262 (* (- 4) (* ?x872 (+ 2 ?x130 ?x161 q d))) ?x191)))
 (let ((?x1494 (+ 2 ?x130 ?x161 q d)))
 (let ((?x1492 (+ 4 q)))
 (let ((?x477 (+ (* ?x872 ?x1492 ?x1492 r) (* ?x1492 ?x1492 ?x1494 r r) (* (- 1) (* ?x872 ?x1492)))))
 (let (($x615 (not (= (* ?x477 ?x612) 0))))
 (let ((?x884 (+ ?x409 ?x1282 ?x30 ?x164 ?x1214 ?x196 ?x212 (* ?x872 ?x872 q) (* (- 2) (* ?x872 q)) ?x262 (* (- 4) (* ?x872 (+ ?x130 ?x161 q))) ?x191)))
 (let ((?x896 (+ (* ?x872 r q q) (* (+ ?x130 ?x161 q) r r q q) (* (- 1) (* ?x872 q)))))
 (let (($x511 (not (= (* ?x896 ?x884) 0))))
 (let ((?x1083 (* 4 (* x d))))
 (let ((?x193 (* 8 r)))
 (let ((?x840 (+ ?x193 ?x164 ?x1083 ?x196 ?x212 (* d d q) (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x191)))
 (let (($x850 (= ?x840 0)))
 (let (($x1646 (and $x850 (or $x511 $x615 $x668 $x1483))))
 (let (($x227 (and $x850 (or $x668 $x511 $x1483 $x615))))
 (rewrite (= $x227 $x1646)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x157 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x132 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x151 (- (+ (* (+ d 2) ?x138 ?x138 r) (* ?x138 ?x138 ?x132 r r)) (* (+ d 2) ?x138))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x140 (+ (- (- (+ (- (* 8 ?x132) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x138))))
 (let ((?x146 (+ (- (+ (- ?x140 (* 2 ?x62 ?x138)) ?x49) (* 4 ?x62 ?x132)) ?x53)))
 (let ((?x107 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (- (+ (* ?x62 ?x113 ?x113 r) (* ?x113 ?x113 ?x107 r r)) (* ?x62 ?x113))))
 (let ((?x115 (+ (- (- (+ (- (* 8 ?x107) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x113))))
 (let ((?x121 (+ (- (+ (- ?x115 (* 2 ?x62 ?x113)) ?x49) (* 4 ?x62 ?x107)) ?x53)))
 (let ((?x100 (+ (* ?x62 q q r) (* q q (+ (- (* 2 r) x) q) r r))))
 (let ((?x87 (+ (- (* 8 (+ (- (* 2 r) x) q)) (* 8 r00)) ?x63)))
 (let ((?x93 (- (+ (- (- ?x87 ?x39) ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q))))
 (let ((?x97 (+ (- (+ ?x93 ?x49) (* 4 ?x62 (+ (- (* 2 r) x) q))) ?x53)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (- (+ (* ?x62 ?x67 ?x67 r) (* ?x67 ?x67 ?x59 r r)) (* ?x62 ?x67))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x155 (or (not (= (* ?x75 ?x80) 0)) (not (= (* ?x97 (- ?x100 (* ?x62 q))) 0)) (not (= (* ?x121 ?x126) 0)) (not (= (* ?x146 ?x151) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x155)))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1774 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x191 (* 4 (* d00 r00))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1724 (+ 2 ?x57 ?x161 q d)))
 (let ((?x1306 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1316 (* 4 (* ?x1306 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 d)))
 (let ((?x727 (* 8 q)))
 (let ((?x1282 (* (- 8) x)))
 (let ((?x1279 (* 16 r)))
 (let ((?x543 (+ 16 ?x1279 ?x1282 ?x727 ?x193 ?x164 ?x1316 ?x196 ?x212 (* ?x1306 ?x1306 (+ 4 q)) (* (- 2) (* ?x1306 (+ 4 q))) ?x262 (* (- 4) (* ?x1306 ?x1724)) ?x191)))
 (let ((?x562 (+ (* ?x1306 (+ 4 q) (+ 4 q) r) (* (+ 4 q) (+ 4 q) ?x1724 r r) (* (- 1) (* ?x1306 (+ 4 q))))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x895 (+ (- 16) ?x1279 ?x1282 ?x727 ?x454 ?x164 ?x1316 ?x196 ?x212 (* (+ (- 4) q) ?x1306 ?x1306) (* (- 2) (* (+ (- 4) q) ?x1306)) ?x262 (* (- 4) (* ?x1306 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x191)))
 (let ((?x953 (* (- 1) d)))
 (let ((?x1663 (+ (- 2) ?x57 ?x161 q ?x953)))
 (let ((?x924 (+ (- 4) q)))
 (let ((?x1056 (+ (* ?x924 ?x924 ?x1306 r) (* ?x924 ?x924 ?x1663 r r) (* (- 1) (* ?x924 ?x1306)))))
 (let ((?x1078 (+ ?x1279 ?x1282 ?x727 ?x164 ?x1316 ?x196 ?x212 (* ?x1306 ?x1306 q) (* (- 2) (* ?x1306 q)) ?x262 (* (- 4) (* ?x1306 (+ ?x57 ?x161 q))) ?x191)))
 (let ((?x1084 (+ (* ?x1306 r q q) (* (+ ?x57 ?x161 q) r r q q) (* (- 1) (* ?x1306 q)))))
 (let ((?x478 (+ (- 32) ?x1279 ?x1282 ?x727 (* (- 16) d) ?x164 ?x1316 ?x196 ?x212 (* (+ (- 8) q) ?x1306 ?x1306) (* (- 2) (* (+ (- 8) q) ?x1306)) ?x262 (* (- 4) (* ?x1306 (+ (- 4) ?x57 ?x161 q (* (- 2) d)))) ?x191)))
 (let ((?x1235 (* (- 2) d)))
 (let ((?x1077 (+ (- 4) ?x57 ?x161 q ?x1235)))
 (let ((?x848 (+ (- 8) q)))
 (let ((?x642 (+ (* ?x848 ?x848 ?x1306 r) (* ?x848 ?x848 ?x1077 r r) (* (- 1) (* ?x848 ?x1306)))))
 (let (($x331 (or (not (= (* ?x642 ?x478) 0)) (not (= (* ?x1084 ?x1078) 0)) (not (= (* ?x1056 ?x895) 0)) (not (= (* ?x562 ?x543) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x321 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x191)))
 (and (= ?x321 0) $x331))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1271 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x191 (* 4 (* d00 r00))))
 (let ((?x161 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1724 (+ 2 ?x57 ?x161 q d)))
 (let ((?x1306 (+ 2 d)))
 (let ((?x261 (* d00 q00)))
 (let ((?x262 (* 2 ?x261)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x212 (* (- 1) ?x41)))
 (let ((?x182 (* d00 x00)))
 (let ((?x196 (* (- 4) ?x182)))
 (let ((?x1316 (* 4 (* ?x1306 r))))
 (let ((?x164 (* (- 8) r00)))
 (let ((?x193 (* 8 d)))
 (let ((?x727 (* 8 q)))
 (let ((?x1282 (* (- 8) x)))
 (let ((?x1279 (* 16 r)))
 (let ((?x543 (+ 16 ?x1279 ?x1282 ?x727 ?x193 ?x164 ?x1316 ?x196 ?x212 (* ?x1306 ?x1306 (+ 4 q)) (* (- 2) (* ?x1306 (+ 4 q))) ?x262 (* (- 4) (* ?x1306 ?x1724)) ?x191)))
 (let ((?x562 (+ (* ?x1306 (+ 4 q) (+ 4 q) r) (* (+ 4 q) (+ 4 q) ?x1724 r r) (* (- 1) (* ?x1306 (+ 4 q))))))
 (let ((?x454 (* (- 8) d)))
 (let ((?x895 (+ (- 16) ?x1279 ?x1282 ?x727 ?x454 ?x164 ?x1316 ?x196 ?x212 (* (+ (- 4) q) ?x1306 ?x1306) (* (- 2) (* (+ (- 4) q) ?x1306)) ?x262 (* (- 4) (* ?x1306 (+ (- 2) ?x57 ?x161 q (* (- 1) d)))) ?x191)))
 (let ((?x953 (* (- 1) d)))
 (let ((?x1663 (+ (- 2) ?x57 ?x161 q ?x953)))
 (let ((?x924 (+ (- 4) q)))
 (let ((?x1056 (+ (* ?x924 ?x924 ?x1306 r) (* ?x924 ?x924 ?x1663 r r) (* (- 1) (* ?x924 ?x1306)))))
 (let ((?x1078 (+ ?x1279 ?x1282 ?x727 ?x164 ?x1316 ?x196 ?x212 (* ?x1306 ?x1306 q) (* (- 2) (* ?x1306 q)) ?x262 (* (- 4) (* ?x1306 (+ ?x57 ?x161 q))) ?x191)))
 (let ((?x1084 (+ (* ?x1306 r q q) (* (+ ?x57 ?x161 q) r r q q) (* (- 1) (* ?x1306 q)))))
 (let ((?x478 (+ (- 32) ?x1279 ?x1282 ?x727 (* (- 16) d) ?x164 ?x1316 ?x196 ?x212 (* (+ (- 8) q) ?x1306 ?x1306) (* (- 2) (* (+ (- 8) q) ?x1306)) ?x262 (* (- 4) (* ?x1306 (+ (- 4) ?x57 ?x161 q (* (- 2) d)))) ?x191)))
 (let ((?x1235 (* (- 2) d)))
 (let ((?x1077 (+ (- 4) ?x57 ?x161 q ?x1235)))
 (let ((?x848 (+ (- 8) q)))
 (let ((?x642 (+ (* ?x848 ?x848 ?x1306 r) (* ?x848 ?x848 ?x1077 r r) (* (- 1) (* ?x848 ?x1306)))))
 (let (($x331 (or (not (= (* ?x642 ?x478) 0)) (not (= (* ?x1084 ?x1078) 0)) (not (= (* ?x1056 ?x895) 0)) (not (= (* ?x562 ?x543) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x321 (+ ?x30 ?x164 (* 4 (* x d)) ?x196 ?x212 ?x44 (* (- 2) (* d q)) ?x262 (* (- 4) (* d r)) ?x191)))
 (let (($x858 (and (= ?x321 0) $x331)))
 (let ((?x132 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x138 (- q 8)))
 (let ((?x151 (- (+ (* (+ d 2) ?x138 ?x138 r) (* ?x138 ?x138 ?x132 r r)) (* (+ d 2) ?x138))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x62 (+ d 2)))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x140 (+ (- (- (+ (- (* 8 ?x132) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x138))))
 (let ((?x146 (+ (- (+ (- ?x140 (* 2 ?x62 ?x138)) ?x49) (* 4 ?x62 ?x132)) ?x53)))
 (let ((?x107 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x113 (- q 4)))
 (let ((?x126 (- (+ (* ?x62 ?x113 ?x113 r) (* ?x113 ?x113 ?x107 r r)) (* ?x62 ?x113))))
 (let ((?x115 (+ (- (- (+ (- (* 8 ?x107) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x113))))
 (let ((?x121 (+ (- (+ (- ?x115 (* 2 ?x62 ?x113)) ?x49) (* 4 ?x62 ?x107)) ?x53)))
 (let ((?x100 (+ (* ?x62 q q r) (* q q (+ (- ?x57 x) q) r r))))
 (let ((?x88 (- (+ (- (* 8 (+ (- ?x57 x) q)) (* 8 r00)) ?x63) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x103 (* (+ (- ?x94 (* 4 ?x62 (+ (- ?x57 x) q))) ?x53) (- ?x100 (* ?x62 q)))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (- (+ (* ?x62 ?x67 ?x67 r) (* ?x67 ?x67 ?x59 r r)) (* ?x62 ?x67))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x155 (or (not (= (* ?x75 ?x80) 0)) (not (= ?x103 0)) (not (= (* ?x121 ?x126) 0)) (not (= (* ?x146 ?x151) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x156 (and (= ?x54 0) $x155)))
 (rewrite (= $x156 $x858)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x484 (trans (quant-intro (proof-bind ?x1271) (= $x157 $x1774)) (elim-unused (= $x1774 $x367)) (= $x157 $x367))))
 (let ((@x27 (asserted $x157)))
 (let ((@x237 (mp (mp @x27 @x484 $x367) (quant-intro (proof-bind ?x1612) (= $x367 $x1094)) $x1094)))
 (let ((@x1320 (mp (mp @x237 (rewrite (= $x1094 $x1094)) $x1094) (quant-intro (proof-bind ?x1233) (= $x1094 $x368)) $x368)))
 (let ((@x1184 (mp (mp~ @x1320 (sk (~ $x368 $x1528)) $x1528) (rewrite (= $x1528 $x326)) $x326)))
 (let ((@x485 (and-elim @x1184 $x507)))
 (let ((@x1367 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x507) $x1095)) @x485 $x1095)))
 (let (($x1069 (<= ?x497 0)))
 (let ((@x1333 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x507) $x1069)) @x485 $x1069)))
 (let (($x1347 (not (<= ?x1446 0))))
 (let (($x1764 (<= ?x274 0)))
 (let (($x599 (>= ?x274 0)))
 (let ((@x1252 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x589 (not $x1764) (not $x599))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x599)) @x1333 @x1367 false) $x599) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1764)) @x1333 @x1367 false) $x1764) $x589)))
 (let ((?x366 (* (+ ?x651 ?x795 ?x1022 ?x1258 ?x1420 ?x1706 ?x1101) ?x976)))
 (let (($x1628 (= ?x366 0)))
 (let (($x1143 (>= ?x366 0)))
 (let (($x296 (<= ?x366 0)))
 (let ((@x582 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1628 (not $x296) (not $x1143))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x296)) @x1333 @x1367 false) $x296) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1143)) @x1333 @x1367 false) $x1143) $x1628)))
 (let (($x591 (>= ?x1263 0)))
 (let (($x381 (<= ?x1263 0)))
 (let ((@x545 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1690 (not $x381) (not $x591))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x381)) @x1333 @x1367 false) $x381) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x591)) @x1333 @x1367 false) $x591) $x1690)))
 (let ((@x662 (unit-resolution (unit-resolution (and-elim @x1184 $x1141) @x545 @x582 (or $x295 $x1445)) @x1252 $x1445)))
 (let (($x1144 (>= ?x1446 0)))
 (let ((@x841 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1277 $x1347 (not $x1144))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1144)) @x1333 @x1367 false) $x1144) @x662 $x1347)))
 ((_ th-lemma arith farkas 1 1 1) @x841 @x1333 @x1367 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             640
 :arith-nonlinear-bounds    16
 :arith-num-rows            6
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 62
 :arith-tableau-max-rows    6
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                19.80
 :memory                    19.18
 :mk-bool-var               15
 :mk-clause                 20
 :num-allocs                606471
 :num-checks                1
 :propagations              36
 :rlimit-count              7606
 :time                      0.01
 :total-time                0.02)
