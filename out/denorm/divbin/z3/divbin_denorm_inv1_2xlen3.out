unsat
((set-logic NRA)
(declare-fun b!6 () Real)
(declare-fun x!4 () Real)
(declare-fun r!5 () Real)
(proof
(let ((?x73 (* x!4 b!6)))
 (let ((?x860 (* (- 1.0) ?x73)))
 (let ((?x814 (* (- 1.0) r!5)))
 (let ((?x78 (* b00 x00)))
 (let ((?x255 (+ ?x78 ?x814 r00 ?x860)))
 (let (($x567 (>= ?x255 0.0)))
 (let ((?x815 (+ r00 ?x860 ?x78 ?x814)))
 (let (($x882 (>= ?x815 0.0)))
 (let (($x947 (= 0.0 ?x815)))
 (let ((@x1033 (symm (commutativity (= $x947 (= ?x815 0.0))) (= (= ?x815 0.0) $x947))))
 (let (($x749 (= ?x815 0.0)))
 (let ((?x79 (* (- 1.0) ?x78)))
 (let ((?x95 (* (- 1.0) r00)))
 (let ((?x862 (+ ?x95 ?x73 ?x79 r!5)))
 (let ((?x881 (* (- 8.0) (* r!5 x!4 x!4 x!4 b!6))))
 (let ((?x516 (* 4.0 (* r!5 x!4))))
 (let ((?x918 (* (- 6.0) (* r!5 x!4 b!6))))
 (let ((?x885 (* (- 12.0) (* r!5 x!4 x!4 b!6))))
 (let ((?x1084 (* 12.0 (* r!5 r!5 x!4 x!4))))
 (let ((?x913 (* 6.0 (* r!5 r!5 x!4))))
 (let ((?x853 (* r!5 x!4 b!6 b!6 b!6)))
 (let ((?x1048 (* (- (/ 3.0 4.0)) ?x853)))
 (let ((?x843 (* r!5 x!4 x!4 x!4 b!6 b!6 b!6)))
 (let ((?x847 (* (- 1.0) ?x843)))
 (let ((?x841 (* r!5 x!4 x!4 b!6 b!6 b!6)))
 (let ((?x879 (* (- (/ 3.0 2.0)) ?x841)))
 (let ((?x831 (* 8.0 (* r!5 r!5 x!4 x!4 x!4))))
 (let ((?x850 (* 4.0 (* r!5 x!4 x!4))))
 (let ((?x795 (* 3.0 (* x!4 x!4 b!6 b!6))))
 (let ((?x741 (* (/ 1.0 4.0) (* b!6 b!6))))
 (let ((?x121 (* 2.0 (* x!4 x!4 x!4 b!6 b!6))))
 (let ((?x788 (* (- 2.0) (* x!4 x!4 b!6))))
 (let ((?x728 (* (- (/ 1.0 2.0)) b!6)))
 (let ((?x558 (* (/ 1.0 2.0) (* x!4 x!4 x!4 b!6 b!6 b!6 b!6))))
 (let ((?x745 (* (/ 3.0 2.0) (* x!4 b!6 b!6))))
 (let ((?x789 (* (/ 3.0 4.0) (* x!4 x!4 b!6 b!6 b!6 b!6))))
 (let ((?x721 (* r!5 r!5)))
 (let ((?x462 (* (- 1.0) (* r!5 b!6))))
 (let ((?x787 (* (/ 3.0 8.0) (* x!4 b!6 b!6 b!6 b!6))))
 (let ((?x166 (* r!5 b!6 b!6 b!6)))
 (let ((?x783 (* (- (/ 1.0 8.0)) ?x166)))
 (let ((?x735 (* (/ 1.0 16.0) (* b!6 b!6 b!6 b!6))))
 (let ((?x739 (* (- 2.0) ?x73)))
 (let ((?x525 (+ ?x739 ?x735 ?x783 r!5 ?x787 ?x462 ?x721 ?x789 ?x745 ?x558 ?x728 ?x788 ?x121 ?x741 ?x795 ?x850 ?x831 ?x879 ?x847 ?x1048 ?x913 ?x1084 ?x885 ?x918 ?x516 ?x881)))
 (let ((?x938 (* 3.0 (* r!5 r!5 x!4 x!4 b!6 b!6))))
 (let ((?x941 (* (/ 3.0 2.0) (* r!5 r!5 x!4 b!6 b!6))))
 (let ((?x827 (* (- (/ 3.0 2.0)) ?x853)))
 (let ((?x144 (* (- 2.0) ?x843)))
 (let ((?x863 (* (- 3.0) ?x841)))
 (let ((?x830 (* 2.0 (* r!5 r!5 x!4 x!4 x!4 b!6 b!6))))
 (let ((?x713 (* 12.0 (* x!4 x!4))))
 (let ((?x263 (* (/ 1.0 4.0) (* r!5 r!5 b!6 b!6))))
 (let ((?x730 (* 6.0 x!4)))
 (let ((?x547 (* 8.0 (* x!4 x!4 x!4))))
 (let ((?x556 (* (- (/ 1.0 4.0)) ?x166)))
 (let ((?x926 (+ ?x735 ?x556 ?x787 ?x547 ?x789 ?x730 ?x558 ?x263 ?x713 ?x830 ?x863 ?x144 ?x827 ?x941 ?x938)))
 (let ((?x531 (* ?x926 ?x525 ?x862)))
 (let (($x915 (= ?x531 0.0)))
 (let (($x515 (not $x915)))
 (let (($x849 (= (* (+ (- 1.0) ?x547 ?x830) (+ ?x850 ?x831 ?x847) ?x862) 0.0)))
 (let (($x870 (not $x849)))
 (let (($x930 (or $x870 $x515)))
 (let (($x280 (and $x749 $x930)))
 (let ((?x737 (+ r!5 ?x95 ?x79 ?x73)))
 (let ((?x77 (* 4.0 (* x!4 x!4 r!5))))
 (let ((?x697 (* x!4 x!4 x!4 r!5 b!6 b!6 b!6)))
 (let ((?x702 (* (- 1.0) ?x697)))
 (let ((?x743 (* 8.0 (* x!4 x!4 x!4 r!5 r!5))))
 (let ((?x817 (+ r!5 ?x728 ?x739 ?x743 ?x702 ?x77 ?x721 ?x462 ?x741 (* 6.0 (* x!4 r!5 r!5)) (* (- 6.0) (* x!4 r!5 b!6)) ?x745 (* 12.0 (* x!4 x!4 r!5 r!5)) (* (- 12.0) (* x!4 x!4 r!5 b!6)) ?x795 (* (- 8.0) (* x!4 x!4 x!4 r!5 b!6)) ?x121 ?x783 ?x735 (* (- (/ 3.0 4.0)) (* x!4 r!5 b!6 b!6 b!6)) ?x787 (* (- (/ 3.0 2.0)) (* x!4 x!4 r!5 b!6 b!6 b!6)) ?x789 ?x558 (* 4.0 (* x!4 r!5)) ?x788)))
 (let ((?x740 (* 2.0 (* x!4 x!4 x!4 r!5 r!5 b!6 b!6))))
 (let ((?x719 (+ ?x730 (* (- 2.0) ?x697) ?x740 ?x547 ?x556 ?x735 (* (- (/ 3.0 2.0)) (* x!4 r!5 b!6 b!6 b!6)) ?x787 (* (- 3.0) (* x!4 x!4 r!5 b!6 b!6 b!6)) ?x789 ?x558 ?x263 (* (/ 3.0 2.0) (* x!4 r!5 r!5 b!6 b!6)) (* 3.0 (* x!4 x!4 r!5 r!5 b!6 b!6)) ?x713)))
 (let (($x802 (or (not (= (* (+ (- 1.0) ?x740 ?x547) (+ ?x743 ?x702 ?x77) ?x737) 0.0)) (not (= (* ?x719 ?x817 ?x737) 0.0)))))
 (let (($x803 (and (= ?x737 0.0) $x802)))
 (let (($x491 (exists ((b Real) (r Real) (x Real) )(! (let ((?x106 (* x b)))
 (let ((?x78 (* b00 x00)))
 (let ((?x79 (* (- 1.0) ?x78)))
 (let ((?x95 (* (- 1.0) r00)))
 (let ((?x112 (+ r ?x95 ?x79 ?x106)))
 (let ((?x689 (* (/ 1.0 2.0) (* x x x b b b b))))
 (let ((?x686 (* (/ 3.0 4.0) (* x x b b b b))))
 (let ((?x679 (* (/ 3.0 8.0) (* x b b b b))))
 (let ((?x672 (* (/ 1.0 16.0) (* b b b b))))
 (let ((?x174 (* 4.0 (* x x r))))
 (let ((?x152 (* x x x r b b b)))
 (let ((?x160 (* (- 1.0) ?x152)))
 (let ((?x141 (* 8.0 (* x x x r r))))
 (let ((?x151 (* (- (/ 1.0 2.0)) b)))
 (let ((?x768 (+ r ?x151 (* (- 2.0) ?x106) ?x141 ?x160 ?x174 (* r r) (* (- 1.0) (* r b)) (* (/ 1.0 4.0) (* b b)) (* 6.0 (* x r r)) (* (- 6.0) (* x r b)) (* (/ 3.0 2.0) (* x b b)) (* 12.0 (* x x r r)) (* (- 12.0) (* x x r b)) (* 3.0 (* x x b b)) (* (- 8.0) (* x x x r b)) (* 2.0 (* x x x b b)) (* (- (/ 1.0 8.0)) (* r b b b)) ?x672 (* (- (/ 3.0 4.0)) (* x r b b b)) ?x679 (* (- (/ 3.0 2.0)) (* x x r b b b)) ?x686 ?x689 (* 4.0 (* x r)) (* (- 2.0) (* x x b)))))
 (let ((?x201 (* 8.0 (* x x x))))
 (let ((?x197 (* 2.0 (* x x x r r b b))))
 (let ((?x1117 (+ (* 6.0 x) (* (- 2.0) ?x152) ?x197 ?x201 (* (- (/ 1.0 4.0)) (* r b b b)) ?x672 (* (- (/ 3.0 2.0)) (* x r b b b)) ?x679 (* (- 3.0) (* x x r b b b)) ?x686 ?x689 (* (/ 1.0 4.0) (* r r b b)) (* (/ 3.0 2.0) (* x r r b b)) (* 3.0 (* x x r r b b)) (* 12.0 (* x x)))))
 (let (($x490 (or (not (= (* (+ (- 1.0) ?x197 ?x201) (+ ?x141 ?x160 ?x174) ?x112) 0.0)) (not (= (* ?x1117 ?x768 ?x112) 0.0)))))
 (let (($x117 (= ?x112 0.0)))
 (and $x117 $x490))))))))))))))))))))) :qid k!28))
 ))
 (let (($x878 (exists ((b Real) (r Real) (x Real) )(! (let ((?x95 (* (- 1.0) r00)))
 (let ((?x151 (* (- (/ 1.0 2.0)) b)))
 (let ((?x78 (* b00 x00)))
 (let ((?x79 (* (- 1.0) ?x78)))
 (let ((?x123 (+ ?x79 r ?x151 ?x95 (* (/ 1.0 2.0) (* (+ 1.0 (* 2.0 x)) b)))))
 (let ((?x699 (+ r ?x151)))
 (let ((?x53 (* 2.0 x)))
 (let ((?x753 (+ 1.0 ?x53)))
 (let ((?x854 (+ (* ?x753 ?x753 ?x753 ?x699 ?x699) (* (- (/ 1.0 8.0)) (* ?x753 ?x753 ?x753 ?x699 b b b)) (* ?x753 ?x753 ?x699))))
 (let ((?x873 (+ (- 1.0) (* (/ 1.0 4.0) (* ?x753 ?x753 ?x753 ?x699 ?x699 b b)) (* ?x753 ?x753 ?x753))))
 (let ((?x106 (* x b)))
 (let ((?x696 (+ ?x79 r ?x95 ?x106)))
 (let ((?x174 (* 4.0 (* x x r))))
 (let ((?x152 (* x x x r b b b)))
 (let ((?x160 (* (- 1.0) ?x152)))
 (let ((?x141 (* 8.0 (* x x x r r))))
 (let ((?x180 (+ ?x141 ?x160 ?x174)))
 (let ((?x201 (* 8.0 (* x x x))))
 (let ((?x197 (* 2.0 (* x x x r r b b))))
 (let ((?x204 (+ (- 1.0) ?x197 ?x201)))
 (let (($x867 (or (not (= (* ?x204 ?x180 ?x696) 0.0)) (not (= (* ?x873 ?x854 ?x123) 0.0)))))
 (and (= ?x696 0.0) $x867)))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x571 (lambda ((b Real) (r Real) (x Real) )(let ((?x106 (* x b)))
 (let ((?x78 (* b00 x00)))
 (let ((?x79 (* (- 1.0) ?x78)))
 (let ((?x95 (* (- 1.0) r00)))
 (let ((?x112 (+ r ?x95 ?x79 ?x106)))
 (let ((?x689 (* (/ 1.0 2.0) (* x x x b b b b))))
 (let ((?x686 (* (/ 3.0 4.0) (* x x b b b b))))
 (let ((?x679 (* (/ 3.0 8.0) (* x b b b b))))
 (let ((?x672 (* (/ 1.0 16.0) (* b b b b))))
 (let ((?x174 (* 4.0 (* x x r))))
 (let ((?x152 (* x x x r b b b)))
 (let ((?x160 (* (- 1.0) ?x152)))
 (let ((?x141 (* 8.0 (* x x x r r))))
 (let ((?x151 (* (- (/ 1.0 2.0)) b)))
 (let ((?x768 (+ r ?x151 (* (- 2.0) ?x106) ?x141 ?x160 ?x174 (* r r) (* (- 1.0) (* r b)) (* (/ 1.0 4.0) (* b b)) (* 6.0 (* x r r)) (* (- 6.0) (* x r b)) (* (/ 3.0 2.0) (* x b b)) (* 12.0 (* x x r r)) (* (- 12.0) (* x x r b)) (* 3.0 (* x x b b)) (* (- 8.0) (* x x x r b)) (* 2.0 (* x x x b b)) (* (- (/ 1.0 8.0)) (* r b b b)) ?x672 (* (- (/ 3.0 4.0)) (* x r b b b)) ?x679 (* (- (/ 3.0 2.0)) (* x x r b b b)) ?x686 ?x689 (* 4.0 (* x r)) (* (- 2.0) (* x x b)))))
 (let ((?x201 (* 8.0 (* x x x))))
 (let ((?x197 (* 2.0 (* x x x r r b b))))
 (let ((?x1117 (+ (* 6.0 x) (* (- 2.0) ?x152) ?x197 ?x201 (* (- (/ 1.0 4.0)) (* r b b b)) ?x672 (* (- (/ 3.0 2.0)) (* x r b b b)) ?x679 (* (- 3.0) (* x x r b b b)) ?x686 ?x689 (* (/ 1.0 4.0) (* r r b b)) (* (/ 3.0 2.0) (* x r r b b)) (* 3.0 (* x x r r b b)) (* 12.0 (* x x)))))
 (let (($x490 (or (not (= (* (+ (- 1.0) ?x197 ?x201) (+ ?x141 ?x160 ?x174) ?x112) 0.0)) (not (= (* ?x1117 ?x768 ?x112) 0.0)))))
 (let (($x117 (= ?x112 0.0)))
 (let (($x620 (and $x117 $x490)))
 (let ((?x123 (+ ?x79 r ?x151 ?x95 (* (/ 1.0 2.0) (* (+ 1.0 (* 2.0 x)) b)))))
 (let ((?x699 (+ r ?x151)))
 (let ((?x53 (* 2.0 x)))
 (let ((?x753 (+ 1.0 ?x53)))
 (let ((?x854 (+ (* ?x753 ?x753 ?x753 ?x699 ?x699) (* (- (/ 1.0 8.0)) (* ?x753 ?x753 ?x753 ?x699 b b b)) (* ?x753 ?x753 ?x699))))
 (let ((?x873 (+ (- 1.0) (* (/ 1.0 4.0) (* ?x753 ?x753 ?x753 ?x699 ?x699 b b)) (* ?x753 ?x753 ?x753))))
 (let ((?x696 (+ ?x79 r ?x95 ?x106)))
 (let ((?x180 (+ ?x141 ?x160 ?x174)))
 (let ((?x204 (+ (- 1.0) ?x197 ?x201)))
 (let (($x867 (or (not (= (* ?x204 ?x180 ?x696) 0.0)) (not (= (* ?x873 ?x854 ?x123) 0.0)))))
 (let (($x729 (and (= ?x696 0.0) $x867)))
 (rewrite (= $x729 $x620)))))))))))))))))))))))))))))))))))
 ))
 (let (($x70 (exists ((b Real) (r Real) (x Real) )(! (let ((?x53 (* 2.0 x)))
 (let ((?x54 (+ ?x53 1.0)))
 (let ((?x36 (/ b 2.0)))
 (let ((?x50 (- r ?x36)))
 (let ((?x24 (- 1.0)))
 (let ((?x59 (- (* ?x50 ?x50 ?x54 ?x54 ?x54) (* ?x36 ?x36 ?x36 ?x50 ?x54 ?x54 ?x54))))
 (let ((?x65 (* (+ (- (+ (* ?x24 b00 x00) ?x50) r00) (* ?x36 ?x54)) (+ ?x59 (* ?x50 ?x54 ?x54)) (+ ?x24 (* ?x36 ?x36 ?x50 ?x50 ?x54 ?x54 ?x54) (* ?x54 ?x54 ?x54)))))
 (let ((?x46 (+ ?x24 (* ?x36 ?x36 r r 2.0 x 2.0 x 2.0 x) (* 2.0 x 2.0 x 2.0 x))))
 (let ((?x41 (- (* r r 2.0 x 2.0 x 2.0 x) (* ?x36 ?x36 ?x36 r 2.0 x 2.0 x 2.0 x))))
 (let ((?x47 (* (+ (- (+ (* ?x24 b00 x00) r) r00) (* ?x36 2.0 x)) (+ ?x41 (* r 2.0 x 2.0 x)) ?x46)))
 (let (($x34 (= (+ (- (+ (* ?x24 b00 x00) r) r00) (* b x)) 0.0)))
 (and $x34 (or (not (= ?x47 0.0)) (not (= ?x65 0.0))))))))))))))) :qid k!28))
 ))
 (let ((?x732 (lambda ((b Real) (r Real) (x Real) )(let ((?x95 (* (- 1.0) r00)))
 (let ((?x151 (* (- (/ 1.0 2.0)) b)))
 (let ((?x78 (* b00 x00)))
 (let ((?x79 (* (- 1.0) ?x78)))
 (let ((?x123 (+ ?x79 r ?x151 ?x95 (* (/ 1.0 2.0) (* (+ 1.0 (* 2.0 x)) b)))))
 (let ((?x699 (+ r ?x151)))
 (let ((?x53 (* 2.0 x)))
 (let ((?x753 (+ 1.0 ?x53)))
 (let ((?x854 (+ (* ?x753 ?x753 ?x753 ?x699 ?x699) (* (- (/ 1.0 8.0)) (* ?x753 ?x753 ?x753 ?x699 b b b)) (* ?x753 ?x753 ?x699))))
 (let ((?x873 (+ (- 1.0) (* (/ 1.0 4.0) (* ?x753 ?x753 ?x753 ?x699 ?x699 b b)) (* ?x753 ?x753 ?x753))))
 (let ((?x106 (* x b)))
 (let ((?x696 (+ ?x79 r ?x95 ?x106)))
 (let ((?x174 (* 4.0 (* x x r))))
 (let ((?x152 (* x x x r b b b)))
 (let ((?x160 (* (- 1.0) ?x152)))
 (let ((?x141 (* 8.0 (* x x x r r))))
 (let ((?x180 (+ ?x141 ?x160 ?x174)))
 (let ((?x201 (* 8.0 (* x x x))))
 (let ((?x197 (* 2.0 (* x x x r r b b))))
 (let ((?x204 (+ (- 1.0) ?x197 ?x201)))
 (let (($x867 (or (not (= (* ?x204 ?x180 ?x696) 0.0)) (not (= (* ?x873 ?x854 ?x123) 0.0)))))
 (let (($x729 (and (= ?x696 0.0) $x867)))
 (let ((?x54 (+ ?x53 1.0)))
 (let ((?x36 (/ b 2.0)))
 (let ((?x50 (- r ?x36)))
 (let ((?x24 (- 1.0)))
 (let ((?x59 (- (* ?x50 ?x50 ?x54 ?x54 ?x54) (* ?x36 ?x36 ?x36 ?x50 ?x54 ?x54 ?x54))))
 (let ((?x65 (* (+ (- (+ (* ?x24 b00 x00) ?x50) r00) (* ?x36 ?x54)) (+ ?x59 (* ?x50 ?x54 ?x54)) (+ ?x24 (* ?x36 ?x36 ?x50 ?x50 ?x54 ?x54 ?x54) (* ?x54 ?x54 ?x54)))))
 (let ((?x46 (+ ?x24 (* ?x36 ?x36 r r 2.0 x 2.0 x 2.0 x) (* 2.0 x 2.0 x 2.0 x))))
 (let ((?x41 (- (* r r 2.0 x 2.0 x 2.0 x) (* ?x36 ?x36 ?x36 r 2.0 x 2.0 x 2.0 x))))
 (let ((?x47 (* (+ (- (+ (* ?x24 b00 x00) r) r00) (* ?x36 2.0 x)) (+ ?x41 (* r 2.0 x 2.0 x)) ?x46)))
 (let (($x34 (= (+ (- (+ (* ?x24 b00 x00) r) r00) (* b x)) 0.0)))
 (let (($x69 (and $x34 (or (not (= ?x47 0.0)) (not (= ?x65 0.0))))))
 (rewrite (= $x69 $x729))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x71 (asserted $x70)))
 (let ((@x703 (mp (mp @x71 (quant-intro (proof-bind ?x732) (= $x70 $x878)) $x878) (quant-intro (proof-bind ?x571) (= $x878 $x491)) $x491)))
 (let ((@x1011 (mp (mp~ @x703 (sk (~ $x491 $x803)) $x803) (rewrite (= $x803 $x280)) $x280)))
 (let ((@x1028 (mp (and-elim @x1011 $x749) @x1033 $x947)))
 (let ((@x942 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x947) $x882)) @x1028 $x882)))
 (let ((@x575 (lemma ((_ th-lemma arith) @x942 (hypothesis (not $x567)) false) $x567)))
 (let ((?x852 (+ ?x941 ?x730 ?x830 ?x547 ?x144 ?x938 ?x735 ?x556 ?x787 ?x789 ?x558 ?x263 ?x713 ?x863 ?x827)))
 (let (($x840 (>= ?x852 0.0)))
 (let (($x427 (not $x840)))
 (let (($x838 (<= ?x852 0.0)))
 (let (($x945 (<= ?x255 0.0)))
 (let (($x946 (<= ?x815 0.0)))
 (let ((@x1027 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x947) $x946)) @x1028 $x946)))
 (let ((@x487 (lemma ((_ th-lemma arith) @x1027 (hypothesis (not $x945)) false) $x945)))
 (let (($x308 (not $x838)))
 (let ((@x591 (hypothesis $x308)))
 (let ((?x529 (+ r!5 ?x739 ?x728 ?x847 ?x850 ?x831 ?x735 ?x783 ?x787 ?x789 ?x558 ?x879 ?x1048 ?x881 ?x462 ?x721 ?x745 ?x788 ?x121 ?x741 ?x795 ?x913 ?x1084 ?x885 ?x918 ?x516)))
 (let (($x528 (>= ?x529 0.0)))
 (let (($x898 (not $x528)))
 (let (($x483 (<= ?x529 0.0)))
 (let (($x481 (not $x483)))
 (let ((@x533 (hypothesis $x481)))
 (let (($x927 (<= ?x531 0.0)))
 (let (($x282 (not $x927)))
 (let (($x944 (>= ?x531 0.0)))
 (let (($x545 (= ?x852 0.0)))
 (let (($x933 (not $x545)))
 (let ((?x845 (+ ?x79 r!5 ?x95 ?x73)))
 (let (($x482 (= ?x845 0.0)))
 (let (($x498 (= 0.0 ?x845)))
 (let (($x828 (<= ?x845 0.0)))
 (let (($x811 (>= ?x845 0.0)))
 (let ((@x513 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x498 (not $x828) (not $x811))) (unit-resolution ((_ th-lemma arith) (or (not $x946) $x811)) @x1027 $x811) (unit-resolution ((_ th-lemma arith) (or (not $x882) $x828)) @x942 $x828) $x498)))
 (let (($x821 (or (not $x482) $x849)))
 (let ((@x540 (unit-resolution ((_ th-lemma arith) $x821) (hypothesis $x870) (hypothesis $x482) false)))
 (let ((@x1110 (unit-resolution (and-elim @x1011 $x930) (unit-resolution (lemma @x540 $x821) (symm @x513 $x482) $x849) $x515)))
 (let ((@x1111 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x933 $x915)) @x1110 $x933) (symm (hypothesis (= 0.0 ?x852)) $x545) false)))
 (let ((@x1096 (lemma @x1111 (not (= 0.0 ?x852)))))
 (let (($x534 (not $x944)))
 (let ((@x484 (hypothesis $x534)))
 (let ((@x310 (unit-resolution ((_ th-lemma arith) (or (not $x945) $x838 $x483 $x944)) @x484 @x533 @x591 @x487 false)))
 (let ((@x900 (unit-resolution ((_ th-lemma arith) (or (not $x567) $x838 $x528 $x944)) @x484 (hypothesis $x898) @x591 @x575 false)))
 (let (($x600 (= ?x529 0.0)))
 (let (($x479 (not $x600)))
 (let ((@x327 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x479 $x915)) @x1110 $x479) (symm (hypothesis (= 0.0 ?x529)) $x600) false)))
 (let ((@x846 (unit-resolution ((_ th-lemma arith triangle-eq) (or (= 0.0 ?x529) $x481 $x898)) (lemma @x327 (not (= 0.0 ?x529))) (or $x481 $x898))))
 (let ((@x537 (unit-resolution @x846 (unit-resolution (lemma @x900 (or $x528 $x944 $x838)) @x591 @x484 $x528) (unit-resolution (lemma @x310 (or $x483 $x944 $x838)) @x591 @x484 $x483) false)))
 (let ((@x198 ((_ th-lemma arith triangle-eq) (or (= 0.0 ?x852) $x308 $x427))))
 (let ((@x1067 (unit-resolution @x198 (unit-resolution (lemma @x537 (or $x838 $x944)) @x484 $x838) @x1096 $x427)))
 (let ((@x1066 (unit-resolution ((_ th-lemma arith) (or (not $x567) $x840 $x483 $x944)) @x484 @x533 (hypothesis $x427) @x575 false)))
 (let ((@x638 (unit-resolution @x846 (unit-resolution (lemma @x1066 (or $x840 $x944 $x483)) @x1067 @x484 $x483) $x898)))
 (let ((@x1098 (unit-resolution ((_ th-lemma arith) (or (not $x945) $x840 $x528 $x944)) @x484 @x638 @x1067 @x487 false)))
 (let (($x884 (= 0.0 ?x531)))
 (let (($x857 (not $x884)))
 (let ((@x858 (monotonicity (symm (commutativity (= $x884 $x915)) (= $x915 $x884)) (= $x515 $x857))))
 (let ((@x1064 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x884 $x282 $x534)) (mp @x1110 @x858 $x857) (or $x282 $x534))))
 (let ((@x346 (unit-resolution @x1064 (lemma @x1098 $x944) $x282)))
 (let ((@x348 (unit-resolution ((_ th-lemma arith) (or (not $x567) $x838 $x483 $x927)) @x346 @x533 @x591 @x575 false)))
 (let ((@x1104 (unit-resolution @x198 @x1096 (or $x308 $x427))))
 (let ((@x87 (unit-resolution @x1104 (unit-resolution (lemma @x348 (or $x838 $x483)) @x533 $x838) $x427)))
 (let ((@x96 (unit-resolution ((_ th-lemma arith) (or (not $x945) $x840 $x483 $x927)) @x346 @x533 @x87 @x487 false)))
 (let ((@x998 (unit-resolution @x846 (lemma @x96 $x483) $x898)))
 (let ((@x963 (unit-resolution ((_ th-lemma arith) (or (not $x945) $x838 $x528 $x927)) @x346 @x998 @x591 @x487 false)))
 (unit-resolution ((_ th-lemma arith) (or (not $x567) $x840 $x528 $x927)) @x346 @x998 (unit-resolution @x1104 (lemma @x963 $x838) $x427) @x575 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                      29
 :arith-eq-adapter               40
 :arith-bound-propagations-cheap 35
 :arith-bound-propagations-lp    2
 :arith-conflicts                96
 :arith-diseq                    35
 :arith-fixed-eqs                1
 :arith-grobner-calls            5
 :arith-horner-calls             5
 :arith-lower                    65
 :arith-make-feasible            58
 :arith-max-columns              53
 :arith-max-rows                 10
 :arith-nla-lemmas               94
 :arith-propagations             35
 :arith-upper                    62
 :conflicts                      16
 :decisions                      114
 :del-clause                     203
 :final-checks                   38
 :max-memory                     2.78
 :memory                         1.19
 :mk-bool-var                    229
 :mk-clause                      219
 :num-allocs                     1787687
 :num-checks                     1
 :propagations                   121
 :rlimit-count                   6450
 :time                           0.04
 :total-time                     0.04)
