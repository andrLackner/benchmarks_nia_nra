unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(proof
(let ((?x347 (* (- 6) n!0)))
 (let ((?x597 (+ m!1 ?x347)))
 (let (($x669 (<= ?x597 6)))
 (let (($x571 (= ?x597 6)))
 (let ((?x791 (* 216 (* c!3 c!3))))
 (let ((?x713 (* (- 36) k!2)))
 (let ((?x402 (* 18 (* c!3 k!2 k!2 k!2))))
 (let ((?x363 (* 18 (* c!3 c!3 k!2 k!2))))
 (let ((?x562 (* 432 (* c!3 k!2))))
 (let ((?x480 (* k!2 k!2)))
 (let ((?x773 (* 216 ?x480)))
 (let ((?x675 (* 6 (* c!3 c!3 c!3 k!2))))
 (let ((?x409 (* 6 (* k!2 k!2 k!2 k!2))))
 (let ((?x684 (+ c!3 k!2)))
 (let ((?x683 (+ 6 m!1)))
 (let ((?x724 (+ 1 n!0)))
 (let ((?x825 (* (- 36) c!3)))
 (let ((?x507 (+ (* m!1 m!1 c!3 c!3 c!3) (* (- 1) (* m!1 m!1 k!2)) (* 3 (* m!1 m!1 c!3 k!2 k!2)) (* m!1 m!1 m!1 c!3 c!3) (* 2 (* m!1 m!1 m!1 c!3 k!2)) (* m!1 m!1 k!2 k!2 k!2) (* 216 (* m!1 c!3 k!2)) (* (- 36) (* n!0 c!3)) (* 108 (* m!1 k!2 k!2)) (* (- 12) (* m!1 n!0 k!2)) ?x825 (* ?x724 ?x724 ?x683 (+ m!1 k!2) ?x684 ?x684) (* (- 36) (* n!0 k!2)) (* m!1 m!1 m!1 k!2 k!2) ?x409 (* (- 12) (* m!1 n!0 c!3)) ?x675 (* 108 (* m!1 c!3 c!3)) ?x773 (* 3 (* m!1 c!3 c!3 k!2 k!2)) (* 18 (* m!1 m!1 k!2 k!2)) (* 36 (* m!1 m!1 c!3 k!2)) (* 18 (* m!1 m!1 c!3 c!3)) (* 6 (* m!1 c!3 c!3 c!3)) (* m!1 c!3 c!3 c!3 k!2) ?x562 (* (- 1) (* m!1 m!1 n!0 k!2)) (* 18 (* m!1 c!3 c!3 k!2)) (* 18 (* m!1 c!3 k!2 k!2)) (* 6 (* m!1 k!2 k!2 k!2)) (* (- 1) (* m!1 m!1 c!3)) (* (- 12) (* m!1 c!3)) ?x363 ?x402 (* (- 12) (* m!1 k!2)) (* m!1 k!2 k!2 k!2 k!2) ?x713 (* 3 (* m!1 c!3 k!2 k!2 k!2)) (* 3 (* m!1 m!1 c!3 c!3 k!2)) (* (- 1) (* m!1 m!1 n!0 c!3)) ?x791)))
 (let ((?x446 (+ (- 6) m!1 ?x347)))
 (let ((?x505 (* ?x446 ?x507)))
 (let (($x550 (= ?x505 0)))
 (let (($x494 (not $x550)))
 (let (($x198 (= (+ (* 3 n!0) (* 3 (* n!0 n!0)) (* (- 1) k!2)) (- 1))))
 (let (($x807 (= (+ (* 2 n!0) (* (- 3) c!3) (* n!0 k!2) (* (- 1) k!2)) (- 1))))
 (let ((?x567 (* 5 k!2)))
 (let ((?x700 (* (- 1) ?x480)))
 (let ((?x136 (* 18 c!3)))
 (let ((?x443 (* (- 9) n!0)))
 (let (($x601 (and $x571 (= (+ (* 9 (* n!0 c!3)) ?x443 ?x136 ?x700 ?x567) 4) $x807 $x198 $x494)))
 (let ((?x808 (+ ?x825 ?x713 ?x773 (* (- 36) (* k!2 n!0)) (* (- 36) (* c!3 n!0)) (* c!3 c!3 c!3 k!2 m!1) (* 3 (* c!3 c!3 k!2 k!2 m!1)) (* 3 (* c!3 k!2 k!2 k!2 m!1)) (* k!2 k!2 k!2 k!2 m!1) (* c!3 c!3 c!3 m!1 m!1) (* 3 (* c!3 c!3 k!2 m!1 m!1)) (* 3 (* c!3 k!2 k!2 m!1 m!1)) (* k!2 k!2 k!2 m!1 m!1) ?x675 ?x363 ?x402 ?x409 (* 6 (* c!3 c!3 c!3 m!1)) (* 18 (* c!3 c!3 k!2 m!1)) (* 18 (* c!3 k!2 k!2 m!1)) (* 6 (* k!2 k!2 k!2 m!1)) (* (- 1) (* c!3 m!1 m!1 n!0)) (* (- 1) (* k!2 m!1 m!1 n!0)) (* (- 12) (* c!3 m!1)) (* (- 12) (* k!2 m!1)) (* (- 1) (* c!3 m!1 m!1)) (* (- 1) (* k!2 m!1 m!1)) (* (- 12) (* c!3 m!1 n!0)) (* (- 12) (* k!2 m!1 n!0)) (* ?x724 ?x724 ?x683 (+ k!2 m!1) ?x684 ?x684) (* 108 (* c!3 c!3 m!1)) ?x562 ?x791 (* k!2 k!2 m!1 m!1 m!1) (* 2 (* c!3 k!2 m!1 m!1 m!1)) (* c!3 c!3 m!1 m!1 m!1) (* 216 (* c!3 k!2 m!1)) (* 108 (* k!2 k!2 m!1)) (* 18 (* c!3 c!3 m!1 m!1)) (* 36 (* c!3 k!2 m!1 m!1)) (* 18 (* k!2 k!2 m!1 m!1)))))
 (let (($x586 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x781 (and $x571 (= (+ ?x136 ?x567 ?x443 ?x700 (* 9 (* c!3 n!0))) 4) $x586 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* ?x446 ?x808) 0)))))
 (let (($x473 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x821 (* 18 (* k k m m))))
 (let ((?x820 (* 36 (* c k m m))))
 (let ((?x819 (* 18 (* c c m m))))
 (let ((?x744 (* k k m)))
 (let ((?x818 (* 108 ?x744)))
 (let ((?x736 (* c k m)))
 (let ((?x817 (* 216 ?x736)))
 (let ((?x697 (* c c m m m)))
 (let ((?x822 (* 2 (* c k m m m))))
 (let ((?x694 (* k k m m m)))
 (let ((?x686 (* 216 (* c c))))
 (let ((?x814 (* 432 (* c k))))
 (let ((?x643 (* c c m)))
 (let ((?x816 (* 108 ?x643)))
 (let ((?x72 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x663 (* (- 12) (* k m n))))
 (let ((?x660 (* (- 12) (* c m n))))
 (let ((?x634 (* (- 1) (* k m m))))
 (let ((?x633 (* (- 1) (* c m m))))
 (let ((?x657 (* (- 12) (* k m))))
 (let ((?x654 (* (- 12) (* c m))))
 (let ((?x630 (* (- 1) (* k m m n))))
 (let ((?x629 (* (- 1) (* c m m n))))
 (let ((?x497 (* 6 (* k k k m))))
 (let ((?x522 (* 18 (* c k k m))))
 (let ((?x521 (* 18 (* c c k m))))
 (let ((?x453 (* 6 (* c c c m))))
 (let ((?x449 (* 6 (* k k k k))))
 (let ((?x520 (* 18 (* c k k k))))
 (let ((?x519 (* 18 (* c c k k))))
 (let ((?x405 (* 6 (* c c c k))))
 (let ((?x398 (* k k k m m)))
 (let ((?x526 (* 3 (* c k k m m))))
 (let ((?x525 (* 3 (* c c k m m))))
 (let ((?x391 (* c c c m m)))
 (let ((?x390 (* k k k k m)))
 (let ((?x524 (* 3 (* c k k k m))))
 (let ((?x523 (* 3 (* c c k k m))))
 (let ((?x383 (* c c c k m)))
 (let ((?x150 (* c n)))
 (let ((?x650 (* (- 36) ?x150)))
 (let ((?x55 (* k n)))
 (let ((?x647 (* (- 36) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x671 (* 216 ?x49)))
 (let ((?x644 (* (- 36) k)))
 (let ((?x641 (* (- 36) c)))
 (let ((?x790 (+ ?x641 ?x644 ?x671 ?x647 ?x650 ?x383 ?x523 ?x524 ?x390 ?x391 ?x525 ?x526 ?x398 ?x405 ?x519 ?x520 ?x449 ?x453 ?x521 ?x522 ?x497 ?x629 ?x630 ?x654 ?x657 ?x633 ?x634 ?x660 ?x663 ?x613 ?x816 ?x814 ?x686 ?x694 ?x822 ?x697 ?x817 ?x818 ?x819 ?x820 ?x821)))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 ?x150)) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 $x212 $x264 $x302 (not (= (* ?x117 ?x790) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x741 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x821 (* 18 (* k k m m))))
 (let ((?x820 (* 36 (* c k m m))))
 (let ((?x819 (* 18 (* c c m m))))
 (let ((?x697 (* c c m m m)))
 (let ((?x822 (* 2 (* c k m m m))))
 (let ((?x694 (* k k m m m)))
 (let ((?x686 (* 216 (* c c))))
 (let ((?x814 (* 432 (* c k))))
 (let ((?x72 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x663 (* (- 12) (* k m n))))
 (let ((?x660 (* (- 12) (* c m n))))
 (let ((?x634 (* (- 1) (* k m m))))
 (let ((?x633 (* (- 1) (* c m m))))
 (let ((?x657 (* (- 12) (* k m))))
 (let ((?x654 (* (- 12) (* c m))))
 (let ((?x630 (* (- 1) (* k m m n))))
 (let ((?x629 (* (- 1) (* c m m n))))
 (let ((?x449 (* 6 (* k k k k))))
 (let ((?x398 (* k k k m m)))
 (let ((?x526 (* 3 (* c k k m m))))
 (let ((?x525 (* 3 (* c c k m m))))
 (let ((?x391 (* c c c m m)))
 (let ((?x390 (* k k k k m)))
 (let ((?x524 (* 3 (* c k k k m))))
 (let ((?x523 (* 3 (* c c k k m))))
 (let ((?x383 (* c c c k m)))
 (let ((?x150 (* c n)))
 (let ((?x650 (* (- 36) ?x150)))
 (let ((?x55 (* k n)))
 (let ((?x647 (* (- 36) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x671 (* 216 ?x49)))
 (let ((?x644 (* (- 36) k)))
 (let ((?x641 (* (- 36) c)))
 (let ((?x238 (+ ?x641 ?x644 ?x671 ?x647 (* 6 (* m k k k)) ?x650 (* 6 (* k c k c)) (* 6 (* m c k c)) (* 6 (* k k k c)) (* 6 (* m 6 c c)) ?x383 ?x523 ?x524 ?x390 ?x391 ?x525 ?x526 ?x398 (* 6 (* m 6 k c)) (* 6 (* m 6 c k)) ?x449 (* 6 (* m c c k)) ?x629 ?x630 ?x654 ?x657 (* 6 (* m 6 k k)) ?x633 ?x634 ?x660 ?x663 ?x613 (* 6 (* m k k c)) (* 72 (* c c m)) (* 6 (* k c c k)) ?x814 ?x686 ?x694 ?x822 ?x697 (* 6 (* k k c c)) (* 6 (* k c c c)) (* 144 (* c k m)) (* 72 (* k k m)) (* 6 (* m c c c)) ?x819 (* 6 (* k k c k)) (* 6 (* m k c k)) ?x820 (* 6 (* m c k k)) (* 6 (* k c k k)) ?x821 (* 6 (* m k c c)))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 ?x150)) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 $x212 $x264 $x302 (not (= (* ?x117 ?x238) 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x734 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x821 (* 18 (* k k m m))))
 (let ((?x820 (* 36 (* c k m m))))
 (let ((?x819 (* 18 (* c c m m))))
 (let ((?x744 (* k k m)))
 (let ((?x818 (* 108 ?x744)))
 (let ((?x736 (* c k m)))
 (let ((?x817 (* 216 ?x736)))
 (let ((?x697 (* c c m m m)))
 (let ((?x822 (* 2 (* c k m m m))))
 (let ((?x694 (* k k m m m)))
 (let ((?x686 (* 216 (* c c))))
 (let ((?x814 (* 432 (* c k))))
 (let ((?x643 (* c c m)))
 (let ((?x816 (* 108 ?x643)))
 (let ((?x72 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x663 (* (- 12) (* k m n))))
 (let ((?x660 (* (- 12) (* c m n))))
 (let ((?x634 (* (- 1) (* k m m))))
 (let ((?x633 (* (- 1) (* c m m))))
 (let ((?x657 (* (- 12) (* k m))))
 (let ((?x654 (* (- 12) (* c m))))
 (let ((?x630 (* (- 1) (* k m m n))))
 (let ((?x629 (* (- 1) (* c m m n))))
 (let ((?x497 (* 6 (* k k k m))))
 (let ((?x522 (* 18 (* c k k m))))
 (let ((?x521 (* 18 (* c c k m))))
 (let ((?x453 (* 6 (* c c c m))))
 (let ((?x449 (* 6 (* k k k k))))
 (let ((?x520 (* 18 (* c k k k))))
 (let ((?x519 (* 18 (* c c k k))))
 (let ((?x405 (* 6 (* c c c k))))
 (let ((?x398 (* k k k m m)))
 (let ((?x526 (* 3 (* c k k m m))))
 (let ((?x525 (* 3 (* c c k m m))))
 (let ((?x391 (* c c c m m)))
 (let ((?x390 (* k k k k m)))
 (let ((?x524 (* 3 (* c k k k m))))
 (let ((?x523 (* 3 (* c c k k m))))
 (let ((?x383 (* c c c k m)))
 (let ((?x150 (* c n)))
 (let ((?x650 (* (- 36) ?x150)))
 (let ((?x55 (* k n)))
 (let ((?x647 (* (- 36) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x671 (* 216 ?x49)))
 (let ((?x644 (* (- 36) k)))
 (let ((?x641 (* (- 36) c)))
 (let ((?x790 (+ ?x641 ?x644 ?x671 ?x647 ?x650 ?x383 ?x523 ?x524 ?x390 ?x391 ?x525 ?x526 ?x398 ?x405 ?x519 ?x520 ?x449 ?x453 ?x521 ?x522 ?x497 ?x629 ?x630 ?x654 ?x657 ?x633 ?x634 ?x660 ?x663 ?x613 ?x816 ?x814 ?x686 ?x694 ?x822 ?x697 ?x817 ?x818 ?x819 ?x820 ?x821)))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 ?x150)) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x574 (and $x128 $x212 $x264 $x302 (not (= (* ?x117 ?x790) 0)))))
 (let ((?x238 (+ ?x641 ?x644 ?x671 ?x647 (* 6 (* m k k k)) ?x650 (* 6 (* k c k c)) (* 6 (* m c k c)) (* 6 (* k k k c)) (* 6 (* m 6 c c)) ?x383 ?x523 ?x524 ?x390 ?x391 ?x525 ?x526 ?x398 (* 6 (* m 6 k c)) (* 6 (* m 6 c k)) ?x449 (* 6 (* m c c k)) ?x629 ?x630 ?x654 ?x657 (* 6 (* m 6 k k)) ?x633 ?x634 ?x660 ?x663 ?x613 (* 6 (* m k k c)) (* 72 ?x643) (* 6 (* k c c k)) ?x814 ?x686 ?x694 ?x822 ?x697 (* 6 (* k k c c)) (* 6 (* k c c c)) (* 144 ?x736) (* 72 ?x744) (* 6 (* m c c c)) ?x819 (* 6 (* k k c k)) (* 6 (* m k c k)) ?x820 (* 6 (* m c k k)) (* 6 (* k c k k)) ?x821 (* 6 (* m k c c)))))
 (let (($x670 (and $x128 $x212 $x264 $x302 (not (= (* ?x117 ?x238) 0)))))
 (rewrite (= $x670 $x574))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x538 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ c k)))
 (let ((?x361 (+ 6 m)))
 (let ((?x73 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x355 (+ (* ?x361 ?x73 ?x72 ?x72 ?x72) (* (- 1) (* ?x317 ?x361 ?x361 ?x72)) ?x613 (* ?x361 ?x361 ?x361 ?x72 ?x72))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x234 (not (= (* ?x117 ?x355) 0))))
 (let (($x116 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x563 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x563 $x116 $x234)))))))))))))))))) :qid k!34))
 ))
 (let ((?x735 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x821 (* 18 (* k k m m))))
 (let ((?x820 (* 36 (* c k m m))))
 (let ((?x819 (* 18 (* c c m m))))
 (let ((?x697 (* c c m m m)))
 (let ((?x822 (* 2 (* c k m m m))))
 (let ((?x694 (* k k m m m)))
 (let ((?x686 (* 216 (* c c))))
 (let ((?x814 (* 432 (* c k))))
 (let ((?x72 (+ c k)))
 (let ((?x73 (+ k m)))
 (let ((?x361 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x663 (* (- 12) (* k m n))))
 (let ((?x660 (* (- 12) (* c m n))))
 (let ((?x634 (* (- 1) (* k m m))))
 (let ((?x633 (* (- 1) (* c m m))))
 (let ((?x657 (* (- 12) (* k m))))
 (let ((?x654 (* (- 12) (* c m))))
 (let ((?x630 (* (- 1) (* k m m n))))
 (let ((?x629 (* (- 1) (* c m m n))))
 (let ((?x449 (* 6 (* k k k k))))
 (let ((?x398 (* k k k m m)))
 (let ((?x526 (* 3 (* c k k m m))))
 (let ((?x525 (* 3 (* c c k m m))))
 (let ((?x391 (* c c c m m)))
 (let ((?x390 (* k k k k m)))
 (let ((?x524 (* 3 (* c k k k m))))
 (let ((?x523 (* 3 (* c c k k m))))
 (let ((?x383 (* c c c k m)))
 (let ((?x150 (* c n)))
 (let ((?x650 (* (- 36) ?x150)))
 (let ((?x55 (* k n)))
 (let ((?x647 (* (- 36) ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x671 (* 216 ?x49)))
 (let ((?x644 (* (- 36) k)))
 (let ((?x641 (* (- 36) c)))
 (let ((?x238 (+ ?x641 ?x644 ?x671 ?x647 (* 6 (* m k k k)) ?x650 (* 6 (* k c k c)) (* 6 (* m c k c)) (* 6 (* k k k c)) (* 6 (* m 6 c c)) ?x383 ?x523 ?x524 ?x390 ?x391 ?x525 ?x526 ?x398 (* 6 (* m 6 k c)) (* 6 (* m 6 c k)) ?x449 (* 6 (* m c c k)) ?x629 ?x630 ?x654 ?x657 (* 6 (* m 6 k k)) ?x633 ?x634 ?x660 ?x663 ?x613 (* 6 (* m k k c)) (* 72 (* c c m)) (* 6 (* k c c k)) ?x814 ?x686 ?x694 ?x822 ?x697 (* 6 (* k k c c)) (* 6 (* k c c c)) (* 144 (* c k m)) (* 72 (* k k m)) (* 6 (* m c c c)) ?x819 (* 6 (* k k c k)) (* 6 (* m k c k)) ?x820 (* 6 (* m c k k)) (* 6 (* k c k k)) ?x821 (* 6 (* m k c c)))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x302 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x264 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x212 (= (+ ?x40 ?x44 ?x214 ?x215 (* 9 ?x150)) 4)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x670 (and $x128 $x212 $x264 $x302 (not (= (* ?x117 ?x238) 0)))))
 (let ((?x355 (+ (* ?x361 ?x73 ?x72 ?x72 ?x72) (* (- 1) (* ?x317 ?x361 ?x361 ?x72)) ?x613 (* ?x361 ?x361 ?x361 ?x72 ?x72))))
 (let (($x234 (not (= (* ?x117 ?x355) 0))))
 (let (($x116 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x563 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x96 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x563 $x116 $x234)))
 (rewrite (= $x96 $x670))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x248 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ c k)))
 (let ((?x361 (+ 6 m)))
 (let ((?x73 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x355 (+ (* ?x361 ?x73 ?x72 ?x72 ?x72) (* (- 1) (* ?x317 ?x361 ?x361 ?x72)) ?x613 (* ?x361 ?x361 ?x361 ?x72 ?x72))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x234 (not (= (* ?x117 ?x355) 0))))
 (let (($x116 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x607 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x783 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x128 (= (+ m ?x111) 6)))
 (and $x128 (= ?x783 (- 4)) $x607 $x116 $x234)))))))))))))))) :qid k!34))
 ))
 (let ((?x568 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ c k)))
 (let ((?x361 (+ 6 m)))
 (let ((?x73 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x355 (+ (* ?x361 ?x73 ?x72 ?x72 ?x72) (* (- 1) (* ?x317 ?x361 ?x361 ?x72)) ?x613 (* ?x361 ?x361 ?x361 ?x72 ?x72))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x234 (not (= (* ?x117 ?x355) 0))))
 (let (($x116 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x563 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x215 (* (- 1) ?x49)))
 (let ((?x214 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x96 (and $x128 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x214 ?x215) 4) $x563 $x116 $x234)))
 (let (($x607 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x783 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x592 (and $x128 (= ?x783 (- 4)) $x607 $x116 $x234)))
 (rewrite (= $x592 $x96)))))))))))))))))))))))))
 ))
 (let (($x86 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ m 6)))
 (let ((?x72 (+ c k)))
 (let ((?x77 (- (* ?x72 ?x72 ?x72 (+ k m) ?x74) (* ?x72 ?x74 ?x74 (+ n 1)))))
 (let ((?x80 (+ ?x77 (* ?x72 ?x72 (+ k m) ?x74 (+ n 1) (+ n 1)) (* ?x72 ?x72 ?x74 ?x74 ?x74))))
 (let ((?x81 (* (- (+ (* (- 6) 1) m 6) (* 6 (+ n 1))) ?x80)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x81 0)))))))))))))))) :qid k!34))
 ))
 (let ((?x546 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ c k)))
 (let ((?x361 (+ 6 m)))
 (let ((?x73 (+ k m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x613 (* ?x317 ?x317 ?x361 ?x73 ?x72 ?x72)))
 (let ((?x355 (+ (* ?x361 ?x73 ?x72 ?x72 ?x72) (* (- 1) (* ?x317 ?x361 ?x361 ?x72)) ?x613 (* ?x361 ?x361 ?x361 ?x72 ?x72))))
 (let ((?x111 (* (- 6) n)))
 (let ((?x117 (+ (- 6) m ?x111)))
 (let (($x234 (not (= (* ?x117 ?x355) 0))))
 (let (($x116 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x607 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x783 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x128 (= (+ m ?x111) 6)))
 (let (($x592 (and $x128 (= ?x783 (- 4)) $x607 $x116 $x234)))
 (let ((?x77 (- (* ?x72 ?x72 ?x72 ?x73 (+ m 6)) (* ?x72 (+ m 6) (+ m 6) (+ n 1)))))
 (let ((?x80 (+ ?x77 (* ?x72 ?x72 ?x73 (+ m 6) (+ n 1) (+ n 1)) (* ?x72 ?x72 (+ m 6) (+ m 6) (+ m 6)))))
 (let ((?x81 (* (- (+ (* (- 6) 1) m 6) (* 6 (+ n 1))) ?x80)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x85 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x81 0))))))
 (rewrite (= $x85 $x592))))))))))))))))))))))))))))
 ))
 (let ((@x87 (asserted $x86)))
 (let ((@x561 (mp (mp @x87 (quant-intro (proof-bind ?x546) (= $x86 $x248)) $x248) (rewrite (= $x248 $x248)) $x248)))
 (let ((@x745 (mp (mp @x561 (quant-intro (proof-bind ?x568) (= $x248 $x538)) $x538) (quant-intro (proof-bind ?x735) (= $x538 $x741)) $x741)))
 (let ((@x249 (mp~ (mp @x745 (quant-intro (proof-bind ?x734) (= $x741 $x473)) $x473) (sk (~ $x473 $x781)) $x781)))
 (let ((@x468 (mp @x249 (rewrite (= $x781 $x601)) $x601)))
 (let ((@x486 (and-elim @x468 $x571)))
 (let ((@x438 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x571) $x669)) @x486 $x669)))
 (let (($x636 (>= ?x597 6)))
 (let ((@x191 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x571) $x636)) @x486 $x636)))
 (let (($x350 (not (<= ?x505 0))))
 (let (($x661 (>= ?x505 0)))
 (let ((@x756 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x550 $x350 (not $x661))) (and-elim @x468 $x494) (or $x350 (not $x661)))))
 (let ((@x803 (unit-resolution @x756 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x661)) @x191 @x438 false) $x661) $x350)))
 ((_ th-lemma arith farkas 1 1 1) @x803 @x191 @x438 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        26
 :arith-assert-upper        13
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           1
 :arith-ineq-splits         1
 :arith-max-min             300
 :arith-nonlinear-bounds    18
 :arith-num-rows            10
 :arith-patches             1
 :arith-pivots              5
 :arith-pseudo-nonlinear    3
 :arith-row-summations      10
 :arith-tableau-max-columns 72
 :arith-tableau-max-rows    10
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              4
 :max-memory                3.75
 :memory                    3.19
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1239285
 :num-checks                1
 :propagations              11
 :rlimit-count              5840
 :time                      0.01
 :total-time                0.01)
