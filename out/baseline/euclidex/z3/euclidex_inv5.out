unsat
((set-logic NIA)
(declare-fun b!2 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x278 (* (- 1) (* p00 s00 b!2))))
 (let ((?x283 (* q00 r00 b!2)))
 (let ((?x221 (* (- 1) (* q00 a00 s!0))))
 (let ((?x214 (* s00 a00 q!3)))
 (let ((?x180 (* (- 1) (* r00 b00 q!3))))
 (let ((?x187 (* p00 b00 s!0)))
 (let ((?x131 (+ ?x187 ?x180 ?x214 ?x221 ?x283 ?x278)))
 (let (($x120 (<= ?x131 0)))
 (let (($x122 (= ?x131 0)))
 (let ((?x378 (* p00 s00 a!4)))
 (let ((?x360 (* q00 a00 r!1)))
 (let ((?x129 (* (- 1) (* q00 r00 a!4))))
 (let ((?x272 (* (- 1) (* s00 a00 p!5))))
 (let ((?x374 (* (- 1) (* p00 b00 r!1))))
 (let ((?x203 (* r00 b00 p!5)))
 (let ((?x117 (+ ?x187 ?x203 ?x180 ?x214 ?x221 ?x374 ?x272 ?x283 ?x278 ?x129 ?x360 ?x378)))
 (let (($x165 (= ?x117 0)))
 (let (($x223 (not $x165)))
 (let (($x217 (not $x122)))
 (let (($x166 (or $x217 $x223)))
 (let ((?x492 (+ ?x203 ?x374 ?x272 ?x129 ?x360 ?x378)))
 (let (($x321 (= ?x492 0)))
 (let ((?x302 (* p!5 b!2)))
 (let ((?x123 (* q00 a00)))
 (let (($x243 (= (+ ?x123 (* (- 1) (* p00 b00)) ?x302 (* (- 1) (* q!3 a!4))) 0)))
 (let ((?x119 (* s00 a00)))
 (let ((?x423 (+ ?x119 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) (* r!1 b!2))))
 (let ((?x41 (* q00 r00)))
 (let ((?x407 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x109 (and (= (+ ?x37 ?x407 (* r!1 q!3) (* (- 1) (* s!0 p!5))) 0) (= ?x423 0) $x243 $x321 $x122 $x166)))
 (let ((?x397 (* (- 1) (* s!0 q00 a00))))
 (let ((?x362 (* q!3 s00 a00)))
 (let ((?x361 (* (- 1) (* q!3 r00 b00))))
 (let ((?x307 (* s!0 p00 b00)))
 (let ((?x145 (* r!1 q00 a00)))
 (let ((?x139 (* (- 1) (* p!5 s00 a00))))
 (let ((?x237 (* (- 1) (* r!1 p00 b00))))
 (let ((?x215 (* p!5 r00 b00)))
 (let ((?x196 (* (- 1) (* b!2 p00 s00))))
 (let ((?x401 (* b!2 q00 r00)))
 (let ((?x211 (* (- 1) (* a!4 q00 r00))))
 (let ((?x347 (* a!4 p00 s00)))
 (let (($x270 (= (+ ?x347 ?x211 ?x401 ?x196 ?x215 ?x237 ?x139 ?x145 ?x307 ?x361 ?x362 ?x397) 0)))
 (let (($x417 (= (+ ?x401 ?x196 ?x307 ?x361 ?x362 ?x397) 0)))
 (let (($x344 (= (+ (* a!4 q!3) (* (- 1) ?x123) (* p00 b00) (* (- 1) ?x302)) 0)))
 (let ((?x137 (* r00 b00)))
 (let ((?x126 (* (- 1) ?x119)))
 (let (($x309 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x324 (and $x309 (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x126 ?x137) 0) $x344 (= (+ ?x347 ?x211 ?x215 ?x237 ?x139 ?x145) 0) $x417 (or (not $x417) (not $x270)))))
 (let (($x503 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x293 (* (- 1) (* s q00 a00))))
 (let ((?x276 (* q s00 a00)))
 (let ((?x251 (* (- 1) (* q r00 b00))))
 (let ((?x241 (* s p00 b00)))
 (let ((?x212 (* r q00 a00)))
 (let ((?x234 (* (- 1) (* p s00 a00))))
 (let ((?x233 (* (- 1) (* r p00 b00))))
 (let ((?x178 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x265 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x232 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let (($x500 (= (+ ?x63 ?x232 ?x72 ?x265 ?x178 ?x233 ?x234 ?x212 ?x241 ?x251 ?x276 ?x293) 0)))
 (let (($x304 (= (+ ?x72 ?x265 ?x241 ?x251 ?x276 ?x293) 0)))
 (let ((?x124 (* p00 b00)))
 (let ((?x123 (* q00 a00)))
 (let ((?x167 (* (- 1) ?x123)))
 (let ((?x137 (* r00 b00)))
 (let ((?x119 (* s00 a00)))
 (let ((?x126 (* (- 1) ?x119)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x128 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (and (= (+ ?x33 ?x128 ?x41 (* (- 1) (* q r))) 0) (= (+ ?x49 (* (- 1) (* b r)) ?x126 ?x137) 0) (= (+ (* a q) ?x167 ?x124 (* (- 1) (* p b))) 0) (= (+ ?x63 ?x232 ?x178 ?x233 ?x234 ?x212) 0) $x304 (or (not $x304) (not $x500)))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x366 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x199 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x273 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x412 (= ?x273 0)))
 (let (($x182 (or (not $x412) (not (= ?x199 0)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x416 (* p00 s00 a)))
 (let ((?x367 (* b00 r00 p)))
 (let ((?x106 (+ ?x367 ?x416 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x300 (* q a)))
 (let (($x179 (= (+ ?x300 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x471 (* r b)))
 (let (($x435 (= (+ ?x471 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x407 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x474 (* r q)))
 (and (= (+ ?x474 (* (- 1) (* s p)) ?x37 ?x407) 0) $x435 $x179 (= ?x106 0) $x412 $x182)))))))))))))))))))) :qid k!38))
 ))
 (let ((?x121 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x293 (* (- 1) (* s q00 a00))))
 (let ((?x276 (* q s00 a00)))
 (let ((?x251 (* (- 1) (* q r00 b00))))
 (let ((?x241 (* s p00 b00)))
 (let ((?x212 (* r q00 a00)))
 (let ((?x234 (* (- 1) (* p s00 a00))))
 (let ((?x233 (* (- 1) (* r p00 b00))))
 (let ((?x178 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x265 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x232 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let (($x500 (= (+ ?x63 ?x232 ?x72 ?x265 ?x178 ?x233 ?x234 ?x212 ?x241 ?x251 ?x276 ?x293) 0)))
 (let (($x304 (= (+ ?x72 ?x265 ?x241 ?x251 ?x276 ?x293) 0)))
 (let ((?x124 (* p00 b00)))
 (let ((?x123 (* q00 a00)))
 (let ((?x167 (* (- 1) ?x123)))
 (let ((?x137 (* r00 b00)))
 (let ((?x119 (* s00 a00)))
 (let ((?x126 (* (- 1) ?x119)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x128 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x262 (and (= (+ ?x33 ?x128 ?x41 (* (- 1) (* q r))) 0) (= (+ ?x49 (* (- 1) (* b r)) ?x126 ?x137) 0) (= (+ (* a q) ?x167 ?x124 (* (- 1) (* p b))) 0) (= (+ ?x63 ?x232 ?x178 ?x233 ?x234 ?x212) 0) $x304 (or (not $x304) (not $x500)))))
 (let ((?x199 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x273 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x412 (= ?x273 0)))
 (let (($x182 (or (not $x412) (not (= ?x199 0)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x416 (* p00 s00 a)))
 (let ((?x367 (* b00 r00 p)))
 (let ((?x106 (+ ?x367 ?x416 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x300 (* q a)))
 (let (($x179 (= (+ ?x300 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x471 (* r b)))
 (let (($x435 (= (+ ?x471 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x352 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x402 (and $x352 $x435 $x179 (= ?x106 0) $x412 $x182)))
 (rewrite (= $x402 $x262))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x184 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x199 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x273 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x412 (= ?x273 0)))
 (let (($x182 (or (not $x412) (not (= ?x199 0)))))
 (let ((?x264 (* a00 s00 p)))
 (let ((?x395 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x488 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x395 ?x264 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x346 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x381 (* s a)))
 (let (($x225 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x381 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x128 (* (- 1) ?x37)))
 (let ((?x470 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x470 ?x128 ?x41) 0) $x225 $x346 (= ?x488 0) $x412 $x182)))))))))))))))))))) :qid k!38))
 ))
 (let ((?x408 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x199 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x273 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x412 (= ?x273 0)))
 (let (($x182 (or (not $x412) (not (= ?x199 0)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x416 (* p00 s00 a)))
 (let ((?x367 (* b00 r00 p)))
 (let ((?x106 (+ ?x367 ?x416 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x300 (* q a)))
 (let (($x179 (= (+ ?x300 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x471 (* r b)))
 (let (($x435 (= (+ ?x471 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x407 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x474 (* r q)))
 (let (($x402 (and (= (+ ?x474 (* (- 1) (* s p)) ?x37 ?x407) 0) $x435 $x179 (= ?x106 0) $x412 $x182)))
 (let ((?x264 (* a00 s00 p)))
 (let ((?x395 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x489 (= (+ (* (- 1) ?x367) (* (- 1) ?x416) ?x65 ?x395 ?x264 (* (- 1) ?x69)) 0)))
 (let (($x346 (= (+ (* (- 1) ?x300) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x225 (= (+ (* (- 1) ?x471) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x202 (and (= (+ (* (- 1) ?x474) (* s p) (* (- 1) ?x37) ?x41) 0) $x225 $x346 $x489 $x412 $x182)))
 (rewrite (= $x202 $x402))))))))))))))))))))))))))))))
 ))
 (let (($x103 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x93 (- (+ (* (- b a) q00 r00) (* b00 p00 (- s r))) (* b00 (- q p) r00))))
 (let ((?x96 (+ (- ?x93 (* (- b a) p00 s00)) (* a00 (- q p) s00))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let (($x83 (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0)))
 (let (($x101 (or (not $x83) (not (= (- ?x96 (* a00 q00 (- s r))) 0)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) $x83 $x101))))))))))))))))))) :qid k!38))
 ))
 (let ((?x430 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x199 (+ (* q00 r00 (+ b (* (- 1) a))) (* b00 p00 (+ s (* (- 1) r))) (* (- 1) (* b00 r00 (+ q (* (- 1) p)))) (* (- 1) (* p00 s00 (+ b (* (- 1) a)))) (* a00 s00 (+ q (* (- 1) p))) (* (- 1) (* a00 q00 (+ s (* (- 1) r)))))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x273 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x412 (= ?x273 0)))
 (let (($x182 (or (not $x412) (not (= ?x199 0)))))
 (let ((?x264 (* a00 s00 p)))
 (let ((?x395 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x488 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x395 ?x264 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x346 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x381 (* s a)))
 (let (($x225 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x381 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x128 (* (- 1) ?x37)))
 (let ((?x470 (* s p)))
 (let (($x202 (and (= (+ (* (- 1) (* r q)) ?x470 ?x128 ?x41) 0) $x225 $x346 (= ?x488 0) $x412 $x182)))
 (let ((?x93 (- (+ (* (- b a) q00 r00) (* b00 p00 (- s r))) (* b00 (- q p) r00))))
 (let ((?x96 (+ (- ?x93 (* (- b a) p00 s00)) (* a00 (- q p) s00))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x83 (= (- ?x80 ?x81) 0)))
 (let (($x101 (or (not $x83) (not (= (- ?x96 (* a00 q00 (- s r))) 0)))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x102 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) $x83 $x101)))
 (rewrite (= $x102 $x202)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x104 (asserted $x103)))
 (let ((@x485 (mp (mp @x104 (quant-intro (proof-bind ?x430) (= $x103 $x184)) $x184) (rewrite (= $x184 $x184)) $x184)))
 (let ((@x403 (mp (mp @x485 (quant-intro (proof-bind ?x408) (= $x184 $x366)) $x366) (quant-intro (proof-bind ?x121) (= $x366 $x503)) $x503)))
 (let ((@x172 (mp (mp~ @x403 (sk (~ $x503 $x324)) $x324) (rewrite (= $x324 $x109)) $x109)))
 (let ((@x410 (and-elim @x172 $x122)))
 (let (($x284 (not (<= ?x117 0))))
 (let (($x146 (>= ?x117 0)))
 (let (($x327 (>= ?x131 0)))
 (let (($x345 (>= ?x492 0)))
 (let ((@x447 (and-elim @x172 $x321)))
 (let ((@x210 ((_ th-lemma arith farkas 1 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x321) $x345)) @x447 $x345) (hypothesis (not $x146)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x217 $x327)) @x410 $x327) false)))
 (let ((@x255 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x165 $x284 (not $x146))) (unit-resolution (and-elim @x172 $x166) @x410 $x223) (or $x284 (not $x146)))))
 (let (($x286 (<= ?x492 0)))
 ((_ th-lemma arith farkas 1 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x321) $x286)) @x447 $x286) (unit-resolution @x255 (lemma @x210 $x146) $x284) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x217 $x120)) @x410 $x120) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        7
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-num-rows            6
 :arith-pivots              2
 :arith-row-summations      3
 :arith-tableau-max-columns 44
 :arith-tableau-max-rows    6
 :conflicts                 2
 :decisions                 1
 :del-clause                17
 :max-memory                3.58
 :memory                    3.09
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                1089270
 :num-checks                1
 :propagations              12
 :rlimit-count              2618
 :time                      0.01
 :total-time                0.01)
