unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x562 (* (- 1) k!2)))
 (let ((?x147 (+ (* 3 n!0) ?x562 (* 3 (* n!0 n!0)))))
 (let (($x393 (<= ?x147 (- 1))))
 (let (($x422 (= ?x147 (- 1))))
 (let ((?x887 (+ k!2 c!3)))
 (let ((?x287 (+ 6 m!1)))
 (let ((?x496 (+ 1 n!0)))
 (let ((?x958 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x156 (+ m!1 k!2)))
 (let ((?x882 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x849 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x819 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x887 ?x887 ?x887)))
 (let ((?x739 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x648 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x893 (* (- 3) (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x887))))
 (let ((?x618 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x156 ?x156)))
 (let ((?x572 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x156 ?x156 ?x156)))
 (let ((?x992 (* (- 3) (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x887 ?x887 ?x887))))
 (let ((?x472 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x156 ?x156)))
 (let ((?x466 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x197 (* (- 3) (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x887))))
 (let ((?x409 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x407 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x351 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x324 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x320 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x318 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x614 (* (- 1) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x887 ?x887 ?x887))))
 (let ((?x295 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x207 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x205 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x179 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x168 (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x165 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x887 ?x887 ?x887 ?x887)))
 (let ((?x144 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x887 ?x887 ?x887)))
 (let ((?x826 (+ (* 3 ?x144) (* 3 ?x165) (* (- 1) ?x168) (* (- 1) ?x179) (* (- 3) ?x205) ?x207 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x887) (* 3 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156)) (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156 ?x156 ?x156) (* (- 3) ?x295) ?x614 (* (- 1) ?x318) (* 3 ?x320) (* (- 3) ?x324) (* (- 1) ?x351) (* (- 1) ?x407) (* 3 ?x409) ?x197 ?x466 (* 3 ?x472) (* (- 1) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x887)) (* (- 1) (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156 ?x156)) ?x992 (* (- 1) ?x572) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887) (* 3 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156)) (* 3 ?x618) ?x893 ?x648 (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x156 ?x887 ?x887 ?x887) (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x156 ?x156 ?x156) (* 3 ?x739) (* (- 3) ?x819) (* (- 3) ?x849) ?x882 (* 3 ?x958))))
 (let (($x692 (= ?x826 0)))
 (let (($x539 (not $x692)))
 (let ((?x373 (+ (* 2 n!0) ?x562 (* (- 3) c!3) (* n!0 k!2))))
 (let (($x762 (= ?x373 (- 1))))
 (let ((?x647 (* k!2 k!2)))
 (let ((?x842 (+ (* 9 n!0) (* (- 5) k!2) (* (- 18) c!3) ?x647 (* (- 9) (* n!0 c!3)))))
 (let (($x286 (= ?x842 (- 4))))
 (let ((?x387 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x395 (= ?x387 (- 6))))
 (let (($x489 (and $x395 $x286 $x762 $x422 $x539)))
 (let ((?x681 (+ c!3 k!2)))
 (let ((?x273 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x681 ?x681 ?x681)))
 (let ((?x750 (+ k!2 m!1)))
 (let ((?x275 (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x264 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x272 (* (- 1) (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681))))
 (let ((?x669 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x565 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x750 ?x750)))
 (let ((?x269 (* 3 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x681 ?x681 ?x681))))
 (let ((?x428 (* (- 1) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x681))))
 (let ((?x864 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x750 ?x750 ?x750)))
 (let ((?x570 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x750 ?x750)))
 (let ((?x486 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x567 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x822 (* (- 1) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681))))
 (let ((?x721 (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x723 (* (- 1) (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x750 ?x750))))
 (let ((?x730 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x931 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x458 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x912 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x673 (* 3 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x681))))
 (let ((?x725 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x913 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x641 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x966 (* 3 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x681))))
 (let ((?x649 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x623 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x779 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x702 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x696 (* ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x681 ?x681 ?x681)))
 (let ((?x682 (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x750 ?x681 ?x681 ?x681 ?x681)))
 (let ((?x620 (+ (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x750) ?x682 (* 3 ?x696) (* (- 1) ?x702) ?x779 ?x623 (* 3 ?x649) ?x966 (* (- 1) ?x641) (* (- 3) ?x913) (* (- 3) ?x725) ?x673 (* 3 ?x912) (* (- 3) ?x458) (* (- 3) ?x931) (* 3 ?x730) (* (- 1) (* ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750)) ?x723 (* (- 1) ?x721) ?x822 (* (- 3) ?x567) (* (- 1) ?x486) (* (- 3) ?x570) ?x864 (* (- 3) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750)) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x287 ?x287 ?x681 ?x681 ?x681) (* ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750 ?x681) ?x428 ?x269 (* (- 3) ?x565) ?x669 ?x272 (* (- 3) ?x264) ?x275 (* (- 3) (* ?x496 ?x496 ?x496 ?x496 ?x287 ?x287 ?x287 ?x750 ?x750 ?x750)) (* 3 ?x273))))
 (let (($x337 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x665 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x647) (* 9 (* c!3 n!0)))))
 (let (($x523 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x665 4) $x337 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x620 0)))))
 (let (($x386 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x70 (+ k m)))
 (let ((?x680 (* (- 3) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1029 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x875 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69))))
 (let ((?x987 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x383 (* (- 3) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x589 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x691 (* (- 1) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x855 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x970 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x255 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x182 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x371 (* (- 1) ?x182)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x492 (+ ?x142 ?x166 ?x176 ?x371 ?x206 ?x227 ?x247 ?x255 ?x281 ?x180 ?x555 ?x970 ?x447 ?x896 ?x336 ?x510 ?x855 ?x691 ?x540 ?x589 ?x924 ?x787 ?x724 ?x815 ?x383 ?x937 ?x962 ?x987 ?x875 ?x979 ?x1018 ?x1029 ?x388 ?x1090 ?x680 ?x1113)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x260 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x256 (= ?x260 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 $x256 $x308 $x346 (not (= ?x492 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x241 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x691 (* (- 1) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1029 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x875 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69))))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x680 (* (- 3) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x383 (* (- 3) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x970 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x855 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x589 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x255 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x182 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x371 (* (- 1) ?x182)))
 (let ((?x987 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x945 (+ ?x987 ?x371 ?x336 ?x281 ?x180 ?x206 ?x227 ?x247 ?x255 ?x142 ?x166 ?x176 ?x589 ?x540 ?x815 ?x787 ?x924 ?x555 ?x855 ?x970 ?x962 ?x383 ?x680 ?x1113 ?x875 ?x1090 ?x388 ?x510 ?x1029 ?x1018 ?x979 ?x447 ?x896 ?x691 ?x724 ?x937)))
 (let (($x235 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x384 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x219 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 (= ?x219 (- 4)) $x384 $x235 (not (= ?x945 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x765 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x70 (+ k m)))
 (let ((?x680 (* (- 3) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1029 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x875 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69))))
 (let ((?x987 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x383 (* (- 3) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x589 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x691 (* (- 1) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x855 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x970 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x255 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x182 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x371 (* (- 1) ?x182)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x492 (+ ?x142 ?x166 ?x176 ?x371 ?x206 ?x227 ?x247 ?x255 ?x281 ?x180 ?x555 ?x970 ?x447 ?x896 ?x336 ?x510 ?x855 ?x691 ?x540 ?x589 ?x924 ?x787 ?x724 ?x815 ?x383 ?x937 ?x962 ?x987 ?x875 ?x979 ?x1018 ?x1029 ?x388 ?x1090 ?x680 ?x1113)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x260 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x256 (= ?x260 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x282 (and $x172 $x256 $x308 $x346 (not (= ?x492 0)))))
 (let ((?x945 (+ ?x987 ?x371 ?x336 ?x281 ?x180 ?x206 ?x227 ?x247 ?x255 ?x142 ?x166 ?x176 ?x589 ?x540 ?x815 ?x787 ?x924 ?x555 ?x855 ?x970 ?x962 ?x383 ?x680 ?x1113 ?x875 ?x1090 ?x388 ?x510 ?x1029 ?x1018 ?x979 ?x447 ?x896 ?x691 ?x724 ?x937)))
 (let (($x235 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x384 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x219 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x994 (and $x172 (= ?x219 (- 4)) $x384 $x235 (not (= ?x945 0)))))
 (rewrite (= $x994 $x282))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x139 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x129 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x121 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x117 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x113 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x112 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x96 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x94 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (- (- (- ?x73 ?x74) ?x75) ?x76) ?x77) ?x82 ?x83 ?x84 ?x85 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) ?x87 ?x88)))
 (let ((?x92 (- ?x89 (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x103 (- (- (- (- (+ (- ?x92 ?x91) ?x94) ?x96) ?x97) ?x98) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x106 (+ ?x103 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x110 (- (- ?x106 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x120 (- (+ (- (+ ?x110 ?x111 ?x112 ?x113) ?x115) ?x117) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x131 (- (- (+ (- (+ ?x120 ?x121) ?x123) ?x125) ?x127) (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x134 (+ (- ?x131 ?x129) (* ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x134 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1111 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x691 (* (- 1) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1029 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x875 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69))))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x680 (* (- 3) (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x383 (* (- 3) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x970 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x855 (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70))))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x589 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69))))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x255 (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x182 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x371 (* (- 1) ?x182)))
 (let ((?x987 (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69))))
 (let ((?x945 (+ ?x987 ?x371 ?x336 ?x281 ?x180 ?x206 ?x227 ?x247 ?x255 ?x142 ?x166 ?x176 ?x589 ?x540 ?x815 ?x787 ?x924 ?x555 ?x855 ?x970 ?x962 ?x383 ?x680 ?x1113 ?x875 ?x1090 ?x388 ?x510 ?x1029 ?x1018 ?x979 ?x447 ?x896 ?x691 ?x724 ?x937)))
 (let (($x235 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x384 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x219 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x994 (and $x172 (= ?x219 (- 4)) $x384 $x235 (not (= ?x945 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x129 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x121 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x117 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x113 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x112 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x96 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x94 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (- (- (- ?x73 ?x74) ?x75) ?x76) ?x77) ?x82 ?x83 ?x84 ?x85 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) ?x87 ?x88)))
 (let ((?x92 (- ?x89 (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x103 (- (- (- (- (+ (- ?x92 ?x91) ?x94) ?x96) ?x97) ?x98) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x106 (+ ?x103 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x110 (- (- ?x106 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x120 (- (+ (- (+ ?x110 ?x111 ?x112 ?x113) ?x115) ?x117) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x131 (- (- (+ (- (+ ?x120 ?x121) ?x123) ?x125) ?x127) (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x134 (+ (- ?x131 ?x129) (* ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x138 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x134 0))))))
 (rewrite (= $x138 $x994))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x140 (asserted $x139)))
 (let ((@x624 (mp (mp @x140 (quant-intro (proof-bind ?x1111) (= $x139 $x241)) $x241) (rewrite (= $x241 $x241)) $x241)))
 (let ((@x521 (mp~ (mp @x624 (quant-intro (proof-bind ?x765) (= $x241 $x386)) $x386) (sk (~ $x386 $x523)) $x523)))
 (let ((@x449 (mp @x521 (rewrite (= $x523 $x489)) $x489)))
 (let ((@x745 (and-elim @x449 $x422)))
 (let ((@x181 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x422) $x393)) @x745 $x393)))
 (let (($x435 (>= ?x147 (- 1))))
 (let ((@x217 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x422) $x435)) @x745 $x435)))
 (let (($x909 (<= ?x387 (- 6))))
 (let ((@x451 (and-elim @x449 $x395)))
 (let ((@x319 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x395) $x909)) @x451 $x909)))
 (let (($x596 (>= ?x387 (- 6))))
 (let ((@x804 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x395) $x596)) @x451 $x596)))
 (let (($x768 (<= ?x842 (- 4))))
 (let ((@x756 (and-elim @x449 $x286)))
 (let ((@x980 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x286) $x768)) @x756 $x768)))
 (let (($x325 (>= ?x842 (- 4))))
 (let ((@x1100 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x286) $x325)) @x756 $x325)))
 (let (($x894 (<= ?x373 (- 1))))
 (let ((@x385 (and-elim @x449 $x762)))
 (let ((@x1052 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x762) $x894)) @x385 $x894)))
 (let (($x397 (>= ?x373 (- 1))))
 (let ((@x153 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x762) $x397)) @x385 $x397)))
 (let (($x793 (not (<= ?x826 0))))
 (let (($x627 (>= ?x826 0)))
 (let ((@x315 ((_ th-lemma arith) (hypothesis (not $x627)) @x217 @x181 @x217 @x181 @x153 @x1052 @x217 @x181 @x153 @x1052 @x217 @x181 @x153 @x1052 @x1100 @x980 @x804 @x319 @x804 @x319 @x217 @x181 false)))
 (let ((@x192 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x692 $x793 (not $x627))) (and-elim @x449 $x539) (or $x793 (not $x627)))))
 ((_ th-lemma arith) (unit-resolution @x192 (lemma @x315 $x627) $x793) @x217 @x181 @x217 @x181 @x153 @x1052 @x217 @x181 @x153 @x1052 @x217 @x181 @x153 @x1052 @x1100 @x980 @x804 @x319 @x804 @x319 @x217 @x181 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        15
 :arith-assert-upper        10
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             366
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        2
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 65
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                20.07
 :memory                    19.42
 :mk-bool-var               17
 :mk-clause                 16
 :num-allocs                1950109
 :num-checks                1
 :propagations              10
 :rlimit-count              51328
 :time                      0.05
 :total-time                0.07)
