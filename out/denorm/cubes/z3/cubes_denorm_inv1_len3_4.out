unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x352 (* (- 6) n!0)))
 (let ((?x299 (+ m!1 ?x352)))
 (let (($x381 (<= ?x299 6)))
 (let (($x306 (= ?x299 6)))
 (let ((?x390 (* (- 36) (* k!2 n!0 n!0))))
 (let ((?x568 (* (- 12) (* c!3 m!1 n!0 n!0))))
 (let ((?x572 (+ c!3 k!2)))
 (let ((?x569 (+ 6 m!1)))
 (let ((?x574 (+ 1 n!0)))
 (let ((?x347 (* (- 1) (* ?x574 ?x574 ?x574 ?x569 ?x569 ?x572 ?x572))))
 (let ((?x401 (* (- 1) (* c!3 m!1 m!1 n!0 n!0))))
 (let ((?x453 (* (- 36) (* c!3 n!0 n!0))))
 (let ((?x153 (* (- 36) k!2)))
 (let ((?x344 (* c!3 n!0)))
 (let ((?x622 (* (- 72) ?x344)))
 (let ((?x342 (* ?x574 ?x574 ?x574 ?x569 ?x569 ?x569)))
 (let ((?x168 (* (- 12) (* c!3 m!1))))
 (let ((?x279 (* k!2 n!0)))
 (let ((?x151 (* (- 72) ?x279)))
 (let ((?x202 (* (- 2) (* c!3 m!1 m!1 n!0))))
 (let ((?x145 (* (- 36) c!3)))
 (let ((?x136 (* (- 1) (* c!3 m!1 m!1))))
 (let ((?x459 (* (- 24) (* c!3 m!1 n!0))))
 (let ((?x88 (+ ?x459 ?x136 (* (- 12) (* m!1 k!2)) ?x145 ?x202 ?x151 (* (- 12) (* m!1 k!2 n!0 n!0)) ?x168 ?x342 ?x622 ?x153 ?x453 (* (- 1) (* m!1 m!1 k!2 n!0 n!0)) ?x401 (* (- 1) (* m!1 m!1 k!2)) (* (- 2) (* m!1 m!1 k!2 n!0)) (* (- 24) (* m!1 k!2 n!0)) ?x347 ?x568 ?x390)))
 (let ((?x246 (+ (- 6) m!1 ?x352)))
 (let ((?x509 (* ?x246 ?x88)))
 (let (($x476 (= ?x509 0)))
 (let (($x510 (not $x476)))
 (let (($x497 (= (+ (* 3 (* n!0 n!0)) (* (- 1) k!2) (* 3 n!0)) (- 1))))
 (let ((?x305 (* (- 1) (* k!2 k!2))))
 (let ((?x349 (* (- 9) n!0)))
 (let ((?x351 (* 5 k!2)))
 (let ((?x345 (* 9 ?x344)))
 (let ((?x228 (* 18 c!3)))
 (let (($x505 (and $x306 (= (+ ?x228 ?x345 ?x351 ?x349 ?x305) 4) (= (+ (* 3 c!3) (* (- 1) ?x279) k!2 (* (- 2) n!0)) 1) $x497 $x510)))
 (let ((?x631 (+ ?x145 ?x153 ?x151 ?x622 ?x347 ?x342 ?x568 ?x390 ?x453 (* (- 2) (* k!2 m!1 m!1 n!0)) ?x202 (* (- 24) (* k!2 m!1 n!0)) ?x459 (* (- 1) (* k!2 m!1 m!1)) ?x136 (* (- 12) (* k!2 m!1)) ?x168 ?x401 (* (- 1) (* k!2 m!1 m!1 n!0 n!0)) (* (- 12) (* k!2 m!1 n!0 n!0)))))
 (let (($x146 (and $x306 (= (+ ?x228 ?x351 ?x349 ?x305 ?x345) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x279)) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= (* ?x246 ?x631) 0)))))
 (let (($x385 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x573 (* (- 12) (* k m n n))))
 (let ((?x620 (* (- 1) (* k m m n n))))
 (let ((?x619 (* (- 1) (* c m m n n))))
 (let ((?x577 (* (- 12) (* c m))))
 (let ((?x578 (* (- 12) (* k m))))
 (let ((?x623 (* (- 1) (* c m m))))
 (let ((?x625 (* (- 1) (* k m m))))
 (let ((?x581 (* (- 24) (* c m n))))
 (let ((?x583 (* (- 24) (* k m n))))
 (let ((?x587 (* (- 2) (* c m m n))))
 (let ((?x591 (* (- 2) (* k m m n))))
 (let ((?x595 (* (- 36) (* c n n))))
 (let ((?x600 (* (- 36) (* k n n))))
 (let ((?x597 (* (- 12) (* c m n n))))
 (let ((?x359 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x273 (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x359)))
 (let ((?x234 (* (- 1) (* ?x315 ?x315 ?x315 ?x359 ?x359 (+ c k) (+ c k)))))
 (let ((?x148 (* c n)))
 (let ((?x604 (* (- 72) ?x148)))
 (let ((?x55 (* k n)))
 (let ((?x605 (* (- 72) ?x55)))
 (let ((?x611 (* (- 36) k)))
 (let ((?x612 (* (- 36) c)))
 (let ((?x129 (+ ?x612 ?x611 ?x605 ?x604 ?x234 ?x273 ?x597 ?x600 ?x595 ?x591 ?x587 ?x583 ?x581 ?x625 ?x623 ?x578 ?x577 ?x619 ?x620 ?x573)))
 (let ((?x109 (* (- 6) n)))
 (let ((?x115 (+ (- 6) m ?x109)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 ?x148)) 4)))
 (let (($x126 (= (+ m ?x109) 6)))
 (and $x126 $x210 $x262 $x300 (not (= (* ?x115 ?x129) 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x112 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ c k)))
 (let ((?x359 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x234 (* (- 1) (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x74 ?x74))))
 (let ((?x273 (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x359)))
 (let ((?x109 (* (- 6) n)))
 (let ((?x115 (+ (- 6) m ?x109)))
 (let (($x276 (= (* ?x115 (+ ?x273 (* (- 1) (* ?x315 ?x315 ?x359 ?x359 ?x74)) ?x234)) 0)))
 (let (($x251 (not $x276)))
 (let (($x90 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x172 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m ?x109) 6)))
 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x172 $x90 $x251)))))))))))))))))) :qid k!34))
 ))
 (let ((?x455 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x573 (* (- 12) (* k m n n))))
 (let ((?x620 (* (- 1) (* k m m n n))))
 (let ((?x619 (* (- 1) (* c m m n n))))
 (let ((?x577 (* (- 12) (* c m))))
 (let ((?x578 (* (- 12) (* k m))))
 (let ((?x623 (* (- 1) (* c m m))))
 (let ((?x625 (* (- 1) (* k m m))))
 (let ((?x581 (* (- 24) (* c m n))))
 (let ((?x583 (* (- 24) (* k m n))))
 (let ((?x587 (* (- 2) (* c m m n))))
 (let ((?x591 (* (- 2) (* k m m n))))
 (let ((?x595 (* (- 36) (* c n n))))
 (let ((?x600 (* (- 36) (* k n n))))
 (let ((?x597 (* (- 12) (* c m n n))))
 (let ((?x359 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x273 (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x359)))
 (let ((?x234 (* (- 1) (* ?x315 ?x315 ?x315 ?x359 ?x359 (+ c k) (+ c k)))))
 (let ((?x148 (* c n)))
 (let ((?x604 (* (- 72) ?x148)))
 (let ((?x55 (* k n)))
 (let ((?x605 (* (- 72) ?x55)))
 (let ((?x611 (* (- 36) k)))
 (let ((?x612 (* (- 36) c)))
 (let ((?x129 (+ ?x612 ?x611 ?x605 ?x604 ?x234 ?x273 ?x597 ?x600 ?x595 ?x591 ?x587 ?x583 ?x581 ?x625 ?x623 ?x578 ?x577 ?x619 ?x620 ?x573)))
 (let ((?x109 (* (- 6) n)))
 (let ((?x115 (+ (- 6) m ?x109)))
 (let (($x300 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x262 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x210 (= (+ ?x40 ?x44 ?x212 ?x213 (* 9 ?x148)) 4)))
 (let (($x126 (= (+ m ?x109) 6)))
 (let (($x442 (and $x126 $x210 $x262 $x300 (not (= (* ?x115 ?x129) 0)))))
 (let ((?x250 (* ?x115 (+ ?x273 (* (- 1) (* ?x315 ?x315 ?x359 ?x359 (+ c k))) ?x234))))
 (let (($x251 (not (= ?x250 0))))
 (let (($x90 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x172 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x322 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x172 $x90 $x251)))
 (rewrite (= $x322 $x442)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x253 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x74 (+ c k)))
 (let ((?x359 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x234 (* (- 1) (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x74 ?x74))))
 (let ((?x273 (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x359)))
 (let ((?x109 (* (- 6) n)))
 (let ((?x115 (+ (- 6) m ?x109)))
 (let (($x276 (= (* ?x115 (+ ?x273 (* (- 1) (* ?x315 ?x315 ?x359 ?x359 ?x74)) ?x234)) 0)))
 (let (($x251 (not $x276)))
 (let (($x90 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x636 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x503 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m ?x109) 6)))
 (and $x126 (= ?x503 (- 4)) $x636 $x90 $x251)))))))))))))))) :qid k!34))
 ))
 (let ((?x247 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ c k)))
 (let ((?x359 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x234 (* (- 1) (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x74 ?x74))))
 (let ((?x273 (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x359)))
 (let ((?x109 (* (- 6) n)))
 (let ((?x115 (+ (- 6) m ?x109)))
 (let (($x276 (= (* ?x115 (+ ?x273 (* (- 1) (* ?x315 ?x315 ?x359 ?x359 ?x74)) ?x234)) 0)))
 (let (($x251 (not $x276)))
 (let (($x90 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x172 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x213 (* (- 1) ?x49)))
 (let ((?x212 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x126 (= (+ m ?x109) 6)))
 (let (($x322 (and $x126 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x212 ?x213) 4) $x172 $x90 $x251)))
 (let (($x636 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x503 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x289 (and $x126 (= ?x503 (- 4)) $x636 $x90 $x251)))
 (rewrite (= $x289 $x322)))))))))))))))))))))))))
 ))
 (let (($x84 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ n 1)))
 (let ((?x72 (+ m 6)))
 (let ((?x74 (+ c k)))
 (let ((?x78 (- (- (* ?x72 ?x72 ?x72 ?x69 ?x69 ?x69) (* ?x74 ?x72 ?x72 ?x69 ?x69)) (* ?x74 ?x74 ?x72 ?x72 ?x69 ?x69 ?x69))))
 (let (($x80 (= (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) ?x78) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x80))))))))))))))) :qid k!34))
 ))
 (let ((?x280 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x74 (+ c k)))
 (let ((?x359 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x234 (* (- 1) (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x74 ?x74))))
 (let ((?x273 (* ?x315 ?x315 ?x315 ?x359 ?x359 ?x359)))
 (let ((?x109 (* (- 6) n)))
 (let ((?x115 (+ (- 6) m ?x109)))
 (let (($x276 (= (* ?x115 (+ ?x273 (* (- 1) (* ?x315 ?x315 ?x359 ?x359 ?x74)) ?x234)) 0)))
 (let (($x251 (not $x276)))
 (let (($x90 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x636 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x503 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x126 (= (+ m ?x109) 6)))
 (let (($x289 (and $x126 (= ?x503 (- 4)) $x636 $x90 $x251)))
 (let ((?x69 (+ n 1)))
 (let ((?x72 (+ m 6)))
 (let ((?x78 (- (- (* ?x72 ?x72 ?x72 ?x69 ?x69 ?x69) (* ?x74 ?x72 ?x72 ?x69 ?x69)) (* ?x74 ?x74 ?x72 ?x72 ?x69 ?x69 ?x69))))
 (let (($x80 (= (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) ?x78) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x83 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x80)))))
 (rewrite (= $x83 $x289)))))))))))))))))))))))))))))
 ))
 (let ((@x85 (asserted $x84)))
 (let ((@x157 (mp (mp @x85 (quant-intro (proof-bind ?x280) (= $x84 $x253)) $x253) (rewrite (= $x253 $x253)) $x253)))
 (let ((@x571 (mp (mp @x157 (quant-intro (proof-bind ?x247) (= $x253 $x112)) $x112) (quant-intro (proof-bind ?x455) (= $x112 $x385)) $x385)))
 (let ((@x119 (mp (mp~ @x571 (sk (~ $x385 $x146)) $x146) (rewrite (= $x146 $x505)) $x505)))
 (let ((@x624 (and-elim @x119 $x306)))
 (let ((@x240 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x306) $x381)) @x624 $x381)))
 (let (($x449 (>= ?x299 6)))
 (let ((@x633 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x306) $x449)) @x624 $x449)))
 (let (($x346 (not (<= ?x509 0))))
 (let (($x190 (>= ?x509 0)))
 (let ((@x282 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x476 $x346 (not $x190))) (and-elim @x119 $x510) (or $x346 (not $x190)))))
 (let ((@x507 (unit-resolution @x282 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x190)) @x633 @x240 false) $x190) $x346)))
 ((_ th-lemma arith farkas 1 1 1) @x507 @x633 @x240 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        16
 :arith-assert-upper        13
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-fixed-eqs           1
 :arith-gcd-tests           1
 :arith-ineq-splits         1
 :arith-max-min             174
 :arith-nonlinear-bounds    3
 :arith-num-rows            9
 :arith-patches             1
 :arith-pivots              5
 :arith-pseudo-nonlinear    3
 :arith-row-summations      7
 :arith-tableau-max-columns 48
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              4
 :max-memory                3.65
 :memory                    3.13
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1144309
 :num-checks                1
 :propagations              11
 :rlimit-count              3413
 :time                      0.01
 :total-time                0.01)
