unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun q!3 () Int)
(declare-fun s!0 () Int)
(declare-fun p!5 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x171 (* q!3 r!1)))
 (let ((?x37 (* p00 s00)))
 (let ((?x614 (+ ?x37 (* (- 1) (* q00 r00)) (* (- 1) (* p!5 s!0)) ?x171)))
 (let (($x684 (>= ?x614 0)))
 (let (($x615 (= ?x614 0)))
 (let ((?x337 (* (- 1) ?x171)))
 (let ((?x115 (* p!5 s!0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x604 (+ ?x133 ?x41 ?x115 ?x337)))
 (let ((?x257 (+ p!5 (* (- 1) q!3))))
 (let ((?x329 (+ a!4 (* (- 1) b!2))))
 (let ((?x155 (* (- 1) s!0)))
 (let ((?x685 (+ ?x155 r!1)))
 (let ((?x681 (* ?x685 ?x685 ?x685 ?x685 ?x685 ?x329 ?x329 ?x329 ?x257 ?x257 ?x257 ?x257 ?x257 ?x604 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let (($x679 (= ?x681 0)))
 (let ((?x164 (+ (* (- 1) p!5) q!3)))
 (let ((?x176 (+ (* (- 1) a!4) b!2)))
 (let ((?x227 (* (- 1) r!1)))
 (let ((?x165 (+ s!0 ?x227)))
 (let ((?x544 (* ?x165 ?x165 ?x165 ?x165 ?x165 ?x176 ?x176 ?x176 ?x176 ?x176 ?x164 ?x164 ?x164 ?x604 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5)))
 (let (($x546 (= ?x544 0)))
 (let (($x600 (not $x546)))
 (let (($x693 (or $x600 (not $x679))))
 (let ((?x581 (+ (* q00 r00 b!2) (* (- 1) (* r00 b00 q!3)) (* (- 1) (* p00 s00 b!2)) (* (- 1) (* q00 a00 s!0)) (* s00 a00 q!3) (* p00 b00 s!0))))
 (let ((?x540 (+ (* p00 s00 a!4) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5) (* q00 a00 r!1) (* (- 1) (* s00 a00 p!5)) (* (- 1) (* p00 b00 r!1)))))
 (let ((?x179 (* p!5 b!2)))
 (let ((?x128 (* q00 a00)))
 (let (($x282 (= (+ ?x128 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) ?x179) 0)))
 (let ((?x124 (* s00 a00)))
 (let ((?x139 (+ ?x124 (* (- 1) (* r00 b00)) (* (- 1) (* a!4 s!0)) (* r!1 b!2))))
 (let (($x694 (and $x615 (= ?x139 0) $x282 (= ?x540 0) (= ?x581 0) $x693)))
 (let ((?x339 (+ ?x115 ?x133 ?x41 ?x337)))
 (let ((?x311 (+ r!1 ?x155)))
 (let ((?x196 (* ?x311 ?x311 ?x311 ?x311 ?x311 ?x329 ?x329 ?x329 ?x257 ?x257 ?x257 ?x257 ?x257 ?x339 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let ((?x245 (+ ?x227 s!0)))
 (let ((?x158 (* ?x245 ?x245 ?x245 ?x245 ?x245 ?x176 ?x176 ?x176 ?x176 ?x176 ?x164 ?x164 ?x164 ?x339 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5)))
 (let ((?x215 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x151 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x280 (= (+ (* a!4 q!3) (* (- 1) ?x128) (* p00 b00) (* (- 1) ?x179)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x184 (* a!4 s!0)))
 (let (($x218 (and (= ?x339 0) (= (+ ?x184 (* (- 1) (* b!2 r!1)) ?x131 ?x142) 0) $x280 (= ?x151 0) (= ?x215 0) (or (not (= ?x158 0)) (not (= ?x196 0))))))
 (let (($x222 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x527 (* ?x252 ?x252 ?x252 ?x252 ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x269 ?x147 s s s s s b b b b b q q q)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x265 (+ ?x253 q)))
 (let ((?x573 (* (- 1) a)))
 (let ((?x569 (+ ?x573 b)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x318 (+ ?x313 s)))
 (let ((?x597 (* ?x318 ?x318 ?x318 ?x318 ?x318 ?x569 ?x569 ?x569 ?x569 ?x569 ?x265 ?x265 ?x265 ?x147 r r r r r a a a p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x597 0)) (not (= ?x527 0)))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x234 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x252 ?x252 ?x252 ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x269 ?x310 s s s s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x606 (+ q ?x253)))
 (let ((?x573 (* (- 1) a)))
 (let ((?x232 (+ b ?x573)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x606 ?x606 ?x606 ?x221 r r r r r a a a p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x616 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x323 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x199 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) (= ?x199 0) $x323 (= ?x616 0) (= ?x197 0) (or (not (= ?x122 0)) (not (= ?x213 0)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x130 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x527 (* ?x252 ?x252 ?x252 ?x252 ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x269 ?x147 s s s s s b b b b b q q q)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x265 (+ ?x253 q)))
 (let ((?x573 (* (- 1) a)))
 (let ((?x569 (+ ?x573 b)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x318 (+ ?x313 s)))
 (let ((?x597 (* ?x318 ?x318 ?x318 ?x318 ?x318 ?x569 ?x569 ?x569 ?x569 ?x569 ?x265 ?x265 ?x265 ?x147 r r r r r a a a p p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (let (($x548 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x597 0)) (not (= ?x527 0))))))
 (let ((?x213 (* ?x252 ?x252 ?x252 ?x252 ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x269 (+ (* (- 1) (* ?x252 q)) (* ?x269 s) ?x133 ?x41) s s s s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q ?x253) r)) (* (+ s ?x313) p) ?x133 ?x41)))
 (let ((?x606 (+ q ?x253)))
 (let ((?x232 (+ b ?x573)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x606 ?x606 ?x606 ?x221 r r r r r a a a p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x616 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x323 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x199 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x611 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) (= ?x199 0) $x323 (= ?x616 0) (= ?x197 0) (or (not (= ?x122 0)) (not (= ?x213 0))))))
 (rewrite (= $x611 $x548))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x97 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) (* p00 s00)) ?x41) ?x31 a ?x102 p p r r ?x97 ?x97 ?x97 ?x31 a ?x102 ?x102 p p ?x95 ?x97 ?x31 a ?x102 ?x102 p ?x95 ?x95 r r r ?x97)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x92 (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) (* p00 s00)) ?x41) ?x31 ?x91 b ?x86 ?x86 ?x84 ?x84 s s s ?x31 ?x91 b b ?x86 ?x86 q s ?x31 ?x91 b b ?x86 q q ?x84 ?x84 ?x84 s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x236 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x252 ?x252 ?x252 ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x269 ?x310 s s s s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x606 (+ q ?x253)))
 (let ((?x573 (* (- 1) a)))
 (let ((?x232 (+ b ?x573)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x295 ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x606 ?x606 ?x606 ?x221 r r r r r a a a p p p p p)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x616 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x323 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x199 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x611 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) (= ?x199 0) $x323 (= ?x616 0) (= ?x197 0) (or (not (= ?x122 0)) (not (= ?x213 0))))))
 (let ((?x97 (- s r)))
 (let ((?x95 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) ?x37) ?x41) ?x31 a ?x102 p p r r ?x97 ?x97 ?x97 ?x31 a ?x102 ?x102 p p ?x95 ?x97 ?x31 a ?x102 ?x102 p ?x95 ?x95 r r r ?x97)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x92 (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) ?x37) ?x41) ?x31 ?x91 b ?x86 ?x86 ?x84 ?x84 s s s ?x31 ?x91 b b ?x86 ?x86 q s ?x31 ?x91 b b ?x86 q q ?x84 ?x84 ?x84 s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x107 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))
 (rewrite (= $x107 $x611)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x193 (mp (mp @x109 (quant-intro (proof-bind ?x236) (= $x108 $x234)) $x234) (rewrite (= $x234 $x234)) $x234)))
 (let ((@x338 (mp~ (mp @x193 (quant-intro (proof-bind ?x130) (= $x234 $x222)) $x222) (sk (~ $x222 $x218)) $x218)))
 (let ((@x691 (mp @x338 (rewrite (= $x218 $x694)) $x694)))
 (let ((@x689 (and-elim @x691 $x615)))
 (let ((@x560 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x615) $x684)) @x689 $x684)))
 (let (($x683 (<= ?x614 0)))
 (let ((@x692 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x615) $x683)) @x689 $x683)))
 (let (($x562 (not (<= ?x544 0))))
 (let (($x113 (>= ?x681 0)))
 (let (($x219 (<= ?x681 0)))
 (let ((@x576 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x679 (not $x219) (not $x113))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x219)) @x692 @x560 false) $x219) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x113)) @x692 @x560 false) $x113) $x679)))
 (let (($x536 (>= ?x544 0)))
 (let ((@x557 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x546 $x562 (not $x536))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x536)) @x692 @x560 false) $x536) (unit-resolution (and-elim @x691 $x693) @x576 $x600) $x562)))
 ((_ th-lemma arith farkas 1 1 1) @x557 @x692 @x560 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                19.57
 :memory                    19.08
 :mk-bool-var               33
 :mk-clause                 40
 :num-allocs                567308
 :num-checks                1
 :propagations              19
 :rlimit-count              8523
 :time                      0.01
 :total-time                0.03)
