unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x733 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 8) r!2) (* (- 1) (* q!3 d!1 d!1)) (* 4 (* r!2 d!1)) (* 2 (* q!3 d!1)) (* (- 4) (* x!0 d!1)))))
 (let (($x401 (>= ?x733 0)))
 (let (($x539 (= ?x733 0)))
 (let ((?x1082 (* x!0 d!1)))
 (let ((?x1091 (* 4 ?x1082)))
 (let ((?x857 (* q!3 d!1)))
 (let ((?x402 (* (- 2) ?x857)))
 (let ((?x675 (* r!2 d!1)))
 (let ((?x505 (* (- 4) ?x675)))
 (let ((?x351 (* q!3 d!1 d!1)))
 (let ((?x1001 (* 8 r!2)))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x172 (+ ?x146 ?x194 ?x178 ?x244 ?x282 ?x1001 ?x351 ?x505 ?x402 ?x1091)))
 (let ((?x576 (* (- 1) x!0)))
 (let ((?x365 (* 2 r!2)))
 (let ((?x702 (+ q!3 ?x365 ?x576)))
 (let ((?x875 (+ 2 d!1)))
 (let ((?x876 (* ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x702 ?x172 r!2 q!3)))
 (let (($x379 (= ?x876 0)))
 (let (($x1012 (not $x379)))
 (let ((?x409 (+ 2 q!3 ?x365 ?x576 d!1)))
 (let ((?x703 (+ 4 q!3)))
 (let ((?x422 (* ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x703 ?x409 ?x172 r!2)))
 (let (($x1009 (= ?x422 0)))
 (let ((?x615 (+ (- 2) q!3 ?x365 ?x576 (* (- 1) d!1))))
 (let ((?x851 (+ (- 4) q!3)))
 (let ((?x843 (* ?x851 ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x615 ?x172 r!2)))
 (let (($x171 (= ?x843 0)))
 (let ((?x673 (+ (- 4) q!3 ?x365 ?x576 (* (- 2) d!1))))
 (let ((?x156 (+ (- 8) q!3)))
 (let ((?x760 (* ?x156 ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x673 ?x172 r!2)))
 (let (($x858 (= ?x760 0)))
 (let (($x899 (not $x858)))
 (let (($x536 (or $x899 (not $x171) (not $x1009) $x1012)))
 (let (($x519 (and $x539 $x536)))
 (let ((?x617 (+ ?x1001 ?x146 ?x194 ?x178 ?x244 ?x282 ?x402 ?x351 ?x505 ?x1091)))
 (let (($x657 (not (= (* ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x702 ?x617 r!2 q!3) 0))))
 (let (($x1018 (not (= (* ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x703 ?x409 ?x617 r!2) 0))))
 (let (($x662 (not (= (* ?x851 ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x615 ?x617 r!2) 0))))
 (let (($x408 (not (= (* ?x156 ?x875 ?x875 ?x875 ?x875 ?x875 ?x875 ?x673 ?x617 r!2) 0))))
 (let (($x693 (and (= ?x617 0) (or $x408 $x662 $x1018 $x657))))
 (let (($x1099 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x462 (* 4 (* x d))))
 (let ((?x798 (* r d)))
 (let ((?x797 (* (- 4) ?x798)))
 (let ((?x611 (* q d d)))
 (let ((?x799 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x639 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x462)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x828 (+ q ?x117 ?x143)))
 (let ((?x747 (+ 2 d)))
 (let (($x937 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x828 ?x639 r q) 0))))
 (let ((?x1083 (+ 2 q ?x117 ?x143 d)))
 (let ((?x746 (+ 4 q)))
 (let (($x206 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1083 ?x639 r) 0))))
 (let ((?x870 (* (- 1) d)))
 (let ((?x209 (+ (- 2) q ?x117 ?x143 ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x383 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x209 ?x639 r) 0))))
 (let ((?x915 (* (- 2) d)))
 (let ((?x223 (+ (- 4) q ?x117 ?x143 ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x599 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x223 ?x639 r) 0))))
 (let (($x358 (= ?x639 0)))
 (and $x358 (or $x599 $x383 $x206 $x937))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x525 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x462 (* 4 (* x d))))
 (let ((?x798 (* r d)))
 (let ((?x797 (* (- 4) ?x798)))
 (let ((?x611 (* q d d)))
 (let ((?x799 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x639 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x462)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x828 (+ q ?x117 ?x143)))
 (let ((?x747 (+ 2 d)))
 (let (($x937 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x828 ?x639 r q) 0))))
 (let ((?x778 (* (- 8) d)))
 (let ((?x768 (* 2 (* d 4))))
 (let ((?x1083 (+ 2 q ?x117 ?x143 d)))
 (let ((?x746 (+ 4 q)))
 (let ((?x667 (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1083 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x768 ?x797 ?x462 ?x778) r)))
 (let ((?x833 (* 8 d)))
 (let ((?x1010 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 (* (- 4) (* d 2)) ?x799 ?x611 ?x797 ?x462 ?x833)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x209 (+ (- 2) q ?x117 ?x143 ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x318 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x209 ?x1010 r) 0))))
 (let ((?x906 (* 16 d)))
 (let ((?x315 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 (* (- 8) (* d 2)) ?x799 ?x611 ?x797 ?x462 ?x906)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x223 (+ (- 4) q ?x117 ?x143 ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x179 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x223 ?x315 r) 0))))
 (let (($x358 (= ?x639 0)))
 (and $x358 (or $x179 $x318 (not (= ?x667 0)) $x937))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x504 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x462 (* 4 (* x d))))
 (let ((?x798 (* r d)))
 (let ((?x797 (* (- 4) ?x798)))
 (let ((?x611 (* q d d)))
 (let ((?x799 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x639 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x462)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x828 (+ q ?x117 ?x143)))
 (let ((?x747 (+ 2 d)))
 (let (($x937 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x828 ?x639 r q) 0))))
 (let ((?x1083 (+ 2 q ?x117 ?x143 d)))
 (let ((?x746 (+ 4 q)))
 (let (($x206 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1083 ?x639 r) 0))))
 (let ((?x870 (* (- 1) d)))
 (let ((?x209 (+ (- 2) q ?x117 ?x143 ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x383 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x209 ?x639 r) 0))))
 (let ((?x915 (* (- 2) d)))
 (let ((?x223 (+ (- 4) q ?x117 ?x143 ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x599 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x223 ?x639 r) 0))))
 (let (($x358 (= ?x639 0)))
 (let (($x548 (and $x358 (or $x599 $x383 $x206 $x937))))
 (let ((?x778 (* (- 8) d)))
 (let ((?x768 (* 2 (* d 4))))
 (let ((?x667 (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1083 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x768 ?x797 ?x462 ?x778) r)))
 (let ((?x833 (* 8 d)))
 (let ((?x1010 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 (* (- 4) (* d 2)) ?x799 ?x611 ?x797 ?x462 ?x833)))
 (let (($x318 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x209 ?x1010 r) 0))))
 (let ((?x906 (* 16 d)))
 (let ((?x315 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 (* (- 8) (* d 2)) ?x799 ?x611 ?x797 ?x462 ?x906)))
 (let (($x179 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x223 ?x315 r) 0))))
 (let (($x638 (and $x358 (or $x179 $x318 (not (= ?x667 0)) $x937))))
 (rewrite (= $x638 $x548)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x570 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x816 (* 4 (* d00 r00))))
 (let ((?x915 (* (- 2) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x786 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x747 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x370 (* 4 (* ?x747 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x532 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x378 (+ (- 32) ?x391 ?x532 ?x30 (* (- 16) d) ?x146 ?x370 ?x178 ?x194 (* (+ (- 8) q) ?x747 ?x747) (* (- 2) (* (+ (- 8) q) ?x747)) ?x244 (* (- 4) (* ?x747 ?x786)) ?x816)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x873 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x786 ?x378 r) 0))))
 (let ((?x742 (+ ?x391 ?x532 ?x30 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 q) (* (- 2) (* ?x747 q)) ?x244 (* (- 4) (* ?x747 (+ ?x117 ?x143 q))) ?x816)))
 (let ((?x272 (+ ?x117 ?x143 q)))
 (let (($x822 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x272 ?x742 r q) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x801 (+ 16 ?x391 ?x532 ?x30 ?x833 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 (+ 4 q)) (* (- 2) (* ?x747 (+ 4 q))) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x816)))
 (let ((?x823 (+ 2 ?x117 ?x143 q d)))
 (let ((?x746 (+ 4 q)))
 (let (($x787 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x823 ?x801 r) 0))))
 (let ((?x778 (* (- 8) d)))
 (let ((?x298 (+ (- 16) ?x391 ?x532 ?x30 ?x778 ?x146 ?x370 ?x178 ?x194 (* (+ (- 4) q) ?x747 ?x747) (* (- 2) (* (+ (- 4) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 2) ?x117 ?x143 q (* (- 1) d)))) ?x816)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x874 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x387 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x874 ?x298 r) 0))))
 (let ((?x462 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x263 (+ ?x175 ?x146 ?x462 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x816)))
 (let (($x271 (= ?x263 0)))
 (and $x271 (or $x387 $x787 $x822 $x873)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x581 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x462 (* 4 (* x d))))
 (let ((?x798 (* r d)))
 (let ((?x797 (* (- 4) ?x798)))
 (let ((?x611 (* q d d)))
 (let ((?x799 (* (- 2) (* q d))))
 (let ((?x281 (* r00 d00)))
 (let ((?x282 (* 4 ?x281)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x175 (* 8 r)))
 (let ((?x639 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x797 ?x462)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x828 (+ q ?x117 ?x143)))
 (let ((?x747 (+ 2 d)))
 (let (($x937 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x828 ?x639 r q) 0))))
 (let ((?x778 (* (- 8) d)))
 (let ((?x768 (* 2 (* d 4))))
 (let ((?x1083 (+ 2 q ?x117 ?x143 d)))
 (let ((?x746 (+ 4 q)))
 (let ((?x667 (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x1083 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 ?x799 ?x611 ?x768 ?x797 ?x462 ?x778) r)))
 (let ((?x833 (* 8 d)))
 (let ((?x1010 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 (* (- 4) (* d 2)) ?x799 ?x611 ?x797 ?x462 ?x833)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x209 (+ (- 2) q ?x117 ?x143 ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x318 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x209 ?x1010 r) 0))))
 (let ((?x906 (* 16 d)))
 (let ((?x315 (+ ?x175 ?x146 ?x194 ?x178 ?x244 ?x282 (* (- 8) (* d 2)) ?x799 ?x611 ?x797 ?x462 ?x906)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x223 (+ (- 4) q ?x117 ?x143 ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x179 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x223 ?x315 r) 0))))
 (let (($x358 (= ?x639 0)))
 (let (($x638 (and $x358 (or $x179 $x318 (not (= ?x667 0)) $x937))))
 (let ((?x816 (* 4 (* d00 r00))))
 (let ((?x370 (* 4 (* ?x747 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x532 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x378 (+ (- 32) ?x391 ?x532 ?x30 (* (- 16) d) ?x146 ?x370 ?x178 ?x194 (* ?x914 ?x747 ?x747) (* (- 2) (* ?x914 ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 4) ?x117 ?x143 q ?x915))) ?x816)))
 (let ((?x786 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let (($x873 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x786 ?x378 r) 0))))
 (let ((?x742 (+ ?x391 ?x532 ?x30 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 q) (* (- 2) (* ?x747 q)) ?x244 (* (- 4) (* ?x747 (+ ?x117 ?x143 q))) ?x816)))
 (let ((?x272 (+ ?x117 ?x143 q)))
 (let (($x822 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x272 ?x742 r q) 0))))
 (let ((?x801 (+ 16 ?x391 ?x532 ?x30 ?x833 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 ?x746) (* (- 2) (* ?x747 ?x746)) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x816)))
 (let ((?x823 (+ 2 ?x117 ?x143 q d)))
 (let (($x787 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x823 ?x801 r) 0))))
 (let ((?x298 (+ (- 16) ?x391 ?x532 ?x30 ?x778 ?x146 ?x370 ?x178 ?x194 (* ?x847 ?x747 ?x747) (* (- 2) (* ?x847 ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 2) ?x117 ?x143 q ?x870))) ?x816)))
 (let ((?x874 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let (($x387 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x874 ?x298 r) 0))))
 (let ((?x263 (+ ?x175 ?x146 ?x462 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x816)))
 (let (($x271 (= ?x263 0)))
 (let (($x499 (and $x271 (or $x387 $x787 $x822 $x873))))
 (rewrite (= $x499 $x638)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x399 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x816 (* 4 (* d00 r00))))
 (let ((?x870 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x874 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x747 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x370 (* 4 (* ?x747 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x778 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x532 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x298 (+ (- 16) ?x391 ?x532 ?x30 ?x778 ?x146 ?x370 ?x178 ?x194 (* (+ (- 4) q) ?x747 ?x747) (* (- 2) (* (+ (- 4) q) ?x747)) ?x244 (* (- 4) (* ?x747 ?x874)) ?x816)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x387 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x874 ?x298 r) 0))))
 (let ((?x378 (+ (- 32) ?x391 ?x532 ?x30 (* (- 16) d) ?x146 ?x370 ?x178 ?x194 (* (+ (- 8) q) ?x747 ?x747) (* (- 2) (* (+ (- 8) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 4) ?x117 ?x143 q (* (- 2) d)))) ?x816)))
 (let ((?x915 (* (- 2) d)))
 (let ((?x786 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x873 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x786 ?x378 r) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x801 (+ 16 ?x391 ?x532 ?x30 ?x833 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 (+ 4 q)) (* (- 2) (* ?x747 (+ 4 q))) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x816)))
 (let ((?x823 (+ 2 ?x117 ?x143 q d)))
 (let ((?x746 (+ 4 q)))
 (let (($x787 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x823 ?x801 r) 0))))
 (let ((?x742 (+ ?x391 ?x532 ?x30 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 q) (* (- 2) (* ?x747 q)) ?x244 (* (- 4) (* ?x747 (+ ?x117 ?x143 q))) ?x816)))
 (let ((?x272 (+ ?x117 ?x143 q)))
 (let (($x822 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x272 ?x742 r q) 0))))
 (let ((?x462 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x263 (+ ?x175 ?x146 ?x462 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x816)))
 (let (($x271 (= ?x263 0)))
 (and $x271 (or $x822 $x787 $x873 $x387)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x480 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x816 (* 4 (* d00 r00))))
 (let ((?x915 (* (- 2) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x117 (* 2 r)))
 (let ((?x786 (+ (- 4) ?x117 ?x143 q ?x915)))
 (let ((?x747 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x370 (* 4 (* ?x747 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x532 (* (- 8) x)))
 (let ((?x391 (* 16 r)))
 (let ((?x378 (+ (- 32) ?x391 ?x532 ?x30 (* (- 16) d) ?x146 ?x370 ?x178 ?x194 (* (+ (- 8) q) ?x747 ?x747) (* (- 2) (* (+ (- 8) q) ?x747)) ?x244 (* (- 4) (* ?x747 ?x786)) ?x816)))
 (let ((?x914 (+ (- 8) q)))
 (let (($x873 (not (= (* ?x914 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x786 ?x378 r) 0))))
 (let ((?x742 (+ ?x391 ?x532 ?x30 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 q) (* (- 2) (* ?x747 q)) ?x244 (* (- 4) (* ?x747 (+ ?x117 ?x143 q))) ?x816)))
 (let ((?x272 (+ ?x117 ?x143 q)))
 (let (($x822 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x272 ?x742 r q) 0))))
 (let ((?x833 (* 8 d)))
 (let ((?x801 (+ 16 ?x391 ?x532 ?x30 ?x833 ?x146 ?x370 ?x178 ?x194 (* ?x747 ?x747 (+ 4 q)) (* (- 2) (* ?x747 (+ 4 q))) ?x244 (* (- 4) (* ?x747 (+ 2 ?x117 ?x143 q d))) ?x816)))
 (let ((?x823 (+ 2 ?x117 ?x143 q d)))
 (let ((?x746 (+ 4 q)))
 (let (($x787 (not (= (* ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x746 ?x823 ?x801 r) 0))))
 (let ((?x778 (* (- 8) d)))
 (let ((?x298 (+ (- 16) ?x391 ?x532 ?x30 ?x778 ?x146 ?x370 ?x178 ?x194 (* (+ (- 4) q) ?x747 ?x747) (* (- 2) (* (+ (- 4) q) ?x747)) ?x244 (* (- 4) (* ?x747 (+ (- 2) ?x117 ?x143 q (* (- 1) d)))) ?x816)))
 (let ((?x870 (* (- 1) d)))
 (let ((?x874 (+ (- 2) ?x117 ?x143 q ?x870)))
 (let ((?x847 (+ (- 4) q)))
 (let (($x387 (not (= (* ?x847 ?x747 ?x747 ?x747 ?x747 ?x747 ?x747 ?x874 ?x298 r) 0))))
 (let ((?x462 (* 4 (* x d))))
 (let ((?x175 (* 8 r)))
 (let ((?x263 (+ ?x175 ?x146 ?x462 ?x178 ?x194 (* d d q) (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x816)))
 (let (($x271 (= ?x263 0)))
 (let (($x499 (and $x271 (or $x387 $x787 $x822 $x873))))
 (let (($x398 (and $x271 (or $x822 $x787 $x873 $x387))))
 (rewrite (= $x398 $x499)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x139 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x119 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x125 (- q 8)))
 (let ((?x77 (- 1)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x123 (- (+ (- (* 8 ?x119) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x130 (+ (- (+ (- ?x123 ?x41) (* ?x62 ?x62 ?x125)) (* 2 ?x62 ?x125)) ?x49)))
 (let ((?x134 (* (+ (- ?x130 (* 4 ?x62 ?x119)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x125 ?x62 ?x62 ?x62 ?x119 r)))
 (let ((?x99 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x105 (- q 4)))
 (let ((?x103 (- (+ (- (* 8 ?x99) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x110 (+ (- (+ (- ?x103 ?x41) (* ?x62 ?x62 ?x105)) (* 2 ?x62 ?x105)) ?x49)))
 (let ((?x114 (* (+ (- ?x110 (* 4 ?x62 ?x99)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x105 ?x62 ?x62 ?x62 ?x99 r)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x81 (+ ?x58 q)))
 (let ((?x85 (- (+ (- (* 8 ?x81) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x91 (+ (- (+ (- ?x85 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x95 (* (+ (- ?x91 (* 4 ?x62 ?x81)) ?x53) ?x77 ?x62 ?x62 ?x62 q ?x62 ?x62 ?x62 ?x81 r)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x78 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x67 ?x62 ?x62 ?x62 ?x59 r)))
 (let (($x137 (or (not (= ?x78 0)) (not (= ?x95 0)) (not (= ?x114 0)) (not (= ?x134 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x137)))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x461 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x816 (* 4 (* d00 r00))))
 (let ((?x212 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x377 (+ (- 2) ?x57 ?x143 q ?x212)))
 (let ((?x249 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x258 (* 4 (* ?x249 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x436 (* (- 8) d)))
 (let ((?x348 (* 8 q)))
 (let ((?x532 (* (- 8) x)))
 (let ((?x432 (* 16 r)))
 (let ((?x350 (+ (- 16) ?x432 ?x532 ?x348 ?x436 ?x146 ?x258 ?x178 ?x194 (* (+ (- 4) q) ?x249 ?x249) (* (- 2) (* (+ (- 4) q) ?x249)) ?x244 (* (- 4) (* ?x249 ?x377)) ?x816)))
 (let ((?x820 (+ (- 4) q)))
 (let (($x891 (not (= (* ?x820 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x377 ?x350 r) 0))))
 (let ((?x931 (+ (- 32) ?x432 ?x532 ?x348 (* (- 16) d) ?x146 ?x258 ?x178 ?x194 (* (+ (- 8) q) ?x249 ?x249) (* (- 2) (* (+ (- 8) q) ?x249)) ?x244 (* (- 4) (* ?x249 (+ (- 4) ?x57 ?x143 q (* (- 2) d)))) ?x816)))
 (let ((?x467 (* (- 2) d)))
 (let ((?x938 (+ (- 4) ?x57 ?x143 q ?x467)))
 (let ((?x1016 (+ (- 8) q)))
 (let (($x579 (not (= (* ?x1016 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x938 ?x931 r) 0))))
 (let ((?x175 (* 8 d)))
 (let ((?x218 (+ 16 ?x432 ?x532 ?x348 ?x175 ?x146 ?x258 ?x178 ?x194 (* ?x249 ?x249 (+ 4 q)) (* (- 2) (* ?x249 (+ 4 q))) ?x244 (* (- 4) (* ?x249 (+ 2 ?x57 ?x143 q d))) ?x816)))
 (let ((?x345 (+ 2 ?x57 ?x143 q d)))
 (let ((?x333 (+ 4 q)))
 (let (($x460 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x333 ?x345 ?x218 r) 0))))
 (let ((?x933 (+ ?x432 ?x532 ?x348 ?x146 ?x258 ?x178 ?x194 (* ?x249 ?x249 q) (* (- 2) (* ?x249 q)) ?x244 (* (- 4) (* ?x249 (+ ?x57 ?x143 q))) ?x816)))
 (let ((?x478 (+ ?x57 ?x143 q)))
 (let (($x222 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x478 ?x933 r q) 0))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x346 (+ ?x30 ?x146 (* 4 (* x d)) ?x178 ?x194 ?x44 (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x816)))
 (and (= ?x346 0) (or $x222 $x460 $x579 $x891))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x390 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x816 (* 4 (* d00 r00))))
 (let ((?x212 (* (- 1) d)))
 (let ((?x143 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x377 (+ (- 2) ?x57 ?x143 q ?x212)))
 (let ((?x249 (+ 2 d)))
 (let ((?x243 (* d00 q00)))
 (let ((?x244 (* 2 ?x243)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x194 (* (- 1) ?x41)))
 (let ((?x164 (* d00 x00)))
 (let ((?x178 (* (- 4) ?x164)))
 (let ((?x258 (* 4 (* ?x249 r))))
 (let ((?x146 (* (- 8) r00)))
 (let ((?x436 (* (- 8) d)))
 (let ((?x348 (* 8 q)))
 (let ((?x532 (* (- 8) x)))
 (let ((?x432 (* 16 r)))
 (let ((?x350 (+ (- 16) ?x432 ?x532 ?x348 ?x436 ?x146 ?x258 ?x178 ?x194 (* (+ (- 4) q) ?x249 ?x249) (* (- 2) (* (+ (- 4) q) ?x249)) ?x244 (* (- 4) (* ?x249 ?x377)) ?x816)))
 (let ((?x820 (+ (- 4) q)))
 (let (($x891 (not (= (* ?x820 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x377 ?x350 r) 0))))
 (let ((?x931 (+ (- 32) ?x432 ?x532 ?x348 (* (- 16) d) ?x146 ?x258 ?x178 ?x194 (* (+ (- 8) q) ?x249 ?x249) (* (- 2) (* (+ (- 8) q) ?x249)) ?x244 (* (- 4) (* ?x249 (+ (- 4) ?x57 ?x143 q (* (- 2) d)))) ?x816)))
 (let ((?x467 (* (- 2) d)))
 (let ((?x938 (+ (- 4) ?x57 ?x143 q ?x467)))
 (let ((?x1016 (+ (- 8) q)))
 (let (($x579 (not (= (* ?x1016 ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x938 ?x931 r) 0))))
 (let ((?x175 (* 8 d)))
 (let ((?x218 (+ 16 ?x432 ?x532 ?x348 ?x175 ?x146 ?x258 ?x178 ?x194 (* ?x249 ?x249 (+ 4 q)) (* (- 2) (* ?x249 (+ 4 q))) ?x244 (* (- 4) (* ?x249 (+ 2 ?x57 ?x143 q d))) ?x816)))
 (let ((?x345 (+ 2 ?x57 ?x143 q d)))
 (let ((?x333 (+ 4 q)))
 (let (($x460 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x333 ?x345 ?x218 r) 0))))
 (let ((?x933 (+ ?x432 ?x532 ?x348 ?x146 ?x258 ?x178 ?x194 (* ?x249 ?x249 q) (* (- 2) (* ?x249 q)) ?x244 (* (- 4) (* ?x249 (+ ?x57 ?x143 q))) ?x816)))
 (let ((?x478 (+ ?x57 ?x143 q)))
 (let (($x222 (not (= (* ?x249 ?x249 ?x249 ?x249 ?x249 ?x249 ?x478 ?x933 r q) 0))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x346 (+ ?x30 ?x146 (* 4 (* x d)) ?x178 ?x194 ?x44 (* (- 2) (* d q)) ?x244 (* (- 4) (* d r)) ?x816)))
 (let (($x159 (and (= ?x346 0) (or $x222 $x460 $x579 $x891))))
 (let ((?x119 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x125 (- q 8)))
 (let ((?x77 (- 1)))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x123 (- (+ (- (* 8 ?x119) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x130 (+ (- (+ (- ?x123 ?x41) (* ?x62 ?x62 ?x125)) (* 2 ?x62 ?x125)) ?x49)))
 (let ((?x134 (* (+ (- ?x130 (* 4 ?x62 ?x119)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x125 ?x62 ?x62 ?x62 ?x119 r)))
 (let ((?x99 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x105 (- q 4)))
 (let ((?x103 (- (+ (- (* 8 ?x99) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x110 (+ (- (+ (- ?x103 ?x41) (* ?x62 ?x62 ?x105)) (* 2 ?x62 ?x105)) ?x49)))
 (let ((?x114 (* (+ (- ?x110 (* 4 ?x62 ?x99)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x105 ?x62 ?x62 ?x62 ?x99 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x81 (+ ?x58 q)))
 (let ((?x85 (- (+ (- (* 8 ?x81) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x91 (+ (- (+ (- ?x85 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x95 (* (+ (- ?x91 (* 4 ?x62 ?x81)) ?x53) ?x77 ?x62 ?x62 ?x62 q ?x62 ?x62 ?x62 ?x81 r)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x78 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x77 ?x62 ?x62 ?x62 ?x67 ?x62 ?x62 ?x62 ?x59 r)))
 (let (($x137 (or (not (= ?x78 0)) (not (= ?x95 0)) (not (= ?x114 0)) (not (= ?x134 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x138 (and (= ?x54 0) $x137)))
 (rewrite (= $x138 $x159))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x691 (trans (quant-intro (proof-bind ?x390) (= $x139 $x461)) (elim-unused (= $x461 $x399)) (= $x139 $x399))))
 (let ((@x27 (asserted $x139)))
 (let ((@x590 (mp (mp @x27 @x691 $x399) (quant-intro (proof-bind ?x480) (= $x399 $x570)) $x570)))
 (let ((@x694 (mp (mp @x590 (rewrite (= $x570 $x570)) $x570) (quant-intro (proof-bind ?x581) (= $x570 $x525)) $x525)))
 (let ((@x420 (mp~ (mp @x694 (quant-intro (proof-bind ?x504) (= $x525 $x1099)) $x1099) (sk (~ $x1099 $x693)) $x693)))
 (let ((@x887 (mp @x420 (rewrite (= $x693 $x519)) $x519)))
 (let ((@x565 (and-elim @x887 $x539)))
 (let ((@x372 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x539) $x401)) @x565 $x401)))
 (let (($x731 (<= ?x733 0)))
 (let ((@x556 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x539) $x731)) @x565 $x731)))
 (let (($x541 (not (<= ?x876 0))))
 (let (($x842 (<= ?x760 0)))
 (let (($x198 (>= ?x760 0)))
 (let ((@x719 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x858 (not $x842) (not $x198))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x198)) @x556 @x372 false) $x198) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x842)) @x556 @x372 false) $x842) $x858)))
 (let (($x277 (>= ?x422 0)))
 (let (($x860 (<= ?x422 0)))
 (let ((@x953 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1009 (not $x860) (not $x277))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x860)) @x556 @x372 false) $x860) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x277)) @x556 @x372 false) $x277) $x1009)))
 (let (($x897 (>= ?x843 0)))
 (let (($x840 (<= ?x843 0)))
 (let ((@x954 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x171 (not $x840) (not $x897))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x840)) @x556 @x372 false) $x840) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x897)) @x556 @x372 false) $x897) $x171)))
 (let ((@x235 (unit-resolution (unit-resolution (and-elim @x887 $x536) @x954 @x953 (or $x899 $x1012)) @x719 $x1012)))
 (let (($x889 (>= ?x876 0)))
 (let ((@x237 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x379 $x541 (not $x889))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x889)) @x556 @x372 false) $x889) @x235 $x541)))
 ((_ th-lemma arith farkas 1 1 1) @x237 @x556 @x372 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 12
 :arith-assert-diseq        7
 :arith-assert-lower        38
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          13
 :arith-fixed-eqs           12
 :arith-grobner             8
 :arith-max-min             432
 :arith-nonlinear-horner    62
 :arith-num-rows            10
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 37
 :arith-tableau-max-rows    10
 :conflicts                 8
 :decisions                 24
 :del-clause                39
 :final-checks              8
 :max-memory                3.68
 :memory                    3.17
 :mk-bool-var               45
 :mk-clause                 52
 :num-allocs                1368591
 :num-checks                1
 :propagations              36
 :rlimit-count              7606
 :time                      0.01
 :total-time                0.02)
