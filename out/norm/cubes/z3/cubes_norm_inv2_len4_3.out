unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x2089 (* k!2 k!2)))
 (let ((?x613 (* (- 1) ?x2089)))
 (let ((?x616 (* 18 c!3)))
 (let ((?x760 (* (- 9) n!0)))
 (let ((?x915 (* 5 k!2)))
 (let ((?x2069 (+ ?x915 (* 9 (* n!0 c!3)) ?x760 ?x616 ?x613)))
 (let (($x1026 (<= ?x2069 4)))
 (let (($x1691 (= ?x2069 4)))
 (let ((?x1879 (+ k!2 c!3)))
 (let ((?x922 (+ m!1 k!2)))
 (let ((?x900 (+ 6 m!1)))
 (let ((?x2088 (+ 1 n!0)))
 (let ((?x1962 (* (- 1) (* m!1 m!1 m!1 n!0 n!0))))
 (let ((?x1217 (* (- 6) ?x2089)))
 (let ((?x1372 (* (- 1) (* m!1 n!0 n!0))))
 (let ((?x1943 (* 9 (* ?x2088 ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x922 ?x922 ?x1879 ?x1879))))
 (let ((?x2090 (* 25 (* m!1 n!0))))
 (let ((?x855 (* (- 1) (* m!1 m!1))))
 (let ((?x466 (* 54 (* k!2 n!0 n!0 n!0))))
 (let ((?x2229 (* 162 c!3)))
 (let ((?x421 (* (- 2) (* m!1 m!1 n!0))))
 (let ((?x530 (* (- 9) (* m!1 n!0 n!0 n!0))))
 (let ((?x1104 (* (- 1) (* m!1 m!1 n!0 n!0))))
 (let ((?x1899 (* (- 210) n!0)))
 (let ((?x1092 (* k!2 n!0)))
 (let ((?x2001 (* 438 ?x1092)))
 (let ((?x1025 (* 300 (* k!2 n!0 n!0))))
 (let ((?x1788 (* 192 k!2)))
 (let ((?x2084 (* 17 m!1)))
 (let ((?x514 (* (- 54) (* n!0 n!0 n!0))))
 (let ((?x1099 (* 144 (* k!2 k!2 k!2))))
 (let ((?x1744 (* (- 1) (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x922 ?x922 ?x922 ?x922 ?x1879))))
 (let ((?x380 (* (- 12) (* k!2 k!2 n!0))))
 (let ((?x429 (* (- 1) (* m!1 m!1 m!1))))
 (let ((?x615 (* n!0 n!0)))
 (let ((?x472 (* (- 186) ?x615)))
 (let ((?x825 (* (- 6) (* k!2 k!2 n!0 n!0))))
 (let ((?x212 (* (- 2) (* m!1 m!1 m!1 n!0))))
 (let ((?x540 (+ (* 9 (* m!1 n!0 n!0 n!0 c!3)) ?x212 ?x825 (* 144 (* k!2 k!2 c!3)) (* 9 (* m!1 k!2 n!0 n!0 n!0)) (* 54 (* n!0 n!0 n!0 c!3)) (* 48 (* m!1 m!1 m!1 k!2)) (* 8 (* m!1 m!1 m!1 k!2 c!3)) (* 5 (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x922 ?x922 ?x922 ?x1879)) (* (- 18) (* ?x900 ?x900 ?x922 ?x922 ?x1879 ?x1879)) (* (- 2) (* m!1 k!2 k!2 n!0)) (* 45 (* m!1 n!0 n!0 c!3)) (* 48 (* m!1 k!2 k!2 k!2)) ?x472 ?x429 (* 142 (* m!1 m!1 k!2)) ?x380 (* 144 (* m!1 m!1 c!3)) (* 48 (* m!1 k!2 k!2 c!3)) (* 96 (* m!1 m!1 k!2 c!3)) (* 96 (* m!1 m!1 k!2 k!2)) (* 48 (* m!1 m!1 m!1 c!3)) ?x1744 (* 4 (* m!1 m!1 k!2 k!2 c!3)) (* (- 1) (* ?x900 ?x900 ?x922 ?x922 ?x922 ?x922 ?x922 ?x1879 ?x1879 ?x1879)) ?x1099 (* (- 9) (* ?x2088 ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x922 ?x922 ?x1879)) (* 20 (* m!1 k!2)) ?x514 (* 4 (* m!1 m!1 m!1 m!1 c!3)) (* 8 (* m!1 m!1 m!1 k!2 k!2)) ?x2084 (* 4 (* m!1 m!1 k!2 k!2 k!2)) ?x1788 (* 378 (* n!0 c!3)) ?x1025 ?x2001 ?x1899 ?x1104 ?x530 ?x421 (* 287 (* m!1 k!2 k!2)) (* 270 (* n!0 n!0 c!3)) (* 288 (* m!1 k!2 c!3)) (* 9 (* ?x2088 ?x900 ?x900 ?x922 ?x922 ?x1879)) (* 5 (* ?x900 ?x900 ?x922 ?x922 ?x922 ?x922 ?x1879 ?x1879 ?x1879)) (* (- 2) (* m!1 m!1 k!2 n!0 n!0)) (* 9 (* ?x2088 ?x900 ?x900 ?x922 ?x922 ?x922 ?x1879 ?x1879 ?x1879 ?x1879)) ?x2229 ?x466 (* 18 (* ?x900 ?x900 ?x922 ?x922 ?x922 ?x1879 ?x1879 ?x1879 ?x1879)) (* (- 4) (* ?x900 ?x900 ?x922 ?x922 ?x922 ?x1879 ?x1879 ?x1879)) (* 38 (* m!1 k!2 n!0 n!0)) (* (- 5) (* ?x900 ?x900 ?x922 ?x922 ?x922 ?x1879)) ?x855 (* (- 9) (* ?x2088 ?x900 ?x900 ?x922 ?x922 ?x922 ?x1879 ?x1879 ?x1879)) ?x2090 (* ?x900 ?x900 ?x922 ?x922 ?x922 ?x922 ?x1879) (* 63 (* m!1 n!0 c!3)) ?x1943 ?x1372 ?x1217 (* 18 (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x922 ?x922 ?x1879 ?x1879)) (* 4 (* m!1 m!1 m!1 m!1 k!2)) (* (- 4) (* m!1 m!1 k!2 n!0)) ?x1962 (* (- 9) (* ?x2088 ?x900 ?x900 ?x922 ?x922 ?x1879 ?x1879)) (* 27 (* m!1 c!3)) (* (- 1) (* m!1 k!2 k!2 n!0 n!0)) (* (- 4) (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x922 ?x922 ?x1879)) (* 49 (* m!1 k!2 n!0)))))
 (let (($x174 (= ?x540 78)))
 (let (($x410 (not $x174)))
 (let ((?x1440 (+ (* 3 ?x615) (* (- 1) k!2) (* 3 n!0))))
 (let (($x1700 (= ?x1440 (- 1))))
 (let ((?x2082 (* 3 c!3)))
 (let ((?x1672 (* (- 2) n!0)))
 (let ((?x1923 (* (- 1) ?x1092)))
 (let ((?x959 (+ k!2 ?x1923 ?x1672 ?x2082)))
 (let (($x1076 (= ?x959 1)))
 (let ((?x2031 (+ m!1 (* (- 6) n!0))))
 (let (($x1662 (= ?x2031 6)))
 (let (($x1715 (and $x1662 $x1691 $x1076 $x1700 $x410)))
 (let ((?x2230 (+ c!3 k!2)))
 (let ((?x2093 (+ k!2 m!1)))
 (let ((?x2036 (* (- 1) (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2093 ?x2230))))
 (let ((?x601 (* 9 (* ?x2088 ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x2093 ?x2093 ?x2230 ?x2230))))
 (let ((?x1854 (+ ?x2229 ?x1788 ?x2084 ?x1899 ?x1217 ?x2001 ?x601 (* (- 5) (* ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2230)) (* 378 (* c!3 n!0)) ?x472 (* 4 (* k!2 m!1 m!1 m!1 m!1)) (* 4 (* c!3 m!1 m!1 m!1 m!1)) (* 8 (* k!2 k!2 m!1 m!1 m!1)) (* 8 (* c!3 k!2 m!1 m!1 m!1)) (* 4 (* k!2 k!2 k!2 m!1 m!1)) (* 4 (* c!3 k!2 k!2 m!1 m!1)) (* 18 (* ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2230 ?x2230 ?x2230 ?x2230)) (* (- 9) (* ?x2088 ?x900 ?x900 ?x2093 ?x2093 ?x2230 ?x2230)) (* 48 (* k!2 m!1 m!1 m!1)) (* 48 (* c!3 m!1 m!1 m!1)) (* 96 (* k!2 k!2 m!1 m!1)) (* 96 (* c!3 k!2 m!1 m!1)) (* 48 (* k!2 k!2 k!2 m!1)) (* 48 (* c!3 k!2 k!2 m!1)) (* 142 (* k!2 m!1 m!1)) (* 144 (* c!3 m!1 m!1)) (* 287 (* k!2 k!2 m!1)) (* 288 (* c!3 k!2 m!1)) ?x1099 (* 144 (* c!3 k!2 k!2)) (* (- 1) (* k!2 k!2 m!1 n!0 n!0)) (* (- 2) (* k!2 m!1 m!1 n!0 n!0)) ?x1962 (* 5 (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2230)) (* 20 (* k!2 m!1)) ?x855 ?x429 ?x380 (* (- 4) (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x2093 ?x2093 ?x2230)) (* 49 (* k!2 m!1 n!0)) (* (- 9) (* ?x2088 ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x2093 ?x2093 ?x2230)) ?x421 (* (- 2) (* k!2 k!2 m!1 n!0)) (* (- 9) (* ?x2088 ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2230 ?x2230 ?x2230)) (* (- 4) (* k!2 m!1 m!1 n!0)) ?x212 ?x825 (* 38 (* k!2 m!1 n!0 n!0)) (* (- 1) (* ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2093 ?x2093 ?x2230 ?x2230 ?x2230)) ?x1104 (* 9 (* ?x2088 ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2230 ?x2230 ?x2230 ?x2230)) ?x514 ?x530 (* 18 (* ?x2088 ?x2088 ?x2088 ?x900 ?x900 ?x900 ?x2093 ?x2093 ?x2230 ?x2230)) (* (- 18) (* ?x900 ?x900 ?x2093 ?x2093 ?x2230 ?x2230)) ?x1372 (* 9 (* ?x2088 ?x900 ?x900 ?x2093 ?x2093 ?x2230)) ?x2036 (* (- 4) (* ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2230 ?x2230 ?x2230)) ?x1025 ?x2090 (* 270 (* c!3 n!0 n!0)) (* 63 (* c!3 m!1 n!0)) (* ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2093 ?x2230) (* 45 (* c!3 m!1 n!0 n!0)) (* 5 (* ?x900 ?x900 ?x2093 ?x2093 ?x2093 ?x2093 ?x2230 ?x2230 ?x2230)) (* 27 (* c!3 m!1)) (* 9 (* c!3 m!1 n!0 n!0 n!0)) (* 9 (* k!2 m!1 n!0 n!0 n!0)) (* 54 (* c!3 n!0 n!0 n!0)) ?x466)))
 (let (($x955 (and $x1662 (= (+ ?x616 ?x915 ?x760 ?x613 (* 9 (* c!3 n!0))) 4) (= (+ ?x2082 k!2 ?x1672 ?x1923) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x615)) 1) (not (= ?x1854 78)))))
 (let (($x1223 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2755 (* 54 (* k n n n))))
 (let ((?x2754 (* 54 (* c n n n))))
 (let ((?x2439 (* 9 (* k m n n n))))
 (let ((?x2437 (* 9 (* c m n n n))))
 (let ((?x2751 (* 27 (* c m))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x2242 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x130 (* 5 ?x2242)))
 (let ((?x2749 (* 45 (* c m n n))))
 (let ((?x2213 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2747 (* 63 (* c m n))))
 (let ((?x2745 (* 270 (* c n n))))
 (let ((?x2740 (* 300 (* k n n))))
 (let ((?x2066 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1945 (* (- 4) ?x2066)))
 (let ((?x338 (+ 1 n)))
 (let ((?x2051 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1929 (* (- 1) ?x2051)))
 (let ((?x2023 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x652 (* 9 ?x2023)))
 (let ((?x1921 (* ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x673 (* (- 18) ?x1921)))
 (let ((?x1889 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x677 (* 18 ?x1889)))
 (let ((?x2731 (* (- 9) (* m n n n))))
 (let ((?x2730 (* (- 54) (* n n n))))
 (let ((?x1047 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1721 (* 9 ?x1047)))
 (let ((?x2705 (* (- 1) (* m m n n))))
 (let ((?x1035 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1925 (* (- 1) ?x1035)))
 (let ((?x2704 (* 38 (* k m n n))))
 (let ((?x2702 (* (- 6) (* k k n n))))
 (let ((?x2701 (* (- 2) (* m m m n))))
 (let ((?x991 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1944 (* (- 9) ?x991)))
 (let ((?x2696 (* (- 2) (* m m n))))
 (let ((?x982 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1712 (* (- 9) ?x982)))
 (let ((?x2695 (* 49 (* k m n))))
 (let ((?x969 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1711 (* (- 4) ?x969)))
 (let ((?x2693 (* (- 12) (* k k n))))
 (let ((?x2691 (* (- 1) (* m m m))))
 (let ((?x2690 (* (- 1) (* m m))))
 (let ((?x2689 (* 20 (* k m))))
 (let ((?x939 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1927 (* 5 ?x939)))
 (let ((?x2687 (* (- 1) (* m m m n n))))
 (let ((?x2686 (* (- 2) (* k m m n n))))
 (let ((?x2685 (* (- 1) (* k k m n n))))
 (let ((?x646 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1930 (* (- 9) ?x646)))
 (let ((?x631 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1768 (* 18 ?x631)))
 (let ((?x296 (* n n)))
 (let ((?x2561 (* (- 186) ?x296)))
 (let ((?x173 (* c n)))
 (let ((?x2559 (* 378 ?x173)))
 (let ((?x141 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x399 (* (- 5) ?x141)))
 (let ((?x125 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x671 (* 9 ?x125)))
 (let ((?x55 (* k n)))
 (let ((?x2551 (* 438 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2549 (* (- 6) ?x49)))
 (let ((?x2548 (* (- 210) n)))
 (let ((?x2544 (* 192 k)))
 (let ((?x2542 (* 162 c)))
 (let ((?x1274 (+ ?x2542 ?x2544 (* 17 m) ?x2548 ?x2549 ?x2551 ?x671 ?x399 ?x2559 ?x2561 (* 4 (* k m m m m)) (* 4 (* c m m m m)) (* 8 (* k k m m m)) (* 8 (* c k m m m)) (* 4 (* k k k m m)) (* 4 (* c k k m m)) ?x1768 ?x1930 (* 48 (* k m m m)) (* 48 (* c m m m)) (* 96 (* k k m m)) (* 96 (* c k m m)) (* 48 (* k k k m)) (* 48 (* c k k m)) (* 142 (* k m m)) (* 144 (* c m m)) (* 287 (* k k m)) (* 288 (* c k m)) (* 144 (* k k k)) (* 144 (* c k k)) ?x2685 ?x2686 ?x2687 ?x1927 ?x2689 ?x2690 ?x2691 ?x2693 ?x1711 ?x2695 ?x1712 ?x2696 (* (- 2) (* k k m n)) ?x1944 (* (- 4) (* k m m n)) ?x2701 ?x2702 ?x2704 ?x1925 ?x2705 ?x1721 ?x2730 ?x2731 ?x677 ?x673 (* (- 1) (* m n n)) ?x652 ?x1929 ?x1945 ?x2740 (* 25 (* m n)) ?x2745 ?x2747 ?x2213 ?x2749 ?x130 ?x2751 ?x2437 ?x2439 ?x2754 ?x2755)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) ?x296)) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 ?x173)) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 $x235 $x287 $x325 (not (= ?x1274 78)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1651 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x661 (* ?x338 ?x338 ?x338 ?x335 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x631 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1768 (* 18 ?x631)))
 (let ((?x1047 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1721 (* 9 ?x1047)))
 (let ((?x1035 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1925 (* (- 1) ?x1035)))
 (let ((?x991 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1944 (* (- 9) ?x991)))
 (let ((?x982 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1712 (* (- 9) ?x982)))
 (let ((?x969 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1711 (* (- 4) ?x969)))
 (let ((?x939 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1927 (* 5 ?x939)))
 (let ((?x646 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1930 (* (- 9) ?x646)))
 (let ((?x2242 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x130 (* 5 ?x2242)))
 (let ((?x2213 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2051 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1929 (* (- 1) ?x2051)))
 (let ((?x2066 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1945 (* (- 4) ?x2066)))
 (let ((?x2023 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x652 (* 9 ?x2023)))
 (let ((?x1889 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x677 (* 18 ?x1889)))
 (let ((?x1921 (* ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x673 (* (- 18) ?x1921)))
 (let ((?x141 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x399 (* (- 5) ?x141)))
 (let ((?x125 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x671 (* 9 ?x125)))
 (let ((?x1958 (+ ?x671 ?x399 (* 4 (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x673 (* (- 1) (* ?x338 ?x338 ?x335 ?x70 ?x70)) ?x677 ?x652 (* (- 9) (* ?x338 ?x338 ?x338 ?x335)) ?x1945 (* (- 4) (* ?x338 ?x338 ?x335)) ?x1929 ?x2213 ?x130 ?x1930 ?x1927 ?x1711 ?x1712 ?x1944 (* 5 (* ?x338 ?x338 ?x335 ?x70)) ?x1925 ?x1721 (* 18 (* ?x338 ?x338 ?x335 ?x69)) ?x1768 (* 9 ?x661))))
 (let (($x1052 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x764 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x764 $x1052 (not (= ?x1958 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1228 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2755 (* 54 (* k n n n))))
 (let ((?x2754 (* 54 (* c n n n))))
 (let ((?x2439 (* 9 (* k m n n n))))
 (let ((?x2437 (* 9 (* c m n n n))))
 (let ((?x2751 (* 27 (* c m))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x2242 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x130 (* 5 ?x2242)))
 (let ((?x2749 (* 45 (* c m n n))))
 (let ((?x2213 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2747 (* 63 (* c m n))))
 (let ((?x2745 (* 270 (* c n n))))
 (let ((?x2740 (* 300 (* k n n))))
 (let ((?x2066 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1945 (* (- 4) ?x2066)))
 (let ((?x338 (+ 1 n)))
 (let ((?x2051 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1929 (* (- 1) ?x2051)))
 (let ((?x2023 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x652 (* 9 ?x2023)))
 (let ((?x1921 (* ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x673 (* (- 18) ?x1921)))
 (let ((?x1889 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x677 (* 18 ?x1889)))
 (let ((?x2731 (* (- 9) (* m n n n))))
 (let ((?x2730 (* (- 54) (* n n n))))
 (let ((?x1047 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1721 (* 9 ?x1047)))
 (let ((?x2705 (* (- 1) (* m m n n))))
 (let ((?x1035 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1925 (* (- 1) ?x1035)))
 (let ((?x2704 (* 38 (* k m n n))))
 (let ((?x2702 (* (- 6) (* k k n n))))
 (let ((?x2701 (* (- 2) (* m m m n))))
 (let ((?x991 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1944 (* (- 9) ?x991)))
 (let ((?x2696 (* (- 2) (* m m n))))
 (let ((?x982 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1712 (* (- 9) ?x982)))
 (let ((?x2695 (* 49 (* k m n))))
 (let ((?x969 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1711 (* (- 4) ?x969)))
 (let ((?x2693 (* (- 12) (* k k n))))
 (let ((?x2691 (* (- 1) (* m m m))))
 (let ((?x2690 (* (- 1) (* m m))))
 (let ((?x2689 (* 20 (* k m))))
 (let ((?x939 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1927 (* 5 ?x939)))
 (let ((?x2687 (* (- 1) (* m m m n n))))
 (let ((?x2686 (* (- 2) (* k m m n n))))
 (let ((?x2685 (* (- 1) (* k k m n n))))
 (let ((?x646 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1930 (* (- 9) ?x646)))
 (let ((?x631 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1768 (* 18 ?x631)))
 (let ((?x296 (* n n)))
 (let ((?x2561 (* (- 186) ?x296)))
 (let ((?x173 (* c n)))
 (let ((?x2559 (* 378 ?x173)))
 (let ((?x141 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x399 (* (- 5) ?x141)))
 (let ((?x125 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x671 (* 9 ?x125)))
 (let ((?x55 (* k n)))
 (let ((?x2551 (* 438 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2549 (* (- 6) ?x49)))
 (let ((?x2548 (* (- 210) n)))
 (let ((?x2544 (* 192 k)))
 (let ((?x2542 (* 162 c)))
 (let ((?x1274 (+ ?x2542 ?x2544 (* 17 m) ?x2548 ?x2549 ?x2551 ?x671 ?x399 ?x2559 ?x2561 (* 4 (* k m m m m)) (* 4 (* c m m m m)) (* 8 (* k k m m m)) (* 8 (* c k m m m)) (* 4 (* k k k m m)) (* 4 (* c k k m m)) ?x1768 ?x1930 (* 48 (* k m m m)) (* 48 (* c m m m)) (* 96 (* k k m m)) (* 96 (* c k m m)) (* 48 (* k k k m)) (* 48 (* c k k m)) (* 142 (* k m m)) (* 144 (* c m m)) (* 287 (* k k m)) (* 288 (* c k m)) (* 144 (* k k k)) (* 144 (* c k k)) ?x2685 ?x2686 ?x2687 ?x1927 ?x2689 ?x2690 ?x2691 ?x2693 ?x1711 ?x2695 ?x1712 ?x2696 (* (- 2) (* k k m n)) ?x1944 (* (- 4) (* k m m n)) ?x2701 ?x2702 ?x2704 ?x1925 ?x2705 ?x1721 ?x2730 ?x2731 ?x677 ?x673 (* (- 1) (* m n n)) ?x652 ?x1929 ?x1945 ?x2740 (* 25 (* m n)) ?x2745 ?x2747 ?x2213 ?x2749 ?x130 ?x2751 ?x2437 ?x2439 ?x2754 ?x2755)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) ?x296)) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 ?x173)) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x520 (and $x151 $x235 $x287 $x325 (not (= ?x1274 78)))))
 (let ((?x1958 (+ ?x671 ?x399 (* 4 (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x673 (* (- 1) (* ?x338 ?x338 ?x335 ?x70 ?x70)) ?x677 ?x652 (* (- 9) (* ?x338 ?x338 ?x338 ?x335)) ?x1945 (* (- 4) (* ?x338 ?x338 ?x335)) ?x1929 ?x2213 ?x130 ?x1930 ?x1927 ?x1711 ?x1712 ?x1944 (* 5 (* ?x338 ?x338 ?x335 ?x70)) ?x1925 ?x1721 (* 18 (* ?x338 ?x338 ?x335 ?x69)) ?x1768 (* 9 (* ?x338 ?x338 ?x338 ?x335 ?x69)))))
 (let (($x1052 (= (+ (* 3 ?x296) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x764 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1989 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x764 $x1052 (not (= ?x1958 0)))))
 (rewrite (= $x1989 $x520)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1932 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x661 (* ?x338 ?x338 ?x338 ?x335 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x631 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1035 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2051 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1914 (* ?x338 ?x338 ?x335 ?x70 ?x70)))
 (let ((?x125 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x675 (+ (* (- 9) ?x125) (* 5 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)) (* (- 4) (* ?x335 ?x335 ?x70 ?x70 ?x69)) (* 18 (* ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)) ?x1914 (* (- 18) (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69)) (* 9 (* ?x338 ?x338 ?x338 ?x335)) (* 4 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x338 ?x338 ?x335)) ?x2051 (* (- 1) (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 5) (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)) (* (- 5) (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)) (* 9 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)) (* 9 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 5) (* ?x338 ?x338 ?x335 ?x70)) ?x1035 (* (- 9) (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 18) (* ?x338 ?x338 ?x335 ?x69)) (* (- 18) ?x631) (* (- 9) ?x661))))
 (let (($x1052 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1621 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1676 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= ?x1676 (- 4)) $x1621 $x1052 (not (= ?x675 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1653 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x661 (* ?x338 ?x338 ?x338 ?x335 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x631 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1768 (* 18 ?x631)))
 (let ((?x1047 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1721 (* 9 ?x1047)))
 (let ((?x1035 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1925 (* (- 1) ?x1035)))
 (let ((?x991 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1944 (* (- 9) ?x991)))
 (let ((?x982 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1712 (* (- 9) ?x982)))
 (let ((?x969 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x1711 (* (- 4) ?x969)))
 (let ((?x939 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1927 (* 5 ?x939)))
 (let ((?x646 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1930 (* (- 9) ?x646)))
 (let ((?x2242 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x130 (* 5 ?x2242)))
 (let ((?x2213 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2051 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1929 (* (- 1) ?x2051)))
 (let ((?x2066 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1945 (* (- 4) ?x2066)))
 (let ((?x2023 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69)))
 (let ((?x652 (* 9 ?x2023)))
 (let ((?x1889 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x677 (* 18 ?x1889)))
 (let ((?x1921 (* ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x673 (* (- 18) ?x1921)))
 (let ((?x141 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x399 (* (- 5) ?x141)))
 (let ((?x125 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x671 (* 9 ?x125)))
 (let ((?x1958 (+ ?x671 ?x399 (* 4 (* ?x335 ?x335 ?x70 ?x70 ?x69)) ?x673 (* (- 1) (* ?x338 ?x338 ?x335 ?x70 ?x70)) ?x677 ?x652 (* (- 9) (* ?x338 ?x338 ?x338 ?x335)) ?x1945 (* (- 4) (* ?x338 ?x338 ?x335)) ?x1929 ?x2213 ?x130 ?x1930 ?x1927 ?x1711 ?x1712 ?x1944 (* 5 (* ?x338 ?x338 ?x335 ?x70)) ?x1925 ?x1721 (* 18 (* ?x338 ?x338 ?x335 ?x69)) ?x1768 (* 9 ?x661))))
 (let (($x1052 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x764 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x1989 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x764 $x1052 (not (= ?x1958 0)))))
 (let ((?x1914 (* ?x338 ?x338 ?x335 ?x70 ?x70)))
 (let ((?x675 (+ (* (- 9) ?x125) (* 5 ?x141) (* (- 4) (* ?x335 ?x335 ?x70 ?x70 ?x69)) (* 18 ?x1921) ?x1914 (* (- 18) ?x1889) (* (- 9) ?x2023) (* 9 (* ?x338 ?x338 ?x338 ?x335)) (* 4 ?x2066) (* 4 (* ?x338 ?x338 ?x335)) ?x2051 (* (- 1) ?x2213) (* (- 5) ?x2242) (* 9 ?x646) (* (- 5) ?x939) (* 4 ?x969) (* 9 ?x982) (* 9 ?x991) (* (- 5) (* ?x338 ?x338 ?x335 ?x70)) ?x1035 (* (- 9) ?x1047) (* (- 18) (* ?x338 ?x338 ?x335 ?x69)) (* (- 18) ?x631) (* (- 9) ?x661))))
 (let (($x1621 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1676 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1825 (and $x151 (= ?x1676 (- 4)) $x1621 $x1052 (not (= ?x675 0)))))
 (rewrite (= $x1825 $x1989)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x118 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x73 (* (- 9) ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (- (+ ?x73 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 4 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x80 (+ ?x77 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71) (* ?x70 ?x70 ?x71 ?x72 ?x72))))
 (let ((?x83 (- ?x80 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x89 (+ (- ?x83 (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x72)) (* 9 ?x71 ?x72 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 4 ?x71 ?x72 ?x72) (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x93 (- (- ?x89 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x97 (- (+ ?x93 (* 9 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x72)) (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x101 (+ ?x97 (* 4 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72))))
 (let ((?x105 (+ (- ?x101 (* 5 ?x70 ?x71 ?x72 ?x72)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x110 (- ?x105 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72))))
 (let ((?x112 (- (- ?x110 (* 18 ?x69 ?x71 ?x72 ?x72)) (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x112 (* 9 ?x69 ?x71 ?x72 ?x72 ?x72)) 0)))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x139 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x661 (* ?x338 ?x338 ?x338 ?x335 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x631 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1035 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2051 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1914 (* ?x338 ?x338 ?x335 ?x70 ?x70)))
 (let ((?x125 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x675 (+ (* (- 9) ?x125) (* 5 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)) (* (- 4) (* ?x335 ?x335 ?x70 ?x70 ?x69)) (* 18 (* ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)) ?x1914 (* (- 18) (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)) (* (- 9) (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69)) (* 9 (* ?x338 ?x338 ?x338 ?x335)) (* 4 (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 4 (* ?x338 ?x338 ?x335)) ?x2051 (* (- 1) (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69)) (* (- 5) (* ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69)) (* (- 5) (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69)) (* 4 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)) (* 9 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69)) (* 9 (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* (- 5) (* ?x338 ?x338 ?x335 ?x70)) ?x1035 (* (- 9) (* ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)) (* (- 18) (* ?x338 ?x338 ?x335 ?x69)) (* (- 18) ?x631) (* (- 9) ?x661))))
 (let (($x1052 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1621 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1676 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x1825 (and $x151 (= ?x1676 (- 4)) $x1621 $x1052 (not (= ?x675 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x73 (* (- 9) ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (- (+ ?x73 (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 4 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x80 (+ ?x77 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71) (* ?x70 ?x70 ?x71 ?x72 ?x72))))
 (let ((?x83 (- ?x80 (* 18 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x89 (+ (- ?x83 (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x72)) (* 9 ?x71 ?x72 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* 4 ?x71 ?x72 ?x72) (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x93 (- (- ?x89 (* ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x97 (- (+ ?x93 (* 9 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x72)) (* 5 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x101 (+ ?x97 (* 4 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72) (* 9 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72))))
 (let ((?x105 (+ (- ?x101 (* 5 ?x70 ?x71 ?x72 ?x72)) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x110 (- ?x105 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72))))
 (let ((?x112 (- (- ?x110 (* 18 ?x69 ?x71 ?x72 ?x72)) (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x117 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (- ?x112 (* 9 ?x69 ?x71 ?x72 ?x72 ?x72)) 0))))))
 (rewrite (= $x117 $x1825))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x119 (asserted $x118)))
 (let ((@x1041 (mp (mp @x119 (quant-intro (proof-bind ?x139) (= $x118 $x1932)) $x1932) (rewrite (= $x1932 $x1932)) $x1932)))
 (let ((@x1583 (mp (mp @x1041 (quant-intro (proof-bind ?x1653) (= $x1932 $x1651)) $x1651) (quant-intro (proof-bind ?x1228) (= $x1651 $x1223)) $x1223)))
 (let ((@x596 (mp (mp~ @x1583 (sk (~ $x1223 $x955)) $x955) (rewrite (= $x955 $x1715)) $x1715)))
 (let ((@x1002 (and-elim @x596 $x1691)))
 (let ((@x1049 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1691) $x1026)) @x1002 $x1026)))
 (let (($x2452 (>= ?x2069 4)))
 (let ((@x606 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1691) $x2452)) @x1002 $x2452)))
 (let (($x598 (<= ?x2031 6)))
 (let ((@x1040 (and-elim @x596 $x1662)))
 (let ((@x699 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1662) $x598)) @x1040 $x598)))
 (let (($x502 (>= ?x2031 6)))
 (let ((@x1705 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1662) $x502)) @x1040 $x502)))
 (let (($x898 (<= ?x959 1)))
 (let ((@x1021 (and-elim @x596 $x1076)))
 (let ((@x901 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1076) $x898)) @x1021 $x898)))
 (let (($x1763 (>= ?x959 1)))
 (let ((@x1729 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1076) $x1763)) @x1021 $x1763)))
 (let (($x720 (<= ?x1440 (- 1))))
 (let ((@x1937 (and-elim @x596 $x1700)))
 (let ((@x2039 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1700) $x720)) @x1937 $x720)))
 (let (($x647 (>= ?x1440 (- 1))))
 (let ((@x634 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1700) $x647)) @x1937 $x647)))
 (let (($x1900 (not (<= ?x540 78))))
 (let (($x1551 (>= ?x540 78)))
 (let ((@x730 ((_ th-lemma arith) (hypothesis (not $x1551)) @x634 @x2039 @x634 @x2039 @x1729 @x901 @x634 @x2039 @x1729 @x901 @x606 @x1049 @x1729 @x901 @x634 @x2039 @x1705 @x699 @x1705 @x699 @x634 @x2039 @x1705 @x699 @x634 @x2039 @x1729 @x901 @x1705 @x699 @x606 @x1049 false)))
 (let ((@x304 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x174 $x1900 (not $x1551))) (and-elim @x596 $x410) (or $x1900 (not $x1551)))))
 ((_ th-lemma arith) (unit-resolution @x304 (lemma @x730 $x1551) $x1900) @x634 @x2039 @x634 @x2039 @x606 @x1049 @x606 @x1049 @x634 @x2039 @x606 @x1049 @x1729 @x901 @x634 @x2039 @x634 @x2039 @x606 @x1049 @x1705 @x699 @x1705 @x699 @x634 @x2039 @x1705 @x699 @x634 @x2039 @x1729 @x901 @x1705 @x699 @x606 @x1049 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        49
 :arith-assert-upper        226
 :arith-branch-var          3
 :arith-conflicts           7
 :arith-eq-adapter          5
 :arith-gcd-tests           15
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             1063
 :arith-nonlinear-bounds    89
 :arith-nonlinear-horner    19
 :arith-num-rows            10
 :arith-patches             6
 :arith-pivots              12
 :arith-row-summations      29
 :arith-tableau-max-columns 123
 :arith-tableau-max-rows    10
 :conflicts                 7
 :decisions                 207
 :del-clause                15
 :final-checks              15
 :max-memory                4.20
 :memory                    3.50
 :mk-bool-var               94
 :mk-clause                 19
 :num-allocs                2702392
 :num-checks                1
 :propagations              14
 :rlimit-count              39541
 :time                      0.03
 :total-time                0.04)
