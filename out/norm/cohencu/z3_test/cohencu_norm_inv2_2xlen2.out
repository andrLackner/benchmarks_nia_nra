unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun n!0 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(proof
(let ((?x1500 (* (- 6) n00)))
 (let ((?x522 (+ z00 ?x1500 (* 6 n!0) (* (- 1) z!1))))
 (let (($x1212 (<= ?x522 0)))
 (let (($x541 (= ?x522 0)))
 (let ((?x1024 (+ x!3 y!2)))
 (let ((?x518 (+ z!1 y!2)))
 (let ((?x1023 (+ 1 n!0)))
 (let ((?x362 (+ 6 z!1)))
 (let ((?x1565 (* z00 z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x1557 (* y00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x1485 (* z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x852 (* (- 6) ?x1485)))
 (let ((?x711 (* (- 12) (* y00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024))))
 (let ((?x1206 (* (- 1) (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024))))
 (let ((?x1210 (* z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x1205 (* y00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x590 (* (- 12) ?x1205)))
 (let ((?x1198 (* 6 (* z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024))))
 (let ((?x1171 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x959 (* 6 ?x1171)))
 (let ((?x1168 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x968 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x362 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x953 (* (- 1) ?x968)))
 (let ((?x934 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x518 ?x518 ?x518 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x926 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x362 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x379 (* (- 6) (* z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024))))
 (let ((?x716 (* z00 z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x619 (* 6 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024))))
 (let ((?x489 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x1348 (* 12 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x518 ?x518 ?x518 ?x1024 ?x1024 ?x1024))))
 (let ((?x374 (* (- 1) (* z00 z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024))))
 (let ((?x1230 (* (- 6) (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024))))
 (let ((?x376 (* 12 (* y00 ?x1023 ?x1023 ?x1023 ?x1023 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024))))
 (let ((?x275 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x518 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x1053 (+ (* 12 ?x275) ?x376 ?x1230 ?x374 ?x1348 (* (- 6) ?x489) ?x619 ?x716 ?x379 ?x926 (* (- 12) ?x934) ?x953 (* z00 z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x518 ?x518 ?x1024 ?x1024 ?x1024) ?x1168 ?x959 ?x1198 ?x590 (* 6 ?x1210) ?x1206 ?x711 ?x852 (* 12 ?x1557) (* (- 1) ?x1565) (* (- 12) (* ?x1023 ?x1023 ?x1023 ?x1023 ?x518 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))))
 (let (($x504 (= ?x1053 0)))
 (let (($x1048 (not $x504)))
 (let ((?x951 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x910 (* 108 (* x!3 x!3))))
 (let ((?x1441 (* y!2 y!2)))
 (let ((?x336 (* 24 ?x1441)))
 (let ((?x1243 (* 108 (* x00 x00))))
 (let ((?x1140 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1136 (* z00 z00 z00 y00)))
 (let ((?x1046 (* (- 36) (* z00 y00 x00))))
 (let ((?x931 (* 16 (* y00 y00 y00))))
 (let ((?x845 (* z00 z00 x00)))
 (let ((?x1096 (* (- 18) ?x845)))
 (let ((?x717 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x659 (* z00 z00 y00)))
 (let ((?x1197 (* (- 10) ?x659)))
 (let ((?x634 (* z00 y00 y00)))
 (let ((?x669 (* (- 12) ?x634)))
 (let ((?x525 (* y00 y00)))
 (let ((?x996 (* 96 ?x525)))
 (let ((?x495 (* z00 x00)))
 (let ((?x413 (* 36 ?x495)))
 (let ((?x458 (* z00 y00)))
 (let ((?x823 (* 24 ?x458)))
 (let ((?x405 (* y00 x00)))
 (let ((?x396 (* 216 ?x405)))
 (let ((?x316 (* x!3 y!2)))
 (let ((?x354 (* 108 ?x316)))
 (let ((?x385 (+ ?x354 (* (- 1) (* z00 z00 z00 y!2)) (* 10 (* z00 z00 y!2)) ?x396 ?x823 (* (- 12) (* y00 y!2 y!2)) ?x413 ?x996 (* 36 (* z00 y00 x!3)) (* (- 120) (* y00 y!2)) ?x669 ?x1197 ?x717 (* (- 6) (* z00 y!2 y!2)) (* (- 24) (* z00 y!2)) ?x1096 (* (- 2) (* z00 z00 z00 x!3)) (* 18 (* z00 z00 x!3)) (* 18 (* z00 y00 y!2)) ?x931 (* (- 36) (* z00 x!3)) ?x1046 (* z00 z00 y!2 y!2) (* (- 216) (* y00 x!3)) ?x1136 ?x1140 ?x1243 (* (- 216) (* x00 x!3)) ?x336 ?x910 ?x951 (* (- 108) (* x00 y!2)))))
 (let ((?x1135 (* z!1 y!2)))
 (let ((?x665 (* 12 ?x1135)))
 (let ((?x1077 (* y00 z!1)))
 (let ((?x286 (* (- 12) ?x1077)))
 (let ((?x1522 (* (- 72) y!2)))
 (let ((?x866 (* z00 y00 y!2)))
 (let ((?x1523 (* (- 108) x!3)))
 (let ((?x628 (* 18 (* z!1 x!3))))
 (let ((?x574 (* 6 ?x458)))
 (let ((?x324 (* (- 18) (* x00 z!1))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x429 (+ ?x67 ?x74 (* 18 ?x316) ?x324 (* 3 (* z00 z00 y!2)) (* 18 ?x405) ?x574 (* 36 ?x525) (* (- 36) (* y00 y!2)) ?x634 (* (- 3) ?x659) (* (- 2) (* z00 y!2 y!2)) (* (- 1) (* z!1 y!2 y!2)) ?x628 (* (- 6) (* z00 y!2)) ?x1523 (* (- 3) ?x845) (* 3 (* z00 z00 x!3)) (* (- 3) (* z00 x00 z!1)) ?x866 (* 3 (* z00 z!1 x!3)) ?x1522 ?x286 (* (- 18) (* y00 x!3)) ?x665 (* (- 1) (* y00 z!1 y!2)) (* 2 (* y00 y00 z!1)) (* (- 18) (* x00 y!2)))))
 (let ((?x733 (* (- 6) ?x458)))
 (let ((?x364 (* z00 z00 y!2)))
 (let ((?x734 (+ ?x67 ?x74 ?x324 ?x364 ?x733 (* (- 18) ?x495) (* 24 ?x525) (* (- 12) (* y00 y!2)) (* (- 1) ?x659) (* (- 1) (* z00 z!1 y!2)) ?x628 (* 6 (* z00 y!2)) ?x1523 (* 18 (* z00 x!3)) ?x1522 ?x286 ?x665 (* z00 y00 z!1) (* (- 12) ?x1441))))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x639 (+ ?x67 ?x55 ?x74 (* 6 (* z00 z!1)) (* (- 6) (* z00 z00)) (* (- 18) ?x458) ?x1523 ?x1522 (* 12 ?x1077) (* 6 ?x1135) (* (- 1) (* z00 z00 z!1)))))
 (let ((?x1095 (* z!1 z!1)))
 (let ((?x317 (* z00 z00)))
 (let ((?x347 (* (- 1) ?x317)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x814 (+ ?x49 ?x43 ?x347 (* (- 6) z!1) (* (- 12) y!2) ?x1095)))
 (let (($x813 (= ?x814 0)))
 (let (($x922 (and $x541 $x813 (= ?x639 0) (= ?x734 0) (= ?x429 0) (= ?x385 0) $x1048)))
 (let ((?x1191 (+ y!2 z!1)))
 (let ((?x1146 (* (- 6) (* z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024))))
 (let ((?x318 (* 12 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x1191 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024))))
 (let ((?x361 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x407 (* (- 1) (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024))))
 (let ((?x585 (* z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x709 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x362 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x945 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x1191 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x1204 (* 6 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024))))
 (let ((?x800 (* (- 12) (* y00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024))))
 (let ((?x962 (* ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x831 (* y00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x375 (* z00 z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x362 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024)))
 (let ((?x802 (+ ?x1198 (* (- 12) (* ?x1023 ?x1023 ?x1023 ?x1023 ?x1191 ?x1024 ?x1024 ?x1024 ?x1024 ?x1024)) ?x376 (* z00 z00 ?x1023 ?x1023 ?x1023 ?x1023 ?x362 ?x1191 ?x1191 ?x1024 ?x1024 ?x1024) ?x1230 ?x1168 (* (- 1) ?x375) (* 12 ?x831) ?x959 (* 12 ?x962) ?x953 ?x800 ?x1204 ?x590 (* (- 12) ?x945) ?x709 ?x852 (* 6 ?x585) ?x407 ?x374 (* (- 6) ?x361) ?x318 ?x1146 ?x716)))
 (let ((?x961 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x396 (* (- 2) (* x!3 z00 z00 z00)) ?x354 ?x823 ?x413 ?x336 ?x996 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x669 ?x1197 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x717 ?x910 ?x951 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1096 (* (- 216) (* x!3 y00)) ?x931 (* (- 12) (* y!2 y!2 y00)) ?x1046 (* (- 216) (* x!3 x00)) ?x1136 ?x1140 (* 36 (* x!3 z00 y00)) ?x1243)))
 (let ((?x846 (* 3 ?x845)))
 (let ((?x908 (* 3 ?x659)))
 (let ((?x641 (* (- 1) ?x634)))
 (let ((?x635 (* 18 (* z!1 x00))))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x1438 (* z!1 y00)))
 (let ((?x694 (* 12 ?x1438)))
 (let ((?x1160 (* (- 18) (* x!3 z!1))))
 (let ((?x406 (* (- 18) ?x405)))
 (let ((?x929 (* y!2 z!1)))
 (let ((?x752 (* (- 12) ?x929)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x355 (* 72 y!2)))
 (let ((?x333 (* 108 x!3)))
 (let ((?x1275 (+ ?x333 ?x355 ?x480 ?x537 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x752 ?x406 (* (- 18) ?x316) ?x1160 ?x694 ?x733 ?x828 ?x635 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x641 ?x908 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x846 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x496 (* 18 ?x495)))
 (let ((?x575 (+ ?x333 ?x355 ?x480 ?x537 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x752 ?x1160 ?x694 ?x574 ?x496 (* 12 ?x1441) ?x554 ?x635 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x659 (* (- 18) (* x!3 z00)))))
 (let ((?x459 (* 18 ?x458)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x573 (+ ?x333 ?x355 ?x480 ?x410 ?x537 (* z!1 z00 z00) ?x421 (* (- 6) ?x929) (* (- 12) ?x1438) ?x459 (* (- 6) (* z!1 z00)))))
 (let ((?x388 (* (- 12) y00)))
 (let ((?x387 (* (- 6) z00)))
 (let (($x1488 (= (+ (* 12 y!2) (* 6 z!1) ?x387 ?x388 (* (- 1) ?x1095) ?x317) 0)))
 (let (($x1612 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x1488 (= ?x573 0) (= ?x575 0) (= ?x1275 0) (= ?x961 0) (not (= ?x802 0)))))
 (let (($x838 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x412 (+ 6 z)))
 (let ((?x426 (+ 1 n)))
 (let ((?x1590 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (+ y z)))
 (let ((?x1571 (* (- 6) (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1063 (* 12 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1521 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1385 (* (- 6) ?x1521)))
 (let ((?x1418 (* (- 1) (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1411 (* (- 1) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1369 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1322 (* 6 ?x1369)))
 (let ((?x1340 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x722 (* (- 6) ?x1340)))
 (let ((?x1306 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1119 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x759 (* (- 12) ?x1119)))
 (let ((?x1100 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1065 (* (- 12) ?x1100)))
 (let ((?x1536 (* 6 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1001 (* (- 12) (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x906 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x943 (* (- 1) ?x906)))
 (let ((?x851 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1282 (* 12 ?x851)))
 (let ((?x795 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x638 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1490 (* 12 ?x638)))
 (let ((?x602 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x520 (* (- 1) ?x602)))
 (let ((?x560 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1008 (* (- 6) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x384 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x352 (* 12 (* y00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1342 (* (- 12) (* ?x426 ?x426 ?x426 ?x426 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x288 (* 6 (* z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x794 (+ ?x288 ?x1342 ?x352 ?x384 ?x1008 ?x560 ?x520 ?x1490 ?x796 ?x1282 ?x943 ?x1001 ?x1536 ?x1065 ?x759 ?x1306 ?x722 ?x1322 ?x1411 ?x1418 ?x1385 ?x1063 ?x1571 ?x1590)))
 (let ((?x1243 (* 108 (* x00 x00))))
 (let ((?x1140 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1136 (* z00 z00 z00 y00)))
 (let ((?x1046 (* (- 36) (* z00 y00 x00))))
 (let ((?x931 (* 16 (* y00 y00 y00))))
 (let ((?x845 (* z00 z00 x00)))
 (let ((?x1096 (* (- 18) ?x845)))
 (let ((?x801 (* (- 4) (* y y y))))
 (let ((?x749 (* 108 (* x x))))
 (let ((?x717 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x659 (* z00 z00 y00)))
 (let ((?x1197 (* (- 10) ?x659)))
 (let ((?x634 (* z00 y00 y00)))
 (let ((?x669 (* (- 12) ?x634)))
 (let ((?x525 (* y00 y00)))
 (let ((?x996 (* 96 ?x525)))
 (let ((?x499 (* y y)))
 (let ((?x744 (* 24 ?x499)))
 (let ((?x495 (* z00 x00)))
 (let ((?x413 (* 36 ?x495)))
 (let ((?x458 (* z00 y00)))
 (let ((?x823 (* 24 ?x458)))
 (let ((?x405 (* y00 x00)))
 (let ((?x396 (* 216 ?x405)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1263 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x396 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x823 ?x413 ?x744 ?x996 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x669 ?x1197 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x717 ?x749 ?x801 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1096 (* (- 216) (* x y00)) ?x931 (* (- 12) (* y y y00)) ?x1046 (* (- 216) (* x x00)) ?x1136 ?x1140 (* 36 (* x z00 y00)) ?x1243)))
 (let (($x1268 (= ?x1263 0)))
 (let ((?x846 (* 3 ?x845)))
 (let ((?x908 (* 3 ?x659)))
 (let ((?x641 (* (- 1) ?x634)))
 (let ((?x571 (* 18 (* z x00))))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x733 (* (- 6) ?x458)))
 (let ((?x432 (* z y00)))
 (let ((?x433 (* 12 ?x432)))
 (let ((?x466 (* (- 18) (* x z))))
 (let ((?x406 (* (- 18) ?x405)))
 (let ((?x401 (* y z)))
 (let ((?x425 (* (- 12) ?x401)))
 (let ((?x135 (* y y z)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x964 (+ ?x64 ?x71 ?x480 ?x537 (* (- 3) (* y z00 z00)) ?x135 ?x425 ?x406 (* (- 18) (* x y)) ?x466 ?x433 ?x733 ?x828 ?x571 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x641 ?x908 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x846 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x971 (= ?x964 0)))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x496 (* 18 ?x495)))
 (let ((?x574 (* 6 ?x458)))
 (let ((?x103 (* y z z00)))
 (let ((?x713 (+ ?x64 ?x71 ?x480 ?x537 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x425 ?x466 ?x433 ?x574 ?x496 ?x502 ?x554 ?x571 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x659 (* (- 18) (* x z00)))))
 (let (($x718 (= ?x713 0)))
 (let ((?x459 (* 18 ?x458)))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x553 (+ ?x64 ?x71 ?x480 ?x410 ?x537 ?x76 ?x421 (* (- 6) ?x401) (* (- 12) ?x432) ?x459 (* (- 6) (* z z00)))))
 (let (($x558 (= ?x553 0)))
 (let ((?x388 (* (- 12) y00)))
 (let ((?x387 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x391 (= (+ ?x45 ?x46 ?x387 ?x388 (* (- 1) (* z z)) ?x317) 0)))
 (let (($x309 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x309 $x391 $x558 $x718 $x971 $x1268 (not (= ?x794 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x358 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x412 (+ 6 z)))
 (let ((?x426 (+ 1 n)))
 (let ((?x1590 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (+ y z)))
 (let ((?x1571 (* (- 6) (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1369 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1322 (* 6 ?x1369)))
 (let ((?x1418 (* (- 1) (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1340 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x722 (* (- 6) ?x1340)))
 (let ((?x1063 (* 12 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1536 (* 6 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1001 (* (- 12) (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1411 (* (- 1) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1521 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1385 (* (- 6) ?x1521)))
 (let ((?x1306 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x851 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1282 (* 12 ?x851)))
 (let ((?x638 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1490 (* 12 ?x638)))
 (let ((?x1119 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x759 (* (- 12) ?x1119)))
 (let ((?x288 (* 6 (* z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x384 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x352 (* 12 (* y00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1342 (* (- 12) (* ?x426 ?x426 ?x426 ?x426 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1008 (* (- 6) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x560 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x795 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x906 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x943 (* (- 1) ?x906)))
 (let ((?x1100 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1065 (* (- 12) ?x1100)))
 (let ((?x602 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x520 (* (- 1) ?x602)))
 (let ((?x1598 (+ ?x520 ?x1065 ?x943 ?x796 ?x560 ?x1008 ?x1342 ?x352 ?x384 ?x288 ?x759 ?x1490 ?x1282 ?x1306 ?x1385 ?x1411 ?x1001 ?x1536 ?x1063 ?x722 ?x1418 ?x1322 ?x1571 ?x1590)))
 (let ((?x1243 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x525 (* y00 y00)))
 (let ((?x996 (* 96 ?x525)))
 (let ((?x931 (* 16 (* y00 y00 y00))))
 (let ((?x801 (* (- 4) (* y y y))))
 (let ((?x749 (* 108 (* x x))))
 (let ((?x499 (* y y)))
 (let ((?x744 (* 24 ?x499)))
 (let ((?x947 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x744 ?x749 ?x801 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x931 (* (- 6) (* z00 y y)) ?x996 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1243 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x290 (* 18 (* x00 z))))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x371 (* z y)))
 (let ((?x598 (* (- 12) ?x371)))
 (let ((?x764 (* y00 z)))
 (let ((?x572 (* 12 ?x764)))
 (let ((?x527 (* (- 18) (* z x))))
 (let ((?x1305 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x527 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x572 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x598 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x828 ?x290 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x480 (* 18 (* y00 x)) ?x71 ?x537 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x1429 (+ (* (- 1) (* y00 z00 z)) ?x598 ?x527 (* 18 (* x00 z00)) ?x502 ?x554 ?x290 ?x572 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x480 (* (- 6) (* z00 y)) ?x71 ?x537 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x720 (+ (* (- 6) ?x371) ?x410 ?x421 (* (- 12) ?x764) (* 18 (* y00 z00)) ?x64 ?x480 (* (- 6) (* z00 z)) ?x71 ?x537 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x347 (* (- 1) ?x317)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x347 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x720 0) (= ?x1429 0) (= ?x1305 0) (= ?x947 0) (not (= ?x1598 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1232 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x412 (+ 6 z)))
 (let ((?x426 (+ 1 n)))
 (let ((?x1590 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (+ y z)))
 (let ((?x1571 (* (- 6) (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1063 (* 12 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1521 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1385 (* (- 6) ?x1521)))
 (let ((?x1418 (* (- 1) (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1411 (* (- 1) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1369 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1322 (* 6 ?x1369)))
 (let ((?x1340 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x722 (* (- 6) ?x1340)))
 (let ((?x1306 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1119 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x759 (* (- 12) ?x1119)))
 (let ((?x1100 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1065 (* (- 12) ?x1100)))
 (let ((?x1536 (* 6 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1001 (* (- 12) (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x906 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x943 (* (- 1) ?x906)))
 (let ((?x851 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1282 (* 12 ?x851)))
 (let ((?x795 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x638 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1490 (* 12 ?x638)))
 (let ((?x602 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x520 (* (- 1) ?x602)))
 (let ((?x560 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1008 (* (- 6) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x384 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x352 (* 12 (* y00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1342 (* (- 12) (* ?x426 ?x426 ?x426 ?x426 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x288 (* 6 (* z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x794 (+ ?x288 ?x1342 ?x352 ?x384 ?x1008 ?x560 ?x520 ?x1490 ?x796 ?x1282 ?x943 ?x1001 ?x1536 ?x1065 ?x759 ?x1306 ?x722 ?x1322 ?x1411 ?x1418 ?x1385 ?x1063 ?x1571 ?x1590)))
 (let ((?x1243 (* 108 (* x00 x00))))
 (let ((?x1140 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1136 (* z00 z00 z00 y00)))
 (let ((?x1046 (* (- 36) (* z00 y00 x00))))
 (let ((?x931 (* 16 (* y00 y00 y00))))
 (let ((?x845 (* z00 z00 x00)))
 (let ((?x1096 (* (- 18) ?x845)))
 (let ((?x801 (* (- 4) (* y y y))))
 (let ((?x749 (* 108 (* x x))))
 (let ((?x717 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x659 (* z00 z00 y00)))
 (let ((?x1197 (* (- 10) ?x659)))
 (let ((?x634 (* z00 y00 y00)))
 (let ((?x669 (* (- 12) ?x634)))
 (let ((?x525 (* y00 y00)))
 (let ((?x996 (* 96 ?x525)))
 (let ((?x499 (* y y)))
 (let ((?x744 (* 24 ?x499)))
 (let ((?x495 (* z00 x00)))
 (let ((?x413 (* 36 ?x495)))
 (let ((?x458 (* z00 y00)))
 (let ((?x823 (* 24 ?x458)))
 (let ((?x405 (* y00 x00)))
 (let ((?x396 (* 216 ?x405)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1263 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x396 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x823 ?x413 ?x744 ?x996 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x669 ?x1197 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x717 ?x749 ?x801 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1096 (* (- 216) (* x y00)) ?x931 (* (- 12) (* y y y00)) ?x1046 (* (- 216) (* x x00)) ?x1136 ?x1140 (* 36 (* x z00 y00)) ?x1243)))
 (let (($x1268 (= ?x1263 0)))
 (let ((?x846 (* 3 ?x845)))
 (let ((?x908 (* 3 ?x659)))
 (let ((?x641 (* (- 1) ?x634)))
 (let ((?x571 (* 18 (* z x00))))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x733 (* (- 6) ?x458)))
 (let ((?x432 (* z y00)))
 (let ((?x433 (* 12 ?x432)))
 (let ((?x466 (* (- 18) (* x z))))
 (let ((?x406 (* (- 18) ?x405)))
 (let ((?x401 (* y z)))
 (let ((?x425 (* (- 12) ?x401)))
 (let ((?x135 (* y y z)))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x964 (+ ?x64 ?x71 ?x480 ?x537 (* (- 3) (* y z00 z00)) ?x135 ?x425 ?x406 (* (- 18) (* x y)) ?x466 ?x433 ?x733 ?x828 ?x571 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x641 ?x908 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x846 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x971 (= ?x964 0)))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x496 (* 18 ?x495)))
 (let ((?x574 (* 6 ?x458)))
 (let ((?x103 (* y z z00)))
 (let ((?x713 (+ ?x64 ?x71 ?x480 ?x537 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x425 ?x466 ?x433 ?x574 ?x496 ?x502 ?x554 ?x571 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x659 (* (- 18) (* x z00)))))
 (let (($x718 (= ?x713 0)))
 (let ((?x459 (* 18 ?x458)))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x553 (+ ?x64 ?x71 ?x480 ?x410 ?x537 ?x76 ?x421 (* (- 6) ?x401) (* (- 12) ?x432) ?x459 (* (- 6) (* z z00)))))
 (let (($x558 (= ?x553 0)))
 (let ((?x388 (* (- 12) y00)))
 (let ((?x387 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x391 (= (+ ?x45 ?x46 ?x387 ?x388 (* (- 1) (* z z)) ?x317) 0)))
 (let (($x309 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x833 (and $x309 $x391 $x558 $x718 $x971 $x1268 (not (= ?x794 0)))))
 (let ((?x1598 (+ ?x520 ?x1065 ?x943 ?x796 ?x560 ?x1008 ?x1342 ?x352 ?x384 ?x288 ?x759 ?x1490 ?x1282 ?x1306 ?x1385 ?x1411 ?x1001 ?x1536 ?x1063 ?x722 ?x1418 ?x1322 ?x1571 ?x1590)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x947 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x744 ?x749 ?x801 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x931 (* (- 6) (* z00 y y)) ?x996 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1243 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x290 (* 18 (* x00 z))))
 (let ((?x371 (* z y)))
 (let ((?x598 (* (- 12) ?x371)))
 (let ((?x764 (* y00 z)))
 (let ((?x572 (* 12 ?x764)))
 (let ((?x527 (* (- 18) (* z x))))
 (let ((?x1305 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x527 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x572 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x598 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x828 ?x290 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x480 (* 18 (* y00 x)) ?x71 ?x537 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x1429 (+ (* (- 1) (* y00 z00 z)) ?x598 ?x527 (* 18 (* x00 z00)) ?x502 ?x554 ?x290 ?x572 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x480 (* (- 6) (* z00 y)) ?x71 ?x537 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x720 (+ (* (- 6) ?x371) ?x410 ?x421 (* (- 12) ?x764) (* 18 (* y00 z00)) ?x64 ?x480 (* (- 6) (* z00 z)) ?x71 ?x537 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x347 (* (- 1) ?x317)))
 (let (($x1099 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x347 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x720 0) (= ?x1429 0) (= ?x1305 0) (= ?x947 0) (not (= ?x1598 0)))))
 (rewrite (= $x1099 $x833))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x264 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x258 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00)))
 (let ((?x217 (+ y z)))
 (let ((?x254 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x250 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00)))
 (let ((?x241 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x239 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218)))
 (let ((?x237 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x224 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218)))
 (let ((?x221 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x220 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x226 (+ (- (- ?x219 ?x220) ?x221) ?x224 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218))))
 (let ((?x229 (- ?x226 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218))))
 (let ((?x230 (- ?x229 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217))))
 (let ((?x234 (+ ?x230 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 z00 z00) (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 z00))))
 (let ((?x245 (- (- (+ (- ?x234 ?x235) ?x237 ?x238 ?x239) ?x241) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x246 (- ?x245 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218))))
 (let ((?x249 (+ ?x246 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x253 (- (- ?x249 ?x250) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 z00 z00))))
 (let ((?x257 (- (+ ?x253 ?x254) (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (+ ?x257 ?x258) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x434 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x412 (+ 6 z)))
 (let ((?x426 (+ 1 n)))
 (let ((?x1590 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x217 (+ y z)))
 (let ((?x1571 (* (- 6) (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1369 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1322 (* 6 ?x1369)))
 (let ((?x1418 (* (- 1) (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1340 (* z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x722 (* (- 6) ?x1340)))
 (let ((?x1063 (* 12 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1536 (* 6 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1001 (* (- 12) (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1411 (* (- 1) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216))))
 (let ((?x1521 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1385 (* (- 6) ?x1521)))
 (let ((?x1306 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x851 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1282 (* 12 ?x851)))
 (let ((?x638 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1490 (* 12 ?x638)))
 (let ((?x1119 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x759 (* (- 12) ?x1119)))
 (let ((?x288 (* 6 (* z00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x384 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x352 (* 12 (* y00 ?x426 ?x426 ?x426 ?x426 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1342 (* (- 12) (* ?x426 ?x426 ?x426 ?x426 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x1008 (* (- 6) (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216))))
 (let ((?x560 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x795 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x906 (* ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x943 (* (- 1) ?x906)))
 (let ((?x1100 (* y00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1065 (* (- 12) ?x1100)))
 (let ((?x602 (* z00 z00 ?x426 ?x426 ?x426 ?x426 ?x412 ?x412 ?x412 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x520 (* (- 1) ?x602)))
 (let ((?x1598 (+ ?x520 ?x1065 ?x943 ?x796 ?x560 ?x1008 ?x1342 ?x352 ?x384 ?x288 ?x759 ?x1490 ?x1282 ?x1306 ?x1385 ?x1411 ?x1001 ?x1536 ?x1063 ?x722 ?x1418 ?x1322 ?x1571 ?x1590)))
 (let ((?x1243 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x525 (* y00 y00)))
 (let ((?x996 (* 96 ?x525)))
 (let ((?x931 (* 16 (* y00 y00 y00))))
 (let ((?x801 (* (- 4) (* y y y))))
 (let ((?x749 (* 108 (* x x))))
 (let ((?x499 (* y y)))
 (let ((?x744 (* 24 ?x499)))
 (let ((?x947 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x744 ?x749 ?x801 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x931 (* (- 6) (* z00 y y)) ?x996 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1243 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x537 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x480 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x290 (* 18 (* x00 z))))
 (let ((?x828 (* (- 36) ?x525)))
 (let ((?x371 (* z y)))
 (let ((?x598 (* (- 12) ?x371)))
 (let ((?x764 (* y00 z)))
 (let ((?x572 (* 12 ?x764)))
 (let ((?x527 (* (- 18) (* z x))))
 (let ((?x1305 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x527 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x572 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x598 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x828 ?x290 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x480 (* 18 (* y00 x)) ?x71 ?x537 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x554 (* (- 24) ?x525)))
 (let ((?x502 (* 12 ?x499)))
 (let ((?x1429 (+ (* (- 1) (* y00 z00 z)) ?x598 ?x527 (* 18 (* x00 z00)) ?x502 ?x554 ?x290 ?x572 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x480 (* (- 6) (* z00 y)) ?x71 ?x537 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x317 (* z00 z00)))
 (let ((?x421 (* 6 ?x317)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x410 (* (- 1) ?x55)))
 (let ((?x720 (+ (* (- 6) ?x371) ?x410 ?x421 (* (- 12) ?x764) (* 18 (* y00 z00)) ?x64 ?x480 (* (- 6) (* z00 z)) ?x71 ?x537 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x347 (* (- 1) ?x317)))
 (let (($x1099 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x347 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x720 0) (= ?x1429 0) (= ?x1305 0) (= ?x947 0) (not (= ?x1598 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x258 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00)))
 (let ((?x254 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x250 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00)))
 (let ((?x241 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x239 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218)))
 (let ((?x237 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x224 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218)))
 (let ((?x221 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x220 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x226 (+ (- (- ?x219 ?x220) ?x221) ?x224 (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218))))
 (let ((?x229 (- ?x226 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218))))
 (let ((?x230 (- ?x229 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217))))
 (let ((?x234 (+ ?x230 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 y00) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 z00 z00) (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 z00))))
 (let ((?x245 (- (- (+ (- ?x234 ?x235) ?x237 ?x238 ?x239) ?x241) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x246 (- ?x245 (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218))))
 (let ((?x249 (+ ?x246 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218) (* 12 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218))))
 (let ((?x253 (- (- ?x249 ?x250) (* ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 z00 z00))))
 (let ((?x257 (- (+ ?x253 ?x254) (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x263 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (+ ?x257 ?x258) 0))))))
 (rewrite (= $x263 $x1099)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x265 (asserted $x264)))
 (let ((@x1293 (mp (mp @x265 (quant-intro (proof-bind ?x434) (= $x264 $x358)) $x358) (rewrite (= $x358 $x358)) $x358)))
 (let ((@x1442 (mp~ (mp @x1293 (quant-intro (proof-bind ?x1232) (= $x358 $x838)) $x838) (sk (~ $x838 $x1612)) $x1612)))
 (let ((@x326 (mp @x1442 (rewrite (= $x1612 $x922)) $x922)))
 (let ((@x1552 (and-elim @x326 $x541)))
 (let ((@x561 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x541) $x1212)) @x1552 $x1212)))
 (let (($x1148 (>= ?x522 0)))
 (let ((@x304 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x541) $x1148)) @x1552 $x1148)))
 (let (($x1471 (<= ?x814 0)))
 (let ((@x276 (and-elim @x326 $x813)))
 (let ((@x704 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x813) $x1471)) @x276 $x1471)))
 (let (($x1079 (>= ?x814 0)))
 (let ((@x1271 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x813) $x1079)) @x276 $x1079)))
 (let (($x1281 (not (<= ?x1053 0))))
 (let (($x1130 (>= ?x1053 0)))
 (let ((@x419 ((_ th-lemma arith) (hypothesis (not $x1130)) @x304 @x561 @x1271 @x704 @x304 @x561 false)))
 (let ((@x1054 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x504 $x1281 (not $x1130))) (and-elim @x326 $x1048) (or $x1281 (not $x1130)))))
 ((_ th-lemma arith) (unit-resolution @x1054 (lemma @x419 $x1130) $x1281) @x304 @x561 @x1271 @x704 @x304 @x561 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-grobner             2
 :arith-max-min             634
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              7
 :arith-row-summations      7
 :arith-tableau-max-columns 120
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                20.07
 :memory                    19.37
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                1077373
 :num-checks                1
 :propagations              14
 :rlimit-count              35326
 :time                      0.03
 :total-time                0.05)
