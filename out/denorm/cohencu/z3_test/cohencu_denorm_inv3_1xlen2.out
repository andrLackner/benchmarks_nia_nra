unsat
((set-logic NIA)
(declare-fun x!3 () Int)
(declare-fun y!2 () Int)
(declare-fun z!1 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1192 (* (- 108) x!3)))
 (let ((?x803 (* (- 72) y!2)))
 (let ((?x74 (* 108 x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x506 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* 12 (* y00 z!1)) (* (- 1) (* z00 z00 z!1)) (* 6 (* z00 z!1)) (* (- 18) (* z00 y00)) ?x803 (* 6 (* z!1 y!2)) ?x1192)))
 (let (($x692 (>= ?x506 0)))
 (let (($x1072 (= ?x506 0)))
 (let ((?x827 (* 108 x!3)))
 (let ((?x875 (* z!1 z!1)))
 (let ((?x429 (* (- 6) ?x875)))
 (let ((?x418 (* 144 y!2)))
 (let ((?x436 (* z00 y00)))
 (let ((?x437 (* 18 ?x436)))
 (let ((?x354 (* z00 z00 z!1)))
 (let ((?x307 (* y00 z!1)))
 (let ((?x322 (* (- 12) ?x307)))
 (let ((?x426 (* 36 z!1)))
 (let ((?x295 (* z00 z00)))
 (let ((?x1174 (* 12 ?x295)))
 (let ((?x515 (* (- 108) x00)))
 (let ((?x388 (* (- 1) ?x55)))
 (let ((?x965 (* (- 144) y00)))
 (let ((?x1046 (* (- 36) z00)))
 (let ((?x1339 (+ ?x1046 ?x965 ?x388 ?x515 ?x1174 ?x426 ?x322 ?x354 (* (- 6) (* z00 z!1)) ?x437 ?x418 (* (- 6) (* z!1 y!2)) ?x429 ?x827)))
 (let ((?x912 (* y!2 y!2)))
 (let ((?x378 (* (- 1) ?x912)))
 (let ((?x319 (+ 6 z!1)))
 (let ((?x1139 (+ 1 n!0)))
 (let ((?x476 (* x!3 x!3)))
 (let ((?x637 (* (- 1) ?x476)))
 (let ((?x1324 (+ (* (- 3) (* n!0 y!2 y!2)) (* (- 3) (* n!0 n!0 x!3 x!3)) (* (- 3) (* n!0 x!3 x!3)) ?x637 (* (- 2) (* y!2 x!3)) (* (- 6) (* n!0 y!2 x!3)) (* ?x1139 ?x1139 ?x319 ?x319 ?x319 (+ z!1 y!2)) (* (- 2) (* n!0 n!0 n!0 y!2 x!3)) ?x378 (* (- 1) (* n!0 n!0 n!0 x!3 x!3)) (* (- 3) (* n!0 n!0 y!2 y!2)) (* (- 6) (* n!0 n!0 y!2 x!3)) (* (- 1) (* n!0 n!0 n!0 y!2 y!2)))))
 (let ((?x400 (* ?x1324 ?x1339)))
 (let (($x1346 (= ?x400 0)))
 (let (($x439 (not $x1346)))
 (let ((?x1232 (* 108 (* x00 x00))))
 (let ((?x1129 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1125 (* z00 z00 z00 y00)))
 (let ((?x1035 (* (- 36) (* z00 y00 x00))))
 (let ((?x920 (* 16 (* y00 y00 y00))))
 (let ((?x1068 (* 24 ?x912)))
 (let ((?x834 (* z00 z00 x00)))
 (let ((?x1085 (* (- 18) ?x834)))
 (let ((?x324 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x708 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x650 (* z00 z00 y00)))
 (let ((?x1186 (* (- 10) ?x650)))
 (let ((?x625 (* z00 y00 y00)))
 (let ((?x660 (* (- 12) ?x625)))
 (let ((?x530 (* y00 y00)))
 (let ((?x985 (* 96 ?x530)))
 (let ((?x499 (* z00 x00)))
 (let ((?x393 (* 36 ?x499)))
 (let ((?x453 (* 108 ?x476)))
 (let ((?x812 (* 24 ?x436)))
 (let ((?x385 (* y00 x00)))
 (let ((?x376 (* 216 ?x385)))
 (let ((?x923 (+ ?x376 ?x812 (* (- 6) (* z00 y!2 y!2)) ?x453 ?x393 ?x985 (* 10 (* z00 z00 y!2)) (* 108 (* y!2 x!3)) ?x660 (* (- 120) (* y00 y!2)) ?x1186 (* (- 24) (* z00 y!2)) ?x708 (* (- 36) (* z00 x!3)) (* 18 (* z00 z00 x!3)) ?x324 (* (- 108) (* x00 y!2)) ?x1085 ?x1068 ?x920 ?x1035 (* (- 216) (* y00 x!3)) ?x1125 ?x1129 (* 18 (* z00 y00 y!2)) (* (- 1) (* z00 z00 z00 y!2)) (* (- 2) (* z00 z00 z00 x!3)) (* z00 z00 y!2 y!2) (* (- 12) (* y00 y!2 y!2)) (* (- 216) (* x00 x!3)) (* 36 (* z00 y00 x!3)) ?x1232)))
 (let ((?x1138 (* z00 y00 y!2)))
 (let ((?x848 (* (- 18) (* x00 z!1))))
 (let ((?x717 (* z!1 y!2)))
 (let ((?x992 (* 12 ?x717)))
 (let ((?x565 (* 6 ?x436)))
 (let ((?x1158 (* 18 (* z!1 x!3))))
 (let ((?x782 (+ ?x67 ?x74 ?x322 ?x1158 (* 18 ?x385) ?x565 (* (- 2) (* z00 y!2 y!2)) (* 36 ?x530) (* 3 (* z00 z00 y!2)) (* 18 (* y!2 x!3)) ?x625 (* (- 36) (* y00 y!2)) (* (- 3) ?x650) (* (- 6) (* z00 y!2)) (* (- 3) (* z00 x00 z!1)) ?x803 ?x992 ?x848 (* 3 (* z00 z00 x!3)) (* (- 18) (* x00 y!2)) (* (- 3) ?x834) (* (- 1) (* y00 z!1 y!2)) (* (- 1) (* z!1 y!2 y!2)) (* 2 (* y00 y00 z!1)) (* (- 18) (* y00 x!3)) (* 3 (* z00 z!1 x!3)) ?x1138 ?x1192)))
 (let ((?x550 (* z00 z00 y!2)))
 (let ((?x724 (* (- 6) ?x436)))
 (let ((?x1057 (+ ?x67 ?x74 ?x322 ?x1158 ?x724 (* (- 18) ?x499) (* 24 ?x530) ?x550 (* (- 12) (* y00 y!2)) (* (- 1) ?x650) (* 6 (* z00 y!2)) ?x803 (* 18 (* z00 x!3)) ?x992 ?x848 (* (- 1) (* z00 z!1 y!2)) (* (- 12) ?x912) (* z00 y00 z!1) ?x1192)))
 (let ((?x1007 (* (- 1) ?x295)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x1196 (+ ?x49 ?x43 ?x1007 (* (- 6) z!1) (* (- 12) y!2) ?x875)))
 (let (($x431 (= ?x1196 0)))
 (let (($x1329 (and (= (+ z00 (* (- 6) n00) (* (- 1) z!1) (* 6 n!0)) 0) $x431 $x1072 (= ?x1057 0) (= ?x782 0) (= ?x923 0) $x439)))
 (let ((?x799 (* (- 6) (* z!1 z00))))
 (let ((?x516 (* z!1 y00)))
 (let ((?x519 (* (- 12) ?x516)))
 (let ((?x518 (* y!2 z!1)))
 (let ((?x508 (* (- 6) ?x518)))
 (let ((?x509 (* z!1 z00 z00)))
 (let ((?x968 (+ ?x827 ?x418 ?x426 ?x1046 ?x965 ?x429 ?x388 ?x515 ?x509 ?x1174 ?x508 ?x519 ?x437 ?x799)))
 (let ((?x425 (+ (* (- 1) (* x!3 x!3 n!0 n!0 n!0)) (* (- 3) (* y!2 y!2 n!0 n!0)) (* (- 6) (* x!3 y!2 n!0 n!0)) (* (- 3) (* y!2 y!2 n!0)) (* (- 2) (* x!3 y!2)) ?x378 (* (- 3) (* x!3 x!3 n!0 n!0)) ?x637 (* (- 3) (* x!3 x!3 n!0)) (* ?x1139 ?x1139 ?x319 ?x319 ?x319 (+ y!2 z!1)) (* (- 6) (* x!3 y!2 n!0)) (* (- 2) (* x!3 y!2 n!0 n!0 n!0)) (* (- 1) (* y!2 y!2 n!0 n!0 n!0)))))
 (let ((?x797 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x376 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x812 ?x393 ?x1068 ?x985 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x660 ?x1186 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x708 ?x453 ?x324 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1085 (* (- 216) (* x!3 y00)) ?x920 (* (- 12) (* y!2 y!2 y00)) ?x1035 (* (- 216) (* x!3 x00)) ?x1125 ?x1129 (* 36 (* x!3 z00 y00)) ?x1232)))
 (let ((?x835 (* 3 ?x834)))
 (let ((?x897 (* 3 ?x650)))
 (let ((?x632 (* (- 1) ?x625)))
 (let ((?x361 (* 18 (* z!1 x00))))
 (let ((?x817 (* (- 36) ?x530)))
 (let ((?x911 (* (- 18) (* x!3 z!1))))
 (let ((?x842 (* 12 ?x516)))
 (let ((?x386 (* (- 18) ?x385)))
 (let ((?x870 (* (- 12) ?x518)))
 (let ((?x458 (* (- 72) y00)))
 (let ((?x738 (* 72 y!2)))
 (let ((?x814 (+ ?x827 ?x738 ?x458 ?x515 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x870 ?x386 (* (- 18) (* x!3 y!2)) ?x842 ?x724 ?x911 ?x817 ?x361 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x632 ?x897 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x835 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x548 (* (- 24) ?x530)))
 (let ((?x501 (* 18 ?x499)))
 (let ((?x744 (+ ?x827 ?x738 ?x458 ?x515 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) ?x870 (* (- 1) (* z!1 z00 y00)) ?x842 ?x565 ?x911 ?x501 (* 12 ?x912) ?x548 ?x361 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x650 (* (- 18) (* x!3 z00)))))
 (let ((?x399 (* 6 ?x295)))
 (let (($x1071 (= (+ ?x827 ?x738 ?x458 ?x388 ?x515 ?x509 ?x399 ?x508 ?x519 ?x437 ?x799) 0)))
 (let ((?x366 (* (- 12) y00)))
 (let ((?x365 (* (- 6) z00)))
 (let (($x838 (= (+ (* 12 y!2) (* 6 z!1) ?x365 ?x366 (* (- 1) ?x875) ?x295) 0)))
 (let (($x533 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x838 $x1071 (= ?x744 0) (= ?x814 0) (= ?x797 0) (not (= (* ?x425 ?x968) 0)))))
 (let (($x639 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x484 (* (- 6) (* z z00))))
 (let ((?x436 (* z00 y00)))
 (let ((?x437 (* 18 ?x436)))
 (let ((?x410 (* z y00)))
 (let ((?x423 (* (- 12) ?x410)))
 (let ((?x379 (* y z)))
 (let ((?x380 (* (- 6) ?x379)))
 (let ((?x295 (* z00 z00)))
 (let ((?x1174 (* 12 ?x295)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x515 (* (- 108) x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x388 (* (- 1) ?x55)))
 (let ((?x50 (* z z)))
 (let ((?x502 (* (- 6) ?x50)))
 (let ((?x965 (* (- 144) y00)))
 (let ((?x1046 (* (- 36) z00)))
 (let ((?x64 (* 108 x)))
 (let ((?x455 (+ ?x64 (* 144 y) (* 36 z) ?x1046 ?x965 ?x502 ?x388 ?x515 ?x76 ?x1174 ?x380 ?x423 ?x437 ?x484)))
 (let ((?x215 (+ y z)))
 (let ((?x440 (+ 6 z)))
 (let ((?x1182 (+ 1 n)))
 (let ((?x750 (* ?x1182 ?x1182 ?x440 ?x440 ?x440 ?x215)))
 (let ((?x739 (* x x)))
 (let ((?x1201 (* (- 1) ?x739)))
 (let ((?x504 (* y y)))
 (let ((?x1274 (* (- 1) ?x504)))
 (let ((?x730 (+ (* (- 1) (* x x n n n)) (* (- 3) (* y y n n)) (* (- 6) (* x y n n)) (* (- 3) (* y y n)) (* (- 2) (* x y)) ?x1274 (* (- 3) (* x x n n)) ?x1201 (* (- 3) (* x x n)) ?x750 (* (- 6) (* x y n)) (* (- 2) (* x y n n n)) (* (- 1) (* y y n n n)))))
 (let ((?x1232 (* 108 (* x00 x00))))
 (let ((?x1129 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1125 (* z00 z00 z00 y00)))
 (let ((?x1035 (* (- 36) (* z00 y00 x00))))
 (let ((?x920 (* 16 (* y00 y00 y00))))
 (let ((?x834 (* z00 z00 x00)))
 (let ((?x1085 (* (- 18) ?x834)))
 (let ((?x790 (* (- 4) (* y y y))))
 (let ((?x740 (* 108 ?x739)))
 (let ((?x708 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x650 (* z00 z00 y00)))
 (let ((?x1186 (* (- 10) ?x650)))
 (let ((?x625 (* z00 y00 y00)))
 (let ((?x660 (* (- 12) ?x625)))
 (let ((?x530 (* y00 y00)))
 (let ((?x985 (* 96 ?x530)))
 (let ((?x735 (* 24 ?x504)))
 (let ((?x499 (* z00 x00)))
 (let ((?x393 (* 36 ?x499)))
 (let ((?x812 (* 24 ?x436)))
 (let ((?x385 (* y00 x00)))
 (let ((?x376 (* 216 ?x385)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1252 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x376 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x812 ?x393 ?x735 ?x985 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x660 ?x1186 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x708 ?x740 ?x790 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1085 (* (- 216) (* x y00)) ?x920 (* (- 12) (* y y y00)) ?x1035 (* (- 216) (* x x00)) ?x1125 ?x1129 (* 36 (* x z00 y00)) ?x1232)))
 (let (($x1257 (= ?x1252 0)))
 (let ((?x835 (* 3 ?x834)))
 (let ((?x897 (* 3 ?x650)))
 (let ((?x632 (* (- 1) ?x625)))
 (let ((?x562 (* 18 (* z x00))))
 (let ((?x817 (* (- 36) ?x530)))
 (let ((?x473 (* (- 18) (* x z))))
 (let ((?x724 (* (- 6) ?x436)))
 (let ((?x411 (* 12 ?x410)))
 (let ((?x386 (* (- 18) ?x385)))
 (let ((?x408 (* (- 12) ?x379)))
 (let ((?x135 (* y y z)))
 (let ((?x458 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x953 (+ ?x64 ?x71 ?x458 ?x515 (* (- 3) (* y z00 z00)) ?x135 ?x408 ?x386 (* (- 18) (* x y)) ?x411 ?x724 ?x473 ?x817 ?x562 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x632 ?x897 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x835 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x960 (= ?x953 0)))
 (let ((?x548 (* (- 24) ?x530)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x501 (* 18 ?x499)))
 (let ((?x565 (* 6 ?x436)))
 (let ((?x103 (* y z z00)))
 (let ((?x704 (+ ?x64 ?x71 ?x458 ?x515 ?x103 (* (- 1) (* y z00 z00)) ?x408 (* (- 1) (* z z00 y00)) ?x411 ?x565 ?x473 ?x501 ?x505 ?x548 ?x562 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x650 (* (- 18) (* x z00)))))
 (let (($x709 (= ?x704 0)))
 (let ((?x399 (* 6 ?x295)))
 (let (($x536 (= (+ ?x64 ?x71 ?x458 ?x388 ?x515 ?x76 ?x399 ?x380 ?x423 ?x437 ?x484) 0)))
 (let ((?x366 (* (- 12) y00)))
 (let ((?x365 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x369 (= (+ ?x45 ?x46 ?x365 ?x366 (* (- 1) ?x50) ?x295) 0)))
 (let (($x287 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x287 $x369 $x536 $x709 $x960 $x1257 (not (= (* ?x730 ?x455) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x450 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x515 (* (- 108) x00)))
 (let ((?x1077 (* 72 z)))
 (let ((?x458 (* (- 72) y00)))
 (let ((?x1100 (* 180 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x843 (* y00 z00)))
 (let ((?x844 (* 18 ?x843)))
 (let ((?x295 (* z00 z00)))
 (let ((?x399 (* 6 ?x295)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x388 (* (- 1) ?x55)))
 (let ((?x1358 (+ (* (- 6) (* (+ 6 z) (+ y z))) ?x388 ?x399 (* (- 12) (* y00 (+ 6 z))) ?x844 ?x64 ?x1100 ?x458 (* (- 6) (* z00 (+ 6 z))) ?x1077 ?x515 (* z00 z00 (+ 6 z)))))
 (let ((?x215 (+ y z)))
 (let ((?x440 (+ 6 z)))
 (let ((?x1182 (+ 1 n)))
 (let ((?x750 (* ?x1182 ?x1182 ?x440 ?x440 ?x440 ?x215)))
 (let ((?x896 (* (+ (* (- 1) (* ?x1182 ?x1182 ?x1182 (+ x y) (+ x y))) ?x750) ?x1358)))
 (let ((?x1232 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x530 (* y00 y00)))
 (let ((?x985 (* 96 ?x530)))
 (let ((?x920 (* 16 (* y00 y00 y00))))
 (let ((?x790 (* (- 4) (* y y y))))
 (let ((?x739 (* x x)))
 (let ((?x740 (* 108 ?x739)))
 (let ((?x504 (* y y)))
 (let ((?x735 (* 24 ?x504)))
 (let ((?x1375 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x735 ?x740 ?x790 (* 18 (* y00 z00 y)) (* 24 ?x843) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x920 (* (- 6) (* z00 y y)) ?x985 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1232 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x486 (* 18 (* x00 z))))
 (let ((?x817 (* (- 36) ?x530)))
 (let ((?x325 (* z y)))
 (let ((?x564 (* (- 12) ?x325)))
 (let ((?x982 (* y00 z)))
 (let ((?x880 (* 12 ?x982)))
 (let ((?x407 (* (- 18) (* z x))))
 (let ((?x942 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x407 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x880 (* (- 6) ?x843) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x564 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x817 ?x486 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x458 (* 18 (* y00 x)) ?x71 ?x515 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x548 (* (- 24) ?x530)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x597 (+ (* (- 1) (* y00 z00 z)) ?x564 ?x407 (* 18 (* x00 z00)) ?x505 ?x548 ?x486 ?x880 (* 6 ?x843) (* 12 (* y00 y)) ?x64 ?x458 (* (- 6) (* z00 y)) ?x71 ?x515 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x546 (+ (* (- 6) ?x325) ?x388 ?x399 (* (- 12) ?x982) ?x844 ?x64 ?x458 (* (- 6) (* z00 z)) ?x71 ?x515 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1007 (* (- 1) ?x295)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1007 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x546 0) (= ?x597 0) (= ?x942 0) (= ?x1375 0) (not (= ?x896 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x585 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x484 (* (- 6) (* z z00))))
 (let ((?x436 (* z00 y00)))
 (let ((?x437 (* 18 ?x436)))
 (let ((?x410 (* z y00)))
 (let ((?x423 (* (- 12) ?x410)))
 (let ((?x379 (* y z)))
 (let ((?x380 (* (- 6) ?x379)))
 (let ((?x295 (* z00 z00)))
 (let ((?x1174 (* 12 ?x295)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x515 (* (- 108) x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x388 (* (- 1) ?x55)))
 (let ((?x50 (* z z)))
 (let ((?x502 (* (- 6) ?x50)))
 (let ((?x965 (* (- 144) y00)))
 (let ((?x1046 (* (- 36) z00)))
 (let ((?x64 (* 108 x)))
 (let ((?x455 (+ ?x64 (* 144 y) (* 36 z) ?x1046 ?x965 ?x502 ?x388 ?x515 ?x76 ?x1174 ?x380 ?x423 ?x437 ?x484)))
 (let ((?x215 (+ y z)))
 (let ((?x440 (+ 6 z)))
 (let ((?x1182 (+ 1 n)))
 (let ((?x750 (* ?x1182 ?x1182 ?x440 ?x440 ?x440 ?x215)))
 (let ((?x739 (* x x)))
 (let ((?x1201 (* (- 1) ?x739)))
 (let ((?x504 (* y y)))
 (let ((?x1274 (* (- 1) ?x504)))
 (let ((?x730 (+ (* (- 1) (* x x n n n)) (* (- 3) (* y y n n)) (* (- 6) (* x y n n)) (* (- 3) (* y y n)) (* (- 2) (* x y)) ?x1274 (* (- 3) (* x x n n)) ?x1201 (* (- 3) (* x x n)) ?x750 (* (- 6) (* x y n)) (* (- 2) (* x y n n n)) (* (- 1) (* y y n n n)))))
 (let ((?x1232 (* 108 (* x00 x00))))
 (let ((?x1129 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1125 (* z00 z00 z00 y00)))
 (let ((?x1035 (* (- 36) (* z00 y00 x00))))
 (let ((?x920 (* 16 (* y00 y00 y00))))
 (let ((?x834 (* z00 z00 x00)))
 (let ((?x1085 (* (- 18) ?x834)))
 (let ((?x790 (* (- 4) (* y y y))))
 (let ((?x740 (* 108 ?x739)))
 (let ((?x708 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x650 (* z00 z00 y00)))
 (let ((?x1186 (* (- 10) ?x650)))
 (let ((?x625 (* z00 y00 y00)))
 (let ((?x660 (* (- 12) ?x625)))
 (let ((?x530 (* y00 y00)))
 (let ((?x985 (* 96 ?x530)))
 (let ((?x735 (* 24 ?x504)))
 (let ((?x499 (* z00 x00)))
 (let ((?x393 (* 36 ?x499)))
 (let ((?x812 (* 24 ?x436)))
 (let ((?x385 (* y00 x00)))
 (let ((?x376 (* 216 ?x385)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1252 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x376 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x812 ?x393 ?x735 ?x985 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x660 ?x1186 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x708 ?x740 ?x790 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1085 (* (- 216) (* x y00)) ?x920 (* (- 12) (* y y y00)) ?x1035 (* (- 216) (* x x00)) ?x1125 ?x1129 (* 36 (* x z00 y00)) ?x1232)))
 (let (($x1257 (= ?x1252 0)))
 (let ((?x835 (* 3 ?x834)))
 (let ((?x897 (* 3 ?x650)))
 (let ((?x632 (* (- 1) ?x625)))
 (let ((?x562 (* 18 (* z x00))))
 (let ((?x817 (* (- 36) ?x530)))
 (let ((?x473 (* (- 18) (* x z))))
 (let ((?x724 (* (- 6) ?x436)))
 (let ((?x411 (* 12 ?x410)))
 (let ((?x386 (* (- 18) ?x385)))
 (let ((?x408 (* (- 12) ?x379)))
 (let ((?x135 (* y y z)))
 (let ((?x458 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x953 (+ ?x64 ?x71 ?x458 ?x515 (* (- 3) (* y z00 z00)) ?x135 ?x408 ?x386 (* (- 18) (* x y)) ?x411 ?x724 ?x473 ?x817 ?x562 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x632 ?x897 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x835 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x960 (= ?x953 0)))
 (let ((?x548 (* (- 24) ?x530)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x501 (* 18 ?x499)))
 (let ((?x565 (* 6 ?x436)))
 (let ((?x103 (* y z z00)))
 (let ((?x704 (+ ?x64 ?x71 ?x458 ?x515 ?x103 (* (- 1) (* y z00 z00)) ?x408 (* (- 1) (* z z00 y00)) ?x411 ?x565 ?x473 ?x501 ?x505 ?x548 ?x562 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x650 (* (- 18) (* x z00)))))
 (let (($x709 (= ?x704 0)))
 (let ((?x399 (* 6 ?x295)))
 (let (($x536 (= (+ ?x64 ?x71 ?x458 ?x388 ?x515 ?x76 ?x399 ?x380 ?x423 ?x437 ?x484) 0)))
 (let ((?x366 (* (- 12) y00)))
 (let ((?x365 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x369 (= (+ ?x45 ?x46 ?x365 ?x366 (* (- 1) ?x50) ?x295) 0)))
 (let (($x287 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x495 (and $x287 $x369 $x536 $x709 $x960 $x1257 (not (= (* ?x730 ?x455) 0)))))
 (let ((?x1077 (* 72 z)))
 (let ((?x1100 (* 180 y)))
 (let ((?x843 (* y00 z00)))
 (let ((?x844 (* 18 ?x843)))
 (let ((?x1358 (+ (* (- 6) (* ?x440 ?x215)) ?x388 ?x399 (* (- 12) (* y00 ?x440)) ?x844 ?x64 ?x1100 ?x458 (* (- 6) (* z00 ?x440)) ?x1077 ?x515 (* z00 z00 ?x440))))
 (let ((?x896 (* (+ (* (- 1) (* ?x1182 ?x1182 ?x1182 (+ x y) (+ x y))) ?x750) ?x1358)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1375 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x735 ?x740 ?x790 (* 18 (* y00 z00 y)) (* 24 ?x843) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x920 (* (- 6) (* z00 y y)) ?x985 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1232 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x486 (* 18 (* x00 z))))
 (let ((?x325 (* z y)))
 (let ((?x564 (* (- 12) ?x325)))
 (let ((?x982 (* y00 z)))
 (let ((?x880 (* 12 ?x982)))
 (let ((?x407 (* (- 18) (* z x))))
 (let ((?x942 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x407 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x880 (* (- 6) ?x843) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x564 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x817 ?x486 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x458 (* 18 (* y00 x)) ?x71 ?x515 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x597 (+ (* (- 1) (* y00 z00 z)) ?x564 ?x407 (* 18 (* x00 z00)) ?x505 ?x548 ?x486 ?x880 (* 6 ?x843) (* 12 (* y00 y)) ?x64 ?x458 (* (- 6) (* z00 y)) ?x71 ?x515 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x546 (+ (* (- 6) ?x325) ?x388 ?x399 (* (- 12) ?x982) ?x844 ?x64 ?x458 (* (- 6) (* z00 z)) ?x71 ?x515 (* z00 z00 z))))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1007 (* (- 1) ?x295)))
 (let (($x1094 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1007 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x546 0) (= ?x597 0) (= ?x942 0) (= ?x1375 0) (not (= ?x896 0)))))
 (rewrite (= $x1094 $x495)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x242 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ z 6)))
 (let ((?x215 (+ y z)))
 (let ((?x233 (+ n 1)))
 (let ((?x236 (+ (* (- 1) ?x233 ?x233 ?x233 (+ x y) (+ x y)) (* ?x233 ?x233 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x62 (* 18 y00 z00)))
 (let ((?x57 (* 6 z00 z00)))
 (let ((?x221 (- (+ (- (* (- 6) ?x215 ?x216) (* z00 z00 z00)) ?x57) (* 12 y00 ?x216))))
 (let ((?x227 (- (- (+ ?x221 ?x62 (* 108 (+ x y))) ?x67) (* 6 ?x216 z00))))
 (let (($x238 (= (* (+ (- (+ ?x227 (* 72 ?x215)) ?x74) (* ?x216 z00 z00)) ?x236) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) (* z00 z00 z00)) ?x57) ?x59)))
 (let ((?x75 (- (+ (- (- (+ ?x60 ?x62 ?x64) ?x67) (* 6 z z00)) ?x71) ?x74)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ ?x75 ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x238)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x584 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x515 (* (- 108) x00)))
 (let ((?x1077 (* 72 z)))
 (let ((?x458 (* (- 72) y00)))
 (let ((?x1100 (* 180 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x843 (* y00 z00)))
 (let ((?x844 (* 18 ?x843)))
 (let ((?x295 (* z00 z00)))
 (let ((?x399 (* 6 ?x295)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x388 (* (- 1) ?x55)))
 (let ((?x1358 (+ (* (- 6) (* (+ 6 z) (+ y z))) ?x388 ?x399 (* (- 12) (* y00 (+ 6 z))) ?x844 ?x64 ?x1100 ?x458 (* (- 6) (* z00 (+ 6 z))) ?x1077 ?x515 (* z00 z00 (+ 6 z)))))
 (let ((?x215 (+ y z)))
 (let ((?x440 (+ 6 z)))
 (let ((?x1182 (+ 1 n)))
 (let ((?x750 (* ?x1182 ?x1182 ?x440 ?x440 ?x440 ?x215)))
 (let ((?x896 (* (+ (* (- 1) (* ?x1182 ?x1182 ?x1182 (+ x y) (+ x y))) ?x750) ?x1358)))
 (let ((?x1232 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x530 (* y00 y00)))
 (let ((?x985 (* 96 ?x530)))
 (let ((?x920 (* 16 (* y00 y00 y00))))
 (let ((?x790 (* (- 4) (* y y y))))
 (let ((?x739 (* x x)))
 (let ((?x740 (* 108 ?x739)))
 (let ((?x504 (* y y)))
 (let ((?x735 (* 24 ?x504)))
 (let ((?x1375 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x735 ?x740 ?x790 (* 18 (* y00 z00 y)) (* 24 ?x843) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x920 (* (- 6) (* z00 y y)) ?x985 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1232 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x486 (* 18 (* x00 z))))
 (let ((?x817 (* (- 36) ?x530)))
 (let ((?x325 (* z y)))
 (let ((?x564 (* (- 12) ?x325)))
 (let ((?x982 (* y00 z)))
 (let ((?x880 (* 12 ?x982)))
 (let ((?x407 (* (- 18) (* z x))))
 (let ((?x942 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x407 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x880 (* (- 6) ?x843) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x564 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x817 ?x486 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x458 (* 18 (* y00 x)) ?x71 ?x515 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x548 (* (- 24) ?x530)))
 (let ((?x505 (* 12 ?x504)))
 (let ((?x597 (+ (* (- 1) (* y00 z00 z)) ?x564 ?x407 (* 18 (* x00 z00)) ?x505 ?x548 ?x486 ?x880 (* 6 ?x843) (* 12 (* y00 y)) ?x64 ?x458 (* (- 6) (* z00 y)) ?x71 ?x515 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x546 (+ (* (- 6) ?x325) ?x388 ?x399 (* (- 12) ?x982) ?x844 ?x64 ?x458 (* (- 6) (* z00 z)) ?x71 ?x515 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1007 (* (- 1) ?x295)))
 (let (($x1094 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1007 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x546 0) (= ?x597 0) (= ?x942 0) (= ?x1375 0) (not (= ?x896 0)))))
 (let ((?x216 (+ z 6)))
 (let ((?x233 (+ n 1)))
 (let ((?x236 (+ (* (- 1) ?x233 ?x233 ?x233 (+ x y) (+ x y)) (* ?x233 ?x233 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x62 (* 18 y00 z00)))
 (let ((?x221 (- (+ (- (* (- 6) ?x215 ?x216) ?x55) (* 6 z00 z00)) (* 12 y00 ?x216))))
 (let ((?x227 (- (- (+ ?x221 ?x62 (* 108 (+ x y))) ?x67) (* 6 ?x216 z00))))
 (let (($x238 (= (* (+ (- (+ ?x227 (* 72 ?x215)) ?x74) (* ?x216 z00 z00)) ?x236) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x75 (- (+ (- (- (+ ?x60 ?x62 ?x64) ?x67) (* 6 z z00)) ?x71) ?x74)))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x241 (and $x39 (= ?x51 0) (= (+ ?x75 ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x238)))))
 (rewrite (= $x241 $x1094))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x243 (asserted $x242)))
 (let ((@x623 (mp (mp @x243 (quant-intro (proof-bind ?x584) (= $x242 $x450)) $x450) (rewrite (= $x450 $x450)) $x450)))
 (let ((@x689 (mp~ (mp @x623 (quant-intro (proof-bind ?x585) (= $x450 $x639)) $x639) (sk (~ $x639 $x533)) $x533)))
 (let ((@x1087 (mp @x689 (rewrite (= $x533 $x1329)) $x1329)))
 (let ((@x694 (and-elim @x1087 $x1072)))
 (let ((@x532 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1072) $x692)) @x694 $x692)))
 (let (($x655 (>= ?x1196 0)))
 (let ((@x535 (and-elim @x1087 $x431)))
 (let ((@x664 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x431) $x655)) @x535 $x655)))
 (let (($x657 (<= ?x506 0)))
 (let ((@x892 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1072) $x657)) @x694 $x657)))
 (let (($x821 (<= ?x1196 0)))
 (let ((@x420 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x431) $x821)) @x535 $x821)))
 (let (($x553 (not (<= ?x400 0))))
 (let (($x703 (>= ?x400 0)))
 (let ((@x940 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x703)) @x420 @x892 @x664 @x532 false) $x703)))
 (let ((@x389 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1346 $x553 (not $x703))) (and-elim @x1087 $x439) (or $x553 (not $x703)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x389 @x940 $x553) @x420 @x892 @x664 @x532 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        32
 :arith-assert-upper        11
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-fixed-eqs           2
 :arith-max-min             282
 :arith-nonlinear-bounds    20
 :arith-num-rows            11
 :arith-pivots              6
 :arith-pseudo-nonlinear    2
 :arith-row-summations      13
 :arith-tableau-max-columns 108
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              2
 :max-memory                19.83
 :memory                    19.24
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                593606
 :num-checks                1
 :propagations              14
 :rlimit-count              9139
 :time                      0.01
 :total-time                0.02)
