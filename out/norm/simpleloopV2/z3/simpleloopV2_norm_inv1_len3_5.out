unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x213 (+ y00 x00 (* (- 1) x!1) (* (- 1) y!0))))
 (let (($x496 (<= ?x213 0)))
 (let (($x2296 (= ?x213 0)))
 (let ((?x2731 (+ 1 y!0)))
 (let ((?x435 (+ (- 1) x!1)))
 (let ((?x2730 (* ?x435 ?x435 ?x435 ?x2731 ?x2731 ?x2731 ?x2731)))
 (let ((?x455 (* 9 (* x00 x!1 x!1 y!0 y!0))))
 (let ((?x2725 (* (- 1) (* x!1 y!0 y!0 y!0 y!0))))
 (let ((?x2697 (* (- 3) (* x00 x!1 x!1 x!1 y!0))))
 (let ((?x2690 (* y!0 y!0)))
 (let ((?x1046 (* 3 ?x2690)))
 (let ((?x2687 (* y!0 y!0 y!0 y!0)))
 (let ((?x2685 (* ?x435 ?x435 ?x435 ?x435 ?x2731 ?x2731 ?x2731)))
 (let ((?x862 (* 3 (* x00 x!1 x!1))))
 (let ((?x1894 (* (- 3) (* y00 x!1 x!1 x!1 y!0))))
 (let ((?x1562 (* 3 (* y!0 y!0 y!0))))
 (let ((?x1569 (* x!1 x!1 y!0 y!0)))
 (let ((?x2712 (* (- 3) ?x1569)))
 (let ((?x507 (* (- 1) (* x!1 x!1 y!0 y!0 y!0))))
 (let ((?x1414 (* x!1 y!0 y!0 y!0)))
 (let ((?x2692 (* (- 2) ?x1414)))
 (let ((?x1692 (* 9 (* y00 x!1 x!1 y!0 y!0))))
 (let ((?x900 (* x!1 y!0)))
 (let ((?x169 (* 2 ?x900)))
 (let ((?x184 (* (- 6) (* x00 x!1 y!0))))
 (let ((?x417 (* (- 6) (* y00 x!1 y!0))))
 (let ((?x407 (* (- 1) (* y00 x!1 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x461 (* (- 2) (* x00 x!1 y!0 y!0 y!0))))
 (let ((?x2045 (* (- 3) (* x!1 x!1 y!0))))
 (let ((?x200 (* (- 2) (* y00 x!1 y!0 y!0 y!0))))
 (let ((?x465 (* (- 1) (* x00 x!1 x!1 x!1 y!0 y!0 y!0))))
 (let ((?x410 (* 3 (* y00 x!1 x!1))))
 (let ((?x185 (* x!1 x!1)))
 (let ((?x2732 (* (- 1) ?x185)))
 (let ((?x1693 (+ y00 x00 ?x2732 ?x410 (* 9 (* y00 x!1 x!1 y!0)) ?x465 ?x200 (* (- 2) (* y00 x!1)) (* (- 1) (* x00 x!1 x!1 x!1)) ?x2045 ?x461 (* 3 (* x00 x!1 x!1 y!0 y!0 y!0)) (* (- 6) (* y00 x!1 y!0 y!0)) (* 3 (* y00 x!1 x!1 y!0 y!0 y!0)) ?x407 (* (- 1) (* y00 x!1 x!1 x!1)) ?x417 ?x184 ?x169 (* 9 (* x00 x!1 x!1 y!0)) ?x1692 ?x2692 (* (- 2) (* x00 x!1)) ?x507 ?x2712 ?x1562 (* (- 3) (* y00 x!1 x!1 x!1 y!0 y!0)) ?x1894 ?x862 (* (- 3) (* x00 x!1 x!1 x!1 y!0 y!0)) ?x2685 ?x2687 ?x1046 ?x2697 (* (- 6) (* x00 x!1 y!0 y!0)) ?x2725 ?x455 ?x2730)))
 (let (($x419 (= ?x1693 0)))
 (let (($x1820 (not $x419)))
 (let ((?x439 (* (- 3) ?x2690)))
 (let ((?x2720 (+ 1 x!1)))
 (let ((?x1993 (+ (- 1) y!0)))
 (let ((?x2689 (* ?x1993 ?x1993 ?x1993 ?x2720 ?x2720 ?x2720 ?x2720)))
 (let ((?x222 (* (- 1) ?x2687)))
 (let ((?x2683 (* ?x1993 ?x1993 ?x1993 ?x1993 ?x2720 ?x2720 ?x2720)))
 (let ((?x430 (* 3 ?x1569)))
 (let ((?x2722 (* 2 ?x1414)))
 (let ((?x187 (* (- 2) ?x900)))
 (let ((?x477 (* y00 x!1 x!1 x!1)))
 (let ((?x373 (* x00 x!1 x!1 x!1)))
 (let ((?x591 (+ y00 x00 ?x185 ?x410 (* (- 9) (* y00 x!1 x!1 y!0)) ?x465 ?x200 (* 2 (* y00 x!1)) ?x373 ?x2045 ?x461 (* (- 3) (* x00 x!1 x!1 y!0 y!0 y!0)) (* 6 (* y00 x!1 y!0 y!0)) (* (- 3) (* y00 x!1 x!1 y!0 y!0 y!0)) ?x407 ?x477 ?x417 ?x184 ?x187 (* (- 9) (* x00 x!1 x!1 y!0)) ?x1692 ?x2722 (* 2 (* x00 x!1)) ?x507 ?x430 ?x1562 (* 3 (* y00 x!1 x!1 x!1 y!0 y!0)) ?x1894 ?x862 (* 3 (* x00 x!1 x!1 x!1 y!0 y!0)) ?x2683 ?x222 ?x2689 ?x439 ?x2697 (* 6 (* x00 x!1 y!0 y!0)) ?x2725 ?x455)))
 (let (($x573 (= ?x591 0)))
 (let (($x1910 (or (not $x573) $x1820)))
 (let (($x754 (and $x2296 $x1910)))
 (let ((?x2717 (* 9 (* x!1 x!1 y!0 y!0 y00))))
 (let ((?x360 (* (- 3) (* x!1 x!1 x!1 y!0 y00))))
 (let ((?x2721 (* (- 6) (* x!1 y!0 y00))))
 (let ((?x1763 (* x!1 x!1 x!1 y00)))
 (let ((?x2715 (* 3 (* x!1 x!1 y00))))
 (let ((?x2710 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 y00))))
 (let ((?x2726 (* (- 2) (* x!1 y!0 y!0 y!0 y00))))
 (let ((?x508 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y!0 x00))))
 (let ((?x1012 (* (- 2) (* x!1 y!0 y!0 y!0 x00))))
 (let ((?x2396 (* 9 (* x!1 x!1 y!0 y!0 x00))))
 (let ((?x1606 (* (- 3) (* x!1 x!1 x!1 y!0 x00))))
 (let ((?x572 (* (- 6) (* x!1 y!0 x00))))
 (let ((?x976 (* x!1 x!1 x!1 x00)))
 (let ((?x980 (* 3 (* x!1 x!1 x00))))
 (let ((?x2682 (+ y00 x00 (* 2 (* x!1 x00)) ?x980 ?x976 ?x2689 ?x572 (* (- 9) (* x!1 x!1 y!0 x00)) ?x1606 (* 6 (* x!1 y!0 y!0 x00)) ?x2396 (* 3 (* x!1 x!1 x!1 y!0 y!0 x00)) ?x1012 (* (- 3) (* x!1 x!1 y!0 y!0 y!0 x00)) ?x508 ?x439 ?x1562 ?x2722 ?x507 ?x185 ?x187 ?x2045 ?x430 ?x2726 (* (- 3) (* x!1 x!1 y!0 y!0 y!0 y00)) ?x2710 (* 2 (* x!1 y00)) ?x2715 ?x1763 ?x2721 (* (- 9) (* x!1 x!1 y!0 y00)) ?x360 (* 6 (* x!1 y!0 y!0 y00)) ?x2717 (* 3 (* x!1 x!1 x!1 y!0 y!0 y00)) ?x2683 ?x222 ?x2725)))
 (let ((?x214 (+ y00 x00 (* (- 2) (* x!1 x00)) ?x980 (* (- 1) ?x976) ?x572 (* 9 (* x!1 x!1 y!0 x00)) ?x1606 (* (- 6) (* x!1 y!0 y!0 x00)) ?x2396 (* (- 3) (* x!1 x!1 x!1 y!0 y!0 x00)) ?x1012 (* 3 (* x!1 x!1 y!0 y!0 y!0 x00)) ?x508 ?x1046 ?x1562 ?x2692 ?x507 ?x2732 ?x169 ?x2045 ?x2712 ?x2726 (* 3 (* x!1 x!1 y!0 y!0 y!0 y00)) ?x2710 (* (- 2) (* x!1 y00)) ?x2715 (* (- 1) ?x1763) ?x2721 (* 9 (* x!1 x!1 y!0 y00)) ?x360 (* (- 6) (* x!1 y!0 y!0 y00)) ?x2717 (* (- 3) (* x!1 x!1 x!1 y!0 y!0 y00)) ?x2730 ?x2687 ?x2725 ?x2685)))
 (let (($x2688 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x214 0)) (not (= ?x2682 0))))))
 (let (($x1982 (exists ((x Int) (y Int) )(! (let ((?x1214 (* x y y y y)))
 (let ((?x2152 (* (- 1) ?x1214)))
 (let ((?x1210 (* y y y y)))
 (let ((?x1208 (* (- 1) ?x1210)))
 (let ((?x1300 (+ 1 x)))
 (let ((?x504 (+ (- 1) y)))
 (let ((?x1029 (* ?x504 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300)))
 (let ((?x967 (* x x x y y y00)))
 (let ((?x1028 (* 3 ?x967)))
 (let ((?x959 (* x x y y y00)))
 (let ((?x2151 (* 9 ?x959)))
 (let ((?x956 (* x y y y00)))
 (let ((?x1026 (* 6 ?x956)))
 (let ((?x939 (* x x x y y00)))
 (let ((?x2150 (* (- 3) ?x939)))
 (let ((?x931 (* x x y y00)))
 (let ((?x2149 (* (- 9) ?x931)))
 (let ((?x928 (* x y y00)))
 (let ((?x2148 (* (- 6) ?x928)))
 (let ((?x923 (* x x x y00)))
 (let ((?x915 (* x x y00)))
 (let ((?x2147 (* 3 ?x915)))
 (let ((?x912 (* x y00)))
 (let ((?x1019 (* 2 ?x912)))
 (let ((?x904 (* x x x y y y y00)))
 (let ((?x2146 (* (- 1) ?x904)))
 (let ((?x902 (* x x y y y y00)))
 (let ((?x1030 (* (- 3) ?x902)))
 (let ((?x898 (* x y y y y00)))
 (let ((?x2145 (* (- 2) ?x898)))
 (let ((?x719 (* x x y y)))
 (let ((?x752 (* 3 ?x719)))
 (let ((?x704 (* x x y)))
 (let ((?x2144 (* (- 3) ?x704)))
 (let ((?x700 (* x y)))
 (let ((?x2143 (* (- 2) ?x700)))
 (let ((?x695 (* x x)))
 (let ((?x684 (* x x y y y)))
 (let ((?x2142 (* (- 1) ?x684)))
 (let ((?x682 (* x y y y)))
 (let ((?x1269 (* 2 ?x682)))
 (let ((?x678 (* y y y)))
 (let ((?x2141 (* 3 ?x678)))
 (let ((?x472 (* x x x y y y x00)))
 (let ((?x2140 (* (- 1) ?x472)))
 (let ((?x458 (* x x y y y x00)))
 (let ((?x495 (* (- 3) ?x458)))
 (let ((?x451 (* x y y y x00)))
 (let ((?x2139 (* (- 2) ?x451)))
 (let ((?x364 (* x x x y y x00)))
 (let ((?x493 (* 3 ?x364)))
 (let ((?x347 (* x x y y x00)))
 (let ((?x2138 (* 9 ?x347)))
 (let ((?x338 (* x y y x00)))
 (let ((?x491 (* 6 ?x338)))
 (let ((?x296 (* x x x y x00)))
 (let ((?x2137 (* (- 3) ?x296)))
 (let ((?x279 (* x x y x00)))
 (let ((?x2136 (* (- 9) ?x279)))
 (let ((?x270 (* x y x00)))
 (let ((?x2135 (* (- 6) ?x270)))
 (let ((?x261 (* ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300 ?x1300)))
 (let ((?x254 (* x x x x00)))
 (let ((?x246 (* x x x00)))
 (let ((?x2134 (* 3 ?x246)))
 (let ((?x243 (* x x00)))
 (let ((?x479 (* 2 ?x243)))
 (let ((?x423 (+ y00 x00 ?x479 ?x2134 ?x254 ?x261 ?x2135 ?x2136 ?x2137 ?x491 ?x2138 ?x493 ?x2139 ?x495 ?x2140 (* (- 3) (* y y)) ?x2141 ?x1269 ?x2142 ?x695 ?x2143 ?x2144 ?x752 ?x2145 ?x1030 ?x2146 ?x1019 ?x2147 ?x923 ?x2148 ?x2149 ?x2150 ?x1026 ?x2151 ?x1028 ?x1029 ?x1208 ?x2152)))
 (let ((?x107 (+ 1 y)))
 (let ((?x99 (+ (- 1) x)))
 (let ((?x1273 (* ?x99 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107)))
 (let ((?x1166 (* ?x99 ?x99 ?x99 ?x107 ?x107 ?x107 ?x107)))
 (let ((?x387 (+ y00 x00 (* (- 2) ?x243) ?x2134 (* (- 1) ?x254) ?x2135 (* 9 ?x279) ?x2137 (* (- 6) ?x338) ?x2138 (* (- 3) ?x364) ?x2139 (* 3 ?x458) ?x2140 (* 3 (* y y)) ?x2141 (* (- 2) ?x682) ?x2142 (* (- 1) ?x695) (* 2 ?x700) ?x2144 (* (- 3) ?x719) ?x2145 (* 3 ?x902) ?x2146 (* (- 2) ?x912) ?x2147 (* (- 1) ?x923) ?x2148 (* 9 ?x931) ?x2150 (* (- 6) ?x956) ?x2151 (* (- 3) ?x967) ?x1166 ?x1210 ?x2152 ?x1273)))
 (let (($x109 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x109 (or (not (= ?x387 0)) (not (= ?x423 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x2751 (exists ((x Int) (y Int) )(! (let ((?x107 (+ 1 y)))
 (let ((?x99 (+ (- 1) x)))
 (let ((?x1273 (* ?x99 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107)))
 (let ((?x1288 (* (- 1) ?x1273)))
 (let ((?x1214 (* x y y y y)))
 (let ((?x1210 (* y y y y)))
 (let ((?x1208 (* (- 1) ?x1210)))
 (let ((?x1205 (* (- 1) (* y 1 y y))))
 (let ((?x1204 (* (- 1) (* y y 1 y))))
 (let ((?x1198 (* (- 1) (* y 1 1 y))))
 (let ((?x1195 (* y y y 1)))
 (let ((?x1193 (* (- 1) ?x1195)))
 (let ((?x1192 (* (- 1) (* y 1 y 1))))
 (let ((?x1185 (* y y 1 1)))
 (let ((?x1186 (* (- 1) ?x1185)))
 (let ((?x1183 (* (- 1) (* y 1 1 1))))
 (let ((?x1166 (* ?x99 ?x99 ?x99 ?x107 ?x107 ?x107 ?x107)))
 (let ((?x1282 (* (- 1) ?x1166)))
 (let ((?x967 (* x x x y y y00)))
 (let ((?x1028 (* 3 ?x967)))
 (let ((?x956 (* x y y y00)))
 (let ((?x1026 (* 6 ?x956)))
 (let ((?x939 (* x x x y y00)))
 (let ((?x1024 (* 3 ?x939)))
 (let ((?x931 (* x x y y00)))
 (let ((?x2149 (* (- 9) ?x931)))
 (let ((?x923 (* x x x y00)))
 (let ((?x912 (* x y00)))
 (let ((?x1019 (* 2 ?x912)))
 (let ((?x904 (* x x x y y y y00)))
 (let ((?x902 (* x x y y y y00)))
 (let ((?x1030 (* (- 3) ?x902)))
 (let ((?x719 (* x x y y)))
 (let ((?x752 (* 3 ?x719)))
 (let ((?x1293 (* 3 (* x y y))))
 (let ((?x704 (* x x y)))
 (let ((?x749 (* 3 ?x704)))
 (let ((?x700 (* x y)))
 (let ((?x695 (* x x)))
 (let ((?x684 (* x x y y y)))
 (let ((?x682 (* x y y y)))
 (let ((?x1269 (* 2 ?x682)))
 (let ((?x676 (* (- 1) (* x 1 y y))))
 (let ((?x671 (* y y)))
 (let ((?x1272 (* 2 ?x671)))
 (let ((?x669 (* (- 1) (* x y 1 y))))
 (let ((?x665 (* (- 1) (* y 1 y))))
 (let ((?x662 (* (- 1) (* x 1 1 y))))
 (let ((?x655 (* (- 1) (* x y y 1))))
 (let ((?x651 (* (- 1) (* y y 1))))
 (let ((?x648 (* (- 1) (* x 1 y 1))))
 (let ((?x644 (* (- 1) (* y 1))))
 (let ((?x641 (* (- 1) (* x y 1 1))))
 (let ((?x637 (* (- 1) (* y 1 1))))
 (let ((?x634 (* (- 1) (* x 1 1 1))))
 (let ((?x472 (* x x x y y y x00)))
 (let ((?x458 (* x x y y y x00)))
 (let ((?x495 (* (- 3) ?x458)))
 (let ((?x364 (* x x x y y x00)))
 (let ((?x493 (* 3 ?x364)))
 (let ((?x338 (* x y y x00)))
 (let ((?x491 (* 6 ?x338)))
 (let ((?x296 (* x x x y x00)))
 (let ((?x489 (* 3 ?x296)))
 (let ((?x279 (* x x y x00)))
 (let ((?x2136 (* (- 9) ?x279)))
 (let ((?x254 (* x x x x00)))
 (let ((?x243 (* x x00)))
 (let ((?x479 (* 2 ?x243)))
 (let ((?x90 (* (- 1) x00)))
 (let ((?x83 (* (- 1) y00)))
 (let ((?x747 (* 3 y)))
 (let ((?x2744 (+ x ?x747 ?x83 ?x90 ?x479 (* (- 3) (* x x x00)) ?x254 (* 6 (* x y x00)) ?x2136 ?x489 ?x491 (* (- 9) (* x x y y x00)) ?x493 (* 2 (* x y y y x00)) ?x495 ?x472 ?x634 ?x637 ?x641 ?x644 ?x648 ?x651 ?x655 ?x662 ?x665 ?x669 ?x1272 ?x676 ?x1269 ?x684 ?x695 ?x700 ?x749 ?x1293 ?x752 (* 2 (* x y y y y00)) ?x1030 ?x904 ?x1019 (* (- 3) (* x x y00)) ?x923 (* 6 (* x y y00)) ?x2149 ?x1024 ?x1026 (* (- 9) (* x x y y y00)) ?x1028 ?x1282 ?x1183 ?x1186 ?x1192 ?x1193 ?x1198 ?x1204 ?x1205 ?x1208 ?x1214 ?x1288)))
 (let ((?x2152 (* (- 1) ?x1214)))
 (let ((?x1300 (+ 1 x)))
 (let ((?x504 (+ (- 1) y)))
 (let ((?x1029 (* ?x504 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300)))
 (let ((?x959 (* x x y y y00)))
 (let ((?x2151 (* 9 ?x959)))
 (let ((?x2150 (* (- 3) ?x939)))
 (let ((?x928 (* x y y00)))
 (let ((?x2148 (* (- 6) ?x928)))
 (let ((?x915 (* x x y00)))
 (let ((?x2147 (* 3 ?x915)))
 (let ((?x2146 (* (- 1) ?x904)))
 (let ((?x898 (* x y y y y00)))
 (let ((?x2145 (* (- 2) ?x898)))
 (let ((?x2142 (* (- 1) ?x684)))
 (let ((?x2140 (* (- 1) ?x472)))
 (let ((?x451 (* x y y y x00)))
 (let ((?x2139 (* (- 2) ?x451)))
 (let ((?x347 (* x x y y x00)))
 (let ((?x2138 (* 9 ?x347)))
 (let ((?x2137 (* (- 3) ?x296)))
 (let ((?x270 (* x y x00)))
 (let ((?x2135 (* (- 6) ?x270)))
 (let ((?x261 (* ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300 ?x1300)))
 (let ((?x246 (* x x x00)))
 (let ((?x2134 (* 3 ?x246)))
 (let ((?x718 (+ y00 x00 ?x479 ?x2134 ?x254 ?x261 ?x2135 ?x2136 ?x2137 ?x491 ?x2138 ?x493 (* y (- 1) 1 1) (* y (- 1) x 1) (* y y x 1) (* y (- 1) 1 x) (* y y 1 x) (* y (- 1) x x) ?x2139 ?x495 ?x2140 (* (- 2) ?x671) (* 2 (* y y y)) ?x1269 ?x2142 ?x695 (* (- 1) ?x700) (* (- 2) ?x704) ?x752 ?x2145 ?x1030 ?x2146 ?x1019 ?x2147 ?x923 ?x2148 ?x2149 ?x2150 ?x1026 ?x2151 ?x1028 ?x1029 (* y (- 1) y 1) ?x1185 ?x1195 ?x1208 ?x2152 (* y (- 1) (- 1) 1) (* y y (- 1) 1) (* y (- 1) (- 1) x) (* y y (- 1) x) (* y (- 1) y x))))
 (let (($x109 (= (+ x y ?x83 ?x90) 0)))
 (and $x109 (or (not (= ?x718 0)) (not (= ?x2744 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x376 (lambda ((x Int) (y Int) )(let ((?x1214 (* x y y y y)))
 (let ((?x2152 (* (- 1) ?x1214)))
 (let ((?x1210 (* y y y y)))
 (let ((?x1208 (* (- 1) ?x1210)))
 (let ((?x1300 (+ 1 x)))
 (let ((?x504 (+ (- 1) y)))
 (let ((?x1029 (* ?x504 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300)))
 (let ((?x967 (* x x x y y y00)))
 (let ((?x1028 (* 3 ?x967)))
 (let ((?x959 (* x x y y y00)))
 (let ((?x2151 (* 9 ?x959)))
 (let ((?x956 (* x y y y00)))
 (let ((?x1026 (* 6 ?x956)))
 (let ((?x939 (* x x x y y00)))
 (let ((?x2150 (* (- 3) ?x939)))
 (let ((?x931 (* x x y y00)))
 (let ((?x2149 (* (- 9) ?x931)))
 (let ((?x928 (* x y y00)))
 (let ((?x2148 (* (- 6) ?x928)))
 (let ((?x923 (* x x x y00)))
 (let ((?x915 (* x x y00)))
 (let ((?x2147 (* 3 ?x915)))
 (let ((?x912 (* x y00)))
 (let ((?x1019 (* 2 ?x912)))
 (let ((?x904 (* x x x y y y y00)))
 (let ((?x2146 (* (- 1) ?x904)))
 (let ((?x902 (* x x y y y y00)))
 (let ((?x1030 (* (- 3) ?x902)))
 (let ((?x898 (* x y y y y00)))
 (let ((?x2145 (* (- 2) ?x898)))
 (let ((?x719 (* x x y y)))
 (let ((?x752 (* 3 ?x719)))
 (let ((?x704 (* x x y)))
 (let ((?x2144 (* (- 3) ?x704)))
 (let ((?x700 (* x y)))
 (let ((?x2143 (* (- 2) ?x700)))
 (let ((?x695 (* x x)))
 (let ((?x684 (* x x y y y)))
 (let ((?x2142 (* (- 1) ?x684)))
 (let ((?x682 (* x y y y)))
 (let ((?x1269 (* 2 ?x682)))
 (let ((?x678 (* y y y)))
 (let ((?x2141 (* 3 ?x678)))
 (let ((?x472 (* x x x y y y x00)))
 (let ((?x2140 (* (- 1) ?x472)))
 (let ((?x458 (* x x y y y x00)))
 (let ((?x495 (* (- 3) ?x458)))
 (let ((?x451 (* x y y y x00)))
 (let ((?x2139 (* (- 2) ?x451)))
 (let ((?x364 (* x x x y y x00)))
 (let ((?x493 (* 3 ?x364)))
 (let ((?x347 (* x x y y x00)))
 (let ((?x2138 (* 9 ?x347)))
 (let ((?x338 (* x y y x00)))
 (let ((?x491 (* 6 ?x338)))
 (let ((?x296 (* x x x y x00)))
 (let ((?x2137 (* (- 3) ?x296)))
 (let ((?x279 (* x x y x00)))
 (let ((?x2136 (* (- 9) ?x279)))
 (let ((?x270 (* x y x00)))
 (let ((?x2135 (* (- 6) ?x270)))
 (let ((?x261 (* ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300 ?x1300)))
 (let ((?x254 (* x x x x00)))
 (let ((?x246 (* x x x00)))
 (let ((?x2134 (* 3 ?x246)))
 (let ((?x243 (* x x00)))
 (let ((?x479 (* 2 ?x243)))
 (let ((?x423 (+ y00 x00 ?x479 ?x2134 ?x254 ?x261 ?x2135 ?x2136 ?x2137 ?x491 ?x2138 ?x493 ?x2139 ?x495 ?x2140 (* (- 3) (* y y)) ?x2141 ?x1269 ?x2142 ?x695 ?x2143 ?x2144 ?x752 ?x2145 ?x1030 ?x2146 ?x1019 ?x2147 ?x923 ?x2148 ?x2149 ?x2150 ?x1026 ?x2151 ?x1028 ?x1029 ?x1208 ?x2152)))
 (let ((?x107 (+ 1 y)))
 (let ((?x99 (+ (- 1) x)))
 (let ((?x1273 (* ?x99 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107)))
 (let ((?x1166 (* ?x99 ?x99 ?x99 ?x107 ?x107 ?x107 ?x107)))
 (let ((?x387 (+ y00 x00 (* (- 2) ?x243) ?x2134 (* (- 1) ?x254) ?x2135 (* 9 ?x279) ?x2137 (* (- 6) ?x338) ?x2138 (* (- 3) ?x364) ?x2139 (* 3 ?x458) ?x2140 (* 3 (* y y)) ?x2141 (* (- 2) ?x682) ?x2142 (* (- 1) ?x695) (* 2 ?x700) ?x2144 (* (- 3) ?x719) ?x2145 (* 3 ?x902) ?x2146 (* (- 2) ?x912) ?x2147 (* (- 1) ?x923) ?x2148 (* 9 ?x931) ?x2150 (* (- 6) ?x956) ?x2151 (* (- 3) ?x967) ?x1166 ?x1210 ?x2152 ?x1273)))
 (let (($x109 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x444 (and $x109 (or (not (= ?x387 0)) (not (= ?x423 0))))))
 (let ((?x1288 (* (- 1) ?x1273)))
 (let ((?x1205 (* (- 1) (* y 1 y y))))
 (let ((?x1204 (* (- 1) (* y y 1 y))))
 (let ((?x1198 (* (- 1) (* y 1 1 y))))
 (let ((?x1195 (* y y y 1)))
 (let ((?x1193 (* (- 1) ?x1195)))
 (let ((?x1192 (* (- 1) (* y 1 y 1))))
 (let ((?x1185 (* y y 1 1)))
 (let ((?x1186 (* (- 1) ?x1185)))
 (let ((?x1183 (* (- 1) (* y 1 1 1))))
 (let ((?x1282 (* (- 1) ?x1166)))
 (let ((?x1024 (* 3 ?x939)))
 (let ((?x1293 (* 3 (* x y y))))
 (let ((?x749 (* 3 ?x704)))
 (let ((?x676 (* (- 1) (* x 1 y y))))
 (let ((?x671 (* y y)))
 (let ((?x1272 (* 2 ?x671)))
 (let ((?x669 (* (- 1) (* x y 1 y))))
 (let ((?x665 (* (- 1) (* y 1 y))))
 (let ((?x662 (* (- 1) (* x 1 1 y))))
 (let ((?x655 (* (- 1) (* x y y 1))))
 (let ((?x651 (* (- 1) (* y y 1))))
 (let ((?x648 (* (- 1) (* x 1 y 1))))
 (let ((?x644 (* (- 1) (* y 1))))
 (let ((?x641 (* (- 1) (* x y 1 1))))
 (let ((?x637 (* (- 1) (* y 1 1))))
 (let ((?x634 (* (- 1) (* x 1 1 1))))
 (let ((?x489 (* 3 ?x296)))
 (let ((?x90 (* (- 1) x00)))
 (let ((?x83 (* (- 1) y00)))
 (let ((?x747 (* 3 y)))
 (let ((?x2744 (+ x ?x747 ?x83 ?x90 ?x479 (* (- 3) ?x246) ?x254 (* 6 ?x270) ?x2136 ?x489 ?x491 (* (- 9) ?x347) ?x493 (* 2 ?x451) ?x495 ?x472 ?x634 ?x637 ?x641 ?x644 ?x648 ?x651 ?x655 ?x662 ?x665 ?x669 ?x1272 ?x676 ?x1269 ?x684 ?x695 ?x700 ?x749 ?x1293 ?x752 (* 2 ?x898) ?x1030 ?x904 ?x1019 (* (- 3) ?x915) ?x923 (* 6 ?x928) ?x2149 ?x1024 ?x1026 (* (- 9) ?x959) ?x1028 ?x1282 ?x1183 ?x1186 ?x1192 ?x1193 ?x1198 ?x1204 ?x1205 ?x1208 ?x1214 ?x1288)))
 (let ((?x718 (+ y00 x00 ?x479 ?x2134 ?x254 ?x261 ?x2135 ?x2136 ?x2137 ?x491 ?x2138 ?x493 (* y (- 1) 1 1) (* y (- 1) x 1) (* y y x 1) (* y (- 1) 1 x) (* y y 1 x) (* y (- 1) x x) ?x2139 ?x495 ?x2140 (* (- 2) ?x671) (* 2 ?x678) ?x1269 ?x2142 ?x695 (* (- 1) ?x700) (* (- 2) ?x704) ?x752 ?x2145 ?x1030 ?x2146 ?x1019 ?x2147 ?x923 ?x2148 ?x2149 ?x2150 ?x1026 ?x2151 ?x1028 ?x1029 (* y (- 1) y 1) ?x1185 ?x1195 ?x1208 ?x2152 (* y (- 1) (- 1) 1) (* y y (- 1) 1) (* y (- 1) (- 1) x) (* y y (- 1) x) (* y (- 1) y x))))
 (let (($x659 (and $x109 (or (not (= ?x718 0)) (not (= ?x2744 0))))))
 (rewrite (= $x659 $x444))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x924 (exists ((x Int) (y Int) )(! (let ((?x107 (+ 1 y)))
 (let ((?x99 (+ (- 1) x)))
 (let ((?x1273 (* ?x99 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107)))
 (let ((?x1288 (* (- 1) ?x1273)))
 (let ((?x1166 (* ?x99 ?x99 ?x99 ?x107 ?x107 ?x107 ?x107)))
 (let ((?x1282 (* (- 1) ?x1166)))
 (let ((?x90 (* (- 1) x00)))
 (let ((?x83 (* (- 1) y00)))
 (let ((?x1006 (+ (* x00 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107) (* (- 1) (* x00 ?x99 ?x107 ?x107 ?x107)) x (* ?x99 ?x99 ?x107 ?x107 ?x107) ?x83 (* y00 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107) (* (- 1) (* y00 ?x99 ?x107 ?x107 ?x107)) ?x90 y ?x1282 ?x1288 (* ?x99 ?x107 ?x107 ?x107 ?x107))))
 (let ((?x1300 (+ 1 x)))
 (let ((?x504 (+ (- 1) y)))
 (let ((?x630 (+ (* x00 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300) (* (- 1) (* x00 ?x504 ?x504 ?x504 ?x1300)) x (* ?x504 ?x504 ?x504 ?x1300 ?x1300) ?x83 (* y00 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300) (* (- 1) (* y00 ?x504 ?x504 ?x504 ?x1300)) ?x90 y (* (- 1) (* ?x504 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300)) (* (- 1) (* ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300 ?x1300)) (* ?x504 ?x504 ?x504 ?x504 ?x1300))))
 (and (= (+ x ?x83 ?x90 y) 0) (or (not (= ?x630 0)) (not (= ?x1006 0)))))))))))))))) :qid k!27))
 ))
 (let ((?x1526 (lambda ((x Int) (y Int) )(let ((?x107 (+ 1 y)))
 (let ((?x99 (+ (- 1) x)))
 (let ((?x1273 (* ?x99 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107)))
 (let ((?x1288 (* (- 1) ?x1273)))
 (let ((?x1214 (* x y y y y)))
 (let ((?x1210 (* y y y y)))
 (let ((?x1208 (* (- 1) ?x1210)))
 (let ((?x1205 (* (- 1) (* y 1 y y))))
 (let ((?x1204 (* (- 1) (* y y 1 y))))
 (let ((?x1198 (* (- 1) (* y 1 1 y))))
 (let ((?x1195 (* y y y 1)))
 (let ((?x1193 (* (- 1) ?x1195)))
 (let ((?x1192 (* (- 1) (* y 1 y 1))))
 (let ((?x1185 (* y y 1 1)))
 (let ((?x1186 (* (- 1) ?x1185)))
 (let ((?x1183 (* (- 1) (* y 1 1 1))))
 (let ((?x1166 (* ?x99 ?x99 ?x99 ?x107 ?x107 ?x107 ?x107)))
 (let ((?x1282 (* (- 1) ?x1166)))
 (let ((?x967 (* x x x y y y00)))
 (let ((?x1028 (* 3 ?x967)))
 (let ((?x956 (* x y y y00)))
 (let ((?x1026 (* 6 ?x956)))
 (let ((?x939 (* x x x y y00)))
 (let ((?x1024 (* 3 ?x939)))
 (let ((?x931 (* x x y y00)))
 (let ((?x2149 (* (- 9) ?x931)))
 (let ((?x923 (* x x x y00)))
 (let ((?x912 (* x y00)))
 (let ((?x1019 (* 2 ?x912)))
 (let ((?x904 (* x x x y y y y00)))
 (let ((?x902 (* x x y y y y00)))
 (let ((?x1030 (* (- 3) ?x902)))
 (let ((?x719 (* x x y y)))
 (let ((?x752 (* 3 ?x719)))
 (let ((?x1293 (* 3 (* x y y))))
 (let ((?x704 (* x x y)))
 (let ((?x749 (* 3 ?x704)))
 (let ((?x700 (* x y)))
 (let ((?x695 (* x x)))
 (let ((?x684 (* x x y y y)))
 (let ((?x682 (* x y y y)))
 (let ((?x1269 (* 2 ?x682)))
 (let ((?x676 (* (- 1) (* x 1 y y))))
 (let ((?x671 (* y y)))
 (let ((?x1272 (* 2 ?x671)))
 (let ((?x669 (* (- 1) (* x y 1 y))))
 (let ((?x665 (* (- 1) (* y 1 y))))
 (let ((?x662 (* (- 1) (* x 1 1 y))))
 (let ((?x655 (* (- 1) (* x y y 1))))
 (let ((?x651 (* (- 1) (* y y 1))))
 (let ((?x648 (* (- 1) (* x 1 y 1))))
 (let ((?x644 (* (- 1) (* y 1))))
 (let ((?x641 (* (- 1) (* x y 1 1))))
 (let ((?x637 (* (- 1) (* y 1 1))))
 (let ((?x634 (* (- 1) (* x 1 1 1))))
 (let ((?x472 (* x x x y y y x00)))
 (let ((?x458 (* x x y y y x00)))
 (let ((?x495 (* (- 3) ?x458)))
 (let ((?x364 (* x x x y y x00)))
 (let ((?x493 (* 3 ?x364)))
 (let ((?x338 (* x y y x00)))
 (let ((?x491 (* 6 ?x338)))
 (let ((?x296 (* x x x y x00)))
 (let ((?x489 (* 3 ?x296)))
 (let ((?x279 (* x x y x00)))
 (let ((?x2136 (* (- 9) ?x279)))
 (let ((?x254 (* x x x x00)))
 (let ((?x243 (* x x00)))
 (let ((?x479 (* 2 ?x243)))
 (let ((?x90 (* (- 1) x00)))
 (let ((?x83 (* (- 1) y00)))
 (let ((?x747 (* 3 y)))
 (let ((?x2744 (+ x ?x747 ?x83 ?x90 ?x479 (* (- 3) (* x x x00)) ?x254 (* 6 (* x y x00)) ?x2136 ?x489 ?x491 (* (- 9) (* x x y y x00)) ?x493 (* 2 (* x y y y x00)) ?x495 ?x472 ?x634 ?x637 ?x641 ?x644 ?x648 ?x651 ?x655 ?x662 ?x665 ?x669 ?x1272 ?x676 ?x1269 ?x684 ?x695 ?x700 ?x749 ?x1293 ?x752 (* 2 (* x y y y y00)) ?x1030 ?x904 ?x1019 (* (- 3) (* x x y00)) ?x923 (* 6 (* x y y00)) ?x2149 ?x1024 ?x1026 (* (- 9) (* x x y y y00)) ?x1028 ?x1282 ?x1183 ?x1186 ?x1192 ?x1193 ?x1198 ?x1204 ?x1205 ?x1208 ?x1214 ?x1288)))
 (let ((?x2152 (* (- 1) ?x1214)))
 (let ((?x1300 (+ 1 x)))
 (let ((?x504 (+ (- 1) y)))
 (let ((?x1029 (* ?x504 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300)))
 (let ((?x959 (* x x y y y00)))
 (let ((?x2151 (* 9 ?x959)))
 (let ((?x2150 (* (- 3) ?x939)))
 (let ((?x928 (* x y y00)))
 (let ((?x2148 (* (- 6) ?x928)))
 (let ((?x915 (* x x y00)))
 (let ((?x2147 (* 3 ?x915)))
 (let ((?x2146 (* (- 1) ?x904)))
 (let ((?x898 (* x y y y y00)))
 (let ((?x2145 (* (- 2) ?x898)))
 (let ((?x2142 (* (- 1) ?x684)))
 (let ((?x2140 (* (- 1) ?x472)))
 (let ((?x451 (* x y y y x00)))
 (let ((?x2139 (* (- 2) ?x451)))
 (let ((?x347 (* x x y y x00)))
 (let ((?x2138 (* 9 ?x347)))
 (let ((?x2137 (* (- 3) ?x296)))
 (let ((?x270 (* x y x00)))
 (let ((?x2135 (* (- 6) ?x270)))
 (let ((?x261 (* ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300 ?x1300)))
 (let ((?x246 (* x x x00)))
 (let ((?x2134 (* 3 ?x246)))
 (let ((?x718 (+ y00 x00 ?x479 ?x2134 ?x254 ?x261 ?x2135 ?x2136 ?x2137 ?x491 ?x2138 ?x493 (* y (- 1) 1 1) (* y (- 1) x 1) (* y y x 1) (* y (- 1) 1 x) (* y y 1 x) (* y (- 1) x x) ?x2139 ?x495 ?x2140 (* (- 2) ?x671) (* 2 (* y y y)) ?x1269 ?x2142 ?x695 (* (- 1) ?x700) (* (- 2) ?x704) ?x752 ?x2145 ?x1030 ?x2146 ?x1019 ?x2147 ?x923 ?x2148 ?x2149 ?x2150 ?x1026 ?x2151 ?x1028 ?x1029 (* y (- 1) y 1) ?x1185 ?x1195 ?x1208 ?x2152 (* y (- 1) (- 1) 1) (* y y (- 1) 1) (* y (- 1) (- 1) x) (* y y (- 1) x) (* y (- 1) y x))))
 (let (($x109 (= (+ x y ?x83 ?x90) 0)))
 (let (($x659 (and $x109 (or (not (= ?x718 0)) (not (= ?x2744 0))))))
 (let ((?x1006 (+ (* x00 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107) (* (- 1) (* x00 ?x99 ?x107 ?x107 ?x107)) x (* ?x99 ?x99 ?x107 ?x107 ?x107) ?x83 (* y00 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107) (* (- 1) (* y00 ?x99 ?x107 ?x107 ?x107)) ?x90 y ?x1282 ?x1288 (* ?x99 ?x107 ?x107 ?x107 ?x107))))
 (let ((?x630 (+ (* x00 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300) (* (- 1) (* x00 ?x504 ?x504 ?x504 ?x1300)) x (* ?x504 ?x504 ?x504 ?x1300 ?x1300) ?x83 (* y00 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300) (* (- 1) (* y00 ?x504 ?x504 ?x504 ?x1300)) ?x90 y (* (- 1) ?x1029) (* (- 1) ?x261) (* ?x504 ?x504 ?x504 ?x504 ?x1300))))
 (let (($x818 (and (= (+ x ?x83 ?x90 y) 0) (or (not (= ?x630 0)) (not (= ?x1006 0))))))
 (rewrite (= $x818 $x659))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x80 (exists ((x Int) (y Int) )(! (let ((?x57 (- y 1)))
 (let ((?x56 (+ x 1)))
 (let ((?x60 (- (* ?x56 ?x56 ?x56 x00 ?x57 ?x57 ?x57) (* ?x56 x00 ?x57 ?x57 ?x57))))
 (let ((?x65 (+ (- (+ ?x60 x 1 (* ?x56 ?x56 ?x57 ?x57 ?x57)) y00) (* ?x56 ?x56 ?x56 ?x57 ?x57 ?x57 y00))))
 (let ((?x72 (- (+ (- (- ?x65 (* ?x56 ?x57 ?x57 ?x57 y00)) x00) ?x57) (* ?x56 ?x56 ?x56 ?x57 ?x57 ?x57 ?x57))))
 (let ((?x75 (+ (- ?x72 (* ?x56 ?x56 ?x56 ?x56 ?x57 ?x57 ?x57)) (* ?x56 ?x57 ?x57 ?x57 ?x57))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x38 (- (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35) (* ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x43 (+ (- (+ ?x38 ?x34 (* ?x34 ?x34 ?x35 ?x35 ?x35)) y00) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x50 (- (+ (- (- ?x43 (* ?x34 ?x35 ?x35 ?x35 y00)) x00) y 1) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x53 (+ (- ?x50 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x53 0)) (not (= ?x75 0)))))))))))))))) :qid k!27))
 ))
 (let ((?x802 (lambda ((x Int) (y Int) )(let ((?x107 (+ 1 y)))
 (let ((?x99 (+ (- 1) x)))
 (let ((?x1273 (* ?x99 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107)))
 (let ((?x1288 (* (- 1) ?x1273)))
 (let ((?x1166 (* ?x99 ?x99 ?x99 ?x107 ?x107 ?x107 ?x107)))
 (let ((?x1282 (* (- 1) ?x1166)))
 (let ((?x90 (* (- 1) x00)))
 (let ((?x83 (* (- 1) y00)))
 (let ((?x1006 (+ (* x00 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107) (* (- 1) (* x00 ?x99 ?x107 ?x107 ?x107)) x (* ?x99 ?x99 ?x107 ?x107 ?x107) ?x83 (* y00 ?x99 ?x99 ?x99 ?x107 ?x107 ?x107) (* (- 1) (* y00 ?x99 ?x107 ?x107 ?x107)) ?x90 y ?x1282 ?x1288 (* ?x99 ?x107 ?x107 ?x107 ?x107))))
 (let ((?x1300 (+ 1 x)))
 (let ((?x504 (+ (- 1) y)))
 (let ((?x630 (+ (* x00 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300) (* (- 1) (* x00 ?x504 ?x504 ?x504 ?x1300)) x (* ?x504 ?x504 ?x504 ?x1300 ?x1300) ?x83 (* y00 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300) (* (- 1) (* y00 ?x504 ?x504 ?x504 ?x1300)) ?x90 y (* (- 1) (* ?x504 ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300)) (* (- 1) (* ?x504 ?x504 ?x504 ?x1300 ?x1300 ?x1300 ?x1300)) (* ?x504 ?x504 ?x504 ?x504 ?x1300))))
 (let (($x818 (and (= (+ x ?x83 ?x90 y) 0) (or (not (= ?x630 0)) (not (= ?x1006 0))))))
 (let ((?x57 (- y 1)))
 (let ((?x56 (+ x 1)))
 (let ((?x60 (- (* ?x56 ?x56 ?x56 x00 ?x57 ?x57 ?x57) (* ?x56 x00 ?x57 ?x57 ?x57))))
 (let ((?x65 (+ (- (+ ?x60 x 1 (* ?x56 ?x56 ?x57 ?x57 ?x57)) y00) (* ?x56 ?x56 ?x56 ?x57 ?x57 ?x57 y00))))
 (let ((?x72 (- (+ (- (- ?x65 (* ?x56 ?x57 ?x57 ?x57 y00)) x00) ?x57) (* ?x56 ?x56 ?x56 ?x57 ?x57 ?x57 ?x57))))
 (let ((?x75 (+ (- ?x72 (* ?x56 ?x56 ?x56 ?x56 ?x57 ?x57 ?x57)) (* ?x56 ?x57 ?x57 ?x57 ?x57))))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x38 (- (* ?x34 ?x34 ?x34 x00 ?x35 ?x35 ?x35) (* ?x34 x00 ?x35 ?x35 ?x35))))
 (let ((?x43 (+ (- (+ ?x38 ?x34 (* ?x34 ?x34 ?x35 ?x35 ?x35)) y00) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 y00))))
 (let ((?x50 (- (+ (- (- ?x43 (* ?x34 ?x35 ?x35 ?x35 y00)) x00) y 1) (* ?x34 ?x34 ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x53 (+ (- ?x50 (* ?x34 ?x34 ?x34 ?x34 ?x35 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let (($x79 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x53 0)) (not (= ?x75 0))))))
 (rewrite (= $x79 $x818)))))))))))))))))))))))))))))
 ))
 (let ((@x81 (asserted $x80)))
 (let ((@x884 (mp (mp @x81 (quant-intro (proof-bind ?x802) (= $x80 $x924)) $x924) (rewrite (= $x924 $x924)) $x924)))
 (let ((@x2713 (mp (mp @x884 (quant-intro (proof-bind ?x1526) (= $x924 $x2751)) $x2751) (quant-intro (proof-bind ?x376) (= $x2751 $x1982)) $x1982)))
 (let ((@x2300 (mp (mp~ @x2713 (sk (~ $x1982 $x2688)) $x2688) (rewrite (= $x2688 $x754)) $x754)))
 (let ((@x1191 (and-elim @x2300 $x2296)))
 (let ((@x568 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2296) $x496)) @x1191 $x496)))
 (let (($x1758 (>= ?x213 0)))
 (let ((@x547 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2296) $x1758)) @x1191 $x1758)))
 (let (($x1765 (not (<= ?x1693 0))))
 (let (($x233 (>= ?x1693 0)))
 (let ((@x2680 (lemma ((_ th-lemma arith) (hypothesis (not $x233)) @x547 @x568 @x547 @x568 false) $x233)))
 (let (($x466 (>= ?x591 0)))
 (let ((@x475 (lemma ((_ th-lemma arith) (hypothesis (not $x466)) @x547 @x568 @x547 @x568 false) $x466)))
 (let (($x1755 (<= ?x591 0)))
 (let ((@x457 (lemma ((_ th-lemma arith) (hypothesis (not $x1755)) @x547 @x568 @x547 @x568 false) $x1755)))
 (let ((@x239 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x573 (not $x1755) (not $x466))) @x457 @x475 $x573)))
 (let ((@x409 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x419 $x1765 (not $x233))) (unit-resolution (and-elim @x2300 $x1910) @x239 $x1820) @x2680 $x1765)))
 ((_ th-lemma arith) @x409 @x547 @x568 @x547 @x568 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        23
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             720
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 60
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                3.94
 :memory                    3.38
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1898749
 :num-checks                1
 :propagations              14
 :rlimit-count              14718
 :time                      0.02
 :total-time                0.02)
