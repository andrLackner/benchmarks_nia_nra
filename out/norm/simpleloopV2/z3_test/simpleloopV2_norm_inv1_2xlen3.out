unsat
((set-logic NIA)
(declare-fun x!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x1886 (* (- 1) x!1)))
 (let ((?x1889 (* (- 1) y!0)))
 (let ((?x1884 (+ y00 x00 ?x1889 ?x1886)))
 (let (($x1119 (<= ?x1884 0)))
 (let (($x781 (= ?x1884 0)))
 (let ((?x428 (* 3 (* y!0 y!0 x!1))))
 (let ((?x1800 (+ 1 x!1)))
 (let ((?x1874 (+ (- 1) y!0)))
 (let ((?x3049 (* ?x1874 ?x1874 ?x1874 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x3027 (* y00 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x2576 (* x00 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x1072 (* 3 (* y00 y!0 y!0 x!1))))
 (let ((?x2273 (* ?x1874 ?x1874 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x2232 (* x00 y!0 y!0)))
 (let ((?x2227 (* x00 x!1 x!1)))
 (let ((?x2219 (* y00 y!0 y!0 x!1 x!1 x!1)))
 (let ((?x2218 (* x00 y!0 x!1 x!1 x!1)))
 (let ((?x245 (* 3 (* x00 y!0 y!0 x!1))))
 (let ((?x2031 (* x00 y!0 y!0 x!1 x!1 x!1)))
 (let ((?x1820 (* y!0 y!0)))
 (let ((?x1798 (* y00 y!0 y!0)))
 (let ((?x1793 (* y00 ?x1874 ?x1874 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x1772 (* y!0 x!1 x!1 x!1 x!1)))
 (let ((?x1770 (* y00 y!0 x!1 x!1 x!1 x!1)))
 (let ((?x1550 (* x00 ?x1874 ?x1874 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x1167 (* y00 x!1 x!1)))
 (let ((?x741 (* x!1 x!1 x!1 x!1)))
 (let ((?x700 (* (- 1) ?x741)))
 (let ((?x678 (* y00 y!0 x!1 x!1 x!1)))
 (let ((?x1070 (* (- 1) (* y!0 x!1 x!1))))
 (let ((?x565 (* x!1 x!1 x!1)))
 (let ((?x199 (* (- 4) ?x565)))
 (let ((?x525 (* y!0 y!0 x!1 x!1 x!1)))
 (let ((?x477 (* x00 y!0 x!1 x!1 x!1 x!1)))
 (let ((?x1316 (+ y00 x00 (* (- 2) (* y00 x!1 x!1 x!1)) (* (- 1) (* ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)) ?x1889 ?x1886 (* 3 (* y!0 y!0 x!1 x!1)) (* (- 1) (* x00 x!1 x!1 x!1 x!1)) ?x477 ?x525 ?x199 (* (- 4) (* x!1 x!1)) ?x1070 ?x678 (* (- 1) (* y00 x!1 x!1 x!1 x!1)) (* (- 2) (* y00 y!0)) ?x700 ?x1167 (* (- 1) (* ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)) (* (- 3) (* y00 y!0 x!1 x!1)) (* 3 (* y00 x!1)) (* (- 1) ?x1550) ?x1770 ?x1772 (* (- 1) ?x1793) ?x1798 ?x1820 (* (- 5) (* x00 y!0 x!1)) (* (- 5) (* y00 y!0 x!1)) (* 2 (* y!0 x!1 x!1 x!1)) ?x2031 (* 3 (* x00 y!0 y!0 x!1 x!1)) ?x245 (* (- 2) (* x00 x!1 x!1 x!1)) (* 3 (* x00 x!1)) (* (- 3) (* x00 y!0 x!1 x!1)) ?x2218 ?x2219 (* 3 (* y00 y!0 y!0 x!1 x!1)) ?x2227 ?x2232 ?x2273 ?x1072 ?x2576 (* (- 1) (* ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800)) (* (- 2) (* ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800)) (* (- 1) (* ?x1874 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800)) ?x3027 ?x3049 ?x428 (* (- 2) (* x00 y!0)) (* (- 3) (* y!0 x!1)))))
 (let (($x1181 (= ?x1316 0)))
 (let (($x1187 (not $x1181)))
 (let ((?x875 (+ 1 y!0)))
 (let ((?x872 (+ (- 1) x!1)))
 (let ((?x3542 (* x00 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875 ?x875 ?x875)))
 (let ((?x2597 (* (- 1) ?x1820)))
 (let ((?x1816 (* x00 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875)))
 (let ((?x1802 (* y00 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875 ?x875 ?x875)))
 (let ((?x757 (* y00 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875)))
 (let ((?x723 (* ?x872 ?x872 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875 ?x875 ?x875 ?x875)))
 (let ((?x701 (* ?x872 ?x872 ?x872 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875 ?x875 ?x875)))
 (let ((?x689 (* y00 x!1 x!1 x!1 x!1)))
 (let ((?x470 (* x00 x!1 x!1 x!1 x!1)))
 (let ((?x2407 (* 3 x00)))
 (let ((?x2402 (* 3 y00)))
 (let ((?x1067 (+ ?x2402 ?x2407 (* (- 4) (* y00 x!1 x!1 x!1)) (* (- 3) y!0) (* (- 3) x!1) (* (- 3) (* y!0 y!0 x!1 x!1)) ?x470 ?x477 ?x525 ?x199 (* 6 (* x!1 x!1)) ?x1070 (* (- 3) ?x678) ?x689 (* (- 2) (* ?x872 ?x872 ?x872 ?x872 ?x875 ?x875)) ?x701 ?x723 ?x741 (* (- 1) (* ?x872 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875)) ?x757 (* (- 1) (* ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875 ?x875)) (* 7 ?x1167) (* 3 (* y00 y!0 x!1 x!1)) (* (- 7) (* y00 x!1)) ?x1770 ?x1772 (* (- 1) ?x1798) (* (- 1) ?x1802) (* (- 1) (* ?x872 ?x872 ?x872 ?x872 ?x872 ?x875)) ?x1816 ?x2597 (* (- 1) (* ?x872 ?x872 ?x872 ?x875 ?x875 ?x875)) (* (- 1) (* x00 y!0 x!1)) (* (- 1) (* y00 y!0 x!1)) (* (- 2) (* y!0 x!1 x!1 x!1)) ?x2031 (* (- 3) (* x00 y!0 y!0 x!1 x!1)) ?x245 (* (- 4) (* x00 x!1 x!1 x!1)) (* (- 7) (* x00 x!1)) (* 3 (* x00 y!0 x!1 x!1)) (* (- 3) ?x2218) ?x2219 (* (- 3) (* y00 y!0 y!0 x!1 x!1)) (* 7 ?x2227) (* (- 1) ?x2232) ?x1072 ?x428 (* (- 1) ?x3542) (* 5 (* y!0 x!1)))))
 (let (($x437 (= ?x1067 0)))
 (let (($x335 (or (not $x437) $x1187)))
 (let (($x1178 (and $x781 $x335)))
 (let ((?x1235 (* ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x397 (* ?x1874 ?x1800 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x2885 (* ?x1874 ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800)))
 (let ((?x3393 (* (- 1) (* x!1 x!1 x!1 y!0 y!0))))
 (let ((?x2619 (* (- 3) (* x!1 y!0 y!0))))
 (let ((?x1817 (* (- 1) (* x!1 x!1 x!1 x!1 y!0 x00))))
 (let ((?x1077 (* x!1 x!1 x!1 x!1 x00)))
 (let ((?x726 (* (- 1) (* x!1 x!1 x!1 x!1 y!0))))
 (let ((?x725 (* 4 ?x565)))
 (let ((?x874 (* x!1 x!1 y!0)))
 (let ((?x2095 (* x!1 x!1 x!1 x!1 y00)))
 (let ((?x2091 (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y00))))
 (let ((?x673 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 y00))))
 (let ((?x3060 (* (- 3) (* x!1 y!0 y!0 y00))))
 (let ((?x2737 (* ?x1874 ?x1874 ?x1874 ?x1800 ?x1800 ?x1800)))
 (let ((?x3075 (* (- 1) (* x!1 x!1 x!1 y!0 y!0 x00))))
 (let ((?x1518 (* (- 3) (* x!1 y!0 y!0 x00))))
 (let ((?x1433 (* (- 1) (* x!1 1))))
 (let ((?x152 (* (- 1) x00)))
 (let ((?x145 (* (- 1) y00)))
 (let ((?x2876 (+ (* 2 x!1) y!0 ?x145 ?x152 ?x1433 (* 3 (* x!1 y!0)) ?x1793 (* (- 3) (* x!1 x00)) (* (- 1) (* x!1 x!1 x00)) (* (- 1) ?x3049) (* 2 (* x!1 x!1 x!1 x00)) (* 2 (* y!0 x00)) (* 5 (* x!1 y!0 x00)) (* 3 (* x!1 x!1 y!0 x00)) (* (- 1) (* x!1 x!1 x!1 y!0 x00)) (* (- 1) (* y!0 y!0 x00)) ?x1518 (* (- 3) (* x!1 x!1 y!0 y!0 x00)) ?x3075 ?x2737 (* (- 1) ?x2576) (* 2 (* ?x1874 ?x1874 ?x1800 ?x1800 ?x1800 ?x1800)) (* (- 1) ?x3027) (* 2 (* y!0 y00)) (* (- 1) (* y!0 y!0 y00)) ?x3060 (* (- 3) (* x!1 x!1 y!0 y!0 y00)) ?x673 (* (- 3) (* x!1 y00)) (* (- 1) (* x!1 x!1 y00)) (* 2 (* x!1 x!1 x!1 y00)) (* 5 (* x!1 y!0 y00)) (* 3 (* x!1 x!1 y!0 y00)) (* (- 1) (* x!1 x!1 x!1 y!0 y00)) ?x2091 ?x2095 ?x874 ?x725 (* 4 (* x!1 x!1)) (* (- 2) (* x!1 x!1 x!1 y!0)) ?x726 ?x741 ?x1077 ?x1817 ?x2597 ?x2619 (* (- 3) (* x!1 x!1 y!0 y!0)) ?x3393 ?x2885 (* (- 1) ?x2273) ?x1550 ?x397 ?x1235)))
 (let ((?x1810 (* ?x872 ?x872 ?x872 ?x872 ?x872 ?x875)))
 (let ((?x1821 (* ?x872 ?x872 ?x872 ?x875 ?x875 ?x875)))
 (let ((?x751 (* ?x872 ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875)))
 (let ((?x822 (* ?x872 ?x872 ?x872 ?x872 ?x875 ?x875 ?x875 ?x875)))
 (let ((?x341 (* x!1 y!0 y00)))
 (let ((?x1296 (* y!0 y!0 y00)))
 (let ((?x490 (* y!0 y!0 x00)))
 (let ((?x2343 (* x!1 y!0 x00)))
 (let ((?x3708 (* (- 3) x00)))
 (let ((?x3712 (* (- 3) y00)))
 (let ((?x1799 (+ (* 3 x!1) (* 3 y!0) ?x3712 ?x3708 ?x1433 (* (- 5) (* x!1 y!0)) (* 7 (* x!1 x00)) (* (- 7) (* x!1 x!1 x00)) (* 4 (* x!1 x!1 x!1 x00)) ?x2343 (* (- 3) (* x!1 x!1 y!0 x00)) (* 3 (* x!1 x!1 x!1 y!0 x00)) ?x490 ?x1518 (* 3 (* x!1 x!1 y!0 y!0 x00)) ?x3075 ?x1296 ?x3060 (* 3 (* x!1 x!1 y!0 y!0 y00)) ?x673 (* 7 (* x!1 y00)) (* (- 7) (* x!1 x!1 y00)) (* 4 (* x!1 x!1 x!1 y00)) ?x341 (* (- 3) (* x!1 x!1 y!0 y00)) (* 3 (* x!1 x!1 x!1 y!0 y00)) ?x2091 (* (- 1) ?x2095) ?x822 ?x874 (* 2 (* ?x872 ?x872 ?x872 ?x872 ?x875 ?x875)) (* (- 1) ?x723) ?x725 (* (- 6) (* x!1 x!1)) (* (- 1) (* x!1 (- 1))) (* 2 (* x!1 x!1 x!1 y!0)) ?x726 ?x700 (* (- 1) ?x701) ?x751 (* (- 1) ?x757) ?x3542 (* (- 1) ?x1077) ?x1817 ?x1821 ?x1820 ?x2619 (* 3 (* x!1 x!1 y!0 y!0)) ?x3393 (* (- 1) ?x1816) ?x1810 ?x1802)))
 (let (($x2880 (and (= (+ x!1 y!0 ?x145 ?x152) 0) (or (not (= ?x1799 0)) (not (= ?x2876 0))))))
 (let (($x1509 (exists ((x Int) (y Int) )(! (let ((?x177 (+ 1 x)))
 (let ((?x206 (+ (- 1) y)))
 (let ((?x3062 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x2723 (* ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x2661 (* x00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x3056 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2367 (* ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x1972 (* x x x y y)))
 (let ((?x1855 (* (- 1) ?x1972)))
 (let ((?x1964 (* x y y)))
 (let ((?x298 (* (- 3) ?x1964)))
 (let ((?x1956 (* y y)))
 (let ((?x1957 (* (- 1) ?x1956)))
 (let ((?x1670 (* x x x x y x00)))
 (let ((?x197 (* (- 1) ?x1670)))
 (let ((?x1619 (* x x x x x00)))
 (let ((?x1194 (* x x x x)))
 (let ((?x1161 (* x x x x y)))
 (let ((?x1921 (* (- 1) ?x1161)))
 (let ((?x1116 (* x x x)))
 (let ((?x2083 (* 4 ?x1116)))
 (let ((?x1057 (* x x y)))
 (let ((?x853 (* x x x x y00)))
 (let ((?x825 (* x x x x y y00)))
 (let ((?x845 (* (- 1) ?x825)))
 (let ((?x624 (* x x y y00)))
 (let ((?x2417 (* 3 ?x624)))
 (let ((?x597 (* x x x y y y00)))
 (let ((?x585 (* (- 1) ?x597)))
 (let ((?x595 (* x x y y y00)))
 (let ((?x667 (* (- 3) ?x595)))
 (let ((?x591 (* x y y y00)))
 (let ((?x732 (* (- 3) ?x591)))
 (let ((?x583 (* y y y00)))
 (let ((?x584 (* (- 1) ?x583)))
 (let ((?x675 (* (- 1) (* y00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x508 (* 2 (* ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x263 (* (- 1) (* x00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x407 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177)))
 (let ((?x389 (* x x x y y x00)))
 (let ((?x3070 (* (- 1) ?x389)))
 (let ((?x375 (* x x y y x00)))
 (let ((?x406 (* (- 3) ?x375)))
 (let ((?x368 (* x y y x00)))
 (let ((?x192 (* (- 3) ?x368)))
 (let ((?x360 (* y y x00)))
 (let ((?x363 (* (- 1) ?x360)))
 (let ((?x312 (* x x y x00)))
 (let ((?x1292 (* 3 ?x312)))
 (let ((?x2589 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x229 (* y00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x181 (* x 1)))
 (let ((?x3159 (* (- 1) ?x181)))
 (let ((?x152 (* (- 1) x00)))
 (let ((?x145 (* (- 1) y00)))
 (let ((?x1096 (* 2 x)))
 (let ((?x386 (+ ?x1096 y ?x145 ?x152 ?x3159 (* 3 (* x y)) ?x229 (* (- 3) (* x x00)) (* (- 1) (* x x x00)) ?x2589 (* 2 (* x x x x00)) (* 2 (* y x00)) (* 5 (* x y x00)) ?x1292 (* (- 1) (* x x x y x00)) ?x363 ?x192 ?x406 ?x3070 ?x407 ?x263 ?x508 ?x675 (* 2 (* y y00)) ?x584 ?x732 ?x667 ?x585 (* (- 3) (* x y00)) (* (- 1) (* x x y00)) (* 2 (* x x x y00)) (* 5 (* x y y00)) ?x2417 (* (- 1) (* x x x y y00)) ?x845 ?x853 ?x1057 ?x2083 (* 4 (* x x)) (* (- 2) (* x x x y)) ?x1921 ?x1194 ?x1619 ?x197 ?x1957 ?x298 (* (- 3) (* x x y y)) ?x1855 ?x2367 ?x3056 ?x2661 ?x2723 ?x3062)))
 (let ((?x173 (+ 1 y)))
 (let ((?x163 (+ (- 1) x)))
 (let ((?x3077 (* y00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2315 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173)))
 (let ((?x2503 (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x1780 (* ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x1709 (* (- 1) ?x1619)))
 (let ((?x1534 (* x00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x214 (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x1338 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x1214 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2357 (* (- 1) ?x1214)))
 (let ((?x1387 (* (- 1) ?x1194)))
 (let ((?x1159 (* x x x y)))
 (let ((?x1891 (* 2 ?x1159)))
 (let ((?x1083 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2378 (* (- 1) ?x1083)))
 (let ((?x1073 (* 2 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173))))
 (let ((?x976 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x915 (* (- 1) ?x853)))
 (let ((?x2289 (* (- 3) ?x624)))
 (let ((?x621 (* x y y00)))
 (let ((?x731 (* 3 ?x595)))
 (let ((?x505 (* 3 ?x375)))
 (let ((?x1043 (* (- 3) ?x312)))
 (let ((?x303 (* x y x00)))
 (let ((?x3708 (* (- 3) x00)))
 (let ((?x3712 (* (- 3) y00)))
 (let ((?x3716 (+ (* 3 x) (* 3 y) ?x3712 ?x3708 ?x3159 (* (- 5) (* x y)) (* 7 (* x x00)) (* (- 7) (* x x x00)) (* 4 (* x x x x00)) ?x303 ?x1043 (* 3 (* x x x y x00)) ?x360 ?x192 ?x505 ?x3070 ?x583 ?x732 ?x731 ?x585 (* 7 (* x y00)) (* (- 7) (* x x y00)) (* 4 (* x x x y00)) ?x621 ?x2289 (* 3 (* x x x y y00)) ?x845 ?x915 ?x976 ?x1057 ?x1073 ?x2378 ?x2083 (* (- 6) (* x x)) (* (- 1) (* x (- 1))) ?x1891 ?x1921 ?x1387 ?x2357 ?x1338 ?x214 ?x1534 ?x1709 ?x197 ?x1780 ?x1956 ?x298 (* 3 (* x x y y)) ?x1855 ?x2503 ?x2315 ?x3077)))
 (let (($x171 (= (+ x y ?x145 ?x152) 0)))
 (and $x171 (or (not (= ?x3716 0)) (not (= ?x386 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1468 (exists ((x Int) (y Int) )(! (let ((?x173 (+ 1 y)))
 (let ((?x163 (+ (- 1) x)))
 (let ((?x214 (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x2315 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173)))
 (let ((?x1534 (* x00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x1073 (* 2 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173))))
 (let ((?x2503 (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x1780 (* ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x3077 (* y00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x1338 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x1214 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2357 (* (- 1) ?x1214)))
 (let ((?x1083 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2378 (* (- 1) ?x1083)))
 (let ((?x976 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x236 (+ (* (- 1) (* ?x163 ?x173)) (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x173 ?x173)) (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x173 ?x173)) (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x163 ?x173)) ?x976 (* ?x163 ?x163 ?x163) ?x2378 (* (- 1) (* ?x163 ?x163)) ?x2357 ?x1338 (* x00 ?x163 ?x163 ?x163 ?x173) (* ?x163 ?x163 ?x173) (* (- 1) (* ?x163 ?x163 ?x163 ?x163 ?x173)) (* (- 1) (* x00 ?x163 ?x163)) (* (- 1) (* y00 ?x163 ?x163)) (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x163 ?x173)) ?x3077 ?x1780 (* (- 1) (* ?x163 ?x163 ?x163 ?x173 ?x173)) ?x2503 ?x1073 (* y00 ?x163 ?x163 ?x163 ?x173) (* x00 ?x163) (* y00 ?x163) ?x1534 ?x2315 ?x214)))
 (let ((?x177 (+ 1 x)))
 (let ((?x206 (+ (- 1) y)))
 (let ((?x675 (* (- 1) (* y00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2723 (* ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x2661 (* x00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x508 (* 2 (* ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x263 (* (- 1) (* x00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x407 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177)))
 (let ((?x229 (* y00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x3062 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x3056 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2589 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2367 (* ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x705 (+ (* (- 1) (* ?x206 ?x177)) (* (- 1) (* x00 ?x206 ?x206 ?x177 ?x177 ?x177)) (* (- 1) (* y00 ?x206 ?x206 ?x177 ?x177 ?x177)) (* (- 1) (* y00 ?x206 ?x177 ?x177 ?x177 ?x177)) ?x2367 (* ?x177 ?x177 ?x177) ?x2589 (* (- 1) (* ?x177 ?x177)) ?x3056 ?x3062 (* x00 ?x206 ?x177 ?x177 ?x177) (* ?x206 ?x177 ?x177) (* (- 1) (* ?x206 ?x177 ?x177 ?x177 ?x177)) (* (- 1) (* x00 ?x177 ?x177)) (* (- 1) (* y00 ?x177 ?x177)) (* (- 1) (* x00 ?x206 ?x177 ?x177 ?x177 ?x177)) ?x229 ?x407 (* (- 1) (* ?x206 ?x206 ?x177 ?x177 ?x177)) ?x263 ?x508 (* y00 ?x206 ?x177 ?x177 ?x177) (* x00 ?x177) (* y00 ?x177) ?x2661 ?x2723 ?x675)))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x705 0)) (not (= ?x236 0)))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x2743 (lambda ((x Int) (y Int) )(let ((?x177 (+ 1 x)))
 (let ((?x206 (+ (- 1) y)))
 (let ((?x3062 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x2723 (* ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x2661 (* x00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x3056 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2367 (* ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x1972 (* x x x y y)))
 (let ((?x1855 (* (- 1) ?x1972)))
 (let ((?x1964 (* x y y)))
 (let ((?x298 (* (- 3) ?x1964)))
 (let ((?x1956 (* y y)))
 (let ((?x1957 (* (- 1) ?x1956)))
 (let ((?x1670 (* x x x x y x00)))
 (let ((?x197 (* (- 1) ?x1670)))
 (let ((?x1619 (* x x x x x00)))
 (let ((?x1194 (* x x x x)))
 (let ((?x1161 (* x x x x y)))
 (let ((?x1921 (* (- 1) ?x1161)))
 (let ((?x1116 (* x x x)))
 (let ((?x2083 (* 4 ?x1116)))
 (let ((?x1057 (* x x y)))
 (let ((?x853 (* x x x x y00)))
 (let ((?x825 (* x x x x y y00)))
 (let ((?x845 (* (- 1) ?x825)))
 (let ((?x624 (* x x y y00)))
 (let ((?x2417 (* 3 ?x624)))
 (let ((?x597 (* x x x y y y00)))
 (let ((?x585 (* (- 1) ?x597)))
 (let ((?x595 (* x x y y y00)))
 (let ((?x667 (* (- 3) ?x595)))
 (let ((?x591 (* x y y y00)))
 (let ((?x732 (* (- 3) ?x591)))
 (let ((?x583 (* y y y00)))
 (let ((?x584 (* (- 1) ?x583)))
 (let ((?x675 (* (- 1) (* y00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x508 (* 2 (* ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x263 (* (- 1) (* x00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x407 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177)))
 (let ((?x389 (* x x x y y x00)))
 (let ((?x3070 (* (- 1) ?x389)))
 (let ((?x375 (* x x y y x00)))
 (let ((?x406 (* (- 3) ?x375)))
 (let ((?x368 (* x y y x00)))
 (let ((?x192 (* (- 3) ?x368)))
 (let ((?x360 (* y y x00)))
 (let ((?x363 (* (- 1) ?x360)))
 (let ((?x312 (* x x y x00)))
 (let ((?x1292 (* 3 ?x312)))
 (let ((?x2589 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x229 (* y00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x181 (* x 1)))
 (let ((?x3159 (* (- 1) ?x181)))
 (let ((?x152 (* (- 1) x00)))
 (let ((?x145 (* (- 1) y00)))
 (let ((?x1096 (* 2 x)))
 (let ((?x386 (+ ?x1096 y ?x145 ?x152 ?x3159 (* 3 (* x y)) ?x229 (* (- 3) (* x x00)) (* (- 1) (* x x x00)) ?x2589 (* 2 (* x x x x00)) (* 2 (* y x00)) (* 5 (* x y x00)) ?x1292 (* (- 1) (* x x x y x00)) ?x363 ?x192 ?x406 ?x3070 ?x407 ?x263 ?x508 ?x675 (* 2 (* y y00)) ?x584 ?x732 ?x667 ?x585 (* (- 3) (* x y00)) (* (- 1) (* x x y00)) (* 2 (* x x x y00)) (* 5 (* x y y00)) ?x2417 (* (- 1) (* x x x y y00)) ?x845 ?x853 ?x1057 ?x2083 (* 4 (* x x)) (* (- 2) (* x x x y)) ?x1921 ?x1194 ?x1619 ?x197 ?x1957 ?x298 (* (- 3) (* x x y y)) ?x1855 ?x2367 ?x3056 ?x2661 ?x2723 ?x3062)))
 (let ((?x173 (+ 1 y)))
 (let ((?x163 (+ (- 1) x)))
 (let ((?x3077 (* y00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2315 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173)))
 (let ((?x2503 (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x1780 (* ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x1709 (* (- 1) ?x1619)))
 (let ((?x1534 (* x00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x214 (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x1338 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x1214 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2357 (* (- 1) ?x1214)))
 (let ((?x1387 (* (- 1) ?x1194)))
 (let ((?x1159 (* x x x y)))
 (let ((?x1891 (* 2 ?x1159)))
 (let ((?x1083 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2378 (* (- 1) ?x1083)))
 (let ((?x1073 (* 2 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173))))
 (let ((?x976 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x915 (* (- 1) ?x853)))
 (let ((?x2289 (* (- 3) ?x624)))
 (let ((?x621 (* x y y00)))
 (let ((?x731 (* 3 ?x595)))
 (let ((?x505 (* 3 ?x375)))
 (let ((?x1043 (* (- 3) ?x312)))
 (let ((?x303 (* x y x00)))
 (let ((?x3708 (* (- 3) x00)))
 (let ((?x3712 (* (- 3) y00)))
 (let ((?x3716 (+ (* 3 x) (* 3 y) ?x3712 ?x3708 ?x3159 (* (- 5) (* x y)) (* 7 (* x x00)) (* (- 7) (* x x x00)) (* 4 (* x x x x00)) ?x303 ?x1043 (* 3 (* x x x y x00)) ?x360 ?x192 ?x505 ?x3070 ?x583 ?x732 ?x731 ?x585 (* 7 (* x y00)) (* (- 7) (* x x y00)) (* 4 (* x x x y00)) ?x621 ?x2289 (* 3 (* x x x y y00)) ?x845 ?x915 ?x976 ?x1057 ?x1073 ?x2378 ?x2083 (* (- 6) (* x x)) (* (- 1) (* x (- 1))) ?x1891 ?x1921 ?x1387 ?x2357 ?x1338 ?x214 ?x1534 ?x1709 ?x197 ?x1780 ?x1956 ?x298 (* 3 (* x x y y)) ?x1855 ?x2503 ?x2315 ?x3077)))
 (let (($x171 (= (+ x y ?x145 ?x152) 0)))
 (let (($x326 (and $x171 (or (not (= ?x3716 0)) (not (= ?x386 0))))))
 (let ((?x236 (+ (* (- 1) (* ?x163 ?x173)) (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x173 ?x173)) (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x173 ?x173)) (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x163 ?x173)) ?x976 (* ?x163 ?x163 ?x163) ?x2378 (* (- 1) (* ?x163 ?x163)) ?x2357 ?x1338 (* x00 ?x163 ?x163 ?x163 ?x173) (* ?x163 ?x163 ?x173) (* (- 1) (* ?x163 ?x163 ?x163 ?x163 ?x173)) (* (- 1) (* x00 ?x163 ?x163)) (* (- 1) (* y00 ?x163 ?x163)) (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x163 ?x173)) ?x3077 ?x1780 (* (- 1) (* ?x163 ?x163 ?x163 ?x173 ?x173)) ?x2503 ?x1073 (* y00 ?x163 ?x163 ?x163 ?x173) (* x00 ?x163) (* y00 ?x163) ?x1534 ?x2315 ?x214)))
 (let ((?x705 (+ (* (- 1) (* ?x206 ?x177)) (* (- 1) (* x00 ?x206 ?x206 ?x177 ?x177 ?x177)) (* (- 1) (* y00 ?x206 ?x206 ?x177 ?x177 ?x177)) (* (- 1) (* y00 ?x206 ?x177 ?x177 ?x177 ?x177)) ?x2367 (* ?x177 ?x177 ?x177) ?x2589 (* (- 1) (* ?x177 ?x177)) ?x3056 ?x3062 (* x00 ?x206 ?x177 ?x177 ?x177) (* ?x206 ?x177 ?x177) (* (- 1) (* ?x206 ?x177 ?x177 ?x177 ?x177)) (* (- 1) (* x00 ?x177 ?x177)) (* (- 1) (* y00 ?x177 ?x177)) (* (- 1) (* x00 ?x206 ?x177 ?x177 ?x177 ?x177)) ?x229 ?x407 (* (- 1) (* ?x206 ?x206 ?x177 ?x177 ?x177)) ?x263 ?x508 (* y00 ?x206 ?x177 ?x177 ?x177) (* x00 ?x177) (* y00 ?x177) ?x2661 ?x2723 ?x675)))
 (let (($x735 (and (= (+ x ?x145 ?x152 y) 0) (or (not (= ?x705 0)) (not (= ?x236 0))))))
 (rewrite (= $x735 $x326))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x142 (exists ((x Int) (y Int) )(! (let ((?x89 (- y 1)))
 (let ((?x88 (+ x 1)))
 (let ((?x95 (- (- (* (- 1) ?x88 ?x89) (* ?x88 ?x88 ?x88 x00 ?x89 ?x89)) (* ?x88 ?x88 ?x88 ?x89 ?x89 y00))))
 (let ((?x100 (+ (- ?x95 (* ?x88 ?x88 ?x88 ?x88 ?x89 y00)) (* ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89) (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 x00 ?x89 ?x89 ?x89) (* ?x88 ?x88 ?x88))))
 (let ((?x104 (- ?x100 (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89 ?x89 ?x89))))
 (let ((?x106 (- (- ?x104 (* ?x88 ?x88)) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89 ?x89))))
 (let ((?x111 (+ ?x106 (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89) (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 y00) (* ?x88 ?x88 ?x88 x00 ?x89) (* ?x88 ?x88 ?x89))))
 (let ((?x118 (- (- (- ?x111 (* ?x88 ?x88 ?x88 ?x88 ?x89)) (* ?x88 ?x88 x00)) (* ?x88 ?x88 y00))))
 (let ((?x122 (+ (- ?x118 (* ?x88 ?x88 ?x88 ?x88 x00 ?x89)) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89 ?x89 y00) (* ?x88 ?x88 ?x88 ?x89 ?x89 ?x89))))
 (let ((?x126 (- (- ?x122 (* ?x88 ?x88 ?x88 ?x89 ?x89)) (* ?x88 ?x88 ?x88 ?x88 x00 ?x89 ?x89 ?x89))))
 (let ((?x135 (+ ?x126 (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89) (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89) (* 2 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89) (* ?x88 ?x88 ?x88 ?x89 y00) (* ?x88 x00) (* ?x88 y00) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 x00 ?x89 ?x89 ?x89 ?x89 ?x89) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x89))))
 (let (($x139 (not (= (- ?x135 (* ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 y00)) 0))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x42 (- (- (* (- 1) ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x47 (+ (- ?x42 (* ?x35 ?x35 ?x35 ?x35 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35))))
 (let ((?x51 (- ?x47 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36 ?x36 ?x36))))
 (let ((?x53 (- (- ?x51 (* ?x35 ?x35)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36 ?x36))))
 (let ((?x58 (+ ?x53 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 x00 ?x36) (* ?x35 ?x35 ?x36))))
 (let ((?x65 (- (- (- ?x58 (* ?x35 ?x35 ?x35 ?x35 ?x36)) (* ?x35 ?x35 x00)) (* ?x35 ?x35 y00))))
 (let ((?x69 (+ (- ?x65 (* ?x35 ?x35 ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x73 (- (- ?x69 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x83 (+ ?x73 (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* 2 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 y00) (* ?x35 x00) (* ?x35 y00) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36))))
 (let (($x87 (not (= (- ?x83 (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00)) 0))))
 (and (= (+ (- (- x y00) x00) y) 0) (or $x87 $x139)))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1471 (lambda ((x Int) (y Int) )(let ((?x173 (+ 1 y)))
 (let ((?x163 (+ (- 1) x)))
 (let ((?x214 (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x2315 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173)))
 (let ((?x1534 (* x00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x1073 (* 2 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173))))
 (let ((?x2503 (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173))))
 (let ((?x1780 (* ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x3077 (* y00 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x1338 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173)))
 (let ((?x1214 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2357 (* (- 1) ?x1214)))
 (let ((?x1083 (* ?x163 ?x163 ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x2378 (* (- 1) ?x1083)))
 (let ((?x976 (* ?x163 ?x163 ?x163 ?x163 ?x173 ?x173 ?x173 ?x173)))
 (let ((?x236 (+ (* (- 1) (* ?x163 ?x173)) (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x173 ?x173)) (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x173 ?x173)) (* (- 1) (* y00 ?x163 ?x163 ?x163 ?x163 ?x173)) ?x976 (* ?x163 ?x163 ?x163) ?x2378 (* (- 1) (* ?x163 ?x163)) ?x2357 ?x1338 (* x00 ?x163 ?x163 ?x163 ?x173) (* ?x163 ?x163 ?x173) (* (- 1) (* ?x163 ?x163 ?x163 ?x163 ?x173)) (* (- 1) (* x00 ?x163 ?x163)) (* (- 1) (* y00 ?x163 ?x163)) (* (- 1) (* x00 ?x163 ?x163 ?x163 ?x163 ?x173)) ?x3077 ?x1780 (* (- 1) (* ?x163 ?x163 ?x163 ?x173 ?x173)) ?x2503 ?x1073 (* y00 ?x163 ?x163 ?x163 ?x173) (* x00 ?x163) (* y00 ?x163) ?x1534 ?x2315 ?x214)))
 (let ((?x177 (+ 1 x)))
 (let ((?x206 (+ (- 1) y)))
 (let ((?x675 (* (- 1) (* y00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2723 (* ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x2661 (* x00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x508 (* 2 (* ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x263 (* (- 1) (* x00 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x407 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177)))
 (let ((?x229 (* y00 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x3062 (* ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x3056 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2589 (* (- 1) (* ?x206 ?x206 ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177 ?x177 ?x177))))
 (let ((?x2367 (* ?x206 ?x206 ?x206 ?x206 ?x177 ?x177 ?x177 ?x177)))
 (let ((?x705 (+ (* (- 1) (* ?x206 ?x177)) (* (- 1) (* x00 ?x206 ?x206 ?x177 ?x177 ?x177)) (* (- 1) (* y00 ?x206 ?x206 ?x177 ?x177 ?x177)) (* (- 1) (* y00 ?x206 ?x177 ?x177 ?x177 ?x177)) ?x2367 (* ?x177 ?x177 ?x177) ?x2589 (* (- 1) (* ?x177 ?x177)) ?x3056 ?x3062 (* x00 ?x206 ?x177 ?x177 ?x177) (* ?x206 ?x177 ?x177) (* (- 1) (* ?x206 ?x177 ?x177 ?x177 ?x177)) (* (- 1) (* x00 ?x177 ?x177)) (* (- 1) (* y00 ?x177 ?x177)) (* (- 1) (* x00 ?x206 ?x177 ?x177 ?x177 ?x177)) ?x229 ?x407 (* (- 1) (* ?x206 ?x206 ?x177 ?x177 ?x177)) ?x263 ?x508 (* y00 ?x206 ?x177 ?x177 ?x177) (* x00 ?x177) (* y00 ?x177) ?x2661 ?x2723 ?x675)))
 (let (($x735 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x705 0)) (not (= ?x236 0))))))
 (let ((?x89 (- y 1)))
 (let ((?x88 (+ x 1)))
 (let ((?x95 (- (- (* (- 1) ?x88 ?x89) (* ?x88 ?x88 ?x88 x00 ?x89 ?x89)) (* ?x88 ?x88 ?x88 ?x89 ?x89 y00))))
 (let ((?x100 (+ (- ?x95 (* ?x88 ?x88 ?x88 ?x88 ?x89 y00)) (* ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89) (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 x00 ?x89 ?x89 ?x89) (* ?x88 ?x88 ?x88))))
 (let ((?x104 (- ?x100 (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89 ?x89 ?x89))))
 (let ((?x106 (- (- ?x104 (* ?x88 ?x88)) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89 ?x89))))
 (let ((?x111 (+ ?x106 (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89) (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 y00) (* ?x88 ?x88 ?x88 x00 ?x89) (* ?x88 ?x88 ?x89))))
 (let ((?x118 (- (- (- ?x111 (* ?x88 ?x88 ?x88 ?x88 ?x89)) (* ?x88 ?x88 x00)) (* ?x88 ?x88 y00))))
 (let ((?x122 (+ (- ?x118 (* ?x88 ?x88 ?x88 ?x88 x00 ?x89)) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89 ?x89 y00) (* ?x88 ?x88 ?x88 ?x89 ?x89 ?x89))))
 (let ((?x126 (- (- ?x122 (* ?x88 ?x88 ?x88 ?x89 ?x89)) (* ?x88 ?x88 ?x88 ?x88 x00 ?x89 ?x89 ?x89))))
 (let ((?x135 (+ ?x126 (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 ?x89) (* 0 ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89) (* 2 ?x88 ?x88 ?x88 ?x88 ?x89 ?x89) (* ?x88 ?x88 ?x88 ?x89 y00) (* ?x88 x00) (* ?x88 y00) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x88 x00 ?x89 ?x89 ?x89 ?x89 ?x89) (* ?x88 ?x88 ?x88 ?x88 ?x88 ?x89))))
 (let (($x139 (not (= (- ?x135 (* ?x88 ?x88 ?x88 ?x88 ?x89 ?x89 ?x89 y00)) 0))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x42 (- (- (* (- 1) ?x35 ?x36) (* ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x47 (+ (- ?x42 (* ?x35 ?x35 ?x35 ?x35 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35))))
 (let ((?x51 (- ?x47 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36 ?x36 ?x36))))
 (let ((?x53 (- (- ?x51 (* ?x35 ?x35)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36 ?x36))))
 (let ((?x58 (+ ?x53 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 x00 ?x36) (* ?x35 ?x35 ?x36))))
 (let ((?x65 (- (- (- ?x58 (* ?x35 ?x35 ?x35 ?x35 ?x36)) (* ?x35 ?x35 x00)) (* ?x35 ?x35 y00))))
 (let ((?x69 (+ (- ?x65 (* ?x35 ?x35 ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x73 (- (- ?x69 (* ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36))))
 (let ((?x83 (+ ?x73 (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 ?x36) (* 0 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* 2 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36 y00) (* ?x35 x00) (* ?x35 y00) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36))))
 (let (($x87 (not (= (- ?x83 (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36 y00)) 0))))
 (let (($x141 (and (= (+ (- (- x y00) x00) y) 0) (or $x87 $x139))))
 (rewrite (= $x141 $x735)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x143 (asserted $x142)))
 (let ((@x2497 (mp (mp @x143 (quant-intro (proof-bind ?x1471) (= $x142 $x1468)) $x1468) (rewrite (= $x1468 $x1468)) $x1468)))
 (let ((@x2886 (mp~ (mp @x2497 (quant-intro (proof-bind ?x2743) (= $x1468 $x1509)) $x1509) (sk (~ $x1509 $x2880)) $x2880)))
 (let ((@x2182 (mp @x2886 (rewrite (= $x2880 $x1178)) $x1178)))
 (let ((@x486 (and-elim @x2182 $x781)))
 (let ((@x1834 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x781) $x1119)) @x486 $x1119)))
 (let (($x2139 (>= ?x1884 0)))
 (let ((@x2509 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x781) $x2139)) @x486 $x2139)))
 (let (($x1809 (not (<= ?x1316 0))))
 (let (($x2975 (>= ?x1316 0)))
 (let ((@x1173 (lemma ((_ th-lemma arith) (hypothesis (not $x2975)) @x2509 @x1834 @x2509 @x1834 false) $x2975)))
 (let (($x466 (>= ?x1067 0)))
 (let ((@x998 (lemma ((_ th-lemma arith) (hypothesis (not $x466)) @x2509 @x1834 @x2509 @x1834 false) $x466)))
 (let (($x1815 (<= ?x1067 0)))
 (let ((@x3418 (lemma ((_ th-lemma arith) (hypothesis (not $x1815)) @x2509 @x1834 @x2509 @x1834 false) $x1815)))
 (let ((@x1133 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x437 (not $x1815) (not $x466))) @x3418 @x998 $x437)))
 (let ((@x1049 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1181 $x1809 (not $x2975))) (unit-resolution (and-elim @x2182 $x335) @x1133 $x1187) @x1173 $x1809)))
 ((_ th-lemma arith) @x1049 @x2509 @x1834 @x2509 @x1834 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        44
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             1035
 :arith-nonlinear-bounds    37
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 83
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                20.04
 :memory                    19.41
 :mk-bool-var               9
 :mk-clause                 12
 :num-allocs                1176810
 :num-checks                1
 :propagations              14
 :rlimit-count              24984
 :time                      0.03
 :total-time                0.04)
