unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x331 (* (- 1) s!1)))
 (let ((?x283 (* r00 r00)))
 (let ((?x1445 (* (- 3) ?x283)))
 (let ((?x2423 (+ s00 ?x1445 ?x331 (* 3 (* r!2 r!2)))))
 (let (($x592 (<= ?x2423 0)))
 (let (($x2409 (= ?x2423 0)))
 (let ((?x328 (* 6 r!2)))
 (let ((?x2230 (+ 3 s!1 ?x328)))
 (let ((?x430 (+ ?x331 x!0)))
 (let ((?x467 (+ 1 r!2)))
 (let ((?x3029 (* s!1 x!0)))
 (let ((?x3025 (* 6 ?x3029)))
 (let ((?x2864 (* s!1 s!1)))
 (let ((?x2825 (* (- 7) ?x2864)))
 (let ((?x1467 (* 72 (* r!2 r!2 r!2 r!2))))
 (let ((?x779 (* r!2 r!2)))
 (let ((?x2745 (* 63 ?x779)))
 (let ((?x2651 (* 9 r!2)))
 (let ((?x2661 (* 18 x!0)))
 (let ((?x2659 (* (- 21) s!1)))
 (let ((?x552 (* 126 (* r!2 r!2 r!2))))
 (let ((?x451 (* r00 r00 r00)))
 (let ((?x1245 (* 36 ?x451)))
 (let ((?x408 (* s00 r00)))
 (let ((?x1246 (* (- 18) ?x408)))
 (let ((?x1253 (* (- 36) ?x283)))
 (let ((?x1267 (* (- 18) x00)))
 (let ((?x1268 (* (- 9) r00)))
 (let ((?x1269 (* 21 s00)))
 (let ((?x2839 (+ ?x1269 ?x1268 ?x1267 ?x1253 ?x1246 ?x1245 (* (- 1728) (* r00 r00 r00 s!1 x!0 r!2 r!2)) (* (- 12) (* r00 r00 s!1)) ?x552 (* 24 (* s!1 r!2 r!2 r!2)) (* 4 (* s00 ?x467 ?x467 ?x430 ?x430 ?x2230 ?x2230)) (* (- 54) (* s00 r00 r!2)) (* 12 (* r00 r00 r00 s!1)) ?x2659 ?x2661 (* (- 144) (* r00 r00 r!2)) ?x2651 ?x2745 (* 54 (* x!0 r!2)) (* (- 3) (* r00 s!1 r!2)) (* (- 9) (* s!1 r!2 r!2)) (* (- 216) (* r00 r00 r00 s!1 x!0)) (* 864 (* r00 r00 r00 x!0 x!0 r!2 r!2)) (* (- 54) (* x00 r!2)) (* 12 (* r00 r00 r00 s!1 s!1 s!1 s!1 r!2)) (* 24 (* s00 r!2 r!2 r!2)) (* 72 (* r00 r00 r00 s!1 s!1 s!1)) (* 108 (* r00 r00 r00 s!1 s!1)) (* (- 180) (* r00 r00 r!2 r!2)) (* 540 (* r00 r00 r00 x!0 x!0 r!2)) (* 11 (* s00 s!1 r!2)) (* 6 (* s!1 x!0 r!2)) (* 6 (* ?x467 ?x430 ?x430 ?x430 ?x2230 ?x2230)) (* 2 (* ?x467 ?x467 ?x430 ?x430 ?x2230 ?x2230 ?x2230)) ?x1467 (* 3 (* s00 ?x467 ?x430 ?x430 ?x2230 ?x2230)) (* 144 (* r00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* 432 (* r00 r00 r00 x!0 x!0 r!2 r!2 r!2)) (* 78 (* s00 r!2 r!2)) (* (- 24) (* r00 r00 s!1 r!2)) (* (- 36) (* x00 r!2 r!2)) (* (- 27) (* r00 r!2)) (* 72 (* r00 r00 r00 s!1 x!0 x!0)) (* 216 (* r00 r00 r00 s!1 x!0 x!0 r!2)) (* 432 (* r00 r00 r00 s!1 s!1 r!2 r!2 r!2)) (* (- 864) (* r00 r00 r00 s!1 x!0 r!2 r!2 r!2)) (* 2 (* s!1 s!1 r!2 r!2)) (* 4 (* s00 s!1 r!2 r!2)) (* 864 (* r00 r00 r00 s!1 s!1 r!2 r!2)) (* (- 1080) (* r00 r00 r00 s!1 x!0 r!2)) (* 540 (* r00 r00 r00 s!1 s!1 r!2)) (* (- 72) (* r00 r00 r!2 r!2 r!2)) (* (- 6) (* s00 r00 s!1)) (* 108 (* r00 r00 r00 r!2)) (* 12 (* r00 r00 r00 s!1 r!2)) (* 72 (* r00 r00 r00 r!2 r!2)) (* (- 6) (* x00 s!1)) (* (- 5) (* s!1 s!1 r!2)) (* (- 3) (* r00 ?x467 ?x430 ?x430 ?x2230 ?x2230)) (* 36 (* x!0 r!2 r!2)) (* (- 3) (* r00 s!1)) (* (- 54) (* s!1 r!2)) (* 12 (* r00 r00 r00 s!1 s!1 x!0 x!0 r!2)) (* (- 3) (* ?x467 ?x430 ?x430 ?x2230 ?x2230 ?x2230)) (* (- 6) (* x00 s!1 r!2)) (* (- 12) (* r00 r00 ?x467 ?x467 ?x430 ?x430 ?x2230 ?x2230)) (* (- 12) (* r00 r00 s!1 r!2 r!2)) (* (- 18) (* r00 r!2 r!2)) (* 108 (* r00 r00 r00 x!0 x!0)) (* 12 (* r00 r00 r00 s!1 s!1 x!0 x!0)) (* (- 24) (* r00 r00 r00 s!1 s!1 s!1 x!0)) (* (- 24) (* r00 r00 r00 s!1 s!1 s!1 x!0 r!2)) (* (- 432) (* r00 r00 r00 s!1 s!1 x!0 r!2)) (* (- 144) (* r00 r00 r00 s!1 s!1 x!0)) (* 216 (* r00 r00 r00 s!1 s!1 s!1 r!2)) (* 144 (* r00 r00 r00 s!1 x!0 x!0 r!2 r!2)) (* (- 288) (* r00 r00 r00 s!1 s!1 x!0 r!2 r!2)) (* 12 (* r00 r00 r00 s!1 s!1 s!1 s!1)) ?x2825 (* (- 6) (* x00 ?x467 ?x430 ?x430 ?x2230 ?x2230)) (* (- 6) (* r00 s00 ?x467 ?x430 ?x430 ?x2230 ?x2230)) (* (- 6) (* s00 r00 s!1 r!2)) ?x3025 (* 75 (* s00 r!2)) (* (- 36) (* s00 r00 r!2 r!2)) (* 3 (* ?x467 ?x467 ?x430 ?x430 ?x2230 ?x2230)) (* 7 (* s00 s!1)))))
 (let (($x2798 (= ?x2839 0)))
 (let (($x2143 (not $x2798)))
 (let ((?x1328 (* x00 x00)))
 (let ((?x3036 (* 108 ?x1328)))
 (let ((?x1166 (* s00 s00 s00)))
 (let ((?x2832 (* 16 ?x1166)))
 (let ((?x864 (* r00 r00 r00 x00)))
 (let ((?x2516 (* (- 432) ?x864)))
 (let ((?x787 (* s00 x00)))
 (let ((?x2772 (* (- 108) ?x787)))
 (let ((?x2532 (* (- 9) s!1)))
 (let ((?x629 (* s00 r00 r00)))
 (let ((?x1191 (* (- 36) ?x629)))
 (let ((?x573 (* s00 s00)))
 (let ((?x2874 (* 51 ?x573)))
 (let ((?x548 (* r00 r00 s!1)))
 (let ((?x2524 (* 36 ?x548)))
 (let ((?x504 (* r00 x00)))
 (let ((?x1278 (* 108 ?x504)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2110 (+ ?x137 (* (- 54) ?x408) (* 216 (* s00 r00 x00)) ?x1278 ?x2524 (* (- 108) (* r00 x!0)) ?x2874 ?x1191 (* (- 108) (* s00 s00 r00)) (* 108 (* s00 x!0)) (* (- 36) (* s00 s00 r00 r00)) (* (- 216) (* r00 r00 r00 s!1)) ?x2532 ?x2772 ?x2516 (* (- 216) (* s00 r00 x!0)) (* (- 216) (* x00 x!0)) (* 216 (* s00 r00 r00 r00)) ?x2832 (* (- 12) (* s00 s!1 s!1)) ?x3036 (* 432 (* r00 r00 r00 x!0)) (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* 54 (* r00 s!1)) (* 15 ?x2864) (* 36 (* r00 r00 s!1 s!1)) (* (- 108) ?x3029) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* (- 66) (* s00 s!1)))))
 (let ((?x859 (* r00 r00 x00)))
 (let ((?x2960 (* 36 ?x859)))
 (let ((?x2947 (* (- 6) ?x787)))
 (let ((?x2964 (* 15 ?x573)))
 (let ((?x2633 (* 54 ?x504)))
 (let ((?x1198 (+ ?x137 (* (- 24) ?x408) ?x2633 ?x2524 (* (- 54) (* r00 x!0)) ?x2964 ?x1191 (* 2 (* s00 s00 r00)) (* 6 (* s00 x!0)) ?x2532 ?x2947 (* (- 54) (* x!0 r!2)) ?x2960 (* 54 (* x00 r!2)) (* (- 4) (* r00 s!1 s!1)) (* (- 2) (* s00 s!1 r!2)) (* 36 (* r00 x00 r!2)) (* 2 (* s00 r00 s!1)) (* 6 (* x00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* 4 (* s00 s00 r!2)) (* (- 36) (* r00 x!0 r!2)) (* 24 (* r00 s!1)) (* 24 (* s!1 r!2)) (* (- 36) (* r00 r00 x!0)) (* (- 3) ?x2864) (* (- 6) ?x3029) (* (- 24) (* s00 r!2)) (* (- 12) (* s00 s!1)))))
 (let (($x1199 (= ?x1198 0)))
 (let ((?x2603 (* (- 3) s!1)))
 (let ((?x2618 (* 4 ?x573)))
 (let ((?x717 (* 18 ?x504)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2261 (+ ?x44 (* (- 9) ?x408) ?x717 (* 6 ?x548) (* (- 18) (* r00 x!0)) ?x2618 (* (- 6) ?x629) (* 6 (* s00 r00 r!2)) ?x2603 (* (- 18) (* x!0 r!2)) (* (- 6) (* r00 s!1 r!2)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* 9 (* s!1 r!2)) (* (- 2) ?x2864) (* (- 9) (* s00 r!2)) (* (- 2) (* s00 s!1)))))
 (let (($x2260 (= ?x2261 0)))
 (let ((?x890 (* 3 r!2)))
 (let ((?x2604 (* 6 x!0)))
 (let ((?x452 (* 12 ?x451)))
 (let ((?x486 (* (- 6) ?x408)))
 (let ((?x483 (* (- 6) x00)))
 (let ((?x482 (* (- 3) r00)))
 (let ((?x825 (+ ?x44 ?x482 ?x483 ?x486 ?x452 ?x2603 ?x2604 (* (- 12) (* r00 r00 r!2)) ?x890 (* 2 (* s!1 r!2)) (* 4 (* s00 r!2)))))
 (let (($x829 (= ?x825 0)))
 (let (($x2789 (and $x2409 $x829 $x2260 $x1199 (= ?x2110 0) $x2143)))
 (let ((?x334 (+ 3 ?x328 s!1)))
 (let ((?x1642 (* s!1 x00)))
 (let ((?x1654 (* (- 6) ?x1642)))
 (let ((?x914 (* r!2 x00)))
 (let ((?x1635 (* (- 54) ?x914)))
 (let ((?x978 (* r!2 x!0)))
 (let ((?x2526 (* 54 ?x978)))
 (let ((?x749 (+ ?x2651 ?x2659 ?x2661 ?x1269 ?x1268 ?x1267 ?x2745 ?x1253 (* (- 54) (* r!2 s!1)) (* (- 144) (* r!2 r00 r00)) (* 75 (* r!2 s00)) ?x1246 ?x1245 (* 540 (* r!2 s!1 s!1 r00 r00 r00)) ?x2825 ?x2526 (* (- 3) (* r!2 s!1 r00)) (* 72 (* r!2 r!2 r00 r00 r00)) (* 108 (* r!2 r00 r00 r00)) (* (- 12) (* s!1 r00 r00)) (* 12 (* r!2 s!1 r00 r00 r00)) (* 12 (* s!1 r00 r00 r00)) ?x1635 (* 7 (* s!1 s00)) (* (- 3) (* s!1 r00)) ?x1654 (* (- 54) (* r!2 s00 r00)) (* 24 (* r!2 r!2 r!2 s!1)) (* (- 6) (* s!1 s00 r00)) (* (- 5) (* r!2 s!1 s!1)) ?x3025 (* (- 3) (* r00 ?x467 ?x430 ?x430 ?x334 ?x334)) (* 36 (* r!2 r!2 x!0)) (* 11 (* r!2 s!1 s00)) (* 6 (* ?x467 ?x430 ?x430 ?x430 ?x334 ?x334)) ?x1467 (* (- 6) (* r00 s00 ?x467 ?x430 ?x430 ?x334 ?x334)) (* (- 3) (* ?x467 ?x430 ?x430 ?x334 ?x334 ?x334)) (* 108 (* s!1 s!1 r00 r00 r00)) (* 3 (* s00 ?x467 ?x430 ?x430 ?x334 ?x334)) (* 3 (* ?x467 ?x467 ?x430 ?x430 ?x334 ?x334)) (* 4 (* r!2 r!2 s!1 s00)) (* (- 24) (* r!2 s!1 s!1 s!1 x!0 r00 r00 r00)) (* (- 24) (* s!1 s!1 s!1 x!0 r00 r00 r00)) (* (- 6) (* r!2 s!1 x00)) (* (- 6) (* x00 ?x467 ?x430 ?x430 ?x334 ?x334)) (* (- 27) (* r!2 r00)) (* (- 18) (* r!2 r!2 r00)) (* (- 36) (* r!2 r!2 x00)) (* 2 (* r!2 r!2 s!1 s!1)) (* (- 288) (* r!2 r!2 s!1 s!1 x!0 r00 r00 r00)) (* 12 (* s!1 s!1 s!1 s!1 r00 r00 r00)) (* 12 (* r!2 s!1 s!1 s!1 s!1 r00 r00 r00)) (* 144 (* r!2 r!2 s!1 s!1 s!1 r00 r00 r00)) (* 12 (* s!1 s!1 x!0 x!0 r00 r00 r00)) (* 12 (* r!2 s!1 s!1 x!0 x!0 r00 r00 r00)) (* (- 36) (* r!2 r!2 s00 r00)) (* (- 6) (* r!2 s!1 s00 r00)) (* (- 180) (* r!2 r!2 r00 r00)) (* 2 (* ?x467 ?x467 ?x430 ?x430 ?x334 ?x334 ?x334)) (* (- 72) (* r!2 r!2 r!2 r00 r00)) (* (- 24) (* r!2 s!1 r00 r00)) (* (- 12) (* r00 r00 ?x467 ?x467 ?x430 ?x430 ?x334 ?x334)) (* (- 12) (* r!2 r!2 s!1 r00 r00)) (* (- 216) (* s!1 x!0 r00 r00 r00)) (* (- 9) (* r!2 r!2 s!1)) (* 144 (* r!2 r!2 s!1 x!0 x!0 r00 r00 r00)) (* 6 (* r!2 s!1 x!0)) (* 432 (* r!2 r!2 r!2 x!0 x!0 r00 r00 r00)) (* 78 (* r!2 r!2 s00)) ?x552 (* (- 1080) (* r!2 s!1 x!0 r00 r00 r00)) (* 24 (* r!2 r!2 r!2 s00)) (* 108 (* x!0 x!0 r00 r00 r00)) (* 540 (* r!2 x!0 x!0 r00 r00 r00)) (* 864 (* r!2 r!2 s!1 s!1 r00 r00 r00)) (* (- 1728) (* r!2 r!2 s!1 x!0 r00 r00 r00)) (* 864 (* r!2 r!2 x!0 x!0 r00 r00 r00)) (* 72 (* s!1 s!1 s!1 r00 r00 r00)) (* 216 (* r!2 s!1 s!1 s!1 r00 r00 r00)) (* (- 144) (* s!1 s!1 x!0 r00 r00 r00)) (* (- 432) (* r!2 s!1 s!1 x!0 r00 r00 r00)) (* 72 (* s!1 x!0 x!0 r00 r00 r00)) (* 216 (* r!2 s!1 x!0 x!0 r00 r00 r00)) (* 432 (* r!2 r!2 r!2 s!1 s!1 r00 r00 r00)) (* (- 864) (* r!2 r!2 r!2 s!1 x!0 r00 r00 r00)) (* 4 (* s00 ?x467 ?x467 ?x430 ?x430 ?x334 ?x334)))))
 (let ((?x1358 (* (- 108) ?x1328)))
 (let ((?x1357 (* (- 16) ?x1166)))
 (let ((?x1038 (* s00 r00 r00 r00)))
 (let ((?x1353 (* (- 216) ?x1038)))
 (let ((?x865 (* 432 ?x864)))
 (let ((?x1111 (* 108 ?x787)))
 (let ((?x713 (* s00 s00 r00 r00)))
 (let ((?x714 (* 36 ?x713)))
 (let ((?x650 (* s00 s00 r00)))
 (let ((?x994 (* 108 ?x650)))
 (let ((?x982 (* 36 ?x629)))
 (let ((?x1347 (* (- 51) ?x573)))
 (let ((?x757 (* s!1 r00 r00)))
 (let ((?x1613 (* (- 36) ?x757)))
 (let ((?x1344 (* (- 108) ?x504)))
 (let ((?x495 (* s00 r00 x00)))
 (let ((?x1343 (* (- 216) ?x495)))
 (let ((?x502 (* 54 ?x408)))
 (let ((?x969 (* (- 9) s00)))
 (let ((?x2381 (* 9 s!1)))
 (let ((?x2660 (+ ?x2381 ?x969 ?x502 ?x1343 ?x1344 (* (- 15) ?x2864) ?x1613 ?x1347 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x982 ?x994 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) ?x1642) ?x714 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1111 (* 108 ?x3029) (* (- 108) (* x!0 x!0)) ?x865 (* 12 (* s!1 s!1 s00)) ?x1353 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1357 (* 216 (* x!0 x00)) ?x1358)))
 (let ((?x872 (* (- 36) ?x859)))
 (let ((?x788 (* 6 ?x787)))
 (let ((?x678 (* (- 2) ?x650)))
 (let ((?x898 (* (- 15) ?x573)))
 (let ((?x533 (* (- 54) ?x504)))
 (let ((?x546 (* 24 ?x408)))
 (let ((?x1209 (+ ?x2381 ?x969 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x546 ?x533 (* 3 ?x2864) ?x2526 (* 36 (* r!2 x!0 r00)) ?x1613 ?x898 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x982 (* 4 (* s!1 s!1 r00)) ?x1635 ?x678 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) ?x1654 (* (- 2) (* s!1 s00 r00)) ?x788 (* 2 (* r!2 s!1 s!1)) ?x3025 (* (- 4) (* r!2 s00 s00)) ?x872 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x630 (* 6 ?x629)))
 (let ((?x586 (* (- 4) ?x573)))
 (let ((?x518 (* (- 18) ?x504)))
 (let ((?x523 (* 9 ?x408)))
 (let ((?x360 (* (- 3) s00)))
 (let ((?x2517 (+ (* 3 s!1) ?x360 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x523 ?x518 (* 2 ?x2864) (* 18 ?x978) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x757) ?x586 (* 18 (* x!0 r00)) ?x630 (* (- 18) ?x914) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x2898 (+ ?x890 ?x2603 ?x2604 ?x44 ?x482 ?x483 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x486 ?x452)))
 (let (($x2497 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x779) (* 3 ?x283)) 0) (= ?x2898 0) (= ?x2517 0) (= ?x1209 0) (= ?x2660 0) (not (= ?x749 0)))))
 (let (($x442 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1370 (+ 3 ?x214 s)))
 (let ((?x262 (* (- 1) s)))
 (let ((?x1485 (+ ?x262 x)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x795 (* s x)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x706 (* s x00)))
 (let ((?x736 (* (- 6) ?x706)))
 (let ((?x641 (* r x00)))
 (let ((?x1005 (* (- 54) ?x641)))
 (let ((?x531 (* r x)))
 (let ((?x556 (* 54 ?x531)))
 (let ((?x451 (* r00 r00 r00)))
 (let ((?x1245 (* 36 ?x451)))
 (let ((?x408 (* s00 r00)))
 (let ((?x1246 (* (- 18) ?x408)))
 (let ((?x283 (* r00 r00)))
 (let ((?x1253 (* (- 36) ?x283)))
 (let ((?x1267 (* (- 18) x00)))
 (let ((?x1268 (* (- 9) r00)))
 (let ((?x1269 (* 21 s00)))
 (let ((?x421 (+ (* 9 r) (* (- 21) s) (* 18 x) ?x1269 ?x1268 ?x1267 (* 63 (* r r)) ?x1253 (* (- 54) (* r s)) (* (- 144) (* r r00 r00)) (* 75 (* r s00)) ?x1246 ?x1245 (* 540 (* r s s r00 r00 r00)) (* (- 7) (* s s)) ?x556 (* (- 3) (* r s r00)) (* 72 (* r r r00 r00 r00)) (* 108 (* r r00 r00 r00)) (* (- 12) (* s r00 r00)) (* 12 (* r s r00 r00 r00)) (* 12 (* s r00 r00 r00)) ?x1005 (* 7 (* s s00)) (* (- 3) (* s r00)) ?x736 (* (- 54) (* r s00 r00)) (* 24 (* r r r s)) (* (- 6) (* s s00 r00)) (* (- 5) (* r s s)) ?x796 (* (- 3) (* r00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* 36 (* r r x)) (* 11 (* r s s00)) (* 6 (* ?x1367 ?x1485 ?x1485 ?x1485 ?x1370 ?x1370)) (* 72 (* r r r r)) (* (- 6) (* r00 s00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* (- 3) (* ?x1367 ?x1485 ?x1485 ?x1370 ?x1370 ?x1370)) (* 108 (* s s r00 r00 r00)) (* 3 (* s00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* 3 (* ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* 4 (* r r s s00)) (* (- 24) (* r s s s x r00 r00 r00)) (* (- 24) (* s s s x r00 r00 r00)) (* (- 6) (* r s x00)) (* (- 6) (* x00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* (- 27) (* r r00)) (* (- 18) (* r r r00)) (* (- 36) (* r r x00)) (* 2 (* r r s s)) (* (- 288) (* r r s s x r00 r00 r00)) (* 12 (* s s s s r00 r00 r00)) (* 12 (* r s s s s r00 r00 r00)) (* 144 (* r r s s s r00 r00 r00)) (* 12 (* s s x x r00 r00 r00)) (* 12 (* r s s x x r00 r00 r00)) (* (- 36) (* r r s00 r00)) (* (- 6) (* r s s00 r00)) (* (- 180) (* r r r00 r00)) (* 2 (* ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370 ?x1370)) (* (- 72) (* r r r r00 r00)) (* (- 24) (* r s r00 r00)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* (- 12) (* r r s r00 r00)) (* (- 216) (* s x r00 r00 r00)) (* (- 9) (* r r s)) (* 144 (* r r s x x r00 r00 r00)) (* 6 (* r s x)) (* 432 (* r r r x x r00 r00 r00)) (* 78 (* r r s00)) (* 126 (* r r r)) (* (- 1080) (* r s x r00 r00 r00)) (* 24 (* r r r s00)) (* 108 (* x x r00 r00 r00)) (* 540 (* r x x r00 r00 r00)) (* 864 (* r r s s r00 r00 r00)) (* (- 1728) (* r r s x r00 r00 r00)) (* 864 (* r r x x r00 r00 r00)) (* 72 (* s s s r00 r00 r00)) (* 216 (* r s s s r00 r00 r00)) (* (- 144) (* s s x r00 r00 r00)) (* (- 432) (* r s s x r00 r00 r00)) (* 72 (* s x x r00 r00 r00)) (* 216 (* r s x x r00 r00 r00)) (* 432 (* r r r s s r00 r00 r00)) (* (- 864) (* r r r s x r00 r00 r00)) (* 4 (* s00 ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)))))
 (let ((?x1328 (* x00 x00)))
 (let ((?x1358 (* (- 108) ?x1328)))
 (let ((?x1166 (* s00 s00 s00)))
 (let ((?x1357 (* (- 16) ?x1166)))
 (let ((?x1038 (* s00 r00 r00 r00)))
 (let ((?x1353 (* (- 216) ?x1038)))
 (let ((?x864 (* r00 r00 r00 x00)))
 (let ((?x865 (* 432 ?x864)))
 (let ((?x787 (* s00 x00)))
 (let ((?x1111 (* 108 ?x787)))
 (let ((?x713 (* s00 s00 r00 r00)))
 (let ((?x714 (* 36 ?x713)))
 (let ((?x650 (* s00 s00 r00)))
 (let ((?x994 (* 108 ?x650)))
 (let ((?x629 (* s00 r00 r00)))
 (let ((?x982 (* 36 ?x629)))
 (let ((?x573 (* s00 s00)))
 (let ((?x1347 (* (- 51) ?x573)))
 (let ((?x547 (* s r00 r00)))
 (let ((?x846 (* (- 36) ?x547)))
 (let ((?x504 (* r00 x00)))
 (let ((?x1344 (* (- 108) ?x504)))
 (let ((?x495 (* s00 r00 x00)))
 (let ((?x1343 (* (- 216) ?x495)))
 (let ((?x502 (* 54 ?x408)))
 (let ((?x969 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1359 (+ ?x143 ?x969 ?x502 ?x1343 ?x1344 (* (- 15) (* s s)) ?x846 ?x1347 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x982 ?x994 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x706) ?x714 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1111 (* 108 ?x795) (* (- 108) (* x x)) ?x865 (* 12 (* s s s00)) ?x1353 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1357 (* 216 (* x x00)) ?x1358)))
 (let (($x1360 (= ?x1359 0)))
 (let ((?x859 (* r00 r00 x00)))
 (let ((?x872 (* (- 36) ?x859)))
 (let ((?x788 (* 6 ?x787)))
 (let ((?x678 (* (- 2) ?x650)))
 (let ((?x898 (* (- 15) ?x573)))
 (let ((?x527 (* s s)))
 (let ((?x551 (* 3 ?x527)))
 (let ((?x533 (* (- 54) ?x504)))
 (let ((?x546 (* 24 ?x408)))
 (let ((?x1061 (+ ?x143 ?x969 (* (- 24) (* r s)) (* 24 (* r s00)) ?x546 ?x533 ?x551 ?x556 (* 36 (* r x r00)) ?x846 ?x898 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x982 (* 4 (* s s r00)) ?x1005 ?x678 (* 12 (* s s00)) (* (- 24) (* s r00)) ?x736 (* (- 2) (* s s00 r00)) ?x788 (* 2 (* r s s)) ?x796 (* (- 4) (* r s00 s00)) ?x872 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1066 (= ?x1061 0)))
 (let ((?x630 (* 6 ?x629)))
 (let ((?x586 (* (- 4) ?x573)))
 (let ((?x528 (* 2 ?x527)))
 (let ((?x518 (* (- 18) ?x504)))
 (let ((?x523 (* 9 ?x408)))
 (let ((?x360 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x727 (+ ?x47 ?x360 (* (- 9) (* r s)) (* 9 (* r s00)) ?x523 ?x518 ?x528 (* 18 ?x531) (* 6 (* r s r00)) (* (- 6) ?x547) ?x586 (* 18 (* x r00)) ?x630 (* (- 18) ?x641) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x734 (= ?x727 0)))
 (let ((?x452 (* 12 ?x451)))
 (let ((?x486 (* (- 6) ?x408)))
 (let ((?x483 (* (- 6) x00)))
 (let ((?x482 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x481 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x487 (+ ?x43 ?x481 ?x56 ?x44 ?x482 ?x483 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x486 ?x452)))
 (let (($x488 (= ?x487 0)))
 (let (($x316 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x283)) 0)))
 (and $x316 $x488 $x734 $x1066 $x1360 (not (= ?x421 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2994 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1399 (+ 3 s ?x214)))
 (let ((?x262 (* (- 1) s)))
 (let ((?x1776 (+ x ?x262)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x3222 (* ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)))
 (let ((?x2990 (+ (* 3 (* ?x1367 ?x1399 ?x1399)) (* (- 4) (* s00 ?x1367 ?x1367 ?x1399)) (* 6 (* x00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 12) (* r00 r00 r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 2) (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)) (* 3 (* r00 ?x1367 ?x1399)) (* 12 (* r00 r00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* x00 ?x1367 ?x1399)) (* (- 2) (* ?x1367 ?x1367 ?x1399 ?x1399)) (* (- 3) (* s00 ?x1367 ?x1399)) (* 6 (* r00 s00 ?x1367 ?x1399)) (* 12 (* r00 r00 ?x1367 ?x1367 ?x1399)) (* (- 4) (* s00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* ?x1367 ?x1776 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 12) (* r00 r00 r00 ?x1367 ?x1399)) (* 3 (* r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* ?x1367 ?x1776 ?x1399)) (* (- 3) (* ?x1367 ?x1367 ?x1399)) (* 6 (* r00 s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) (* s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 ?x3222))))
 (let ((?x1328 (* x00 x00)))
 (let ((?x3036 (* 108 ?x1328)))
 (let ((?x2975 (* (- 9) s)))
 (let ((?x2062 (* r00 r00 s00)))
 (let ((?x2955 (* (- 36) ?x2062)))
 (let ((?x137 (* 9 s00)))
 (let ((?x573 (* s00 s00)))
 (let ((?x2874 (* 51 ?x573)))
 (let ((?x620 (* r00 r00 s)))
 (let ((?x3087 (* 36 ?x620)))
 (let ((?x1166 (* s00 s00 s00)))
 (let ((?x2832 (* 16 ?x1166)))
 (let ((?x787 (* s00 x00)))
 (let ((?x2772 (* (- 108) ?x787)))
 (let ((?x864 (* r00 r00 r00 x00)))
 (let ((?x2516 (* (- 432) ?x864)))
 (let ((?x504 (* r00 x00)))
 (let ((?x1278 (* 108 ?x504)))
 (let ((?x3040 (+ (* 216 (* r00 s00 x00)) ?x1278 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2516 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2772 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2832 (* (- 108) (* x s)) ?x3087 ?x2874 (* (- 108) (* r00 x)) ?x137 ?x2955 ?x2975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3036)))
 (let (($x3043 (= ?x3040 0)))
 (let ((?x2964 (* 15 ?x573)))
 (let ((?x859 (* r00 r00 x00)))
 (let ((?x2960 (* 36 ?x859)))
 (let ((?x2947 (* (- 6) ?x787)))
 (let ((?x2633 (* 54 ?x504)))
 (let ((?x1869 (+ (* 24 (* s r)) ?x2633 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2947 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3087 ?x2960 ?x2964 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2955 (* 54 (* x00 r)) ?x2975 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x481 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2618 (* 4 ?x573)))
 (let ((?x717 (* 18 ?x504)))
 (let ((?x2586 (+ (* 9 (* s r)) ?x717 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x620) ?x2618 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2062) (* 18 (* x00 r)) ?x481 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x451 (* r00 r00 r00)))
 (let ((?x452 (* 12 ?x451)))
 (let ((?x483 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x482 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x354 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x481 ?x482 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x483 ?x452)))
 (let (($x1507 (= (+ s00 ?x262 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1507 (= ?x354 0) (= ?x2586 0) (= ?x1869 0) $x3043 (not (= ?x2990 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x444 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1370 (+ 3 ?x214 s)))
 (let ((?x262 (* (- 1) s)))
 (let ((?x1485 (+ ?x262 x)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x795 (* s x)))
 (let ((?x796 (* 6 ?x795)))
 (let ((?x706 (* s x00)))
 (let ((?x736 (* (- 6) ?x706)))
 (let ((?x641 (* r x00)))
 (let ((?x1005 (* (- 54) ?x641)))
 (let ((?x531 (* r x)))
 (let ((?x556 (* 54 ?x531)))
 (let ((?x451 (* r00 r00 r00)))
 (let ((?x1245 (* 36 ?x451)))
 (let ((?x408 (* s00 r00)))
 (let ((?x1246 (* (- 18) ?x408)))
 (let ((?x283 (* r00 r00)))
 (let ((?x1253 (* (- 36) ?x283)))
 (let ((?x1267 (* (- 18) x00)))
 (let ((?x1268 (* (- 9) r00)))
 (let ((?x1269 (* 21 s00)))
 (let ((?x421 (+ (* 9 r) (* (- 21) s) (* 18 x) ?x1269 ?x1268 ?x1267 (* 63 (* r r)) ?x1253 (* (- 54) (* r s)) (* (- 144) (* r r00 r00)) (* 75 (* r s00)) ?x1246 ?x1245 (* 540 (* r s s r00 r00 r00)) (* (- 7) (* s s)) ?x556 (* (- 3) (* r s r00)) (* 72 (* r r r00 r00 r00)) (* 108 (* r r00 r00 r00)) (* (- 12) (* s r00 r00)) (* 12 (* r s r00 r00 r00)) (* 12 (* s r00 r00 r00)) ?x1005 (* 7 (* s s00)) (* (- 3) (* s r00)) ?x736 (* (- 54) (* r s00 r00)) (* 24 (* r r r s)) (* (- 6) (* s s00 r00)) (* (- 5) (* r s s)) ?x796 (* (- 3) (* r00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* 36 (* r r x)) (* 11 (* r s s00)) (* 6 (* ?x1367 ?x1485 ?x1485 ?x1485 ?x1370 ?x1370)) (* 72 (* r r r r)) (* (- 6) (* r00 s00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* (- 3) (* ?x1367 ?x1485 ?x1485 ?x1370 ?x1370 ?x1370)) (* 108 (* s s r00 r00 r00)) (* 3 (* s00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* 3 (* ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* 4 (* r r s s00)) (* (- 24) (* r s s s x r00 r00 r00)) (* (- 24) (* s s s x r00 r00 r00)) (* (- 6) (* r s x00)) (* (- 6) (* x00 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* (- 27) (* r r00)) (* (- 18) (* r r r00)) (* (- 36) (* r r x00)) (* 2 (* r r s s)) (* (- 288) (* r r s s x r00 r00 r00)) (* 12 (* s s s s r00 r00 r00)) (* 12 (* r s s s s r00 r00 r00)) (* 144 (* r r s s s r00 r00 r00)) (* 12 (* s s x x r00 r00 r00)) (* 12 (* r s s x x r00 r00 r00)) (* (- 36) (* r r s00 r00)) (* (- 6) (* r s s00 r00)) (* (- 180) (* r r r00 r00)) (* 2 (* ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370 ?x1370)) (* (- 72) (* r r r r00 r00)) (* (- 24) (* r s r00 r00)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)) (* (- 12) (* r r s r00 r00)) (* (- 216) (* s x r00 r00 r00)) (* (- 9) (* r r s)) (* 144 (* r r s x x r00 r00 r00)) (* 6 (* r s x)) (* 432 (* r r r x x r00 r00 r00)) (* 78 (* r r s00)) (* 126 (* r r r)) (* (- 1080) (* r s x r00 r00 r00)) (* 24 (* r r r s00)) (* 108 (* x x r00 r00 r00)) (* 540 (* r x x r00 r00 r00)) (* 864 (* r r s s r00 r00 r00)) (* (- 1728) (* r r s x r00 r00 r00)) (* 864 (* r r x x r00 r00 r00)) (* 72 (* s s s r00 r00 r00)) (* 216 (* r s s s r00 r00 r00)) (* (- 144) (* s s x r00 r00 r00)) (* (- 432) (* r s s x r00 r00 r00)) (* 72 (* s x x r00 r00 r00)) (* 216 (* r s x x r00 r00 r00)) (* 432 (* r r r s s r00 r00 r00)) (* (- 864) (* r r r s x r00 r00 r00)) (* 4 (* s00 ?x1367 ?x1367 ?x1485 ?x1485 ?x1370 ?x1370)))))
 (let ((?x1328 (* x00 x00)))
 (let ((?x1358 (* (- 108) ?x1328)))
 (let ((?x1166 (* s00 s00 s00)))
 (let ((?x1357 (* (- 16) ?x1166)))
 (let ((?x1038 (* s00 r00 r00 r00)))
 (let ((?x1353 (* (- 216) ?x1038)))
 (let ((?x864 (* r00 r00 r00 x00)))
 (let ((?x865 (* 432 ?x864)))
 (let ((?x787 (* s00 x00)))
 (let ((?x1111 (* 108 ?x787)))
 (let ((?x713 (* s00 s00 r00 r00)))
 (let ((?x714 (* 36 ?x713)))
 (let ((?x650 (* s00 s00 r00)))
 (let ((?x994 (* 108 ?x650)))
 (let ((?x629 (* s00 r00 r00)))
 (let ((?x982 (* 36 ?x629)))
 (let ((?x573 (* s00 s00)))
 (let ((?x1347 (* (- 51) ?x573)))
 (let ((?x547 (* s r00 r00)))
 (let ((?x846 (* (- 36) ?x547)))
 (let ((?x504 (* r00 x00)))
 (let ((?x1344 (* (- 108) ?x504)))
 (let ((?x495 (* s00 r00 x00)))
 (let ((?x1343 (* (- 216) ?x495)))
 (let ((?x502 (* 54 ?x408)))
 (let ((?x969 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1359 (+ ?x143 ?x969 ?x502 ?x1343 ?x1344 (* (- 15) (* s s)) ?x846 ?x1347 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x982 ?x994 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) ?x706) ?x714 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1111 (* 108 ?x795) (* (- 108) (* x x)) ?x865 (* 12 (* s s s00)) ?x1353 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1357 (* 216 (* x x00)) ?x1358)))
 (let (($x1360 (= ?x1359 0)))
 (let ((?x859 (* r00 r00 x00)))
 (let ((?x872 (* (- 36) ?x859)))
 (let ((?x788 (* 6 ?x787)))
 (let ((?x678 (* (- 2) ?x650)))
 (let ((?x898 (* (- 15) ?x573)))
 (let ((?x527 (* s s)))
 (let ((?x551 (* 3 ?x527)))
 (let ((?x533 (* (- 54) ?x504)))
 (let ((?x546 (* 24 ?x408)))
 (let ((?x1061 (+ ?x143 ?x969 (* (- 24) (* r s)) (* 24 (* r s00)) ?x546 ?x533 ?x551 ?x556 (* 36 (* r x r00)) ?x846 ?x898 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x982 (* 4 (* s s r00)) ?x1005 ?x678 (* 12 (* s s00)) (* (- 24) (* s r00)) ?x736 (* (- 2) (* s s00 r00)) ?x788 (* 2 (* r s s)) ?x796 (* (- 4) (* r s00 s00)) ?x872 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1066 (= ?x1061 0)))
 (let ((?x630 (* 6 ?x629)))
 (let ((?x586 (* (- 4) ?x573)))
 (let ((?x528 (* 2 ?x527)))
 (let ((?x518 (* (- 18) ?x504)))
 (let ((?x523 (* 9 ?x408)))
 (let ((?x360 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x727 (+ ?x47 ?x360 (* (- 9) (* r s)) (* 9 (* r s00)) ?x523 ?x518 ?x528 (* 18 ?x531) (* 6 (* r s r00)) (* (- 6) ?x547) ?x586 (* 18 (* x r00)) ?x630 (* (- 18) ?x641) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x734 (= ?x727 0)))
 (let ((?x452 (* 12 ?x451)))
 (let ((?x486 (* (- 6) ?x408)))
 (let ((?x483 (* (- 6) x00)))
 (let ((?x482 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x481 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x487 (+ ?x43 ?x481 ?x56 ?x44 ?x482 ?x483 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x486 ?x452)))
 (let (($x488 (= ?x487 0)))
 (let (($x316 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x283)) 0)))
 (let (($x2763 (and $x316 $x488 $x734 $x1066 $x1360 (not (= ?x421 0)))))
 (let ((?x1399 (+ 3 s ?x214)))
 (let ((?x1776 (+ x ?x262)))
 (let ((?x3222 (* ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)))
 (let ((?x2990 (+ (* 3 (* ?x1367 ?x1399 ?x1399)) (* (- 4) (* s00 ?x1367 ?x1367 ?x1399)) (* 6 (* x00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 12) (* r00 r00 r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 2) (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)) (* 3 (* r00 ?x1367 ?x1399)) (* 12 (* r00 r00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* x00 ?x1367 ?x1399)) (* (- 2) (* ?x1367 ?x1367 ?x1399 ?x1399)) (* (- 3) (* s00 ?x1367 ?x1399)) (* 6 (* r00 s00 ?x1367 ?x1399)) (* 12 (* r00 r00 ?x1367 ?x1367 ?x1399)) (* (- 4) (* s00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* ?x1367 ?x1776 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 12) (* r00 r00 r00 ?x1367 ?x1399)) (* 3 (* r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* ?x1367 ?x1776 ?x1399)) (* (- 3) (* ?x1367 ?x1367 ?x1399)) (* 6 (* r00 s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) (* s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 ?x3222))))
 (let ((?x3036 (* 108 ?x1328)))
 (let ((?x2975 (* (- 9) s)))
 (let ((?x2062 (* r00 r00 s00)))
 (let ((?x2955 (* (- 36) ?x2062)))
 (let ((?x137 (* 9 s00)))
 (let ((?x2874 (* 51 ?x573)))
 (let ((?x620 (* r00 r00 s)))
 (let ((?x3087 (* 36 ?x620)))
 (let ((?x2832 (* 16 ?x1166)))
 (let ((?x2772 (* (- 108) ?x787)))
 (let ((?x2516 (* (- 432) ?x864)))
 (let ((?x1278 (* 108 ?x504)))
 (let ((?x3040 (+ (* 216 (* r00 s00 x00)) ?x1278 (* (- 54) (* r00 s00)) (* 15 ?x527) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2516 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2772 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2832 (* (- 108) (* x s)) ?x3087 ?x2874 (* (- 108) (* r00 x)) ?x137 ?x2955 ?x2975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3036)))
 (let (($x3043 (= ?x3040 0)))
 (let ((?x2964 (* 15 ?x573)))
 (let ((?x2960 (* 36 ?x859)))
 (let ((?x2947 (* (- 6) ?x787)))
 (let ((?x2633 (* 54 ?x504)))
 (let ((?x1869 (+ (* 24 (* s r)) ?x2633 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x527) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2947 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3087 ?x2960 ?x2964 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2955 (* 54 (* x00 r)) ?x2975 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x2618 (* 4 ?x573)))
 (let ((?x717 (* 18 ?x504)))
 (let ((?x2586 (+ (* 9 (* s r)) ?x717 (* (- 9) (* r00 s00)) (* (- 2) ?x527) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x620) ?x2618 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2062) (* 18 (* x00 r)) ?x481 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x354 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x481 ?x482 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x483 ?x452)))
 (let (($x1507 (= (+ s00 ?x262 (* 3 (* r r)) (* (- 3) ?x283)) 0)))
 (let (($x2937 (and $x1507 (= ?x354 0) (= ?x2586 0) (= ?x1869 0) $x3043 (not (= ?x2990 0)))))
 (rewrite (= $x2937 $x2763))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x963 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1399 (+ 3 s ?x214)))
 (let ((?x262 (* (- 1) s)))
 (let ((?x1776 (+ x ?x262)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x3222 (* ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)))
 (let ((?x3246 (+ (* (- 3) (* ?x1367 ?x1399 ?x1399)) (* 4 (* s00 ?x1367 ?x1367 ?x1399)) (* (- 6) (* x00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 12 (* r00 r00 r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 2 (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)) (* (- 3) (* r00 ?x1367 ?x1399)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* x00 ?x1367 ?x1399)) (* 2 (* ?x1367 ?x1367 ?x1399 ?x1399)) (* 3 (* s00 ?x1367 ?x1399)) (* (- 6) (* r00 s00 ?x1367 ?x1399)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1399)) (* 4 (* s00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* ?x1367 ?x1776 ?x1776 ?x1776 ?x1399 ?x1399)) (* 12 (* r00 r00 r00 ?x1367 ?x1399)) (* (- 3) (* r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* ?x1367 ?x1776 ?x1399)) (* 3 (* ?x1367 ?x1367 ?x1399)) (* (- 6) (* r00 s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 (* s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) ?x3222))))
 (let ((?x1328 (* x00 x00)))
 (let ((?x3036 (* 108 ?x1328)))
 (let ((?x2975 (* (- 9) s)))
 (let ((?x2062 (* r00 r00 s00)))
 (let ((?x2955 (* (- 36) ?x2062)))
 (let ((?x137 (* 9 s00)))
 (let ((?x573 (* s00 s00)))
 (let ((?x2874 (* 51 ?x573)))
 (let ((?x620 (* r00 r00 s)))
 (let ((?x3087 (* 36 ?x620)))
 (let ((?x1166 (* s00 s00 s00)))
 (let ((?x2832 (* 16 ?x1166)))
 (let ((?x787 (* s00 x00)))
 (let ((?x2772 (* (- 108) ?x787)))
 (let ((?x864 (* r00 r00 r00 x00)))
 (let ((?x2516 (* (- 432) ?x864)))
 (let ((?x504 (* r00 x00)))
 (let ((?x1278 (* 108 ?x504)))
 (let ((?x3040 (+ (* 216 (* r00 s00 x00)) ?x1278 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2516 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2772 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2832 (* (- 108) (* x s)) ?x3087 ?x2874 (* (- 108) (* r00 x)) ?x137 ?x2955 ?x2975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3036)))
 (let (($x3043 (= ?x3040 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x969 (* (- 9) s00)))
 (let ((?x898 (* (- 15) ?x573)))
 (let ((?x859 (* r00 r00 x00)))
 (let ((?x872 (* (- 36) ?x859)))
 (let ((?x788 (* 6 ?x787)))
 (let ((?x527 (* s s)))
 (let ((?x551 (* 3 ?x527)))
 (let ((?x533 (* (- 54) ?x504)))
 (let ((?x2708 (+ (* (- 24) (* s r)) ?x533 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x551 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x788 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x620) ?x872 ?x898 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x969 (* 36 ?x2062) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x360 (* (- 3) s00)))
 (let ((?x586 (* (- 4) ?x573)))
 (let ((?x528 (* 2 ?x527)))
 (let ((?x518 (* (- 18) ?x504)))
 (let ((?x1861 (+ (* (- 9) (* s r)) ?x518 (* 9 (* r00 s00)) ?x528 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x620) ?x586 (* 18 (* r00 x)) ?x360 (* 6 ?x2062) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1788 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x360 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1507 (= (+ s00 ?x262 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1507 (= ?x1788 0) (= ?x1861 0) (= ?x2708 0) $x3043 (not (= ?x3246 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2996 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1399 (+ 3 s ?x214)))
 (let ((?x262 (* (- 1) s)))
 (let ((?x1776 (+ x ?x262)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x3222 (* ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)))
 (let ((?x2990 (+ (* 3 (* ?x1367 ?x1399 ?x1399)) (* (- 4) (* s00 ?x1367 ?x1367 ?x1399)) (* 6 (* x00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 12) (* r00 r00 r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 2) (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)) (* 3 (* r00 ?x1367 ?x1399)) (* 12 (* r00 r00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* x00 ?x1367 ?x1399)) (* (- 2) (* ?x1367 ?x1367 ?x1399 ?x1399)) (* (- 3) (* s00 ?x1367 ?x1399)) (* 6 (* r00 s00 ?x1367 ?x1399)) (* 12 (* r00 r00 ?x1367 ?x1367 ?x1399)) (* (- 4) (* s00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* ?x1367 ?x1776 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 12) (* r00 r00 r00 ?x1367 ?x1399)) (* 3 (* r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* ?x1367 ?x1776 ?x1399)) (* (- 3) (* ?x1367 ?x1367 ?x1399)) (* 6 (* r00 s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) (* s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 ?x3222))))
 (let ((?x1328 (* x00 x00)))
 (let ((?x3036 (* 108 ?x1328)))
 (let ((?x2975 (* (- 9) s)))
 (let ((?x2062 (* r00 r00 s00)))
 (let ((?x2955 (* (- 36) ?x2062)))
 (let ((?x137 (* 9 s00)))
 (let ((?x573 (* s00 s00)))
 (let ((?x2874 (* 51 ?x573)))
 (let ((?x620 (* r00 r00 s)))
 (let ((?x3087 (* 36 ?x620)))
 (let ((?x1166 (* s00 s00 s00)))
 (let ((?x2832 (* 16 ?x1166)))
 (let ((?x787 (* s00 x00)))
 (let ((?x2772 (* (- 108) ?x787)))
 (let ((?x864 (* r00 r00 r00 x00)))
 (let ((?x2516 (* (- 432) ?x864)))
 (let ((?x504 (* r00 x00)))
 (let ((?x1278 (* 108 ?x504)))
 (let ((?x3040 (+ (* 216 (* r00 s00 x00)) ?x1278 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2516 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2772 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2832 (* (- 108) (* x s)) ?x3087 ?x2874 (* (- 108) (* r00 x)) ?x137 ?x2955 ?x2975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3036)))
 (let (($x3043 (= ?x3040 0)))
 (let ((?x2964 (* 15 ?x573)))
 (let ((?x859 (* r00 r00 x00)))
 (let ((?x2960 (* 36 ?x859)))
 (let ((?x2947 (* (- 6) ?x787)))
 (let ((?x2633 (* 54 ?x504)))
 (let ((?x1869 (+ (* 24 (* s r)) ?x2633 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x2947 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3087 ?x2960 ?x2964 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x2955 (* 54 (* x00 r)) ?x2975 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x481 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2618 (* 4 ?x573)))
 (let ((?x717 (* 18 ?x504)))
 (let ((?x2586 (+ (* 9 (* s r)) ?x717 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x620) ?x2618 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2062) (* 18 (* x00 r)) ?x481 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x451 (* r00 r00 r00)))
 (let ((?x452 (* 12 ?x451)))
 (let ((?x483 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x482 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x354 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x481 ?x482 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x483 ?x452)))
 (let (($x1507 (= (+ s00 ?x262 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2937 (and $x1507 (= ?x354 0) (= ?x2586 0) (= ?x1869 0) $x3043 (not (= ?x2990 0)))))
 (let ((?x3246 (+ (* (- 3) (* ?x1367 ?x1399 ?x1399)) (* 4 (* s00 ?x1367 ?x1367 ?x1399)) (* (- 6) (* x00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 12 (* r00 r00 r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 2 (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)) (* (- 3) (* r00 ?x1367 ?x1399)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* x00 ?x1367 ?x1399)) (* 2 (* ?x1367 ?x1367 ?x1399 ?x1399)) (* 3 (* s00 ?x1367 ?x1399)) (* (- 6) (* r00 s00 ?x1367 ?x1399)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1399)) (* 4 (* s00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* ?x1367 ?x1776 ?x1776 ?x1776 ?x1399 ?x1399)) (* 12 (* r00 r00 r00 ?x1367 ?x1399)) (* (- 3) (* r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* ?x1367 ?x1776 ?x1399)) (* 3 (* ?x1367 ?x1367 ?x1399)) (* (- 6) (* r00 s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 (* s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) ?x3222))))
 (let ((?x143 (* 9 s)))
 (let ((?x969 (* (- 9) s00)))
 (let ((?x898 (* (- 15) ?x573)))
 (let ((?x872 (* (- 36) ?x859)))
 (let ((?x788 (* 6 ?x787)))
 (let ((?x527 (* s s)))
 (let ((?x551 (* 3 ?x527)))
 (let ((?x533 (* (- 54) ?x504)))
 (let ((?x2708 (+ (* (- 24) (* s r)) ?x533 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x551 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x788 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x620) ?x872 ?x898 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x969 (* 36 ?x2062) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x360 (* (- 3) s00)))
 (let ((?x586 (* (- 4) ?x573)))
 (let ((?x528 (* 2 ?x527)))
 (let ((?x518 (* (- 18) ?x504)))
 (let ((?x1861 (+ (* (- 9) (* s r)) ?x518 (* 9 (* r00 s00)) ?x528 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x620) ?x586 (* 18 (* r00 x)) ?x360 (* 6 ?x2062) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1788 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x360 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x451))))
 (let (($x1608 (and $x1507 (= ?x1788 0) (= ?x1861 0) (= ?x2708 0) $x3043 (not (= ?x3246 0)))))
 (rewrite (= $x1608 $x2937))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x259 (exists ((r Int) (s Int) (x Int) )(! (let ((?x219 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x221 (- (+ (* (- 3) ?x213 ?x215 ?x215) (* 4 ?x213 ?x213 ?x215 s00)) (* 6 ?x213 ?x215 ?x215 ?x219 ?x219 x00))))
 (let ((?x224 (+ ?x221 (* 12 ?x213 r00 r00 r00 ?x215 ?x215 ?x219 ?x219) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x228 (- (- ?x224 (* 3 ?x213 r00 ?x215)) (* 12 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x232 (- (+ ?x228 (* 3 ?x213 ?x213 ?x215 ?x215 ?x219 ?x219)) (* 6 ?x213 ?x215 x00))))
 (let ((?x238 (- (+ ?x232 (* 2 ?x213 ?x213 ?x215 ?x215) (* 3 ?x213 ?x215 s00)) (* 6 ?x213 r00 ?x215 s00))))
 (let ((?x243 (+ (- ?x238 (* 12 ?x213 ?x213 r00 r00 ?x215)) (* 4 ?x213 ?x213 ?x215 ?x215 s00 ?x219 ?x219) (* 6 ?x213 ?x215 ?x215 ?x219 ?x219 ?x219) (* 12 ?x213 r00 r00 r00 ?x215))))
 (let ((?x248 (+ (- ?x243 (* 3 ?x213 r00 ?x215 ?x215 ?x219 ?x219)) (* 6 ?x213 ?x215 ?x219) (* 3 ?x213 ?x213 ?x215))))
 (let ((?x252 (+ (- ?x248 (* 6 ?x213 r00 ?x215 ?x215 s00 ?x219 ?x219)) (* 3 ?x213 ?x215 ?x215 s00 ?x219 ?x219))))
 (let (($x257 (or (not (= (- ?x252 (* 3 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219)) 0)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x257)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1747 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1399 (+ 3 s ?x214)))
 (let ((?x262 (* (- 1) s)))
 (let ((?x1776 (+ x ?x262)))
 (let ((?x1367 (+ 1 r)))
 (let ((?x3222 (* ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)))
 (let ((?x3246 (+ (* (- 3) (* ?x1367 ?x1399 ?x1399)) (* 4 (* s00 ?x1367 ?x1367 ?x1399)) (* (- 6) (* x00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 12 (* r00 r00 r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 2 (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399 ?x1399)) (* (- 3) (* r00 ?x1367 ?x1399)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 (* ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 6) (* x00 ?x1367 ?x1399)) (* 2 (* ?x1367 ?x1367 ?x1399 ?x1399)) (* 3 (* s00 ?x1367 ?x1399)) (* (- 6) (* r00 s00 ?x1367 ?x1399)) (* (- 12) (* r00 r00 ?x1367 ?x1367 ?x1399)) (* 4 (* s00 ?x1367 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* ?x1367 ?x1776 ?x1776 ?x1776 ?x1399 ?x1399)) (* 12 (* r00 r00 r00 ?x1367 ?x1399)) (* (- 3) (* r00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 6 (* ?x1367 ?x1776 ?x1399)) (* 3 (* ?x1367 ?x1367 ?x1399)) (* (- 6) (* r00 s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* 3 (* s00 ?x1367 ?x1776 ?x1776 ?x1399 ?x1399)) (* (- 3) ?x3222))))
 (let ((?x1328 (* x00 x00)))
 (let ((?x3036 (* 108 ?x1328)))
 (let ((?x2975 (* (- 9) s)))
 (let ((?x2062 (* r00 r00 s00)))
 (let ((?x2955 (* (- 36) ?x2062)))
 (let ((?x137 (* 9 s00)))
 (let ((?x573 (* s00 s00)))
 (let ((?x2874 (* 51 ?x573)))
 (let ((?x620 (* r00 r00 s)))
 (let ((?x3087 (* 36 ?x620)))
 (let ((?x1166 (* s00 s00 s00)))
 (let ((?x2832 (* 16 ?x1166)))
 (let ((?x787 (* s00 x00)))
 (let ((?x2772 (* (- 108) ?x787)))
 (let ((?x864 (* r00 r00 r00 x00)))
 (let ((?x2516 (* (- 432) ?x864)))
 (let ((?x504 (* r00 x00)))
 (let ((?x1278 (* 108 ?x504)))
 (let ((?x3040 (+ (* 216 (* r00 s00 x00)) ?x1278 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x2516 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2772 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x2832 (* (- 108) (* x s)) ?x3087 ?x2874 (* (- 108) (* r00 x)) ?x137 ?x2955 ?x2975 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x3036)))
 (let (($x3043 (= ?x3040 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x969 (* (- 9) s00)))
 (let ((?x898 (* (- 15) ?x573)))
 (let ((?x859 (* r00 r00 x00)))
 (let ((?x872 (* (- 36) ?x859)))
 (let ((?x788 (* 6 ?x787)))
 (let ((?x527 (* s s)))
 (let ((?x551 (* 3 ?x527)))
 (let ((?x533 (* (- 54) ?x504)))
 (let ((?x2708 (+ (* (- 24) (* s r)) ?x533 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x551 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x788 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x620) ?x872 ?x898 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x969 (* 36 ?x2062) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x360 (* (- 3) s00)))
 (let ((?x586 (* (- 4) ?x573)))
 (let ((?x528 (* 2 ?x527)))
 (let ((?x518 (* (- 18) ?x504)))
 (let ((?x1861 (+ (* (- 9) (* s r)) ?x518 (* 9 (* r00 s00)) ?x528 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x620) ?x586 (* 18 (* r00 x)) ?x360 (* 6 ?x2062) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1788 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x360 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1507 (= (+ s00 ?x262 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1608 (and $x1507 (= ?x1788 0) (= ?x1861 0) (= ?x2708 0) $x3043 (not (= ?x3246 0)))))
 (let ((?x219 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x221 (- (+ (* (- 3) ?x213 ?x215 ?x215) (* 4 ?x213 ?x213 ?x215 s00)) (* 6 ?x213 ?x215 ?x215 ?x219 ?x219 x00))))
 (let ((?x224 (+ ?x221 (* 12 ?x213 r00 r00 r00 ?x215 ?x215 ?x219 ?x219) (* 2 ?x213 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x228 (- (- ?x224 (* 3 ?x213 r00 ?x215)) (* 12 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x219 ?x219))))
 (let ((?x232 (- (+ ?x228 (* 3 ?x213 ?x213 ?x215 ?x215 ?x219 ?x219)) (* 6 ?x213 ?x215 x00))))
 (let ((?x238 (- (+ ?x232 (* 2 ?x213 ?x213 ?x215 ?x215) (* 3 ?x213 ?x215 s00)) (* 6 ?x213 r00 ?x215 s00))))
 (let ((?x243 (+ (- ?x238 (* 12 ?x213 ?x213 r00 r00 ?x215)) (* 4 ?x213 ?x213 ?x215 ?x215 s00 ?x219 ?x219) (* 6 ?x213 ?x215 ?x215 ?x219 ?x219 ?x219) (* 12 ?x213 r00 r00 r00 ?x215))))
 (let ((?x248 (+ (- ?x243 (* 3 ?x213 r00 ?x215 ?x215 ?x219 ?x219)) (* 6 ?x213 ?x215 ?x219) (* 3 ?x213 ?x213 ?x215))))
 (let ((?x252 (+ (- ?x248 (* 6 ?x213 r00 ?x215 ?x215 s00 ?x219 ?x219)) (* 3 ?x213 ?x215 ?x215 s00 ?x219 ?x219))))
 (let (($x257 (or (not (= (- ?x252 (* 3 ?x213 ?x215 ?x215 ?x215 ?x219 ?x219)) 0)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x258 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) $x257)))
 (rewrite (= $x258 $x1608)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x260 (asserted $x259)))
 (let ((@x2816 (mp (mp @x260 (quant-intro (proof-bind ?x1747) (= $x259 $x963)) $x963) (rewrite (= $x963 $x963)) $x963)))
 (let ((@x2732 (mp (mp @x2816 (quant-intro (proof-bind ?x2996) (= $x963 $x2994)) $x2994) (quant-intro (proof-bind ?x444) (= $x2994 $x442)) $x442)))
 (let ((@x2146 (mp (mp~ @x2732 (sk (~ $x442 $x2497)) $x2497) (rewrite (= $x2497 $x2789)) $x2789)))
 (let ((@x2109 (and-elim @x2146 $x2409)))
 (let ((@x2680 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2409) $x592)) @x2109 $x592)))
 (let (($x730 (>= ?x2423 0)))
 (let ((@x3268 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2409) $x730)) @x2109 $x730)))
 (let (($x2887 (<= ?x825 0)))
 (let ((@x3302 (and-elim @x2146 $x829)))
 (let ((@x2255 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x829) $x2887)) @x3302 $x2887)))
 (let (($x729 (>= ?x825 0)))
 (let ((@x1021 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x829) $x729)) @x3302 $x729)))
 (let (($x728 (<= ?x2261 0)))
 (let ((@x3303 (and-elim @x2146 $x2260)))
 (let ((@x2185 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2260) $x728)) @x3303 $x728)))
 (let (($x1790 (>= ?x2261 0)))
 (let ((@x1028 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2260) $x1790)) @x3303 $x1790)))
 (let (($x2180 (<= ?x1198 0)))
 (let ((@x722 (and-elim @x2146 $x1199)))
 (let ((@x1260 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1199) $x2180)) @x722 $x2180)))
 (let (($x2238 (>= ?x1198 0)))
 (let ((@x2234 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1199) $x2238)) @x722 $x2238)))
 (let (($x1867 (not (<= ?x2839 0))))
 (let (($x2170 (>= ?x2839 0)))
 (let ((@x1400 ((_ th-lemma arith) (hypothesis (not $x2170)) @x3268 @x2680 @x3268 @x2680 @x1021 @x2255 @x2234 @x1260 @x1028 @x2185 @x2234 @x1260 @x1028 @x2185 @x1021 @x2255 @x3268 @x2680 false)))
 (let ((@x2101 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2798 $x1867 (not $x2170))) (and-elim @x2146 $x2143) (or $x1867 (not $x2170)))))
 ((_ th-lemma arith) (unit-resolution @x2101 (lemma @x1400 $x2170) $x1867) @x3268 @x2680 @x3268 @x2680 @x1021 @x2255 @x2234 @x1260 @x1028 @x2185 @x2234 @x1260 @x1028 @x2185 @x1021 @x2255 @x3268 @x2680 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        33
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             902
 :arith-nonlinear-bounds    26
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      11
 :arith-tableau-max-columns 177
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.35
 :memory                    3.56
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                2857124
 :num-checks                1
 :propagations              12
 :rlimit-count              48269
 :time                      0.03
 :total-time                0.04)
