unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x1200 (* (- 1) y!0)))
 (let ((?x2224 (* (- 1) x!1)))
 (let ((?x876 (+ y00 x00 ?x2224 ?x1200)))
 (let (($x163 (<= ?x876 0)))
 (let (($x1205 (= ?x876 0)))
 (let ((?x665 (+ 1 y!0)))
 (let ((?x510 (+ (- 1) x!1)))
 (let ((?x2291 (* ?x510 ?x510 ?x510 ?x510 ?x510 ?x665)))
 (let ((?x1887 (* y00 x!1 x!1 x!1 x!1 y!0 y!0)))
 (let ((?x1844 (* x00 ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)))
 (let ((?x1263 (* x!1 x!1 x!1)))
 (let ((?x1264 (* (- 1) ?x1263)))
 (let ((?x1208 (* x!1 x!1 y!0)))
 (let ((?x1186 (* x!1 y!0)))
 (let ((?x1185 (* x!1 y!0 y!0)))
 (let ((?x356 (* 2 ?x1185)))
 (let ((?x1113 (* (- 4) (* x00 x!1 y!0 y!0))))
 (let ((?x1829 (* (- 4) (* y00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x1127 (* x00 y!0 y!0)))
 (let ((?x1090 (* x00 x!1 x!1 x!1 x!1 y!0 y!0)))
 (let ((?x2529 (* (- 4) (* x00 x!1 x!1 x!1 y!0 y!0))))
 (let ((?x801 (* (- 4) (* y00 x!1 y!0 y!0))))
 (let ((?x772 (* y00 y!0 y!0)))
 (let ((?x692 (* y00 ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)))
 (let ((?x612 (+ (* 3 y00) (* 3 x00) (* 19 (* x00 x!1 x!1 y!0)) (* (- 1) (* x!1 x!1 y!0 y!0)) (* 3 (* x00 x!1 x!1 x!1 x!1 y!0)) (* (- 1) (* y!0 y!0)) (* (- 14) (* y00 x!1 y!0)) ?x692 ?x772 ?x801 (* 2 (* y00 x!1 x!1 x!1 x!1)) ?x2529 (* 6 (* y00 x!1 x!1 y!0 y!0)) ?x1090 (* 6 (* x00 x!1 x!1 y!0 y!0)) ?x1127 (* (- 8) (* y00 x!1 x!1 x!1)) ?x1829 ?x1113 (* (- 10) (* x00 x!1)) ?x356 ?x1186 (* 2 (* x00 x!1 x!1 x!1 x!1)) (* (- 12) (* y00 x!1 x!1 x!1 y!0)) (* (- 10) (* y00 x!1)) ?x1208 (* 19 (* y00 x!1 x!1 y!0)) (* 3 (* y00 x!1 x!1 x!1 x!1 y!0)) (* 13 (* y00 x!1 x!1)) ?x1264 (* (- 1) (* x!1 x!1 x!1 y!0)) (* 13 (* x00 x!1 x!1)) (* (- 1) (* ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)) ?x1844 ?x1887 (* 4 (* y00 y!0)) (* (- 1) (* ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)) (* (- 1) (* ?x510 ?x510 ?x510 ?x510 ?x665 ?x665 ?x665)) (* 2 (* x!1 x!1)) (* (- 1) (* ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665 ?x665)) (* (- 1) (* ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)) (* (- 1) ?x2291) (* (- 14) (* x00 x!1 y!0)) (* 4 (* x00 y!0)) (* (- 8) (* x00 x!1 x!1 x!1)) ?x2224 ?x1200 (* (- 12) (* x00 x!1 x!1 x!1 y!0)))))
 (let (($x2055 (= ?x612 0)))
 (let (($x595 (not $x2055)))
 (let ((?x922 (+ 1 x!1)))
 (let ((?x921 (+ (- 1) y!0)))
 (let ((?x3155 (* ?x921 ?x921 ?x922 ?x922 ?x922 ?x922 ?x922)))
 (let ((?x3061 (* ?x921 ?x921 ?x922 ?x922 ?x922 ?x922)))
 (let ((?x2784 (* (- 1) (* y00 ?x921 ?x921 ?x922 ?x922 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x1837 (* ?x921 ?x922 ?x922 ?x922 ?x922 ?x922)))
 (let ((?x1736 (* x00 x!1 x!1)))
 (let ((?x1273 (* x!1 x!1 x!1 y!0)))
 (let ((?x1254 (* ?x921 ?x921 ?x921 ?x922 ?x922 ?x922 ?x922 ?x922 ?x922)))
 (let ((?x1240 (* y00 x!1 x!1)))
 (let ((?x1234 (* y00 x!1 x!1 x!1 x!1 y!0)))
 (let ((?x3154 (* (- 1) (* x00 ?x921 ?x921 ?x922 ?x922 ?x922 ?x922 ?x922 ?x922))))
 (let ((?x962 (* ?x921 ?x921 ?x922 ?x922 ?x922 ?x922 ?x922 ?x922 ?x922)))
 (let ((?x938 (* ?x921 ?x921 ?x921 ?x922 ?x922 ?x922 ?x922)))
 (let ((?x672 (* y!0 y!0)))
 (let ((?x431 (* x00 x!1 x!1 x!1 x!1 y!0)))
 (let ((?x357 (* x!1 x!1 y!0 y!0)))
 (let ((?x406 (+ y00 x00 (* 5 (* x00 x!1 x!1 y!0)) ?x357 ?x431 ?x672 (* 2 (* y00 x!1 y!0)) (* (- 1) ?x772) ?x801 ?x2529 ?x938 ?x962 (* (- 6) (* y00 x!1 x!1 y!0 y!0)) (* (- 1) ?x1090) (* (- 6) (* x00 x!1 x!1 y!0 y!0)) ?x3154 (* (- 1) ?x1127) ?x1829 ?x1113 (* 2 (* x00 x!1)) ?x356 (* (- 1) ?x1186) (* 4 (* y00 x!1 x!1 x!1 y!0)) (* 2 (* y00 x!1)) ?x1208 (* 5 (* y00 x!1 x!1 y!0)) ?x1234 ?x1240 ?x1254 ?x1264 ?x1273 ?x1736 ?x1837 (* (- 1) ?x1887) (* (- 2) (* x!1 x!1)) (* 2 (* x00 x!1 y!0)) ?x2224 ?x1200 (* 4 (* x00 x!1 x!1 x!1 y!0)) ?x2784 ?x3061 ?x3155)))
 (let (($x1831 (= ?x406 0)))
 (let (($x833 (or (not $x1831) $x595)))
 (let (($x662 (and $x1205 $x833)))
 (let ((?x2754 (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y!0 y00))))
 (let ((?x1286 (* (- 6) (* x!1 x!1 y!0 y!0 y00))))
 (let ((?x1787 (* ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)))
 (let ((?x2131 (* ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)))
 (let ((?x652 (* (- 1) (* x!1 x!1 1))))
 (let ((?x2259 (* ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665)))
 (let ((?x2258 (* ?x510 ?x510 ?x510 ?x510 ?x510 ?x510 ?x665 ?x665 ?x665)))
 (let ((?x1937 (* (- 1) (* y!0 y!0 y00))))
 (let ((?x1931 (* (- 1) (* x!1 x!1 x!1 x!1 y!0 y!0 x00))))
 (let ((?x1253 (* (- 6) (* x!1 x!1 y!0 y!0 x00))))
 (let ((?x1194 (* (- 1) (* y!0 y!0 x00))))
 (let ((?x2135 (* ?x510 ?x510 ?x510 ?x510 ?x665 ?x665 ?x665)))
 (let ((?x1893 (* (- 1) (* x!1 1 1))))
 (let ((?x1311 (* (- 3) x00)))
 (let ((?x1802 (* (- 3) y00)))
 (let ((?x2127 (+ x!1 y!0 ?x1802 ?x1311 (* (- 4) (* y!0 y00)) (* 14 (* x!1 y!0 y00)) (* (- 19) (* x!1 x!1 y!0 y00)) (* 10 (* x!1 y00)) (* 12 (* x!1 x!1 x!1 y!0 y00)) (* (- 3) (* x!1 x!1 x!1 x!1 y!0 y00)) (* (- 13) (* x!1 x!1 y00)) (* 8 (* x!1 x!1 x!1 y00)) (* (- 2) (* x!1 x!1 x!1 x!1 y00)) (* 10 (* x!1 x00)) (* (- 13) (* x!1 x!1 x00)) (* (- 4) (* y!0 x00)) (* 14 (* x!1 y!0 x00)) (* (- 19) (* x!1 x!1 y!0 x00)) (* (- 1) ?x692) (* (- 1) ?x1844) (* 8 (* x!1 x!1 x!1 x00)) (* (- 2) (* x!1 x!1 x!1 x!1 x00)) (* 12 (* x!1 x!1 x!1 y!0 x00)) (* (- 3) (* x!1 x!1 x!1 x!1 y!0 x00)) ?x1893 (* (- 1) (* x!1 y!0 1)) (* (- 1) (* x!1 1 y!0)) ?x672 (* (- 2) ?x1185) ?x357 (* (- 1) (* x!1 x!1)) (* (- 1) ?x1208) ?x2135 ?x1194 (* 4 (* x!1 y!0 y!0 x00)) ?x1253 (* 4 (* x!1 x!1 x!1 y!0 y!0 x00)) ?x1931 ?x1263 ?x1937 ?x2258 ?x2259 ?x1273 (* (- 1) (* x!1 (- 1) y!0)) ?x652 (* (- 1) (* x!1 (- 1) 1)) ?x2131 ?x1787 (* 4 (* x!1 y!0 y!0 y00)) ?x1286 (* 4 (* x!1 x!1 x!1 y!0 y!0 y00)) ?x2754 ?x2291)))
 (let ((?x946 (* x!1 x!1 x!1 x!1 y!0 x00)))
 (let ((?x1949 (* x!1 x!1 x00)))
 (let ((?x755 (* x!1 x!1 y00)))
 (let ((?x1940 (* x!1 x!1 x!1 x!1 y!0 y00)))
 (let ((?x1828 (+ x!1 y00 x00 (* 2 (* x!1 y!0 y00)) (* 5 (* x!1 x!1 y!0 y00)) (* 2 (* x!1 y00)) (* (- 1) (* y!0 x!1 1)) (* (- 1) (* x!1 1)) (* 4 (* x!1 x!1 x!1 y!0 y00)) ?x1940 ?x755 (* (- 1) (* y!0 1 1)) (* (- 1) (* y!0 1 x!1)) ?x962 (* 2 (* x!1 x00)) ?x1949 (* 2 (* x!1 y!0 x00)) (* 5 (* x!1 x!1 y!0 x00)) ?x938 (* 4 (* x!1 x!1 x!1 y!0 x00)) ?x946 ?x1893 ?x672 ?x356 ?x357 ?x1186 ?x1208 ?x1837 ?x1194 (* (- 4) (* x!1 y!0 y!0 x00)) ?x1253 (* (- 4) (* x!1 x!1 x!1 y!0 y!0 x00)) ?x1931 ?x1254 ?x1264 ?x1937 ?x1273 ?x652 (* (- 4) (* x!1 y!0 y!0 y00)) ?x1286 (* (- 4) (* x!1 x!1 x!1 y!0 y!0 y00)) ?x2754 ?x2784 ?x3154 ?x3155 ?x3061 (* (- 1) (* x!1 1 x!1)))))
 (let (($x212 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x1828 0)) (not (= ?x2127 0))))))
 (let (($x3228 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1581 (* x x x x y y y00)))
 (let ((?x1727 (* (- 1) ?x1581)))
 (let ((?x1579 (* x x x y y y00)))
 (let ((?x1781 (* 4 ?x1579)))
 (let ((?x1575 (* x x y y y00)))
 (let ((?x1791 (* (- 6) ?x1575)))
 (let ((?x1567 (* x y y y00)))
 (let ((?x1790 (* 4 ?x1567)))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1484 (* (- 1) (* x (- 1) 1))))
 (let ((?x1482 (* (- 1) (* x x 1))))
 (let ((?x1480 (* (- 1) (* x (- 1) y))))
 (let ((?x1461 (* x x x y)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1428 (* y y y00)))
 (let ((?x1427 (* (- 1) ?x1428)))
 (let ((?x1341 (* x x x)))
 (let ((?x1151 (* x x x x y y x00)))
 (let ((?x1206 (* (- 1) ?x1151)))
 (let ((?x1125 (* x x x y y x00)))
 (let ((?x1289 (* 4 ?x1125)))
 (let ((?x1110 (* x x y y x00)))
 (let ((?x1299 (* (- 6) ?x1110)))
 (let ((?x1102 (* x y y x00)))
 (let ((?x1300 (* 4 ?x1102)))
 (let ((?x1095 (* y y x00)))
 (let ((?x1202 (* (- 1) ?x1095)))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x803 (* x x y)))
 (let ((?x1472 (* (- 1) ?x803)))
 (let ((?x794 (* x x)))
 (let ((?x1515 (* (- 1) ?x794)))
 (let ((?x783 (* x x y y)))
 (let ((?x781 (* x y y)))
 (let ((?x822 (* (- 2) ?x781)))
 (let ((?x777 (* y y)))
 (let ((?x775 (* (- 1) (* x 1 y))))
 (let ((?x768 (* (- 1) (* x y 1))))
 (let ((?x761 (* (- 1) (* x 1 1))))
 (let ((?x633 (* x x x x y x00)))
 (let ((?x1325 (* (- 3) ?x633)))
 (let ((?x607 (* x x x y x00)))
 (let ((?x1324 (* 12 ?x607)))
 (let ((?x1322 (* (- 2) (* x x x x x00))))
 (let ((?x1321 (* 8 (* x x x x00))))
 (let ((?x1906 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x473 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x441 (* x x y x00)))
 (let ((?x1320 (* (- 19) ?x441)))
 (let ((?x436 (* x y x00)))
 (let ((?x1318 (* 14 ?x436)))
 (let ((?x1316 (* (- 4) (* y x00))))
 (let ((?x424 (* x x x00)))
 (let ((?x1315 (* (- 13) ?x424)))
 (let ((?x420 (* x x00)))
 (let ((?x1313 (* 10 ?x420)))
 (let ((?x1813 (* (- 2) (* x x x x y00))))
 (let ((?x1812 (* 8 (* x x x y00))))
 (let ((?x225 (* x x x x y y00)))
 (let ((?x1810 (* (- 3) ?x225)))
 (let ((?x223 (* x x x y y00)))
 (let ((?x1809 (* 12 ?x223)))
 (let ((?x157 (* x x y y00)))
 (let ((?x1806 (* (- 19) ?x157)))
 (let ((?x1803 (* (- 4) (* y y00))))
 (let ((?x1311 (* (- 3) x00)))
 (let ((?x1802 (* (- 3) y00)))
 (let ((?x3238 (+ x y ?x1802 ?x1311 ?x1803 (* 14 (* x y y00)) ?x1806 (* 10 (* x y00)) ?x1809 ?x1810 (* (- 13) (* x x y00)) ?x1812 ?x1813 ?x1313 ?x1315 ?x1316 ?x1318 ?x1320 ?x473 ?x1906 ?x1321 ?x1322 ?x1324 ?x1325 ?x761 ?x768 ?x775 ?x777 ?x822 ?x783 ?x1515 ?x1472 ?x830 ?x1202 ?x1300 ?x1299 ?x1289 ?x1206 ?x1341 ?x1427 ?x1444 ?x1446 ?x1461 ?x1480 ?x1482 ?x1484 ?x1499 ?x1558 ?x1790 ?x1791 ?x1781 ?x1727 ?x1821)))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x1985 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1980 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1966 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x1946 (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x1244 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x882 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x799 (* x y)))
 (let ((?x487 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x410 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x236 (* x x y00)))
 (let ((?x796 (+ x y00 x00 (* 2 (* x y y00)) (* 5 ?x157) (* 2 (* x y00)) (* (- 1) (* y x 1)) (* (- 1) (* x 1)) (* 4 ?x223) ?x225 ?x236 (* (- 1) (* y 1 1)) (* (- 1) (* y 1 x)) ?x410 (* 2 ?x420) ?x424 (* 2 ?x436) (* 5 ?x441) ?x487 (* 4 ?x607) ?x633 ?x761 ?x777 (* 2 ?x781) ?x783 ?x799 ?x803 ?x882 ?x1202 (* (- 4) ?x1102) ?x1299 (* (- 4) ?x1125) ?x1206 ?x1244 (* (- 1) ?x1341) ?x1427 ?x1461 ?x1482 (* (- 4) ?x1567) ?x1791 (* (- 4) ?x1579) ?x1727 ?x1946 ?x1966 ?x1980 ?x1985 (* (- 1) (* x 1 x)))))
 (let (($x128 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x128 (or (not (= ?x796 0)) (not (= ?x3238 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x2499 (exists ((x Int) (y Int) )(! (let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1906 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x473 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1954 (+ (* (- 1) (* y00 ?x120 ?x120 ?x130)) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* ?x120 ?x120 ?x130 ?x130) ?x830 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x473 ?x1499 ?x1906 ?x1444 ?x1446 ?x1558 (* ?x120 ?x120 ?x120 ?x130) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x1821)))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x882 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1985 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1980 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1244 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1966 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x410 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1946 (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x487 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x914 (+ (* (- 1) (* y00 ?x184 ?x1905 ?x1905)) (* (- 1) (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* ?x184 ?x184 ?x1905 ?x1905) ?x487 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x1946 ?x410 ?x1966 ?x1244 ?x1980 ?x1985 (* ?x184 ?x1905 ?x1905 ?x1905) (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x882)))
 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x914 0)) (not (= ?x1954 0)))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x139 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1581 (* x x x x y y y00)))
 (let ((?x1727 (* (- 1) ?x1581)))
 (let ((?x1579 (* x x x y y y00)))
 (let ((?x1781 (* 4 ?x1579)))
 (let ((?x1575 (* x x y y y00)))
 (let ((?x1791 (* (- 6) ?x1575)))
 (let ((?x1567 (* x y y y00)))
 (let ((?x1790 (* 4 ?x1567)))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1484 (* (- 1) (* x (- 1) 1))))
 (let ((?x1482 (* (- 1) (* x x 1))))
 (let ((?x1480 (* (- 1) (* x (- 1) y))))
 (let ((?x1461 (* x x x y)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1428 (* y y y00)))
 (let ((?x1427 (* (- 1) ?x1428)))
 (let ((?x1341 (* x x x)))
 (let ((?x1151 (* x x x x y y x00)))
 (let ((?x1206 (* (- 1) ?x1151)))
 (let ((?x1125 (* x x x y y x00)))
 (let ((?x1289 (* 4 ?x1125)))
 (let ((?x1110 (* x x y y x00)))
 (let ((?x1299 (* (- 6) ?x1110)))
 (let ((?x1102 (* x y y x00)))
 (let ((?x1300 (* 4 ?x1102)))
 (let ((?x1095 (* y y x00)))
 (let ((?x1202 (* (- 1) ?x1095)))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x803 (* x x y)))
 (let ((?x1472 (* (- 1) ?x803)))
 (let ((?x794 (* x x)))
 (let ((?x1515 (* (- 1) ?x794)))
 (let ((?x783 (* x x y y)))
 (let ((?x781 (* x y y)))
 (let ((?x822 (* (- 2) ?x781)))
 (let ((?x777 (* y y)))
 (let ((?x775 (* (- 1) (* x 1 y))))
 (let ((?x768 (* (- 1) (* x y 1))))
 (let ((?x761 (* (- 1) (* x 1 1))))
 (let ((?x633 (* x x x x y x00)))
 (let ((?x1325 (* (- 3) ?x633)))
 (let ((?x607 (* x x x y x00)))
 (let ((?x1324 (* 12 ?x607)))
 (let ((?x1322 (* (- 2) (* x x x x x00))))
 (let ((?x1321 (* 8 (* x x x x00))))
 (let ((?x1906 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x473 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x441 (* x x y x00)))
 (let ((?x1320 (* (- 19) ?x441)))
 (let ((?x436 (* x y x00)))
 (let ((?x1318 (* 14 ?x436)))
 (let ((?x1316 (* (- 4) (* y x00))))
 (let ((?x424 (* x x x00)))
 (let ((?x1315 (* (- 13) ?x424)))
 (let ((?x420 (* x x00)))
 (let ((?x1313 (* 10 ?x420)))
 (let ((?x1813 (* (- 2) (* x x x x y00))))
 (let ((?x1812 (* 8 (* x x x y00))))
 (let ((?x225 (* x x x x y y00)))
 (let ((?x1810 (* (- 3) ?x225)))
 (let ((?x223 (* x x x y y00)))
 (let ((?x1809 (* 12 ?x223)))
 (let ((?x157 (* x x y y00)))
 (let ((?x1806 (* (- 19) ?x157)))
 (let ((?x1803 (* (- 4) (* y y00))))
 (let ((?x1311 (* (- 3) x00)))
 (let ((?x1802 (* (- 3) y00)))
 (let ((?x3238 (+ x y ?x1802 ?x1311 ?x1803 (* 14 (* x y y00)) ?x1806 (* 10 (* x y00)) ?x1809 ?x1810 (* (- 13) (* x x y00)) ?x1812 ?x1813 ?x1313 ?x1315 ?x1316 ?x1318 ?x1320 ?x473 ?x1906 ?x1321 ?x1322 ?x1324 ?x1325 ?x761 ?x768 ?x775 ?x777 ?x822 ?x783 ?x1515 ?x1472 ?x830 ?x1202 ?x1300 ?x1299 ?x1289 ?x1206 ?x1341 ?x1427 ?x1444 ?x1446 ?x1461 ?x1480 ?x1482 ?x1484 ?x1499 ?x1558 ?x1790 ?x1791 ?x1781 ?x1727 ?x1821)))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x1985 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1980 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1966 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x1946 (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x1244 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x882 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x799 (* x y)))
 (let ((?x487 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x410 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x236 (* x x y00)))
 (let ((?x796 (+ x y00 x00 (* 2 (* x y y00)) (* 5 ?x157) (* 2 (* x y00)) (* (- 1) (* y x 1)) (* (- 1) (* x 1)) (* 4 ?x223) ?x225 ?x236 (* (- 1) (* y 1 1)) (* (- 1) (* y 1 x)) ?x410 (* 2 ?x420) ?x424 (* 2 ?x436) (* 5 ?x441) ?x487 (* 4 ?x607) ?x633 ?x761 ?x777 (* 2 ?x781) ?x783 ?x799 ?x803 ?x882 ?x1202 (* (- 4) ?x1102) ?x1299 (* (- 4) ?x1125) ?x1206 ?x1244 (* (- 1) ?x1341) ?x1427 ?x1461 ?x1482 (* (- 4) ?x1567) ?x1791 (* (- 4) ?x1579) ?x1727 ?x1946 ?x1966 ?x1980 ?x1985 (* (- 1) (* x 1 x)))))
 (let (($x128 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x1180 (and $x128 (or (not (= ?x796 0)) (not (= ?x3238 0))))))
 (let ((?x1954 (+ (* (- 1) (* y00 ?x120 ?x120 ?x130)) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* ?x120 ?x120 ?x130 ?x130) ?x830 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x473 ?x1499 ?x1906 ?x1444 ?x1446 ?x1558 (* ?x120 ?x120 ?x120 ?x130) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x1821)))
 (let ((?x914 (+ (* (- 1) (* y00 ?x184 ?x1905 ?x1905)) (* (- 1) (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* ?x184 ?x184 ?x1905 ?x1905) ?x487 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x1946 ?x410 ?x1966 ?x1244 ?x1980 ?x1985 (* ?x184 ?x1905 ?x1905 ?x1905) (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x882)))
 (let (($x970 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x914 0)) (not (= ?x1954 0))))))
 (rewrite (= $x970 $x1180))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x99 (exists ((x Int) (y Int) )(! (let ((?x67 (- y 1)))
 (let ((?x66 (+ x 1)))
 (let ((?x72 (- (* (- 1) ?x66 ?x66 ?x67 y00) (* ?x66 ?x66 ?x66 ?x66 ?x67 y00))))
 (let ((?x74 (- (- ?x72 (* ?x66 ?x66 x00 ?x67)) (* ?x66 ?x66 ?x66 ?x66 x00 ?x67))))
 (let ((?x77 (+ ?x74 (* ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67))))
 (let ((?x81 (- (- ?x77 (* ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00))))
 (let ((?x85 (- (+ ?x81 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67))))
 (let ((?x90 (+ ?x85 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x67))))
 (let ((?x94 (+ (- ?x90 (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (- (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 ?x35 ?x36 y00))))
 (let ((?x43 (- (- ?x41 (* ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x35 x00 ?x36))))
 (let ((?x46 (+ ?x43 (* ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x50 (- (- ?x46 (* ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x54 (- (+ ?x50 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x59 (+ ?x54 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36))))
 (let ((?x63 (+ (- ?x59 (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x63 0)) (not (= ?x94 0)))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x322 (lambda ((x Int) (y Int) )(let ((?x130 (+ 1 y)))
 (let ((?x120 (+ (- 1) x)))
 (let ((?x1821 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130)))
 (let ((?x1558 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1446 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x1444 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1906 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x1499 (* ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)))
 (let ((?x473 (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130))))
 (let ((?x830 (* ?x120 ?x120 ?x120 ?x120 ?x130 ?x130 ?x130)))
 (let ((?x1954 (+ (* (- 1) (* y00 ?x120 ?x120 ?x130)) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x130)) (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130)) (* ?x120 ?x120 ?x130 ?x130) ?x830 (* (- 1) (* x00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x473 ?x1499 ?x1906 ?x1444 ?x1446 ?x1558 (* ?x120 ?x120 ?x120 ?x130) (* (- 1) (* y00 ?x120 ?x120 ?x120 ?x120 ?x130 ?x130)) ?x1821)))
 (let ((?x1905 (+ 1 x)))
 (let ((?x184 (+ (- 1) y)))
 (let ((?x882 (* ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1985 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1980 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1244 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1966 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x410 (* ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x1946 (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905 ?x1905))))
 (let ((?x487 (* ?x184 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)))
 (let ((?x914 (+ (* (- 1) (* y00 ?x184 ?x1905 ?x1905)) (* (- 1) (* y00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905)) (* (- 1) (* x00 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) (* ?x184 ?x184 ?x1905 ?x1905) ?x487 (* (- 1) (* x00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x1946 ?x410 ?x1966 ?x1244 ?x1980 ?x1985 (* ?x184 ?x1905 ?x1905 ?x1905) (* (- 1) (* y00 ?x184 ?x184 ?x1905 ?x1905 ?x1905 ?x1905)) ?x882)))
 (let (($x970 (and (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0) (or (not (= ?x914 0)) (not (= ?x1954 0))))))
 (let ((?x67 (- y 1)))
 (let ((?x66 (+ x 1)))
 (let ((?x72 (- (* (- 1) ?x66 ?x66 ?x67 y00) (* ?x66 ?x66 ?x66 ?x66 ?x67 y00))))
 (let ((?x74 (- (- ?x72 (* ?x66 ?x66 x00 ?x67)) (* ?x66 ?x66 ?x66 ?x66 x00 ?x67))))
 (let ((?x77 (+ ?x74 (* ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67))))
 (let ((?x81 (- (- ?x77 (* ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00))))
 (let ((?x85 (- (+ ?x81 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 x00 ?x67 ?x67))))
 (let ((?x90 (+ ?x85 (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67) (* ?x66 ?x66 ?x66 ?x67))))
 (let ((?x94 (+ (- ?x90 (* ?x66 ?x66 ?x66 ?x66 ?x67 ?x67 y00)) (* ?x66 ?x66 ?x66 ?x66 ?x66 ?x67))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x41 (- (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 ?x35 ?x35 ?x35 ?x36 y00))))
 (let ((?x43 (- (- ?x41 (* ?x35 ?x35 x00 ?x36)) (* ?x35 ?x35 ?x35 ?x35 x00 ?x36))))
 (let ((?x46 (+ ?x43 (* ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x50 (- (- ?x46 (* ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00))))
 (let ((?x54 (- (+ ?x50 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 x00 ?x36 ?x36))))
 (let ((?x59 (+ ?x54 (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36) (* ?x35 ?x35 ?x35 ?x36))))
 (let ((?x63 (+ (- ?x59 (* ?x35 ?x35 ?x35 ?x35 ?x36 ?x36 y00)) (* ?x35 ?x35 ?x35 ?x35 ?x35 ?x36))))
 (let (($x98 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x63 0)) (not (= ?x94 0))))))
 (rewrite (= $x98 $x970)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x100 (asserted $x99)))
 (let ((@x743 (mp (mp @x100 (quant-intro (proof-bind ?x322) (= $x99 $x2499)) $x2499) (rewrite (= $x2499 $x2499)) $x2499)))
 (let ((@x2536 (mp~ (mp @x743 (quant-intro (proof-bind ?x139) (= $x2499 $x3228)) $x3228) (sk (~ $x3228 $x212)) $x212)))
 (let ((@x1224 (mp @x2536 (rewrite (= $x212 $x662)) $x662)))
 (let ((@x968 (and-elim @x1224 $x1205)))
 (let ((@x1189 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1205) $x163)) @x968 $x163)))
 (let (($x255 (>= ?x876 0)))
 (let ((@x964 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1205) $x255)) @x968 $x255)))
 (let (($x765 (not (<= ?x612 0))))
 (let (($x1229 (>= ?x612 0)))
 (let ((@x1241 (lemma ((_ th-lemma arith) (hypothesis (not $x1229)) @x964 @x1189 @x964 @x1189 false) $x1229)))
 (let (($x2571 (>= ?x406 0)))
 (let ((@x798 (lemma ((_ th-lemma arith) (hypothesis (not $x2571)) @x964 @x1189 @x964 @x1189 false) $x2571)))
 (let (($x1239 (<= ?x406 0)))
 (let ((@x560 (lemma ((_ th-lemma arith) (hypothesis (not $x1239)) @x964 @x1189 @x964 @x1189 false) $x1239)))
 (let ((@x1384 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1831 (not $x1239) (not $x2571))) @x560 @x798 $x1831)))
 (let ((@x2326 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2055 $x765 (not $x1229))) (unit-resolution (and-elim @x1224 $x833) @x1384 $x595) @x1241 $x765)))
 ((_ th-lemma arith) @x2326 @x964 @x1189 @x964 @x1189 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        26
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-grobner             4
 :arith-max-min             941
 :arith-nonlinear-bounds    19
 :arith-nonlinear-horner    25
 :arith-num-rows            7
 :arith-pivots              3
 :arith-row-summations      2
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    7
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                19.91
 :memory                    19.42
 :mk-bool-var               9
 :mk-clause                 12
 :num-allocs                754886
 :num-checks                1
 :propagations              14
 :rlimit-count              17805
 :time                      0.02
 :total-time                0.04)
