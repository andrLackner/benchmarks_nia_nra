unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x357 (* (- 3) n!0)))
 (let ((?x278 (* n!0 n!0)))
 (let ((?x273 (* (- 3) ?x278)))
 (let ((?x130 (+ k!2 ?x273 ?x357)))
 (let (($x148 (>= ?x130 1)))
 (let (($x308 (= ?x130 1)))
 (let ((?x143 (* 9 n!0)))
 (let ((?x414 (* 3 ?x278)))
 (let ((?x413 (* (- 1) m!1)))
 (let ((?x232 (* (- 1) k!2)))
 (let ((?x460 (* k!2 k!2 k!2 k!2 k!2)))
 (let ((?x418 (* 3 (* k!2 k!2 k!2 m!1 m!1))))
 (let ((?x417 (* k!2 k!2 m!1 m!1 m!1)))
 (let ((?x474 (+ k!2 c!3)))
 (let ((?x336 (+ k!2 m!1)))
 (let ((?x481 (+ 1 n!0)))
 (let ((?x94 (+ 6 m!1)))
 (let ((?x462 (* 3 (* k!2 k!2 k!2 k!2 m!1))))
 (let ((?x180 (+ (* k!2 k!2 k!2 c!3 c!3) (* 6 (* k!2 k!2 k!2 m!1 c!3)) (* 3 (* k!2 k!2 m!1 c!3 c!3)) (* ?x481 ?x481 ?x336 ?x474 ?x474 ?x474) (* m!1 m!1 m!1 c!3 c!3) (* 6 (* k!2 k!2 m!1 m!1 c!3)) (* 2 (* k!2 m!1 m!1 m!1 c!3)) ?x462 (* 2 (* k!2 k!2 k!2 k!2 c!3)) (* ?x481 ?x481 ?x481 ?x94 ?x94 ?x94 ?x336 ?x336 ?x474 ?x474) (* ?x481 ?x336 ?x336 ?x336 ?x474 ?x474 ?x474) ?x417 ?x418 (* 3 (* k!2 m!1 m!1 c!3 c!3)) ?x460)))
 (let ((?x110 (* ?x180 (+ 7 ?x232 ?x413 ?x414 ?x143))))
 (let (($x105 (= ?x110 0)))
 (let (($x150 (not $x105)))
 (let (($x473 (= (+ k!2 (* (- 2) n!0) (* 3 c!3) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x246 (* 18 c!3)))
 (let ((?x245 (* (- 9) n!0)))
 (let ((?x244 (* (- 1) (* k!2 k!2))))
 (let ((?x345 (* 5 k!2)))
 (let ((?x479 (+ m!1 (* (- 6) n!0))))
 (let (($x354 (= ?x479 6)))
 (let (($x95 (and $x354 (= (+ ?x345 ?x244 ?x245 (* 9 (* n!0 c!3)) ?x246) 4) $x473 $x308 $x150)))
 (let ((?x488 (+ c!3 k!2)))
 (let ((?x452 (+ (* ?x481 ?x481 ?x481 ?x94 ?x94 ?x94 ?x336 ?x336 ?x488 ?x488) (* ?x481 ?x336 ?x336 ?x336 ?x488 ?x488 ?x488) (* ?x481 ?x481 ?x336 ?x488 ?x488 ?x488) (* 2 (* c!3 k!2 k!2 k!2 k!2)) ?x460 (* 3 (* c!3 c!3 k!2 k!2 m!1)) (* 6 (* c!3 k!2 k!2 k!2 m!1)) ?x462 (* 3 (* c!3 c!3 k!2 m!1 m!1)) (* 6 (* c!3 k!2 k!2 m!1 m!1)) ?x418 (* c!3 c!3 m!1 m!1 m!1) (* 2 (* c!3 k!2 m!1 m!1 m!1)) ?x417 (* c!3 c!3 k!2 k!2 k!2))))
 (let (($x358 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x435 (and $x354 (= (+ ?x246 ?x345 ?x245 ?x244 (* 9 (* c!3 n!0))) 4) $x358 (= (+ k!2 ?x357 ?x273) 1) (not (= (* ?x452 (+ 7 ?x232 ?x413 ?x143 ?x414)) 0)))))
 (let (($x355 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x265 (* n n)))
 (let ((?x266 (* 3 ?x265)))
 (let ((?x48 (* 9 n)))
 (let ((?x350 (* (- 1) m)))
 (let ((?x234 (* (- 1) k)))
 (let ((?x491 (* c c k k k)))
 (let ((?x451 (* k k m m m)))
 (let ((?x405 (* 2 (* c k m m m))))
 (let ((?x448 (* c c m m m)))
 (let ((?x406 (* 3 (* k k k m m))))
 (let ((?x407 (* 6 (* c k k m m))))
 (let ((?x408 (* 3 (* c c k m m))))
 (let ((?x409 (* 3 (* k k k k m))))
 (let ((?x410 (* 6 (* c k k k m))))
 (let ((?x411 (* 3 (* c c k k m))))
 (let ((?x423 (* k k k k k)))
 (let ((?x412 (* 2 (* c k k k k))))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x302 (+ 1 n)))
 (let ((?x198 (* ?x302 ?x302 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x176 (* ?x302 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x387 (+ 6 m)))
 (let ((?x155 (* ?x302 ?x302 ?x302 ?x387 ?x387 ?x387 ?x71 ?x71 ?x75 ?x75)))
 (let ((?x375 (+ ?x155 ?x176 ?x198 ?x412 ?x423 ?x411 ?x410 ?x409 ?x408 ?x407 ?x406 ?x448 ?x405 ?x451 ?x491)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) ?x265)) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 $x204 $x256 $x294 (not (= (* ?x375 (+ 7 ?x234 ?x350 ?x48 ?x266)) 0))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x129 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x350 (* (- 1) m)))
 (let ((?x234 (* (- 1) k)))
 (let ((?x139 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x234 ?x350 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x302 (+ 1 n)))
 (let ((?x198 (* ?x302 ?x302 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x176 (* ?x302 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x387 (+ 6 m)))
 (let ((?x155 (* ?x302 ?x302 ?x302 ?x387 ?x387 ?x387 ?x71 ?x71 ?x75 ?x75)))
 (let (($x231 (not (= (* (+ ?x155 ?x176 (* ?x71 ?x71 ?x71 ?x75 ?x75) ?x198) ?x139) 0))))
 (let (($x292 (= (+ (* 3 (* n n)) ?x234 ?x65) (- 1))))
 (let (($x159 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x159 $x292 $x231))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x480 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x265 (* n n)))
 (let ((?x266 (* 3 ?x265)))
 (let ((?x48 (* 9 n)))
 (let ((?x350 (* (- 1) m)))
 (let ((?x234 (* (- 1) k)))
 (let ((?x491 (* c c k k k)))
 (let ((?x451 (* k k m m m)))
 (let ((?x405 (* 2 (* c k m m m))))
 (let ((?x448 (* c c m m m)))
 (let ((?x406 (* 3 (* k k k m m))))
 (let ((?x407 (* 6 (* c k k m m))))
 (let ((?x408 (* 3 (* c c k m m))))
 (let ((?x409 (* 3 (* k k k k m))))
 (let ((?x410 (* 6 (* c k k k m))))
 (let ((?x411 (* 3 (* c c k k m))))
 (let ((?x423 (* k k k k k)))
 (let ((?x412 (* 2 (* c k k k k))))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x302 (+ 1 n)))
 (let ((?x198 (* ?x302 ?x302 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x176 (* ?x302 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x387 (+ 6 m)))
 (let ((?x155 (* ?x302 ?x302 ?x302 ?x387 ?x387 ?x387 ?x71 ?x71 ?x75 ?x75)))
 (let ((?x375 (+ ?x155 ?x176 ?x198 ?x412 ?x423 ?x411 ?x410 ?x409 ?x408 ?x407 ?x406 ?x448 ?x405 ?x451 ?x491)))
 (let (($x294 (= (+ k (* (- 3) n) (* (- 3) ?x265)) 1)))
 (let (($x256 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x204 (= (+ ?x40 ?x44 ?x206 ?x207 (* 9 (* c n))) 4)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x477 (and $x120 $x204 $x256 $x294 (not (= (* ?x375 (+ 7 ?x234 ?x350 ?x48 ?x266)) 0)))))
 (let ((?x200 (* (+ ?x155 ?x176 (* ?x71 ?x71 ?x71 ?x75 ?x75) ?x198) (+ 4 (* 3 (* ?x302 ?x302)) ?x234 ?x350 (* 3 n)))))
 (let (($x231 (not (= ?x200 0))))
 (let (($x292 (= (+ ?x266 ?x234 (* 3 n)) (- 1))))
 (let (($x159 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x490 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x159 $x292 $x231)))
 (rewrite (= $x490 $x477)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x233 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x65 (* 3 n)))
 (let ((?x350 (* (- 1) m)))
 (let ((?x234 (* (- 1) k)))
 (let ((?x139 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x234 ?x350 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x302 (+ 1 n)))
 (let ((?x198 (* ?x302 ?x302 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x176 (* ?x302 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x387 (+ 6 m)))
 (let ((?x155 (* ?x302 ?x302 ?x302 ?x387 ?x387 ?x387 ?x71 ?x71 ?x75 ?x75)))
 (let (($x231 (not (= (* (+ ?x155 ?x176 (* ?x71 ?x71 ?x71 ?x75 ?x75) ?x198) ?x139) 0))))
 (let (($x292 (= (+ (* 3 (* n n)) ?x234 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x475 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (and $x120 (= ?x475 (- 4)) (= (+ (* (- 3) c) (* n k) ?x234 (* 2 n)) (- 1)) $x292 $x231)))))))))))))))))) :qid k!34))
 ))
 (let ((?x132 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x350 (* (- 1) m)))
 (let ((?x234 (* (- 1) k)))
 (let ((?x139 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x234 ?x350 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x302 (+ 1 n)))
 (let ((?x198 (* ?x302 ?x302 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x176 (* ?x302 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x387 (+ 6 m)))
 (let ((?x155 (* ?x302 ?x302 ?x302 ?x387 ?x387 ?x387 ?x71 ?x71 ?x75 ?x75)))
 (let (($x231 (not (= (* (+ ?x155 ?x176 (* ?x71 ?x71 ?x71 ?x75 ?x75) ?x198) ?x139) 0))))
 (let (($x292 (= (+ (* 3 (* n n)) ?x234 ?x65) (- 1))))
 (let (($x159 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x207 (* (- 1) ?x49)))
 (let ((?x206 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x490 (and $x120 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x206 ?x207) 4) $x159 $x292 $x231)))
 (let ((?x48 (* 9 n)))
 (let ((?x475 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x236 (and $x120 (= ?x475 (- 4)) (= (+ (* (- 3) c) (* n k) ?x234 (* 2 n)) (- 1)) $x292 $x231)))
 (rewrite (= $x236 $x490)))))))))))))))))))))))))))
 ))
 (let (($x87 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ n 1)))
 (let ((?x71 (+ k m)))
 (let ((?x75 (+ c k)))
 (let ((?x76 (+ m 6)))
 (let ((?x81 (+ (* ?x75 ?x75 ?x71 ?x71 ?x76 ?x76 ?x76 ?x68 ?x68 ?x68) (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x71 ?x68) (* ?x75 ?x75 ?x71 ?x71 ?x71) (* ?x75 ?x75 ?x75 ?x71 ?x68 ?x68))))
 (let (($x83 (= (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) ?x81) 0)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not $x83)))))))))))))))) :qid k!34))
 ))
 (let ((?x218 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x65 (* 3 n)))
 (let ((?x350 (* (- 1) m)))
 (let ((?x234 (* (- 1) k)))
 (let ((?x139 (+ 4 (* 3 (* (+ 1 n) (+ 1 n))) ?x234 ?x350 ?x65)))
 (let ((?x75 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x302 (+ 1 n)))
 (let ((?x198 (* ?x302 ?x302 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x176 (* ?x302 ?x71 ?x71 ?x71 ?x75 ?x75 ?x75)))
 (let ((?x387 (+ 6 m)))
 (let ((?x155 (* ?x302 ?x302 ?x302 ?x387 ?x387 ?x387 ?x71 ?x71 ?x75 ?x75)))
 (let (($x231 (not (= (* (+ ?x155 ?x176 (* ?x71 ?x71 ?x71 ?x75 ?x75) ?x198) ?x139) 0))))
 (let (($x292 (= (+ (* 3 (* n n)) ?x234 ?x65) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x475 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x120 (= (+ m (* (- 6) n)) 6)))
 (let (($x236 (and $x120 (= ?x475 (- 4)) (= (+ (* (- 3) c) (* n k) ?x234 (* 2 n)) (- 1)) $x292 $x231)))
 (let ((?x68 (+ n 1)))
 (let ((?x76 (+ m 6)))
 (let ((?x81 (+ (* ?x75 ?x75 ?x71 ?x71 ?x76 ?x76 ?x76 ?x68 ?x68 ?x68) (* ?x75 ?x75 ?x75 ?x71 ?x71 ?x71 ?x68) (* ?x75 ?x75 ?x71 ?x71 ?x71) (* ?x75 ?x75 ?x75 ?x71 ?x68 ?x68))))
 (let (($x83 (= (* (+ (- (+ 1 (* 3 ?x68 ?x68)) ?x71) (* 3 ?x68)) ?x81) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x86 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 (= (+ (- (+ 1 (* 3 n n)) k) ?x65) 0) (or (not $x83)))))
 (rewrite (= $x86 $x236))))))))))))))))))))))))))))))
 ))
 (let ((@x88 (asserted $x87)))
 (let ((@x262 (mp (mp @x88 (quant-intro (proof-bind ?x218) (= $x87 $x233)) $x233) (rewrite (= $x233 $x233)) $x233)))
 (let ((@x181 (mp (mp @x262 (quant-intro (proof-bind ?x132) (= $x233 $x129)) $x129) (quant-intro (proof-bind ?x480) (= $x129 $x355)) $x355)))
 (let ((@x210 (mp (mp~ @x181 (sk (~ $x355 $x435)) $x435) (rewrite (= $x435 $x95)) $x95)))
 (let ((@x388 (and-elim @x210 $x308)))
 (let ((@x437 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x308) $x148)) @x388 $x148)))
 (let (($x249 (>= ?x479 6)))
 (let ((@x199 (and-elim @x210 $x354)))
 (let ((@x146 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x354) $x249)) @x199 $x249)))
 (let (($x196 (<= ?x130 1)))
 (let ((@x187 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x308) $x196)) @x388 $x196)))
 (let (($x239 (<= ?x479 6)))
 (let ((@x183 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x354) $x239)) @x199 $x239)))
 (let (($x299 (not (<= ?x110 0))))
 (let (($x205 (>= ?x110 0)))
 (let ((@x98 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x205)) @x183 @x187 @x146 @x437 false) $x205)))
 (let ((@x116 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x105 $x299 (not $x205))) (and-elim @x210 $x150) (or $x299 (not $x205)))))
 ((_ th-lemma arith farkas 1 1 1 1 1) (unit-resolution @x116 @x98 $x299) @x183 @x187 @x146 @x437 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        18
 :arith-assert-upper        23
 :arith-branch-var          2
 :arith-conflicts           4
 :arith-eq-adapter          7
 :arith-fixed-eqs           1
 :arith-gcd-tests           6
 :arith-grobner             2
 :arith-ineq-splits         2
 :arith-max-min             227
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    20
 :arith-num-rows            10
 :arith-patches             4
 :arith-patches_succ        1
 :arith-pivots              9
 :arith-pseudo-nonlinear    4
 :arith-row-summations      20
 :arith-tableau-max-columns 47
 :arith-tableau-max-rows    10
 :conflicts                 4
 :decisions                 8
 :del-clause                20
 :final-checks              7
 :max-memory                3.62
 :memory                    3.12
 :mk-bool-var               34
 :mk-clause                 24
 :num-allocs                1782589
 :num-checks                1
 :propagations              12
 :rlimit-count              17272
 :time                      0.02
 :total-time                0.02)
