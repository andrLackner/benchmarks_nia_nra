unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun y!2 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x3300 (* y!2 z!1)))
 (let ((?x2212 (* 12 ?x3300)))
 (let ((?x3349 (* (- 108) x!3)))
 (let ((?x2321 (* z00 y00 y!2)))
 (let ((?x2096 (* (- 72) y!2)))
 (let ((?x1511 (* y00 z!1)))
 (let ((?x1605 (* (- 12) ?x1511)))
 (let ((?x2907 (* (- 18) (* x00 z!1))))
 (let ((?x770 (* z00 y00 y00)))
 (let ((?x670 (* x!3 z!1)))
 (let ((?x2900 (* 18 ?x670)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1117 (* 36 ?x661)))
 (let ((?x594 (* z00 y00)))
 (let ((?x710 (* 6 ?x594)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1731 (+ ?x67 ?x74 (* 18 (* y00 x00)) (* (- 6) (* z00 y!2)) ?x710 ?x1117 ?x2900 ?x770 (* (- 36) (* y00 y!2)) (* (- 3) (* z00 z00 y00)) (* (- 18) (* x00 y!2)) (* (- 3) (* z00 z00 x00)) (* (- 1) (* y00 y!2 z!1)) ?x2907 (* (- 1) (* y!2 y!2 z!1)) (* (- 18) (* y00 x!3)) ?x1605 (* 2 (* y00 y00 z!1)) ?x2096 (* 3 (* z00 z00 y!2)) (* 18 (* y!2 x!3)) (* 3 (* z00 x!3 z!1)) (* (- 3) (* z00 x00 z!1)) ?x2321 (* (- 2) (* z00 y!2 y!2)) ?x3349 (* 3 (* z00 z00 x!3)) ?x2212)))
 (let (($x2051 (<= ?x1731 0)))
 (let (($x2059 (= ?x1731 0)))
 (let ((?x1231 (+ y!2 x!3)))
 (let ((?x946 (+ 6 z!1)))
 (let ((?x560 (+ 1 n!0)))
 (let ((?x3358 (* (- 1) (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let ((?x956 (+ y!2 z!1)))
 (let ((?x755 (* 6 (* z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x3380 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x3373 (* y00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x3302 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x967 (* (- 1) (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x3295 (* x00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x3159 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x3156 (* y00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x3066 (* x00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x988 (* 6 (* z00 z00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x2908 (* y00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x2884 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2873 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x2867 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2039 (* (- 6) (* z00 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x2775 (* z00 z00 z00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x2640 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2561 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2560 (* y00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x2464 (* x00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2372 (* z00 z00 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x2345 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x1709 (* 6 (* z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let ((?x2286 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2860 (* (- 18) (* y00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let ((?x2189 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x3158 (* 18 (* y00 z00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x2021 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2438 (* (- 6) (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x1937 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1926 (* y00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x2521 (* (- 6) (* ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x962 (* (- 72) (* y00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x1398 (* 6 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x1846 (* y00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x2058 (* 12 (* y00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x1658 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x2408 (* (- 6) (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let ((?x1586 (* z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1553 (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x1545 (* z00 z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x1498 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1487 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x1999 (* (- 12) (* y00 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x1342 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1022 (* 72 (* ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x1315 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1294 (* z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x1282 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x1201 (* z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x1193 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x1157 (* 12 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let ((?x1056 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1027 (* x00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x576 (* (- 108) (* x00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x1620 (* 108 (* ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let ((?x945 (* x00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x973 (* (- 18) (* y00 z00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231))))
 (let ((?x895 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x887 (* z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x872 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x870 (* y00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x831 (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x812 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x785 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x766 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x754 (* z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1725 (* 6 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let ((?x684 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x617 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)))
 (let ((?x611 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x565 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231)))
 (let ((?x471 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x462 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x429 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x428 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x426 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)))
 (let ((?x1594 (+ (* 6 ?x426) (* (- 6) ?x428) (* 6 ?x429) (* (- 108) ?x462) ?x471 (* 72 ?x565) (* 12 ?x611) (* 72 ?x617) (* (- 72) (* ?x946 ?x946 ?x946 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)) (* (- 1) ?x684) ?x1725 (* 6 ?x754) (* (- 108) ?x766) (* 6 (* ?x946 ?x946 ?x946 ?x946 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)) (* (- 6) ?x785) (* (- 108) ?x812) (* 6 ?x831) (* (- 18) ?x870) (* (- 72) ?x872) (* 6 ?x887) (* (- 6) ?x895) ?x973 (* 108 (* x00 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) (* 108 ?x945) ?x1620 (* (- 108) (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)) ?x576 (* (- 108) ?x1027) ?x1056 ?x1157 ?x1193 (* (- 6) ?x1201) (* 6 (* z00 ?x946 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) (* (- 72) ?x1282) (* (- 6) ?x1294) (* (- 18) (* y00 z00 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) (* (- 6) ?x1315) ?x1022 (* 12 (* y00 ?x946 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) ?x1342 (* (- 72) (* ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x956 ?x1231 ?x1231 ?x1231)) (* (- 108) (* ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)) ?x1999 (* 72 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) (* (- 12) ?x1487) (* (- 1) ?x1498) (* (- 1) ?x1545) ?x1553 (* 6 ?x1586) ?x2408 (* 108 ?x1658) ?x2058 (* 18 ?x1846) ?x1398 ?x962 ?x2521 (* (- 72) ?x1926) (* 72 ?x1937) (* z00 z00 z00 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231) ?x2438 (* (- 72) ?x2021) ?x3158 (* 72 (* y00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231)) (* 108 ?x2189) (* (- 6) (* z00 z00 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) (* (- 108) (* ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231 ?x1231)) ?x2860 (* (- 72) (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x956 ?x1231 ?x1231 ?x1231 ?x1231)) (* 6 ?x2286) (* 108 (* x00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231)) ?x1709 (* 6 ?x2345) ?x2372 (* (- 1) (* z00 z00 ?x946 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) (* 108 ?x2464) (* z00 z00 z00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x1231 ?x1231 ?x1231) (* (- 12) ?x2560) (* 72 ?x2561) (* (- 72) ?x2640) (* (- 1) ?x2775) ?x2039 (* (- 6) ?x2867) (* (- 1) ?x2873) (* 12 ?x2884) (* 72 (* y00 ?x946 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) (* 18 ?x2908) ?x988 (* (- 108) ?x3066) (* (- 18) ?x3156) (* (- 1) ?x3159) (* 108 ?x3295) ?x967 (* 12 ?x3302) (* (- 18) ?x3373) (* 72 ?x3380) ?x755 (* 108 (* x00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231)) ?x3358 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x1231 ?x1231 ?x1231 ?x1231))))
 (let (($x864 (= ?x1594 0)))
 (let (($x1832 (not $x864)))
 (let ((?x1738 (* 108 (* x!3 x!3))))
 (let ((?x621 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x2025 (* y!2 y!2)))
 (let ((?x3218 (* 24 ?x2025)))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x1276 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1272 (* z00 z00 z00 y00)))
 (let ((?x1182 (* (- 36) (* z00 y00 x00))))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x981 (* z00 z00 x00)))
 (let ((?x1232 (* (- 18) ?x981)))
 (let ((?x853 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x795 (* z00 z00 y00)))
 (let ((?x1333 (* (- 10) ?x795)))
 (let ((?x805 (* (- 12) ?x770)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x631 (* z00 x00)))
 (let ((?x549 (* 36 ?x631)))
 (let ((?x959 (* 24 ?x594)))
 (let ((?x541 (* y00 x00)))
 (let ((?x532 (* 216 ?x541)))
 (let ((?x2296 (+ ?x532 (* z00 z00 y!2 y!2) (* (- 24) (* z00 y!2)) ?x959 ?x549 ?x1132 (* (- 1) (* z00 z00 z00 y!2)) ?x805 (* (- 120) (* y00 y!2)) ?x1333 (* (- 108) (* x00 y!2)) ?x853 ?x1232 (* (- 36) (* z00 x!3)) ?x1067 ?x1182 ?x1272 ?x1276 ?x1379 (* (- 216) (* y00 x!3)) (* (- 2) (* z00 z00 z00 x!3)) ?x3218 (* 36 (* z00 y00 x!3)) (* 10 (* z00 z00 y!2)) (* 108 (* y!2 x!3)) (* 18 ?x2321) ?x621 (* (- 216) (* x00 x!3)) (* (- 12) (* y00 y!2 y!2)) (* (- 6) (* z00 y!2 y!2)) (* 18 (* z00 z00 x!3)) ?x1738)))
 (let (($x1598 (= ?x2296 0)))
 (let ((?x2135 (* z00 z00 y!2)))
 (let ((?x553 (* 24 ?x661)))
 (let ((?x869 (* (- 6) ?x594)))
 (let ((?x2243 (+ ?x67 ?x74 (* 6 (* z00 y!2)) ?x869 (* (- 18) ?x631) ?x553 ?x2900 (* (- 12) (* y00 y!2)) (* (- 1) ?x795) (* 18 (* z00 x!3)) (* z00 y00 z!1) ?x2907 (* (- 1) (* z00 y!2 z!1)) ?x1605 ?x2096 (* (- 12) ?x2025) ?x2135 ?x3349 ?x2212)))
 (let (($x2214 (= ?x2243 0)))
 (let ((?x453 (* z00 z00)))
 (let ((?x800 (* (- 6) ?x453)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x717 (+ ?x67 ?x55 ?x74 ?x800 (* (- 18) ?x594) (* 6 (* z00 z!1)) (* 12 ?x1511) ?x2096 (* (- 1) (* z00 z00 z!1)) ?x3349 (* 6 ?x3300))))
 (let (($x724 (= ?x717 0)))
 (let ((?x2959 (* z!1 z!1)))
 (let ((?x2933 (* (- 1) ?x453)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x1778 (+ ?x49 ?x43 ?x2933 (* (- 12) y!2) ?x2959 (* (- 6) z!1))))
 (let (($x2150 (= ?x1778 0)))
 (let ((?x1719 (* (- 6) n00)))
 (let ((?x1269 (+ z00 ?x1719 (* 6 n!0) (* (- 1) z!1))))
 (let (($x646 (= ?x1269 0)))
 (let (($x1578 (and $x646 $x2150 $x724 $x2214 $x2059 $x1598 $x1832)))
 (let ((?x686 (+ x!3 y!2)))
 (let ((?x1969 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2692 (* z00 z00 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x2040 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1714 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2944 (* (- 18) (* y00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686))))
 (let ((?x3241 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2733 (* z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3171 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x989 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3239 (* x00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x3179 (* 12 (* y00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x2450 (* (- 6) (* ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x2273 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x856 (* x00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x862 (* 72 (* ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x778 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1602 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2966 (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x3194 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2352 (* z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x3236 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x2027 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x1837 (* y00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x2738 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x2517 (* y00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x1633 (* 108 (* ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686))))
 (let ((?x747 (* z00 z00 z00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x2995 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x3331 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x786 (* x00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x2613 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x1810 (* (- 6) (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686))))
 (let ((?x3105 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3320 (* x00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1266 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x1686 (* (- 6) (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x2610 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x665 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1472 (* (- 6) (* z00 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x1234 (* (- 18) (* y00 z00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x970 (* (- 108) (* x00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x983 (* 6 (* z00 z00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x1265 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1491 (* 12 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686))))
 (let ((?x2927 (* 6 (* z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x2721 (* 6 (* z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686))))
 (let ((?x2011 (* (- 1) (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x2005 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1164 (* z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x639 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1942 (* x00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1839 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1064 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3080 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2151 (* ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2264 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2729 (* y00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x759 (* z00 z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x1483 (* y00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x890 (* (- 72) (* y00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x2434 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x1639 (* (- 12) (* y00 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x758 (* y00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x1436 (* z00 z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x1560 (* z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x3047 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)))
 (let ((?x1808 (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2735 (* y00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2941 (* z00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x2631 (* 18 (* y00 z00 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x915 (* 6 (* ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686))))
 (let ((?x585 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3191 (* z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3160 (* z00 z00 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686)))
 (let ((?x3104 (* y00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3026 (* y00 z00 ?x560 ?x560 ?x560 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686 ?x686)))
 (let ((?x3187 (* (- 1) (* z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686))))
 (let ((?x3403 (* 6 (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x946 ?x956 ?x686 ?x686 ?x686 ?x686))))
 (let ((?x866 (+ ?x3403 (* 6 (* z00 ?x946 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* z00 z00 z00 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686) (* (- 6) (* z00 z00 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* (- 72) (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x956 ?x686 ?x686 ?x686 ?x686)) ?x3187 (* (- 18) ?x3026) (* (- 18) ?x3104) (* 6 ?x3160) (* 6 ?x3191) (* (- 108) (* ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686 ?x686)) (* 108 ?x585) ?x915 ?x2631 (* (- 1) ?x2941) (* 72 ?x2735) (* (- 1) ?x1808) (* (- 12) ?x3047) (* z00 z00 z00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686) (* (- 18) (* y00 z00 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* (- 6) ?x1560) (* (- 1) ?x1436) (* 18 ?x758) ?x1639 (* (- 72) ?x2434) (* 108 (* x00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686)) ?x890 (* (- 108) (* ?x560 ?x560 ?x560 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686 ?x686)) (* 18 ?x1483) (* 108 (* x00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) ?x759 (* (- 18) ?x2729) (* (- 6) ?x2264) (* 6 ?x2151) (* (- 108) ?x3080) (* (- 1) ?x1064) (* (- 6) ?x1839) (* 108 ?x1942) (* (- 72) ?x639) (* 6 ?x1164) (* 6 ?x2005) ?x2011 ?x2721 ?x2927 ?x1491 (* 12 ?x1265) ?x983 ?x970 ?x1234 ?x1472 (* 72 (* y00 ?x560 ?x560 ?x560 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* (- 72) (* ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x956 ?x686 ?x686 ?x686)) (* (- 108) ?x665) ?x2610 ?x1686 ?x1266 (* 108 ?x3320) (* 12 ?x3105) ?x1810 (* (- 108) (* ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686 ?x686)) (* (- 1) ?x2613) (* z00 z00 z00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686) (* (- 108) ?x786) (* (- 6) ?x3331) (* 108 ?x2995) (* (- 1) ?x747) ?x1633 (* (- 72) ?x2517) (* 108 (* x00 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* 72 ?x2738) (* 72 (* y00 ?x560 ?x560 ?x946 ?x946 ?x956 ?x956 ?x686 ?x686 ?x686)) (* (- 12) ?x1837) (* 72 ?x2027) (* (- 6) ?x3236) (* (- 6) ?x2352) (* 72 ?x3194) ?x2966 (* (- 72) ?x1602) ?x778 ?x862 (* 108 ?x856) (* 6 ?x2273) ?x2450 ?x3179 (* (- 108) ?x3239) (* (- 72) (* ?x946 ?x946 ?x946 ?x956 ?x686 ?x686 ?x686 ?x686)) (* 6 (* ?x946 ?x946 ?x946 ?x946 ?x956 ?x686 ?x686 ?x686 ?x686)) (* 6 ?x989) (* (- 6) ?x3171) (* 6 ?x2733) (* (- 72) ?x3241) ?x2944 (* (- 1) (* z00 z00 ?x946 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* 72 (* y00 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* 12 (* y00 ?x946 ?x946 ?x946 ?x946 ?x686 ?x686 ?x686 ?x686)) (* (- 108) ?x1714) (* 12 ?x2040) ?x2692 (* 72 ?x1969))))
 (let ((?x725 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x532 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x959 ?x549 ?x3218 ?x1132 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x805 ?x1333 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x853 ?x1738 ?x621 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1232 (* (- 216) (* x!3 y00)) ?x1067 (* (- 12) (* y!2 y!2 y00)) ?x1182 (* (- 216) (* x!3 x00)) ?x1272 ?x1276 (* 36 (* x!3 z00 y00)) ?x1379)))
 (let ((?x982 (* 3 ?x981)))
 (let ((?x1044 (* 3 ?x795)))
 (let ((?x777 (* (- 1) ?x770)))
 (let ((?x1395 (* 18 (* z!1 x00))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x2761 (* z!1 y00)))
 (let ((?x3029 (* 12 ?x2761)))
 (let ((?x2617 (* (- 18) ?x670)))
 (let ((?x542 (* (- 18) ?x541)))
 (let ((?x2828 (* (- 12) ?x3300)))
 (let ((?x1131 (* y!2 y!2 z!1)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x1277 (* 72 y!2)))
 (let ((?x2384 (* 108 x!3)))
 (let ((?x971 (+ ?x2384 ?x1277 ?x616 ?x673 (* (- 3) (* y!2 z00 z00)) ?x1131 ?x2828 ?x542 (* (- 18) (* x!3 y!2)) ?x2617 ?x3029 ?x869 ?x964 ?x1395 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x777 ?x1044 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x982 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x632 (* 18 ?x631)))
 (let ((?x3402 (+ ?x2384 ?x1277 ?x616 ?x673 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x2828 ?x2617 ?x3029 ?x710 ?x632 (* 12 ?x2025) ?x690 ?x1395 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x795 (* (- 18) (* x!3 z00)))))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x624 (+ ?x2384 ?x1277 ?x616 ?x546 ?x673 (* z!1 z00 z00) ?x557 (* (- 6) ?x3300) (* (- 12) ?x2761) ?x595 (* (- 6) (* z!1 z00)))))
 (let ((?x524 (* (- 12) y00)))
 (let ((?x523 (* (- 6) z00)))
 (let (($x2679 (= (+ (* 12 y!2) (* 6 z!1) ?x523 ?x524 (* (- 1) ?x2959) ?x453) 0)))
 (let (($x1462 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x2679 (= ?x624 0) (= ?x3402 0) (= ?x971 0) (= ?x725 0) (not (= ?x866 0)))))
 (let (($x1026 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2951 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2925 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2482 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2417 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2209 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2122 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2071 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1762 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1525 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1318 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1241 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1063 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1014 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x929 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x918 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x837 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x828 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x801 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x575 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x459 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x450 (+ (* 6 ?x413) (* 6 (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x459 (* (- 6) (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x575) (* (- 18) ?x801) (* (- 18) ?x803) (* 6 ?x828) (* 6 ?x837) (* (- 108) (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x881) (* 6 ?x918) (* 18 ?x929) (* (- 1) ?x961) (* 72 ?x1014) (* (- 1) ?x1063) (* (- 12) ?x1168) ?x1175 (* (- 18) (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1241) (* (- 1) ?x1318) (* 18 ?x1373) (* (- 12) ?x1410) (* (- 72) ?x1425) (* 108 (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 72) ?x1510) (* (- 108) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x1525) (* 108 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1644 (* (- 18) ?x1646) (* (- 6) ?x1680) (* 6 ?x1708) (* (- 108) ?x1736) (* (- 1) ?x1762) (* (- 6) ?x1874) (* 108 ?x1889) (* (- 72) ?x1910) (* 6 ?x1929) (* 6 ?x1946) (* (- 1) ?x1962) (* 6 ?x1984) (* 6 ?x1990) (* 12 ?x2069) (* 12 ?x2071) (* 6 ?x2099) (* (- 108) ?x2122) (* (- 18) ?x2127) (* (- 6) ?x2141) (* 72 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x2209) ?x2220 (* (- 6) ?x2295) ?x2322 (* 108 ?x2386) (* 12 ?x2388) (* (- 6) ?x2417) (* (- 108) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x2437) ?x2481 (* (- 108) ?x2482) (* (- 6) ?x2512) (* 108 ?x2531) (* (- 1) ?x2599) (* 108 ?x2637) (* (- 72) ?x2663) (* 108 (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 ?x2753) (* 72 (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2820) (* 72 ?x2836) (* (- 6) ?x2866) (* (- 6) ?x2925) (* 72 ?x2931) ?x2951 (* (- 72) ?x2964) ?x2980 (* 72 ?x3002) (* 108 ?x3034) (* 6 ?x3040) (* (- 6) ?x3076) (* 12 ?x3089) (* (- 108) ?x3114) (* (- 72) (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x3170) (* (- 6) ?x3200) (* 6 ?x3217) (* (- 72) ?x3247) (* (- 18) ?x3255) (* (- 1) (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x3340) (* 12 ?x3357) ?x3387 (* 72 ?x3409))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x1276 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1272 (* z00 z00 z00 y00)))
 (let ((?x1182 (* (- 36) (* z00 y00 x00))))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x981 (* z00 z00 x00)))
 (let ((?x1232 (* (- 18) ?x981)))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x853 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x795 (* z00 z00 y00)))
 (let ((?x1333 (* (- 10) ?x795)))
 (let ((?x770 (* z00 y00 y00)))
 (let ((?x805 (* (- 12) ?x770)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x631 (* z00 x00)))
 (let ((?x549 (* 36 ?x631)))
 (let ((?x594 (* z00 y00)))
 (let ((?x959 (* 24 ?x594)))
 (let ((?x541 (* y00 x00)))
 (let ((?x532 (* 216 ?x541)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1399 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x532 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x959 ?x549 ?x880 ?x1132 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x805 ?x1333 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x853 ?x885 ?x937 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1232 (* (- 216) (* x y00)) ?x1067 (* (- 12) (* y y y00)) ?x1182 (* (- 216) (* x x00)) ?x1272 ?x1276 (* 36 (* x z00 y00)) ?x1379)))
 (let (($x1404 (= ?x1399 0)))
 (let ((?x982 (* 3 ?x981)))
 (let ((?x1044 (* 3 ?x795)))
 (let ((?x777 (* (- 1) ?x770)))
 (let ((?x707 (* 18 (* z x00))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x869 (* (- 6) ?x594)))
 (let ((?x568 (* z y00)))
 (let ((?x569 (* 12 ?x568)))
 (let ((?x602 (* (- 18) (* x z))))
 (let ((?x542 (* (- 18) ?x541)))
 (let ((?x537 (* y z)))
 (let ((?x561 (* (- 12) ?x537)))
 (let ((?x135 (* y y z)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1100 (+ ?x64 ?x71 ?x616 ?x673 (* (- 3) (* y z00 z00)) ?x135 ?x561 ?x542 (* (- 18) (* x y)) ?x602 ?x569 ?x869 ?x964 ?x707 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x777 ?x1044 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x982 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1107 (= ?x1100 0)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x632 (* 18 ?x631)))
 (let ((?x710 (* 6 ?x594)))
 (let ((?x103 (* y z z00)))
 (let ((?x849 (+ ?x64 ?x71 ?x616 ?x673 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x561 ?x602 ?x569 ?x710 ?x632 ?x638 ?x690 ?x707 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x795 (* (- 18) (* x z00)))))
 (let (($x854 (= ?x849 0)))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x689 (+ ?x64 ?x71 ?x616 ?x546 ?x673 ?x76 ?x557 (* (- 6) ?x537) (* (- 12) ?x568) ?x595 (* (- 6) (* z z00)))))
 (let (($x694 (= ?x689 0)))
 (let ((?x50 (* z z)))
 (let ((?x525 (* (- 1) ?x50)))
 (let ((?x524 (* (- 12) y00)))
 (let ((?x523 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x527 (= (+ ?x45 ?x46 ?x523 ?x524 ?x525 ?x453) 0)))
 (let (($x445 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x445 $x527 $x694 $x854 $x1107 $x1404 (not (= ?x450 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x3012 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x929 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2925 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1762 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1525 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1241 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1318 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2417 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2482 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2209 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x828 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1063 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1014 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2071 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x801 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2122 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x837 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2951 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x918 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x575 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x575 (* (- 6) ?x918) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2951) (* (- 6) ?x837) (* 108 ?x2122) (* 18 ?x801) (* (- 12) ?x2071) (* (- 72) ?x1014) ?x1063 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x828) (* 108 ?x2209) (* 108 ?x2482) (* 6 ?x2417) ?x1318 (* (- 1) ?x1175) (* 6 ?x1241) (* (- 18) ?x1525) ?x1762 (* 6 ?x2925) (* (- 18) ?x929) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let (($x1872 (not (= ?x3430 0))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x2664 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2665 (= ?x2664 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1053 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1042 (* (- 108) x)))
 (let ((?x2050 (* x00 z)))
 (let ((?x552 (* (- 18) ?x2050)))
 (let ((?x1117 (* 36 ?x661)))
 (let ((?x2946 (* z y)))
 (let ((?x584 (* 12 ?x2946)))
 (let ((?x2029 (* z00 y)))
 (let ((?x2362 (* (- 6) ?x2029)))
 (let ((?x1495 (* y00 z00)))
 (let ((?x1956 (* 6 ?x1495)))
 (let ((?x2429 (* y00 z)))
 (let ((?x2256 (* (- 12) ?x2429)))
 (let ((?x784 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x2912 (* z x)))
 (let ((?x2968 (* 18 ?x2912)))
 (let ((?x3025 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x2968 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x784 ?x2256 ?x1956 (* (- 36) (* y00 y)) ?x2362 ?x584 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x1117 ?x552 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1042 ?x67 (* (- 18) (* y00 x)) ?x1053 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x649 (* z00 z00 y)))
 (let ((?x1080 (* 6 ?x2029)))
 (let ((?x590 (* (- 6) ?x1495)))
 (let ((?x553 (* 24 ?x661)))
 (let ((?x2942 (* y00 z00 z)))
 (let ((?x772 (+ ?x2942 ?x584 ?x2968 (* (- 18) (* x00 z00)) (* (- 12) ?x635) ?x553 ?x552 ?x2256 ?x590 (* (- 12) (* y00 y)) ?x1042 ?x67 ?x1080 ?x1053 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x649)))
 (let ((?x2424 (* 12 ?x2429)))
 (let ((?x453 (* z00 z00)))
 (let ((?x800 (* (- 6) ?x453)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1057 (+ (* 6 ?x2946) ?x55 ?x800 ?x2424 (* (- 18) ?x1495) ?x1042 ?x67 (* 6 (* z00 z)) ?x1053 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x525 (* (- 1) ?x50)))
 (let ((?x523 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x524 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x453 ?x524 ?x45 ?x46 ?x523 ?x525) 0) (= ?x1057 0) (= ?x772 0) (= ?x3025 0) $x2665 $x1872)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2979 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2951 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2925 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2482 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2417 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2209 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2122 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2071 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1762 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1525 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1318 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1241 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1063 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1014 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x929 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x918 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x837 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x828 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x801 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x575 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x459 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x450 (+ (* 6 ?x413) (* 6 (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x459 (* (- 6) (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x575) (* (- 18) ?x801) (* (- 18) ?x803) (* 6 ?x828) (* 6 ?x837) (* (- 108) (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x881) (* 6 ?x918) (* 18 ?x929) (* (- 1) ?x961) (* 72 ?x1014) (* (- 1) ?x1063) (* (- 12) ?x1168) ?x1175 (* (- 18) (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1241) (* (- 1) ?x1318) (* 18 ?x1373) (* (- 12) ?x1410) (* (- 72) ?x1425) (* 108 (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 72) ?x1510) (* (- 108) (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x1525) (* 108 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1644 (* (- 18) ?x1646) (* (- 6) ?x1680) (* 6 ?x1708) (* (- 108) ?x1736) (* (- 1) ?x1762) (* (- 6) ?x1874) (* 108 ?x1889) (* (- 72) ?x1910) (* 6 ?x1929) (* 6 ?x1946) (* (- 1) ?x1962) (* 6 ?x1984) (* 6 ?x1990) (* 12 ?x2069) (* 12 ?x2071) (* 6 ?x2099) (* (- 108) ?x2122) (* (- 18) ?x2127) (* (- 6) ?x2141) (* 72 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 72) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x2209) ?x2220 (* (- 6) ?x2295) ?x2322 (* 108 ?x2386) (* 12 ?x2388) (* (- 6) ?x2417) (* (- 108) (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 1) ?x2437) ?x2481 (* (- 108) ?x2482) (* (- 6) ?x2512) (* 108 ?x2531) (* (- 1) ?x2599) (* 108 ?x2637) (* (- 72) ?x2663) (* 108 (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 ?x2753) (* 72 (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2820) (* 72 ?x2836) (* (- 6) ?x2866) (* (- 6) ?x2925) (* 72 ?x2931) ?x2951 (* (- 72) ?x2964) ?x2980 (* 72 ?x3002) (* 108 ?x3034) (* 6 ?x3040) (* (- 6) ?x3076) (* 12 ?x3089) (* (- 108) ?x3114) (* (- 72) (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 6 ?x3170) (* (- 6) ?x3200) (* 6 ?x3217) (* (- 72) ?x3247) (* (- 18) ?x3255) (* (- 1) (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x3340) (* 12 ?x3357) ?x3387 (* 72 ?x3409))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x1276 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1272 (* z00 z00 z00 y00)))
 (let ((?x1182 (* (- 36) (* z00 y00 x00))))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x981 (* z00 z00 x00)))
 (let ((?x1232 (* (- 18) ?x981)))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x853 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x795 (* z00 z00 y00)))
 (let ((?x1333 (* (- 10) ?x795)))
 (let ((?x770 (* z00 y00 y00)))
 (let ((?x805 (* (- 12) ?x770)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x631 (* z00 x00)))
 (let ((?x549 (* 36 ?x631)))
 (let ((?x594 (* z00 y00)))
 (let ((?x959 (* 24 ?x594)))
 (let ((?x541 (* y00 x00)))
 (let ((?x532 (* 216 ?x541)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1399 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x532 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x959 ?x549 ?x880 ?x1132 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x805 ?x1333 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x853 ?x885 ?x937 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1232 (* (- 216) (* x y00)) ?x1067 (* (- 12) (* y y y00)) ?x1182 (* (- 216) (* x x00)) ?x1272 ?x1276 (* 36 (* x z00 y00)) ?x1379)))
 (let (($x1404 (= ?x1399 0)))
 (let ((?x982 (* 3 ?x981)))
 (let ((?x1044 (* 3 ?x795)))
 (let ((?x777 (* (- 1) ?x770)))
 (let ((?x707 (* 18 (* z x00))))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x869 (* (- 6) ?x594)))
 (let ((?x568 (* z y00)))
 (let ((?x569 (* 12 ?x568)))
 (let ((?x602 (* (- 18) (* x z))))
 (let ((?x542 (* (- 18) ?x541)))
 (let ((?x537 (* y z)))
 (let ((?x561 (* (- 12) ?x537)))
 (let ((?x135 (* y y z)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1100 (+ ?x64 ?x71 ?x616 ?x673 (* (- 3) (* y z00 z00)) ?x135 ?x561 ?x542 (* (- 18) (* x y)) ?x602 ?x569 ?x869 ?x964 ?x707 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x777 ?x1044 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x982 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x1107 (= ?x1100 0)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x632 (* 18 ?x631)))
 (let ((?x710 (* 6 ?x594)))
 (let ((?x103 (* y z z00)))
 (let ((?x849 (+ ?x64 ?x71 ?x616 ?x673 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x561 ?x602 ?x569 ?x710 ?x632 ?x638 ?x690 ?x707 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x795 (* (- 18) (* x z00)))))
 (let (($x854 (= ?x849 0)))
 (let ((?x595 (* 18 ?x594)))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x689 (+ ?x64 ?x71 ?x616 ?x546 ?x673 ?x76 ?x557 (* (- 6) ?x537) (* (- 12) ?x568) ?x595 (* (- 6) (* z z00)))))
 (let (($x694 (= ?x689 0)))
 (let ((?x50 (* z z)))
 (let ((?x525 (* (- 1) ?x50)))
 (let ((?x524 (* (- 12) y00)))
 (let ((?x523 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x527 (= (+ ?x45 ?x46 ?x523 ?x524 ?x525 ?x453) 0)))
 (let (($x445 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x3103 (and $x445 $x527 $x694 $x854 $x1107 $x1404 (not (= ?x450 0)))))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x575 (* (- 6) ?x918) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2951) (* (- 6) ?x837) (* 108 ?x2122) (* 18 ?x801) (* (- 12) ?x2071) (* (- 72) ?x1014) ?x1063 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x828) (* 108 ?x2209) (* 108 ?x2482) (* 6 ?x2417) ?x1318 (* (- 1) ?x1175) (* 6 ?x1241) (* (- 18) ?x1525) ?x1762 (* 6 ?x2925) (* (- 18) ?x929) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) ?x459) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let (($x1872 (not (= ?x3430 0))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x2664 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2665 (= ?x2664 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1053 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1042 (* (- 108) x)))
 (let ((?x2050 (* x00 z)))
 (let ((?x552 (* (- 18) ?x2050)))
 (let ((?x1117 (* 36 ?x661)))
 (let ((?x2946 (* z y)))
 (let ((?x584 (* 12 ?x2946)))
 (let ((?x2029 (* z00 y)))
 (let ((?x2362 (* (- 6) ?x2029)))
 (let ((?x1495 (* y00 z00)))
 (let ((?x1956 (* 6 ?x1495)))
 (let ((?x2429 (* y00 z)))
 (let ((?x2256 (* (- 12) ?x2429)))
 (let ((?x784 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x2912 (* z x)))
 (let ((?x2968 (* 18 ?x2912)))
 (let ((?x3025 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x2968 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x784 ?x2256 ?x1956 (* (- 36) (* y00 y)) ?x2362 ?x584 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x1117 ?x552 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1042 ?x67 (* (- 18) (* y00 x)) ?x1053 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x649 (* z00 z00 y)))
 (let ((?x1080 (* 6 ?x2029)))
 (let ((?x590 (* (- 6) ?x1495)))
 (let ((?x553 (* 24 ?x661)))
 (let ((?x2942 (* y00 z00 z)))
 (let ((?x772 (+ ?x2942 ?x584 ?x2968 (* (- 18) (* x00 z00)) (* (- 12) ?x635) ?x553 ?x552 ?x2256 ?x590 (* (- 12) (* y00 y)) ?x1042 ?x67 ?x1080 ?x1053 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x649)))
 (let ((?x2424 (* 12 ?x2429)))
 (let ((?x800 (* (- 6) ?x453)))
 (let ((?x1057 (+ (* 6 ?x2946) ?x55 ?x800 ?x2424 (* (- 18) ?x1495) ?x1042 ?x67 (* 6 (* z00 z)) ?x1053 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x3027 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x453 ?x524 ?x45 ?x46 ?x523 ?x525) 0) (= ?x1057 0) (= ?x772 0) (= ?x3025 0) $x2665 $x1872)))
 (rewrite (= $x3027 $x3103)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2940 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x929 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2925 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1762 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1525 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1241 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1318 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2417 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2482 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2209 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x828 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1063 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1014 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2071 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x801 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2122 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x837 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2951 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x918 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x575 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x575 (* (- 6) ?x918) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2951) (* (- 6) ?x837) (* 108 ?x2122) (* 18 ?x801) (* (- 12) ?x2071) (* (- 72) ?x1014) ?x1063 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x828) (* 108 ?x2209) (* 108 ?x2482) (* 6 ?x2417) ?x1318 (* (- 1) ?x1175) (* 6 ?x1241) (* (- 18) ?x1525) ?x1762 (* 6 ?x2925) (* (- 18) ?x929) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let (($x1872 (not (= ?x3430 0))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x2664 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2665 (= ?x2664 0)))
 (let ((?x1527 (* y00 z y)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x432 (* z y y)))
 (let ((?x2050 (* x00 z)))
 (let ((?x1861 (* 18 ?x2050)))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x2946 (* z y)))
 (let ((?x2676 (* (- 12) ?x2946)))
 (let ((?x2029 (* z00 y)))
 (let ((?x1080 (* 6 ?x2029)))
 (let ((?x1495 (* y00 z00)))
 (let ((?x590 (* (- 6) ?x1495)))
 (let ((?x2429 (* y00 z)))
 (let ((?x2424 (* 12 ?x2429)))
 (let ((?x2912 (* z x)))
 (let ((?x1421 (* (- 18) ?x2912)))
 (let ((?x685 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1421 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2424 ?x590 (* 36 (* y00 y)) ?x1080 ?x2676 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x964 ?x1861 ?x432 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x616 (* 18 (* y00 x)) ?x71 ?x673 ?x1527 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x2289 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2362 (* (- 6) ?x2029)))
 (let ((?x1956 (* 6 ?x1495)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x903 (+ (* (- 1) (* y00 z00 z)) ?x2676 ?x1421 (* 18 (* x00 z00)) ?x638 ?x690 ?x1861 ?x2424 ?x1956 (* 12 (* y00 y)) ?x64 ?x616 ?x2362 ?x71 ?x673 ?x99 (* (- 18) (* z00 x)) ?x2289 (* (- 1) (* z00 z00 y)))))
 (let ((?x1160 (* z00 z00 z)))
 (let ((?x2256 (* (- 12) ?x2429)))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x1166 (+ (* (- 6) ?x2946) ?x546 ?x557 ?x2256 (* 18 ?x1495) ?x64 ?x616 (* (- 6) (* z00 z)) ?x71 ?x673 ?x1160)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2933 (* (- 1) ?x453)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2933 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1166 0) (= ?x903 0) (= ?x685 0) $x2665 $x1872))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x3020 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x929 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2925 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1762 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1525 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1241 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1318 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2417 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2482 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2209 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x828 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1063 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1014 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2071 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x801 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2122 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x837 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2951 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x918 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x575 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x575 (* (- 6) ?x918) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2951) (* (- 6) ?x837) (* 108 ?x2122) (* 18 ?x801) (* (- 12) ?x2071) (* (- 72) ?x1014) ?x1063 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x828) (* 108 ?x2209) (* 108 ?x2482) (* 6 ?x2417) ?x1318 (* (- 1) ?x1175) (* 6 ?x1241) (* (- 18) ?x1525) ?x1762 (* 6 ?x2925) (* (- 18) ?x929) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let (($x1872 (not (= ?x3430 0))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x2664 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2665 (= ?x2664 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x1053 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1042 (* (- 108) x)))
 (let ((?x2050 (* x00 z)))
 (let ((?x552 (* (- 18) ?x2050)))
 (let ((?x1117 (* 36 ?x661)))
 (let ((?x2946 (* z y)))
 (let ((?x584 (* 12 ?x2946)))
 (let ((?x2029 (* z00 y)))
 (let ((?x2362 (* (- 6) ?x2029)))
 (let ((?x1495 (* y00 z00)))
 (let ((?x1956 (* 6 ?x1495)))
 (let ((?x2429 (* y00 z)))
 (let ((?x2256 (* (- 12) ?x2429)))
 (let ((?x784 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x2912 (* z x)))
 (let ((?x2968 (* 18 ?x2912)))
 (let ((?x3025 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x2968 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x784 ?x2256 ?x1956 (* (- 36) (* y00 y)) ?x2362 ?x584 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x1117 ?x552 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x1042 ?x67 (* (- 18) (* y00 x)) ?x1053 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x649 (* z00 z00 y)))
 (let ((?x1080 (* 6 ?x2029)))
 (let ((?x590 (* (- 6) ?x1495)))
 (let ((?x553 (* 24 ?x661)))
 (let ((?x2942 (* y00 z00 z)))
 (let ((?x772 (+ ?x2942 ?x584 ?x2968 (* (- 18) (* x00 z00)) (* (- 12) ?x635) ?x553 ?x552 ?x2256 ?x590 (* (- 12) (* y00 y)) ?x1042 ?x67 ?x1080 ?x1053 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x649)))
 (let ((?x2424 (* 12 ?x2429)))
 (let ((?x453 (* z00 z00)))
 (let ((?x800 (* (- 6) ?x453)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x1057 (+ (* 6 ?x2946) ?x55 ?x800 ?x2424 (* (- 18) ?x1495) ?x1042 ?x67 (* 6 (* z00 z)) ?x1053 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x525 (* (- 1) ?x50)))
 (let ((?x523 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x524 (* (- 12) y00)))
 (let (($x3027 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x453 ?x524 ?x45 ?x46 ?x523 ?x525) 0) (= ?x1057 0) (= ?x772 0) (= ?x3025 0) $x2665 $x1872)))
 (let ((?x1527 (* y00 z y)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x432 (* z y y)))
 (let ((?x1861 (* 18 ?x2050)))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x2676 (* (- 12) ?x2946)))
 (let ((?x1421 (* (- 18) ?x2912)))
 (let ((?x685 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1421 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x784) ?x2424 ?x590 (* 36 (* y00 y)) ?x1080 ?x2676 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x964 ?x1861 ?x432 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x616 (* 18 (* y00 x)) ?x71 ?x673 ?x1527 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x649))))
 (let ((?x2289 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x903 (+ (* (- 1) ?x2942) ?x2676 ?x1421 (* 18 (* x00 z00)) ?x638 ?x690 ?x1861 ?x2424 ?x1956 (* 12 (* y00 y)) ?x64 ?x616 ?x2362 ?x71 ?x673 ?x99 (* (- 18) (* z00 x)) ?x2289 (* (- 1) ?x649))))
 (let ((?x1160 (* z00 z00 z)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x1166 (+ (* (- 6) ?x2946) ?x546 ?x557 ?x2256 (* 18 ?x1495) ?x64 ?x616 (* (- 6) (* z00 z)) ?x71 ?x673 ?x1160)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2933 (* (- 1) ?x453)))
 (let (($x477 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2933 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1166 0) (= ?x903 0) (= ?x685 0) $x2665 $x1872)))
 (rewrite (= $x477 $x3027)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x400 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x392 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x391 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x390 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x388 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x380 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x378 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x376 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x373 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x369 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x366 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x365 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x363 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x361 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x359 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x356 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x353 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x349 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x347 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x341 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x340 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x338 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x335 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x333 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x331 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x330 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x326 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x324 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x318 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x316 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x311 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x310 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x308 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x307 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x301 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x297 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x295 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x290 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x282 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x281 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x278 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x276 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x274 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x271 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x262 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x258 (* 18 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x255 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x253 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x245 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x244 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x233 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x229 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x228 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x221 (- (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218) (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x223 (+ ?x221 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x225 (- ?x223 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x227 (+ ?x225 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x234 (+ (- (- ?x227 ?x228) ?x229) (* 108 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) ?x233)))
 (let ((?x241 (+ (- (- ?x234 ?x235) ?x236) ?x239 (* 108 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x241 ?x242) ?x244 ?x245 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00) ?x247)))
 (let ((?x250 (- ?x248 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00 z00))))
 (let ((?x261 (- (- (+ (- (+ ?x250 ?x251) ?x253) ?x255 ?x256) ?x258) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x265 (- (+ ?x261 ?x262) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x268 (+ ?x265 (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x270 (- ?x268 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x285 (+ (- (+ (- (+ ?x270 ?x271 ?x272) ?x274) ?x276) ?x278) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218) ?x281 ?x282 ?x283 (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x289 (+ (- ?x285 ?x286) (* 18 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x293 (- (- ?x289 ?x290) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218))))
 (let ((?x296 (+ ?x293 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00) ?x295)))
 (let ((?x303 (- (- ?x296 ?x297) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218))))
 (let ((?x304 (- ?x303 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x305 (- ?x304 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x315 (- (- (- (+ (- ?x305 ?x301) ?x307 ?x308) ?x310) ?x311) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x321 (- (- (+ ?x315 ?x316) ?x318) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00 z00))))
 (let ((?x325 (+ ?x321 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00) (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x324)))
 (let ((?x329 (- (- ?x325 ?x326) (* 108 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x342 (- (+ (- (+ ?x329 ?x330 ?x331) ?x333) ?x335) (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x344 (- (- ?x342 ?x338) (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x352 (- (- (+ (- (- ?x344 ?x340) ?x341) ?x347) ?x349) (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x357 (- (+ ?x352 ?x353) (* 108 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x371 (+ (- (- (+ (- (+ (- ?x357 ?x356) ?x359) ?x361) ?x363) ?x365) ?x366) ?x369 (* 72 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x375 (- (- ?x371 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)) ?x373)))
 (let ((?x383 (+ (- (+ ?x375 ?x376) ?x378) ?x380 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x387 (- (- ?x383 (* 72 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218)) (* 12 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (- (- (- (+ ?x387 ?x388) ?x390) ?x391) ?x392) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1308 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x548 (+ 6 z)))
 (let ((?x562 (+ 1 n)))
 (let ((?x3409 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3387 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3357 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3340 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3263 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3255 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3247 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3217 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3200 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3170 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3114 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2388 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2931 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2437 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2753 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2512 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3040 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2637 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3076 (* ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3002 (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2980 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2866 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2836 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2531 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3089 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3034 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2964 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1946 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2663 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2820 (* y00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2322 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2599 (* z00 z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2127 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2295 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2481 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1708 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1910 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1984 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2099 (* z00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2386 (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1736 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2141 (* z00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2220 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1990 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2069 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1929 (* z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1874 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1962 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* x00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1373 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1510 (* y00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1680 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1410 (* y00 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x961 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1644 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1646 (* y00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x881 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1425 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1168 (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x413 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x803 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x929 (* y00 z00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2925 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1762 (* z00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1525 (* y00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1241 (* z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1175 (* z00 z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1318 (* z00 z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2417 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2482 (* x00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2209 (* ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x828 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1063 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1014 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2071 (* y00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x801 (* y00 z00 ?x562 ?x562 ?x562 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2122 (* x00 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x837 (* z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2951 (* z00 z00 ?x562 ?x562 ?x548 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x918 (* ?x562 ?x562 ?x548 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x575 (* z00 z00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3430 (+ (* 108 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* z00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x575 (* (- 6) ?x918) (* 72 (* ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2951) (* (- 6) ?x837) (* 108 ?x2122) (* 18 ?x801) (* (- 12) ?x2071) (* (- 72) ?x1014) ?x1063 (* 108 (* ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x828) (* 108 ?x2209) (* 108 ?x2482) (* 6 ?x2417) ?x1318 (* (- 1) ?x1175) (* 6 ?x1241) (* (- 18) ?x1525) ?x1762 (* 6 ?x2925) (* (- 18) ?x929) (* (- 108) (* x00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x803) (* (- 1) (* z00 z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 6 (* z00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 72 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x413) (* 12 ?x1168) (* 72 ?x1425) (* (- 108) ?x881) (* 18 ?x1646) (* (- 1) ?x1644) (* 108 (* ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216 ?x216)) ?x961 (* 12 ?x1410) (* 6 ?x1680) (* 72 ?x1510) (* (- 18) ?x1373) (* 18 (* y00 z00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 108) ?x1889) (* (- 108) (* x00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) ?x1962 (* 6 ?x1874) (* (- 6) ?x1929) (* (- 12) ?x2069) (* (- 72) (* y00 ?x562 ?x562 ?x562 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x1990) (* (- 1) ?x2220) (* 6 ?x2141) (* 108 ?x1736) (* (- 108) ?x2386) (* (- 6) ?x2099) (* (- 6) ?x1984) (* 72 ?x1910) (* (- 6) ?x1708) (* (- 1) ?x2481) (* 6 ?x2295) (* 18 ?x2127) ?x2599 (* (- 1) ?x2322) (* (- 108) (* x00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 12 ?x2820) (* 72 ?x2663) (* (- 6) ?x1946) (* 72 ?x2964) (* (- 72) (* y00 ?x562 ?x562 ?x548 ?x548 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 108) ?x3034) (* (- 12) ?x3089) (* (- 108) ?x2531) (* (- 72) ?x2836) (* 6 ?x2866) (* (- 1) ?x2980) (* (- 72) ?x3002) (* 6 ?x3076) (* (- 108) ?x2637) (* (- 6) ?x3040) (* 6 ?x2512) (* (- 72) ?x2753) ?x2437 (* (- 72) ?x2931) (* (- 12) ?x2388) (* 108 ?x3114) (* 72 (* ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) (* ?x548 ?x548 ?x548 ?x548 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 6) ?x3170) (* 6 ?x3200) (* (- 6) ?x3217) (* 72 ?x3247) (* 18 ?x3255) ?x3263 (* (- 72) (* y00 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x548 ?x548 ?x548 ?x548 ?x216 ?x216 ?x216 ?x216)) (* 108 ?x3340) (* (- 12) ?x3357) (* (- 1) ?x3387) (* (- 72) ?x3409))))
 (let (($x1872 (not (= ?x3430 0))))
 (let ((?x1379 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x661 (* y00 y00)))
 (let ((?x1132 (* 96 ?x661)))
 (let ((?x1067 (* 16 (* y00 y00 y00))))
 (let ((?x937 (* (- 4) (* y y y))))
 (let ((?x885 (* 108 (* x x))))
 (let ((?x635 (* y y)))
 (let ((?x880 (* 24 ?x635)))
 (let ((?x2664 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x880 ?x885 ?x937 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1067 (* (- 6) (* z00 y y)) ?x1132 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1379 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x2665 (= ?x2664 0)))
 (let ((?x1527 (* y00 z y)))
 (let ((?x673 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x616 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x432 (* z y y)))
 (let ((?x2050 (* x00 z)))
 (let ((?x1861 (* 18 ?x2050)))
 (let ((?x964 (* (- 36) ?x661)))
 (let ((?x2946 (* z y)))
 (let ((?x2676 (* (- 12) ?x2946)))
 (let ((?x2029 (* z00 y)))
 (let ((?x1080 (* 6 ?x2029)))
 (let ((?x1495 (* y00 z00)))
 (let ((?x590 (* (- 6) ?x1495)))
 (let ((?x2429 (* y00 z)))
 (let ((?x2424 (* 12 ?x2429)))
 (let ((?x2912 (* z x)))
 (let ((?x1421 (* (- 18) ?x2912)))
 (let ((?x685 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1421 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2424 ?x590 (* 36 (* y00 y)) ?x1080 ?x2676 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x964 ?x1861 ?x432 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x616 (* 18 (* y00 x)) ?x71 ?x673 ?x1527 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x2289 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2362 (* (- 6) ?x2029)))
 (let ((?x1956 (* 6 ?x1495)))
 (let ((?x690 (* (- 24) ?x661)))
 (let ((?x638 (* 12 ?x635)))
 (let ((?x903 (+ (* (- 1) (* y00 z00 z)) ?x2676 ?x1421 (* 18 (* x00 z00)) ?x638 ?x690 ?x1861 ?x2424 ?x1956 (* 12 (* y00 y)) ?x64 ?x616 ?x2362 ?x71 ?x673 ?x99 (* (- 18) (* z00 x)) ?x2289 (* (- 1) (* z00 z00 y)))))
 (let ((?x1160 (* z00 z00 z)))
 (let ((?x2256 (* (- 12) ?x2429)))
 (let ((?x453 (* z00 z00)))
 (let ((?x557 (* 6 ?x453)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x546 (* (- 1) ?x55)))
 (let ((?x1166 (+ (* (- 6) ?x2946) ?x546 ?x557 ?x2256 (* 18 ?x1495) ?x64 ?x616 (* (- 6) (* z00 z)) ?x71 ?x673 ?x1160)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2933 (* (- 1) ?x453)))
 (let (($x477 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2933 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1166 0) (= ?x903 0) (= ?x685 0) $x2665 $x1872)))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x392 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x391 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x390 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x388 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x380 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x378 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x376 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x373 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x369 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x366 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x365 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x363 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x361 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x359 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x356 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x353 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x349 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x347 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x341 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x340 (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x338 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x335 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x333 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x331 (* 72 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x330 (* 12 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x326 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x324 (* ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x318 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x316 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x311 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x310 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x308 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x307 (* 6 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x301 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x297 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x295 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x290 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x286 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x283 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x282 (* 12 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x281 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x278 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x276 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x274 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x272 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x271 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x262 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x258 (* 18 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x256 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x255 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x253 (* 18 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x251 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x247 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00 z00)))
 (let ((?x245 (* 108 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x244 (* 108 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x242 (* 6 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x236 (* 72 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218)))
 (let ((?x235 (* 12 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x233 (* 18 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x229 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x228 (* ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x221 (- (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218) (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00))))
 (let ((?x223 (+ ?x221 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x225 (- ?x223 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x227 (+ ?x225 (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x234 (+ (- (- ?x227 ?x228) ?x229) (* 108 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) ?x233)))
 (let ((?x241 (+ (- (- ?x234 ?x235) ?x236) ?x239 (* 108 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x241 ?x242) ?x244 ?x245 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00) ?x247)))
 (let ((?x250 (- ?x248 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00 z00))))
 (let ((?x261 (- (- (+ (- (+ ?x250 ?x251) ?x253) ?x255 ?x256) ?x258) (* 108 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x265 (- (+ ?x261 ?x262) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00 z00))))
 (let ((?x268 (+ ?x265 (* 6 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x270 (- ?x268 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x285 (+ (- (+ (- (+ ?x270 ?x271 ?x272) ?x274) ?x276) ?x278) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218) ?x281 ?x282 ?x283 (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x289 (+ (- ?x285 ?x286) (* 18 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x293 (- (- ?x289 ?x290) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218))))
 (let ((?x296 (+ ?x293 (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00) ?x295)))
 (let ((?x303 (- (- ?x296 ?x297) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218))))
 (let ((?x304 (- ?x303 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x305 (- ?x304 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00))))
 (let ((?x315 (- (- (- (+ (- ?x305 ?x301) ?x307 ?x308) ?x310) ?x311) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x321 (- (- (+ ?x315 ?x316) ?x318) (* ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00 z00))))
 (let ((?x325 (+ ?x321 (* 6 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00) (* 18 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x324)))
 (let ((?x329 (- (- ?x325 ?x326) (* 108 ?x216 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x342 (- (+ (- (+ ?x329 ?x330 ?x331) ?x333) ?x335) (* 72 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x344 (- (- ?x342 ?x338) (* 12 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x352 (- (- (+ (- (- ?x344 ?x340) ?x341) ?x347) ?x349) (* 72 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x357 (- (+ ?x352 ?x353) (* 108 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x371 (+ (- (- (+ (- (+ (- ?x357 ?x356) ?x359) ?x361) ?x363) ?x365) ?x366) ?x369 (* 72 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x375 (- (- ?x371 (* 6 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218 ?x218)) ?x373)))
 (let ((?x383 (+ (- (+ ?x375 ?x376) ?x378) ?x380 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00) (* ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 ?x218 z00 z00))))
 (let ((?x387 (- (- ?x383 (* 72 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218)) (* 12 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x399 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= (- (- (- (+ ?x387 ?x388) ?x390) ?x391) ?x392) 0))))))
 (rewrite (= $x399 $x477))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x401 (asserted $x400)))
 (let ((@x636 (mp (mp @x401 (quant-intro (proof-bind ?x1308) (= $x400 $x2940)) $x2940) (rewrite (= $x2940 $x2940)) $x2940)))
 (let ((@x3330 (mp (mp @x636 (quant-intro (proof-bind ?x3020) (= $x2940 $x3012)) $x3012) (quant-intro (proof-bind ?x2979) (= $x3012 $x1026)) $x1026)))
 (let ((@x1831 (mp (mp~ @x3330 (sk (~ $x1026 $x1462)) $x1462) (rewrite (= $x1462 $x1578)) $x1578)))
 (let ((@x1029 (and-elim @x1831 $x2059)))
 (let ((@x826 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2059) $x2051)) @x1029 $x2051)))
 (let (($x996 (>= ?x1731 0)))
 (let ((@x1006 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2059) $x996)) @x1029 $x996)))
 (let (($x2177 (<= ?x2296 0)))
 (let ((@x2104 (and-elim @x1831 $x1598)))
 (let ((@x551 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1598) $x2177)) @x2104 $x2177)))
 (let (($x1072 (>= ?x2296 0)))
 (let ((@x434 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1598) $x1072)) @x2104 $x1072)))
 (let (($x830 (<= ?x2243 0)))
 (let ((@x2115 (and-elim @x1831 $x2214)))
 (let ((@x2413 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2214) $x830)) @x2115 $x830)))
 (let (($x767 (>= ?x2243 0)))
 (let ((@x2904 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2214) $x767)) @x2115 $x767)))
 (let (($x2559 (<= ?x1778 0)))
 (let ((@x1596 (and-elim @x1831 $x2150)))
 (let ((@x814 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2150) $x2559)) @x1596 $x2559)))
 (let (($x489 (>= ?x1778 0)))
 (let ((@x2023 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2150) $x489)) @x1596 $x489)))
 (let (($x1113 (<= ?x1269 0)))
 (let ((@x633 (and-elim @x1831 $x646)))
 (let ((@x3030 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x646) $x1113)) @x633 $x1113)))
 (let (($x1187 (>= ?x1269 0)))
 (let ((@x1220 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x646) $x1187)) @x633 $x1187)))
 (let (($x447 (<= ?x717 0)))
 (let ((@x1948 (and-elim @x1831 $x724)))
 (let ((@x1773 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x724) $x447)) @x1948 $x447)))
 (let (($x500 (>= ?x717 0)))
 (let ((@x1403 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x724) $x500)) @x1948 $x500)))
 (let (($x968 (not (<= ?x1594 0))))
 (let (($x2054 (>= ?x1594 0)))
 (let ((@x579 ((_ th-lemma arith) (hypothesis (not $x2054)) @x1220 @x3030 @x1403 @x1773 @x2904 @x2413 @x2023 @x814 @x1220 @x3030 @x1220 @x3030 @x2904 @x2413 @x2023 @x814 @x2904 @x2413 @x434 @x551 @x1006 @x826 false)))
 (let ((@x1357 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x864 $x968 (not $x2054))) (and-elim @x1831 $x1832) (or $x968 (not $x2054)))))
 ((_ th-lemma arith) (unit-resolution @x1357 (lemma @x579 $x2054) $x968) @x1220 @x3030 @x1403 @x1773 @x2904 @x2413 @x2023 @x814 @x1220 @x3030 @x1220 @x3030 @x2904 @x2413 @x2023 @x814 @x2904 @x2413 @x434 @x551 @x1006 @x826 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-grobner             2
 :arith-max-min             1234
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              7
 :arith-row-summations      7
 :arith-tableau-max-columns 195
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                15.52
 :memory                    3.76
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                14531221084.00
 :num-checks                1
 :propagations              14
 :rlimit-count              2105615
 :time                      3.34
 :total-time                3.30)
