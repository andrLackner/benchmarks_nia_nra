unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun x!0 () Int)
(declare-fun q!3 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1337 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 2 (* q!3 d!1)) (* (- 1) (* q!3 d!1 d!1)) (* (- 4) (* d!1 x!0)) (* 4 (* d!1 r!2)) (* (- 8) r!2))))
 (let (($x1522 (>= ?x1337 0)))
 (let (($x1340 (= ?x1337 0)))
 (let ((?x466 (* 8 r!2)))
 (let ((?x1218 (* q!3 d!1 d!1)))
 (let ((?x465 (* q!3 d!1)))
 (let ((?x473 (* (- 2) ?x465)))
 (let ((?x309 (* r00 d00)))
 (let ((?x310 (* 4 ?x309)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x1353 (+ ?x174 ?x222 ?x206 ?x272 ?x310 ?x473 ?x1218 (* 4 (* d!1 x!0)) (* (- 4) (* d!1 r!2)) ?x466)))
 (let ((?x248 (* 2 r!2)))
 (let ((?x1478 (* (- 1) x!0)))
 (let ((?x905 (* (- 2) d!1)))
 (let ((?x4250 (+ (- 4) q!3 ?x905 ?x1478 ?x248)))
 (let ((?x1506 (+ 2 d!1)))
 (let ((?x1414 (+ (- 8) q!3)))
 (let ((?x4008 (* 12 (* q!3 d!1 x!0 r!2 r!2 r!2))))
 (let ((?x4235 (* 6 (* q!3 d!1 d!1 x!0 r!2 r!2 r!2))))
 (let ((?x4220 (* 8 (* q!3 x!0 r!2 r!2 r!2))))
 (let ((?x2608 (* r!2 r!2 r!2)))
 (let ((?x1265 (* (- 256) ?x2608)))
 (let ((?x1521 (* (- 6) (* q!3 q!3 d!1 d!1 r!2 r!2 r!2))))
 (let ((?x550 (* (- 12) (* q!3 q!3 d!1 r!2 r!2 r!2))))
 (let ((?x507 (* (- 16) (* q!3 r!2 r!2 r!2 r!2))))
 (let ((?x1308 (* (- 24) (* q!3 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x325 (* (- 8) (* q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1323 (* (- 12) (* q!3 d!1 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x2880 (* (- 1) (* q!3 q!3 d!1 d!1 d!1 r!2 r!2 r!2))))
 (let ((?x303 (* (- 2) (* q!3 d!1 d!1 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x526 (* r!2 r!2 r!2 r!2)))
 (let ((?x585 (* 128 ?x526)))
 (let ((?x429 (* q!3 d!1 d!1 d!1 x!0 r!2 r!2 r!2)))
 (let ((?x169 (* q!3 r!2 r!2 r!2)))
 (let ((?x1413 (* 96 ?x169)))
 (let ((?x4308 (+ ?x1413 (* (- 1) (* ?x1414 ?x1414 ?x1414 ?x1506 ?x1506 ?x1506 ?x4250 ?x4250 ?x4250)) ?x429 ?x585 (* 160 (* q!3 d!1 r!2 r!2 r!2)) ?x303 ?x2880 ?x1323 ?x325 ?x1308 (* (- 8) (* d!1 d!1 d!1 x!0 r!2 r!2 r!2)) (* 96 (* d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 128) (* d!1 d!1 d!1 r!2 r!2 r!2)) ?x507 (* 2 (* q!3 d!1 d!1 d!1 d!1 r!2 r!2 r!2)) ?x550 (* (- 384) (* d!1 d!1 r!2 r!2 r!2)) (* (- 16) (* d!1 d!1 d!1 d!1 r!2 r!2 r!2)) (* 96 (* q!3 d!1 d!1 r!2 r!2 r!2)) ?x1521 (* (- 48) (* d!1 d!1 x!0 r!2 r!2 r!2)) ?x1265 (* (- 64) (* x!0 r!2 r!2 r!2)) (* 192 (* d!1 r!2 r!2 r!2 r!2)) (* (- 512) (* d!1 r!2 r!2 r!2)) (* 24 (* q!3 d!1 d!1 d!1 r!2 r!2 r!2)) (* (- 96) (* d!1 x!0 r!2 r!2 r!2)) ?x4220 ?x4235 (* 16 (* d!1 d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 1) (* ?x1414 ?x1414 ?x1506 ?x1506 ?x4250 ?x4250 r!2 r!2 r!2)) ?x4008 (* (- 1) (* ?x1414 ?x1506 ?x4250 ?x4250 r!2)))))
 (let ((?x4196 (* ?x4308 ?x1353)))
 (let (($x2875 (= ?x4196 0)))
 (let (($x4304 (not $x2875)))
 (let ((?x3148 (* d!1 r!2 r!2 r!2)))
 (let ((?x1300 (* (- 128) ?x3148)))
 (let ((?x1403 (* (- 64) ?x2608)))
 (let ((?x1488 (* d!1 d!1 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x1544 (* (- 4) ?x1488)))
 (let ((?x1454 (* d!1 d!1 r!2 r!2 r!2)))
 (let ((?x1505 (* (- 96) ?x1454)))
 (let ((?x1316 (* d!1 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x3040 (* (- 32) ?x1316)))
 (let ((?x1319 (+ 2 q!3 d!1 ?x1478 ?x248)))
 (let ((?x476 (+ 4 q!3)))
 (let ((?x2683 (* (- 64) ?x526)))
 (let ((?x2546 (* (- 48) ?x169)))
 (let ((?x4240 (+ ?x2546 ?x429 ?x2683 (* (- 80) (* q!3 d!1 r!2 r!2 r!2)) ?x303 (* (- 1) (* ?x1506 ?x1506 ?x1506 ?x476 ?x476 ?x476 ?x1319 ?x1319 ?x1319)) (* (- 1) (* ?x1506 ?x1506 ?x476 ?x476 ?x1319 ?x1319 r!2 r!2 r!2)) ?x2880 ?x1323 ?x325 (* (- 1) (* ?x1506 ?x476 ?x1319 ?x1319 r!2)) ?x1308 (* 4 (* d!1 d!1 d!1 x!0 r!2 r!2 r!2)) (* (- 48) (* d!1 d!1 r!2 r!2 r!2 r!2)) ?x3040 ?x507 (* (- 1) (* q!3 d!1 d!1 d!1 d!1 r!2 r!2 r!2)) ?x550 ?x1505 ?x1544 (* (- 48) (* q!3 d!1 d!1 r!2 r!2 r!2)) ?x1521 (* 24 (* d!1 d!1 x!0 r!2 r!2 r!2)) ?x1403 (* 32 (* x!0 r!2 r!2 r!2)) (* (- 96) (* d!1 r!2 r!2 r!2 r!2)) ?x1300 (* (- 12) (* q!3 d!1 d!1 d!1 r!2 r!2 r!2)) (* 48 (* d!1 x!0 r!2 r!2 r!2)) ?x4220 ?x4235 (* (- 8) (* d!1 d!1 d!1 r!2 r!2 r!2 r!2)) ?x4008)))
 (let ((?x4245 (* ?x4240 ?x1353)))
 (let (($x937 (= ?x4245 0)))
 (let ((?x1152 (* (- 1) d!1)))
 (let ((?x4277 (+ (- 2) q!3 ?x1152 ?x1478 ?x248)))
 (let ((?x1085 (+ (- 4) q!3)))
 (let ((?x1330 (* q!3 d!1 d!1 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x567 (* 64 ?x526)))
 (let ((?x741 (* 48 ?x169)))
 (let ((?x1858 (+ ?x741 ?x429 ?x567 (* 80 (* q!3 d!1 r!2 r!2 r!2)) ?x303 ?x2880 ?x1323 ?x325 ?x1308 (* (- 4) (* d!1 d!1 d!1 x!0 r!2 r!2 r!2)) (* 48 (* d!1 d!1 r!2 r!2 r!2 r!2)) ?x3040 ?x507 ?x1330 ?x550 ?x1505 ?x1544 (* (- 1) (* ?x1085 ?x1085 ?x1085 ?x1506 ?x1506 ?x1506 ?x4277 ?x4277 ?x4277)) (* (- 1) (* ?x1085 ?x1506 ?x4277 ?x4277 r!2)) (* 48 (* q!3 d!1 d!1 r!2 r!2 r!2)) ?x1521 (* (- 24) (* d!1 d!1 x!0 r!2 r!2 r!2)) ?x1403 (* (- 1) (* ?x1085 ?x1085 ?x1506 ?x1506 ?x4277 ?x4277 r!2 r!2 r!2)) (* (- 32) (* x!0 r!2 r!2 r!2)) (* 96 (* d!1 r!2 r!2 r!2 r!2)) ?x1300 (* 12 (* q!3 d!1 d!1 d!1 r!2 r!2 r!2)) (* (- 48) (* d!1 x!0 r!2 r!2 r!2)) ?x4220 ?x4235 (* 8 (* d!1 d!1 d!1 r!2 r!2 r!2 r!2)) ?x4008)))
 (let ((?x4195 (* ?x1858 ?x1353)))
 (let (($x1781 (= ?x4195 0)))
 (let ((?x3782 (+ q!3 ?x1478 ?x248)))
 (let ((?x2587 (* (- 8) (* q!3 q!3 r!2 r!2))))
 (let ((?x2519 (* (- 16) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2))))
 (let ((?x2806 (* (- 16) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2))))
 (let ((?x989 (* (- 2) (* q!3 q!3 q!3 r!2))))
 (let ((?x1481 (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2))))
 (let ((?x1476 (* (- 8) ?x169)))
 (let ((?x4185 (+ ?x1476 ?x429 (* (- 4) (* q!3 d!1 r!2 r!2 r!2)) ?x303 ?x2880 ?x1323 ?x1481 ?x325 ?x989 ?x1308 ?x507 ?x2806 ?x550 (* 2 (* q!3 q!3 q!3 d!1 d!1 x!0 r!2 r!2 r!2)) ?x1521 (* (- 2) (* q!3 x!0 x!0 r!2)) (* (- 16) (* q!3 q!3 q!3 d!1 r!2 r!2 r!2 r!2)) ?x2519 ?x2587 (* (- 4) (* q!3 q!3 x!0 x!0 r!2 r!2 r!2)) (* (- 16) (* q!3 q!3 d!1 r!2 r!2 r!2 r!2 r!2)) (* (- 1) (* ?x1506 ?x1506 ?x1506 ?x3782 ?x3782 ?x3782 q!3 q!3 q!3)) (* 2 (* q!3 q!3 d!1 x!0 r!2)) (* 8 (* q!3 q!3 q!3 x!0 r!2 r!2 r!2)) (* (- 1) (* q!3 q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2)) ?x4220 ?x4235 ?x4008 (* (- 1) (* q!3 q!3 q!3 d!1 r!2)) (* 16 (* q!3 q!3 d!1 x!0 r!2 r!2 r!2 r!2)) (* (- 1) (* q!3 d!1 x!0 x!0 r!2)) (* 4 (* q!3 d!1 x!0 r!2 r!2)) (* (- 1) (* q!3 q!3 d!1 d!1 x!0 x!0 r!2 r!2 r!2)) (* 8 (* q!3 x!0 r!2 r!2)) (* (- 4) (* q!3 q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2)) (* (- 4) (* q!3 q!3 q!3 q!3 d!1 r!2 r!2 r!2)) (* 16 (* q!3 q!3 x!0 r!2 r!2 r!2 r!2)) (* (- 4) (* q!3 q!3 d!1 d!1 r!2 r!2 r!2 r!2 r!2)) (* 8 (* q!3 q!3 q!3 d!1 x!0 r!2 r!2 r!2)) (* (- 4) (* q!3 q!3 d!1 r!2 r!2)) (* 4 (* q!3 q!3 x!0 r!2)) (* 4 (* q!3 q!3 d!1 d!1 x!0 r!2 r!2 r!2 r!2)) (* (- 4) (* q!3 q!3 d!1 x!0 x!0 r!2 r!2 r!2)))))
 (let ((?x4268 (* ?x4185 ?x1353)))
 (let (($x4286 (= ?x4268 0)))
 (let (($x1284 (not $x4286)))
 (let (($x4184 (or $x1284 (not $x1781) (not $x937) $x4304)))
 (let (($x4209 (and $x1340 $x4184)))
 (let ((?x1271 (+ ?x466 ?x174 ?x222 ?x206 ?x272 ?x310 ?x473 (* 4 (* x!0 d!1)) ?x1218 (* (- 4) (* r!2 d!1)))))
 (let ((?x480 (* 6 (* q!3 r!2 r!2 r!2 x!0 d!1 d!1))))
 (let ((?x1366 (* (- 2) (* q!3 r!2 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x477 (* 8 (* q!3 r!2 r!2 r!2 x!0))))
 (let ((?x2152 (* (- 12) (* q!3 r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x436 (* (- 24) (* q!3 r!2 r!2 r!2 r!2 d!1))))
 (let ((?x1268 (* (- 12) (* q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x2773 (* (- 6) (* q!3 q!3 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x2673 (* q!3 r!2 r!2 r!2 x!0 d!1 d!1 d!1)))
 (let ((?x2606 (* 12 (* q!3 r!2 r!2 r!2 x!0 d!1))))
 (let ((?x1411 (+ q!3 ?x248 ?x1478)))
 (let ((?x2961 (* (- 1) (* q!3 q!3 r!2 r!2 r!2 d!1 d!1 d!1))))
 (let ((?x2830 (+ (* 2 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1 d!1)) (* 8 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)) ?x989 ?x2961 (* (- 1) (* ?x1506 ?x1506 ?x1506 ?x1411 ?x1411 ?x1411 q!3 q!3 q!3)) ?x2606 ?x325 ?x2673 (* 16 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1)) (* (- 4) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1)) ?x2773 (* (- 4) (* q!3 r!2 r!2 r!2 d!1)) ?x1268 ?x436 ?x507 ?x2152 ?x477 (* 4 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0 d!1 d!1)) ?x1366 ?x480 (* 4 (* q!3 q!3 r!2 x!0)) ?x2587 (* (- 4) (* q!3 q!3 r!2 r!2 d!1)) (* (- 1) (* q!3 q!3 q!3 r!2 d!1)) (* (- 4) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0)) (* (- 4) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1 d!1)) (* 16 (* q!3 q!3 r!2 r!2 r!2 r!2 x!0)) ?x2519 (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1)) ?x1481 (* (- 1) (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1 d!1)) ?x2806 (* (- 16) (* q!3 q!3 r!2 r!2 r!2 r!2 r!2 d!1)) (* 8 (* q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1 d!1)) (* (- 16) (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1)) ?x1476 (* 8 (* q!3 r!2 r!2 x!0)) (* (- 2) (* q!3 r!2 x!0 x!0)) (* (- 1) (* q!3 q!3 r!2 r!2 r!2 x!0 x!0 d!1 d!1)) (* 2 (* q!3 q!3 r!2 x!0 d!1)) (* 4 (* q!3 r!2 r!2 x!0 d!1)) (* (- 1) (* q!3 r!2 x!0 x!0 d!1)))))
 (let ((?x482 (* r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1217 (* (- 32) ?x482)))
 (let ((?x187 (* r!2 r!2 r!2 d!1)))
 (let ((?x2681 (* (- 128) ?x187)))
 (let ((?x2114 (* r!2 r!2 r!2 d!1 d!1)))
 (let ((?x2146 (* (- 96) ?x2114)))
 (let ((?x472 (* r!2 r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x2808 (* (- 4) ?x472)))
 (let ((?x2603 (+ (- 2) q!3 ?x248 ?x1478 ?x1152)))
 (let ((?x2616 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1 d!1)))
 (let ((?x3530 (+ ?x2616 ?x2961 (* (- 1) (* ?x1085 ?x1506 ?x2603 ?x2603 r!2)) (* (- 1) (* ?x1085 ?x1085 ?x1085 ?x1506 ?x1506 ?x1506 ?x2603 ?x2603 ?x2603)) ?x2606 (* (- 1) (* ?x1085 ?x1085 ?x1506 ?x1506 ?x2603 ?x2603 r!2 r!2 r!2)) (* (- 24) (* r!2 r!2 r!2 x!0 d!1 d!1)) ?x325 ?x2673 ?x2808 ?x567 ?x2773 (* 48 (* q!3 r!2 r!2 r!2 d!1 d!1)) (* 80 (* q!3 r!2 r!2 r!2 d!1)) ?x1268 ?x2146 ?x2681 (* (- 4) (* r!2 r!2 r!2 x!0 d!1 d!1 d!1)) ?x436 (* 48 (* r!2 r!2 r!2 r!2 d!1 d!1)) (* 96 (* r!2 r!2 r!2 r!2 d!1)) ?x507 ?x2152 ?x1217 (* (- 32) (* r!2 r!2 r!2 x!0)) (* 12 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) ?x477 (* (- 48) (* r!2 r!2 r!2 x!0 d!1)) ?x1366 ?x480 (* 8 (* r!2 r!2 r!2 r!2 d!1 d!1 d!1)) ?x741 ?x1403)))
 (let ((?x490 (+ (- 4) q!3 ?x248 ?x1478 ?x905)))
 (let ((?x3019 (+ (* 2 ?x2616) ?x2961 ?x2606 (* (- 48) (* r!2 r!2 r!2 x!0 d!1 d!1)) ?x325 ?x2673 (* (- 16) ?x472) ?x585 ?x2773 (* 96 (* q!3 r!2 r!2 r!2 d!1 d!1)) (* 160 (* q!3 r!2 r!2 r!2 d!1)) ?x1268 (* (- 384) ?x2114) (* (- 512) ?x187) (* (- 8) (* r!2 r!2 r!2 x!0 d!1 d!1 d!1)) ?x436 (* 96 (* r!2 r!2 r!2 r!2 d!1 d!1)) (* 192 (* r!2 r!2 r!2 r!2 d!1)) ?x507 ?x2152 (* (- 128) ?x482) (* (- 64) (* r!2 r!2 r!2 x!0)) (* 24 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) ?x477 (* (- 96) (* r!2 r!2 r!2 x!0 d!1)) ?x1366 ?x480 (* 16 (* r!2 r!2 r!2 r!2 d!1 d!1 d!1)) ?x1413 ?x1265 (* (- 1) (* ?x1414 ?x1414 ?x1414 ?x1506 ?x1506 ?x1506 ?x490 ?x490 ?x490)) (* (- 1) (* ?x1414 ?x1414 ?x1506 ?x1506 ?x490 ?x490 r!2 r!2 r!2)) (* (- 1) (* ?x1414 ?x1506 ?x490 ?x490 r!2)))))
 (let ((?x459 (+ 2 q!3 ?x248 ?x1478 d!1)))
 (let ((?x2601 (+ (* (- 1) ?x2616) (* (- 1) (* ?x1506 ?x476 ?x459 ?x459 r!2)) ?x2961 (* (- 1) (* ?x1506 ?x1506 ?x1506 ?x476 ?x476 ?x476 ?x459 ?x459 ?x459)) (* (- 1) (* ?x1506 ?x1506 ?x476 ?x476 ?x459 ?x459 r!2 r!2 r!2)) ?x2606 (* 24 (* r!2 r!2 r!2 x!0 d!1 d!1)) ?x325 ?x2673 ?x2808 ?x2683 ?x2773 (* (- 48) (* q!3 r!2 r!2 r!2 d!1 d!1)) (* (- 80) (* q!3 r!2 r!2 r!2 d!1)) ?x1268 ?x2146 ?x2681 (* 4 (* r!2 r!2 r!2 x!0 d!1 d!1 d!1)) ?x436 (* (- 48) (* r!2 r!2 r!2 r!2 d!1 d!1)) (* (- 96) (* r!2 r!2 r!2 r!2 d!1)) ?x507 ?x2152 ?x1217 (* 32 (* r!2 r!2 r!2 x!0)) (* (- 12) (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) ?x477 (* 48 (* r!2 r!2 r!2 x!0 d!1)) ?x1366 ?x480 (* (- 8) (* r!2 r!2 r!2 r!2 d!1 d!1 d!1)) ?x2546 ?x1403)))
 (let (($x1395 (or (not (= (* ?x2601 ?x1271) 0)) (not (= (* ?x3019 ?x1271) 0)) (not (= (* ?x3530 ?x1271) 0)) (not (= (* ?x2830 ?x1271) 0)))))
 (let (($x1393 (and (= ?x1271 0) $x1395)))
 (let (($x1235 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2969 (* r d)))
 (let ((?x3152 (* (- 4) ?x2969)))
 (let ((?x2966 (* q d d)))
 (let ((?x769 (* 4 (* x d))))
 (let ((?x2968 (* (- 2) (* q d))))
 (let ((?x309 (* r00 d00)))
 (let ((?x310 (* 4 ?x309)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x203 (* 8 r)))
 (let ((?x3055 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3247 (* (- 2) (* q r x x))))
 (let ((?x3243 (* 8 (* q r r x))))
 (let ((?x3238 (* q r r r)))
 (let ((?x3213 (* (- 8) ?x3238)))
 (let ((?x3210 (* (- 16) (* q q q r r r r d))))
 (let ((?x3225 (* (- 4) (* q q q r r r r d d))))
 (let ((?x3226 (* 8 (* q q q r r r x))))
 (let ((?x3192 (* (- 16) (* q q r r r r r d))))
 (let ((?x3203 (* (- 16) (* q q q r r r r))))
 (let ((?x3205 (* (- 1) (* q q q q r r r d d))))
 (let ((?x3199 (* (- 4) (* q q q q r r r))))
 (let ((?x3197 (* (- 4) (* q q q q r r r d))))
 (let ((?x3191 (* (- 16) (* q q r r r r r))))
 (let ((?x3184 (* 16 (* q q r r r r x))))
 (let ((?x3194 (* (- 4) (* q q r r r r r d d))))
 (let ((?x3181 (* (- 4) (* q q r r r x x))))
 (let ((?x3173 (* (- 1) (* q q q r d))))
 (let ((?x3179 (* (- 4) (* q q r r d))))
 (let ((?x3168 (* (- 8) (* q q r r))))
 (let ((?x3244 (* 4 (* q q r x))))
 (let ((?x1541 (* 6 (* q r r r x d d))))
 (let ((?x1467 (* (- 2) (* q r r r r d d d))))
 (let ((?x2726 (* 8 (* q r r r x))))
 (let ((?x2693 (* q r r r r d d)))
 (let ((?x1540 (* (- 12) ?x2693)))
 (let ((?x2689 (* (- 16) (* q r r r r))))
 (let ((?x2684 (* q r r r r d)))
 (let ((?x1444 (* (- 24) ?x2684)))
 (let ((?x2619 (* q q r r r d)))
 (let ((?x1525 (* (- 12) ?x2619)))
 (let ((?x2618 (* q r r r d)))
 (let ((?x3212 (* (- 4) ?x2618)))
 (let ((?x2613 (* q q r r r d d)))
 (let ((?x2650 (* (- 6) ?x2613)))
 (let ((?x1974 (* q r r r x d d d)))
 (let ((?x1967 (* (- 8) (* q q r r r))))
 (let ((?x1527 (* 12 (* q r r r x d))))
 (let ((?x171 (* (- 1) x)))
 (let ((?x138 (* 2 r)))
 (let ((?x3214 (+ q ?x138 ?x171)))
 (let ((?x2792 (+ 2 d)))
 (let ((?x1738 (* (- 1) (* q q r r r d d d))))
 (let ((?x880 (* q q q r)))
 (let ((?x3178 (* (- 2) ?x880)))
 (let ((?x3885 (+ (* 2 (* q q q r r r x d d)) (* 8 (* q q q r r r x d)) ?x3178 ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x3214 ?x3214 ?x3214 q q q)) ?x1527 ?x1967 ?x1974 (* 16 (* q q r r r r x d)) (* (- 4) (* q q r r r x x d)) ?x2650 ?x3212 ?x1525 ?x1444 ?x2689 ?x1540 ?x2726 (* 4 (* q q r r r r x d d)) ?x1467 ?x1541 ?x3244 ?x3168 ?x3179 ?x3173 ?x3181 ?x3194 ?x3184 ?x3191 ?x3197 ?x3199 ?x3205 ?x3203 ?x3192 ?x3226 ?x3225 ?x3210 ?x3213 ?x3243 ?x3247 (* (- 1) (* q q r r r x x d d)) (* 2 (* q q r x d)) (* 4 (* q r r x d)) (* (- 1) (* q r x x d)))))
 (let (($x3963 (not (= (* ?x3885 ?x3055) 0))))
 (let ((?x3328 (* r r r)))
 (let ((?x3329 (* (- 64) ?x3328)))
 (let ((?x3255 (* 48 ?x3238)))
 (let ((?x2704 (* r r r x)))
 (let ((?x3263 (* (- 32) ?x2704)))
 (let ((?x2696 (* r r r d d d)))
 (let ((?x3375 (* (- 32) ?x2696)))
 (let ((?x2631 (* r r r d)))
 (let ((?x1445 (* (- 128) ?x2631)))
 (let ((?x2630 (* r r r d d)))
 (let ((?x1535 (* (- 96) ?x2630)))
 (let ((?x2610 (* r r r r)))
 (let ((?x3261 (* 64 ?x2610)))
 (let ((?x2032 (* r r r d d d d)))
 (let ((?x2595 (* (- 4) ?x2032)))
 (let ((?x3297 (* (- 1) d)))
 (let ((?x1612 (+ (- 2) q ?x138 ?x171 ?x3297)))
 (let ((?x3350 (+ (- 4) q)))
 (let ((?x504 (* q r r r d d d d)))
 (let ((?x1714 (+ ?x504 ?x1738 (* (- 1) (* ?x3350 ?x2792 ?x1612 ?x1612 r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x1612 ?x1612 ?x1612)) ?x1527 (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x1612 ?x1612 r r r)) (* (- 24) (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x3261 ?x2650 (* 48 (* q r r r d d)) (* 80 ?x2618) ?x1525 ?x1535 ?x1445 (* (- 4) (* r r r x d d d)) ?x1444 (* 48 (* r r r r d d)) (* 96 (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x3263 (* 12 (* q r r r d d d)) ?x2726 (* (- 48) (* r r r x d)) ?x1467 ?x1541 (* 8 (* r r r r d d d)) ?x3255 ?x3329)))
 (let ((?x3412 (* (- 2) d)))
 (let ((?x3892 (+ (- 4) q ?x138 ?x171 ?x3412)))
 (let ((?x3437 (+ (- 8) q)))
 (let ((?x3366 (* (- 256) ?x3328)))
 (let ((?x3367 (* 96 ?x3238)))
 (let ((?x3377 (* (- 64) ?x2704)))
 (let ((?x3372 (* 128 ?x2610)))
 (let ((?x4494 (+ (* 2 ?x504) ?x1738 ?x1527 (* (- 48) (* r r r x d d)) ?x1967 ?x1974 (* (- 16) ?x2032) ?x3372 ?x2650 (* 96 (* q r r r d d)) (* 160 ?x2618) ?x1525 (* (- 384) ?x2630) (* (- 512) ?x2631) (* (- 8) (* r r r x d d d)) ?x1444 (* 96 (* r r r r d d)) (* 192 (* r r r r d)) ?x2689 ?x1540 (* (- 128) ?x2696) ?x3377 (* 24 (* q r r r d d d)) ?x2726 (* (- 96) (* r r r x d)) ?x1467 ?x1541 (* 16 (* r r r r d d d)) ?x3367 ?x3366 (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x3892 ?x3892 ?x3892)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x3892 ?x3892 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x3892 ?x3892 r)))))
 (let ((?x3236 (* (- 48) ?x3238)))
 (let ((?x2715 (* 32 ?x2704)))
 (let ((?x2688 (* (- 64) ?x2610)))
 (let ((?x2954 (+ 2 q ?x138 ?x171 d)))
 (let ((?x2793 (+ 4 q)))
 (let ((?x1636 (+ (* (- 1) ?x504) (* (- 1) (* ?x2792 ?x2793 ?x2954 ?x2954 r)) ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x2954 ?x2954 ?x2954)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x2954 ?x2954 r r r)) ?x1527 (* 24 (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x2688 ?x2650 (* (- 48) (* q r r r d d)) (* (- 80) ?x2618) ?x1525 ?x1535 ?x1445 (* 4 (* r r r x d d d)) ?x1444 (* (- 48) (* r r r r d d)) (* (- 96) (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x2715 (* (- 12) (* q r r r d d d)) ?x2726 (* 48 (* r r r x d)) ?x1467 ?x1541 (* (- 8) (* r r r r d d d)) ?x3236 ?x3329)))
 (let (($x2679 (or (not (= (* ?x1636 ?x3055) 0)) (not (= (* ?x4494 ?x3055) 0)) (not (= (* ?x1714 ?x3055) 0)) $x3963)))
 (let (($x3129 (= ?x3055 0)))
 (and $x3129 $x2679))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x4473 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2969 (* r d)))
 (let ((?x3152 (* (- 4) ?x2969)))
 (let ((?x2966 (* q d d)))
 (let ((?x769 (* 4 (* x d))))
 (let ((?x2968 (* (- 2) (* q d))))
 (let ((?x3362 (* 16 d)))
 (let ((?x309 (* r00 d00)))
 (let ((?x310 (* 4 ?x309)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x203 (* 8 r)))
 (let ((?x4508 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 (* (- 8) (* d 2)) ?x3362 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3412 (* (- 2) d)))
 (let ((?x171 (* (- 1) x)))
 (let ((?x138 (* 2 r)))
 (let ((?x3892 (+ (- 4) q ?x138 ?x171 ?x3412)))
 (let ((?x2792 (+ 2 d)))
 (let ((?x3437 (+ (- 8) q)))
 (let ((?x3328 (* r r r)))
 (let ((?x3366 (* (- 256) ?x3328)))
 (let ((?x3238 (* q r r r)))
 (let ((?x3367 (* 96 ?x3238)))
 (let ((?x1541 (* 6 (* q r r r x d d))))
 (let ((?x1467 (* (- 2) (* q r r r r d d d))))
 (let ((?x2726 (* 8 (* q r r r x))))
 (let ((?x2704 (* r r r x)))
 (let ((?x3377 (* (- 64) ?x2704)))
 (let ((?x2693 (* q r r r r d d)))
 (let ((?x1540 (* (- 12) ?x2693)))
 (let ((?x2689 (* (- 16) (* q r r r r))))
 (let ((?x2684 (* q r r r r d)))
 (let ((?x1444 (* (- 24) ?x2684)))
 (let ((?x2619 (* q q r r r d)))
 (let ((?x1525 (* (- 12) ?x2619)))
 (let ((?x2613 (* q q r r r d d)))
 (let ((?x2650 (* (- 6) ?x2613)))
 (let ((?x2610 (* r r r r)))
 (let ((?x3372 (* 128 ?x2610)))
 (let ((?x1974 (* q r r r x d d d)))
 (let ((?x1967 (* (- 8) (* q q r r r))))
 (let ((?x1527 (* 12 (* q r r r x d))))
 (let ((?x1738 (* (- 1) (* q q r r r d d d))))
 (let ((?x4494 (+ (* 2 (* q r r r d d d d)) ?x1738 ?x1527 (* (- 48) (* r r r x d d)) ?x1967 ?x1974 (* (- 16) (* r r r d d d d)) ?x3372 ?x2650 (* 96 (* q r r r d d)) (* 160 (* q r r r d)) ?x1525 (* (- 384) (* r r r d d)) (* (- 512) (* r r r d)) (* (- 8) (* r r r x d d d)) ?x1444 (* 96 (* r r r r d d)) (* 192 (* r r r r d)) ?x2689 ?x1540 (* (- 128) (* r r r d d d)) ?x3377 (* 24 (* q r r r d d d)) ?x2726 (* (- 96) (* r r r x d)) ?x1467 ?x1541 (* 16 (* r r r r d d d)) ?x3367 ?x3366 (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x3892 ?x3892 ?x3892)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x3892 ?x3892 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x3892 ?x3892 r)))))
 (let ((?x3055 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3247 (* (- 2) (* q r x x))))
 (let ((?x3243 (* 8 (* q r r x))))
 (let ((?x3213 (* (- 8) ?x3238)))
 (let ((?x3210 (* (- 16) (* q q q r r r r d))))
 (let ((?x3225 (* (- 4) (* q q q r r r r d d))))
 (let ((?x3226 (* 8 (* q q q r r r x))))
 (let ((?x3192 (* (- 16) (* q q r r r r r d))))
 (let ((?x3203 (* (- 16) (* q q q r r r r))))
 (let ((?x3205 (* (- 1) (* q q q q r r r d d))))
 (let ((?x3199 (* (- 4) (* q q q q r r r))))
 (let ((?x3197 (* (- 4) (* q q q q r r r d))))
 (let ((?x3191 (* (- 16) (* q q r r r r r))))
 (let ((?x3184 (* 16 (* q q r r r r x))))
 (let ((?x3194 (* (- 4) (* q q r r r r r d d))))
 (let ((?x3181 (* (- 4) (* q q r r r x x))))
 (let ((?x3173 (* (- 1) (* q q q r d))))
 (let ((?x3179 (* (- 4) (* q q r r d))))
 (let ((?x3168 (* (- 8) (* q q r r))))
 (let ((?x3244 (* 4 (* q q r x))))
 (let ((?x2618 (* q r r r d)))
 (let ((?x3212 (* (- 4) ?x2618)))
 (let ((?x3214 (+ q ?x138 ?x171)))
 (let ((?x880 (* q q q r)))
 (let ((?x3178 (* (- 2) ?x880)))
 (let ((?x3885 (+ (* 2 (* q q q r r r x d d)) (* 8 (* q q q r r r x d)) ?x3178 ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x3214 ?x3214 ?x3214 q q q)) ?x1527 ?x1967 ?x1974 (* 16 (* q q r r r r x d)) (* (- 4) (* q q r r r x x d)) ?x2650 ?x3212 ?x1525 ?x1444 ?x2689 ?x1540 ?x2726 (* 4 (* q q r r r r x d d)) ?x1467 ?x1541 ?x3244 ?x3168 ?x3179 ?x3173 ?x3181 ?x3194 ?x3184 ?x3191 ?x3197 ?x3199 ?x3205 ?x3203 ?x3192 ?x3226 ?x3225 ?x3210 ?x3213 ?x3243 ?x3247 (* (- 1) (* q q r r r x x d d)) (* 2 (* q q r x d)) (* 4 (* q r r x d)) (* (- 1) (* q r x x d)))))
 (let (($x3963 (not (= (* ?x3885 ?x3055) 0))))
 (let ((?x3252 (* 8 d)))
 (let ((?x1675 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 (* (- 4) (* d 2)) ?x3252 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3329 (* (- 64) ?x3328)))
 (let ((?x3255 (* 48 ?x3238)))
 (let ((?x3263 (* (- 32) ?x2704)))
 (let ((?x2696 (* r r r d d d)))
 (let ((?x3375 (* (- 32) ?x2696)))
 (let ((?x2631 (* r r r d)))
 (let ((?x1445 (* (- 128) ?x2631)))
 (let ((?x2630 (* r r r d d)))
 (let ((?x1535 (* (- 96) ?x2630)))
 (let ((?x3261 (* 64 ?x2610)))
 (let ((?x2032 (* r r r d d d d)))
 (let ((?x2595 (* (- 4) ?x2032)))
 (let ((?x3297 (* (- 1) d)))
 (let ((?x1612 (+ (- 2) q ?x138 ?x171 ?x3297)))
 (let ((?x3350 (+ (- 4) q)))
 (let ((?x504 (* q r r r d d d d)))
 (let ((?x1714 (+ ?x504 ?x1738 (* (- 1) (* ?x3350 ?x2792 ?x1612 ?x1612 r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x1612 ?x1612 ?x1612)) ?x1527 (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x1612 ?x1612 r r r)) (* (- 24) (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x3261 ?x2650 (* 48 (* q r r r d d)) (* 80 ?x2618) ?x1525 ?x1535 ?x1445 (* (- 4) (* r r r x d d d)) ?x1444 (* 48 (* r r r r d d)) (* 96 (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x3263 (* 12 (* q r r r d d d)) ?x2726 (* (- 48) (* r r r x d)) ?x1467 ?x1541 (* 8 (* r r r r d d d)) ?x3255 ?x3329)))
 (let ((?x3333 (* 2 (* d 4))))
 (let ((?x3339 (* (- 8) d)))
 (let ((?x3236 (* (- 48) ?x3238)))
 (let ((?x2715 (* 32 ?x2704)))
 (let ((?x2688 (* (- 64) ?x2610)))
 (let ((?x2954 (+ 2 q ?x138 ?x171 d)))
 (let ((?x2793 (+ 4 q)))
 (let ((?x1636 (+ (* (- 1) ?x504) (* (- 1) (* ?x2792 ?x2793 ?x2954 ?x2954 r)) ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x2954 ?x2954 ?x2954)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x2954 ?x2954 r r r)) ?x1527 (* 24 (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x2688 ?x2650 (* (- 48) (* q r r r d d)) (* (- 80) ?x2618) ?x1525 ?x1535 ?x1445 (* 4 (* r r r x d d d)) ?x1444 (* (- 48) (* r r r r d d)) (* (- 96) (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x2715 (* (- 12) (* q r r r d d d)) ?x2726 (* 48 (* r r r x d)) ?x1467 ?x1541 (* (- 8) (* r r r r d d d)) ?x3236 ?x3329)))
 (let ((?x916 (* ?x1636 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 ?x3339 ?x2968 ?x769 ?x2966 ?x3152 ?x3333))))
 (let (($x4490 (or (not (= ?x916 0)) (not (= (* ?x1714 ?x1675) 0)) $x3963 (not (= (* ?x4494 ?x4508) 0)))))
 (let (($x3129 (= ?x3055 0)))
 (and $x3129 $x4490)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1380 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2969 (* r d)))
 (let ((?x3152 (* (- 4) ?x2969)))
 (let ((?x2966 (* q d d)))
 (let ((?x769 (* 4 (* x d))))
 (let ((?x2968 (* (- 2) (* q d))))
 (let ((?x309 (* r00 d00)))
 (let ((?x310 (* 4 ?x309)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x203 (* 8 r)))
 (let ((?x3055 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3247 (* (- 2) (* q r x x))))
 (let ((?x3243 (* 8 (* q r r x))))
 (let ((?x3238 (* q r r r)))
 (let ((?x3213 (* (- 8) ?x3238)))
 (let ((?x3210 (* (- 16) (* q q q r r r r d))))
 (let ((?x3225 (* (- 4) (* q q q r r r r d d))))
 (let ((?x3226 (* 8 (* q q q r r r x))))
 (let ((?x3192 (* (- 16) (* q q r r r r r d))))
 (let ((?x3203 (* (- 16) (* q q q r r r r))))
 (let ((?x3205 (* (- 1) (* q q q q r r r d d))))
 (let ((?x3199 (* (- 4) (* q q q q r r r))))
 (let ((?x3197 (* (- 4) (* q q q q r r r d))))
 (let ((?x3191 (* (- 16) (* q q r r r r r))))
 (let ((?x3184 (* 16 (* q q r r r r x))))
 (let ((?x3194 (* (- 4) (* q q r r r r r d d))))
 (let ((?x3181 (* (- 4) (* q q r r r x x))))
 (let ((?x3173 (* (- 1) (* q q q r d))))
 (let ((?x3179 (* (- 4) (* q q r r d))))
 (let ((?x3168 (* (- 8) (* q q r r))))
 (let ((?x3244 (* 4 (* q q r x))))
 (let ((?x1541 (* 6 (* q r r r x d d))))
 (let ((?x1467 (* (- 2) (* q r r r r d d d))))
 (let ((?x2726 (* 8 (* q r r r x))))
 (let ((?x2693 (* q r r r r d d)))
 (let ((?x1540 (* (- 12) ?x2693)))
 (let ((?x2689 (* (- 16) (* q r r r r))))
 (let ((?x2684 (* q r r r r d)))
 (let ((?x1444 (* (- 24) ?x2684)))
 (let ((?x2619 (* q q r r r d)))
 (let ((?x1525 (* (- 12) ?x2619)))
 (let ((?x2618 (* q r r r d)))
 (let ((?x3212 (* (- 4) ?x2618)))
 (let ((?x2613 (* q q r r r d d)))
 (let ((?x2650 (* (- 6) ?x2613)))
 (let ((?x1974 (* q r r r x d d d)))
 (let ((?x1967 (* (- 8) (* q q r r r))))
 (let ((?x1527 (* 12 (* q r r r x d))))
 (let ((?x171 (* (- 1) x)))
 (let ((?x138 (* 2 r)))
 (let ((?x3214 (+ q ?x138 ?x171)))
 (let ((?x2792 (+ 2 d)))
 (let ((?x1738 (* (- 1) (* q q r r r d d d))))
 (let ((?x880 (* q q q r)))
 (let ((?x3178 (* (- 2) ?x880)))
 (let ((?x3885 (+ (* 2 (* q q q r r r x d d)) (* 8 (* q q q r r r x d)) ?x3178 ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x3214 ?x3214 ?x3214 q q q)) ?x1527 ?x1967 ?x1974 (* 16 (* q q r r r r x d)) (* (- 4) (* q q r r r x x d)) ?x2650 ?x3212 ?x1525 ?x1444 ?x2689 ?x1540 ?x2726 (* 4 (* q q r r r r x d d)) ?x1467 ?x1541 ?x3244 ?x3168 ?x3179 ?x3173 ?x3181 ?x3194 ?x3184 ?x3191 ?x3197 ?x3199 ?x3205 ?x3203 ?x3192 ?x3226 ?x3225 ?x3210 ?x3213 ?x3243 ?x3247 (* (- 1) (* q q r r r x x d d)) (* 2 (* q q r x d)) (* 4 (* q r r x d)) (* (- 1) (* q r x x d)))))
 (let (($x3963 (not (= (* ?x3885 ?x3055) 0))))
 (let ((?x3328 (* r r r)))
 (let ((?x3329 (* (- 64) ?x3328)))
 (let ((?x3255 (* 48 ?x3238)))
 (let ((?x2704 (* r r r x)))
 (let ((?x3263 (* (- 32) ?x2704)))
 (let ((?x2696 (* r r r d d d)))
 (let ((?x3375 (* (- 32) ?x2696)))
 (let ((?x2631 (* r r r d)))
 (let ((?x1445 (* (- 128) ?x2631)))
 (let ((?x2630 (* r r r d d)))
 (let ((?x1535 (* (- 96) ?x2630)))
 (let ((?x2610 (* r r r r)))
 (let ((?x3261 (* 64 ?x2610)))
 (let ((?x2032 (* r r r d d d d)))
 (let ((?x2595 (* (- 4) ?x2032)))
 (let ((?x3297 (* (- 1) d)))
 (let ((?x1612 (+ (- 2) q ?x138 ?x171 ?x3297)))
 (let ((?x3350 (+ (- 4) q)))
 (let ((?x504 (* q r r r d d d d)))
 (let ((?x1714 (+ ?x504 ?x1738 (* (- 1) (* ?x3350 ?x2792 ?x1612 ?x1612 r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x1612 ?x1612 ?x1612)) ?x1527 (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x1612 ?x1612 r r r)) (* (- 24) (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x3261 ?x2650 (* 48 (* q r r r d d)) (* 80 ?x2618) ?x1525 ?x1535 ?x1445 (* (- 4) (* r r r x d d d)) ?x1444 (* 48 (* r r r r d d)) (* 96 (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x3263 (* 12 (* q r r r d d d)) ?x2726 (* (- 48) (* r r r x d)) ?x1467 ?x1541 (* 8 (* r r r r d d d)) ?x3255 ?x3329)))
 (let ((?x3412 (* (- 2) d)))
 (let ((?x3892 (+ (- 4) q ?x138 ?x171 ?x3412)))
 (let ((?x3437 (+ (- 8) q)))
 (let ((?x3366 (* (- 256) ?x3328)))
 (let ((?x3367 (* 96 ?x3238)))
 (let ((?x3377 (* (- 64) ?x2704)))
 (let ((?x3372 (* 128 ?x2610)))
 (let ((?x4494 (+ (* 2 ?x504) ?x1738 ?x1527 (* (- 48) (* r r r x d d)) ?x1967 ?x1974 (* (- 16) ?x2032) ?x3372 ?x2650 (* 96 (* q r r r d d)) (* 160 ?x2618) ?x1525 (* (- 384) ?x2630) (* (- 512) ?x2631) (* (- 8) (* r r r x d d d)) ?x1444 (* 96 (* r r r r d d)) (* 192 (* r r r r d)) ?x2689 ?x1540 (* (- 128) ?x2696) ?x3377 (* 24 (* q r r r d d d)) ?x2726 (* (- 96) (* r r r x d)) ?x1467 ?x1541 (* 16 (* r r r r d d d)) ?x3367 ?x3366 (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x3892 ?x3892 ?x3892)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x3892 ?x3892 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x3892 ?x3892 r)))))
 (let ((?x3236 (* (- 48) ?x3238)))
 (let ((?x2715 (* 32 ?x2704)))
 (let ((?x2688 (* (- 64) ?x2610)))
 (let ((?x2954 (+ 2 q ?x138 ?x171 d)))
 (let ((?x2793 (+ 4 q)))
 (let ((?x1636 (+ (* (- 1) ?x504) (* (- 1) (* ?x2792 ?x2793 ?x2954 ?x2954 r)) ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x2954 ?x2954 ?x2954)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x2954 ?x2954 r r r)) ?x1527 (* 24 (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x2688 ?x2650 (* (- 48) (* q r r r d d)) (* (- 80) ?x2618) ?x1525 ?x1535 ?x1445 (* 4 (* r r r x d d d)) ?x1444 (* (- 48) (* r r r r d d)) (* (- 96) (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x2715 (* (- 12) (* q r r r d d d)) ?x2726 (* 48 (* r r r x d)) ?x1467 ?x1541 (* (- 8) (* r r r r d d d)) ?x3236 ?x3329)))
 (let (($x2679 (or (not (= (* ?x1636 ?x3055) 0)) (not (= (* ?x4494 ?x3055) 0)) (not (= (* ?x1714 ?x3055) 0)) $x3963)))
 (let (($x3129 (= ?x3055 0)))
 (let (($x405 (and $x3129 $x2679)))
 (let ((?x3362 (* 16 d)))
 (let ((?x4508 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 (* (- 8) (* d 2)) ?x3362 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3252 (* 8 d)))
 (let ((?x1675 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 (* (- 4) (* d 2)) ?x3252 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3333 (* 2 (* d 4))))
 (let ((?x3339 (* (- 8) d)))
 (let ((?x916 (* ?x1636 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 ?x3339 ?x2968 ?x769 ?x2966 ?x3152 ?x3333))))
 (let (($x4490 (or (not (= ?x916 0)) (not (= (* ?x1714 ?x1675) 0)) $x3963 (not (= (* ?x4494 ?x4508) 0)))))
 (let (($x4459 (and $x3129 $x4490)))
 (rewrite (= $x4459 $x405)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1786 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x176 (* 4 (* d00 r00))))
 (let ((?x3412 (* (- 2) d)))
 (let ((?x171 (* (- 1) x)))
 (let ((?x138 (* 2 r)))
 (let ((?x2951 (+ (- 4) ?x138 ?x171 q ?x3412)))
 (let ((?x2792 (+ 2 d)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x2942 (* 4 (* ?x2792 r))))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x239 (* (- 8) x)))
 (let ((?x419 (* 16 r)))
 (let ((?x1157 (+ (- 32) ?x419 ?x239 ?x30 (* (- 16) d) ?x174 ?x2942 ?x206 ?x222 (* (+ (- 8) q) ?x2792 ?x2792) (* (- 2) (* (+ (- 8) q) ?x2792)) ?x272 (* (- 4) (* ?x2792 ?x2951)) ?x176)))
 (let ((?x3437 (+ (- 8) q)))
 (let ((?x1133 (+ (* (- 1) (* ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 ?x2951 ?x2951)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x2951 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x2951 ?x2951 r)))))
 (let (($x3132 (not (= (* ?x1133 ?x1157) 0))))
 (let ((?x3107 (+ ?x419 ?x239 ?x30 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 q) (* (- 2) (* ?x2792 q)) ?x272 (* (- 4) (* ?x2792 (+ ?x138 ?x171 q))) ?x176)))
 (let ((?x1053 (+ ?x138 ?x171 q)))
 (let ((?x3104 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 r r r q)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 ?x1053 ?x1053 q q q)) (* (- 1) (* ?x2792 ?x2792 ?x1053 ?x1053 r r r q q)) (* (- 1) (* ?x2792 ?x1053 ?x1053 r q)))))
 (let (($x2950 (not (= (* ?x3104 ?x3107) 0))))
 (let ((?x3339 (* (- 8) d)))
 (let ((?x238 (+ (- 16) ?x419 ?x239 ?x30 ?x3339 ?x174 ?x2942 ?x206 ?x222 (* (+ (- 4) q) ?x2792 ?x2792) (* (- 2) (* (+ (- 4) q) ?x2792)) ?x272 (* (- 4) (* ?x2792 (+ (- 2) ?x138 ?x171 q (* (- 1) d)))) ?x176)))
 (let ((?x3297 (* (- 1) d)))
 (let ((?x577 (+ (- 2) ?x138 ?x171 q ?x3297)))
 (let ((?x3350 (+ (- 4) q)))
 (let ((?x543 (+ (* (- 1) (* ?x3350 ?x2792 ?x2792 ?x2792 ?x577 r r r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x577 ?x577 ?x577)) (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x577 ?x577 r r r)) (* (- 1) (* ?x3350 ?x2792 ?x577 ?x577 r)))))
 (let (($x996 (not (= (* ?x543 ?x238) 0))))
 (let ((?x3252 (* 8 d)))
 (let ((?x1575 (+ 16 ?x419 ?x239 ?x30 ?x3252 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 (+ 4 q)) (* (- 2) (* ?x2792 (+ 4 q))) ?x272 (* (- 4) (* ?x2792 (+ 2 ?x138 ?x171 q d))) ?x176)))
 (let ((?x3133 (+ 2 ?x138 ?x171 q d)))
 (let ((?x2793 (+ 4 q)))
 (let ((?x1537 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x3133 ?x3133 ?x3133)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x3133 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2793 ?x3133 ?x3133 r)))))
 (let (($x576 (not (= (* ?x1537 ?x1575) 0))))
 (let ((?x769 (* 4 (* x d))))
 (let ((?x203 (* 8 r)))
 (let ((?x2908 (+ ?x203 ?x174 ?x769 ?x206 ?x222 (* d d q) (* (- 2) (* d q)) ?x272 (* (- 4) (* d r)) ?x176)))
 (let (($x2911 (= ?x2908 0)))
 (and $x2911 (or $x576 $x996 $x2950 $x3132)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x4470 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2969 (* r d)))
 (let ((?x3152 (* (- 4) ?x2969)))
 (let ((?x2966 (* q d d)))
 (let ((?x769 (* 4 (* x d))))
 (let ((?x2968 (* (- 2) (* q d))))
 (let ((?x3362 (* 16 d)))
 (let ((?x309 (* r00 d00)))
 (let ((?x310 (* 4 ?x309)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x203 (* 8 r)))
 (let ((?x4508 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 (* (- 8) (* d 2)) ?x3362 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3412 (* (- 2) d)))
 (let ((?x171 (* (- 1) x)))
 (let ((?x138 (* 2 r)))
 (let ((?x3892 (+ (- 4) q ?x138 ?x171 ?x3412)))
 (let ((?x2792 (+ 2 d)))
 (let ((?x3437 (+ (- 8) q)))
 (let ((?x3328 (* r r r)))
 (let ((?x3366 (* (- 256) ?x3328)))
 (let ((?x3238 (* q r r r)))
 (let ((?x3367 (* 96 ?x3238)))
 (let ((?x1541 (* 6 (* q r r r x d d))))
 (let ((?x1467 (* (- 2) (* q r r r r d d d))))
 (let ((?x2726 (* 8 (* q r r r x))))
 (let ((?x2704 (* r r r x)))
 (let ((?x3377 (* (- 64) ?x2704)))
 (let ((?x2693 (* q r r r r d d)))
 (let ((?x1540 (* (- 12) ?x2693)))
 (let ((?x2689 (* (- 16) (* q r r r r))))
 (let ((?x2684 (* q r r r r d)))
 (let ((?x1444 (* (- 24) ?x2684)))
 (let ((?x2619 (* q q r r r d)))
 (let ((?x1525 (* (- 12) ?x2619)))
 (let ((?x2613 (* q q r r r d d)))
 (let ((?x2650 (* (- 6) ?x2613)))
 (let ((?x2610 (* r r r r)))
 (let ((?x3372 (* 128 ?x2610)))
 (let ((?x1974 (* q r r r x d d d)))
 (let ((?x1967 (* (- 8) (* q q r r r))))
 (let ((?x1527 (* 12 (* q r r r x d))))
 (let ((?x1738 (* (- 1) (* q q r r r d d d))))
 (let ((?x4494 (+ (* 2 (* q r r r d d d d)) ?x1738 ?x1527 (* (- 48) (* r r r x d d)) ?x1967 ?x1974 (* (- 16) (* r r r d d d d)) ?x3372 ?x2650 (* 96 (* q r r r d d)) (* 160 (* q r r r d)) ?x1525 (* (- 384) (* r r r d d)) (* (- 512) (* r r r d)) (* (- 8) (* r r r x d d d)) ?x1444 (* 96 (* r r r r d d)) (* 192 (* r r r r d)) ?x2689 ?x1540 (* (- 128) (* r r r d d d)) ?x3377 (* 24 (* q r r r d d d)) ?x2726 (* (- 96) (* r r r x d)) ?x1467 ?x1541 (* 16 (* r r r r d d d)) ?x3367 ?x3366 (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x3892 ?x3892 ?x3892)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x3892 ?x3892 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x3892 ?x3892 r)))))
 (let ((?x3055 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3247 (* (- 2) (* q r x x))))
 (let ((?x3243 (* 8 (* q r r x))))
 (let ((?x3213 (* (- 8) ?x3238)))
 (let ((?x3210 (* (- 16) (* q q q r r r r d))))
 (let ((?x3225 (* (- 4) (* q q q r r r r d d))))
 (let ((?x3226 (* 8 (* q q q r r r x))))
 (let ((?x3192 (* (- 16) (* q q r r r r r d))))
 (let ((?x3203 (* (- 16) (* q q q r r r r))))
 (let ((?x3205 (* (- 1) (* q q q q r r r d d))))
 (let ((?x3199 (* (- 4) (* q q q q r r r))))
 (let ((?x3197 (* (- 4) (* q q q q r r r d))))
 (let ((?x3191 (* (- 16) (* q q r r r r r))))
 (let ((?x3184 (* 16 (* q q r r r r x))))
 (let ((?x3194 (* (- 4) (* q q r r r r r d d))))
 (let ((?x3181 (* (- 4) (* q q r r r x x))))
 (let ((?x3173 (* (- 1) (* q q q r d))))
 (let ((?x3179 (* (- 4) (* q q r r d))))
 (let ((?x3168 (* (- 8) (* q q r r))))
 (let ((?x3244 (* 4 (* q q r x))))
 (let ((?x2618 (* q r r r d)))
 (let ((?x3212 (* (- 4) ?x2618)))
 (let ((?x3214 (+ q ?x138 ?x171)))
 (let ((?x880 (* q q q r)))
 (let ((?x3178 (* (- 2) ?x880)))
 (let ((?x3885 (+ (* 2 (* q q q r r r x d d)) (* 8 (* q q q r r r x d)) ?x3178 ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x3214 ?x3214 ?x3214 q q q)) ?x1527 ?x1967 ?x1974 (* 16 (* q q r r r r x d)) (* (- 4) (* q q r r r x x d)) ?x2650 ?x3212 ?x1525 ?x1444 ?x2689 ?x1540 ?x2726 (* 4 (* q q r r r r x d d)) ?x1467 ?x1541 ?x3244 ?x3168 ?x3179 ?x3173 ?x3181 ?x3194 ?x3184 ?x3191 ?x3197 ?x3199 ?x3205 ?x3203 ?x3192 ?x3226 ?x3225 ?x3210 ?x3213 ?x3243 ?x3247 (* (- 1) (* q q r r r x x d d)) (* 2 (* q q r x d)) (* 4 (* q r r x d)) (* (- 1) (* q r x x d)))))
 (let (($x3963 (not (= (* ?x3885 ?x3055) 0))))
 (let ((?x3252 (* 8 d)))
 (let ((?x1675 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 (* (- 4) (* d 2)) ?x3252 ?x2968 ?x769 ?x2966 ?x3152)))
 (let ((?x3329 (* (- 64) ?x3328)))
 (let ((?x3255 (* 48 ?x3238)))
 (let ((?x3263 (* (- 32) ?x2704)))
 (let ((?x2696 (* r r r d d d)))
 (let ((?x3375 (* (- 32) ?x2696)))
 (let ((?x2631 (* r r r d)))
 (let ((?x1445 (* (- 128) ?x2631)))
 (let ((?x2630 (* r r r d d)))
 (let ((?x1535 (* (- 96) ?x2630)))
 (let ((?x3261 (* 64 ?x2610)))
 (let ((?x2032 (* r r r d d d d)))
 (let ((?x2595 (* (- 4) ?x2032)))
 (let ((?x3297 (* (- 1) d)))
 (let ((?x1612 (+ (- 2) q ?x138 ?x171 ?x3297)))
 (let ((?x3350 (+ (- 4) q)))
 (let ((?x504 (* q r r r d d d d)))
 (let ((?x1714 (+ ?x504 ?x1738 (* (- 1) (* ?x3350 ?x2792 ?x1612 ?x1612 r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x1612 ?x1612 ?x1612)) ?x1527 (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x1612 ?x1612 r r r)) (* (- 24) (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x3261 ?x2650 (* 48 (* q r r r d d)) (* 80 ?x2618) ?x1525 ?x1535 ?x1445 (* (- 4) (* r r r x d d d)) ?x1444 (* 48 (* r r r r d d)) (* 96 (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x3263 (* 12 (* q r r r d d d)) ?x2726 (* (- 48) (* r r r x d)) ?x1467 ?x1541 (* 8 (* r r r r d d d)) ?x3255 ?x3329)))
 (let ((?x3333 (* 2 (* d 4))))
 (let ((?x3339 (* (- 8) d)))
 (let ((?x3236 (* (- 48) ?x3238)))
 (let ((?x2715 (* 32 ?x2704)))
 (let ((?x2688 (* (- 64) ?x2610)))
 (let ((?x2954 (+ 2 q ?x138 ?x171 d)))
 (let ((?x2793 (+ 4 q)))
 (let ((?x1636 (+ (* (- 1) ?x504) (* (- 1) (* ?x2792 ?x2793 ?x2954 ?x2954 r)) ?x1738 (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x2954 ?x2954 ?x2954)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x2954 ?x2954 r r r)) ?x1527 (* 24 (* r r r x d d)) ?x1967 ?x1974 ?x2595 ?x2688 ?x2650 (* (- 48) (* q r r r d d)) (* (- 80) ?x2618) ?x1525 ?x1535 ?x1445 (* 4 (* r r r x d d d)) ?x1444 (* (- 48) (* r r r r d d)) (* (- 96) (* r r r r d)) ?x2689 ?x1540 ?x3375 ?x2715 (* (- 12) (* q r r r d d d)) ?x2726 (* 48 (* r r r x d)) ?x1467 ?x1541 (* (- 8) (* r r r r d d d)) ?x3236 ?x3329)))
 (let ((?x916 (* ?x1636 (+ ?x203 ?x174 ?x222 ?x206 ?x272 ?x310 ?x3339 ?x2968 ?x769 ?x2966 ?x3152 ?x3333))))
 (let (($x4490 (or (not (= ?x916 0)) (not (= (* ?x1714 ?x1675) 0)) $x3963 (not (= (* ?x4494 ?x4508) 0)))))
 (let (($x3129 (= ?x3055 0)))
 (let (($x4459 (and $x3129 $x4490)))
 (let ((?x176 (* 4 (* d00 r00))))
 (let ((?x2942 (* 4 (* ?x2792 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x239 (* (- 8) x)))
 (let ((?x419 (* 16 r)))
 (let ((?x1157 (+ (- 32) ?x419 ?x239 ?x30 (* (- 16) d) ?x174 ?x2942 ?x206 ?x222 (* ?x3437 ?x2792 ?x2792) (* (- 2) (* ?x3437 ?x2792)) ?x272 (* (- 4) (* ?x2792 (+ (- 4) ?x138 ?x171 q ?x3412))) ?x176)))
 (let ((?x2951 (+ (- 4) ?x138 ?x171 q ?x3412)))
 (let ((?x1133 (+ (* (- 1) (* ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 ?x2951 ?x2951)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x2951 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x2951 ?x2951 r)))))
 (let (($x3132 (not (= (* ?x1133 ?x1157) 0))))
 (let ((?x3107 (+ ?x419 ?x239 ?x30 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 q) (* (- 2) (* ?x2792 q)) ?x272 (* (- 4) (* ?x2792 (+ ?x138 ?x171 q))) ?x176)))
 (let ((?x1053 (+ ?x138 ?x171 q)))
 (let ((?x3104 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 r r r q)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 ?x1053 ?x1053 q q q)) (* (- 1) (* ?x2792 ?x2792 ?x1053 ?x1053 r r r q q)) (* (- 1) (* ?x2792 ?x1053 ?x1053 r q)))))
 (let (($x2950 (not (= (* ?x3104 ?x3107) 0))))
 (let ((?x238 (+ (- 16) ?x419 ?x239 ?x30 ?x3339 ?x174 ?x2942 ?x206 ?x222 (* ?x3350 ?x2792 ?x2792) (* (- 2) (* ?x3350 ?x2792)) ?x272 (* (- 4) (* ?x2792 (+ (- 2) ?x138 ?x171 q ?x3297))) ?x176)))
 (let ((?x577 (+ (- 2) ?x138 ?x171 q ?x3297)))
 (let ((?x543 (+ (* (- 1) (* ?x3350 ?x2792 ?x2792 ?x2792 ?x577 r r r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x577 ?x577 ?x577)) (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x577 ?x577 r r r)) (* (- 1) (* ?x3350 ?x2792 ?x577 ?x577 r)))))
 (let (($x996 (not (= (* ?x543 ?x238) 0))))
 (let ((?x1575 (+ 16 ?x419 ?x239 ?x30 ?x3252 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 ?x2793) (* (- 2) (* ?x2792 ?x2793)) ?x272 (* (- 4) (* ?x2792 (+ 2 ?x138 ?x171 q d))) ?x176)))
 (let ((?x3133 (+ 2 ?x138 ?x171 q d)))
 (let ((?x1537 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x3133 ?x3133 ?x3133)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x3133 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2793 ?x3133 ?x3133 r)))))
 (let (($x576 (not (= (* ?x1537 ?x1575) 0))))
 (let ((?x2908 (+ ?x203 ?x174 ?x769 ?x206 ?x222 (* d d q) (* (- 2) (* d q)) ?x272 (* (- 4) (* d r)) ?x176)))
 (let (($x2911 (= ?x2908 0)))
 (let (($x959 (and $x2911 (or $x576 $x996 $x2950 $x3132))))
 (rewrite (= $x959 $x4459)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1910 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x176 (* 4 (* d00 r00))))
 (let ((?x3297 (* (- 1) d)))
 (let ((?x171 (* (- 1) x)))
 (let ((?x138 (* 2 r)))
 (let ((?x577 (+ (- 2) ?x138 ?x171 q ?x3297)))
 (let ((?x2792 (+ 2 d)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x2942 (* 4 (* ?x2792 r))))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x3339 (* (- 8) d)))
 (let ((?x30 (* 8 q)))
 (let ((?x239 (* (- 8) x)))
 (let ((?x419 (* 16 r)))
 (let ((?x238 (+ (- 16) ?x419 ?x239 ?x30 ?x3339 ?x174 ?x2942 ?x206 ?x222 (* (+ (- 4) q) ?x2792 ?x2792) (* (- 2) (* (+ (- 4) q) ?x2792)) ?x272 (* (- 4) (* ?x2792 ?x577)) ?x176)))
 (let ((?x3350 (+ (- 4) q)))
 (let ((?x543 (+ (* (- 1) (* ?x3350 ?x2792 ?x2792 ?x2792 ?x577 r r r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x577 ?x577 ?x577)) (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x577 ?x577 r r r)) (* (- 1) (* ?x3350 ?x2792 ?x577 ?x577 r)))))
 (let (($x996 (not (= (* ?x543 ?x238) 0))))
 (let ((?x3252 (* 8 d)))
 (let ((?x1575 (+ 16 ?x419 ?x239 ?x30 ?x3252 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 (+ 4 q)) (* (- 2) (* ?x2792 (+ 4 q))) ?x272 (* (- 4) (* ?x2792 (+ 2 ?x138 ?x171 q d))) ?x176)))
 (let ((?x3133 (+ 2 ?x138 ?x171 q d)))
 (let ((?x2793 (+ 4 q)))
 (let ((?x1537 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x3133 ?x3133 ?x3133)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x3133 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2793 ?x3133 ?x3133 r)))))
 (let (($x576 (not (= (* ?x1537 ?x1575) 0))))
 (let ((?x1157 (+ (- 32) ?x419 ?x239 ?x30 (* (- 16) d) ?x174 ?x2942 ?x206 ?x222 (* (+ (- 8) q) ?x2792 ?x2792) (* (- 2) (* (+ (- 8) q) ?x2792)) ?x272 (* (- 4) (* ?x2792 (+ (- 4) ?x138 ?x171 q (* (- 2) d)))) ?x176)))
 (let ((?x3412 (* (- 2) d)))
 (let ((?x2951 (+ (- 4) ?x138 ?x171 q ?x3412)))
 (let ((?x3437 (+ (- 8) q)))
 (let ((?x1133 (+ (* (- 1) (* ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 ?x2951 ?x2951)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x2951 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x2951 ?x2951 r)))))
 (let (($x3132 (not (= (* ?x1133 ?x1157) 0))))
 (let ((?x3107 (+ ?x419 ?x239 ?x30 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 q) (* (- 2) (* ?x2792 q)) ?x272 (* (- 4) (* ?x2792 (+ ?x138 ?x171 q))) ?x176)))
 (let ((?x1053 (+ ?x138 ?x171 q)))
 (let ((?x3104 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 r r r q)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 ?x1053 ?x1053 q q q)) (* (- 1) (* ?x2792 ?x2792 ?x1053 ?x1053 r r r q q)) (* (- 1) (* ?x2792 ?x1053 ?x1053 r q)))))
 (let (($x2950 (not (= (* ?x3104 ?x3107) 0))))
 (let ((?x769 (* 4 (* x d))))
 (let ((?x203 (* 8 r)))
 (let ((?x2908 (+ ?x203 ?x174 ?x769 ?x206 ?x222 (* d d q) (* (- 2) (* d q)) ?x272 (* (- 4) (* d r)) ?x176)))
 (let (($x2911 (= ?x2908 0)))
 (and $x2911 (or $x2950 $x3132 $x576 $x996)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1931 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x176 (* 4 (* d00 r00))))
 (let ((?x3412 (* (- 2) d)))
 (let ((?x171 (* (- 1) x)))
 (let ((?x138 (* 2 r)))
 (let ((?x2951 (+ (- 4) ?x138 ?x171 q ?x3412)))
 (let ((?x2792 (+ 2 d)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x2942 (* 4 (* ?x2792 r))))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x239 (* (- 8) x)))
 (let ((?x419 (* 16 r)))
 (let ((?x1157 (+ (- 32) ?x419 ?x239 ?x30 (* (- 16) d) ?x174 ?x2942 ?x206 ?x222 (* (+ (- 8) q) ?x2792 ?x2792) (* (- 2) (* (+ (- 8) q) ?x2792)) ?x272 (* (- 4) (* ?x2792 ?x2951)) ?x176)))
 (let ((?x3437 (+ (- 8) q)))
 (let ((?x1133 (+ (* (- 1) (* ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x3437 ?x3437 ?x2792 ?x2792 ?x2792 ?x2951 ?x2951 ?x2951)) (* (- 1) (* ?x3437 ?x3437 ?x2792 ?x2792 ?x2951 ?x2951 r r r)) (* (- 1) (* ?x3437 ?x2792 ?x2951 ?x2951 r)))))
 (let (($x3132 (not (= (* ?x1133 ?x1157) 0))))
 (let ((?x3107 (+ ?x419 ?x239 ?x30 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 q) (* (- 2) (* ?x2792 q)) ?x272 (* (- 4) (* ?x2792 (+ ?x138 ?x171 q))) ?x176)))
 (let ((?x1053 (+ ?x138 ?x171 q)))
 (let ((?x3104 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 r r r q)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x1053 ?x1053 ?x1053 q q q)) (* (- 1) (* ?x2792 ?x2792 ?x1053 ?x1053 r r r q q)) (* (- 1) (* ?x2792 ?x1053 ?x1053 r q)))))
 (let (($x2950 (not (= (* ?x3104 ?x3107) 0))))
 (let ((?x3339 (* (- 8) d)))
 (let ((?x238 (+ (- 16) ?x419 ?x239 ?x30 ?x3339 ?x174 ?x2942 ?x206 ?x222 (* (+ (- 4) q) ?x2792 ?x2792) (* (- 2) (* (+ (- 4) q) ?x2792)) ?x272 (* (- 4) (* ?x2792 (+ (- 2) ?x138 ?x171 q (* (- 1) d)))) ?x176)))
 (let ((?x3297 (* (- 1) d)))
 (let ((?x577 (+ (- 2) ?x138 ?x171 q ?x3297)))
 (let ((?x3350 (+ (- 4) q)))
 (let ((?x543 (+ (* (- 1) (* ?x3350 ?x2792 ?x2792 ?x2792 ?x577 r r r)) (* (- 1) (* ?x3350 ?x3350 ?x3350 ?x2792 ?x2792 ?x2792 ?x577 ?x577 ?x577)) (* (- 1) (* ?x3350 ?x3350 ?x2792 ?x2792 ?x577 ?x577 r r r)) (* (- 1) (* ?x3350 ?x2792 ?x577 ?x577 r)))))
 (let (($x996 (not (= (* ?x543 ?x238) 0))))
 (let ((?x3252 (* 8 d)))
 (let ((?x1575 (+ 16 ?x419 ?x239 ?x30 ?x3252 ?x174 ?x2942 ?x206 ?x222 (* ?x2792 ?x2792 (+ 4 q)) (* (- 2) (* ?x2792 (+ 4 q))) ?x272 (* (- 4) (* ?x2792 (+ 2 ?x138 ?x171 q d))) ?x176)))
 (let ((?x3133 (+ 2 ?x138 ?x171 q d)))
 (let ((?x2793 (+ 4 q)))
 (let ((?x1537 (+ (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2792 ?x2792 ?x2793 ?x2793 ?x2793 ?x3133 ?x3133 ?x3133)) (* (- 1) (* ?x2792 ?x2792 ?x2793 ?x2793 ?x3133 ?x3133 r r r)) (* (- 1) (* ?x2792 ?x2793 ?x3133 ?x3133 r)))))
 (let (($x576 (not (= (* ?x1537 ?x1575) 0))))
 (let ((?x769 (* 4 (* x d))))
 (let ((?x203 (* 8 r)))
 (let ((?x2908 (+ ?x203 ?x174 ?x769 ?x206 ?x222 (* d d q) (* (- 2) (* d q)) ?x272 (* (- 4) (* d r)) ?x176)))
 (let (($x2911 (= ?x2908 0)))
 (let (($x959 (and $x2911 (or $x576 $x996 $x2950 $x3132))))
 (let (($x999 (and $x2911 (or $x2950 $x3132 $x576 $x996))))
 (rewrite (= $x999 $x959)))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x167 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x140 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x146 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x159 (- (* (- 1) ?x62 ?x62 ?x62 ?x146 ?x140 r r r) (* ?x62 ?x62 ?x62 ?x146 ?x146 ?x146 ?x140 ?x140 ?x140))))
 (let ((?x161 (- (- ?x159 (* ?x62 ?x62 ?x146 ?x146 ?x140 ?x140 r r r)) (* ?x62 ?x146 ?x140 ?x140 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x144 (- (+ (- (* 8 ?x140) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x151 (+ (- (+ (- ?x144 ?x41) (* ?x62 ?x62 ?x146)) (* 2 ?x62 ?x146)) ?x49)))
 (let ((?x113 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x119 (- q 4)))
 (let ((?x132 (- (* (- 1) ?x62 ?x62 ?x62 ?x119 ?x113 r r r) (* ?x62 ?x62 ?x62 ?x119 ?x119 ?x119 ?x113 ?x113 ?x113))))
 (let ((?x134 (- (- ?x132 (* ?x62 ?x62 ?x119 ?x119 ?x113 ?x113 r r r)) (* ?x62 ?x119 ?x113 ?x113 r))))
 (let ((?x117 (- (+ (- (* 8 ?x113) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x124 (+ (- (+ (- ?x117 ?x41) (* ?x62 ?x62 ?x119)) (* 2 ?x62 ?x119)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x88 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 ?x62 ?x62 q ?x88 r r r) (* ?x62 ?x62 ?x62 q q q ?x88 ?x88 ?x88))))
 (let ((?x108 (- (- ?x106 (* ?x62 ?x62 q q ?x88 ?x88 r r r)) (* ?x62 q ?x88 ?x88 r))))
 (let ((?x92 (- (+ (- (* 8 ?x88) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x98 (+ (- (+ (- ?x92 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x82 (- (* (- 1) ?x62 ?x62 ?x62 ?x67 ?x59 r r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x84 (- (- ?x82 (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 r r r)) (* ?x62 ?x67 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x165 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x84) 0)) (not (= (* (+ (- ?x98 (* 4 ?x62 ?x88)) ?x53) ?x108) 0)) (not (= (* (+ (- ?x124 (* 4 ?x62 ?x113)) ?x53) ?x134) 0)) (not (= (* (+ (- ?x151 (* 4 ?x62 ?x140)) ?x53) ?x161) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x165))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1896 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x176 (* 4 (* d00 r00))))
 (let ((?x1204 (* (- 1) d)))
 (let ((?x171 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x2812 (+ (- 2) ?x57 ?x171 q ?x1204)))
 (let ((?x277 (+ 2 d)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x797 (* 4 (* ?x277 r))))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x464 (* (- 8) d)))
 (let ((?x965 (* 8 q)))
 (let ((?x239 (* (- 8) x)))
 (let ((?x251 (* 16 r)))
 (let ((?x845 (+ (- 16) ?x251 ?x239 ?x965 ?x464 ?x174 ?x797 ?x206 ?x222 (* (+ (- 4) q) ?x277 ?x277) (* (- 2) (* (+ (- 4) q) ?x277)) ?x272 (* (- 4) (* ?x277 ?x2812)) ?x176)))
 (let ((?x449 (+ (- 4) q)))
 (let ((?x376 (+ (* (- 1) (* ?x449 ?x277 ?x277 ?x277 ?x2812 r r r)) (* (- 1) (* ?x449 ?x449 ?x449 ?x277 ?x277 ?x277 ?x2812 ?x2812 ?x2812)) (* (- 1) (* ?x449 ?x449 ?x277 ?x277 ?x2812 ?x2812 r r r)) (* (- 1) (* ?x449 ?x277 ?x2812 ?x2812 r)))))
 (let ((?x203 (* 8 d)))
 (let ((?x2461 (+ 16 ?x251 ?x239 ?x965 ?x203 ?x174 ?x797 ?x206 ?x222 (* ?x277 ?x277 (+ 4 q)) (* (- 2) (* ?x277 (+ 4 q))) ?x272 (* (- 4) (* ?x277 (+ 2 ?x57 ?x171 q d))) ?x176)))
 (let ((?x201 (+ 2 ?x57 ?x171 q d)))
 (let ((?x361 (+ 4 q)))
 (let ((?x975 (+ (* (- 1) (* ?x277 ?x277 ?x277 ?x361 ?x201 r r r)) (* (- 1) (* ?x277 ?x277 ?x277 ?x361 ?x361 ?x361 ?x201 ?x201 ?x201)) (* (- 1) (* ?x277 ?x277 ?x361 ?x361 ?x201 ?x201 r r r)) (* (- 1) (* ?x277 ?x361 ?x201 ?x201 r)))))
 (let ((?x2004 (+ (- 32) ?x251 ?x239 ?x965 (* (- 16) d) ?x174 ?x797 ?x206 ?x222 (* (+ (- 8) q) ?x277 ?x277) (* (- 2) (* (+ (- 8) q) ?x277)) ?x272 (* (- 4) (* ?x277 (+ (- 4) ?x57 ?x171 q (* (- 2) d)))) ?x176)))
 (let ((?x2586 (* (- 2) d)))
 (let ((?x750 (+ (- 4) ?x57 ?x171 q ?x2586)))
 (let ((?x2150 (+ (- 8) q)))
 (let ((?x2060 (+ (* (- 1) (* ?x2150 ?x277 ?x277 ?x277 ?x750 r r r)) (* (- 1) (* ?x2150 ?x2150 ?x2150 ?x277 ?x277 ?x277 ?x750 ?x750 ?x750)) (* (- 1) (* ?x2150 ?x2150 ?x277 ?x277 ?x750 ?x750 r r r)) (* (- 1) (* ?x2150 ?x277 ?x750 ?x750 r)))))
 (let ((?x751 (+ ?x251 ?x239 ?x965 ?x174 ?x797 ?x206 ?x222 (* ?x277 ?x277 q) (* (- 2) (* ?x277 q)) ?x272 (* (- 4) (* ?x277 (+ ?x57 ?x171 q))) ?x176)))
 (let ((?x450 (+ ?x57 ?x171 q)))
 (let ((?x2927 (+ (* (- 1) (* ?x277 ?x277 ?x277 ?x450 r r r q)) (* (- 1) (* ?x277 ?x277 ?x277 ?x450 ?x450 ?x450 q q q)) (* (- 1) (* ?x277 ?x277 ?x450 ?x450 r r r q q)) (* (- 1) (* ?x277 ?x450 ?x450 r q)))))
 (let (($x3064 (or (not (= (* ?x2927 ?x751) 0)) (not (= (* ?x2060 ?x2004) 0)) (not (= (* ?x975 ?x2461) 0)) (not (= (* ?x376 ?x845) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1187 (+ ?x30 ?x174 (* 4 (* x d)) ?x206 ?x222 ?x44 (* (- 2) (* d q)) ?x272 (* (- 4) (* d r)) ?x176)))
 (and (= ?x1187 0) $x3064))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x968 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x176 (* 4 (* d00 r00))))
 (let ((?x1204 (* (- 1) d)))
 (let ((?x171 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x2812 (+ (- 2) ?x57 ?x171 q ?x1204)))
 (let ((?x277 (+ 2 d)))
 (let ((?x271 (* d00 q00)))
 (let ((?x272 (* 2 ?x271)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x222 (* (- 1) ?x41)))
 (let ((?x192 (* d00 x00)))
 (let ((?x206 (* (- 4) ?x192)))
 (let ((?x797 (* 4 (* ?x277 r))))
 (let ((?x174 (* (- 8) r00)))
 (let ((?x464 (* (- 8) d)))
 (let ((?x965 (* 8 q)))
 (let ((?x239 (* (- 8) x)))
 (let ((?x251 (* 16 r)))
 (let ((?x845 (+ (- 16) ?x251 ?x239 ?x965 ?x464 ?x174 ?x797 ?x206 ?x222 (* (+ (- 4) q) ?x277 ?x277) (* (- 2) (* (+ (- 4) q) ?x277)) ?x272 (* (- 4) (* ?x277 ?x2812)) ?x176)))
 (let ((?x449 (+ (- 4) q)))
 (let ((?x376 (+ (* (- 1) (* ?x449 ?x277 ?x277 ?x277 ?x2812 r r r)) (* (- 1) (* ?x449 ?x449 ?x449 ?x277 ?x277 ?x277 ?x2812 ?x2812 ?x2812)) (* (- 1) (* ?x449 ?x449 ?x277 ?x277 ?x2812 ?x2812 r r r)) (* (- 1) (* ?x449 ?x277 ?x2812 ?x2812 r)))))
 (let ((?x203 (* 8 d)))
 (let ((?x2461 (+ 16 ?x251 ?x239 ?x965 ?x203 ?x174 ?x797 ?x206 ?x222 (* ?x277 ?x277 (+ 4 q)) (* (- 2) (* ?x277 (+ 4 q))) ?x272 (* (- 4) (* ?x277 (+ 2 ?x57 ?x171 q d))) ?x176)))
 (let ((?x201 (+ 2 ?x57 ?x171 q d)))
 (let ((?x361 (+ 4 q)))
 (let ((?x975 (+ (* (- 1) (* ?x277 ?x277 ?x277 ?x361 ?x201 r r r)) (* (- 1) (* ?x277 ?x277 ?x277 ?x361 ?x361 ?x361 ?x201 ?x201 ?x201)) (* (- 1) (* ?x277 ?x277 ?x361 ?x361 ?x201 ?x201 r r r)) (* (- 1) (* ?x277 ?x361 ?x201 ?x201 r)))))
 (let ((?x2004 (+ (- 32) ?x251 ?x239 ?x965 (* (- 16) d) ?x174 ?x797 ?x206 ?x222 (* (+ (- 8) q) ?x277 ?x277) (* (- 2) (* (+ (- 8) q) ?x277)) ?x272 (* (- 4) (* ?x277 (+ (- 4) ?x57 ?x171 q (* (- 2) d)))) ?x176)))
 (let ((?x2586 (* (- 2) d)))
 (let ((?x750 (+ (- 4) ?x57 ?x171 q ?x2586)))
 (let ((?x2150 (+ (- 8) q)))
 (let ((?x2060 (+ (* (- 1) (* ?x2150 ?x277 ?x277 ?x277 ?x750 r r r)) (* (- 1) (* ?x2150 ?x2150 ?x2150 ?x277 ?x277 ?x277 ?x750 ?x750 ?x750)) (* (- 1) (* ?x2150 ?x2150 ?x277 ?x277 ?x750 ?x750 r r r)) (* (- 1) (* ?x2150 ?x277 ?x750 ?x750 r)))))
 (let ((?x751 (+ ?x251 ?x239 ?x965 ?x174 ?x797 ?x206 ?x222 (* ?x277 ?x277 q) (* (- 2) (* ?x277 q)) ?x272 (* (- 4) (* ?x277 (+ ?x57 ?x171 q))) ?x176)))
 (let ((?x450 (+ ?x57 ?x171 q)))
 (let ((?x2927 (+ (* (- 1) (* ?x277 ?x277 ?x277 ?x450 r r r q)) (* (- 1) (* ?x277 ?x277 ?x277 ?x450 ?x450 ?x450 q q q)) (* (- 1) (* ?x277 ?x277 ?x450 ?x450 r r r q q)) (* (- 1) (* ?x277 ?x450 ?x450 r q)))))
 (let (($x3064 (or (not (= (* ?x2927 ?x751) 0)) (not (= (* ?x2060 ?x2004) 0)) (not (= (* ?x975 ?x2461) 0)) (not (= (* ?x376 ?x845) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1187 (+ ?x30 ?x174 (* 4 (* x d)) ?x206 ?x222 ?x44 (* (- 2) (* d q)) ?x272 (* (- 4) (* d r)) ?x176)))
 (let (($x3065 (and (= ?x1187 0) $x3064)))
 (let ((?x140 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x146 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x159 (- (* (- 1) ?x62 ?x62 ?x62 ?x146 ?x140 r r r) (* ?x62 ?x62 ?x62 ?x146 ?x146 ?x146 ?x140 ?x140 ?x140))))
 (let ((?x161 (- (- ?x159 (* ?x62 ?x62 ?x146 ?x146 ?x140 ?x140 r r r)) (* ?x62 ?x146 ?x140 ?x140 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x144 (- (+ (- (* 8 ?x140) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x151 (+ (- (+ (- ?x144 ?x41) (* ?x62 ?x62 ?x146)) (* 2 ?x62 ?x146)) ?x49)))
 (let ((?x113 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x119 (- q 4)))
 (let ((?x132 (- (* (- 1) ?x62 ?x62 ?x62 ?x119 ?x113 r r r) (* ?x62 ?x62 ?x62 ?x119 ?x119 ?x119 ?x113 ?x113 ?x113))))
 (let ((?x134 (- (- ?x132 (* ?x62 ?x62 ?x119 ?x119 ?x113 ?x113 r r r)) (* ?x62 ?x119 ?x113 ?x113 r))))
 (let ((?x117 (- (+ (- (* 8 ?x113) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x124 (+ (- (+ (- ?x117 ?x41) (* ?x62 ?x62 ?x119)) (* 2 ?x62 ?x119)) ?x49)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x88 (+ ?x58 q)))
 (let ((?x106 (- (* (- 1) ?x62 ?x62 ?x62 q ?x88 r r r) (* ?x62 ?x62 ?x62 q q q ?x88 ?x88 ?x88))))
 (let ((?x108 (- (- ?x106 (* ?x62 ?x62 q q ?x88 ?x88 r r r)) (* ?x62 q ?x88 ?x88 r))))
 (let ((?x92 (- (+ (- (* 8 ?x88) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x98 (+ (- (+ (- ?x92 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x82 (- (* (- 1) ?x62 ?x62 ?x62 ?x67 ?x59 r r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59))))
 (let ((?x84 (- (- ?x82 (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 r r r)) (* ?x62 ?x67 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x165 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x84) 0)) (not (= (* (+ (- ?x98 (* 4 ?x62 ?x88)) ?x53) ?x108) 0)) (not (= (* (+ (- ?x124 (* 4 ?x62 ?x113)) ?x53) ?x134) 0)) (not (= (* (+ (- ?x151 (* 4 ?x62 ?x140)) ?x53) ?x161) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x166 (and (= ?x54 0) $x165)))
 (rewrite (= $x166 $x3065))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1993 (trans (quant-intro (proof-bind ?x968) (= $x167 $x1896)) (elim-unused (= $x1896 $x1910)) (= $x167 $x1910))))
 (let ((@x27 (asserted $x167)))
 (let ((@x3044 (mp (mp @x27 @x1993 $x1910) (quant-intro (proof-bind ?x1931) (= $x1910 $x1786)) $x1786)))
 (let ((@x700 (mp (mp @x3044 (rewrite (= $x1786 $x1786)) $x1786) (quant-intro (proof-bind ?x4470) (= $x1786 $x4473)) $x4473)))
 (let ((@x1352 (mp~ (mp @x700 (quant-intro (proof-bind ?x1380) (= $x4473 $x1235)) $x1235) (sk (~ $x1235 $x1393)) $x1393)))
 (let ((@x4259 (mp @x1352 (rewrite (= $x1393 $x4209)) $x4209)))
 (let ((@x4283 (and-elim @x4259 $x1340)))
 (let ((@x1801 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1340) $x1522)) @x4283 $x1522)))
 (let (($x3921 (<= ?x1337 0)))
 (let ((@x1526 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1340) $x3921)) @x4283 $x3921)))
 (let (($x3482 (not (<= ?x4196 0))))
 (let (($x4255 (<= ?x4268 0)))
 (let (($x4166 (>= ?x4268 0)))
 (let ((@x4274 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4286 (not $x4255) (not $x4166))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x4166)) @x1526 @x1801 false) $x4166) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x4255)) @x1526 @x1801 false) $x4255) $x4286)))
 (let (($x1313 (>= ?x4245 0)))
 (let (($x1333 (<= ?x4245 0)))
 (let ((@x4336 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x937 (not $x1333) (not $x1313))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1333)) @x1526 @x1801 false) $x1333) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1313)) @x1526 @x1801 false) $x1313) $x937)))
 (let (($x4237 (>= ?x4195 0)))
 (let (($x4278 (<= ?x4195 0)))
 (let ((@x4319 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1781 (not $x4278) (not $x4237))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x4278)) @x1526 @x1801 false) $x4278) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x4237)) @x1526 @x1801 false) $x4237) $x1781)))
 (let ((@x4239 (unit-resolution (unit-resolution (and-elim @x4259 $x4184) @x4319 @x4336 (or $x1284 $x4304)) @x4274 $x4304)))
 (let (($x4310 (>= ?x4196 0)))
 (let ((@x988 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2875 $x3482 (not $x4310))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x4310)) @x1526 @x1801 false) $x4310) @x4239 $x3482)))
 ((_ th-lemma arith farkas 1 1 1) @x988 @x1526 @x1801 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        58
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1584
 :arith-nonlinear-bounds    20
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 134
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.30
 :memory                    3.57
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1933644
 :num-checks                1
 :propagations              36
 :rlimit-count              17444
 :time                      0.02
 :total-time                0.03)
