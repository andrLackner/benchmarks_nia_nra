unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun q!3 () Int)
(declare-fun b!2 () Int)
(declare-fun s!0 () Int)
(proof
(let ((?x616 (* q00 a00 r!1)))
 (let ((?x601 (* r00 b00 p!5)))
 (let ((?x593 (* p00 s00 a!4)))
 (let ((?x620 (+ ?x593 (* (- 1) (* q00 r00 a!4)) ?x601 (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) ?x616)))
 (let (($x629 (>= ?x620 0)))
 (let (($x615 (= ?x620 0)))
 (let ((?x639 (* q00 a00 s!0)))
 (let ((?x658 (* (- 1) (* s00 a00 q!3))))
 (let ((?x630 (* r00 b00 q!3)))
 (let ((?x657 (* (- 1) (* p00 b00 s!0))))
 (let ((?x656 (* (- 1) (* q00 r00 b!2))))
 (let ((?x676 (* (- 1) ?x616)))
 (let ((?x610 (* s00 a00 p!5)))
 (let ((?x605 (* p00 b00 r!1)))
 (let ((?x673 (* (- 1) ?x601)))
 (let ((?x600 (* p00 s00 b!2)))
 (let ((?x596 (* q00 r00 a!4)))
 (let ((?x671 (* (- 1) ?x593)))
 (let ((?x519 (+ p!5 (* (- 1) q!3))))
 (let ((?x510 (* (- 1) b!2)))
 (let ((?x901 (+ ?x510 a!4)))
 (let ((?x504 (* (- 1) s!0)))
 (let ((?x683 (+ ?x504 r!1)))
 (let ((?x884 (* ?x683 ?x683 ?x683 ?x683 ?x683 ?x683 ?x683 ?x683 ?x901 ?x901 ?x901 ?x519 ?x519 ?x519 (+ ?x671 ?x596 ?x600 ?x673 ?x605 ?x610 ?x676 ?x656 ?x657 ?x630 ?x658 ?x639) s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let (($x898 (= ?x884 0)))
 (let ((?x184 (+ (* (- 1) p!5) q!3)))
 (let ((?x241 (* (- 1) a!4)))
 (let ((?x668 (+ b!2 ?x241)))
 (let ((?x353 (* (- 1) r!1)))
 (let ((?x665 (+ s!0 ?x353)))
 (let ((?x682 (* ?x665 ?x665 ?x665 ?x665 ?x665 ?x665 ?x665 ?x665 ?x665 ?x668 ?x668 ?x668 ?x668 ?x668 ?x668 ?x668 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 (+ ?x671 ?x596 ?x673 ?x605 ?x610 ?x676) r!1 r!1 r!1 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let (($x681 (= ?x682 0)))
 (let (($x684 (not $x681)))
 (let (($x896 (or $x684 (not $x898))))
 (let ((?x659 (+ ?x600 ?x656 ?x657 ?x630 ?x658 ?x639)))
 (let (($x660 (= ?x659 0)))
 (let ((?x348 (* p!5 b!2)))
 (let ((?x127 (* q00 a00)))
 (let (($x129 (= (+ ?x127 (* (- 1) (* p00 b00)) (* (- 1) (* q!3 a!4)) ?x348) 0)))
 (let ((?x294 (* b!2 r!1)))
 (let ((?x123 (* s00 a00)))
 (let (($x588 (= (+ ?x123 (* (- 1) (* r00 b00)) ?x294 (* (- 1) (* s!0 a!4))) 0)))
 (let ((?x113 (* q!3 r!1)))
 (let ((?x37 (* p00 s00)))
 (let (($x121 (= (+ ?x37 (* (- 1) (* q00 r00)) ?x113 (* (- 1) (* s!0 p!5))) 0)))
 (let (($x927 (and $x121 $x588 $x129 $x615 $x660 $x896)))
 (let ((?x214 (* s!0 q00 a00)))
 (let ((?x427 (* q!3 r00 b00)))
 (let ((?x326 (* r!1 q00 a00)))
 (let ((?x314 (* (- 1) ?x326)))
 (let ((?x317 (* p!5 s00 a00)))
 (let ((?x292 (* r!1 p00 b00)))
 (let ((?x417 (* p!5 r00 b00)))
 (let ((?x186 (* (- 1) ?x417)))
 (let ((?x327 (* b!2 p00 s00)))
 (let ((?x133 (* a!4 q00 r00)))
 (let ((?x431 (* a!4 p00 s00)))
 (let ((?x185 (* (- 1) ?x431)))
 (let ((?x232 (+ ?x185 ?x133 (* (- 1) (* b!2 q00 r00)) ?x327 ?x186 ?x292 ?x317 ?x314 (* (- 1) (* s!0 p00 b00)) ?x427 (* (- 1) (* q!3 s00 a00)) ?x214)))
 (let ((?x511 (+ a!4 ?x510)))
 (let ((?x508 (+ r!1 ?x504)))
 (let ((?x435 (* ?x508 ?x508 ?x508 ?x508 ?x508 ?x508 ?x508 ?x508 ?x511 ?x511 ?x511 ?x519 ?x519 ?x519 ?x232 s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 s!0 b!2 b!2 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3 q!3 q!3 q!3 q!3 q!3 q!3)))
 (let ((?x357 (+ ?x241 b!2)))
 (let ((?x442 (+ ?x353 s!0)))
 (let ((?x161 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x357 ?x357 ?x357 ?x357 ?x357 ?x357 ?x357 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 ?x184 (+ ?x185 ?x133 ?x186 ?x292 ?x317 ?x314) r!1 r!1 r!1 r!1 r!1 r!1 r!1 r!1 a!4 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x416 (* q!3 s00 a00)))
 (let ((?x432 (* s!0 p00 b00)))
 (let ((?x124 (* b!2 q00 r00)))
 (let (($x235 (= (+ ?x124 (* (- 1) ?x327) ?x432 (* (- 1) ?x427) ?x416 (* (- 1) ?x214)) 0)))
 (let (($x224 (= (+ ?x431 (* (- 1) ?x133) ?x417 (* (- 1) ?x292) (* (- 1) ?x317) ?x326) 0)))
 (let (($x152 (= (+ (* a!4 q!3) (* (- 1) ?x127) (* p00 b00) (* (- 1) ?x348)) 0)))
 (let (($x412 (= (+ (* a!4 s!0) (* (- 1) ?x294) (* (- 1) ?x123) (* r00 b00)) 0)))
 (let (($x382 (= (+ (* p!5 s!0) (* (- 1) ?x37) (* q00 r00) (* (- 1) ?x113)) 0)))
 (let (($x296 (and $x382 $x412 $x152 $x224 $x235 (or (not (= ?x161 0)) (not (= ?x435 0))))))
 (let (($x464 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x291 (* s q00 a00)))
 (let ((?x280 (* q s00 a00)))
 (let ((?x384 (* (- 1) ?x280)))
 (let ((?x246 (* q r00 b00)))
 (let ((?x245 (* s p00 b00)))
 (let ((?x349 (* (- 1) ?x245)))
 (let ((?x216 (* r q00 a00)))
 (let ((?x222 (* (- 1) ?x216)))
 (let ((?x205 (* p s00 a00)))
 (let ((?x202 (* r p00 b00)))
 (let ((?x182 (* p r00 b00)))
 (let ((?x183 (* (- 1) ?x182)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x364 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x191 (* (- 1) ?x63)))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x529 (* ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 (+ ?x191 ?x66 ?x364 ?x76 ?x183 ?x202 ?x205 ?x222 ?x349 ?x246 ?x384 ?x291) s s s s s s s s s b b b b b b b q q q q q q q q q)))
 (let ((?x228 (+ ?x191 ?x66 ?x183 ?x202 ?x205 ?x222)))
 (let ((?x281 (* (- 1) p)))
 (let ((?x288 (+ ?x281 q)))
 (let ((?x252 (* (- 1) a)))
 (let ((?x266 (+ ?x252 b)))
 (let ((?x299 (* (- 1) r)))
 (let ((?x310 (+ ?x299 s)))
 (let ((?x390 (* ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x266 ?x266 ?x266 ?x266 ?x266 ?x266 ?x266 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x228 r r r r r r r r a a a p p p)))
 (let (($x308 (= (+ ?x72 (* (- 1) ?x76) ?x245 (* (- 1) ?x246) ?x280 (* (- 1) ?x291)) 0)))
 (let (($x240 (= (+ ?x63 (* (- 1) ?x66) ?x182 (* (- 1) ?x202) (* (- 1) ?x205) ?x216) 0)))
 (let ((?x128 (* p00 b00)))
 (let ((?x127 (* q00 a00)))
 (let ((?x171 (* (- 1) ?x127)))
 (let (($x174 (= (+ (* a q) ?x171 ?x128 (* (- 1) (* p b))) 0)))
 (let ((?x141 (* r00 b00)))
 (let ((?x123 (* s00 a00)))
 (let ((?x130 (* (- 1) ?x123)))
 (let ((?x49 (* a s)))
 (let (($x156 (= (+ ?x49 (* (- 1) (* b r)) ?x130 ?x141) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x151 (= (+ ?x33 ?x132 ?x41 (* (- 1) (* q r))) 0)))
 (and $x151 $x156 $x174 $x240 $x308 (or (not (= ?x390 0)) (not (= ?x529 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x168 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x65 (* b00 p00 r)))
 (let ((?x426 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x281 (* (- 1) p)))
 (let ((?x290 (+ q ?x281)))
 (let ((?x252 (* (- 1) a)))
 (let ((?x319 (+ b ?x252)))
 (let ((?x299 (* (- 1) r)))
 (let ((?x389 (+ s ?x299)))
 (let ((?x393 (* ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x319 ?x319 ?x319 ?x319 ?x319 ?x319 ?x319 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x426 r r r r r r r r a a a p p p)))
 (let ((?x234 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x136 (* ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x234 s s s s s s s s s b b b b b b b q q q q q q q q q)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x370 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x197 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x180 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x132 ?x41) 0) (= ?x180 0) $x197 (= ?x426 0) (= ?x370 0) (or (not (= ?x136 0)) (not (= ?x393 0))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x229 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x291 (* s q00 a00)))
 (let ((?x280 (* q s00 a00)))
 (let ((?x384 (* (- 1) ?x280)))
 (let ((?x246 (* q r00 b00)))
 (let ((?x245 (* s p00 b00)))
 (let ((?x349 (* (- 1) ?x245)))
 (let ((?x216 (* r q00 a00)))
 (let ((?x222 (* (- 1) ?x216)))
 (let ((?x205 (* p s00 a00)))
 (let ((?x202 (* r p00 b00)))
 (let ((?x182 (* p r00 b00)))
 (let ((?x183 (* (- 1) ?x182)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x364 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x191 (* (- 1) ?x63)))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x529 (* ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 (+ ?x191 ?x66 ?x364 ?x76 ?x183 ?x202 ?x205 ?x222 ?x349 ?x246 ?x384 ?x291) s s s s s s s s s b b b b b b b q q q q q q q q q)))
 (let ((?x228 (+ ?x191 ?x66 ?x183 ?x202 ?x205 ?x222)))
 (let ((?x281 (* (- 1) p)))
 (let ((?x288 (+ ?x281 q)))
 (let ((?x252 (* (- 1) a)))
 (let ((?x266 (+ ?x252 b)))
 (let ((?x299 (* (- 1) r)))
 (let ((?x310 (+ ?x299 s)))
 (let ((?x390 (* ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x310 ?x266 ?x266 ?x266 ?x266 ?x266 ?x266 ?x266 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x288 ?x228 r r r r r r r r a a a p p p)))
 (let (($x308 (= (+ ?x72 (* (- 1) ?x76) ?x245 (* (- 1) ?x246) ?x280 (* (- 1) ?x291)) 0)))
 (let (($x240 (= (+ ?x63 (* (- 1) ?x66) ?x182 (* (- 1) ?x202) (* (- 1) ?x205) ?x216) 0)))
 (let ((?x128 (* p00 b00)))
 (let ((?x127 (* q00 a00)))
 (let ((?x171 (* (- 1) ?x127)))
 (let (($x174 (= (+ (* a q) ?x171 ?x128 (* (- 1) (* p b))) 0)))
 (let ((?x141 (* r00 b00)))
 (let ((?x123 (* s00 a00)))
 (let ((?x130 (* (- 1) ?x123)))
 (let ((?x49 (* a s)))
 (let (($x156 (= (+ ?x49 (* (- 1) (* b r)) ?x130 ?x141) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x151 (= (+ ?x33 ?x132 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x589 (and $x151 $x156 $x174 $x240 $x308 (or (not (= ?x390 0)) (not (= ?x529 0))))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x426 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x290 (+ q ?x281)))
 (let ((?x319 (+ b ?x252)))
 (let ((?x389 (+ s ?x299)))
 (let ((?x393 (* ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x319 ?x319 ?x319 ?x319 ?x319 ?x319 ?x319 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x426 r r r r r r r r a a a p p p)))
 (let ((?x234 (+ (* (- 1) (* b00 r00 ?x251)) (* (- 1) (* p00 s00 ?x272)) (* b00 p00 ?x332) (* q00 r00 ?x272) (* a00 s00 ?x251) (* (- 1) (* a00 q00 ?x332)))))
 (let ((?x136 (* ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x234 s s s s s s s s s b b b b b b b q q q q q q q q q)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x370 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x197 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x180 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x430 (and (= (+ (* (- 1) (* r q)) (* s p) ?x132 ?x41) 0) (= ?x180 0) $x197 (= ?x426 0) (= ?x370 0) (or (not (= ?x136 0)) (not (= ?x393 0))))))
 (rewrite (= $x430 $x589)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x101 (- s r)))
 (let ((?x100 (- q p)))
 (let ((?x99 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x102 (* ?x70 ?x99 ?x99 ?x99 p ?x100 r r r ?x101 ?x101 ?x101 a a ?x99 ?x99 ?x100 ?x100 ?x100 r ?x101 a ?x99 p ?x100 ?x100 ?x100 r ?x101 ?x101 ?x31 ?x99 p ?x100 ?x100 r r r ?x101 ?x101 ?x101)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x93 (+ (- (* ?x31 b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let ((?x96 (* (- ?x93 (* a00 q00 ?x89)) b b b ?x84 q ?x89 ?x89 ?x89 s s s ?x86 ?x86 b b q q q ?x89 s ?x86 b ?x84 q q q ?x89 s s ?x31 b ?x84 q q ?x89 ?x89 ?x89 s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= ?x70 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x96 0)) (not (= ?x102 0)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x170 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x65 (* b00 p00 r)))
 (let ((?x426 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x281 (* (- 1) p)))
 (let ((?x290 (+ q ?x281)))
 (let ((?x252 (* (- 1) a)))
 (let ((?x319 (+ b ?x252)))
 (let ((?x299 (* (- 1) r)))
 (let ((?x389 (+ s ?x299)))
 (let ((?x393 (* ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x389 ?x319 ?x319 ?x319 ?x319 ?x319 ?x319 ?x319 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x290 ?x426 r r r r r r r r a a a p p p)))
 (let ((?x234 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x136 (* ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x234 s s s s s s s s s b b b b b b b q q q q q q q q q)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x370 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x197 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x180 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (let (($x430 (and (= (+ (* (- 1) (* r q)) (* s p) ?x132 ?x41) 0) (= ?x180 0) $x197 (= ?x426 0) (= ?x370 0) (or (not (= ?x136 0)) (not (= ?x393 0))))))
 (let ((?x101 (- s r)))
 (let ((?x100 (- q p)))
 (let ((?x99 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x102 (* ?x70 ?x99 ?x99 ?x99 p ?x100 r r r ?x101 ?x101 ?x101 a a ?x99 ?x99 ?x100 ?x100 ?x100 r ?x101 a ?x99 p ?x100 ?x100 ?x100 r ?x101 ?x101 ?x31 ?x99 p ?x100 ?x100 r r r ?x101 ?x101 ?x101)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x93 (+ (- (* ?x31 b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let ((?x96 (* (- ?x93 (* a00 q00 ?x89)) b b b ?x84 q ?x89 ?x89 ?x89 s s s ?x86 ?x86 b b q q q ?x89 s ?x86 b ?x84 q q q ?x89 s s ?x31 b ?x84 q q ?x89 ?x89 ?x89 s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x106 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= ?x70 0) (= (- ?x80 ?x81) 0) (or (not (= ?x96 0)) (not (= ?x102 0))))))
 (rewrite (= $x106 $x430))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x282 (mp (mp @x108 (quant-intro (proof-bind ?x170) (= $x107 $x168)) $x168) (rewrite (= $x168 $x168)) $x168)))
 (let ((@x213 (mp~ (mp @x282 (quant-intro (proof-bind ?x229) (= $x168 $x464)) $x464) (sk (~ $x464 $x296)) $x296)))
 (let ((@x894 (mp @x213 (rewrite (= $x296 $x927)) $x927)))
 (let ((@x627 (and-elim @x894 $x615)))
 (let ((@x644 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x615) $x629)) @x627 $x629)))
 (let (($x628 (<= ?x620 0)))
 (let ((@x651 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x615) $x628)) @x627 $x628)))
 (let (($x350 (not (<= ?x682 0))))
 (let (($x641 (>= ?x884 0)))
 (let (($x672 (<= ?x659 0)))
 (let ((@x633 (and-elim @x894 $x660)))
 (let ((@x636 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x660) $x672)) @x633 $x672)))
 (let (($x674 (>= ?x659 0)))
 (let ((@x648 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x660) $x674)) @x633 $x674)))
 (let ((@x655 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x641)) @x651 @x648 @x644 @x636 false) $x641)))
 (let (($x640 (<= ?x884 0)))
 (let ((@x664 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x640)) @x651 @x648 @x644 @x636 false) $x640)))
 (let ((@x207 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x898 (not $x640) (not $x641))) @x664 @x655 $x898)))
 (let (($x667 (>= ?x682 0)))
 (let ((@x131 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x681 $x350 (not $x667))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x667)) @x651 @x644 false) $x667) (unit-resolution (and-elim @x894 $x896) @x207 $x684) $x350)))
 ((_ th-lemma arith farkas 1 1 1) @x131 @x651 @x644 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 14
 :arith-assert-diseq        3
 :arith-assert-lower        23
 :arith-assert-upper        22
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           10
 :arith-grobner             4
 :arith-max-min             360
 :arith-nonlinear-horner    44
 :arith-num-rows            13
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      3
 :arith-tableau-max-columns 52
 :arith-tableau-max-rows    13
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                19.66
 :memory                    19.13
 :mk-bool-var               33
 :mk-clause                 40
 :num-allocs                764624
 :num-checks                1
 :propagations              19
 :rlimit-count              8759
 :time                      0.01
 :total-time                0.03)
