unsat
((set-logic NRA)
(proof
(let (($x597 (exists ((x Real) (y Real) )(! (let ((?x510 (* (/ 1.0 2.0) y)))
 (let ((?x511 (+ (- (/ 1.0 2.0)) ?x510)))
 (let ((?x593 (* z00 ?x511 ?x511 x)))
 (let ((?x267 (* (- 2.0) ?x593)))
 (let ((?x283 (* ?x511 ?x511 ?x511 x)))
 (let ((?x592 (* (- 2.0) ?x283)))
 (let ((?x405 (* ?x511 ?x511 ?x511 x x)))
 (let ((?x857 (* 4.0 ?x405)))
 (let ((?x608 (* x00 y00 ?x511 ?x511 x)))
 (let ((?x403 (* (- 2.0) ?x608)))
 (let ((?x83 (* x00 y00)))
 (let ((?x250 (* y x)))
 (let ((?x255 (* (- 1.0) ?x250)))
 (let ((?x520 (+ ?x255 ?x83 z00 x)))
 (let ((?x523 (* ?x511 ?x511 ?x520 x)))
 (let ((?x607 (* 2.0 ?x523)))
 (let ((?x515 (* ?x511 ?x511 ?x520)))
 (let ((?x521 (* (- 1.0) ?x515)))
 (let ((?x518 (* x00 y00 ?x511 ?x511)))
 (let ((?x517 (* z00 ?x511 ?x511)))
 (let ((?x95 (+ ?x517 ?x518 ?x521 ?x607 ?x403 ?x857 ?x592 ?x267)))
 (let (($x594 (= ?x95 0.0)))
 (let (($x595 (not $x594)))
 (let ((?x502 (* z00 y y x)))
 (let ((?x505 (* (- (/ 1.0 2.0)) ?x502)))
 (let ((?x506 (* y y y x)))
 (let ((?x501 (* (- (/ 1.0 4.0)) ?x506)))
 (let ((?x488 (* y y y x x)))
 (let ((?x504 (* (/ 1.0 2.0) ?x488)))
 (let ((?x765 (* x00 y00 y y x)))
 (let ((?x487 (* (- (/ 1.0 2.0)) ?x765)))
 (let ((?x253 (+ ?x255 ?x83 z00)))
 (let ((?x232 (* ?x253 y y x)))
 (let ((?x489 (* (/ 1.0 2.0) ?x232)))
 (let ((?x254 (* ?x253 y y)))
 (let ((?x261 (* (- (/ 1.0 4.0)) ?x254)))
 (let ((?x769 (* (/ 1.0 4.0) (* x00 y00 y y))))
 (let ((?x537 (* z00 y y)))
 (let ((?x756 (* (/ 1.0 4.0) ?x537)))
 (let ((?x507 (+ ?x756 ?x769 ?x261 ?x489 ?x487 ?x504 ?x501 ?x505)))
 (let (($x508 (= ?x507 0.0)))
 (let (($x509 (not $x508)))
 (or $x509 $x595))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let (($x1166 (exists ((x Real) (y Real) )(! false :qid k!28))
 ))
 (let ((?x1167 (lambda ((x Real) (y Real) )(let ((?x510 (* (/ 1.0 2.0) y)))
 (let ((?x511 (+ (- (/ 1.0 2.0)) ?x510)))
 (let ((?x593 (* z00 ?x511 ?x511 x)))
 (let ((?x267 (* (- 2.0) ?x593)))
 (let ((?x283 (* ?x511 ?x511 ?x511 x)))
 (let ((?x592 (* (- 2.0) ?x283)))
 (let ((?x405 (* ?x511 ?x511 ?x511 x x)))
 (let ((?x857 (* 4.0 ?x405)))
 (let ((?x608 (* x00 y00 ?x511 ?x511 x)))
 (let ((?x403 (* (- 2.0) ?x608)))
 (let ((?x83 (* x00 y00)))
 (let ((?x250 (* y x)))
 (let ((?x255 (* (- 1.0) ?x250)))
 (let ((?x520 (+ ?x255 ?x83 z00 x)))
 (let ((?x523 (* ?x511 ?x511 ?x520 x)))
 (let ((?x607 (* 2.0 ?x523)))
 (let ((?x515 (* ?x511 ?x511 ?x520)))
 (let ((?x521 (* (- 1.0) ?x515)))
 (let ((?x518 (* x00 y00 ?x511 ?x511)))
 (let ((?x517 (* z00 ?x511 ?x511)))
 (let ((?x95 (+ ?x517 ?x518 ?x521 ?x607 ?x403 ?x857 ?x592 ?x267)))
 (let (($x594 (= ?x95 0.0)))
 (let (($x595 (not $x594)))
 (let ((?x502 (* z00 y y x)))
 (let ((?x505 (* (- (/ 1.0 2.0)) ?x502)))
 (let ((?x506 (* y y y x)))
 (let ((?x501 (* (- (/ 1.0 4.0)) ?x506)))
 (let ((?x488 (* y y y x x)))
 (let ((?x504 (* (/ 1.0 2.0) ?x488)))
 (let ((?x765 (* x00 y00 y y x)))
 (let ((?x487 (* (- (/ 1.0 2.0)) ?x765)))
 (let ((?x253 (+ ?x255 ?x83 z00)))
 (let ((?x232 (* ?x253 y y x)))
 (let ((?x489 (* (/ 1.0 2.0) ?x232)))
 (let ((?x254 (* ?x253 y y)))
 (let ((?x261 (* (- (/ 1.0 4.0)) ?x254)))
 (let ((?x769 (* (/ 1.0 4.0) (* x00 y00 y y))))
 (let ((?x537 (* z00 y y)))
 (let ((?x756 (* (/ 1.0 4.0) ?x537)))
 (let ((?x507 (+ ?x756 ?x769 ?x261 ?x489 ?x487 ?x504 ?x501 ?x505)))
 (let (($x508 (= ?x507 0.0)))
 (let (($x509 (not $x508)))
 (let (($x596 (or $x509 $x595)))
 (let ((@x256 (rewrite (= (not true) false))))
 (let ((@x708 (rewrite (= (= 0.0 0.0) true))))
 (let ((?x731 (* y y x z00)))
 (let ((?x759 (* (- (/ 1.0 2.0)) ?x731)))
 (let ((?x305 (* y x z00)))
 (let ((?x1146 (+ (* (- (/ 1.0 2.0)) (* x z00)) ?x305 ?x759)))
 (let ((?x323 (* (/ 1.0 4.0) x)))
 (let ((?x1081 (+ ?x323 (* (- (/ 3.0 4.0)) ?x250) (* (/ 3.0 4.0) (* y y x)) ?x501)))
 (let ((?x131 (* x x)))
 (let ((?x132 (* (- (/ 1.0 2.0)) ?x131)))
 (let ((?x1006 (+ ?x132 (* (- (/ 3.0 2.0)) (* y y x x)) (* (/ 3.0 2.0) (* y x x)) ?x504)))
 (let ((?x712 (* y y x x00 y00)))
 (let ((?x525 (* (- (/ 1.0 2.0)) ?x712)))
 (let ((?x376 (* y x x00 y00)))
 (let ((?x933 (+ (* (- (/ 1.0 2.0)) (* x x00 y00)) ?x376 ?x525)))
 (let ((?x398 (* (/ 1.0 2.0) ?x731)))
 (let ((?x585 (* (/ 1.0 2.0) ?x712)))
 (let ((?x486 (* (- (/ 1.0 2.0)) ?x488)))
 (let ((?x184 (* x x00 y00)))
 (let ((?x791 (* (/ 1.0 2.0) ?x184)))
 (let ((?x146 (* x z00)))
 (let ((?x407 (* (/ 1.0 2.0) ?x146)))
 (let ((?x389 (* (/ 1.0 2.0) ?x131)))
 (let ((?x847 (+ ?x389 ?x407 ?x791 (* (/ 3.0 2.0) (* y y x x)) (* (- (/ 3.0 2.0)) (* y x x)) (* (- 1.0) ?x305) (* (- 1.0) ?x376) ?x486 ?x585 ?x398)))
 (let ((?x858 (* y y z00)))
 (let ((?x365 (* (- (/ 1.0 4.0)) ?x858)))
 (let ((?x599 (* y y x00 y00)))
 (let ((?x363 (* (- (/ 1.0 4.0)) ?x599)))
 (let ((?x471 (* (/ 1.0 4.0) ?x506)))
 (let ((?x787 (* (- (/ 1.0 4.0)) ?x83)))
 (let ((?x786 (* (- (/ 1.0 4.0)) z00)))
 (let ((?x660 (* (- (/ 1.0 4.0)) x)))
 (let ((?x221 (+ ?x660 ?x786 ?x787 (* (/ 1.0 2.0) (* y z00)) (* (/ 3.0 4.0) ?x250) (* (- (/ 3.0 4.0)) (* y y x)) (* (/ 1.0 2.0) (* y x00 y00)) ?x471 ?x363 ?x365)))
 (let ((?x100 (* (/ 1.0 4.0) ?x599)))
 (let ((?x714 (* (/ 1.0 4.0) ?x83)))
 (let ((?x448 (+ ?x714 (* (- (/ 1.0 2.0)) (* y x00 y00)) ?x100)))
 (let ((?x97 (* (/ 1.0 4.0) ?x858)))
 (let ((?x234 (* (/ 1.0 4.0) z00)))
 (let ((?x426 (+ ?x234 (* (- (/ 1.0 2.0)) (* y z00)) ?x97)))
 (let ((?x1142 (+ ?x426 ?x448 ?x221 ?x847 ?x933 ?x1006 ?x1081 ?x1146)))
 (let ((?x1134 (+ (* (- 2.0) (* (/ 1.0 4.0) ?x146)) (* (- 2.0) (* (- (/ 1.0 2.0)) ?x305)) (* (- 2.0) (* (/ 1.0 4.0) ?x731)))))
 (let ((?x284 (* (/ 1.0 4.0) ?x731)))
 (let ((?x586 (* (- (/ 1.0 2.0)) ?x305)))
 (let ((?x789 (* (/ 1.0 4.0) ?x146)))
 (let ((?x1121 (+ ?x789 ?x586 ?x284)))
 (let ((?x1128 (* (- 2.0) ?x1121)))
 (let ((?x1091 (* z00 ?x510 ?x510 x)))
 (let ((?x1090 (* z00 (- (/ 1.0 2.0)) ?x510 x)))
 (let ((?x1089 (* z00 ?x510 (- (/ 1.0 2.0)) x)))
 (let ((?x1088 (* z00 (- (/ 1.0 2.0)) (- (/ 1.0 2.0)) x)))
 (let ((?x1092 (+ ?x1088 ?x1089 ?x1090 ?x1091)))
 (let ((@x1117 (trans (rewrite (= ?x1091 (* (/ 1.0 4.0) ?x502))) (rewrite (= (* (/ 1.0 4.0) ?x502) ?x284)) (= ?x1091 ?x284))))
 (let ((@x1107 (rewrite (= (* (- (/ 1.0 4.0)) (* z00 y x)) (* (- (/ 1.0 4.0)) ?x305)))))
 (let ((@x1110 (trans (rewrite (= ?x1090 (* (- (/ 1.0 4.0)) (* z00 y x)))) @x1107 (= ?x1090 (* (- (/ 1.0 4.0)) ?x305)))))
 (let ((@x1104 (trans (rewrite (= ?x1089 (* (- (/ 1.0 4.0)) (* z00 y x)))) @x1107 (= ?x1089 (* (- (/ 1.0 4.0)) ?x305)))))
 (let ((@x209 (rewrite (= (* (/ 1.0 4.0) (* z00 x)) ?x789))))
 (let ((@x1098 (trans (rewrite (= ?x1088 (* (/ 1.0 4.0) (* z00 x)))) @x209 (= ?x1088 ?x789))))
 (let ((@x1120 (monotonicity @x1098 @x1104 @x1110 @x1117 (= ?x1092 (+ ?x789 (* (- (/ 1.0 4.0)) ?x305) (* (- (/ 1.0 4.0)) ?x305) ?x284)))))
 (let ((@x1125 (trans @x1120 (rewrite (= (+ ?x789 (* (- (/ 1.0 4.0)) ?x305) (* (- (/ 1.0 4.0)) ?x305) ?x284) ?x1121)) (= ?x1092 ?x1121))))
 (let ((@x1130 (monotonicity (trans (rewrite (= ?x593 ?x1092)) @x1125 (= ?x593 ?x1121)) (= ?x267 ?x1128))))
 (let ((@x1145 (trans (trans @x1130 (rewrite (= ?x1128 ?x1134)) (= ?x267 ?x1134)) (rewrite (= ?x1134 ?x1146)) (= ?x267 ?x1146))))
 (let ((?x1037 (* (/ 1.0 8.0) ?x506)))
 (let ((?x1058 (* (- 2.0) ?x1037)))
 (let ((?x463 (* ?x510 ?x510 x)))
 (let ((?x1019 (* (- (/ 1.0 2.0)) ?x463)))
 (let ((?x1057 (* (- 2.0) ?x1019)))
 (let ((?x460 (* ?x510 (- (/ 1.0 2.0)) x)))
 (let ((?x1015 (* (- (/ 1.0 2.0)) ?x460)))
 (let ((?x1056 (* (- 2.0) ?x1015)))
 (let ((?x300 (* y y x)))
 (let ((?x682 (* (- (/ 1.0 4.0)) ?x300)))
 (let ((?x1055 (* (- 2.0) ?x682)))
 (let ((?x687 (* (/ 1.0 4.0) ?x250)))
 (let ((?x1054 (* (- 2.0) ?x687)))
 (let ((?x1024 (* (- (/ 1.0 8.0)) x)))
 (let ((?x1053 (* (- 2.0) ?x1024)))
 (let ((?x1059 (+ ?x1053 ?x1054 ?x1055 ?x1056 ?x1057 ?x1058)))
 (let ((?x327 (* (/ 1.0 4.0) ?x300)))
 (let ((?x299 (* (- (/ 1.0 4.0)) ?x250)))
 (let ((?x628 (* (/ 1.0 2.0) ?x300)))
 (let ((?x793 (* (- (/ 1.0 2.0)) ?x250)))
 (let ((?x1076 (+ ?x323 ?x793 ?x628 ?x299 ?x327 ?x501)))
 (let ((@x1078 (monotonicity (rewrite (= ?x1053 ?x323)) (rewrite (= ?x1054 ?x793)) (rewrite (= ?x1055 ?x628)) (rewrite (= ?x1056 ?x299)) (rewrite (= ?x1057 ?x327)) (rewrite (= ?x1058 ?x501)) (= ?x1059 ?x1076))))
 (let ((?x1043 (+ ?x1024 ?x687 ?x682 ?x1015 ?x1019 ?x1037)))
 (let ((?x1020 (* ?x510 ?x510 ?x510 x)))
 (let ((?x1018 (* ?x510 (- (/ 1.0 2.0)) ?x510 x)))
 (let ((?x462 (* (- (/ 1.0 2.0)) (* ?x510 x))))
 (let ((?x1017 (* (- (/ 1.0 2.0)) ?x462)))
 (let ((?x1016 (* ?x510 ?x510 (- (/ 1.0 2.0)) x)))
 (let ((?x1014 (* ?x510 (- (/ 1.0 2.0)) (- (/ 1.0 2.0)) x)))
 (let ((?x459 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) x))))
 (let ((?x1013 (* (- (/ 1.0 2.0)) ?x459)))
 (let ((?x1021 (+ ?x1013 ?x1014 ?x1015 ?x1016 ?x1017 ?x1018 ?x1019 ?x1020)))
 (let ((?x1030 (* (- (/ 1.0 8.0)) ?x300)))
 (let ((?x1027 (* (/ 1.0 8.0) ?x250)))
 (let ((?x1040 (+ ?x1024 ?x1027 ?x1015 ?x1030 ?x1027 ?x1030 ?x1019 ?x1037)))
 (let ((@x1042 (monotonicity (rewrite (= ?x1013 ?x1024)) (rewrite (= ?x1014 ?x1027)) (rewrite (= ?x1016 ?x1030)) (rewrite (= ?x1017 ?x1027)) (rewrite (= ?x1018 ?x1030)) (rewrite (= ?x1020 ?x1037)) (= ?x1021 ?x1040))))
 (let ((@x1049 (trans (rewrite (= ?x283 ?x1021)) (trans @x1042 (rewrite (= ?x1040 ?x1043)) (= ?x1021 ?x1043)) (= ?x283 ?x1043))))
 (let ((@x1063 (trans (monotonicity @x1049 (= ?x592 (* (- 2.0) ?x1043))) (rewrite (= (* (- 2.0) ?x1043) ?x1059)) (= ?x592 ?x1059))))
 (let ((@x1087 (trans @x1063 (trans @x1078 (rewrite (= ?x1076 ?x1081)) (= ?x1059 ?x1081)) (= ?x592 ?x1081))))
 (let ((?x958 (* (/ 1.0 8.0) ?x488)))
 (let ((?x980 (* 4.0 ?x958)))
 (let ((?x260 (* y x x)))
 (let ((?x263 (* (/ 1.0 4.0) ?x260)))
 (let ((?x979 (* 4.0 ?x263)))
 (let ((?x193 (* y y x x)))
 (let ((?x964 (* (- (/ 1.0 4.0)) ?x193)))
 (let ((?x978 (* 4.0 ?x964)))
 (let ((?x150 (* ?x510 ?x510 x x)))
 (let ((?x938 (* (- (/ 1.0 2.0)) ?x150)))
 (let ((?x977 (* 4.0 ?x938)))
 (let ((?x145 (* ?x510 (- (/ 1.0 2.0)) x x)))
 (let ((?x927 (* (- (/ 1.0 2.0)) ?x145)))
 (let ((?x976 (* 4.0 ?x927)))
 (let ((?x944 (* (- (/ 1.0 8.0)) ?x131)))
 (let ((?x975 (* 4.0 ?x944)))
 (let ((?x981 (+ ?x975 ?x976 ?x977 ?x978 ?x979 ?x980)))
 (let ((?x994 (* (- 1.0) ?x193)))
 (let ((?x991 (* (- (/ 1.0 2.0)) ?x193)))
 (let ((?x988 (* (/ 1.0 2.0) ?x260)))
 (let ((?x1001 (+ ?x132 ?x988 ?x991 ?x994 ?x260 ?x504)))
 (let ((@x1003 (monotonicity (rewrite (= ?x975 ?x132)) (rewrite (= ?x976 ?x988)) (rewrite (= ?x977 ?x991)) (rewrite (= ?x978 ?x994)) (rewrite (= ?x979 ?x260)) (rewrite (= ?x980 ?x504)) (= ?x981 ?x1001))))
 (let ((?x965 (+ ?x944 ?x927 ?x938 ?x964 ?x263 ?x958)))
 (let ((?x939 (* ?x510 ?x510 ?x510 x x)))
 (let ((?x937 (* ?x510 (- (/ 1.0 2.0)) ?x510 x x)))
 (let ((?x149 (* (- (/ 1.0 2.0)) (* ?x510 x x))))
 (let ((?x935 (* (- (/ 1.0 2.0)) ?x149)))
 (let ((?x928 (* ?x510 ?x510 (- (/ 1.0 2.0)) x x)))
 (let ((?x930 (* ?x510 (- (/ 1.0 2.0)) (- (/ 1.0 2.0)) x x)))
 (let ((?x144 (* (- (/ 1.0 2.0)) ?x132)))
 (let ((?x929 (* (- (/ 1.0 2.0)) ?x144)))
 (let ((?x940 (+ ?x929 ?x930 ?x927 ?x928 ?x935 ?x937 ?x938 ?x939)))
 (let ((?x951 (* (- (/ 1.0 8.0)) ?x193)))
 (let ((?x948 (* (/ 1.0 8.0) ?x260)))
 (let ((?x961 (+ ?x944 ?x948 ?x927 ?x951 ?x948 ?x951 ?x938 ?x958)))
 (let ((@x963 (monotonicity (rewrite (= ?x929 ?x944)) (rewrite (= ?x930 ?x948)) (rewrite (= ?x928 ?x951)) (rewrite (= ?x935 ?x948)) (rewrite (= ?x937 ?x951)) (rewrite (= ?x939 ?x958)) (= ?x940 ?x961))))
 (let ((@x971 (trans (rewrite (= ?x405 ?x940)) (trans @x963 (rewrite (= ?x961 ?x965)) (= ?x940 ?x965)) (= ?x405 ?x965))))
 (let ((@x985 (trans (monotonicity @x971 (= ?x857 (* 4.0 ?x965))) (rewrite (= (* 4.0 ?x965) ?x981)) (= ?x857 ?x981))))
 (let ((@x1012 (trans @x985 (trans @x1003 (rewrite (= ?x1001 ?x1006)) (= ?x981 ?x1006)) (= ?x857 ?x1006))))
 (let ((?x921 (+ (* (- 2.0) (* (/ 1.0 4.0) ?x184)) (* (- 2.0) (* (- (/ 1.0 2.0)) ?x376)) (* (- 2.0) (* (/ 1.0 4.0) ?x712)))))
 (let ((?x723 (* (/ 1.0 4.0) ?x712)))
 (let ((?x620 (* (- (/ 1.0 2.0)) ?x376)))
 (let ((?x830 (* (/ 1.0 4.0) ?x184)))
 (let ((?x908 (+ ?x830 ?x620 ?x723)))
 (let ((?x915 (* (- 2.0) ?x908)))
 (let ((?x873 (* x00 y00 ?x510 ?x510 x)))
 (let ((?x862 (* x00 y00 (- (/ 1.0 2.0)) ?x510 x)))
 (let ((?x861 (* x00 y00 ?x510 (- (/ 1.0 2.0)) x)))
 (let ((?x860 (* x00 y00 (- (/ 1.0 2.0)) (- (/ 1.0 2.0)) x)))
 (let ((?x874 (+ ?x860 ?x861 ?x862 ?x873)))
 (let ((@x904 (trans (rewrite (= ?x873 (* (/ 1.0 4.0) ?x765))) (rewrite (= (* (/ 1.0 4.0) ?x765) ?x723)) (= ?x873 ?x723))))
 (let ((@x892 (rewrite (= (* (- (/ 1.0 4.0)) (* x00 y00 y x)) (* (- (/ 1.0 4.0)) ?x376)))))
 (let ((@x895 (trans (rewrite (= ?x862 (* (- (/ 1.0 4.0)) (* x00 y00 y x)))) @x892 (= ?x862 (* (- (/ 1.0 4.0)) ?x376)))))
 (let ((@x889 (trans (rewrite (= ?x861 (* (- (/ 1.0 4.0)) (* x00 y00 y x)))) @x892 (= ?x861 (* (- (/ 1.0 4.0)) ?x376)))))
 (let ((@x834 (rewrite (= (* (/ 1.0 4.0) (* x00 y00 x)) ?x830))))
 (let ((@x883 (trans (rewrite (= ?x860 (* (/ 1.0 4.0) (* x00 y00 x)))) @x834 (= ?x860 ?x830))))
 (let ((@x907 (monotonicity @x883 @x889 @x895 @x904 (= ?x874 (+ ?x830 (* (- (/ 1.0 4.0)) ?x376) (* (- (/ 1.0 4.0)) ?x376) ?x723)))))
 (let ((@x912 (trans @x907 (rewrite (= (+ ?x830 (* (- (/ 1.0 4.0)) ?x376) (* (- (/ 1.0 4.0)) ?x376) ?x723) ?x908)) (= ?x874 ?x908))))
 (let ((@x917 (monotonicity (trans (rewrite (= ?x608 ?x874)) @x912 (= ?x608 ?x908)) (= ?x403 ?x915))))
 (let ((@x932 (trans (trans @x917 (rewrite (= ?x915 ?x921)) (= ?x403 ?x921)) (rewrite (= ?x921 ?x933)) (= ?x403 ?x933))))
 (let ((?x381 (* 2.0 ?x284)))
 (let ((?x380 (* 2.0 ?x723)))
 (let ((?x779 (* (- (/ 1.0 4.0)) ?x488)))
 (let ((?x379 (* 2.0 ?x779)))
 (let ((?x612 (* (- (/ 1.0 4.0)) ?x376)))
 (let ((?x377 (* 2.0 ?x612)))
 (let ((?x290 (* (- (/ 1.0 4.0)) ?x305)))
 (let ((?x359 (* 2.0 ?x290)))
 (let ((?x165 (* (- (/ 1.0 2.0)) ?x260)))
 (let ((?x357 (* 2.0 ?x165)))
 (let ((?x166 (* (/ 1.0 2.0) ?x193)))
 (let ((?x294 (* 2.0 ?x166)))
 (let ((?x293 (* 2.0 ?x830)))
 (let ((?x181 (* (- (/ 1.0 2.0)) (* ?x510 ?x255 x))))
 (let ((?x291 (* 2.0 ?x181)))
 (let ((?x726 (* (- (/ 1.0 2.0)) (* ?x510 ?x83 x))))
 (let ((?x288 (* 2.0 ?x726)))
 (let ((?x156 (* (- (/ 1.0 2.0)) (* ?x510 z00 x))))
 (let ((?x287 (* 2.0 ?x156)))
 (let ((?x286 (* 2.0 ?x789)))
 (let ((?x242 (* 2.0 ?x149)))
 (let ((?x186 (* (/ 1.0 4.0) ?x131)))
 (let ((?x241 (* 2.0 ?x186)))
 (let ((?x382 (+ ?x241 ?x242 ?x286 ?x287 ?x288 ?x291 ?x293 ?x294 ?x357 ?x359 ?x377 ?x379 ?x380 ?x381)))
 (let ((?x721 (* (- 1.0) ?x260)))
 (let ((?x839 (+ ?x389 ?x165 ?x407 ?x586 ?x620 ?x166 ?x791 ?x193 ?x721 ?x586 ?x620 ?x486 ?x585 ?x398)))
 (let ((@x704 (trans (rewrite (= ?x288 (* (- (/ 1.0 2.0)) (* y x00 y00 x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y x00 y00 x)) ?x620)) (= ?x288 ?x620))))
 (let ((@x591 (trans (rewrite (= ?x287 (* (- (/ 1.0 2.0)) (* y z00 x)))) (rewrite (= (* (- (/ 1.0 2.0)) (* y z00 x)) ?x586)) (= ?x287 ?x586))))
 (let ((@x841 (monotonicity (rewrite (= ?x241 ?x389)) (rewrite (= ?x242 ?x165)) (rewrite (= ?x286 ?x407)) @x591 @x704 (rewrite (= ?x291 ?x166)) (rewrite (= ?x293 ?x791)) (rewrite (= ?x294 ?x193)) (rewrite (= ?x357 ?x721)) (rewrite (= ?x359 ?x586)) (rewrite (= ?x377 ?x620)) (rewrite (= ?x379 ?x486)) (rewrite (= ?x380 ?x585)) (rewrite (= ?x381 ?x398)) (= ?x382 ?x839))))
 (let ((?x167 (+ ?x186 ?x149 ?x789 ?x156 ?x726 ?x181 ?x830 ?x166 ?x165 ?x290 ?x612 ?x779 ?x723 ?x284)))
 (let ((?x225 (* 2.0 ?x167)))
 (let ((?x182 (* ?x510 ?x510 ?x255 x)))
 (let ((?x169 (* ?x510 (- (/ 1.0 2.0)) ?x255 x)))
 (let ((?x179 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) (* ?x255 x)))))
 (let ((?x727 (* ?x510 ?x510 ?x83 x)))
 (let ((?x161 (* ?x510 (- (/ 1.0 2.0)) ?x83 x)))
 (let ((?x160 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) (* ?x83 x)))))
 (let ((?x157 (* ?x510 ?x510 z00 x)))
 (let ((?x137 (* ?x510 (- (/ 1.0 2.0)) z00 x)))
 (let ((?x154 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) (* z00 x)))))
 (let ((?x183 (+ ?x144 ?x145 ?x149 ?x150 ?x154 ?x137 ?x156 ?x157 ?x160 ?x161 ?x726 ?x727 ?x179 ?x169 ?x181 ?x182)))
 (let ((?x171 (* (/ 1.0 4.0) ?x193)))
 (let ((?x329 (* (- (/ 1.0 4.0)) ?x260)))
 (let ((?x129 (+ ?x186 ?x329 ?x149 ?x171 ?x789 ?x290 ?x156 ?x284 ?x830 ?x612 ?x726 ?x723 ?x329 ?x171 ?x181 ?x779)))
 (let ((@x772 (trans (rewrite (= ?x727 (* (/ 1.0 4.0) (* y y x00 y00 x)))) (rewrite (= (* (/ 1.0 4.0) (* y y x00 y00 x)) ?x723)) (= ?x727 ?x723))))
 (let ((@x319 (trans (rewrite (= ?x161 (* (- (/ 1.0 4.0)) (* y x00 y00 x)))) (rewrite (= (* (- (/ 1.0 4.0)) (* y x00 y00 x)) ?x612)) (= ?x161 ?x612))))
 (let ((@x820 (trans (rewrite (= ?x160 (* (/ 1.0 4.0) (* x00 y00 x)))) @x834 (= ?x160 ?x830))))
 (let ((@x354 (trans (rewrite (= ?x157 (* (/ 1.0 4.0) (* y y z00 x)))) (rewrite (= (* (/ 1.0 4.0) (* y y z00 x)) ?x284)) (= ?x157 ?x284))))
 (let ((@x346 (trans (rewrite (= ?x137 (* (- (/ 1.0 4.0)) (* y z00 x)))) (rewrite (= (* (- (/ 1.0 4.0)) (* y z00 x)) ?x290)) (= ?x137 ?x290))))
 (let ((@x210 (trans (rewrite (= ?x154 (* (/ 1.0 4.0) (* z00 x)))) @x209 (= ?x154 ?x789))))
 (let ((@x141 (monotonicity (rewrite (= ?x144 ?x186)) (rewrite (= ?x145 ?x329)) (rewrite (= ?x150 ?x171)) @x210 @x346 @x354 @x820 @x319 @x772 (rewrite (= ?x179 ?x329)) (rewrite (= ?x169 ?x171)) (rewrite (= ?x182 ?x779)) (= ?x183 ?x129))))
 (let ((@x458 (rewrite (= ?x520 (+ x z00 ?x83 ?x255)))))
 (let ((@x204 (monotonicity @x458 (= ?x523 (* ?x511 ?x511 (+ x z00 ?x83 ?x255) x)))))
 (let ((@x185 (trans @x204 (rewrite (= (* ?x511 ?x511 (+ x z00 ?x83 ?x255) x) ?x183)) (= ?x523 ?x183))))
 (let ((@x215 (trans @x185 (trans @x141 (rewrite (= ?x129 ?x167)) (= ?x183 ?x167)) (= ?x523 ?x167))))
 (let ((@x388 (trans (monotonicity @x215 (= ?x607 ?x225)) (rewrite (= ?x225 ?x382)) (= ?x607 ?x382))))
 (let ((@x859 (trans @x388 (trans @x841 (rewrite (= ?x839 ?x847)) (= ?x382 ?x847)) (= ?x607 ?x847))))
 (let ((?x652 (* (- 1.0) ?x97)))
 (let ((?x719 (* (- (/ 1.0 2.0)) (* ?x510 z00))))
 (let ((?x656 (* (- 1.0) ?x719)))
 (let ((?x654 (* (- 1.0) ?x100)))
 (let ((?x651 (* (- 1.0) ?x501)))
 (let ((?x650 (* (- 1.0) ?x462)))
 (let ((?x420 (* y x00 y00)))
 (let ((?x427 (* (- (/ 1.0 4.0)) ?x420)))
 (let ((?x649 (* (- 1.0) ?x427)))
 (let ((?x314 (* (- (/ 1.0 2.0)) (* ?x510 ?x255))))
 (let ((?x648 (* (- 1.0) ?x314)))
 (let ((?x308 (* (- (/ 1.0 2.0)) (* ?x510 ?x83))))
 (let ((?x647 (* (- 1.0) ?x308)))
 (let ((?x646 (* (- 1.0) ?x628)))
 (let ((?x645 (* (- 1.0) ?x793)))
 (let ((?x235 (* y z00)))
 (let ((?x276 (* (- (/ 1.0 4.0)) ?x235)))
 (let ((?x644 (* (- 1.0) ?x276)))
 (let ((?x643 (* (- 1.0) ?x714)))
 (let ((?x641 (* (- 1.0) ?x234)))
 (let ((?x642 (* (- 1.0) ?x323)))
 (let ((?x653 (+ ?x642 ?x641 ?x643 ?x644 ?x645 ?x646 ?x647 ?x648 ?x649 ?x650 ?x651 ?x654 ?x656 ?x652)))
 (let ((?x667 (* (/ 1.0 4.0) ?x235)))
 (let ((?x679 (* (/ 1.0 4.0) ?x420)))
 (let ((?x673 (* (- (/ 1.0 2.0)) ?x300)))
 (let ((?x671 (* (/ 1.0 2.0) ?x250)))
 (let ((?x698 (+ ?x660 ?x786 ?x787 ?x667 ?x671 ?x673 ?x679 ?x682 ?x679 ?x687 ?x471 ?x363 ?x667 ?x365)))
 (let ((@x700 (monotonicity (rewrite (= ?x642 ?x660)) (rewrite (= ?x641 ?x786)) (rewrite (= ?x643 ?x787)) (rewrite (= ?x644 ?x667)) (rewrite (= ?x645 ?x671)) (rewrite (= ?x646 ?x673)) (rewrite (= ?x647 ?x679)) (rewrite (= ?x648 ?x682)) (rewrite (= ?x649 ?x679)) (rewrite (= ?x650 ?x687)) (rewrite (= ?x651 ?x471)) (rewrite (= ?x654 ?x363)) (rewrite (= ?x656 ?x667)) (rewrite (= ?x652 ?x365)) (= ?x653 ?x698))))
 (let ((?x629 (+ ?x323 ?x234 ?x714 ?x276 ?x793 ?x628 ?x308 ?x314 ?x427 ?x462 ?x501 ?x100 ?x719 ?x97)))
 (let ((?x636 (* (- 1.0) ?x629)))
 (let ((?x298 (* ?x510 ?x510 ?x255)))
 (let ((?x297 (* ?x510 (- (/ 1.0 2.0)) ?x255)))
 (let ((?x311 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) ?x255))))
 (let ((?x296 (* ?x510 ?x510 ?x83)))
 (let ((?x295 (* ?x510 (- (/ 1.0 2.0)) ?x83)))
 (let ((?x218 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) ?x83))))
 (let ((?x781 (* ?x510 ?x510 z00)))
 (let ((?x466 (* ?x510 (- (/ 1.0 2.0)) z00)))
 (let ((?x465 (* (- (/ 1.0 2.0)) (* (- (/ 1.0 2.0)) z00))))
 (let ((?x315 (+ ?x459 ?x460 ?x462 ?x463 ?x465 ?x466 ?x719 ?x781 ?x218 ?x295 ?x308 ?x296 ?x311 ?x297 ?x314 ?x298)))
 (let ((?x625 (+ ?x323 ?x299 ?x462 ?x327 ?x234 ?x276 ?x719 ?x97 ?x714 ?x427 ?x308 ?x100 ?x299 ?x327 ?x314 ?x501)))
 (let ((@x627 (monotonicity (rewrite (= ?x459 ?x323)) (rewrite (= ?x460 ?x299)) (rewrite (= ?x463 ?x327)) (rewrite (= ?x465 ?x234)) (rewrite (= ?x466 ?x276)) (rewrite (= ?x781 ?x97)) (rewrite (= ?x218 ?x714)) (rewrite (= ?x295 ?x427)) (rewrite (= ?x296 ?x100)) (rewrite (= ?x311 ?x299)) (rewrite (= ?x297 ?x327)) (rewrite (= ?x298 ?x501)) (= ?x315 ?x625))))
 (let ((@x321 (trans (monotonicity @x458 (= ?x515 (* ?x511 ?x511 (+ x z00 ?x83 ?x255)))) (rewrite (= (* ?x511 ?x511 (+ x z00 ?x83 ?x255)) ?x315)) (= ?x515 ?x315))))
 (let ((@x635 (trans @x321 (trans @x627 (rewrite (= ?x625 ?x629)) (= ?x315 ?x629)) (= ?x515 ?x629))))
 (let ((@x659 (trans (monotonicity @x635 (= ?x521 ?x636)) (rewrite (= ?x636 ?x653)) (= ?x521 ?x653))))
 (let ((@x194 (trans @x659 (trans @x700 (rewrite (= ?x698 ?x221)) (= ?x653 ?x221)) (= ?x521 ?x221))))
 (let ((?x869 (* x00 y00 ?x510 ?x510)))
 (let ((?x867 (* x00 y00 (- (/ 1.0 2.0)) ?x510)))
 (let ((?x866 (* x00 y00 ?x510 (- (/ 1.0 2.0)))))
 (let ((?x864 (* x00 y00 (- (/ 1.0 2.0)) (- (/ 1.0 2.0)))))
 (let ((?x870 (+ ?x864 ?x866 ?x867 ?x869)))
 (let ((@x107 (rewrite (= ?x769 ?x100))))
 (let ((@x431 (rewrite (= (* (- (/ 1.0 4.0)) (* x00 y00 y)) ?x427))))
 (let ((@x437 (trans (rewrite (= ?x867 (* (- (/ 1.0 4.0)) (* x00 y00 y)))) @x431 (= ?x867 ?x427))))
 (let ((@x424 (trans (rewrite (= ?x866 (* (- (/ 1.0 4.0)) (* x00 y00 y)))) @x431 (= ?x866 ?x427))))
 (let ((@x444 (monotonicity (rewrite (= ?x864 ?x714)) @x424 @x437 (trans (rewrite (= ?x869 ?x769)) @x107 (= ?x869 ?x100)) (= ?x870 (+ ?x714 ?x427 ?x427 ?x100)))))
 (let ((@x453 (trans @x444 (rewrite (= (+ ?x714 ?x427 ?x427 ?x100) ?x448)) (= ?x870 ?x448))))
 (let ((?x262 (* z00 ?x510 ?x510)))
 (let ((?x259 (* z00 (- (/ 1.0 2.0)) ?x510)))
 (let ((?x258 (* z00 ?x510 (- (/ 1.0 2.0)))))
 (let ((?x231 (* z00 (- (/ 1.0 2.0)) (- (/ 1.0 2.0)))))
 (let ((?x233 (+ ?x231 ?x258 ?x259 ?x262)))
 (let ((@x99 (rewrite (= ?x756 ?x97))))
 (let ((@x281 (rewrite (= (* (- (/ 1.0 4.0)) (* z00 y)) ?x276))))
 (let ((@x110 (trans (rewrite (= ?x259 (* (- (/ 1.0 4.0)) (* z00 y)))) @x281 (= ?x259 ?x276))))
 (let ((@x238 (trans (rewrite (= ?x258 (* (- (/ 1.0 4.0)) (* z00 y)))) @x281 (= ?x258 ?x276))))
 (let ((@x606 (monotonicity (rewrite (= ?x231 ?x234)) @x238 @x110 (trans (rewrite (= ?x262 ?x756)) @x99 (= ?x262 ?x97)) (= ?x233 (+ ?x234 ?x276 ?x276 ?x97)))))
 (let ((@x387 (trans @x606 (rewrite (= (+ ?x234 ?x276 ?x276 ?x97) ?x426)) (= ?x233 ?x426))))
 (let ((@x1140 (monotonicity (trans (rewrite (= ?x517 ?x233)) @x387 (= ?x517 ?x426)) (trans (rewrite (= ?x518 ?x870)) @x453 (= ?x518 ?x448)) @x194 @x859 @x932 @x1012 @x1087 @x1145 (= ?x95 ?x1142))))
 (let ((@x1152 (monotonicity (trans @x1140 (rewrite (= ?x1142 0.0)) $x594) (= $x594 (= 0.0 0.0)))))
 (let ((@x1156 (monotonicity (trans @x1152 @x708 (= $x594 true)) (= $x595 (not true)))))
 (let ((?x396 (+ ?x486 ?x585 ?x398)))
 (let ((?x280 (+ ?x471 ?x363 ?x365)))
 (let ((?x367 (+ ?x97 ?x100 ?x280 ?x396 ?x525 ?x504 ?x501 ?x759)))
 (let ((?x229 (+ (* (/ 1.0 2.0) (* (- 1.0) ?x488)) ?x585 ?x398)))
 (let ((?x495 (* (- 1.0) ?x488)))
 (let ((?x768 (+ ?x495 ?x712 ?x731)))
 (let ((?x397 (* (/ 1.0 2.0) ?x768)))
 (let ((?x552 (+ ?x731 ?x712 ?x495)))
 (let ((?x126 (* ?x255 y y x)))
 (let ((?x485 (* ?x83 y y x)))
 (let ((?x547 (+ ?x502 ?x485 ?x126)))
 (let ((@x542 (monotonicity (rewrite (= ?x502 ?x731)) (rewrite (= ?x485 ?x712)) (rewrite (= ?x126 ?x495)) (= ?x547 ?x552))))
 (let ((@x106 (rewrite (= ?x253 (+ z00 ?x83 ?x255)))))
 (let ((@x554 (trans (monotonicity @x106 (= ?x232 (* (+ z00 ?x83 ?x255) y y x))) (rewrite (= (* (+ z00 ?x83 ?x255) y y x) ?x547)) (= ?x232 ?x547))))
 (let ((@x614 (trans @x554 (trans @x542 (rewrite (= ?x552 ?x768)) (= ?x547 ?x768)) (= ?x232 ?x768))))
 (let ((@x479 (trans (monotonicity @x614 (= ?x489 ?x397)) (rewrite (= ?x397 ?x229)) (= ?x489 ?x229))))
 (let ((?x872 (+ (* (- (/ 1.0 4.0)) (* (- 1.0) ?x506)) ?x363 ?x365)))
 (let ((?x245 (* (- 1.0) ?x506)))
 (let ((?x85 (+ ?x245 ?x599 ?x858)))
 (let ((?x148 (* (- (/ 1.0 4.0)) ?x85)))
 (let ((?x618 (+ ?x858 ?x599 ?x245)))
 (let ((?x125 (* ?x255 y y)))
 (let ((?x122 (* ?x83 y y)))
 (let ((?x393 (+ ?x537 ?x122 ?x125)))
 (let ((@x81 (monotonicity (rewrite (= ?x537 ?x858)) (rewrite (= ?x122 ?x599)) (rewrite (= ?x125 ?x245)) (= ?x393 ?x618))))
 (let ((@x850 (trans (monotonicity @x106 (= ?x254 (* (+ z00 ?x83 ?x255) y y))) (rewrite (= (* (+ z00 ?x83 ?x255) y y) ?x393)) (= ?x254 ?x393))))
 (let ((@x135 (trans @x850 (trans @x81 (rewrite (= ?x618 ?x85)) (= ?x393 ?x85)) (= ?x254 ?x85))))
 (let ((@x378 (trans (monotonicity @x135 (= ?x261 ?x148)) (rewrite (= ?x148 ?x872)) (= ?x261 ?x872))))
 (let ((@x82 (monotonicity @x99 @x107 (trans @x378 (rewrite (= ?x872 ?x280)) (= ?x261 ?x280)) (trans @x479 (rewrite (= ?x229 ?x396)) (= ?x489 ?x396)) (rewrite (= ?x487 ?x525)) (rewrite (= ?x505 ?x759)) (= ?x507 ?x367))))
 (let ((@x116 (monotonicity (trans @x82 (rewrite (= ?x367 0.0)) $x508) (= $x508 (= 0.0 0.0)))))
 (let ((@x248 (monotonicity (trans @x116 @x708 (= $x508 true)) (= $x509 (not true)))))
 (let ((@x1161 (monotonicity (trans @x248 @x256 (= $x509 false)) (trans @x1156 @x256 (= $x595 false)) (= $x596 (or false false)))))
 (trans @x1161 (rewrite (= (or false false) false)) (= $x596 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1174 (trans (quant-intro (proof-bind ?x1167) (= $x597 $x1166)) (elim-unused (= $x1166 false)) (= $x597 false))))
 (let (($x544 (exists ((x Real) (y Real) (z Real) )(! (let ((?x672 (* y y y x)))
 (let ((?x675 (* (- (/ 1.0 4.0)) ?x672)))
 (let ((?x536 (* y y y x x)))
 (let ((?x579 (* (/ 1.0 2.0) ?x536)))
 (let ((?x355 (* (/ 1.0 2.0) (* z y y x))))
 (let ((?x260 (* z y y)))
 (let ((?x329 (* (- (/ 1.0 4.0)) ?x260)))
 (let ((?x413 (+ (* (/ 1.0 4.0) (* z00 y y)) (* (/ 1.0 4.0) (* x00 y00 y y)) ?x329 ?x355 (* (- (/ 1.0 2.0)) (* x00 y00 y y x)) ?x579 ?x675 (* (- (/ 1.0 2.0)) (* z00 y y x)))))
 (let ((?x113 (* (/ 1.0 2.0) y)))
 (let ((?x516 (+ (- (/ 1.0 2.0)) ?x113)))
 (let ((?x102 (+ (* z00 ?x516 ?x516) (* x00 y00 ?x516 ?x516) (* (- 1.0) (* (+ z x) ?x516 ?x516)) (* 2.0 (* (+ z x) ?x516 ?x516 x)) (* (- 2.0) (* x00 y00 ?x516 ?x516 x)) (* 4.0 (* ?x516 ?x516 ?x516 x x)) (* (- 2.0) (* ?x516 ?x516 ?x516 x)) (* (- 2.0) (* z00 ?x516 ?x516 x)))))
 (let (($x496 (= (+ (* (- 1.0) (* x00 y00)) (* y x) z (* (- 1.0) z00)) 0.0)))
 (and $x496 (or (not (= ?x102 0.0)) (not (= ?x413 0.0)))))))))))))))) :qid k!28))
 ))
 (let (($x75 (exists ((x Real) (y Real) (z Real) )(! (let ((?x55 (/ y 2.0)))
 (let ((?x60 (- (+ (* ?x55 ?x55 z00) (* x00 ?x55 ?x55 y00)) (* ?x55 ?x55 z))))
 (let ((?x64 (- (+ ?x60 (* 2.0 x ?x55 ?x55 z)) (* 2.0 x x00 ?x55 ?x55 y00))))
 (let ((?x69 (- (+ ?x64 (* 2.0 x 2.0 x ?x55 ?x55 ?x55)) (* 2.0 x ?x55 ?x55 ?x55))))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x42 (- (+ (* ?x36 ?x36 z00) (* x00 ?x36 ?x36 y00)) (* ?x36 ?x36 (+ z x)))))
 (let ((?x46 (- (+ ?x42 (* 2.0 x ?x36 ?x36 (+ z x))) (* 2.0 x x00 ?x36 ?x36 y00))))
 (let ((?x51 (- (+ ?x46 (* 2.0 x 2.0 x ?x36 ?x36 ?x36)) (* 2.0 x ?x36 ?x36 ?x36))))
 (let (($x73 (or (not (= (- ?x51 (* 2.0 x ?x36 ?x36 z00)) 0.0)) (not (= (- ?x69 (* 2.0 x ?x55 ?x55 z00)) 0.0)))))
 (let (($x33 (= (- (+ (* (- 1.0) x00 y00) (* x y) z) z00) 0.0)))
 (and $x33 $x73))))))))))) :qid k!28))
 ))
 (let ((?x533 (lambda ((x Real) (y Real) (z Real) )(let ((?x672 (* y y y x)))
 (let ((?x675 (* (- (/ 1.0 4.0)) ?x672)))
 (let ((?x536 (* y y y x x)))
 (let ((?x579 (* (/ 1.0 2.0) ?x536)))
 (let ((?x355 (* (/ 1.0 2.0) (* z y y x))))
 (let ((?x260 (* z y y)))
 (let ((?x329 (* (- (/ 1.0 4.0)) ?x260)))
 (let ((?x413 (+ (* (/ 1.0 4.0) (* z00 y y)) (* (/ 1.0 4.0) (* x00 y00 y y)) ?x329 ?x355 (* (- (/ 1.0 2.0)) (* x00 y00 y y x)) ?x579 ?x675 (* (- (/ 1.0 2.0)) (* z00 y y x)))))
 (let ((?x113 (* (/ 1.0 2.0) y)))
 (let ((?x516 (+ (- (/ 1.0 2.0)) ?x113)))
 (let ((?x102 (+ (* z00 ?x516 ?x516) (* x00 y00 ?x516 ?x516) (* (- 1.0) (* (+ z x) ?x516 ?x516)) (* 2.0 (* (+ z x) ?x516 ?x516 x)) (* (- 2.0) (* x00 y00 ?x516 ?x516 x)) (* 4.0 (* ?x516 ?x516 ?x516 x x)) (* (- 2.0) (* ?x516 ?x516 ?x516 x)) (* (- 2.0) (* z00 ?x516 ?x516 x)))))
 (let (($x496 (= (+ (* (- 1.0) (* x00 y00)) (* y x) z (* (- 1.0) z00)) 0.0)))
 (let (($x564 (and $x496 (or (not (= ?x102 0.0)) (not (= ?x413 0.0))))))
 (let ((?x55 (/ y 2.0)))
 (let ((?x60 (- (+ (* ?x55 ?x55 z00) (* x00 ?x55 ?x55 y00)) (* ?x55 ?x55 z))))
 (let ((?x64 (- (+ ?x60 (* 2.0 x ?x55 ?x55 z)) (* 2.0 x x00 ?x55 ?x55 y00))))
 (let ((?x69 (- (+ ?x64 (* 2.0 x 2.0 x ?x55 ?x55 ?x55)) (* 2.0 x ?x55 ?x55 ?x55))))
 (let ((?x36 (/ (- y 1.0) 2.0)))
 (let ((?x42 (- (+ (* ?x36 ?x36 z00) (* x00 ?x36 ?x36 y00)) (* ?x36 ?x36 (+ z x)))))
 (let ((?x46 (- (+ ?x42 (* 2.0 x ?x36 ?x36 (+ z x))) (* 2.0 x x00 ?x36 ?x36 y00))))
 (let ((?x51 (- (+ ?x46 (* 2.0 x 2.0 x ?x36 ?x36 ?x36)) (* 2.0 x ?x36 ?x36 ?x36))))
 (let (($x73 (or (not (= (- ?x51 (* 2.0 x ?x36 ?x36 z00)) 0.0)) (not (= (- ?x69 (* 2.0 x ?x55 ?x55 z00)) 0.0)))))
 (let (($x33 (= (- (+ (* (- 1.0) x00 y00) (* x y) z) z00) 0.0)))
 (let (($x74 (and $x33 $x73)))
 (rewrite (= $x74 $x564)))))))))))))))))))))))))))
 ))
 (let ((@x76 (asserted $x75)))
 (let ((@x758 (mp (mp @x76 (quant-intro (proof-bind ?x533) (= $x75 $x544)) $x544) (rewrite (= $x544 $x597)) $x597)))
 (mp @x758 @x1174 false))))))))))))

(:max-memory   17.73
 :memory       17.40
 :num-allocs   72852
 :num-checks   1
 :rlimit-count 2035
 :time         0.00
 :total-time   0.01)
