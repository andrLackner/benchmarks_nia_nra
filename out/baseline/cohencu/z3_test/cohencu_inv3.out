unsat
((set-logic NIA)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun y!2 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x1183 (* y00 z!1)))
 (let ((?x792 (* 12 ?x1183)))
 (let ((?x791 (* (- 1) (* z00 z00 z!1))))
 (let ((?x336 (* 6 (* z00 z!1))))
 (let ((?x431 (* z00 y00)))
 (let ((?x609 (* (- 18) ?x431)))
 (let ((?x482 (* (- 108) x!3)))
 (let ((?x325 (* z!1 y!2)))
 (let ((?x1307 (* 6 ?x325)))
 (let ((?x1306 (* (- 72) y!2)))
 (let ((?x74 (* 108 x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x339 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) ?x1306 ?x1307 ?x482 ?x609 ?x336 ?x791 ?x792)))
 (let (($x760 (<= ?x339 0)))
 (let (($x795 (= ?x339 0)))
 (let ((?x1235 (+ (* 36 z00) (* 144 y00) ?x55 ?x74 (* (- 12) (* z00 z00)) (* (- 36) z!1) (* (- 144) y!2) ?x1307 ?x482 ?x609 ?x336 (* 6 (* z!1 z!1)) ?x791 ?x792)))
 (let (($x1236 (= ?x1235 0)))
 (let (($x762 (not $x1236)))
 (let ((?x1294 (* y!2 y!2)))
 (let ((?x341 (* 24 ?x1294)))
 (let ((?x1227 (* 108 (* x00 x00))))
 (let ((?x1124 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1120 (* z00 z00 z00 y00)))
 (let ((?x1030 (* (- 36) (* z00 y00 x00))))
 (let ((?x915 (* 16 (* y00 y00 y00))))
 (let ((?x829 (* z00 z00 x00)))
 (let ((?x1080 (* (- 18) ?x829)))
 (let ((?x664 (* 108 (* x!3 x!3))))
 (let ((?x703 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x645 (* z00 z00 y00)))
 (let ((?x1181 (* (- 10) ?x645)))
 (let ((?x620 (* z00 y00 y00)))
 (let ((?x655 (* (- 12) ?x620)))
 (let ((?x1091 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x525 (* y00 y00)))
 (let ((?x980 (* 96 ?x525)))
 (let ((?x494 (* z00 x00)))
 (let ((?x388 (* 36 ?x494)))
 (let ((?x807 (* 24 ?x431)))
 (let ((?x380 (* y00 x00)))
 (let ((?x371 (* 216 ?x380)))
 (let ((?x1182 (+ (* z00 z00 y!2 y!2) ?x371 (* (- 24) (* z00 y!2)) ?x807 (* (- 36) (* z00 x!3)) (* 18 (* z00 z00 x!3)) ?x388 (* 10 (* z00 z00 y!2)) ?x980 ?x1091 (* (- 6) (* z00 y!2 y!2)) (* 108 (* y!2 x!3)) ?x655 ?x1181 ?x703 (* 18 (* z00 y00 y!2)) ?x664 (* (- 12) (* y00 y!2 y!2)) (* (- 216) (* x00 x!3)) (* 36 (* z00 y00 x!3)) ?x1080 (* (- 2) (* z00 z00 z00 x!3)) (* (- 216) (* y00 x!3)) ?x915 (* (- 1) (* z00 z00 z00 y!2)) ?x1030 (* (- 108) (* x00 y!2)) ?x1120 ?x1124 (* (- 120) (* y00 y!2)) ?x1227 ?x341)))
 (let ((?x869 (* (- 12) ?x1183)))
 (let ((?x312 (* (- 18) (* x00 z!1))))
 (let ((?x310 (* 18 (* z!1 x!3))))
 (let ((?x722 (* z00 y00 y!2)))
 (let ((?x560 (* 6 ?x431)))
 (let ((?x292 (* 12 ?x325)))
 (let ((?x439 (+ ?x67 ?x74 ?x1306 ?x292 ?x482 (* 18 ?x380) (* (- 6) (* z00 y!2)) ?x560 (* 3 (* z00 z00 x!3)) (* 3 (* z00 z00 y!2)) (* 36 ?x525) (* 2 (* y00 y00 z!1)) (* (- 2) (* z00 y!2 y!2)) (* 18 (* y!2 x!3)) ?x620 (* (- 3) ?x645) (* (- 1) (* z!1 y!2 y!2)) (* (- 3) (* z00 x00 z!1)) ?x722 ?x310 (* (- 3) ?x829) (* (- 18) (* y00 x!3)) (* (- 1) (* y00 z!1 y!2)) (* 3 (* z00 z!1 x!3)) (* (- 18) (* x00 y!2)) ?x312 ?x869 (* (- 36) (* y00 y!2)))))
 (let ((?x516 (* z00 z00 y!2)))
 (let ((?x719 (* (- 6) ?x431)))
 (let ((?x328 (+ ?x67 ?x74 ?x1306 ?x292 ?x482 (* 6 (* z00 y!2)) ?x719 (* 18 (* z00 x!3)) (* (- 18) ?x494) ?x516 (* 24 ?x525) (* (- 1) ?x645) (* z00 y00 z!1) ?x310 (* (- 1) (* z00 z!1 y!2)) ?x312 ?x869 (* (- 12) (* y00 y!2)) (* (- 12) ?x1294))))
 (let ((?x1100 (* z!1 z!1)))
 (let ((?x290 (* z00 z00)))
 (let ((?x1002 (* (- 1) ?x290)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x528 (+ ?x49 ?x43 ?x1002 (* (- 6) z!1) (* (- 12) y!2) ?x1100)))
 (let (($x505 (= ?x528 0)))
 (let (($x698 (and (= (+ z00 (* (- 6) n00) (* (- 1) z!1) (* 6 n!0)) 0) $x505 $x795 (= ?x328 0) (= ?x439 0) (= ?x1182 0) $x762)))
 (let ((?x846 (* (- 6) (* z!1 z00))))
 (let ((?x432 (* 18 ?x431)))
 (let ((?x828 (* z!1 y00)))
 (let ((?x1126 (* (- 12) ?x828)))
 (let ((?x870 (* y!2 z!1)))
 (let ((?x831 (* (- 6) ?x870)))
 (let ((?x1169 (* 12 ?x290)))
 (let ((?x868 (* z!1 z00 z00)))
 (let ((?x510 (* (- 108) x00)))
 (let ((?x383 (* (- 1) ?x55)))
 (let ((?x960 (* (- 144) y00)))
 (let ((?x1041 (* (- 36) z00)))
 (let ((?x861 (* 108 x!3)))
 (let ((?x1140 (+ ?x861 (* 144 y!2) (* 36 z!1) ?x1041 ?x960 (* (- 6) ?x1100) ?x383 ?x510 ?x868 ?x1169 ?x831 ?x1126 ?x432 ?x846)))
 (let ((?x356 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x371 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x807 ?x388 ?x341 ?x980 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x655 ?x1181 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x703 ?x664 ?x1091 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1080 (* (- 216) (* x!3 y00)) ?x915 (* (- 12) (* y!2 y!2 y00)) ?x1030 (* (- 216) (* x!3 x00)) ?x1120 ?x1124 (* 36 (* x!3 z00 y00)) ?x1227)))
 (let ((?x830 (* 3 ?x829)))
 (let ((?x892 (* 3 ?x645)))
 (let ((?x627 (* (- 1) ?x620)))
 (let ((?x379 (* 18 (* z!1 x00))))
 (let ((?x812 (* (- 36) ?x525)))
 (let ((?x1164 (* (- 18) (* x!3 z!1))))
 (let ((?x657 (* 12 ?x828)))
 (let ((?x381 (* (- 18) ?x380)))
 (let ((?x797 (* (- 12) ?x870)))
 (let ((?x453 (* (- 72) y00)))
 (let ((?x1191 (* 72 y!2)))
 (let ((?x816 (+ ?x861 ?x1191 ?x453 ?x510 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x797 ?x381 (* (- 18) (* x!3 y!2)) ?x657 ?x719 ?x1164 ?x812 ?x379 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x627 ?x892 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x830 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x543 (* (- 24) ?x525)))
 (let ((?x496 (* 18 ?x494)))
 (let ((?x349 (+ ?x861 ?x1191 ?x453 ?x510 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) ?x797 (* (- 1) (* z!1 z00 y00)) ?x657 ?x560 ?x1164 ?x496 (* 12 ?x1294) ?x543 ?x379 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x645 (* (- 18) (* x!3 z00)))))
 (let ((?x394 (* 6 ?x290)))
 (let (($x818 (= (+ ?x861 ?x1191 ?x453 ?x383 ?x510 ?x868 ?x394 ?x831 ?x1126 ?x432 ?x846) 0)))
 (let ((?x361 (* (- 12) y00)))
 (let ((?x360 (* (- 6) z00)))
 (let (($x976 (= (+ (* 12 y!2) (* 6 z!1) ?x360 ?x361 (* (- 1) ?x1100) ?x290) 0)))
 (let (($x244 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x976 $x818 (= ?x349 0) (= ?x816 0) (= ?x356 0) (not (= ?x1140 0)))))
 (let (($x962 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x479 (* (- 6) (* z z00))))
 (let ((?x431 (* z00 y00)))
 (let ((?x432 (* 18 ?x431)))
 (let ((?x405 (* z y00)))
 (let ((?x418 (* (- 12) ?x405)))
 (let ((?x374 (* y z)))
 (let ((?x375 (* (- 6) ?x374)))
 (let ((?x290 (* z00 z00)))
 (let ((?x1169 (* 12 ?x290)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x510 (* (- 108) x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x383 (* (- 1) ?x55)))
 (let ((?x50 (* z z)))
 (let ((?x497 (* (- 6) ?x50)))
 (let ((?x960 (* (- 144) y00)))
 (let ((?x1041 (* (- 36) z00)))
 (let ((?x64 (* 108 x)))
 (let ((?x575 (+ ?x64 (* 144 y) (* 36 z) ?x1041 ?x960 ?x497 ?x383 ?x510 ?x76 ?x1169 ?x375 ?x418 ?x432 ?x479)))
 (let ((?x1227 (* 108 (* x00 x00))))
 (let ((?x1124 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1120 (* z00 z00 z00 y00)))
 (let ((?x1030 (* (- 36) (* z00 y00 x00))))
 (let ((?x915 (* 16 (* y00 y00 y00))))
 (let ((?x829 (* z00 z00 x00)))
 (let ((?x1080 (* (- 18) ?x829)))
 (let ((?x785 (* (- 4) (* y y y))))
 (let ((?x735 (* 108 (* x x))))
 (let ((?x703 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x645 (* z00 z00 y00)))
 (let ((?x1181 (* (- 10) ?x645)))
 (let ((?x620 (* z00 y00 y00)))
 (let ((?x655 (* (- 12) ?x620)))
 (let ((?x525 (* y00 y00)))
 (let ((?x980 (* 96 ?x525)))
 (let ((?x499 (* y y)))
 (let ((?x730 (* 24 ?x499)))
 (let ((?x494 (* z00 x00)))
 (let ((?x388 (* 36 ?x494)))
 (let ((?x807 (* 24 ?x431)))
 (let ((?x380 (* y00 x00)))
 (let ((?x371 (* 216 ?x380)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1247 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x371 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x807 ?x388 ?x730 ?x980 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x655 ?x1181 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x703 ?x735 ?x785 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1080 (* (- 216) (* x y00)) ?x915 (* (- 12) (* y y y00)) ?x1030 (* (- 216) (* x x00)) ?x1120 ?x1124 (* 36 (* x z00 y00)) ?x1227)))
 (let (($x1252 (= ?x1247 0)))
 (let ((?x830 (* 3 ?x829)))
 (let ((?x892 (* 3 ?x645)))
 (let ((?x627 (* (- 1) ?x620)))
 (let ((?x557 (* 18 (* z x00))))
 (let ((?x812 (* (- 36) ?x525)))
 (let ((?x468 (* (- 18) (* x z))))
 (let ((?x719 (* (- 6) ?x431)))
 (let ((?x406 (* 12 ?x405)))
 (let ((?x381 (* (- 18) ?x380)))
 (let ((?x403 (* (- 12) ?x374)))
 (let ((?x135 (* y y z)))
 (let ((?x453 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x948 (+ ?x64 ?x71 ?x453 ?x510 (* (- 3) (* y z00 z00)) ?x135 ?x403 ?x381 (* (- 18) (* x y)) ?x406 ?x719 ?x468 ?x812 ?x557 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x627 ?x892 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x830 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x955 (= ?x948 0)))
 (let ((?x543 (* (- 24) ?x525)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x496 (* 18 ?x494)))
 (let ((?x560 (* 6 ?x431)))
 (let ((?x103 (* y z z00)))
 (let ((?x699 (+ ?x64 ?x71 ?x453 ?x510 ?x103 (* (- 1) (* y z00 z00)) ?x403 (* (- 1) (* z z00 y00)) ?x406 ?x560 ?x468 ?x496 ?x500 ?x543 ?x557 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x645 (* (- 18) (* x z00)))))
 (let (($x704 (= ?x699 0)))
 (let ((?x394 (* 6 ?x290)))
 (let (($x531 (= (+ ?x64 ?x71 ?x453 ?x383 ?x510 ?x76 ?x394 ?x375 ?x418 ?x432 ?x479) 0)))
 (let ((?x361 (* (- 12) y00)))
 (let ((?x360 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x364 (= (+ ?x45 ?x46 ?x360 ?x361 (* (- 1) ?x50) ?x290) 0)))
 (let (($x282 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x282 $x364 $x531 $x704 $x955 $x1252 (not (= ?x575 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!37))
 ))
 (let (($x337 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x510 (* (- 108) x00)))
 (let ((?x1072 (* 72 z)))
 (let ((?x453 (* (- 72) y00)))
 (let ((?x1095 (* 180 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x838 (* y00 z00)))
 (let ((?x839 (* 18 ?x838)))
 (let ((?x290 (* z00 z00)))
 (let ((?x394 (* 6 ?x290)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x383 (* (- 1) ?x55)))
 (let ((?x697 (+ (* (- 6) (* (+ 6 z) (+ y z))) ?x383 ?x394 (* (- 12) (* y00 (+ 6 z))) ?x839 ?x64 ?x1095 ?x453 (* (- 6) (* z00 (+ 6 z))) ?x1072 ?x510 (* z00 z00 (+ 6 z)))))
 (let ((?x1227 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x525 (* y00 y00)))
 (let ((?x980 (* 96 ?x525)))
 (let ((?x915 (* 16 (* y00 y00 y00))))
 (let ((?x785 (* (- 4) (* y y y))))
 (let ((?x735 (* 108 (* x x))))
 (let ((?x499 (* y y)))
 (let ((?x730 (* 24 ?x499)))
 (let ((?x1305 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x730 ?x735 ?x785 (* 18 (* y00 z00 y)) (* 24 ?x838) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x915 (* (- 6) (* z00 y y)) ?x980 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1227 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x480 (* 18 (* x00 z))))
 (let ((?x812 (* (- 36) ?x525)))
 (let ((?x320 (* z y)))
 (let ((?x559 (* (- 12) ?x320)))
 (let ((?x977 (* y00 z)))
 (let ((?x875 (* 12 ?x977)))
 (let ((?x402 (* (- 18) (* z x))))
 (let ((?x946 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x402 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x875 (* (- 6) ?x838) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x559 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x812 ?x480 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x453 (* 18 (* y00 x)) ?x71 ?x510 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x543 (* (- 24) ?x525)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x591 (+ (* (- 1) (* y00 z00 z)) ?x559 ?x402 (* 18 (* x00 z00)) ?x500 ?x543 ?x480 ?x875 (* 6 ?x838) (* 12 (* y00 y)) ?x64 ?x453 (* (- 6) (* z00 y)) ?x71 ?x510 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x540 (+ (* (- 6) ?x320) ?x383 ?x394 (* (- 12) ?x977) ?x839 ?x64 ?x453 (* (- 6) (* z00 z)) ?x71 ?x510 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1002 (* (- 1) ?x290)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1002 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x540 0) (= ?x591 0) (= ?x946 0) (= ?x1305 0) (not (= ?x697 0))))))))))))))))))))))))))))))))))))))))))) :qid k!37))
 ))
 (let ((?x393 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x479 (* (- 6) (* z z00))))
 (let ((?x431 (* z00 y00)))
 (let ((?x432 (* 18 ?x431)))
 (let ((?x405 (* z y00)))
 (let ((?x418 (* (- 12) ?x405)))
 (let ((?x374 (* y z)))
 (let ((?x375 (* (- 6) ?x374)))
 (let ((?x290 (* z00 z00)))
 (let ((?x1169 (* 12 ?x290)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x510 (* (- 108) x00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x383 (* (- 1) ?x55)))
 (let ((?x50 (* z z)))
 (let ((?x497 (* (- 6) ?x50)))
 (let ((?x960 (* (- 144) y00)))
 (let ((?x1041 (* (- 36) z00)))
 (let ((?x64 (* 108 x)))
 (let ((?x575 (+ ?x64 (* 144 y) (* 36 z) ?x1041 ?x960 ?x497 ?x383 ?x510 ?x76 ?x1169 ?x375 ?x418 ?x432 ?x479)))
 (let ((?x1227 (* 108 (* x00 x00))))
 (let ((?x1124 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1120 (* z00 z00 z00 y00)))
 (let ((?x1030 (* (- 36) (* z00 y00 x00))))
 (let ((?x915 (* 16 (* y00 y00 y00))))
 (let ((?x829 (* z00 z00 x00)))
 (let ((?x1080 (* (- 18) ?x829)))
 (let ((?x785 (* (- 4) (* y y y))))
 (let ((?x735 (* 108 (* x x))))
 (let ((?x703 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x645 (* z00 z00 y00)))
 (let ((?x1181 (* (- 10) ?x645)))
 (let ((?x620 (* z00 y00 y00)))
 (let ((?x655 (* (- 12) ?x620)))
 (let ((?x525 (* y00 y00)))
 (let ((?x980 (* 96 ?x525)))
 (let ((?x499 (* y y)))
 (let ((?x730 (* 24 ?x499)))
 (let ((?x494 (* z00 x00)))
 (let ((?x388 (* 36 ?x494)))
 (let ((?x807 (* 24 ?x431)))
 (let ((?x380 (* y00 x00)))
 (let ((?x371 (* 216 ?x380)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1247 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x371 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x807 ?x388 ?x730 ?x980 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x655 ?x1181 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x703 ?x735 ?x785 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1080 (* (- 216) (* x y00)) ?x915 (* (- 12) (* y y y00)) ?x1030 (* (- 216) (* x x00)) ?x1120 ?x1124 (* 36 (* x z00 y00)) ?x1227)))
 (let (($x1252 (= ?x1247 0)))
 (let ((?x830 (* 3 ?x829)))
 (let ((?x892 (* 3 ?x645)))
 (let ((?x627 (* (- 1) ?x620)))
 (let ((?x557 (* 18 (* z x00))))
 (let ((?x812 (* (- 36) ?x525)))
 (let ((?x468 (* (- 18) (* x z))))
 (let ((?x719 (* (- 6) ?x431)))
 (let ((?x406 (* 12 ?x405)))
 (let ((?x381 (* (- 18) ?x380)))
 (let ((?x403 (* (- 12) ?x374)))
 (let ((?x135 (* y y z)))
 (let ((?x453 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x948 (+ ?x64 ?x71 ?x453 ?x510 (* (- 3) (* y z00 z00)) ?x135 ?x403 ?x381 (* (- 18) (* x y)) ?x406 ?x719 ?x468 ?x812 ?x557 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x627 ?x892 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x830 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x955 (= ?x948 0)))
 (let ((?x543 (* (- 24) ?x525)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x496 (* 18 ?x494)))
 (let ((?x560 (* 6 ?x431)))
 (let ((?x103 (* y z z00)))
 (let ((?x699 (+ ?x64 ?x71 ?x453 ?x510 ?x103 (* (- 1) (* y z00 z00)) ?x403 (* (- 1) (* z z00 y00)) ?x406 ?x560 ?x468 ?x496 ?x500 ?x543 ?x557 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x645 (* (- 18) (* x z00)))))
 (let (($x704 (= ?x699 0)))
 (let ((?x394 (* 6 ?x290)))
 (let (($x531 (= (+ ?x64 ?x71 ?x453 ?x383 ?x510 ?x76 ?x394 ?x375 ?x418 ?x432 ?x479) 0)))
 (let ((?x361 (* (- 12) y00)))
 (let ((?x360 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x364 (= (+ ?x45 ?x46 ?x360 ?x361 (* (- 1) ?x50) ?x290) 0)))
 (let (($x282 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x793 (and $x282 $x364 $x531 $x704 $x955 $x1252 (not (= ?x575 0)))))
 (let ((?x1072 (* 72 z)))
 (let ((?x1095 (* 180 y)))
 (let ((?x838 (* y00 z00)))
 (let ((?x839 (* 18 ?x838)))
 (let ((?x697 (+ (* (- 6) (* (+ 6 z) (+ y z))) ?x383 ?x394 (* (- 12) (* y00 (+ 6 z))) ?x839 ?x64 ?x1095 ?x453 (* (- 6) (* z00 (+ 6 z))) ?x1072 ?x510 (* z00 z00 (+ 6 z)))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1305 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x730 ?x735 ?x785 (* 18 (* y00 z00 y)) (* 24 ?x838) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x915 (* (- 6) (* z00 y y)) ?x980 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1227 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x480 (* 18 (* x00 z))))
 (let ((?x320 (* z y)))
 (let ((?x559 (* (- 12) ?x320)))
 (let ((?x977 (* y00 z)))
 (let ((?x875 (* 12 ?x977)))
 (let ((?x402 (* (- 18) (* z x))))
 (let ((?x946 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x402 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x875 (* (- 6) ?x838) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x559 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x812 ?x480 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x453 (* 18 (* y00 x)) ?x71 ?x510 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x591 (+ (* (- 1) (* y00 z00 z)) ?x559 ?x402 (* 18 (* x00 z00)) ?x500 ?x543 ?x480 ?x875 (* 6 ?x838) (* 12 (* y00 y)) ?x64 ?x453 (* (- 6) (* z00 y)) ?x71 ?x510 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x540 (+ (* (- 6) ?x320) ?x383 ?x394 (* (- 12) ?x977) ?x839 ?x64 ?x453 (* (- 6) (* z00 z)) ?x71 ?x510 (* z00 z00 z))))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1002 (* (- 1) ?x290)))
 (let (($x646 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1002 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x540 0) (= ?x591 0) (= ?x946 0) (= ?x1305 0) (not (= ?x697 0)))))
 (rewrite (= $x646 $x793))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x237 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x62 (* 18 y00 z00)))
 (let ((?x57 (* 6 z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x221 (- (+ (- (* (- 6) (+ y z) (+ z 6)) ?x55) ?x57) (* 12 y00 (+ z 6)))))
 (let ((?x227 (- (- (+ ?x221 ?x62 (* 108 (+ x y))) ?x67) (* 6 (+ z 6) z00))))
 (let ((?x232 (+ (- (+ ?x227 (* 72 (+ y z))) ?x74) (* (+ z 6) z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x69 (- (+ (- (+ (- (* (- 6) y z) ?x55) ?x57) ?x59) ?x62 ?x64) ?x67)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ (- ?x69 (* 6 z z00)) ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x232 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!37))
 ))
 (let ((?x443 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x510 (* (- 108) x00)))
 (let ((?x1072 (* 72 z)))
 (let ((?x453 (* (- 72) y00)))
 (let ((?x1095 (* 180 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x838 (* y00 z00)))
 (let ((?x839 (* 18 ?x838)))
 (let ((?x290 (* z00 z00)))
 (let ((?x394 (* 6 ?x290)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x383 (* (- 1) ?x55)))
 (let ((?x697 (+ (* (- 6) (* (+ 6 z) (+ y z))) ?x383 ?x394 (* (- 12) (* y00 (+ 6 z))) ?x839 ?x64 ?x1095 ?x453 (* (- 6) (* z00 (+ 6 z))) ?x1072 ?x510 (* z00 z00 (+ 6 z)))))
 (let ((?x1227 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x525 (* y00 y00)))
 (let ((?x980 (* 96 ?x525)))
 (let ((?x915 (* 16 (* y00 y00 y00))))
 (let ((?x785 (* (- 4) (* y y y))))
 (let ((?x735 (* 108 (* x x))))
 (let ((?x499 (* y y)))
 (let ((?x730 (* 24 ?x499)))
 (let ((?x1305 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x730 ?x735 ?x785 (* 18 (* y00 z00 y)) (* 24 ?x838) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x915 (* (- 6) (* z00 y y)) ?x980 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1227 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x71 (* 72 y)))
 (let ((?x480 (* 18 (* x00 z))))
 (let ((?x812 (* (- 36) ?x525)))
 (let ((?x320 (* z y)))
 (let ((?x559 (* (- 12) ?x320)))
 (let ((?x977 (* y00 z)))
 (let ((?x875 (* 12 ?x977)))
 (let ((?x402 (* (- 18) (* z x))))
 (let ((?x946 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x402 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x875 (* (- 6) ?x838) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x559 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x812 ?x480 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x453 (* 18 (* y00 x)) ?x71 ?x510 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x543 (* (- 24) ?x525)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x591 (+ (* (- 1) (* y00 z00 z)) ?x559 ?x402 (* 18 (* x00 z00)) ?x500 ?x543 ?x480 ?x875 (* 6 ?x838) (* 12 (* y00 y)) ?x64 ?x453 (* (- 6) (* z00 y)) ?x71 ?x510 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x540 (+ (* (- 6) ?x320) ?x383 ?x394 (* (- 12) ?x977) ?x839 ?x64 ?x453 (* (- 6) (* z00 z)) ?x71 ?x510 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x1002 (* (- 1) ?x290)))
 (let (($x646 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x1002 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x540 0) (= ?x591 0) (= ?x946 0) (= ?x1305 0) (not (= ?x697 0)))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x62 (* 18 y00 z00)))
 (let ((?x57 (* 6 z00 z00)))
 (let ((?x221 (- (+ (- (* (- 6) (+ y z) (+ z 6)) ?x55) ?x57) (* 12 y00 (+ z 6)))))
 (let ((?x227 (- (- (+ ?x221 ?x62 (* 108 (+ x y))) ?x67) (* 6 (+ z 6) z00))))
 (let ((?x232 (+ (- (+ ?x227 (* 72 (+ y z))) ?x74) (* (+ z 6) z00 z00))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x69 (- (+ (- (+ (- (* (- 6) y z) ?x55) ?x57) ?x59) ?x62 ?x64) ?x67)))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x236 (and $x39 (= ?x51 0) (= (+ (- (+ (- ?x69 (* 6 z z00)) ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x232 0))))))
 (rewrite (= $x236 $x646)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x238 (asserted $x237)))
 (let ((@x647 (mp (mp @x238 (quant-intro (proof-bind ?x443) (= $x237 $x337)) $x337) (rewrite (= $x337 $x337)) $x337)))
 (let ((@x968 (mp~ (mp @x647 (quant-intro (proof-bind ?x393) (= $x337 $x962)) $x962) (sk (~ $x962 $x244)) $x244)))
 (let ((@x579 (mp @x968 (rewrite (= $x244 $x698)) $x698)))
 (let ((@x285 (and-elim @x579 $x795)))
 (let (($x900 (not (<= ?x1235 0))))
 (let (($x600 (>= ?x1235 0)))
 (let (($x803 (>= ?x339 0)))
 (let (($x1190 (>= ?x528 0)))
 (let ((@x260 (and-elim @x579 $x505)))
 (let ((@x352 ((_ th-lemma arith farkas 6 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x505) $x1190)) @x260 $x1190) (hypothesis (not $x600)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x795) $x803)) @x285 $x803) false)))
 (let ((@x585 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1236 $x900 (not $x600))) (and-elim @x579 $x762) (or $x900 (not $x600)))))
 (let (($x247 (<= ?x528 0)))
 ((_ th-lemma arith farkas 6 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x505) $x247)) @x260 $x247) (unit-resolution @x585 (lemma @x352 $x600) $x900) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x795) $x760)) @x285 $x760) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        8
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-num-rows            7
 :arith-pivots              2
 :arith-row-summations      3
 :arith-tableau-max-columns 93
 :arith-tableau-max-rows    7
 :conflicts                 2
 :decisions                 1
 :del-clause                20
 :max-memory                19.83
 :memory                    19.21
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                597139
 :num-checks                1
 :propagations              14
 :rlimit-count              6437
 :time                      0.01
 :total-time                0.02)
