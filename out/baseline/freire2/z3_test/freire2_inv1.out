unsat
((set-logic NIA)
(proof
(let (($x574 (exists ((r Int) (s Int) (x Int) )(! (let ((?x247 (* r00 r00)))
 (let ((?x540 (* (- 3) ?x247)))
 (let ((?x480 (* (- 1) s)))
 (let ((?x1107 (+ s00 ?x480 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x540)))
 (let (($x566 (not (= ?x1107 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x923 (* r00 s)))
 (let ((?x1278 (* 54 ?x923)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x663 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x663)))
 (let ((?x137 (* 9 s00)))
 (let ((?x799 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x799)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x789 (* r00 r00 s)))
 (let ((?x388 (* 36 ?x789)))
 (let ((?x1091 (* x s)))
 (let ((?x1083 (* (- 108) ?x1091)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1372 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1372)))
 (let ((?x249 (* s00 s)))
 (let ((?x737 (* (- 66) ?x249)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1261 (* x00 s)))
 (let ((?x1333 (* 108 ?x1261)))
 (let ((?x907 (* 216 (* r00 r00 r00 s00))))
 (let ((?x433 (* r00 s00 s00)))
 (let ((?x1197 (* (- 108) ?x433)))
 (let ((?x1224 (* s00 x)))
 (let ((?x877 (* 108 ?x1224)))
 (let ((?x577 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x1348 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x242 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1097 (* (- 4) ?x749)))
 (let ((?x523 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x435 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1045 (* 15 ?x491)))
 (let ((?x707 (* r00 s00)))
 (let ((?x739 (* (- 54) ?x707)))
 (let ((?x468 (* r00 x00)))
 (let ((?x502 (* 108 ?x468)))
 (let ((?x1064 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x1064 ?x502 ?x739 ?x1045 ?x435 ?x523 ?x1097 ?x242 ?x1348 ?x577 ?x877 ?x1197 ?x907 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x388 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x933 (* (- 9) s00)))
 (let ((?x862 (* (- 15) ?x537)))
 (let ((?x836 (* (- 36) (* r00 r00 x00))))
 (let ((?x752 (* 6 ?x751)))
 (let ((?x515 (* 3 ?x491)))
 (let ((?x497 (* (- 54) ?x468)))
 (let ((?x601 (+ (* (- 24) (* s r)) ?x497 (* 36 (* r00 x r)) (* 24 ?x707) ?x515 (* 54 (* x r)) (* (- 6) ?x1224) (* 4 (* r00 s s)) (* (- 2) ?x433) (* (- 6) ?x1261) (* 12 ?x249) (* (- 2) ?x1372) ?x752 (* 2 (* s s r)) (* 6 ?x1091) (* (- 4) (* s00 s00 r)) (* (- 36) ?x789) ?x836 ?x862 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x799) ?x933 (* 36 ?x663) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x923) (* 36 (* r00 r00 x)))))
 (let (($x611 (= ?x601 0)))
 (let ((?x47 (* 3 s)))
 (let ((?x324 (* (- 3) s00)))
 (let ((?x550 (* (- 4) ?x537)))
 (let ((?x492 (* 2 ?x491)))
 (let ((?x482 (* (- 18) ?x468)))
 (let ((?x803 (+ (* (- 9) (* s r)) ?x482 (* 9 ?x707) ?x492 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x789) ?x550 (* 18 ?x799) ?x324 (* 6 ?x663) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 ?x249) (* (- 9) ?x923) (* (- 6) (* r00 s00 r)))))
 (let (($x817 (= ?x803 0)))
 (let ((?x415 (* r00 r00 r00)))
 (let ((?x1000 (* (- 12) ?x415)))
 (let ((?x59 (* 6 x00)))
 (let ((?x298 (* (- 6) x)))
 (let ((?x708 (* 6 ?x707)))
 (let ((?x1414 (* s00 r)))
 (let ((?x745 (* (- 4) ?x1414)))
 (let ((?x48 (* 3 r00)))
 (let ((?x937 (* (- 3) r)))
 (let ((?x942 (* 12 (* r00 r00 r))))
 (let ((?x934 (* s r)))
 (let ((?x935 (* (- 2) ?x934)))
 (let ((?x1013 (+ ?x935 ?x942 ?x937 ?x324 ?x47 ?x48 ?x745 ?x708 ?x298 ?x59 ?x1000)))
 (let (($x1222 (= ?x1013 0)))
 (let ((?x235 (* r r)))
 (let ((?x505 (* 3 ?x235)))
 (let ((?x931 (+ s00 ?x480 ?x505 ?x540)))
 (let (($x1087 (= ?x931 0)))
 (and $x1087 $x1222 $x817 $x611 $x341 $x566))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x748 (exists ((r Int) (s Int) (x Int) )(! false :qid k!34))
 ))
 (let ((?x671 (lambda ((r Int) (s Int) (x Int) )(let ((?x247 (* r00 r00)))
 (let ((?x540 (* (- 3) ?x247)))
 (let ((?x480 (* (- 1) s)))
 (let ((?x1107 (+ s00 ?x480 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x540)))
 (let (($x566 (not (= ?x1107 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x923 (* r00 s)))
 (let ((?x1278 (* 54 ?x923)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x663 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x663)))
 (let ((?x137 (* 9 s00)))
 (let ((?x799 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x799)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x789 (* r00 r00 s)))
 (let ((?x388 (* 36 ?x789)))
 (let ((?x1091 (* x s)))
 (let ((?x1083 (* (- 108) ?x1091)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1372 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1372)))
 (let ((?x249 (* s00 s)))
 (let ((?x737 (* (- 66) ?x249)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1261 (* x00 s)))
 (let ((?x1333 (* 108 ?x1261)))
 (let ((?x907 (* 216 (* r00 r00 r00 s00))))
 (let ((?x433 (* r00 s00 s00)))
 (let ((?x1197 (* (- 108) ?x433)))
 (let ((?x1224 (* s00 x)))
 (let ((?x877 (* 108 ?x1224)))
 (let ((?x577 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x1348 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x242 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1097 (* (- 4) ?x749)))
 (let ((?x523 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x435 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1045 (* 15 ?x491)))
 (let ((?x707 (* r00 s00)))
 (let ((?x739 (* (- 54) ?x707)))
 (let ((?x468 (* r00 x00)))
 (let ((?x502 (* 108 ?x468)))
 (let ((?x1064 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x1064 ?x502 ?x739 ?x1045 ?x435 ?x523 ?x1097 ?x242 ?x1348 ?x577 ?x877 ?x1197 ?x907 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x388 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x933 (* (- 9) s00)))
 (let ((?x862 (* (- 15) ?x537)))
 (let ((?x836 (* (- 36) (* r00 r00 x00))))
 (let ((?x752 (* 6 ?x751)))
 (let ((?x515 (* 3 ?x491)))
 (let ((?x497 (* (- 54) ?x468)))
 (let ((?x601 (+ (* (- 24) (* s r)) ?x497 (* 36 (* r00 x r)) (* 24 ?x707) ?x515 (* 54 (* x r)) (* (- 6) ?x1224) (* 4 (* r00 s s)) (* (- 2) ?x433) (* (- 6) ?x1261) (* 12 ?x249) (* (- 2) ?x1372) ?x752 (* 2 (* s s r)) (* 6 ?x1091) (* (- 4) (* s00 s00 r)) (* (- 36) ?x789) ?x836 ?x862 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x799) ?x933 (* 36 ?x663) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x923) (* 36 (* r00 r00 x)))))
 (let (($x611 (= ?x601 0)))
 (let ((?x47 (* 3 s)))
 (let ((?x324 (* (- 3) s00)))
 (let ((?x550 (* (- 4) ?x537)))
 (let ((?x492 (* 2 ?x491)))
 (let ((?x482 (* (- 18) ?x468)))
 (let ((?x803 (+ (* (- 9) (* s r)) ?x482 (* 9 ?x707) ?x492 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x789) ?x550 (* 18 ?x799) ?x324 (* 6 ?x663) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 ?x249) (* (- 9) ?x923) (* (- 6) (* r00 s00 r)))))
 (let (($x817 (= ?x803 0)))
 (let ((?x415 (* r00 r00 r00)))
 (let ((?x1000 (* (- 12) ?x415)))
 (let ((?x59 (* 6 x00)))
 (let ((?x298 (* (- 6) x)))
 (let ((?x708 (* 6 ?x707)))
 (let ((?x1414 (* s00 r)))
 (let ((?x745 (* (- 4) ?x1414)))
 (let ((?x48 (* 3 r00)))
 (let ((?x937 (* (- 3) r)))
 (let ((?x942 (* 12 (* r00 r00 r))))
 (let ((?x934 (* s r)))
 (let ((?x935 (* (- 2) ?x934)))
 (let ((?x1013 (+ ?x935 ?x942 ?x937 ?x324 ?x47 ?x48 ?x745 ?x708 ?x298 ?x59 ?x1000)))
 (let (($x1222 (= ?x1013 0)))
 (let ((?x235 (* r r)))
 (let ((?x505 (* 3 ?x235)))
 (let ((?x931 (+ s00 ?x480 ?x505 ?x540)))
 (let (($x1087 (= ?x931 0)))
 (let (($x732 (and $x1087 $x1222 $x817 $x611 $x341 $x566)))
 (let (($x280 (= (+ s (* (- 1) s00) (* (- 3) ?x235) (* 3 ?x247)) 0)))
 (let (($x334 (not $x280)))
 (let ((?x593 (* s00 r00 r00)))
 (let ((?x946 (* 36 ?x593)))
 (let ((?x511 (* s r00 r00)))
 (let ((?x810 (* (- 36) ?x511)))
 (let ((?x1323 (+ ?x143 ?x933 (* 54 (* s00 r00)) (* (- 216) (* s00 r00 x00)) (* (- 108) ?x468) (* (- 15) ?x491) ?x810 (* (- 51) ?x537) (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x946 (* 108 (* s00 s00 r00)) (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) (* 36 (* s00 s00 r00 r00)) (* (- 108) (* s s00 r00)) (* 4 ?x749) (* 108 ?x751) (* 108 (* s x)) (* (- 108) ?x800) (* 432 ?x828) (* 12 (* s s s00)) (* (- 216) (* s00 r00 r00 r00)) (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) (* (- 16) ?x1130) (* 216 (* x x00)) (* (- 108) ?x1292))))
 (let (($x1324 (= ?x1323 0)))
 (let ((?x1025 (+ ?x143 ?x933 (* (- 24) (* r s)) (* 24 (* r s00)) (* 24 (* s00 r00)) ?x497 ?x515 (* 54 (* r x)) (* 36 (* r x r00)) ?x810 ?x862 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x946 (* 4 (* s s r00)) (* (- 54) (* r x00)) (* (- 2) (* s00 s00 r00)) (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x752 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x836 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1030 (= ?x1025 0)))
 (let ((?x691 (+ ?x47 ?x324 (* (- 9) (* r s)) (* 9 (* r s00)) (* 9 (* s00 r00)) ?x482 ?x492 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x511) ?x550 (* 18 (* x r00)) (* 6 ?x593) (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x698 (= ?x691 0)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x451 (+ ?x43 (* (- 3) s) ?x56 ?x44 (* (- 3) r00) (* (- 6) x00) (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) (* (- 6) (* s00 r00)) (* 12 ?x415))))
 (let (($x452 (= ?x451 0)))
 (let (($x1105 (and $x280 $x452 $x698 $x1030 $x1324 $x334)))
 (let ((?x1266 (* x x00)))
 (let ((?x1265 (* (- 216) ?x1266)))
 (let ((?x1126 (* s s r00 r00)))
 (let ((?x1059 (* 36 ?x1126)))
 (let ((?x1100 (* x s00 r00)))
 (let ((?x1057 (* (- 216) ?x1100)))
 (let ((?x1022 (* x r00 r00 r00)))
 (let ((?x658 (* 432 ?x1022)))
 (let ((?x1002 (* s00 r00 r00 r00)))
 (let ((?x352 (* 216 ?x1002)))
 (let ((?x886 (* s s s00)))
 (let ((?x476 (* (- 12) ?x886)))
 (let ((?x759 (* s x)))
 (let ((?x674 (* (- 108) ?x759)))
 (let ((?x725 (* s s00 r00)))
 (let ((?x1056 (* 108 ?x725)))
 (let ((?x677 (* s00 s00 r00 r00)))
 (let ((?x640 (* (- 36) ?x677)))
 (let ((?x670 (* s x00)))
 (let ((?x1255 (* 108 ?x670)))
 (let ((?x646 (* s r00)))
 (let ((?x1234 (* 54 ?x646)))
 (let ((?x634 (* s s00)))
 (let ((?x617 (* (- 66) ?x634)))
 (let ((?x614 (* s00 s00 r00)))
 (let ((?x925 (* (- 108) ?x614)))
 (let ((?x1217 (* (- 36) ?x593)))
 (let ((?x571 (* s r00 r00 r00)))
 (let ((?x792 (* (- 216) ?x571)))
 (let ((?x563 (* x r00)))
 (let ((?x1183 (* (- 108) ?x563)))
 (let ((?x546 (* x s00)))
 (let ((?x613 (* 108 ?x546)))
 (let ((?x1213 (* 36 ?x511)))
 (let ((?x459 (* s00 r00 x00)))
 (let ((?x624 (* 216 ?x459)))
 (let ((?x372 (* s00 r00)))
 (let ((?x620 (* (- 54) ?x372)))
 (let ((?x1271 (+ ?x1260 ?x137 ?x620 ?x624 ?x502 ?x1045 ?x1213 ?x1111 ?x613 ?x1183 ?x792 ?x1217 ?x925 ?x617 ?x1234 ?x1255 ?x640 ?x1056 ?x1097 ?x893 ?x674 ?x242 ?x1348 ?x476 ?x352 ?x658 ?x1057 ?x1059 ?x1041 ?x1265 ?x316)))
 (let (($x1084 (= ?x1271 0)))
 (let ((?x1263 (+ ?x624 ?x502 ?x620 ?x1045 ?x792 ?x640 ?x1097 ?x242 ?x1348 ?x476 ?x613 ?x925 ?x352 ?x1255 ?x658 ?x617 ?x1056 ?x893 ?x1057 ?x1059 ?x1041 ?x674 ?x1213 ?x1111 ?x1183 ?x137 ?x1217 ?x1260 ?x1234 ?x1265 ?x316)))
 (let ((@x1269 (monotonicity (rewrite (= ?x1064 ?x624)) (rewrite (= ?x739 ?x620)) (rewrite (= ?x435 ?x792)) (rewrite (= ?x523 ?x640)) (rewrite (= ?x577 ?x476)) (rewrite (= ?x877 ?x613)) (rewrite (= ?x1197 ?x925)) (rewrite (= ?x907 ?x352)) (rewrite (= ?x1333 ?x1255)) (rewrite (= ?x467 ?x658)) (rewrite (= ?x737 ?x617)) (rewrite (= ?x805 ?x1056)) (rewrite (= ?x998 ?x1057)) (rewrite (= ?x1037 ?x1059)) (rewrite (= ?x1083 ?x674)) (rewrite (= ?x388 ?x1213)) (rewrite (= ?x1153 ?x1183)) (rewrite (= ?x1211 ?x1217)) (rewrite (= ?x1278 ?x1234)) (rewrite (= ?x701 ?x1265)) (= ?x335 ?x1263))))
 (let ((@x1049 (monotonicity (trans @x1269 (rewrite (= ?x1263 ?x1271)) (= ?x335 ?x1271)) (= $x341 $x1084))))
 (let ((?x1359 (* 6 ?x372)))
 (let ((?x345 (* r s00)))
 (let ((?x781 (* (- 4) ?x345)))
 (let ((?x297 (* r r00 r00)))
 (let ((?x777 (* 12 ?x297)))
 (let ((?x291 (* r s)))
 (let ((?x469 (* (- 2) ?x291)))
 (let ((?x526 (+ ?x937 ?x47 ?x298 ?x324 ?x48 ?x59 ?x469 ?x777 ?x781 ?x1359 ?x1000)))
 (let (($x1219 (= ?x526 0)))
 (let ((?x1347 (+ ?x469 ?x777 ?x937 ?x324 ?x47 ?x48 ?x781 ?x1359 ?x298 ?x59 ?x1000)))
 (let ((@x525 (monotonicity (rewrite (= ?x935 ?x469)) (rewrite (= ?x942 ?x777)) (rewrite (= ?x745 ?x781)) (rewrite (= ?x708 ?x1359)) (= ?x1013 ?x1347))))
 (let ((@x1385 (monotonicity (trans @x525 (rewrite (= ?x1347 ?x526)) (= ?x1013 ?x526)) (= $x1222 $x1219))))
 (let ((@x570 (monotonicity (rewrite (= ?x931 (+ ?x480 s00 ?x505 ?x540))) (= $x1087 (= (+ ?x480 s00 ?x505 ?x540) 0)))))
 (let ((@x774 (trans @x570 (rewrite (= (= (+ ?x480 s00 ?x505 ?x540) 0) $x280)) (= $x1087 $x280))))
 (let ((@x398 (monotonicity @x774 (trans @x1385 (rewrite (= $x1219 $x452)) (= $x1222 $x452)) (rewrite (= $x817 $x698)) (rewrite (= $x611 $x1030)) (trans @x1049 (rewrite (= $x1084 $x1324)) (= $x341 $x1324)) (rewrite (= $x566 $x334)) (= $x732 $x1105))))
 (trans @x398 (rewrite (= $x1105 false)) (= $x732 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x728 (trans (quant-intro (proof-bind ?x671) (= $x574 $x748)) (elim-unused (= $x748 false)) (= $x574 false))))
 (let (($x223 (exists ((r Int) (s Int) (x Int) )(! (let ((?x33 (* 3 r00 r00)))
 (let ((?x217 (+ (- s00 (+ s (* 6 r) 3)) (* 3 (+ r 1) (+ r 1)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (and (= (- (+ (- s00 s) (* 3 r r)) ?x33) 0) (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x217 ?x33) 0))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x539 (lambda ((r Int) (s Int) (x Int) )(let ((?x247 (* r00 r00)))
 (let ((?x540 (* (- 3) ?x247)))
 (let ((?x480 (* (- 1) s)))
 (let ((?x1107 (+ s00 ?x480 (* (- 6) r) (* 3 (* (+ 1 r) (+ 1 r))) ?x540)))
 (let (($x566 (not (= ?x1107 3))))
 (let ((?x1292 (* x00 x00)))
 (let ((?x316 (* 108 ?x1292)))
 (let ((?x701 (* (- 216) (* x00 x))))
 (let ((?x923 (* r00 s)))
 (let ((?x1278 (* 54 ?x923)))
 (let ((?x1260 (* (- 9) s)))
 (let ((?x663 (* r00 r00 s00)))
 (let ((?x1211 (* (- 36) ?x663)))
 (let ((?x137 (* 9 s00)))
 (let ((?x799 (* r00 x)))
 (let ((?x1153 (* (- 108) ?x799)))
 (let ((?x537 (* s00 s00)))
 (let ((?x1111 (* 51 ?x537)))
 (let ((?x789 (* r00 r00 s)))
 (let ((?x388 (* 36 ?x789)))
 (let ((?x1091 (* x s)))
 (let ((?x1083 (* (- 108) ?x1091)))
 (let ((?x1130 (* s00 s00 s00)))
 (let ((?x1041 (* 16 ?x1130)))
 (let ((?x1037 (* 36 (* r00 r00 s s))))
 (let ((?x998 (* (- 216) (* r00 s00 x))))
 (let ((?x751 (* s00 x00)))
 (let ((?x893 (* (- 108) ?x751)))
 (let ((?x1372 (* r00 s00 s)))
 (let ((?x805 (* 108 ?x1372)))
 (let ((?x249 (* s00 s)))
 (let ((?x737 (* (- 66) ?x249)))
 (let ((?x467 (* 432 (* r00 r00 r00 x))))
 (let ((?x1261 (* x00 s)))
 (let ((?x1333 (* 108 ?x1261)))
 (let ((?x907 (* 216 (* r00 r00 r00 s00))))
 (let ((?x433 (* r00 s00 s00)))
 (let ((?x1197 (* (- 108) ?x433)))
 (let ((?x1224 (* s00 x)))
 (let ((?x877 (* 108 ?x1224)))
 (let ((?x577 (* (- 12) (* s00 s s))))
 (let ((?x828 (* r00 r00 r00 x00)))
 (let ((?x1348 (* (- 432) ?x828)))
 (let ((?x800 (* x x)))
 (let ((?x242 (* 108 ?x800)))
 (let ((?x749 (* s s s)))
 (let ((?x1097 (* (- 4) ?x749)))
 (let ((?x523 (* (- 36) (* r00 r00 s00 s00))))
 (let ((?x435 (* (- 216) (* r00 r00 r00 s))))
 (let ((?x491 (* s s)))
 (let ((?x1045 (* 15 ?x491)))
 (let ((?x707 (* r00 s00)))
 (let ((?x739 (* (- 54) ?x707)))
 (let ((?x468 (* r00 x00)))
 (let ((?x502 (* 108 ?x468)))
 (let ((?x1064 (* 216 (* r00 s00 x00))))
 (let ((?x335 (+ ?x1064 ?x502 ?x739 ?x1045 ?x435 ?x523 ?x1097 ?x242 ?x1348 ?x577 ?x877 ?x1197 ?x907 ?x1333 ?x467 ?x737 ?x805 ?x893 ?x998 ?x1037 ?x1041 ?x1083 ?x388 ?x1111 ?x1153 ?x137 ?x1211 ?x1260 ?x1278 ?x701 ?x316)))
 (let (($x341 (= ?x335 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x933 (* (- 9) s00)))
 (let ((?x862 (* (- 15) ?x537)))
 (let ((?x836 (* (- 36) (* r00 r00 x00))))
 (let ((?x752 (* 6 ?x751)))
 (let ((?x515 (* 3 ?x491)))
 (let ((?x497 (* (- 54) ?x468)))
 (let ((?x601 (+ (* (- 24) (* s r)) ?x497 (* 36 (* r00 x r)) (* 24 ?x707) ?x515 (* 54 (* x r)) (* (- 6) ?x1224) (* 4 (* r00 s s)) (* (- 2) ?x433) (* (- 6) ?x1261) (* 12 ?x249) (* (- 2) ?x1372) ?x752 (* 2 (* s s r)) (* 6 ?x1091) (* (- 4) (* s00 s00 r)) (* (- 36) ?x789) ?x836 ?x862 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x799) ?x933 (* 36 ?x663) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) ?x923) (* 36 (* r00 r00 x)))))
 (let (($x611 (= ?x601 0)))
 (let ((?x47 (* 3 s)))
 (let ((?x324 (* (- 3) s00)))
 (let ((?x550 (* (- 4) ?x537)))
 (let ((?x492 (* 2 ?x491)))
 (let ((?x482 (* (- 18) ?x468)))
 (let ((?x803 (+ (* (- 9) (* s r)) ?x482 (* 9 ?x707) ?x492 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x789) ?x550 (* 18 ?x799) ?x324 (* 6 ?x663) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 ?x249) (* (- 9) ?x923) (* (- 6) (* r00 s00 r)))))
 (let (($x817 (= ?x803 0)))
 (let ((?x415 (* r00 r00 r00)))
 (let ((?x1000 (* (- 12) ?x415)))
 (let ((?x59 (* 6 x00)))
 (let ((?x298 (* (- 6) x)))
 (let ((?x708 (* 6 ?x707)))
 (let ((?x1414 (* s00 r)))
 (let ((?x745 (* (- 4) ?x1414)))
 (let ((?x48 (* 3 r00)))
 (let ((?x937 (* (- 3) r)))
 (let ((?x942 (* 12 (* r00 r00 r))))
 (let ((?x934 (* s r)))
 (let ((?x935 (* (- 2) ?x934)))
 (let ((?x1013 (+ ?x935 ?x942 ?x937 ?x324 ?x47 ?x48 ?x745 ?x708 ?x298 ?x59 ?x1000)))
 (let (($x1222 (= ?x1013 0)))
 (let ((?x235 (* r r)))
 (let ((?x505 (* 3 ?x235)))
 (let ((?x931 (+ s00 ?x480 ?x505 ?x540)))
 (let (($x1087 (= ?x931 0)))
 (let (($x732 (and $x1087 $x1222 $x817 $x611 $x341 $x566)))
 (let ((?x33 (* 3 r00 r00)))
 (let ((?x217 (+ (- s00 (+ s (* 6 r) 3)) (* 3 (+ r 1) (+ r 1)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x222 (and (= (- (+ (- s00 s) (* 3 r r)) ?x33) 0) (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= (- ?x217 ?x33) 0))))))
 (rewrite (= $x222 $x732)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x224 (asserted $x223)))
 (let ((@x1053 (mp (mp @x224 (quant-intro (proof-bind ?x539) (= $x223 $x574)) $x574) (rewrite (= $x574 $x574)) $x574)))
 (mp @x1053 @x728 false)))))))))))

(:max-memory   19.52
 :memory       19.27
 :num-allocs   380050
 :num-checks   1
 :rlimit-count 2457
 :time         0.01
 :total-time   0.02)
