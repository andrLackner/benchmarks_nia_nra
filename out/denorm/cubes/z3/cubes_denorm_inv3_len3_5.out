unsat
((set-logic NIA)
(declare-fun m!1 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x608 (* n!0 m!1)))
 (let ((?x286 (* n!0 k!2)))
 (let ((?x379 (* (- 3) c!3)))
 (let ((?x106 (* (- 3) k!2)))
 (let ((?x281 (* 2 n!0)))
 (let ((?x488 (+ 3 ?x281 ?x106 ?x379 ?x286 ?x608)))
 (let (($x1835 (<= ?x488 0)))
 (let ((?x168 (* 24 m!1)))
 (let ((?x442 (* 2 (* m!1 m!1))))
 (let ((?x288 (* (- 12) (* c!3 m!1))))
 (let ((?x559 (* (- 1) (* c!3 m!1 m!1))))
 (let ((?x321 (* (- 12) (* k!2 m!1))))
 (let ((?x167 (* (- 36) c!3)))
 (let ((?x527 (* (- 36) k!2)))
 (let ((?x249 (* (- 1) (* k!2 m!1 m!1))))
 (let ((?x169 (* 36 n!0)))
 (let ((?x473 (+ 72 ?x169 (* (- 12) (* n!0 k!2 m!1)) ?x249 ?x527 ?x167 (* (- 36) ?x286) ?x321 ?x559 ?x288 ?x442 (* (- 1) (* n!0 k!2 m!1 m!1)) (* (- 12) (* n!0 c!3 m!1)) (* n!0 m!1 m!1) (* (- 1) (* n!0 c!3 m!1 m!1)) (* (- 36) (* n!0 c!3)) (* 12 ?x608) ?x168)))
 (let (($x215 (>= ?x473 0)))
 (let (($x325 (not $x215)))
 (let (($x357 (<= ?x473 0)))
 (let ((?x330 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x222 (<= ?x330 (- 6))))
 (let (($x130 (= ?x330 (- 6))))
 (let ((?x263 (* ?x473 ?x488)))
 (let (($x480 (= ?x263 0)))
 (let (($x274 (not $x480)))
 (let ((?x387 (* (- 1) k!2)))
 (let ((?x161 (+ (* 3 n!0) ?x387 (* 3 (* n!0 n!0)))))
 (let (($x545 (= ?x161 (- 1))))
 (let ((?x452 (+ ?x281 ?x387 ?x379 ?x286)))
 (let (($x484 (= ?x452 (- 1))))
 (let ((?x563 (* k!2 k!2)))
 (let ((?x361 (+ (* 9 n!0) (* (- 5) k!2) (* (- 18) c!3) ?x563 (* (- 9) (* n!0 c!3)))))
 (let (($x481 (and $x130 (= ?x361 (- 4)) $x484 $x545 $x274)))
 (let ((?x437 (+ 72 ?x167 ?x527 ?x168 ?x169 (* (- 36) (* k!2 n!0)) (* (- 36) (* c!3 n!0)) (* 12 (* m!1 n!0)) ?x442 (* (- 1) (* c!3 m!1 m!1 n!0)) (* (- 1) (* k!2 m!1 m!1 n!0)) ?x288 ?x321 ?x559 ?x249 (* (- 12) (* c!3 m!1 n!0)) (* (- 12) (* k!2 m!1 n!0)) (* m!1 m!1 n!0))))
 (let (($x413 (= (* ?x437 (+ 3 ?x379 ?x106 ?x281 (* k!2 n!0) (* m!1 n!0))) 0)))
 (let (($x145 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x567 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x563) (* 9 (* c!3 n!0)))))
 (let (($x414 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x567 4) $x145 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not $x413))))
 (let (($x510 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x347 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x407 (+ 3 ?x219 (* (- 3) k) ?x59 ?x55 ?x347)))
 (let ((?x584 (* m m n)))
 (let ((?x571 (* (- 12) (* k m n))))
 (let ((?x568 (* (- 12) (* c m n))))
 (let ((?x542 (* (- 1) (* k m m))))
 (let ((?x541 (* (- 1) (* c m m))))
 (let ((?x565 (* (- 12) (* k m))))
 (let ((?x562 (* (- 12) (* c m))))
 (let ((?x538 (* (- 1) (* k m m n))))
 (let ((?x537 (* (- 1) (* c m m n))))
 (let ((?x617 (* 2 (* m m))))
 (let ((?x604 (* 12 ?x347)))
 (let ((?x144 (* c n)))
 (let ((?x558 (* (- 36) ?x144)))
 (let ((?x555 (* (- 36) ?x55)))
 (let ((?x596 (* 36 n)))
 (let ((?x552 (* (- 36) k)))
 (let ((?x549 (* (- 36) c)))
 (let ((?x183 (+ 72 ?x549 ?x552 (* 24 m) ?x596 ?x555 ?x558 ?x604 ?x617 ?x537 ?x538 ?x562 ?x565 ?x541 ?x542 ?x568 ?x571 ?x584)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 ?x144)) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 $x206 $x258 $x296 (not (= (* ?x183 ?x407) 0))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x189 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x239 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x129 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ c k)))))
 (let ((?x157 (+ (* (+ 6 m) (+ 6 m)) ?x129 (* (+ 1 n) (+ 6 m) (+ 6 m)))))
 (let (($x593 (not (= (* ?x157 ?x239) 0))))
 (let (($x142 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x585 $x142 $x593))))))))))))))) :qid k!34))
 ))
 (let ((?x521 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x347 (* m n)))
 (let ((?x55 (* k n)))
 (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x407 (+ 3 ?x219 (* (- 3) k) ?x59 ?x55 ?x347)))
 (let ((?x584 (* m m n)))
 (let ((?x571 (* (- 12) (* k m n))))
 (let ((?x568 (* (- 12) (* c m n))))
 (let ((?x542 (* (- 1) (* k m m))))
 (let ((?x541 (* (- 1) (* c m m))))
 (let ((?x565 (* (- 12) (* k m))))
 (let ((?x562 (* (- 12) (* c m))))
 (let ((?x538 (* (- 1) (* k m m n))))
 (let ((?x537 (* (- 1) (* c m m n))))
 (let ((?x617 (* 2 (* m m))))
 (let ((?x604 (* 12 ?x347)))
 (let ((?x144 (* c n)))
 (let ((?x558 (* (- 36) ?x144)))
 (let ((?x555 (* (- 36) ?x55)))
 (let ((?x596 (* 36 n)))
 (let ((?x552 (* (- 36) k)))
 (let ((?x549 (* (- 36) c)))
 (let ((?x183 (+ 72 ?x549 ?x552 (* 24 m) ?x596 ?x555 ?x558 ?x604 ?x617 ?x537 ?x538 ?x562 ?x565 ?x541 ?x542 ?x568 ?x571 ?x584)))
 (let (($x296 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x258 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x206 (= (+ ?x40 ?x44 ?x208 ?x209 (* 9 ?x144)) 4)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x534 (and $x122 $x206 $x258 $x296 (not (= (* ?x183 ?x407) 0)))))
 (let ((?x239 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x129 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ c k)))))
 (let ((?x157 (+ (* (+ 6 m) (+ 6 m)) ?x129 (* (+ 1 n) (+ 6 m) (+ 6 m)))))
 (let (($x593 (not (= (* ?x157 ?x239) 0))))
 (let (($x142 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x311 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x585 $x142 $x593)))
 (rewrite (= $x311 $x534)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x580 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x239 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x129 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ c k)))))
 (let ((?x157 (+ (* (+ 6 m) (+ 6 m)) ?x129 (* (+ 1 n) (+ 6 m) (+ 6 m)))))
 (let (($x593 (not (= (* ?x157 ?x239) 0))))
 (let (($x142 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x317 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (and $x122 (= ?x317 (- 4)) (= (+ ?x219 (* n k) (* (- 1) k) ?x59) (- 1)) $x142 $x593)))))))))))) :qid k!34))
 ))
 (let ((?x191 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x239 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x129 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ c k)))))
 (let ((?x157 (+ (* (+ 6 m) (+ 6 m)) ?x129 (* (+ 1 n) (+ 6 m) (+ 6 m)))))
 (let (($x593 (not (= (* ?x157 ?x239) 0))))
 (let (($x142 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x209 (* (- 1) ?x49)))
 (let ((?x208 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x311 (and $x122 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x208 ?x209) 4) $x585 $x142 $x593)))
 (let ((?x48 (* 9 n)))
 (let ((?x317 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x600 (and $x122 (= ?x317 (- 4)) (= (+ ?x219 (* n k) (* (- 1) k) ?x59) (- 1)) $x142 $x593)))
 (rewrite (= $x600 $x311)))))))))))))))))))))
 ))
 (let (($x89 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x81 (- (* (+ m 6) (+ m 6)) (* (+ c k) (+ m 6) (+ m 6) (+ n 1)))))
 (let ((?x71 (+ k m)))
 (let ((?x75 (- (+ (- 1 (* 3 (+ c k))) (* ?x71 (+ n 1))) ?x71)))
 (let ((?x84 (* (+ ?x75 (* 2 (+ n 1))) (+ ?x81 (* (+ m 6) (+ m 6) (+ n 1))))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x84 0))))))))))))))) :qid k!34))
 ))
 (let ((?x595 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x59 (* 2 n)))
 (let ((?x219 (* (- 3) c)))
 (let ((?x239 (+ 3 ?x219 (* (- 4) k) (* (+ 1 n) (+ k m)) (* (- 1) m) ?x59)))
 (let ((?x129 (* (- 1) (* (+ 1 n) (+ 6 m) (+ 6 m) (+ c k)))))
 (let ((?x157 (+ (* (+ 6 m) (+ 6 m)) ?x129 (* (+ 1 n) (+ 6 m) (+ 6 m)))))
 (let (($x593 (not (= (* ?x157 ?x239) 0))))
 (let (($x142 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x317 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x122 (= (+ m (* (- 6) n)) 6)))
 (let (($x600 (and $x122 (= ?x317 (- 4)) (= (+ ?x219 (* n k) (* (- 1) k) ?x59) (- 1)) $x142 $x593)))
 (let ((?x81 (- (* (+ m 6) (+ m 6)) (* (+ c k) (+ m 6) (+ m 6) (+ n 1)))))
 (let ((?x71 (+ k m)))
 (let ((?x75 (- (+ (- 1 (* 3 (+ c k))) (* ?x71 (+ n 1))) ?x71)))
 (let ((?x84 (* (+ ?x75 (* 2 (+ n 1))) (+ ?x81 (* (+ m 6) (+ m 6) (+ n 1))))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x88 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x84 0))))))
 (rewrite (= $x88 $x600))))))))))))))))))))))))
 ))
 (let ((@x90 (asserted $x89)))
 (let ((@x220 (mp (mp @x90 (quant-intro (proof-bind ?x595) (= $x89 $x580)) $x580) (rewrite (= $x580 $x580)) $x580)))
 (let ((@x601 (mp (mp @x220 (quant-intro (proof-bind ?x191) (= $x580 $x189)) $x189) (quant-intro (proof-bind ?x521) (= $x189 $x510)) $x510)))
 (let ((@x370 (mp (mp~ @x601 (sk (~ $x510 $x414)) $x414) (rewrite (= $x414 $x481)) $x481)))
 (let ((@x490 (and-elim @x370 $x130)))
 (let ((@x569 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x130) $x222)) @x490 $x222)))
 (let (($x285 (>= ?x330 (- 6))))
 (let ((@x453 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x130) $x285)) @x490 $x285)))
 (let (($x382 (<= ?x452 (- 1))))
 (let ((@x271 (and-elim @x370 $x484)))
 (let ((@x327 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x484) $x382)) @x271 $x382)))
 (let (($x381 (>= ?x452 (- 1))))
 (let ((@x320 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x484) $x381)) @x271 $x381)))
 (let (($x376 (<= ?x161 (- 1))))
 (let ((@x112 (and-elim @x370 $x545)))
 (let ((@x394 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x545) $x376)) @x112 $x376)))
 (let (($x380 (>= ?x161 (- 1))))
 (let ((@x506 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x545) $x380)) @x112 $x380)))
 (let ((@x494 (hypothesis (not $x357))))
 (let (($x1197 (not (<= ?x263 0))))
 (let (($x583 (>= ?x263 0)))
 (let (($x470 (not $x583)))
 (let ((@x324 (hypothesis $x470)))
 (let ((@x1310 (lemma ((_ th-lemma arith) @x324 @x494 @x453 @x569 @x453 @x569 @x320 @x327 @x506 @x394 false) (or $x357 $x583))))
 (let ((@x336 (hypothesis $x325)))
 (let ((@x996 (lemma ((_ th-lemma arith) @x324 @x336 @x453 @x569 @x320 @x327 @x506 @x394 false) (or $x215 $x583))))
 (let ((@x1311 ((_ th-lemma arith farkas 1 1 1) @x324 (unit-resolution @x996 @x324 $x215) (unit-resolution @x1310 @x324 $x357) false)))
 (let ((@x958 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x480 $x1197 $x470)) (and-elim @x370 $x274) (or $x1197 $x470))))
 (let ((@x959 (unit-resolution @x958 (lemma @x1311 $x583) $x1197)))
 (let ((@x966 (lemma ((_ th-lemma arith) @x959 @x494 @x506 @x394 @x320 @x327 @x453 @x569 false) $x357)))
 (let ((@x2020 (lemma ((_ th-lemma arith farkas 1 1 1) @x959 @x336 (hypothesis (not $x1835)) false) (or $x215 $x1835))))
 (let ((@x2023 (unit-resolution @x2020 (lemma ((_ th-lemma arith farkas 1 1 1) @x959 (hypothesis $x215) @x966 false) $x325) $x1835)))
 (let (($x1974 (>= ?x488 0)))
 (let ((@x2014 ((_ th-lemma arith) (hypothesis (not $x1974)) @x320 @x327 @x453 @x569 @x506 @x394 false)))
 ((_ th-lemma arith farkas 1 1 1) @x959 (lemma @x2014 $x1974) @x2023 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 231
 :arith-assert-diseq        25
 :arith-assert-lower        2313
 :arith-assert-upper        1284
 :arith-bound-prop          26
 :arith-branch-var          49
 :arith-conflicts           99
 :arith-eq-adapter          20
 :arith-fixed-eqs           313
 :arith-gcd-tests           665
 :arith-gomory-cuts         38
 :arith-grobner             121
 :arith-ineq-splits         49
 :arith-max-min             9740
 :arith-nonlinear-bounds    627
 :arith-nonlinear-horner    1061
 :arith-num-rows            22
 :arith-offset-eqs          16
 :arith-patches             138
 :arith-patches_succ        40
 :arith-pivots              4105
 :arith-pseudo-nonlinear    371
 :arith-row-summations      20030
 :arith-tableau-max-columns 67
 :arith-tableau-max-rows    22
 :conflicts                 105
 :decisions                 617
 :del-clause                128
 :final-checks              389
 :max-memory                4.21
 :memory                    3.32
 :minimized-lits            22
 :mk-bool-var               460
 :mk-clause                 397
 :num-allocs                19411597
 :num-checks                1
 :propagations              545
 :restarts                  1
 :rlimit-count              1594446
 :time                      0.29
 :total-time                0.29)
