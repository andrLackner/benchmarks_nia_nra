unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1275 (* (- 1) k!2)))
 (let ((?x1011 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x1275)))
 (let (($x793 (<= ?x1011 (- 1))))
 (let (($x1009 (= ?x1011 (- 1))))
 (let ((?x442 (+ c!3 k!2)))
 (let ((?x854 (+ k!2 m!1)))
 (let ((?x1272 (+ 6 m!1)))
 (let ((?x1345 (+ 1 n!0)))
 (let ((?x1785 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x1640 (* (- 18) ?x1785)))
 (let ((?x341 (* 5 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x335 (* (- 1) (* ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x1739 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1460 (* (- 1) ?x1739)))
 (let ((?x1702 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1742 (* (- 4) ?x1702)))
 (let ((?x677 (* (- 4) (* ?x1345 ?x1345 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x597 (* (- 1) (* ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x1648 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x1605 (* (- 9) ?x1648)))
 (let ((?x1638 (* (- 1) (* ?x1345 ?x1345 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x1634 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x788 (* 4 ?x1634)))
 (let ((?x1609 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1111 (* 5 ?x1609)))
 (let ((?x1607 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1146 (* (- 5) ?x1607)))
 (let ((?x1632 (* 9 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442))))
 (let ((?x1523 (* 18 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x1521 (* ?x1345 ?x1345 ?x1345 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x332 (* (- 5) ?x1521)))
 (let ((?x1516 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1490 (* 5 (* ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x442))))
 (let ((?x1222 (* (- 1) (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x442))))
 (let ((?x1787 (* (- 4) (* ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x1486 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x627 (* (- 18) ?x1486)))
 (let ((?x1477 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1449 (* (- 9) (* ?x1345 ?x1345 ?x1345 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x1491 (* 5 (* ?x1345 ?x1345 ?x854 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x1462 (* ?x1345 ?x1345 ?x1345 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x321 (* 9 (* ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x1451 (* ?x1345 ?x1345 ?x1345 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x1453 (* (- 18) ?x1451)))
 (let ((?x680 (* 9 (* ?x1345 ?x1345 ?x1345 ?x854 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x1374 (* 9 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x1165 (* (- 1) (* ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442))))
 (let ((?x1487 (* 18 (* ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442))))
 (let ((?x1802 (* (- 4) (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x442))))
 (let ((?x1784 (* 18 (* ?x1345 ?x1345 ?x854 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x889 (* (- 9) (* ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x442))))
 (let ((?x334 (* (- 4) (* ?x1345 ?x1272 ?x1272 ?x854 ?x854 ?x442))))
 (let ((?x1475 (* (- 9) (* ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x435 (* 9 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x442 ?x442))))
 (let ((?x832 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x669 (* (- 9) ?x832)))
 (let ((?x808 (* ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x1794 (* (- 9) ?x808)))
 (let ((?x804 (* ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x625 (* 4 ?x804)))
 (let ((?x711 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x709 (* 9 ?x711)))
 (let ((?x707 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1505 (* (- 5) ?x707)))
 (let ((?x693 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x379 (* 9 ?x693)))
 (let ((?x570 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x1667 (* (- 9) ?x570)))
 (let ((?x935 (* (- 9) (* ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x628 (* (- 4) (* ?x1345 ?x1345 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x518 (* 18 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x442 ?x442))))
 (let ((?x530 (* 5 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x442))))
 (let ((?x694 (* 5 (* ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442))))
 (let ((?x430 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x1666 (* 18 ?x430)))
 (let ((?x1382 (* (- 9) (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x442))))
 (let ((?x333 (* ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442)))
 (let ((?x342 (* 9 ?x333)))
 (let ((?x331 (* ?x1345 ?x1345 ?x1345 ?x1345 ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x799 (* 9 ?x331)))
 (let ((?x330 (* ?x1345 ?x1345 ?x1345 ?x1272 ?x854 ?x854 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442 ?x442)))
 (let ((?x1023 (* 4 ?x330)))
 (let ((?x1754 (* 18 (* ?x1345 ?x1272 ?x1272 ?x1272 ?x1272 ?x854 ?x854 ?x442 ?x442 ?x442 ?x442))))
 (let ((?x267 (+ ?x1754 ?x1023 ?x799 ?x342 ?x1382 ?x1666 ?x694 ?x530 ?x518 ?x628 ?x935 ?x1667 ?x379 ?x1505 ?x709 ?x625 ?x1794 ?x669 ?x435 ?x1475 ?x334 ?x889 ?x1784 ?x1802 ?x1487 ?x1165 ?x1374 ?x680 ?x1453 ?x321 ?x1462 ?x1491 ?x1449 ?x1477 ?x627 ?x1787 ?x1222 ?x1490 ?x1516 ?x332 ?x1523 ?x1632 ?x1146 ?x1111 ?x788 ?x1638 ?x1605 ?x597 ?x677 ?x1742 ?x1460 ?x335 ?x341 ?x1640)))
 (let (($x596 (= ?x267 0)))
 (let (($x593 (not $x596)))
 (let ((?x1282 (+ (* n!0 k!2) (* 2 n!0) (* (- 3) c!3) ?x1275)))
 (let (($x1274 (= ?x1282 (- 1))))
 (let ((?x1342 (* k!2 k!2)))
 (let ((?x805 (+ (* 9 n!0) (* (- 18) c!3) (* (- 9) (* n!0 c!3)) ?x1342 (* (- 5) k!2))))
 (let (($x1126 (= ?x805 (- 4))))
 (let ((?x1425 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x378 (= ?x1425 (- 6))))
 (let (($x1441 (and $x378 $x1126 $x1274 $x1009 $x593)))
 (let ((?x381 (+ ?x518 ?x435 ?x694 ?x530 ?x669 ?x1754 ?x1784 ?x597 ?x1632 ?x788 ?x1640 ?x1638 ?x1453 ?x680 ?x1477 ?x677 ?x1605 ?x1449 ?x1146 ?x321 ?x1462 ?x1023 ?x334 ?x799 ?x342 ?x341 ?x335 ?x1523 ?x1516 ?x332 ?x1742 ?x1491 ?x1667 ?x1165 ?x1111 ?x1666 ?x379 ?x889 ?x1475 ?x1460 ?x935 ?x1490 ?x1787 ?x709 ?x1505 ?x1222 ?x1487 ?x625 ?x628 ?x627 ?x1794 ?x1802 ?x1374 ?x1382)))
 (let (($x585 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x936 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1342) (* 9 (* c!3 n!0)))))
 (let (($x1428 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x936 4) $x585 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x381 0)))))
 (let (($x1626 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1735 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1619 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1122 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1018 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x563 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x1637 (+ (* 18 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* 9 ?x276) (* 5 ?x307) (* 5 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x400) (* 18 ?x401) (* 18 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) ?x428) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 4 ?x563) (* (- 18) ?x579) (* (- 1) (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 18) ?x682) (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x701 (* (- 4) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x759) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 5) ?x849) (* 9 ?x892) ?x898 (* 4 ?x948) (* (- 4) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* 9 ?x999) (* 9 ?x1018) (* 5 ?x1088) (* (- 1) ?x1122) (* 18 ?x1183) ?x1194 (* (- 5) ?x1241) (* (- 4) ?x1251) (* 5 (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x1400) (* (- 1) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 5 ?x1406) (* 18 ?x1439) (* 9 ?x1459) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x1553) (* (- 1) ?x1564) (* (- 9) ?x1572) (* 5 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* (- 4) (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x1619) (* (- 5) ?x1687) (* (- 1) ?x1695) (* 18 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 4 ?x1735) (* (- 4) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* (- 18) ?x1767) (* (- 9) ?x1775) (* (- 4) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1797) (* (- 9) ?x1815))))
 (let (($x374 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x336 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x288 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x284 (= ?x288 4)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (and $x200 $x284 $x336 $x374 (not (= ?x1637 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x710 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1619 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1405 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1018 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1735 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x563 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1122 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1824 (+ ?x1122 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x563) (* (- 4) ?x1735) (* (- 9) ?x1018) ?x1405 (* (- 9) ?x1619) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x931 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x624 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x578 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (and $x200 (= ?x578 (- 4)) $x624 $x931 (not (= ?x1824 0))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1645 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1735 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1619 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1122 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1018 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x563 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x1637 (+ (* 18 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* 9 ?x276) (* 5 ?x307) (* 5 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x400) (* 18 ?x401) (* 18 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 1) ?x428) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 4 ?x563) (* (- 18) ?x579) (* (- 1) (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 18) ?x682) (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) ?x701 (* (- 4) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x759) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 5) ?x849) (* 9 ?x892) ?x898 (* 4 ?x948) (* (- 4) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* 9 ?x999) (* 9 ?x1018) (* 5 ?x1088) (* (- 1) ?x1122) (* 18 ?x1183) ?x1194 (* (- 5) ?x1241) (* (- 4) ?x1251) (* 5 (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 9) ?x1400) (* (- 1) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)) (* 5 ?x1406) (* 18 ?x1439) (* 9 ?x1459) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 9) ?x1553) (* (- 1) ?x1564) (* (- 9) ?x1572) (* 5 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* (- 4) (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 9 ?x1619) (* (- 5) ?x1687) (* (- 1) ?x1695) (* 18 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 4 ?x1735) (* (- 4) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* (- 18) ?x1767) (* (- 9) ?x1775) (* (- 4) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1797) (* (- 9) ?x1815))))
 (let (($x374 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x336 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x288 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) (* k k)) (* 9 (* c n)))))
 (let (($x284 (= ?x288 4)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (let (($x695 (and $x200 $x284 $x336 $x374 (not (= ?x1637 0)))))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1405 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1824 (+ ?x1122 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x563) (* (- 4) ?x1735) (* (- 9) ?x1018) ?x1405 (* (- 9) ?x1619) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x931 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x624 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x578 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x786 (and $x200 (= ?x578 (- 4)) $x624 $x931 (not (= ?x1824 0)))))
 (rewrite (= $x786 $x695))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x167 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x159 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x158 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x155 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x145 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x141 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x140 (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x135 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x134 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x132 (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x131 (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x126 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x125 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x123 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x115 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x111 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x101 (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x99 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x98 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x77 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x76 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x75 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x82 (+ (- (- (- ?x74 ?x75) ?x76) ?x77) (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71))))
 (let ((?x91 (- (- ?x82 ?x83) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x93 (- (- ?x91 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71)) (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x94 (- ?x93 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x95 (- ?x94 (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x96 (- ?x95 (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x104 (+ ?x96 (* 4 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71) ?x98 ?x99 ?x100 ?x101 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71 ?x71) ?x103)))
 (let ((?x106 (- ?x104 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x108 (+ ?x106 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x117 (- (- ?x108 ?x109) (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x119 (- (- ?x117 ?x111) (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x121 (- (- ?x119 (* 9 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x136 (- (+ (- (- (- (+ (- ?x121 ?x115) ?x123) ?x125) ?x126) ?x127) ?x131 ?x132) ?x134)))
 (let ((?x143 (- (- (+ (- ?x136 ?x135) (* 4 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) ?x140) ?x141)))
 (let ((?x147 (+ ?x143 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) ?x145 (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x151 (+ (- ?x147 (* 18 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x162 (+ (- ?x151 (* 5 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71) ?x155 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71) ?x158 ?x159 (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x162 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x764 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x382 (+ 6 m)))
 (let ((?x385 (+ 1 n)))
 (let ((?x1815 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)))
 (let ((?x1775 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1767 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1553 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1564 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1572 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1695 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1687 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1459 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x948 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x701 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1797 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1241 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1251 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x999 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1439 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1406 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x898 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1088 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x1194 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1183 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x892 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x428 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x401 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x849 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x605 (* ?x385 ?x385 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x682 (* ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x759 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x400 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x579 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68 ?x68)))
 (let ((?x276 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)))
 (let ((?x307 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1619 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1405 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68)))
 (let ((?x1018 (* ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1735 (* ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x563 (* ?x385 ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1122 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x1824 (+ ?x1122 (* 9 (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* (- 4) ?x563) (* (- 4) ?x1735) (* (- 9) ?x1018) ?x1405 (* (- 9) ?x1619) (* (- 9) (* ?x385 ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 18) (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) ?x307) (* (- 18) (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68 ?x68)) (* (- 9) ?x276) (* 4 (* ?x385 ?x385 ?x69 ?x68 ?x68 ?x68)) (* 18 ?x579) (* 9 ?x400) (* 9 ?x759) (* 18 ?x682) ?x605 (* 5 ?x849) (* (- 18) ?x401) ?x428 (* (- 9) ?x892) (* (- 18) ?x1183) (* (- 1) ?x1194) (* (- 5) ?x1088) (* (- 9) (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* (- 5) (* ?x385 ?x385 ?x69 ?x69 ?x68 ?x68 ?x68)) (* (- 1) ?x898) (* 9 ?x1400) (* (- 5) ?x1406) (* (- 18) ?x1439) (* (- 9) ?x999) (* 4 ?x1251) (* 5 ?x1241) (* (- 9) ?x1797) (* (- 1) ?x701) (* 4 (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 4) ?x948) (* (- 9) ?x1459) (* 4 (* ?x385 ?x382 ?x382 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68 ?x68)) (* 5 ?x1687) ?x1695 (* (- 18) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x68 ?x68)) (* 9 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x69 ?x68)) (* (- 5) (* ?x385 ?x382 ?x382 ?x69 ?x69 ?x69 ?x68)) (* 9 ?x1572) ?x1564 (* 9 ?x1553) (* 4 (* ?x385 ?x385 ?x382 ?x382 ?x69 ?x68 ?x68 ?x68 ?x68 ?x68)) (* 18 ?x1767) (* 9 ?x1775) (* 4 (* ?x385 ?x385 ?x385 ?x385 ?x382 ?x382 ?x382 ?x69 ?x68)) (* 9 ?x1815))))
 (let (($x931 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x624 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x578 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x200 (= (+ m (* (- 6) n)) 6)))
 (let (($x786 (and $x200 (= ?x578 (- 4)) $x624 $x931 (not (= ?x1824 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x159 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x158 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x155 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x145 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x141 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x140 (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x135 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x134 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x132 (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x131 (* 4 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x127 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x126 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x125 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x123 (* 9 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x115 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x111 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x109 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x103 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x101 (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x100 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x99 (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x98 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x83 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x77 (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)))
 (let ((?x76 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71)))
 (let ((?x75 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) (* 9 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x82 (+ (- (- (- ?x74 ?x75) ?x76) ?x77) (* ?x68 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71))))
 (let ((?x91 (- (- ?x82 ?x83) (* 9 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71 ?x71))))
 (let ((?x93 (- (- ?x91 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71)) (* 5 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x94 (- ?x93 (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x95 (- ?x94 (* 18 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x96 (- ?x95 (* 9 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x104 (+ ?x96 (* 4 ?x68 ?x68 ?x68 ?x69 ?x71 ?x71) ?x98 ?x99 ?x100 ?x101 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x71 ?x71) ?x103)))
 (let ((?x106 (- ?x104 (* 18 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x108 (+ ?x106 (* ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x117 (- (- ?x108 ?x109) (* 18 ?x68 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x119 (- (- ?x117 ?x111) (* 5 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x121 (- (- ?x119 (* 9 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* 5 ?x68 ?x68 ?x68 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x136 (- (+ (- (- (- (+ (- ?x121 ?x115) ?x123) ?x125) ?x126) ?x127) ?x131 ?x132) ?x134)))
 (let ((?x143 (- (- (+ (- ?x136 ?x135) (* 4 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) ?x140) ?x141)))
 (let ((?x147 (+ ?x143 (* 4 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71) ?x145 (* ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x151 (+ (- ?x147 (* 18 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x162 (+ (- ?x151 (* 5 ?x68 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71)) (* 9 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71) ?x155 (* 9 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* 4 ?x68 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71) ?x158 ?x159 (* 4 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71) (* 9 ?x68 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x166 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x162 0))))))
 (rewrite (= $x166 $x786))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x168 (asserted $x167)))
 (let ((@x1265 (mp (mp @x168 (quant-intro (proof-bind ?x764) (= $x167 $x710)) $x710) (rewrite (= $x710 $x710)) $x710)))
 (let ((@x1422 (mp~ (mp @x1265 (quant-intro (proof-bind ?x1645) (= $x710 $x1626)) $x1626) (sk (~ $x1626 $x1428)) $x1428)))
 (let ((@x1436 (mp @x1422 (rewrite (= $x1428 $x1441)) $x1441)))
 (let ((@x543 (and-elim @x1436 $x1009)))
 (let ((@x890 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1009) $x793)) @x543 $x793)))
 (let (($x231 (>= ?x1011 (- 1))))
 (let ((@x1722 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1009) $x231)) @x543 $x231)))
 (let (($x250 (<= ?x1425 (- 6))))
 (let ((@x1120 (and-elim @x1436 $x378)))
 (let ((@x826 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x378) $x250)) @x1120 $x250)))
 (let (($x195 (>= ?x1425 (- 6))))
 (let ((@x882 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x378) $x195)) @x1120 $x195)))
 (let (($x1092 (<= ?x805 (- 4))))
 (let ((@x980 (and-elim @x1436 $x1126)))
 (let ((@x569 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1126) $x1092)) @x980 $x1092)))
 (let (($x211 (>= ?x805 (- 4))))
 (let ((@x1196 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1126) $x211)) @x980 $x211)))
 (let (($x176 (<= ?x1282 (- 1))))
 (let ((@x1014 (and-elim @x1436 $x1274)))
 (let ((@x515 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1274) $x176)) @x1014 $x176)))
 (let (($x946 (>= ?x1282 (- 1))))
 (let ((@x1394 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1274) $x946)) @x1014 $x946)))
 (let (($x1147 (not (<= ?x267 0))))
 (let (($x689 (>= ?x267 0)))
 (let ((@x733 ((_ th-lemma arith) (hypothesis (not $x689)) @x1722 @x890 @x1394 @x515 @x1722 @x890 @x1196 @x569 @x1722 @x890 @x1722 @x890 @x882 @x826 @x882 @x826 @x1722 @x890 false)))
 (let ((@x237 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x596 $x1147 (not $x689))) (and-elim @x1436 $x593) (or $x1147 (not $x689)))))
 ((_ th-lemma arith) (unit-resolution @x237 (lemma @x733 $x689) $x1147) @x1722 @x890 @x1394 @x515 @x1722 @x890 @x1196 @x569 @x1722 @x890 @x1722 @x890 @x882 @x826 @x882 @x826 @x1722 @x890 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        17
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             639
 :arith-nonlinear-bounds    12
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 86
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                20.24
 :memory                    19.44
 :mk-bool-var               17
 :mk-clause                 16
 :num-allocs                3893735
 :num-checks                1
 :propagations              11
 :rlimit-count              80319
 :time                      0.07
 :total-time                0.09)
