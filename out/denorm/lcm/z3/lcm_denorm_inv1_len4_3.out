unsat
((set-logic NIA)
(declare-fun u!5 () Int)
(declare-fun x!3 () Int)
(declare-fun v!4 () Int)
(declare-fun y!2 () Int)
(declare-fun k!00 () Int)
(declare-fun k!10 () Int)
(proof
(let ((?x1288 (+ k!10 k!00 (* (- 1) (* y!2 v!4)) (* (- 1) (* x!3 u!5)))))
 (let (($x1316 (>= ?x1288 0)))
 (let (($x160 (= ?x1288 0)))
 (let ((?x1762 (* v!4 v!4 x!3 x!3 x!3 x!3)))
 (let ((?x1336 (* (- 1) (* v!4 v!4 v!4 x!3 x!3 x!3 x!3))))
 (let ((?x1305 (* y!2 x!3 x!3 x!3 u!5 u!5 u!5)))
 (let ((?x1323 (* (- 1) (* y!2 y!2 y!2 v!4 x!3 u!5))))
 (let ((?x644 (* 2 (* v!4 v!4 v!4 v!4 v!4 v!4 x!3 x!3 x!3))))
 (let ((?x506 (+ (* (- 5) (* y!2 v!4 v!4 v!4 v!4 v!4 v!4 x!3 x!3)) (* 4 (* y!2 y!2 v!4 v!4 v!4 x!3 u!5 u!5 u!5)) (* (- 15) (* y!2 v!4 v!4 v!4 v!4 v!4 x!3 x!3 u!5)) (* 12 (* y!2 y!2 v!4 v!4 v!4 v!4 x!3 u!5 u!5)) (* 12 (* y!2 y!2 v!4 v!4 v!4 v!4 v!4 x!3 u!5)) (* (- 1) (* x!3 x!3 x!3 x!3 u!5 u!5 u!5)) (* (- 3) (* y!2 v!4 v!4 x!3 x!3 x!3)) ?x644 (* (- 1) (* y!2 y!2 y!2 v!4 v!4 x!3)) (* v!4 x!3 x!3 x!3 x!3 u!5) (* 3 (* y!2 y!2 v!4 x!3 x!3 u!5)) (* 3 (* y!2 y!2 v!4 v!4 x!3 x!3)) (* (- 3) (* v!4 x!3 x!3 x!3 x!3 u!5 u!5)) (* (- 1) (* y!2 y!2 y!2 v!4 v!4 v!4 u!5 u!5 u!5)) ?x1323 (* (- 3) (* y!2 y!2 y!2 v!4 v!4 v!4 v!4 v!4 u!5)) (* (- 3) (* v!4 v!4 x!3 x!3 x!3 x!3 u!5)) (* 2 (* v!4 v!4 v!4 x!3 x!3 x!3 u!5 u!5 u!5)) (* 4 (* y!2 y!2 v!4 v!4 v!4 v!4 v!4 v!4 x!3)) (* (- 3) (* y!2 v!4 x!3 x!3 x!3 u!5)) (* y!2 v!4 v!4 v!4 x!3 x!3 x!3) (* 3 (* y!2 v!4 x!3 x!3 x!3 u!5 u!5)) (* 3 (* y!2 v!4 v!4 x!3 x!3 x!3 u!5)) ?x1305 ?x1336 (* (- 3) (* y!2 y!2 y!2 v!4 v!4 v!4 v!4 u!5 u!5)) (* (- 1) (* y!2 y!2 y!2 v!4 v!4 v!4 v!4 v!4 v!4)) (* 6 (* v!4 v!4 v!4 v!4 x!3 x!3 x!3 u!5 u!5)) (* 6 (* v!4 v!4 v!4 v!4 v!4 x!3 x!3 x!3 u!5)) (* (- 5) (* y!2 v!4 v!4 v!4 x!3 x!3 u!5 u!5 u!5)) (* (- 15) (* y!2 v!4 v!4 v!4 v!4 x!3 x!3 u!5 u!5)) ?x1762)))
 (let ((?x1267 (* x!3 u!5)))
 (let ((?x1249 (* y!2 v!4)))
 (let ((?x1312 (* (- 1) k!00)))
 (let ((?x577 (* (- 1) k!10)))
 (let ((?x1278 (+ ?x577 ?x1312 ?x1249 ?x1267)))
 (let ((?x1211 (* ?x1278 ?x506)))
 (let (($x1296 (= ?x1211 0)))
 (let (($x1210 (not $x1296)))
 (let ((?x247 (* y!2 y!2 v!4 v!4 v!4 x!3 u!5 u!5 u!5)))
 (let ((?x1239 (+ ?x247 (* (- 1) (* y!2 y!2 y!2 x!3 u!5 u!5)) (* y!2 y!2 y!2 y!2 u!5 u!5) (* y!2 y!2 y!2 y!2 v!4 u!5) (* 3 (* y!2 y!2 v!4 x!3 u!5 u!5 u!5 u!5 u!5)) (* 3 (* y!2 y!2 v!4 v!4 x!3 u!5 u!5 u!5 u!5)) (* (- 6) (* y!2 y!2 y!2 v!4 u!5 u!5 u!5 u!5 u!5)) (* y!2 y!2 x!3 u!5 u!5 u!5 u!5 u!5 u!5) (* (- 2) (* y!2 y!2 y!2 v!4 v!4 v!4 u!5 u!5 u!5)) ?x1323 (* 3 (* y!2 y!2 y!2 x!3 u!5 u!5 u!5)) (* (- 3) (* y!2 y!2 x!3 x!3 u!5 u!5 u!5)) (* (- 1) (* y!2 y!2 y!2 y!2 u!5 u!5 u!5)) ?x1305 (* (- 2) (* y!2 y!2 y!2 u!5 u!5 u!5 u!5 u!5 u!5)) (* (- 6) (* y!2 y!2 y!2 v!4 v!4 u!5 u!5 u!5 u!5)))))
 (let ((?x1182 (* ?x1278 ?x1239)))
 (let (($x1201 (= ?x1182 0)))
 (let (($x1350 (or (not $x1201) $x1210)))
 (let (($x297 (and $x160 $x1350)))
 (let ((?x1344 (* u!5 u!5 u!5 v!4 v!4 v!4 x!3 y!2 y!2)))
 (let ((?x1343 (* (- 1) (* u!5 v!4 x!3 y!2 y!2 y!2))))
 (let ((?x898 (* u!5 u!5 u!5 x!3 x!3 x!3 y!2)))
 (let ((?x167 (+ ?x898 (* (- 3) (* u!5 u!5 u!5 x!3 x!3 y!2 y!2)) (* 3 (* u!5 u!5 u!5 x!3 y!2 y!2 y!2)) (* (- 1) (* u!5 u!5 u!5 y!2 y!2 y!2 y!2)) (* (- 2) (* u!5 u!5 u!5 u!5 u!5 u!5 y!2 y!2 y!2)) (* (- 6) (* u!5 u!5 u!5 u!5 u!5 v!4 y!2 y!2 y!2)) (* (- 6) (* u!5 u!5 u!5 u!5 v!4 v!4 y!2 y!2 y!2)) (* (- 2) (* u!5 u!5 u!5 v!4 v!4 v!4 y!2 y!2 y!2)) (* (- 1) (* u!5 u!5 x!3 y!2 y!2 y!2)) ?x1343 (* u!5 u!5 y!2 y!2 y!2 y!2) (* u!5 v!4 y!2 y!2 y!2 y!2) (* u!5 u!5 u!5 u!5 u!5 u!5 x!3 y!2 y!2) (* 3 (* u!5 u!5 u!5 u!5 u!5 v!4 x!3 y!2 y!2)) (* 3 (* u!5 u!5 u!5 u!5 v!4 v!4 x!3 y!2 y!2)) ?x1344)))
 (let ((?x724 (+ (* u!5 x!3) (* v!4 y!2) ?x577 ?x1312)))
 (let ((?x594 (+ (* 3 (* u!5 u!5 v!4 x!3 x!3 x!3 y!2)) (* 3 (* u!5 v!4 v!4 x!3 x!3 x!3 y!2)) (* v!4 v!4 v!4 x!3 x!3 x!3 y!2) (* (- 1) (* u!5 u!5 u!5 x!3 x!3 x!3 x!3)) (* (- 3) (* u!5 u!5 v!4 x!3 x!3 x!3 x!3)) ?x898 (* (- 1) (* u!5 u!5 u!5 v!4 v!4 v!4 y!2 y!2 y!2)) ?x1343 (* 4 ?x1344) (* (- 3) (* u!5 v!4 v!4 x!3 x!3 x!3 x!3)) ?x1336 (* (- 3) (* u!5 u!5 v!4 v!4 v!4 v!4 y!2 y!2 y!2)) (* (- 3) (* u!5 v!4 v!4 v!4 v!4 v!4 y!2 y!2 y!2)) (* (- 1) (* v!4 v!4 v!4 v!4 v!4 v!4 y!2 y!2 y!2)) (* 2 (* u!5 u!5 u!5 v!4 v!4 v!4 x!3 x!3 x!3)) (* 6 (* u!5 u!5 v!4 v!4 v!4 v!4 x!3 x!3 x!3)) (* 6 (* u!5 v!4 v!4 v!4 v!4 v!4 x!3 x!3 x!3)) ?x644 (* (- 5) (* u!5 u!5 u!5 v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 15) (* u!5 u!5 v!4 v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 15) (* u!5 v!4 v!4 v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 5) (* v!4 v!4 v!4 v!4 v!4 v!4 x!3 x!3 y!2)) (* 12 (* u!5 u!5 v!4 v!4 v!4 v!4 x!3 y!2 y!2)) (* 12 (* u!5 v!4 v!4 v!4 v!4 v!4 x!3 y!2 y!2)) (* 4 (* v!4 v!4 v!4 v!4 v!4 v!4 x!3 y!2 y!2)) (* (- 1) (* v!4 v!4 x!3 y!2 y!2 y!2)) (* u!5 v!4 x!3 x!3 x!3 x!3) ?x1762 (* (- 3) (* u!5 v!4 x!3 x!3 x!3 y!2)) (* (- 3) (* v!4 v!4 x!3 x!3 x!3 y!2)) (* 3 (* u!5 v!4 x!3 x!3 y!2 y!2)) (* 3 (* v!4 v!4 x!3 x!3 y!2 y!2)))))
 (let (($x1262 (and (= ?x724 0) (or (not (= (* ?x724 ?x594) 0)) (not (= (* ?x724 ?x167) 0))))))
 (let (($x1310 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x352 (* u u u v v v x y y)))
 (let ((?x321 (* (- 1) (* u v x y y y))))
 (let ((?x153 (* u u u x x x y)))
 (let ((?x433 (+ ?x153 (* (- 3) (* u u u x x y y)) (* 3 (* u u u x y y y)) (* (- 1) (* u u u y y y y)) (* (- 2) (* u u u u u u y y y)) (* (- 6) (* u u u u u v y y y)) (* (- 6) (* u u u u v v y y y)) (* (- 2) (* u u u v v v y y y)) (* (- 1) (* u u x y y y)) ?x321 (* u u y y y y) (* u v y y y y) (* u u u u u u x y y) (* 3 (* u u u u u v x y y)) (* 3 (* u u u u v v x y y)) ?x352)))
 (let ((?x1312 (* (- 1) k!00)))
 (let ((?x577 (* (- 1) k!10)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x727 (+ ?x33 ?x34 ?x577 ?x1312)))
 (let ((?x1386 (+ (* 3 (* u u v x x x y)) (* 3 (* u v v x x x y)) (* v v v x x x y) (* (- 1) (* u u u x x x x)) (* (- 3) (* u u v x x x x)) ?x153 (* (- 1) (* u u u v v v y y y)) ?x321 (* 4 ?x352) (* (- 3) (* u v v x x x x)) (* (- 1) (* v v v x x x x)) (* (- 3) (* u u v v v v y y y)) (* (- 3) (* u v v v v v y y y)) (* (- 1) (* v v v v v v y y y)) (* 2 (* u u u v v v x x x)) (* 6 (* u u v v v v x x x)) (* 6 (* u v v v v v x x x)) (* 2 (* v v v v v v x x x)) (* (- 5) (* u u u v v v x x y)) (* (- 15) (* u u v v v v x x y)) (* (- 15) (* u v v v v v x x y)) (* (- 5) (* v v v v v v x x y)) (* 12 (* u u v v v v x y y)) (* 12 (* u v v v v v x y y)) (* 4 (* v v v v v v x y y)) (* (- 1) (* v v x y y y)) (* u v x x x x) (* v v x x x x) (* (- 3) (* u v x x x y)) (* (- 3) (* v v x x x y)) (* 3 (* u v x x y y)) (* 3 (* v v x x y y)))))
 (and (= ?x727 0) (or (not (= (* ?x727 ?x1386) 0)) (not (= (* ?x727 ?x433) 0)))))))))))))) :qid k!29))
 ))
 (let (($x575 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x681 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x1040 (+ (* ?x681 ?x681 ?x681 y u u u) (* (- 1) (* ?x44 ?x44 ?x44 y y y u u u)) (* (- 1) (* ?x44 ?x681 y y y u)) (* ?x44 ?x44 ?x44 ?x681 y y u u u))))
 (let ((?x577 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x182 (* ?x681 u)))
 (let ((?x1312 (* (- 1) k!00)))
 (let ((?x226 (+ y (* (- 1) x))))
 (let ((?x58 (+ u v)))
 (let ((?x234 (+ (* ?x58 ?x58 ?x58 ?x226 x x x) (* (- 1) (* ?x58 ?x58 ?x58 ?x226 ?x226 ?x226 v v v)) (* (- 1) (* ?x58 ?x226 ?x226 ?x226 x v)) (* ?x58 ?x58 ?x58 ?x226 ?x226 x v v v))))
 (let (($x953 (or (not (= (* (+ ?x1312 (* ?x58 x) (* ?x226 v) ?x577) ?x234) 0)) (not (= (* (+ ?x1312 ?x182 ?x45 ?x577) ?x1040) 0)))))
 (let ((?x1229 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (and (= ?x1229 0) $x953))))))))))))) :qid k!29))
 ))
 (let ((?x656 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x352 (* u u u v v v x y y)))
 (let ((?x321 (* (- 1) (* u v x y y y))))
 (let ((?x153 (* u u u x x x y)))
 (let ((?x433 (+ ?x153 (* (- 3) (* u u u x x y y)) (* 3 (* u u u x y y y)) (* (- 1) (* u u u y y y y)) (* (- 2) (* u u u u u u y y y)) (* (- 6) (* u u u u u v y y y)) (* (- 6) (* u u u u v v y y y)) (* (- 2) (* u u u v v v y y y)) (* (- 1) (* u u x y y y)) ?x321 (* u u y y y y) (* u v y y y y) (* u u u u u u x y y) (* 3 (* u u u u u v x y y)) (* 3 (* u u u u v v x y y)) ?x352)))
 (let ((?x1312 (* (- 1) k!00)))
 (let ((?x577 (* (- 1) k!10)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x727 (+ ?x33 ?x34 ?x577 ?x1312)))
 (let ((?x1386 (+ (* 3 (* u u v x x x y)) (* 3 (* u v v x x x y)) (* v v v x x x y) (* (- 1) (* u u u x x x x)) (* (- 3) (* u u v x x x x)) ?x153 (* (- 1) (* u u u v v v y y y)) ?x321 (* 4 ?x352) (* (- 3) (* u v v x x x x)) (* (- 1) (* v v v x x x x)) (* (- 3) (* u u v v v v y y y)) (* (- 3) (* u v v v v v y y y)) (* (- 1) (* v v v v v v y y y)) (* 2 (* u u u v v v x x x)) (* 6 (* u u v v v v x x x)) (* 6 (* u v v v v v x x x)) (* 2 (* v v v v v v x x x)) (* (- 5) (* u u u v v v x x y)) (* (- 15) (* u u v v v v x x y)) (* (- 15) (* u v v v v v x x y)) (* (- 5) (* v v v v v v x x y)) (* 12 (* u u v v v v x y y)) (* 12 (* u v v v v v x y y)) (* 4 (* v v v v v v x y y)) (* (- 1) (* v v x y y y)) (* u v x x x x) (* v v x x x x) (* (- 3) (* u v x x x y)) (* (- 3) (* v v x x x y)) (* 3 (* u v x x y y)) (* 3 (* v v x x y y)))))
 (let (($x1761 (and (= ?x727 0) (or (not (= (* ?x727 ?x1386) 0)) (not (= (* ?x727 ?x433) 0))))))
 (let ((?x681 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x1040 (+ (* ?x681 ?x681 ?x681 y u u u) (* (- 1) (* ?x44 ?x44 ?x44 y y y u u u)) (* (- 1) (* ?x44 ?x681 y y y u)) (* ?x44 ?x44 ?x44 ?x681 y y u u u))))
 (let ((?x226 (+ y (* (- 1) x))))
 (let ((?x58 (+ u v)))
 (let ((?x234 (+ (* ?x58 ?x58 ?x58 ?x226 x x x) (* (- 1) (* ?x58 ?x58 ?x58 ?x226 ?x226 ?x226 v v v)) (* (- 1) (* ?x58 ?x226 ?x226 ?x226 x v)) (* ?x58 ?x58 ?x58 ?x226 ?x226 x v v v))))
 (let (($x953 (or (not (= (* (+ ?x1312 (* ?x58 x) (* ?x226 v) ?x577) ?x234) 0)) (not (= (* (+ ?x1312 (* ?x681 u) (* ?x44 y) ?x577) ?x1040) 0)))))
 (let ((?x1229 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x1036 (and (= ?x1229 0) $x953)))
 (rewrite (= $x1036 $x1761)))))))))))))))))))))))
 ))
 (let (($x668 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x681 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x1040 (+ (* ?x681 ?x681 ?x681 y u u u) (* (- 1) (* ?x44 ?x44 ?x44 y y y u u u)) (* (- 1) (* ?x44 ?x681 y y y u)) (* ?x44 ?x44 ?x44 ?x681 y y u u u))))
 (let ((?x577 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x182 (* ?x681 u)))
 (let ((?x1312 (* (- 1) k!00)))
 (let ((?x226 (+ y (* (- 1) x))))
 (let ((?x58 (+ u v)))
 (let ((?x234 (+ (* ?x58 ?x58 ?x58 ?x226 x x x) (* (- 1) (* ?x58 ?x58 ?x58 ?x226 ?x226 ?x226 v v v)) (* (- 1) (* ?x58 ?x226 ?x226 ?x226 x v)) (* ?x58 ?x58 ?x58 ?x226 ?x226 x v v v))))
 (let (($x953 (or (not (= (* (+ ?x1312 (* ?x58 x) (* ?x226 v) ?x577) ?x234) 0)) (not (= (* (+ ?x1312 ?x182 ?x45 ?x577) ?x1040) 0)))))
 (and (= (+ ?x1312 (* x u) (* y v) ?x577) 0) $x953)))))))))))) :qid k!29))
 ))
 (let ((?x608 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x681 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x1040 (+ (* ?x681 ?x681 ?x681 y u u u) (* (- 1) (* ?x44 ?x44 ?x44 y y y u u u)) (* (- 1) (* ?x44 ?x681 y y y u)) (* ?x44 ?x44 ?x44 ?x681 y y u u u))))
 (let ((?x577 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x182 (* ?x681 u)))
 (let ((?x1312 (* (- 1) k!00)))
 (let ((?x226 (+ y (* (- 1) x))))
 (let ((?x58 (+ u v)))
 (let ((?x234 (+ (* ?x58 ?x58 ?x58 ?x226 x x x) (* (- 1) (* ?x58 ?x58 ?x58 ?x226 ?x226 ?x226 v v v)) (* (- 1) (* ?x58 ?x226 ?x226 ?x226 x v)) (* ?x58 ?x58 ?x58 ?x226 ?x226 x v v v))))
 (let (($x953 (or (not (= (* (+ ?x1312 (* ?x58 x) (* ?x226 v) ?x577) ?x234) 0)) (not (= (* (+ ?x1312 ?x182 ?x45 ?x577) ?x1040) 0)))))
 (let ((?x1229 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x1036 (and (= ?x1229 0) $x953)))
 (let (($x994 (and (= (+ ?x1312 (* x u) (* y v) ?x577) 0) $x953)))
 (rewrite (= $x994 $x1036)))))))))))))))))
 ))
 (let (($x1030 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x681 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x1040 (+ (* ?x681 ?x681 ?x681 y u u u) (* (- 1) (* ?x44 ?x44 ?x44 y y y u u u)) (* (- 1) (* ?x44 ?x681 y y y u)) (* ?x44 ?x44 ?x44 ?x681 y y u u u))))
 (let ((?x38 (* v00 y00)))
 (let ((?x101 (* (- 1) ?x38)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x182 (* ?x681 u)))
 (let ((?x85 (* (- 1) (* u00 x00))))
 (let ((?x226 (+ y (* (- 1) x))))
 (let ((?x58 (+ u v)))
 (let ((?x234 (+ (* ?x58 ?x58 ?x58 ?x226 x x x) (* (- 1) (* ?x58 ?x58 ?x58 ?x226 ?x226 ?x226 v v v)) (* (- 1) (* ?x58 ?x226 ?x226 ?x226 x v)) (* ?x58 ?x58 ?x58 ?x226 ?x226 x v v v))))
 (let (($x992 (or (not (= (* (+ ?x85 (* ?x58 x) (* ?x226 v) ?x101) ?x234) 0)) (not (= (* (+ ?x85 ?x182 ?x45 ?x101) ?x1040) 0)))))
 (and (= (+ ?x85 (* x u) (* y v) ?x101) 0) $x992))))))))))))) :qid k!29))
 ))
 (let ((?x990 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x681 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x1040 (+ (* ?x681 ?x681 ?x681 y u u u) (* (- 1) (* ?x44 ?x44 ?x44 y y y u u u)) (* (- 1) (* ?x44 ?x681 y y y u)) (* ?x44 ?x44 ?x44 ?x681 y y u u u))))
 (let ((?x577 (* (- 1) k!10)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x182 (* ?x681 u)))
 (let ((?x1312 (* (- 1) k!00)))
 (let ((?x226 (+ y (* (- 1) x))))
 (let ((?x58 (+ u v)))
 (let ((?x234 (+ (* ?x58 ?x58 ?x58 ?x226 x x x) (* (- 1) (* ?x58 ?x58 ?x58 ?x226 ?x226 ?x226 v v v)) (* (- 1) (* ?x58 ?x226 ?x226 ?x226 x v)) (* ?x58 ?x58 ?x58 ?x226 ?x226 x v v v))))
 (let (($x953 (or (not (= (* (+ ?x1312 (* ?x58 x) (* ?x226 v) ?x577) ?x234) 0)) (not (= (* (+ ?x1312 ?x182 ?x45 ?x577) ?x1040) 0)))))
 (let (($x994 (and (= (+ ?x1312 (* x u) (* y v) ?x577) 0) $x953)))
 (let ((?x1032 (* (+ (* (- 1) (* u00 x00)) ?x182 ?x45 (* (- 1) (* v00 y00))) ?x1040)))
 (let ((?x38 (* v00 y00)))
 (let ((?x101 (* (- 1) ?x38)))
 (let ((?x564 (* ?x226 v)))
 (let ((?x59 (* ?x58 x)))
 (let ((?x85 (* (- 1) (* u00 x00))))
 (let (($x992 (or (not (= (* (+ ?x85 ?x59 ?x564 ?x101) ?x234) 0)) (not (= ?x1032 0)))))
 (let (($x1022 (and (= (+ ?x85 (* x u) (* y v) ?x101) 0) $x992)))
 (rewrite (= $x1022 $x994)))))))))))))))))))))))
 ))
 (let (($x76 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x60 (- y x)))
 (let ((?x58 (+ u v)))
 (let ((?x67 (- (* ?x58 ?x58 ?x58 x x x ?x60) (* ?x58 ?x58 ?x58 v v v ?x60 ?x60 ?x60))))
 (let ((?x70 (+ (- ?x67 (* ?x58 v x ?x60 ?x60 ?x60)) (* ?x58 ?x58 ?x58 v v v x ?x60 ?x60))))
 (let ((?x38 (* v00 y00)))
 (let ((?x71 (* (- (+ (* (- 1) u00 x00) (* ?x58 x) (* v ?x60)) ?x38) ?x70)))
 (let ((?x42 (- x y)))
 (let ((?x44 (+ v u)))
 (let ((?x51 (- (* u u u ?x42 ?x42 ?x42 y) (* u u u ?x44 ?x44 ?x44 y y y))))
 (let ((?x54 (+ (- ?x51 (* u ?x44 ?x42 y y y)) (* u u u ?x44 ?x44 ?x44 ?x42 y y))))
 (let ((?x55 (* (- (+ (* (- 1) u00 x00) (* u ?x42) (* ?x44 y)) ?x38) ?x54)))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (and $x41 (or (not (= ?x55 0)) (not (= ?x71 0)))))))))))))))) :qid k!29))
 ))
 (let ((?x384 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x681 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x1040 (+ (* ?x681 ?x681 ?x681 y u u u) (* (- 1) (* ?x44 ?x44 ?x44 y y y u u u)) (* (- 1) (* ?x44 ?x681 y y y u)) (* ?x44 ?x44 ?x44 ?x681 y y u u u))))
 (let ((?x38 (* v00 y00)))
 (let ((?x101 (* (- 1) ?x38)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x182 (* ?x681 u)))
 (let ((?x85 (* (- 1) (* u00 x00))))
 (let ((?x226 (+ y (* (- 1) x))))
 (let ((?x58 (+ u v)))
 (let ((?x234 (+ (* ?x58 ?x58 ?x58 ?x226 x x x) (* (- 1) (* ?x58 ?x58 ?x58 ?x226 ?x226 ?x226 v v v)) (* (- 1) (* ?x58 ?x226 ?x226 ?x226 x v)) (* ?x58 ?x58 ?x58 ?x226 ?x226 x v v v))))
 (let (($x992 (or (not (= (* (+ ?x85 (* ?x58 x) (* ?x226 v) ?x101) ?x234) 0)) (not (= (* (+ ?x85 ?x182 ?x45 ?x101) ?x1040) 0)))))
 (let (($x1022 (and (= (+ ?x85 (* x u) (* y v) ?x101) 0) $x992)))
 (let ((?x60 (- y x)))
 (let ((?x67 (- (* ?x58 ?x58 ?x58 x x x ?x60) (* ?x58 ?x58 ?x58 v v v ?x60 ?x60 ?x60))))
 (let ((?x70 (+ (- ?x67 (* ?x58 v x ?x60 ?x60 ?x60)) (* ?x58 ?x58 ?x58 v v v x ?x60 ?x60))))
 (let ((?x71 (* (- (+ (* (- 1) u00 x00) (* ?x58 x) (* v ?x60)) ?x38) ?x70)))
 (let ((?x51 (- (* u u u (- x y) (- x y) (- x y) y) (* u u u ?x44 ?x44 ?x44 y y y))))
 (let ((?x54 (+ (- ?x51 (* u ?x44 (- x y) y y y)) (* u u u ?x44 ?x44 ?x44 (- x y) y y))))
 (let ((?x55 (* (- (+ (* (- 1) u00 x00) (* u (- x y)) ?x45) ?x38) ?x54)))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (let (($x75 (and $x41 (or (not (= ?x55 0)) (not (= ?x71 0))))))
 (rewrite (= $x75 $x1022)))))))))))))))))))))))))
 ))
 (let ((@x77 (asserted $x76)))
 (let ((@x380 (mp (mp @x77 (quant-intro (proof-bind ?x384) (= $x76 $x1030)) $x1030) (rewrite (= $x1030 $x1030)) $x1030)))
 (let ((@x1011 (mp (mp @x380 (quant-intro (proof-bind ?x990) (= $x1030 $x668)) $x668) (quant-intro (proof-bind ?x608) (= $x668 $x575)) $x575)))
 (let ((@x1265 (mp~ (mp @x1011 (quant-intro (proof-bind ?x656) (= $x575 $x1310)) $x1310) (sk (~ $x1310 $x1262)) $x1262)))
 (let ((@x262 (mp @x1265 (rewrite (= $x1262 $x297)) $x297)))
 (let ((@x1199 (and-elim @x262 $x160)))
 (let ((@x196 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x160) $x1316)) @x1199 $x1316)))
 (let (($x1315 (<= ?x1288 0)))
 (let ((@x1329 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x160) $x1315)) @x1199 $x1315)))
 (let (($x1280 (not (<= ?x1211 0))))
 (let (($x1275 (>= ?x1211 0)))
 (let (($x1273 (>= ?x1182 0)))
 (let (($x1270 (<= ?x1182 0)))
 (let ((@x1198 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1201 (not $x1270) (not $x1273))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1270)) @x1329 @x196 false) $x1270) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1273)) @x1329 @x196 false) $x1273) $x1201)))
 (let ((@x1360 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1296 $x1280 (not $x1275))) (unit-resolution (and-elim @x262 $x1350) @x1198 $x1210) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1275)) @x1329 @x196 false) $x1275) $x1280)))
 ((_ th-lemma arith farkas 1 1 1) @x1360 @x1329 @x196 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        28
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             432
 :arith-nonlinear-bounds    11
 :arith-num-rows            4
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 69
 :arith-tableau-max-rows    4
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :eliminated-applications   2
 :final-checks              4
 :max-memory                3.76
 :memory                    3.26
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1127690
 :num-checks                1
 :propagations              14
 :rlimit-count              6170
 :time                      0.01
 :total-time                0.01)
