unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1035 (* (- 2) n!0)))
 (let ((?x1039 (* k!2 n!0)))
 (let ((?x747 (* (- 1) ?x1039)))
 (let ((?x1545 (* 3 c!3)))
 (let ((?x901 (+ ?x1545 ?x747 k!2 ?x1035)))
 (let (($x1216 (<= ?x901 1)))
 (let (($x782 (= ?x901 1)))
 (let ((?x662 (* (- 6) (* m!1 m!1 m!1))))
 (let ((?x1536 (* 144 (* n!0 n!0 n!0))))
 (let ((?x1252 (* (- 1) (* m!1 m!1 n!0 n!0 n!0))))
 (let ((?x1053 (+ c!3 k!2)))
 (let ((?x1669 (+ m!1 k!2)))
 (let ((?x777 (+ 6 m!1)))
 (let ((?x947 (+ 1 n!0)))
 (let ((?x416 (* 6 (* m!1 m!1 m!1 n!0 n!0))))
 (let ((?x808 (* 216 n!0)))
 (let ((?x1390 (* 6 (* m!1 n!0 n!0 n!0 n!0))))
 (let ((?x1516 (* 36 (* n!0 n!0 n!0 n!0))))
 (let ((?x1614 (* 240 (* m!1 n!0 n!0))))
 (let ((?x748 (* 216 k!2)))
 (let ((?x1056 (* ?x947 ?x947 ?x947 ?x777 ?x1053 ?x1053 ?x1053)))
 (let ((?x1741 (* 69 (* m!1 m!1 n!0 n!0))))
 (let ((?x816 (* 432 ?x1039)))
 (let ((?x571 (* (- 6) (* ?x947 ?x947 ?x947 ?x947 ?x1053 ?x1053 ?x1053))))
 (let ((?x913 (* 444 (* m!1 n!0))))
 (let ((?x933 (* 216 (* k!2 n!0 n!0))))
 (let ((?x849 (* 34 (* m!1 m!1))))
 (let ((?x779 (* (- 1) (* m!1 m!1 m!1 m!1 n!0))))
 (let ((?x1244 (* 18 (* m!1 n!0 n!0 n!0))))
 (let ((?x685 (* (- 1) (* m!1 m!1 m!1 m!1))))
 (let ((?x1043 (* 216 m!1)))
 (let ((?x1528 (* 104 (* m!1 m!1 n!0))))
 (let ((?x1367 (* (- 6) (* ?x947 ?x947 ?x947 ?x1053 ?x1053 ?x1053))))
 (let ((?x150 (* n!0 n!0)))
 (let ((?x817 (* 252 ?x150)))
 (let ((?x903 (+ ?x817 ?x1367 ?x1528 ?x1043 (* (- 1) (* ?x947 ?x777 ?x777 ?x1669 ?x1669 ?x1669 ?x1053 ?x1053 ?x1053)) ?x685 (* (- 1) (* m!1 m!1 m!1 k!2 n!0)) ?x1244 (* 108 (* m!1 k!2 n!0)) ?x779 ?x849 ?x933 (* 6 (* ?x947 ?x777 ?x1669 ?x1669 ?x1669 ?x1053 ?x1053 ?x1053)) (* 6 (* m!1 m!1 k!2 n!0 n!0)) ?x913 ?x571 ?x816 ?x1741 ?x1056 ?x748 ?x1614 ?x1516 ?x1390 ?x808 (* (- 1) (* m!1 m!1 m!1 k!2)) (* 36 (* m!1 k!2)) ?x416 (* 6 (* ?x947 ?x947 ?x777 ?x1669 ?x1669 ?x1669 ?x1053 ?x1053 ?x1053)) (* (- 6) (* m!1 m!1 k!2)) (* 72 (* m!1 k!2 n!0 n!0)) ?x1252 ?x1536 ?x662)))
 (let (($x1647 (= ?x903 (- 72))))
 (let (($x1221 (not $x1647)))
 (let ((?x1365 (+ (* 3 ?x150) (* (- 1) k!2) (* 3 n!0))))
 (let (($x164 (= ?x1365 (- 1))))
 (let ((?x179 (* (- 1) (* k!2 k!2))))
 (let ((?x719 (* 9 (* c!3 n!0))))
 (let ((?x1181 (* (- 9) n!0)))
 (let ((?x1506 (* 5 k!2)))
 (let ((?x1180 (* 18 c!3)))
 (let ((?x177 (+ m!1 (* (- 6) n!0))))
 (let (($x175 (= ?x177 6)))
 (let (($x678 (and $x175 (= (+ ?x1180 ?x1506 ?x1181 ?x719 ?x179) 4) $x782 $x164 $x1221)))
 (let ((?x1499 (+ k!2 m!1)))
 (let ((?x827 (+ ?x748 ?x1043 ?x808 ?x816 ?x817 (* (- 1) (* ?x947 ?x777 ?x777 ?x1499 ?x1499 ?x1499 ?x1053 ?x1053 ?x1053)) ?x913 (* (- 1) (* k!2 m!1 m!1 m!1 n!0)) ?x779 (* 36 (* k!2 m!1)) ?x849 (* (- 6) (* k!2 m!1 m!1)) ?x662 (* (- 1) (* k!2 m!1 m!1 m!1)) ?x685 (* 108 (* k!2 m!1 n!0)) ?x1528 ?x1536 ?x1516 ?x1390 ?x1244 ?x1614 ?x1252 ?x1741 ?x1367 ?x571 (* 6 (* ?x947 ?x947 ?x777 ?x1499 ?x1499 ?x1499 ?x1053 ?x1053 ?x1053)) ?x1056 (* 6 (* ?x947 ?x777 ?x1499 ?x1499 ?x1499 ?x1053 ?x1053 ?x1053)) (* 6 (* k!2 m!1 m!1 n!0 n!0)) ?x416 (* 72 (* k!2 m!1 n!0 n!0)) ?x933)))
 (let (($x507 (and $x175 (= (+ ?x1180 ?x1506 ?x1181 ?x179 ?x719) 4) (= (+ ?x1545 k!2 ?x1035 ?x747) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) ?x150)) 1) (not (= ?x827 (- 72))))))
 (let (($x460 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x83 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x926 (* 6 (* ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x916 (* ?x318 ?x318 ?x318 ?x315 ?x83 ?x83 ?x83)))
 (let ((?x908 (* 6 (* ?x318 ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x886 (* (- 6) (* ?x318 ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x1375 (* (- 6) (* ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x483 (* 108 (* k m n))))
 (let ((?x841 (* (- 1) (* ?x318 ?x315 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x393 (* 216 k)))
 (let ((?x435 (+ ?x393 (* 216 m) (* 216 n) (* 432 (* k n)) (* 252 (* n n)) ?x841 (* 444 (* m n)) (* (- 1) (* k m m m n)) (* (- 1) (* m m m m n)) (* 36 (* k m)) (* 34 (* m m)) (* (- 6) (* k m m)) (* (- 6) (* m m m)) (* (- 1) (* k m m m)) (* (- 1) (* m m m m)) ?x483 (* 104 (* m m n)) (* 144 (* n n n)) (* 36 (* n n n n)) (* 6 (* m n n n n)) (* 18 (* m n n n)) (* 240 (* m n n)) (* (- 1) (* m m n n n)) (* 69 (* m m n n)) ?x1375 ?x886 ?x908 ?x916 ?x926 (* 6 (* k m m n n)) (* 6 (* m m m n n)) (* 72 (* k m n n)) (* 216 (* k n n)))))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 $x217 $x269 $x307 (not (= ?x435 (- 72)))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x508 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x83 (+ c k)))
 (let ((?x318 (+ 1 n)))
 (let ((?x1375 (* (- 6) (* ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x71 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x926 (* 6 (* ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x916 (* ?x318 ?x318 ?x318 ?x315 ?x83 ?x83 ?x83)))
 (let ((?x908 (* 6 (* ?x318 ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x886 (* (- 6) (* ?x318 ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x841 (* (- 1) (* ?x318 ?x315 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x320 (+ (* 6 (* ?x318 ?x315)) (* (- 1) (* ?x318 ?x315 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x315)) (* (- 1) (* ?x318 ?x318 ?x318 ?x315 ?x315)) (* 6 (* ?x318 ?x318 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x315 ?x315 ?x71)) ?x841 ?x886 ?x908 ?x916 ?x926 ?x1375 (* (- 1) (* ?x318 ?x315 ?x315)))))
 (let (($x1005 (not (= ?x320 0))))
 (let (($x987 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x149 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x149 $x987 $x1005))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1045 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x83 (+ c k)))
 (let ((?x71 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x318 (+ 1 n)))
 (let ((?x926 (* 6 (* ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x916 (* ?x318 ?x318 ?x318 ?x315 ?x83 ?x83 ?x83)))
 (let ((?x908 (* 6 (* ?x318 ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x886 (* (- 6) (* ?x318 ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x1375 (* (- 6) (* ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x483 (* 108 (* k m n))))
 (let ((?x841 (* (- 1) (* ?x318 ?x315 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x393 (* 216 k)))
 (let ((?x435 (+ ?x393 (* 216 m) (* 216 n) (* 432 (* k n)) (* 252 (* n n)) ?x841 (* 444 (* m n)) (* (- 1) (* k m m m n)) (* (- 1) (* m m m m n)) (* 36 (* k m)) (* 34 (* m m)) (* (- 6) (* k m m)) (* (- 6) (* m m m)) (* (- 1) (* k m m m)) (* (- 1) (* m m m m)) ?x483 (* 104 (* m m n)) (* 144 (* n n n)) (* 36 (* n n n n)) (* 6 (* m n n n n)) (* 18 (* m n n n)) (* 240 (* m n n)) (* (- 1) (* m m n n n)) (* 69 (* m m n n)) ?x1375 ?x886 ?x908 ?x916 ?x926 (* 6 (* k m m n n)) (* 6 (* m m m n n)) (* 72 (* k m n n)) (* 216 (* k n n)))))
 (let (($x307 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x269 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x217 (= (+ ?x40 ?x44 ?x219 ?x220 (* 9 (* c n))) 4)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x456 (and $x133 $x217 $x269 $x307 (not (= ?x435 (- 72))))))
 (let ((?x320 (+ (* 6 (* ?x318 ?x315)) (* (- 1) (* ?x318 ?x315 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x315)) (* (- 1) (* ?x318 ?x318 ?x318 ?x315 ?x315)) (* 6 (* ?x318 ?x318 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x315 ?x315 ?x71)) ?x841 ?x886 ?x908 ?x916 ?x926 ?x1375 (* (- 1) (* ?x318 ?x315 ?x315)))))
 (let (($x1005 (not (= ?x320 0))))
 (let (($x987 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x149 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x1033 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x149 $x987 $x1005)))
 (rewrite (= $x1033 $x456)))))))))))))))))))))))))))))))
 ))
 (let (($x1007 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x83 (+ c k)))
 (let ((?x318 (+ 1 n)))
 (let ((?x1375 (* (- 6) (* ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x71 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x926 (* 6 (* ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x916 (* ?x318 ?x318 ?x318 ?x315 ?x83 ?x83 ?x83)))
 (let ((?x908 (* 6 (* ?x318 ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x886 (* (- 6) (* ?x318 ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x841 (* (- 1) (* ?x318 ?x315 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x320 (+ (* 6 (* ?x318 ?x315)) (* (- 1) (* ?x318 ?x315 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x315)) (* (- 1) (* ?x318 ?x318 ?x318 ?x315 ?x315)) (* 6 (* ?x318 ?x318 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x315 ?x315 ?x71)) ?x841 ?x886 ?x908 ?x916 ?x926 ?x1375 (* (- 1) (* ?x318 ?x315 ?x315)))))
 (let (($x1005 (not (= ?x320 0))))
 (let (($x987 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x722 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (and $x133 (= ?x722 (- 4)) $x585 $x987 $x1005))))))))))))))))))) :qid k!34))
 ))
 (let ((?x939 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x83 (+ c k)))
 (let ((?x318 (+ 1 n)))
 (let ((?x1375 (* (- 6) (* ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x71 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x926 (* 6 (* ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x916 (* ?x318 ?x318 ?x318 ?x315 ?x83 ?x83 ?x83)))
 (let ((?x908 (* 6 (* ?x318 ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x886 (* (- 6) (* ?x318 ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x841 (* (- 1) (* ?x318 ?x315 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x320 (+ (* 6 (* ?x318 ?x315)) (* (- 1) (* ?x318 ?x315 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x315)) (* (- 1) (* ?x318 ?x318 ?x318 ?x315 ?x315)) (* 6 (* ?x318 ?x318 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x315 ?x315 ?x71)) ?x841 ?x886 ?x908 ?x916 ?x926 ?x1375 (* (- 1) (* ?x318 ?x315 ?x315)))))
 (let (($x1005 (not (= ?x320 0))))
 (let (($x987 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x149 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x220 (* (- 1) ?x49)))
 (let ((?x219 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x1033 (and $x133 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x219 ?x220) 4) $x149 $x987 $x1005)))
 (let (($x585 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x722 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1205 (and $x133 (= ?x722 (- 4)) $x585 $x987 $x1005)))
 (rewrite (= $x1205 $x1033))))))))))))))))))))))))))))
 ))
 (let (($x100 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ n 1)))
 (let ((?x83 (+ c k)))
 (let ((?x68 (+ m 6)))
 (let ((?x71 (+ k m)))
 (let ((?x77 (+ (- (* 6 ?x68 ?x69) (* ?x71 ?x68 ?x68 ?x68 ?x69)) (* 6 ?x68 ?x69 ?x69 ?x69 ?x69) (* 6 ?x68 ?x69 ?x69 ?x69) (* 6 ?x68 ?x69 ?x69))))
 (let ((?x82 (+ (- ?x77 (* ?x68 ?x68 ?x69 ?x69 ?x69)) (* 6 ?x71 ?x68 ?x68 ?x69 ?x69) (* 6 ?x71 ?x68 ?x68 ?x69))))
 (let ((?x87 (- (- ?x82 (* ?x83 ?x83 ?x83 ?x71 ?x71 ?x71 ?x68 ?x68 ?x69)) (* 6 ?x83 ?x83 ?x83 ?x69 ?x69 ?x69 ?x69))))
 (let ((?x91 (+ ?x87 (* 6 ?x83 ?x83 ?x83 ?x71 ?x71 ?x71 ?x68 ?x69 ?x69) (* ?x83 ?x83 ?x83 ?x68 ?x69 ?x69 ?x69) (* 6 ?x83 ?x83 ?x83 ?x71 ?x71 ?x71 ?x68 ?x69))))
 (let ((?x95 (- (- ?x91 (* 6 ?x83 ?x83 ?x83 ?x69 ?x69 ?x69)) (* ?x68 ?x68 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x95 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1015 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x83 (+ c k)))
 (let ((?x318 (+ 1 n)))
 (let ((?x1375 (* (- 6) (* ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x71 (+ k m)))
 (let ((?x315 (+ 6 m)))
 (let ((?x926 (* 6 (* ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x916 (* ?x318 ?x318 ?x318 ?x315 ?x83 ?x83 ?x83)))
 (let ((?x908 (* 6 (* ?x318 ?x318 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x886 (* (- 6) (* ?x318 ?x318 ?x318 ?x318 ?x83 ?x83 ?x83))))
 (let ((?x841 (* (- 1) (* ?x318 ?x315 ?x315 ?x71 ?x71 ?x71 ?x83 ?x83 ?x83))))
 (let ((?x320 (+ (* 6 (* ?x318 ?x315)) (* (- 1) (* ?x318 ?x315 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x318 ?x315)) (* 6 (* ?x318 ?x318 ?x315)) (* (- 1) (* ?x318 ?x318 ?x318 ?x315 ?x315)) (* 6 (* ?x318 ?x318 ?x315 ?x315 ?x71)) (* 6 (* ?x318 ?x315 ?x315 ?x71)) ?x841 ?x886 ?x908 ?x916 ?x926 ?x1375 (* (- 1) (* ?x318 ?x315 ?x315)))))
 (let (($x1005 (not (= ?x320 0))))
 (let (($x987 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x585 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x722 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x133 (= (+ m (* (- 6) n)) 6)))
 (let (($x1205 (and $x133 (= ?x722 (- 4)) $x585 $x987 $x1005)))
 (let ((?x69 (+ n 1)))
 (let ((?x68 (+ m 6)))
 (let ((?x77 (+ (- (* 6 ?x68 ?x69) (* ?x71 ?x68 ?x68 ?x68 ?x69)) (* 6 ?x68 ?x69 ?x69 ?x69 ?x69) (* 6 ?x68 ?x69 ?x69 ?x69) (* 6 ?x68 ?x69 ?x69))))
 (let ((?x82 (+ (- ?x77 (* ?x68 ?x68 ?x69 ?x69 ?x69)) (* 6 ?x71 ?x68 ?x68 ?x69 ?x69) (* 6 ?x71 ?x68 ?x68 ?x69))))
 (let ((?x87 (- (- ?x82 (* ?x83 ?x83 ?x83 ?x71 ?x71 ?x71 ?x68 ?x68 ?x69)) (* 6 ?x83 ?x83 ?x83 ?x69 ?x69 ?x69 ?x69))))
 (let ((?x91 (+ ?x87 (* 6 ?x83 ?x83 ?x83 ?x71 ?x71 ?x71 ?x68 ?x69 ?x69) (* ?x83 ?x83 ?x83 ?x68 ?x69 ?x69 ?x69) (* 6 ?x83 ?x83 ?x83 ?x71 ?x71 ?x71 ?x68 ?x69))))
 (let ((?x95 (- (- ?x91 (* 6 ?x83 ?x83 ?x83 ?x69 ?x69 ?x69)) (* ?x68 ?x68 ?x69))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x99 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x95 0))))))
 (rewrite (= $x99 $x1205)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x101 (asserted $x100)))
 (let ((@x936 (mp (mp @x101 (quant-intro (proof-bind ?x1015) (= $x100 $x1007)) $x1007) (rewrite (= $x1007 $x1007)) $x1007)))
 (let ((@x1326 (mp (mp @x936 (quant-intro (proof-bind ?x939) (= $x1007 $x508)) $x508) (quant-intro (proof-bind ?x1045) (= $x508 $x460)) $x460)))
 (let ((@x1537 (mp (mp~ @x1326 (sk (~ $x460 $x507)) $x507) (rewrite (= $x507 $x678)) $x678)))
 (let ((@x781 (and-elim @x1537 $x782)))
 (let ((@x909 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x782) $x1216)) @x781 $x1216)))
 (let (($x1654 (>= ?x901 1)))
 (let ((@x859 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x782) $x1654)) @x781 $x1654)))
 (let (($x1720 (<= ?x177 6)))
 (let ((@x1186 (and-elim @x1537 $x175)))
 (let ((@x919 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x175) $x1720)) @x1186 $x1720)))
 (let (($x1170 (>= ?x177 6)))
 (let ((@x881 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x175) $x1170)) @x1186 $x1170)))
 (let (($x557 (<= ?x1365 (- 1))))
 (let ((@x1628 (and-elim @x1537 $x164)))
 (let ((@x1667 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x164) $x557)) @x1628 $x557)))
 (let (($x1214 (>= ?x1365 (- 1))))
 (let ((@x1706 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x164) $x1214)) @x1628 $x1214)))
 (let (($x1555 (not (<= ?x903 (- 72)))))
 (let (($x797 (>= ?x903 (- 72))))
 (let ((@x1494 ((_ th-lemma arith) (hypothesis (not $x797)) @x1706 @x1667 @x881 @x919 @x859 @x909 @x1706 @x1667 @x881 @x919 @x1706 @x1667 @x881 @x919 @x859 @x909 false)))
 (let ((@x904 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1647 $x1555 (not $x797))) (and-elim @x1537 $x1221) (or $x1555 (not $x797)))))
 ((_ th-lemma arith) (unit-resolution @x904 (lemma @x1494 $x797) $x1555) @x1706 @x1667 @x881 @x919 @x859 @x909 @x1706 @x1667 @x881 @x919 @x1706 @x1667 @x881 @x919 @x859 @x909 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        19
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             387
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      10
 :arith-tableau-max-columns 68
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.83
 :memory                    3.31
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1385380
 :num-checks                1
 :propagations              11
 :rlimit-count              8778
 :time                      0.01
 :total-time                0.02)
