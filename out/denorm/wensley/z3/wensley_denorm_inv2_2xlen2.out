unsat
((set-logic NRA)
(declare-fun d!6 () Real)
(declare-fun b!7 () Real)
(declare-fun a!8 () Real)
(declare-fun y!5 () Real)
(proof
(let ((?x438 (+ (* (/ 1.0 16.0) (* b!7 d!6 d!6 d!6 a!8 a!8 y!5 y!5)) (* (/ 1.0 16.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 y!5)) (* (/ 1.0 8.0) (* b!7 b!7 d!6 d!6 d!6 a!8 y!5 y!5)) (* (/ 1.0 32.0) (* b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8)) (* (/ 1.0 16.0) (* b!7 d!6 d!6 d!6 d!6 a!8 a!8 y!5)) (* (/ 1.0 16.0) (* b!7 b!7 b!7 d!6 d!6 d!6 y!5 y!5)) (* (/ 1.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)) (* (/ 1.0 8.0) (* b!7 b!7 d!6 d!6 d!6 d!6 a!8 y!5)) (* (/ 1.0 64.0) (* b!7 d!6 d!6 d!6 d!6 d!6 a!8 a!8)) (* (/ 1.0 16.0) (* b!7 b!7 b!7 d!6)))))
 (let (($x672 (>= ?x438 0.0)))
 (let (($x303 (not $x672)))
 (let ((?x692 (* b!7 b!7 b!7 d!6)))
 (let ((?x538 (* (- (/ 1.0 16.0)) ?x692)))
 (let ((?x628 (* b!7 d!6 d!6 d!6 d!6 d!6 a!8 a!8)))
 (let ((?x396 (* (- (/ 1.0 64.0)) ?x628)))
 (let ((?x536 (* b!7 b!7 d!6 d!6 d!6 d!6 a!8 y!5)))
 (let ((?x452 (* (- (/ 1.0 8.0)) ?x536)))
 (let ((?x454 (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)))
 (let ((?x548 (* (- (/ 1.0 64.0)) ?x454)))
 (let ((?x388 (* b!7 b!7 b!7 d!6 d!6 d!6 y!5 y!5)))
 (let ((?x97 (* (- (/ 1.0 16.0)) ?x388)))
 (let ((?x375 (* b!7 d!6 d!6 d!6 d!6 a!8 a!8 y!5)))
 (let ((?x739 (* (- (/ 1.0 16.0)) ?x375)))
 (let ((?x275 (* b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8)))
 (let ((?x332 (* (- (/ 1.0 32.0)) ?x275)))
 (let ((?x224 (* b!7 b!7 d!6 d!6 d!6 a!8 y!5 y!5)))
 (let ((?x718 (* (- (/ 1.0 8.0)) ?x224)))
 (let ((?x121 (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 y!5)))
 (let ((?x728 (* (- (/ 1.0 16.0)) ?x121)))
 (let ((?x704 (* b!7 d!6 d!6 d!6 a!8 a!8 y!5 y!5)))
 (let ((?x82 (* (- (/ 1.0 16.0)) ?x704)))
 (let ((?x376 (+ ?x82 ?x728 ?x718 ?x332 ?x739 ?x97 ?x548 ?x452 ?x396 ?x538)))
 (let (($x666 (<= ?x376 0.0)))
 (let (($x312 (not $x666)))
 (let (($x678 (>= ?x376 0.0)))
 (let (($x633 (<= ?x438 0.0)))
 (let (($x555 (not $x633)))
 (let ((@x457 (hypothesis $x555)))
 (let ((?x424 (+ (* (/ 1.0 2.0) (* d00 b!7)) (* (- (/ 1.0 2.0)) (* b00 d!6)))))
 (let (($x573 (>= ?x424 0.0)))
 (let ((?x123 (* d00 b!7)))
 (let ((?x570 (+ ?x123 (* (- 1.0) (* b00 d!6)))))
 (let (($x609 (>= ?x570 0.0)))
 (let (($x131 (= 0.0 ?x570)))
 (let ((@x719 (symm (commutativity (= $x131 (= ?x570 0.0))) (= (= ?x570 0.0) $x131))))
 (let (($x187 (= ?x570 0.0)))
 (let ((?x577 (* (/ 1.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 a!8 a!8))))
 (let ((?x203 (* (/ 1.0 64.0) (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6))))
 (let ((?x592 (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 b!7 d!6 d!6 y!5))))
 (let ((?x660 (* (/ 1.0 16.0) (* b!7 b!7 b!7 d!6 a!8 a!8 y!5 y!5))))
 (let ((?x510 (* (/ 1.0 32.0) (* b!7 b!7 d!6 d!6 d!6 a!8 y!5))))
 (let ((?x767 (* (/ 1.0 16.0) (* b!7 b!7 b!7 d!6 d!6 a!8 a!8 y!5))))
 (let ((?x680 (* (/ 1.0 8.0) (* b!7 b!7 b!7 b!7 d!6 d!6 a!8 y!5))))
 (let ((?x586 (* (/ 1.0 64.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6))))
 (let ((?x582 (* (/ 1.0 32.0) (* b!7 b!7 b!7 d!6 d!6 d!6 y!5))))
 (let ((?x599 (* (/ 1.0 64.0) (* b!7 b!7 d!6 d!6 d!6 d!6 a!8))))
 (let ((?x556 (* (/ 1.0 8.0) (* b!7 b!7 b!7 b!7 d!6 a!8 y!5 y!5))))
 (let ((?x557 (* (/ 1.0 16.0) (* b!7 b!7 b!7 b!7 b!7 d!6 y!5 y!5))))
 (let ((?x425 (* (/ 1.0 32.0) (* b!7 b!7 b!7 b!7 d!6 d!6 d!6 a!8))))
 (let ((?x550 (+ ?x425 ?x557 ?x556 ?x599 ?x582 ?x586 ?x680 ?x767 ?x510 ?x660 ?x592 ?x203 ?x577)))
 (let ((?x551 (* (+ (* (- (/ 1.0 2.0)) ?x123) (* (/ 1.0 2.0) (* b00 d!6))) (+ ?x728 ?x718 ?x332 ?x739 ?x97 ?x548 ?x452 ?x396 ?x538 ?x82) ?x550)))
 (let (($x299 (= ?x551 0.0)))
 (let (($x620 (not $x299)))
 (let ((?x722 (* b00 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6 d!6 a!8 a!8 a!8 y!5 y!5 y!5)))
 (let ((?x694 (* d00 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 d!6 a!8 a!8 a!8 y!5 y!5 y!5)))
 (let ((?x606 (* b00 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8 y!5)))
 (let ((?x493 (* d00 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x419 (* d00 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 a!8 y!5)))
 (let ((?x315 (* b00 b!7 b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x101 (* b00 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 d!6 a!8 a!8 y!5 y!5)))
 (let ((?x93 (* d00 b!7 b!7 b!7 b!7 b!7 b!7 b!7 d!6 d!6 a!8 a!8 y!5 y!5)))
 (let ((?x184 (+ (* (/ 1.0 512.0) ?x93) (* (- (/ 1.0 512.0)) ?x101) (* (- (/ 1.0 512.0)) ?x315) (* (/ 1.0 1024.0) ?x419) (* (/ 1.0 512.0) ?x493) (* (- (/ 1.0 1024.0)) ?x606) (* (/ 1.0 1024.0) ?x694) (* (- (/ 1.0 1024.0)) ?x722))))
 (let (($x357 (= ?x184 0.0)))
 (let (($x421 (or (not $x357) $x620)))
 (let ((?x472 (+ (* 2.0 (* b!7 y!5)) (* (- 2.0) (* y00 b!7)) (* (- 1.0) (* d!6 a!8)) (* a00 d!6))))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x263 (= (+ ?x30 ?x86 (* (- 1.0) (* d00 a!8)) (* 2.0 (* b00 y!5))) 0.0)))
 (let (($x562 (and $x263 $x187 (= ?x472 0.0) $x421)))
 (let ((?x700 (+ (* (/ 1.0 16.0) (* y!5 y!5 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 8.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 y!5 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 16.0) (* y!5 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 64.0) (* d!6 d!6 d!6 d!6 b!7 b!7 a!8)))))
 (let ((?x679 (+ (* (- (/ 1.0 16.0)) (* d!6 b!7 b!7 b!7)) (* (- (/ 1.0 16.0)) (* y!5 y!5 d!6 d!6 d!6 b!7 a!8 a!8)) (* (- (/ 1.0 16.0)) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 8.0)) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 16.0)) (* y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8)) (* (- (/ 1.0 64.0)) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (- (/ 1.0 32.0)) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (- (/ 1.0 64.0)) (* d!6 d!6 d!6 d!6 d!6 b!7 a!8 a!8)))))
 (let ((?x684 (* (+ (* (- (/ 1.0 2.0)) (* b!7 d00)) (* (/ 1.0 2.0) (* d!6 b00))) ?x679 ?x700)))
 (let ((?x737 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 a!8 a!8 a!8 b00)))
 (let ((?x735 (* y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 d00)))
 (let ((?x356 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 b00)))
 (let ((?x714 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 a!8 a!8 a!8 d00)))
 (let ((?x701 (* y!5 d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 a!8 b00)))
 (let ((?x637 (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 d00)))
 (let ((?x549 (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 b00)))
 (let ((?x646 (* y!5 y!5 d!6 d!6 b!7 b!7 b!7 b!7 b!7 b!7 b!7 a!8 a!8 d00)))
 (let ((?x105 (+ (* (/ 1.0 512.0) ?x646) (* (- (/ 1.0 512.0)) ?x549) (* (/ 1.0 1024.0) ?x637) (* (- (/ 1.0 1024.0)) ?x701) (* (/ 1.0 512.0) ?x714) (* (- (/ 1.0 512.0)) ?x356) (* (/ 1.0 1024.0) ?x735) (* (- (/ 1.0 1024.0)) ?x737))))
 (let ((?x497 (* d!6 a!8)))
 (let ((?x491 (+ ?x497 (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x300 (= (+ ?x30 (* (- 1.0) (* a!8 d00)) ?x86 (* 2.0 (* y!5 b00))) 0.0)))
 (let (($x724 (and $x300 (= (+ (* b!7 d00) (* (- 1.0) (* d!6 b00))) 0.0) (= ?x491 0.0) (or (not (= ?x105 0.0)) (not (= ?x684 0.0))))))
 (let (($x566 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x529 (+ ?x127 ?x180 (* (/ 1.0 16.0) (* y d d b b b b b)) (* (/ 1.0 8.0) (* y y d b b b b a)) (* (/ 1.0 16.0) (* y y d b b b b b)) (* (/ 1.0 8.0) (* y d d b b b b a)) (* (/ 1.0 16.0) (* y d d b b b a a)) (* (/ 1.0 64.0) (* d d d b b b b b)) (* (/ 1.0 32.0) (* d d d b b b b a)) (* (/ 1.0 64.0) (* d d d b b b a a)) (* (/ 1.0 32.0) (* y d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b a)))))
 (let ((?x208 (* (- (/ 1.0 16.0)) (* y y d d d b a a))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x761 (+ ?x155 ?x208 (* (- (/ 1.0 16.0)) (* y y d d d b b b)) (* (- (/ 1.0 8.0)) (* y y d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b b b)) (* (- (/ 1.0 8.0)) (* y d d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b a a)) (* (- (/ 1.0 64.0)) (* d d d d d b b b)) (* (- (/ 1.0 32.0)) (* d d d d d b b a)) (* (- (/ 1.0 64.0)) (* d d d d d b a a)))))
 (let ((?x161 (+ (* (- (/ 1.0 2.0)) (* b d00)) (* (/ 1.0 2.0) (* d b00)))))
 (let ((?x308 (* y y y d d d d d d d b b b a a a b00)))
 (let ((?x298 (* y y y d d d d d d b b b b a a a d00)))
 (let ((?x288 (* y y y y d d d d d b b b b a a a a b00)))
 (let ((?x278 (* y y y y d d d d b b b b b a a a a d00)))
 (let ((?x268 (* y d d d d d b b b b b a b00)))
 (let ((?x257 (* y d d d d b b b b b b a d00)))
 (let ((?x246 (* y y d d d b b b b b b a a b00)))
 (let ((?x235 (* y y d d b b b b b b b a a d00)))
 (let ((?x313 (+ (* (/ 1.0 512.0) ?x235) (* (- (/ 1.0 512.0)) ?x246) (* (/ 1.0 1024.0) ?x257) (* (- (/ 1.0 1024.0)) ?x268) (* (/ 1.0 512.0) ?x278) (* (- (/ 1.0 512.0)) ?x288) (* (/ 1.0 1024.0) ?x298) (* (- (/ 1.0 1024.0)) ?x308))))
 (let (($x182 (not (= ?x313 0.0))))
 (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x163 (= (+ ?x103 ?x128 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x89 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x118 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x86 (* 2.0 (* y b00))) 0.0)))
 (and $x118 $x89 $x163 (or $x182 (not (= (* ?x161 ?x761 ?x529) 0.0)))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x412 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x382 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x65 (+ a b)))
 (let ((?x387 (+ (* (/ 1.0 16.0) (* ?x65 ?x65 ?x382 ?x382 d b b b)) (* (/ 1.0 32.0) (* ?x65 ?x382 d d d b b)))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x326 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x405 (* ?x326 (+ ?x155 (* (- (/ 1.0 16.0)) (* ?x65 ?x65 ?x382 ?x382 d d d b))) ?x387)))
 (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x229 (* ?x326 (+ ?x155 (* (- (/ 1.0 16.0)) (* y y d d d b a a))) (+ ?x127 ?x180))))
 (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x215 (= (+ ?x103 ?x128 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let (($x81 (= (+ ?x86 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (and $x81 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x215 (or (not (= ?x229 0.0)) (not (= ?x405 0.0))))))))))))))))))) :qid k!33))
 ))
 (let ((?x567 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x529 (+ ?x127 ?x180 (* (/ 1.0 16.0) (* y d d b b b b b)) (* (/ 1.0 8.0) (* y y d b b b b a)) (* (/ 1.0 16.0) (* y y d b b b b b)) (* (/ 1.0 8.0) (* y d d b b b b a)) (* (/ 1.0 16.0) (* y d d b b b a a)) (* (/ 1.0 64.0) (* d d d b b b b b)) (* (/ 1.0 32.0) (* d d d b b b b a)) (* (/ 1.0 64.0) (* d d d b b b a a)) (* (/ 1.0 32.0) (* y d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b b)) (* (/ 1.0 64.0) (* d d d d b b a)))))
 (let ((?x208 (* (- (/ 1.0 16.0)) (* y y d d d b a a))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x761 (+ ?x155 ?x208 (* (- (/ 1.0 16.0)) (* y y d d d b b b)) (* (- (/ 1.0 8.0)) (* y y d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b b b)) (* (- (/ 1.0 8.0)) (* y d d d d b b a)) (* (- (/ 1.0 16.0)) (* y d d d d b a a)) (* (- (/ 1.0 64.0)) (* d d d d d b b b)) (* (- (/ 1.0 32.0)) (* d d d d d b b a)) (* (- (/ 1.0 64.0)) (* d d d d d b a a)))))
 (let ((?x161 (+ (* (- (/ 1.0 2.0)) (* b d00)) (* (/ 1.0 2.0) (* d b00)))))
 (let ((?x308 (* y y y d d d d d d d b b b a a a b00)))
 (let ((?x298 (* y y y d d d d d d b b b b a a a d00)))
 (let ((?x288 (* y y y y d d d d d b b b b a a a a b00)))
 (let ((?x278 (* y y y y d d d d b b b b b a a a a d00)))
 (let ((?x268 (* y d d d d d b b b b b a b00)))
 (let ((?x257 (* y d d d d b b b b b b a d00)))
 (let ((?x246 (* y y d d d b b b b b b a a b00)))
 (let ((?x235 (* y y d d b b b b b b b a a d00)))
 (let ((?x313 (+ (* (/ 1.0 512.0) ?x235) (* (- (/ 1.0 512.0)) ?x246) (* (/ 1.0 1024.0) ?x257) (* (- (/ 1.0 1024.0)) ?x268) (* (/ 1.0 512.0) ?x278) (* (- (/ 1.0 512.0)) ?x288) (* (/ 1.0 1024.0) ?x298) (* (- (/ 1.0 1024.0)) ?x308))))
 (let (($x182 (not (= ?x313 0.0))))
 (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x163 (= (+ ?x103 ?x128 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x89 (= (+ (* b d00) (* (- 1.0) (* d b00))) 0.0)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let (($x118 (= (+ ?x30 (* (- 1.0) (* a d00)) ?x86 (* 2.0 (* y b00))) 0.0)))
 (let (($x778 (and $x118 $x89 $x163 (or $x182 (not (= (* ?x161 ?x761 ?x529) 0.0))))))
 (let ((?x382 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x65 (+ a b)))
 (let ((?x387 (+ (* (/ 1.0 16.0) (* ?x65 ?x65 ?x382 ?x382 d b b b)) (* (/ 1.0 32.0) (* ?x65 ?x382 d d d b b)))))
 (let ((?x326 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x405 (* ?x326 (+ ?x155 (* (- (/ 1.0 16.0)) (* ?x65 ?x65 ?x382 ?x382 d d d b))) ?x387)))
 (let (($x409 (or (not (= (* ?x326 (+ ?x155 ?x208) (+ ?x127 ?x180)) 0.0)) (not (= ?x405 0.0)))))
 (let (($x215 (= (+ ?x103 ?x128 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x81 (= (+ ?x86 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x395 (and $x81 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x215 $x409)))
 (rewrite (= $x395 $x778)))))))))))))))))))))))))))))))))))))
 ))
 (let (($x77 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x53 (/ d 2.0)))
 (let ((?x66 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x65 (+ a b)))
 (let ((?x38 (- 1.0)))
 (let ((?x59 (* ?x38 ?x51 ?x51 ?x51 ?x53)))
 (let ((?x69 (+ (* ?x65 ?x65 ?x51 ?x51 ?x51 ?x53 ?x66 ?x66) (* ?x65 ?x51 ?x51 ?x53 ?x53 ?x53 ?x66))))
 (let ((?x55 (+ (* ?x38 ?x51 d00) (* b00 ?x53))))
 (let (($x73 (= (* ?x55 ?x69 (- ?x59 (* ?x65 ?x65 ?x51 ?x53 ?x53 ?x53 ?x66 ?x66))) 0.0)))
 (let ((?x58 (+ (* a a ?x51 ?x51 ?x51 ?x53 y y) (* a ?x51 ?x51 ?x53 ?x53 ?x53 y))))
 (let (($x63 (= (* ?x55 ?x58 (- ?x59 (* a a ?x51 ?x53 ?x53 ?x53 y y))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let ((?x30 (* a00 d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (and $x36 (= (+ (* ?x38 b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x63) (not $x73))))))))))))))))))) :qid k!33))
 ))
 (let ((?x370 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x382 (+ y (* (/ 1.0 2.0) d))))
 (let ((?x65 (+ a b)))
 (let ((?x387 (+ (* (/ 1.0 16.0) (* ?x65 ?x65 ?x382 ?x382 d b b b)) (* (/ 1.0 32.0) (* ?x65 ?x382 d d d b b)))))
 (let ((?x155 (* (- (/ 1.0 16.0)) (* d b b b))))
 (let ((?x326 (+ (* (- (/ 1.0 2.0)) (* d00 b)) (* (/ 1.0 2.0) (* b00 d)))))
 (let ((?x405 (* ?x326 (+ ?x155 (* (- (/ 1.0 16.0)) (* ?x65 ?x65 ?x382 ?x382 d d d b))) ?x387)))
 (let ((?x180 (* (/ 1.0 32.0) (* y d d d b b a))))
 (let ((?x127 (* (/ 1.0 16.0) (* y y d b b b a a))))
 (let ((?x229 (* ?x326 (+ ?x155 (* (- (/ 1.0 16.0)) (* y y d d d b a a))) (+ ?x127 ?x180))))
 (let ((?x128 (* (- 2.0) (* y b))))
 (let ((?x103 (* d a)))
 (let (($x215 (= (+ ?x103 ?x128 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let ((?x30 (* a00 d00)))
 (let ((?x86 (* (- 2.0) (* b00 y00))))
 (let (($x81 (= (+ ?x86 ?x30 (* 2.0 (* b00 y)) (* (- 1.0) (* d00 a))) 0.0)))
 (let (($x395 (and $x81 (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x215 (or (not (= ?x229 0.0)) (not (= ?x405 0.0))))))
 (let ((?x53 (/ d 2.0)))
 (let ((?x66 (+ y ?x53)))
 (let ((?x51 (/ b 2.0)))
 (let ((?x38 (- 1.0)))
 (let ((?x59 (* ?x38 ?x51 ?x51 ?x51 ?x53)))
 (let ((?x69 (+ (* ?x65 ?x65 ?x51 ?x51 ?x51 ?x53 ?x66 ?x66) (* ?x65 ?x51 ?x51 ?x53 ?x53 ?x53 ?x66))))
 (let ((?x55 (+ (* ?x38 ?x51 d00) (* b00 ?x53))))
 (let (($x73 (= (* ?x55 ?x69 (- ?x59 (* ?x65 ?x65 ?x51 ?x53 ?x53 ?x53 ?x66 ?x66))) 0.0)))
 (let ((?x58 (+ (* a a ?x51 ?x51 ?x51 ?x53 y y) (* a ?x51 ?x51 ?x53 ?x53 ?x53 y))))
 (let (($x63 (= (* ?x55 ?x58 (- ?x59 (* a a ?x51 ?x53 ?x53 ?x53 y y))) 0.0)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let ((?x33 (* a d00)))
 (let (($x36 (= (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33) 0.0)))
 (let (($x76 (and $x36 (= (+ (* ?x38 b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not $x63) (not $x73)))))
 (rewrite (= $x76 $x395))))))))))))))))))))))))))))))))))
 ))
 (let ((@x78 (asserted $x77)))
 (let ((@x682 (mp (mp @x78 (quant-intro (proof-bind ?x370) (= $x77 $x412)) $x412) (quant-intro (proof-bind ?x567) (= $x412 $x566)) $x566)))
 (let ((@x245 (mp (mp~ @x682 (sk (~ $x566 $x724)) $x724) (rewrite (= $x724 $x562)) $x562)))
 (let ((@x727 (mp (and-elim @x245 $x187) @x719 $x131)))
 (let ((@x750 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x131) $x609)) @x727 $x609)))
 (let ((@x314 (lemma ((_ th-lemma arith) @x750 (hypothesis (not $x573)) false) $x573)))
 (let ((?x610 (+ ?x557 ?x556 ?x599 ?x582 ?x586 ?x680 ?x767 ?x510 ?x660 ?x592 ?x203 ?x577 ?x425)))
 (let (($x478 (>= ?x610 0.0)))
 (let (($x414 (not $x478)))
 (let (($x398 (= ?x610 0.0)))
 (let (($x423 (not $x398)))
 (let (($x159 (= 0.0 ?x184)))
 (let (($x661 (<= ?x184 0.0)))
 (let (($x600 (<= ?x570 0.0)))
 (let ((@x596 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x131) $x600)) @x727 $x600)))
 (let ((@x605 (unit-resolution ((_ th-lemma arith) (or (not $x600) (not $x609) $x661)) @x596 @x750 (hypothesis (not $x661)) false)))
 (let (($x475 (>= ?x184 0.0)))
 (let ((@x738 (unit-resolution ((_ th-lemma arith) (or (not $x600) (not $x609) $x475)) @x596 @x750 (hypothesis (not $x475)) false)))
 (let ((@x371 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x159 (not $x661) (not $x475))) (lemma @x738 $x475) (or $x159 (not $x661)))))
 (let ((@x290 (mp (unit-resolution @x371 (lemma @x605 $x661) $x159) (commutativity (= $x159 $x357)) $x357)))
 (let ((@x206 (unit-resolution (and-elim @x245 $x421) @x290 $x620)))
 (let ((@x634 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x423 $x299)) @x206 $x423) (symm (hypothesis (= 0.0 ?x610)) $x398) false)))
 (let ((@x183 (lemma @x634 (not (= 0.0 ?x610)))))
 (let (($x448 (<= ?x610 0.0)))
 (let (($x172 (<= ?x424 0.0)))
 (let ((@x768 (lemma ((_ th-lemma arith) (hypothesis (not $x172)) @x596 false) $x172)))
 (let (($x654 (not $x448)))
 (let ((@x653 (hypothesis $x654)))
 (let (($x160 (<= ?x551 0.0)))
 (let (($x342 (not $x160)))
 (let (($x617 (>= ?x551 0.0)))
 (let (($x458 (not $x617)))
 (let ((@x656 (hypothesis $x458)))
 (let ((@x644 (unit-resolution ((_ th-lemma arith) (or (not $x573) $x633 $x448 $x617)) @x656 @x653 @x314 @x457 false)))
 (let ((@x537 (lemma ((_ th-lemma arith) (hypothesis (not $x678)) (hypothesis $x633) false) (or $x678 $x555))))
 (let ((@x669 (unit-resolution @x537 (unit-resolution (lemma @x644 (or $x633 $x617 $x448)) @x653 @x656 $x633) $x678)))
 (let ((@x440 (unit-resolution ((_ th-lemma arith) (or (not $x172) $x672 $x448 $x617)) @x656 @x653 @x768 (hypothesis $x303) false)))
 (let ((@x282 (lemma ((_ th-lemma arith) (hypothesis $x312) (hypothesis $x672) false) (or $x303 $x666))))
 (let ((@x581 (unit-resolution @x282 (unit-resolution (lemma @x440 (or $x448 $x617 $x672)) @x653 @x656 $x672) $x666)))
 (let (($x619 (= ?x376 0.0)))
 (let (($x441 (not $x619)))
 (let ((@x335 (unit-resolution (unit-resolution ((_ th-lemma arith) (or $x441 $x299)) @x206 $x441) (symm (hypothesis (= 0.0 ?x376)) $x619) false)))
 (let ((@x377 (unit-resolution ((_ th-lemma arith triangle-eq) (or (= 0.0 ?x376) $x312 (not $x678))) (lemma @x335 (not (= 0.0 ?x376))) (or $x312 (not $x678)))))
 (let ((@x394 (unit-resolution (lemma (unit-resolution @x377 @x581 @x669 false) (or $x448 $x617)) @x656 $x448)))
 (let ((@x234 ((_ th-lemma arith triangle-eq) (or (= 0.0 ?x610) $x654 $x414))))
 (let ((@x340 (unit-resolution @x234 @x394 @x183 $x414)))
 (let ((@x417 (unit-resolution ((_ th-lemma arith) (or (not $x172) $x633 $x478 $x617)) @x656 (hypothesis $x414) @x768 @x457 false)))
 (let ((@x494 (unit-resolution @x537 (unit-resolution (lemma @x417 (or $x478 $x617 $x633)) @x340 @x656 $x633) $x678)))
 (let ((@x216 (unit-resolution ((_ th-lemma arith) (or (not $x573) $x672 $x478 $x617)) @x656 @x340 @x314 (unit-resolution @x282 (unit-resolution @x377 @x494 $x312) $x303) false)))
 (let (($x153 (= 0.0 ?x551)))
 (let (($x240 (not $x153)))
 (let ((@x250 (monotonicity (symm (commutativity (= $x153 $x299)) (= $x299 $x153)) (= $x620 $x240))))
 (let ((@x222 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x153 $x342 $x458)) (mp @x206 @x250 $x240) (or $x342 $x458))))
 (let ((@x223 (unit-resolution @x222 (lemma @x216 $x617) $x342)))
 (let ((@x272 (unit-resolution ((_ th-lemma arith) (or (not $x172) $x633 $x448 $x160)) @x223 @x653 @x768 @x457 false)))
 (let ((@x559 (unit-resolution @x234 (unit-resolution (lemma @x272 (or $x448 $x633)) @x457 $x448) @x183 $x414)))
 (let ((@x560 (unit-resolution ((_ th-lemma arith) (or (not $x573) $x633 $x478 $x160)) @x223 @x559 @x314 @x457 false)))
 (let ((@x725 (unit-resolution @x377 (unit-resolution @x537 (lemma @x560 $x633) $x678) $x312)))
 (let ((@x751 (unit-resolution @x282 @x725 $x303)))
 (let ((@x189 (unit-resolution ((_ th-lemma arith) (or (not $x573) $x672 $x448 $x160)) @x223 @x653 @x314 @x751 false)))
 (unit-resolution ((_ th-lemma arith) (or (not $x172) $x672 $x478 $x160)) @x223 (unit-resolution @x234 (lemma @x189 $x448) @x183 $x414) @x768 @x751 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       45
 :arith-eq-adapter                58
 :arith-bound-propagations-cheap  91
 :arith-conflicts                 160
 :arith-diseq                     75
 :arith-fixed-eqs                 2
 :arith-grobner-calls             7
 :arith-grobner-conflicts         2
 :arith-horner-calls              7
 :arith-horner-cross-nested-forms 43
 :arith-lower                     135
 :arith-make-feasible             82
 :arith-max-columns               65
 :arith-max-rows                  11
 :arith-nla-explanations          15
 :arith-nla-lemmas                156
 :arith-propagations              91
 :arith-upper                     89
 :conflicts                       21
 :decisions                       237
 :del-clause                      171
 :final-checks                    54
 :max-memory                      3.72
 :memory                          1.16
 :mk-bool-var                     313
 :mk-clause                       289
 :num-allocs                      660464662
 :num-checks                      1
 :propagations                    258
 :rlimit-count                    9128
 :time                            1.11
 :total-time                      1.11)
