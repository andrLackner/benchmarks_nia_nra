unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x273 (* (- 1) k!2)))
 (let ((?x234 (+ (* 3 n!0) ?x273 (* 3 (* n!0 n!0)))))
 (let (($x687 (<= ?x234 (- 1))))
 (let (($x971 (= ?x234 (- 1))))
 (let ((?x649 (+ k!2 c!3)))
 (let ((?x304 (+ m!1 k!2)))
 (let ((?x618 (+ 6 m!1)))
 (let ((?x506 (+ 1 n!0)))
 (let ((?x964 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x913 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x910 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x831 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x794 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x746 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x699 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x661 (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649)))
 (let ((?x657 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x656 (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649)))
 (let ((?x586 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x576 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x535 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x528 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x499 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x480 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x474 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x320 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x317 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x310 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649)))
 (let ((?x305 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x274 (* (- 4) (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649))))
 (let ((?x259 (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x245 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x304 ?x304 ?x304 ?x304 ?x649 ?x649 ?x649 ?x649)))
 (let ((?x447 (+ (* 9 ?x245) (* 18 ?x259) ?x274 (* (- 18) ?x305) (* (- 9) ?x310) (* (- 5) ?x317) (* (- 4) ?x320) (* (- 9) ?x474) (* (- 18) ?x480) (* 9 ?x499) (* (- 1) ?x528) (* 9 ?x535) ?x576 (* 4 ?x586) (* 5 ?x656) ?x657 (* (- 1) ?x661) (* 18 ?x699) (* (- 9) ?x746) (* (- 5) ?x794) (* (- 9) ?x831) (* 9 ?x910) (* 4 ?x913) (* 5 ?x964))))
 (let (($x182 (= ?x447 0)))
 (let (($x747 (not $x182)))
 (let ((?x717 (+ (* 2 n!0) ?x273 (* n!0 k!2) (* (- 3) c!3))))
 (let (($x766 (= ?x717 (- 1))))
 (let ((?x691 (* 18 c!3)))
 (let ((?x252 (* 5 k!2)))
 (let ((?x422 (* (- 1) (* k!2 k!2))))
 (let ((?x568 (* (- 9) n!0)))
 (let ((?x532 (+ (* 9 (* n!0 c!3)) ?x568 ?x422 ?x252 ?x691)))
 (let (($x690 (= ?x532 4)))
 (let ((?x620 (+ m!1 (* (- 6) n!0))))
 (let (($x465 (= ?x620 6)))
 (let (($x481 (and $x465 $x690 $x766 $x971 $x747)))
 (let ((?x191 (+ c!3 k!2)))
 (let ((?x295 (+ k!2 m!1)))
 (let ((?x577 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x722 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x580 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x707 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x955 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x432 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x520 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x382 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x196 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x876 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x639 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x195 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x445 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x464 (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191)))
 (let ((?x479 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x466 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x589 (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x513 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x279 (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191)))
 (let ((?x159 (* ?x506 ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x949 (* ?x506 ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x292 (* 4 (* ?x506 ?x506 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191))))
 (let ((?x294 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191 ?x191 ?x191)))
 (let ((?x733 (* ?x506 ?x506 ?x506 ?x618 ?x618 ?x618 ?x295 ?x295 ?x295 ?x295 ?x191 ?x191 ?x191)))
 (let ((?x174 (+ (* 9 ?x733) (* (- 1) ?x294) ?x292 (* (- 18) ?x949) (* (- 9) ?x159) ?x279 (* 5 ?x513) (* (- 18) ?x589) (* (- 9) ?x466) (* (- 4) ?x479) (* (- 5) ?x464) (* 5 ?x445) (* 18 ?x195) (* 9 ?x639) (* 4 ?x876) (* 9 ?x196) (* 18 ?x382) ?x520 (* (- 9) ?x432) (* (- 5) ?x955) (* 9 ?x707) (* (- 4) ?x580) (* (- 9) ?x722) (* (- 1) ?x577))))
 (let (($x738 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let (($x942 (and $x465 (= (+ ?x691 ?x252 ?x568 ?x422 (* 9 (* c!3 n!0))) 4) $x738 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x174 0)))))
 (let (($x181 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x560 (* (- 1) ?x958)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x487 (* (- 9) ?x933)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x615 (* (- 4) ?x925)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* 9 ?x869)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* (- 5) ?x780)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x511 (* (- 9) ?x772)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* 18 ?x648)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x562 (* 9 ?x640)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x525 (* 4 ?x627)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x959 (* 9 ?x581)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x884 (* 18 ?x551)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x606 (* 5 ?x548)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x966 (* (- 5) ?x413)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x617 (* (- 4) ?x364)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x204 (* (- 9) ?x330)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x219 (* (- 18) ?x318)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x218 (* 5 ?x307)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x220 (* (- 9) ?x264)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x221 (* (- 18) ?x255)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x758 (* 4 ?x206)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x169)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x131 (* 9 ?x146)))
 (let ((?x515 (+ ?x131 ?x563 ?x758 ?x221 ?x220 ?x268 ?x218 ?x219 ?x204 ?x617 ?x966 ?x606 ?x884 ?x959 ?x525 ?x562 ?x547 ?x742 ?x511 ?x489 ?x342 ?x615 ?x487 ?x560)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 $x235 $x287 $x325 (not (= ?x515 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x795 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x617 (* (- 4) ?x364)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* (- 5) ?x780)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x511 (* (- 9) ?x772)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x606 (* 5 ?x548)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x615 (* (- 4) ?x925)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x487 (* (- 9) ?x933)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x525 (* 4 ?x627)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x562 (* 9 ?x640)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* 9 ?x869)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x560 (* (- 1) ?x958)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x884 (* 18 ?x551)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x966 (* (- 5) ?x413)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* 18 ?x648)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x131 (* 9 ?x146)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x758 (* 4 ?x206)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x169)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x959 (* 9 ?x581)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x220 (* (- 9) ?x264)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x221 (* (- 18) ?x255)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x204 (* (- 9) ?x330)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x219 (* (- 18) ?x318)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x218 (* 5 ?x307)))
 (let ((?x424 (+ ?x218 ?x219 ?x204 ?x221 ?x220 ?x268 ?x959 ?x563 ?x758 ?x131 ?x547 ?x742 ?x966 ?x884 ?x560 ?x342 ?x562 ?x525 ?x487 ?x615 ?x606 ?x511 ?x489 ?x617)))
 (let (($x172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x956 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x956 $x172 (not (= ?x424 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x570 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x560 (* (- 1) ?x958)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x487 (* (- 9) ?x933)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x615 (* (- 4) ?x925)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* 9 ?x869)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* (- 5) ?x780)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x511 (* (- 9) ?x772)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* 18 ?x648)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x562 (* 9 ?x640)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x525 (* 4 ?x627)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x959 (* 9 ?x581)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x884 (* 18 ?x551)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x606 (* 5 ?x548)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x966 (* (- 5) ?x413)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x617 (* (- 4) ?x364)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x204 (* (- 9) ?x330)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x219 (* (- 18) ?x318)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x218 (* 5 ?x307)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x220 (* (- 9) ?x264)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x221 (* (- 18) ?x255)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x758 (* 4 ?x206)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x169)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x131 (* 9 ?x146)))
 (let ((?x515 (+ ?x131 ?x563 ?x758 ?x221 ?x220 ?x268 ?x218 ?x219 ?x204 ?x617 ?x966 ?x606 ?x884 ?x959 ?x525 ?x562 ?x547 ?x742 ?x511 ?x489 ?x342 ?x615 ?x487 ?x560)))
 (let (($x325 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x287 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x235 (= (+ ?x40 ?x44 ?x237 ?x238 (* 9 (* c n))) 4)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x139 (and $x151 $x235 $x287 $x325 (not (= ?x515 0)))))
 (let ((?x424 (+ ?x218 ?x219 ?x204 ?x221 ?x220 ?x268 ?x959 ?x563 ?x758 ?x131 ?x547 ?x742 ?x966 ?x884 ?x560 ?x342 ?x562 ?x525 ?x487 ?x615 ?x606 ?x511 ?x489 ?x617)))
 (let (($x172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x956 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x797 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x956 $x172 (not (= ?x424 0)))))
 (rewrite (= $x797 $x139))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x278 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x781 (+ (* (- 5) ?x307) (* 18 ?x318) (* 9 ?x330) (* 18 ?x255) (* 9 ?x264) (* (- 1) ?x268) (* (- 9) ?x581) ?x169 (* (- 4) ?x206) (* (- 9) ?x146) (* (- 18) ?x648) (* (- 1) ?x742) (* 5 ?x413) (* (- 18) ?x551) ?x958 (* (- 9) ?x869) (* (- 9) ?x640) (* (- 4) ?x627) (* 9 ?x933) (* 4 ?x925) (* (- 5) ?x548) (* 9 ?x772) (* 5 ?x780) (* 4 ?x364))))
 (let (($x172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x793 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x484 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (and $x151 (= ?x484 (- 4)) $x793 $x172 (not (= ?x781 0)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x298 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x617 (* (- 4) ?x364)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x489 (* (- 5) ?x780)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x511 (* (- 9) ?x772)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x606 (* 5 ?x548)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x615 (* (- 4) ?x925)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x487 (* (- 9) ?x933)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x525 (* 4 ?x627)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x562 (* 9 ?x640)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x342 (* 9 ?x869)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x560 (* (- 1) ?x958)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x884 (* 18 ?x551)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x966 (* (- 5) ?x413)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x547 (* 18 ?x648)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x131 (* 9 ?x146)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x758 (* 4 ?x206)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x563 (* (- 1) ?x169)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x959 (* 9 ?x581)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x220 (* (- 9) ?x264)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x221 (* (- 18) ?x255)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x204 (* (- 9) ?x330)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x219 (* (- 18) ?x318)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x218 (* 5 ?x307)))
 (let ((?x424 (+ ?x218 ?x219 ?x204 ?x221 ?x220 ?x268 ?x959 ?x563 ?x758 ?x131 ?x547 ?x742 ?x966 ?x884 ?x560 ?x342 ?x562 ?x525 ?x487 ?x615 ?x606 ?x511 ?x489 ?x617)))
 (let (($x172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x956 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x238 (* (- 1) ?x49)))
 (let ((?x237 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x797 (and $x151 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x237 ?x238) 4) $x956 $x172 (not (= ?x424 0)))))
 (let ((?x781 (+ (* (- 5) ?x307) (* 18 ?x318) (* 9 ?x330) (* 18 ?x255) (* 9 ?x264) (* (- 1) ?x268) (* (- 9) ?x581) ?x169 (* (- 4) ?x206) (* (- 9) ?x146) (* (- 18) ?x648) (* (- 1) ?x742) (* 5 ?x413) (* (- 18) ?x551) ?x958 (* (- 9) ?x869) (* (- 9) ?x640) (* (- 4) ?x627) (* 9 ?x933) (* 4 ?x925) (* (- 5) ?x548) (* 9 ?x772) (* 5 ?x780) (* 4 ?x364))))
 (let (($x793 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x484 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x253 (and $x151 (= ?x484 (- 4)) $x793 $x172 (not (= ?x781 0)))))
 (rewrite (= $x253 $x797))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x118 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x112 (* 4 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x106 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x105 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x95 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x88 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x77 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (- (- (+ (- (- (+ ?x73 ?x74 ?x75 ?x76 ?x77) ?x79) ?x80) ?x83) ?x85) ?x86)))
 (let ((?x103 (- (- (+ (- (+ (- (- ?x90 ?x87) ?x88) ?x93) ?x95) ?x97) ?x99) ?x100)))
 (let (($x115 (not (= (+ (- (+ (- ?x103 ?x101) ?x105 ?x106) ?x108) ?x110 ?x111 ?x112) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x115)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x263 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x335 (+ 6 m)))
 (let ((?x338 (+ 1 n)))
 (let ((?x364 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x780 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x772 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x548 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x925 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x933 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x627 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x640 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x869 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x958 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x551 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x413 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x742 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x648 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x146 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x169 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x581 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x268 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x264 (* ?x338 ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x255 (* ?x338 ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x330 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x318 (* ?x338 ?x338 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x307 (* ?x338 ?x338 ?x338 ?x335 ?x335 ?x335 ?x335 ?x335 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x781 (+ (* (- 5) ?x307) (* 18 ?x318) (* 9 ?x330) (* 18 ?x255) (* 9 ?x264) (* (- 1) ?x268) (* (- 9) ?x581) ?x169 (* (- 4) ?x206) (* (- 9) ?x146) (* (- 18) ?x648) (* (- 1) ?x742) (* 5 ?x413) (* (- 18) ?x551) ?x958 (* (- 9) ?x869) (* (- 9) ?x640) (* (- 4) ?x627) (* 9 ?x933) (* 4 ?x925) (* (- 5) ?x548) (* 9 ?x772) (* 5 ?x780) (* 4 ?x364))))
 (let (($x172 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x793 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x484 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x151 (= (+ m (* (- 6) n)) 6)))
 (let (($x253 (and $x151 (= ?x484 (- 4)) $x793 $x172 (not (= ?x781 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x112 (* 4 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x110 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x108 (* 5 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x106 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x105 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x101 (* 4 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x100 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x99 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x95 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x93 (* 5 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x88 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x86 (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x80 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x79 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x77 (* 9 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* 18 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x74 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x90 (- (- (+ (- (- (+ ?x73 ?x74 ?x75 ?x76 ?x77) ?x79) ?x80) ?x83) ?x85) ?x86)))
 (let ((?x103 (- (- (+ (- (+ (- (- ?x90 ?x87) ?x88) ?x93) ?x95) ?x97) ?x99) ?x100)))
 (let (($x115 (not (= (+ (- (+ (- ?x103 ?x101) ?x105 ?x106) ?x108) ?x110 ?x111 ?x112) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x117 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x115))))
 (rewrite (= $x117 $x253))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x119 (asserted $x118)))
 (let ((@x437 (mp (mp @x119 (quant-intro (proof-bind ?x263) (= $x118 $x278)) $x278) (rewrite (= $x278 $x278)) $x278)))
 (let ((@x912 (mp (mp @x437 (quant-intro (proof-bind ?x298) (= $x278 $x795)) $x795) (quant-intro (proof-bind ?x570) (= $x795 $x181)) $x181)))
 (let ((@x385 (mp (mp~ @x912 (sk (~ $x181 $x942)) $x942) (rewrite (= $x942 $x481)) $x481)))
 (let ((@x954 (and-elim @x385 $x971)))
 (let ((@x743 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x971) $x687)) @x954 $x687)))
 (let (($x868 (>= ?x234 (- 1))))
 (let ((@x741 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x971) $x868)) @x954 $x868)))
 (let (($x712 (<= ?x620 6)))
 (let ((@x594 (and-elim @x385 $x465)))
 (let ((@x601 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x465) $x712)) @x594 $x712)))
 (let (($x555 (>= ?x620 6)))
 (let ((@x943 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x465) $x555)) @x594 $x555)))
 (let (($x152 (<= ?x717 (- 1))))
 (let ((@x240 (and-elim @x385 $x766)))
 (let ((@x1050 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x766) $x152)) @x240 $x152)))
 (let (($x316 (>= ?x717 (- 1))))
 (let ((@x209 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x766) $x316)) @x240 $x316)))
 (let (($x724 (<= ?x532 4)))
 (let ((@x963 (and-elim @x385 $x690)))
 (let ((@x454 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x690) $x724)) @x963 $x724)))
 (let (($x129 (>= ?x532 4)))
 (let ((@x655 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x690) $x129)) @x963 $x129)))
 (let (($x332 (not (<= ?x447 0))))
 (let (($x205 (>= ?x447 0)))
 (let ((@x514 ((_ th-lemma arith) (hypothesis (not $x205)) @x943 @x601 @x741 @x743 @x741 @x743 @x655 @x454 @x741 @x743 @x209 @x1050 @x741 @x743 @x943 @x601 @x741 @x743 false)))
 (let ((@x531 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x182 $x332 (not $x205))) (and-elim @x385 $x747) (or $x332 (not $x205)))))
 ((_ th-lemma arith) (unit-resolution @x531 (lemma @x514 $x205) $x332) @x943 @x601 @x741 @x743 @x741 @x743 @x655 @x454 @x741 @x743 @x209 @x1050 @x741 @x743 @x943 @x601 @x741 @x743 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             343
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 56
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.39
 :memory                    3.41
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                76667757
 :num-checks                1
 :propagations              11
 :rlimit-count              192163
 :time                      0.19
 :total-time                0.20)
