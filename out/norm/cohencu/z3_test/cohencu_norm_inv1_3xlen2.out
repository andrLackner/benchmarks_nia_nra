unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun y!2 () Int)
(proof
(let ((?x423 (* (- 6) n00)))
 (let ((?x653 (+ z00 ?x423 (* (- 1) z!1) (* 6 n!0))))
 (let (($x562 (<= ?x653 0)))
 (let (($x1246 (= ?x653 0)))
 (let ((?x1097 (+ y!2 x!3)))
 (let ((?x1738 (+ z!1 y!2)))
 (let ((?x543 (+ 6 z!1)))
 (let ((?x941 (+ 1 n!0)))
 (let ((?x1909 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x1898 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x1740 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x1459 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x1439 (* ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x1427 (* n00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x1333 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x1303 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x1227 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x1188 (* ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x1137 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x1095 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x1077 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x998 (* ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x996 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x945 (* z00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x930 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x900 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x899 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x898 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x895 (* z00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x737 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x709 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x707 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x702 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x635 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x561 (* ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x468 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097)))
 (let ((?x452 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x445 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097)))
 (let ((?x348 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097 ?x1097 ?x1097 ?x1097)))
 (let ((?x344 (* n00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1738 ?x1097)))
 (let ((?x1542 (+ (* 6 ?x344) (* 6 ?x348) (* (- 6) ?x445) ?x452 (* 6 ?x468) ?x561 (* (- 1) ?x635) (* (- 1) ?x702) (* 6 ?x707) (* 6 ?x709) ?x737 (* (- 1) ?x895) (* (- 6) ?x898) (* (- 1) ?x899) (* (- 1) ?x900) (* (- 6) ?x930) (* (- 1) ?x945) (* (- 6) ?x996) (* (- 6) ?x998) (* 6 ?x1077) (* (- 6) ?x1095) ?x1137 (* (- 6) ?x1188) (* (- 1) ?x1227) (* 6 ?x1303) (* (- 1) ?x1333) (* 6 ?x1427) ?x1439 ?x1459 ?x1740 ?x1898 (* (- 6) ?x1909))))
 (let (($x756 (= ?x1542 0)))
 (let (($x326 (not $x756)))
 (let ((?x1259 (* 108 (* x00 x00))))
 (let ((?x1156 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1152 (* z00 z00 z00 y00)))
 (let ((?x1068 (* (- 4) (* y!2 y!2 y!2))))
 (let ((?x1062 (* (- 36) (* z00 y00 x00))))
 (let ((?x947 (* 16 (* y00 y00 y00))))
 (let ((?x861 (* z00 z00 x00)))
 (let ((?x1112 (* (- 18) ?x861)))
 (let ((?x733 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x675 (* z00 z00 y00)))
 (let ((?x1213 (* (- 10) ?x675)))
 (let ((?x650 (* z00 y00 y00)))
 (let ((?x685 (* (- 12) ?x650)))
 (let ((?x541 (* y00 y00)))
 (let ((?x1012 (* 96 ?x541)))
 (let ((?x511 (* z00 x00)))
 (let ((?x429 (* 36 ?x511)))
 (let ((?x474 (* z00 y00)))
 (let ((?x839 (* 24 ?x474)))
 (let ((?x421 (* y00 x00)))
 (let ((?x412 (* 216 ?x421)))
 (let ((?x830 (* 108 (* x!3 x!3))))
 (let ((?x283 (* y!2 y!2)))
 (let ((?x1078 (* 24 ?x283)))
 (let ((?x345 (+ ?x1078 (* (- 24) (* z00 y!2)) ?x830 (* 10 (* z00 z00 y!2)) (* (- 216) (* x00 x!3)) ?x412 ?x839 ?x429 ?x1012 (* 36 (* z00 y00 x!3)) (* (- 120) (* y00 y!2)) (* z00 z00 y!2 y!2) (* 18 (* z00 y00 y!2)) ?x685 ?x1213 ?x733 (* (- 12) (* y00 y!2 y!2)) ?x1112 (* 108 (* y!2 x!3)) (* (- 6) (* z00 y!2 y!2)) (* 18 (* z00 z00 x!3)) (* (- 2) (* z00 z00 z00 x!3)) (* (- 1) (* z00 z00 z00 y!2)) ?x947 (* (- 108) (* x00 y!2)) (* (- 36) (* z00 x!3)) ?x1062 ?x1068 ?x1152 ?x1156 ?x1259 (* (- 216) (* y00 x!3)))))
 (let ((?x296 (* (- 108) x!3)))
 (let ((?x297 (* (- 72) y!2)))
 (let ((?x881 (* (- 18) (* x00 z!1))))
 (let ((?x790 (* y00 z!1)))
 (let ((?x768 (* (- 12) ?x790)))
 (let ((?x745 (* z!1 y!2)))
 (let ((?x1091 (* 12 ?x745)))
 (let ((?x642 (* z00 y00 y!2)))
 (let ((?x590 (* 6 ?x474)))
 (let ((?x1088 (* 18 (* z!1 x!3))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1678 (+ ?x67 ?x74 (* (- 6) (* z00 y!2)) (* 3 (* z00 z!1 x!3)) ?x1088 (* 3 (* z00 z00 y!2)) (* 18 ?x421) ?x590 (* 36 ?x541) (* (- 36) (* y00 y!2)) (* 2 (* y00 y00 z!1)) ?x642 ?x650 (* (- 3) ?x675) ?x1091 ?x768 (* (- 1) (* y00 z!1 y!2)) (* (- 3) ?x861) (* 18 (* y!2 x!3)) (* (- 2) (* z00 y!2 y!2)) (* 3 (* z00 z00 x!3)) (* (- 1) (* z!1 y!2 y!2)) (* (- 18) (* x00 y!2)) ?x881 ?x297 (* (- 18) (* y00 x!3)) (* (- 3) (* z00 x00 z!1)) ?x296)))
 (let ((?x749 (* (- 6) ?x474)))
 (let ((?x397 (* z00 z00 y!2)))
 (let ((?x885 (+ ?x67 ?x74 (* (- 12) ?x283) (* 6 (* z00 y!2)) ?x1088 ?x397 (* (- 1) (* z00 z!1 y!2)) ?x749 (* (- 18) ?x511) (* 24 ?x541) (* (- 12) (* y00 y!2)) (* (- 1) ?x675) ?x1091 ?x768 (* z00 y00 z!1) ?x881 (* 18 (* z00 x!3)) ?x297 ?x296)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x294 (+ ?x67 ?x55 ?x74 (* (- 6) (* z00 z00)) (* (- 18) ?x474) (* 6 (* z00 z!1)) (* 6 ?x745) (* 12 ?x790) ?x297 ?x296 (* (- 1) (* z00 z00 z!1)))))
 (let ((?x1032 (* z!1 z!1)))
 (let ((?x333 (* z00 z00)))
 (let ((?x363 (* (- 1) ?x333)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let (($x1908 (and $x1246 (= (+ ?x49 ?x43 ?x363 ?x1032 (* (- 6) z!1) (* (- 12) y!2)) 0) (= ?x294 0) (= ?x885 0) (= ?x1678 0) (= ?x345 0) $x326)))
 (let ((?x521 (+ x!3 y!2)))
 (let ((?x539 (+ y!2 z!1)))
 (let ((?x1703 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x988 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x335 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x338 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x339 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x341 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x1432 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x1233 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x1240 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x1147 (* ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x1148 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x696 (* z00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x554 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x797 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x559 (* ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x732 (* ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x481 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x1145 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x558 (* z00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x367 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x1341 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x1492 (* n00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x1047 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521)))
 (let ((?x1802 (* n00 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x379 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521)))
 (let ((?x1509 (* ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x458 (* n00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x670 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x1013 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x668 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x1805 (* z00 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x543 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521)))
 (let ((?x1813 (* ?x941 ?x941 ?x941 ?x941 ?x941 ?x941 ?x543 ?x543 ?x539 ?x539 ?x539 ?x539 ?x539 ?x521 ?x521 ?x521 ?x521)))
 (let ((?x1673 (+ (* 6 ?x1813) (* (- 1) ?x1805) (* (- 1) ?x668) ?x1013 (* (- 6) ?x670) (* 6 ?x458) (* 6 ?x1509) (* (- 6) ?x379) (* (- 6) ?x1802) (* 6 ?x1047) (* (- 6) ?x1492) (* (- 6) ?x1341) (* 6 ?x367) ?x558 (* (- 6) ?x1145) ?x481 (* (- 1) ?x732) (* (- 1) ?x559) ?x797 (* (- 1) ?x554) ?x696 ?x1148 (* 6 ?x1147) ?x1240 (* (- 1) ?x1233) (* (- 1) ?x1432) (* 6 ?x341) (* (- 6) ?x339) (* (- 6) ?x338) (* (- 1) ?x335) ?x988 (* 6 ?x1703))))
 (let ((?x439 (+ (* 10 (* y!2 z00 z00)) (* y!2 y!2 z00 z00) (* (- 1) (* y!2 z00 z00 z00)) ?x412 (* (- 2) (* x!3 z00 z00 z00)) (* 108 (* x!3 y!2)) ?x839 ?x429 ?x1078 ?x1012 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x685 ?x1213 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x733 ?x830 ?x1068 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1112 (* (- 216) (* x!3 y00)) ?x947 (* (- 12) (* y!2 y!2 y00)) ?x1062 (* (- 216) (* x!3 x00)) ?x1152 ?x1156 (* 36 (* x!3 z00 y00)) ?x1259)))
 (let ((?x862 (* 3 ?x861)))
 (let ((?x924 (* 3 ?x675)))
 (let ((?x657 (* (- 1) ?x650)))
 (let ((?x1500 (* 18 (* z!1 x00))))
 (let ((?x844 (* (- 36) ?x541)))
 (let ((?x284 (* z!1 y00)))
 (let ((?x1498 (* 12 ?x284)))
 (let ((?x1497 (* (- 18) (* x!3 z!1))))
 (let ((?x422 (* (- 18) ?x421)))
 (let ((?x886 (* y!2 z!1)))
 (let ((?x1069 (* (- 12) ?x886)))
 (let ((?x553 (* (- 108) x00)))
 (let ((?x496 (* (- 72) y00)))
 (let ((?x1245 (* 72 y!2)))
 (let ((?x1243 (* 108 x!3)))
 (let ((?x1408 (+ ?x1243 ?x1245 ?x496 ?x553 (* (- 3) (* y!2 z00 z00)) (* y!2 y!2 z!1) ?x1069 ?x422 (* (- 18) (* x!3 y!2)) ?x1497 ?x1498 ?x749 ?x844 ?x1500 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x657 ?x924 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x862 (* 18 (* x!3 y00)) (* y!2 z!1 y00) (* (- 2) (* z!1 y00 y00)))))
 (let ((?x570 (* (- 24) ?x541)))
 (let ((?x512 (* 18 ?x511)))
 (let ((?x396 (+ ?x1243 ?x1245 ?x496 ?x553 (* y!2 z!1 z00) (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x1069 ?x1497 ?x1498 ?x590 ?x512 (* 12 ?x283) ?x570 ?x1500 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x675 (* (- 18) (* x!3 z00)))))
 (let ((?x475 (* 18 ?x474)))
 (let ((?x437 (* 6 ?x333)))
 (let ((?x426 (* (- 1) ?x55)))
 (let ((?x328 (+ ?x1243 ?x1245 ?x496 ?x426 ?x553 (* z!1 z00 z00) ?x437 (* (- 6) ?x886) (* (- 12) ?x284) ?x475 (* (- 6) (* z!1 z00)))))
 (let ((?x404 (* (- 12) y00)))
 (let ((?x403 (* (- 6) z00)))
 (let (($x1587 (= (+ (* 12 y!2) (* 6 z!1) ?x403 ?x404 (* (- 1) ?x1032) ?x333) 0)))
 (let (($x1329 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x1587 (= ?x328 0) (= ?x396 0) (= ?x1408 0) (= ?x439 0) (not (= ?x1673 0)))))
 (let (($x424 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x428 (+ 6 z)))
 (let ((?x442 (+ 1 n)))
 (let ((?x1920 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1875 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1833 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1825 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1795 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1750 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1726 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1704 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1682 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1667 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1517 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1516 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1477 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1405 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1328 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1323 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1317 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1272 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1208 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1206 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1198 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1132 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1020 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x962 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x651 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x649 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x628 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x456 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x436 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x366 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x302 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (+ (* 6 ?x302) (* (- 1) ?x366) (* (- 1) ?x436) ?x456 (* (- 6) ?x628) (* 6 ?x649) (* 6 ?x651) (* (- 6) ?x962) (* (- 6) ?x1020) (* 6 ?x1132) (* (- 6) ?x1198) (* (- 6) ?x1206) (* 6 ?x1208) ?x1272 (* (- 6) ?x1317) ?x1323 (* (- 1) ?x1328) (* (- 1) ?x1405) ?x1477 (* (- 1) ?x1516) ?x1517 ?x1667 (* 6 ?x1682) ?x1704 (* (- 1) ?x1726) (* (- 1) ?x1750) (* 6 ?x1795) (* (- 6) ?x1825) (* (- 6) ?x1833) (* (- 1) ?x1875) ?x1889 (* 6 ?x1920))))
 (let ((?x1259 (* 108 (* x00 x00))))
 (let ((?x1156 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1152 (* z00 z00 z00 y00)))
 (let ((?x1062 (* (- 36) (* z00 y00 x00))))
 (let ((?x947 (* 16 (* y00 y00 y00))))
 (let ((?x861 (* z00 z00 x00)))
 (let ((?x1112 (* (- 18) ?x861)))
 (let ((?x817 (* (- 4) (* y y y))))
 (let ((?x765 (* 108 (* x x))))
 (let ((?x733 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x675 (* z00 z00 y00)))
 (let ((?x1213 (* (- 10) ?x675)))
 (let ((?x650 (* z00 y00 y00)))
 (let ((?x685 (* (- 12) ?x650)))
 (let ((?x541 (* y00 y00)))
 (let ((?x1012 (* 96 ?x541)))
 (let ((?x515 (* y y)))
 (let ((?x760 (* 24 ?x515)))
 (let ((?x511 (* z00 x00)))
 (let ((?x429 (* 36 ?x511)))
 (let ((?x474 (* z00 y00)))
 (let ((?x839 (* 24 ?x474)))
 (let ((?x421 (* y00 x00)))
 (let ((?x412 (* 216 ?x421)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1279 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x412 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x839 ?x429 ?x760 ?x1012 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x685 ?x1213 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x733 ?x765 ?x817 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1112 (* (- 216) (* x y00)) ?x947 (* (- 12) (* y y y00)) ?x1062 (* (- 216) (* x x00)) ?x1152 ?x1156 (* 36 (* x z00 y00)) ?x1259)))
 (let (($x1284 (= ?x1279 0)))
 (let ((?x862 (* 3 ?x861)))
 (let ((?x924 (* 3 ?x675)))
 (let ((?x657 (* (- 1) ?x650)))
 (let ((?x587 (* 18 (* z x00))))
 (let ((?x844 (* (- 36) ?x541)))
 (let ((?x749 (* (- 6) ?x474)))
 (let ((?x448 (* z y00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x482 (* (- 18) (* x z))))
 (let ((?x422 (* (- 18) ?x421)))
 (let ((?x417 (* y z)))
 (let ((?x441 (* (- 12) ?x417)))
 (let ((?x135 (* y y z)))
 (let ((?x553 (* (- 108) x00)))
 (let ((?x496 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x980 (+ ?x64 ?x71 ?x496 ?x553 (* (- 3) (* y z00 z00)) ?x135 ?x441 ?x422 (* (- 18) (* x y)) ?x482 ?x449 ?x749 ?x844 ?x587 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x657 ?x924 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x862 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x987 (= ?x980 0)))
 (let ((?x570 (* (- 24) ?x541)))
 (let ((?x518 (* 12 ?x515)))
 (let ((?x512 (* 18 ?x511)))
 (let ((?x590 (* 6 ?x474)))
 (let ((?x103 (* y z z00)))
 (let ((?x729 (+ ?x64 ?x71 ?x496 ?x553 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x441 ?x482 ?x449 ?x590 ?x512 ?x518 ?x570 ?x587 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x675 (* (- 18) (* x z00)))))
 (let (($x734 (= ?x729 0)))
 (let ((?x475 (* 18 ?x474)))
 (let ((?x333 (* z00 z00)))
 (let ((?x437 (* 6 ?x333)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x426 (* (- 1) ?x55)))
 (let ((?x569 (+ ?x64 ?x71 ?x496 ?x426 ?x553 ?x76 ?x437 (* (- 6) ?x417) (* (- 12) ?x448) ?x475 (* (- 6) (* z z00)))))
 (let (($x574 (= ?x569 0)))
 (let ((?x404 (* (- 12) y00)))
 (let ((?x403 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x407 (= (+ ?x45 ?x46 ?x403 ?x404 (* (- 1) (* z z)) ?x333) 0)))
 (let (($x325 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x325 $x407 $x574 $x734 $x987 $x1284 (not (= ?x1537 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x374 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x428 (+ 6 z)))
 (let ((?x442 (+ 1 n)))
 (let ((?x1833 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1825 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1795 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1405 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1198 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1272 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1517 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1317 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1328 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1020 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x651 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1726 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1920 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1875 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1667 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1682 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1704 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1750 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1477 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1516 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1323 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x302 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1208 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x366 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1206 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x962 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x456 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x649 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x628 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1132 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x436 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1848 (+ ?x436 (* (- 6) ?x1132) (* 6 ?x628) (* (- 6) ?x649) (* (- 1) ?x456) (* 6 ?x962) (* 6 ?x1206) ?x366 (* (- 6) ?x1208) (* (- 6) ?x302) (* (- 1) ?x1323) ?x1516 (* (- 1) ?x1477) ?x1750 (* (- 1) ?x1704) (* (- 6) ?x1682) (* (- 1) ?x1667) ?x1875 (* (- 6) ?x1920) (* (- 1) ?x1889) ?x1726 (* (- 6) ?x651) (* 6 ?x1020) ?x1328 (* 6 ?x1317) (* (- 1) ?x1517) (* (- 1) ?x1272) (* 6 ?x1198) ?x1405 (* (- 6) ?x1795) (* 6 ?x1825) (* 6 ?x1833))))
 (let ((?x1259 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x541 (* y00 y00)))
 (let ((?x1012 (* 96 ?x541)))
 (let ((?x947 (* 16 (* y00 y00 y00))))
 (let ((?x817 (* (- 4) (* y y y))))
 (let ((?x765 (* 108 (* x x))))
 (let ((?x515 (* y y)))
 (let ((?x760 (* 24 ?x515)))
 (let ((?x1316 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x760 ?x765 ?x817 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x947 (* (- 6) (* z00 y y)) ?x1012 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1259 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x553 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x496 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1118 (* 18 (* x00 z))))
 (let ((?x844 (* (- 36) ?x541)))
 (let ((?x387 (* z y)))
 (let ((?x433 (* (- 12) ?x387)))
 (let ((?x534 (* y00 z)))
 (let ((?x440 (* 12 ?x534)))
 (let ((?x1059 (* (- 18) (* z x))))
 (let ((?x1220 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1059 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x440 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x433 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x844 ?x1118 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x496 (* 18 (* y00 x)) ?x71 ?x553 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x570 (* (- 24) ?x541)))
 (let ((?x518 (* 12 ?x515)))
 (let ((?x621 (+ (* (- 1) (* y00 z00 z)) ?x433 ?x1059 (* 18 (* x00 z00)) ?x518 ?x570 ?x1118 ?x440 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x496 (* (- 6) (* z00 y)) ?x71 ?x553 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x333 (* z00 z00)))
 (let ((?x437 (* 6 ?x333)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x426 (* (- 1) ?x55)))
 (let ((?x1543 (+ (* (- 6) ?x387) ?x426 ?x437 (* (- 12) ?x534) (* 18 (* y00 z00)) ?x64 ?x496 (* (- 6) (* z00 z)) ?x71 ?x553 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x363 (* (- 1) ?x333)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x363 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1543 0) (= ?x621 0) (= ?x1220 0) (= ?x1316 0) (not (= ?x1848 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x385 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x428 (+ 6 z)))
 (let ((?x442 (+ 1 n)))
 (let ((?x1920 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1875 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1833 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1825 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1795 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1750 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1726 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1704 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1682 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1667 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1517 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1516 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1477 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1405 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1328 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1323 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1317 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1272 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1208 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1206 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1198 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1132 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1020 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x962 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x651 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x649 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x628 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x456 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x436 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x366 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x302 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1537 (+ (* 6 ?x302) (* (- 1) ?x366) (* (- 1) ?x436) ?x456 (* (- 6) ?x628) (* 6 ?x649) (* 6 ?x651) (* (- 6) ?x962) (* (- 6) ?x1020) (* 6 ?x1132) (* (- 6) ?x1198) (* (- 6) ?x1206) (* 6 ?x1208) ?x1272 (* (- 6) ?x1317) ?x1323 (* (- 1) ?x1328) (* (- 1) ?x1405) ?x1477 (* (- 1) ?x1516) ?x1517 ?x1667 (* 6 ?x1682) ?x1704 (* (- 1) ?x1726) (* (- 1) ?x1750) (* 6 ?x1795) (* (- 6) ?x1825) (* (- 6) ?x1833) (* (- 1) ?x1875) ?x1889 (* 6 ?x1920))))
 (let ((?x1259 (* 108 (* x00 x00))))
 (let ((?x1156 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1152 (* z00 z00 z00 y00)))
 (let ((?x1062 (* (- 36) (* z00 y00 x00))))
 (let ((?x947 (* 16 (* y00 y00 y00))))
 (let ((?x861 (* z00 z00 x00)))
 (let ((?x1112 (* (- 18) ?x861)))
 (let ((?x817 (* (- 4) (* y y y))))
 (let ((?x765 (* 108 (* x x))))
 (let ((?x733 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x675 (* z00 z00 y00)))
 (let ((?x1213 (* (- 10) ?x675)))
 (let ((?x650 (* z00 y00 y00)))
 (let ((?x685 (* (- 12) ?x650)))
 (let ((?x541 (* y00 y00)))
 (let ((?x1012 (* 96 ?x541)))
 (let ((?x515 (* y y)))
 (let ((?x760 (* 24 ?x515)))
 (let ((?x511 (* z00 x00)))
 (let ((?x429 (* 36 ?x511)))
 (let ((?x474 (* z00 y00)))
 (let ((?x839 (* 24 ?x474)))
 (let ((?x421 (* y00 x00)))
 (let ((?x412 (* 216 ?x421)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1279 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x412 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x839 ?x429 ?x760 ?x1012 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x685 ?x1213 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x733 ?x765 ?x817 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1112 (* (- 216) (* x y00)) ?x947 (* (- 12) (* y y y00)) ?x1062 (* (- 216) (* x x00)) ?x1152 ?x1156 (* 36 (* x z00 y00)) ?x1259)))
 (let (($x1284 (= ?x1279 0)))
 (let ((?x862 (* 3 ?x861)))
 (let ((?x924 (* 3 ?x675)))
 (let ((?x657 (* (- 1) ?x650)))
 (let ((?x587 (* 18 (* z x00))))
 (let ((?x844 (* (- 36) ?x541)))
 (let ((?x749 (* (- 6) ?x474)))
 (let ((?x448 (* z y00)))
 (let ((?x449 (* 12 ?x448)))
 (let ((?x482 (* (- 18) (* x z))))
 (let ((?x422 (* (- 18) ?x421)))
 (let ((?x417 (* y z)))
 (let ((?x441 (* (- 12) ?x417)))
 (let ((?x135 (* y y z)))
 (let ((?x553 (* (- 108) x00)))
 (let ((?x496 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x980 (+ ?x64 ?x71 ?x496 ?x553 (* (- 3) (* y z00 z00)) ?x135 ?x441 ?x422 (* (- 18) (* x y)) ?x482 ?x449 ?x749 ?x844 ?x587 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x657 ?x924 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x862 (* 18 (* x y00)) (* y z y00) (* (- 2) (* z y00 y00)))))
 (let (($x987 (= ?x980 0)))
 (let ((?x570 (* (- 24) ?x541)))
 (let ((?x518 (* 12 ?x515)))
 (let ((?x512 (* 18 ?x511)))
 (let ((?x590 (* 6 ?x474)))
 (let ((?x103 (* y z z00)))
 (let ((?x729 (+ ?x64 ?x71 ?x496 ?x553 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x441 ?x482 ?x449 ?x590 ?x512 ?x518 ?x570 ?x587 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x675 (* (- 18) (* x z00)))))
 (let (($x734 (= ?x729 0)))
 (let ((?x475 (* 18 ?x474)))
 (let ((?x333 (* z00 z00)))
 (let ((?x437 (* 6 ?x333)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x426 (* (- 1) ?x55)))
 (let ((?x569 (+ ?x64 ?x71 ?x496 ?x426 ?x553 ?x76 ?x437 (* (- 6) ?x417) (* (- 12) ?x448) ?x475 (* (- 6) (* z z00)))))
 (let (($x574 (= ?x569 0)))
 (let ((?x404 (* (- 12) y00)))
 (let ((?x403 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x407 (= (+ ?x45 ?x46 ?x403 ?x404 (* (- 1) (* z z)) ?x333) 0)))
 (let (($x325 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x1149 (and $x325 $x407 $x574 $x734 $x987 $x1284 (not (= ?x1537 0)))))
 (let ((?x1848 (+ ?x436 (* (- 6) ?x1132) (* 6 ?x628) (* (- 6) ?x649) (* (- 1) ?x456) (* 6 ?x962) (* 6 ?x1206) ?x366 (* (- 6) ?x1208) (* (- 6) ?x302) (* (- 1) ?x1323) ?x1516 (* (- 1) ?x1477) ?x1750 (* (- 1) ?x1704) (* (- 6) ?x1682) (* (- 1) ?x1667) ?x1875 (* (- 6) ?x1920) (* (- 1) ?x1889) ?x1726 (* (- 6) ?x651) (* 6 ?x1020) ?x1328 (* 6 ?x1317) (* (- 1) ?x1517) (* (- 1) ?x1272) (* 6 ?x1198) ?x1405 (* (- 6) ?x1795) (* 6 ?x1825) (* 6 ?x1833))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1316 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x760 ?x765 ?x817 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x947 (* (- 6) (* z00 y y)) ?x1012 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1259 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x1118 (* 18 (* x00 z))))
 (let ((?x387 (* z y)))
 (let ((?x433 (* (- 12) ?x387)))
 (let ((?x534 (* y00 z)))
 (let ((?x440 (* 12 ?x534)))
 (let ((?x1059 (* (- 18) (* z x))))
 (let ((?x1220 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1059 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x440 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x433 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x844 ?x1118 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x496 (* 18 (* y00 x)) ?x71 ?x553 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x621 (+ (* (- 1) (* y00 z00 z)) ?x433 ?x1059 (* 18 (* x00 z00)) ?x518 ?x570 ?x1118 ?x440 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x496 (* (- 6) (* z00 y)) ?x71 ?x553 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x1543 (+ (* (- 6) ?x387) ?x426 ?x437 (* (- 12) ?x534) (* 18 (* y00 z00)) ?x64 ?x496 (* (- 6) (* z00 z)) ?x71 ?x553 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x363 (* (- 1) ?x333)))
 (let (($x711 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x363 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1543 0) (= ?x621 0) (= ?x1220 0) (= ?x1316 0) (not (= ?x1848 0)))))
 (rewrite (= $x711 $x1149))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x280 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x274 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x273 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x271 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x269 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x268 (* 6 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x265 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x264 (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x262 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x261 (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x260 (* 6 ?x215 ?x215 ?x215 n00 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x258 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x256 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x253 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x252 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x250 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x246 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x245 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x244 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x242 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x240 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x234 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x233 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x232 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x230 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x229 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x228 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x225 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x224 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x222 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x220 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x219 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x235 (- (+ (- (- (+ (- ?x219 ?x220) ?x222) ?x224) ?x225) ?x228 ?x229 ?x230) ?x232)))
 (let ((?x248 (- (- (+ (- (+ (- (- ?x235 ?x233) ?x234) ?x238) ?x240) ?x242) ?x244) ?x245)))
 (let ((?x263 (+ (- (+ (- (- (+ (- ?x248 ?x246) ?x250) ?x252) ?x253) ?x256) ?x258) ?x260 ?x261 ?x262)))
 (let (($x276 (= (+ (- (+ (- (- ?x263 ?x264) ?x265) ?x268 ?x269) ?x271) ?x273 ?x274) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* (- 1) z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x276))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x1025 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x428 (+ 6 z)))
 (let ((?x442 (+ 1 n)))
 (let ((?x1833 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1825 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1795 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1405 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1198 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1272 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1517 (* z00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1317 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1328 (* ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1020 (* n00 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x651 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1726 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1889 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1920 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1875 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1667 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1682 (* ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1704 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1750 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1477 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1516 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1323 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x302 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1208 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x366 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x1206 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x962 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x456 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x649 (* n00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216)))
 (let ((?x628 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1132 (* ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x436 (* z00 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x442 ?x428 ?x428 ?x428 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1848 (+ ?x436 (* (- 6) ?x1132) (* 6 ?x628) (* (- 6) ?x649) (* (- 1) ?x456) (* 6 ?x962) (* 6 ?x1206) ?x366 (* (- 6) ?x1208) (* (- 6) ?x302) (* (- 1) ?x1323) ?x1516 (* (- 1) ?x1477) ?x1750 (* (- 1) ?x1704) (* (- 6) ?x1682) (* (- 1) ?x1667) ?x1875 (* (- 6) ?x1920) (* (- 1) ?x1889) ?x1726 (* (- 6) ?x651) (* 6 ?x1020) ?x1328 (* 6 ?x1317) (* (- 1) ?x1517) (* (- 1) ?x1272) (* 6 ?x1198) ?x1405 (* (- 6) ?x1795) (* 6 ?x1825) (* 6 ?x1833))))
 (let ((?x1259 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x541 (* y00 y00)))
 (let ((?x1012 (* 96 ?x541)))
 (let ((?x947 (* 16 (* y00 y00 y00))))
 (let ((?x817 (* (- 4) (* y y y))))
 (let ((?x765 (* 108 (* x x))))
 (let ((?x515 (* y y)))
 (let ((?x760 (* 24 ?x515)))
 (let ((?x1316 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x760 ?x765 ?x817 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x947 (* (- 6) (* z00 y y)) ?x1012 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1259 (* (- 1) (* z00 z00 z00 y)))))
 (let ((?x553 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x496 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x1118 (* 18 (* x00 z))))
 (let ((?x844 (* (- 36) ?x541)))
 (let ((?x387 (* z y)))
 (let ((?x433 (* (- 12) ?x387)))
 (let ((?x534 (* y00 z)))
 (let ((?x440 (* 12 ?x534)))
 (let ((?x1059 (* (- 18) (* z x))))
 (let ((?x1220 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x1059 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x440 (* (- 6) (* y00 z00)) (* 36 (* y00 y)) (* 6 (* z00 y)) ?x433 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x844 ?x1118 (* z y y) (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x496 (* 18 (* y00 x)) ?x71 ?x553 (* y00 z y) (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x570 (* (- 24) ?x541)))
 (let ((?x518 (* 12 ?x515)))
 (let ((?x621 (+ (* (- 1) (* y00 z00 z)) ?x433 ?x1059 (* 18 (* x00 z00)) ?x518 ?x570 ?x1118 ?x440 (* 6 (* y00 z00)) (* 12 (* y00 y)) ?x64 ?x496 (* (- 6) (* z00 y)) ?x71 ?x553 ?x99 (* (- 18) (* z00 x)) (* z00 z y) (* (- 1) (* z00 z00 y)))))
 (let ((?x333 (* z00 z00)))
 (let ((?x437 (* 6 ?x333)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x426 (* (- 1) ?x55)))
 (let ((?x1543 (+ (* (- 6) ?x387) ?x426 ?x437 (* (- 12) ?x534) (* 18 (* y00 z00)) ?x64 ?x496 (* (- 6) (* z00 z)) ?x71 ?x553 (* z00 z00 z))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x363 (* (- 1) ?x333)))
 (let (($x711 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x363 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x1543 0) (= ?x621 0) (= ?x1220 0) (= ?x1316 0) (not (= ?x1848 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x274 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x273 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x271 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x269 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x268 (* 6 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x265 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x264 (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x262 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x261 (* ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x260 (* 6 ?x215 ?x215 ?x215 n00 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x258 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x256 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x253 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x252 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x250 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x246 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x245 (* 6 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x244 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x242 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x240 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x238 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x234 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x233 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218)))
 (let ((?x232 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x230 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x229 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x228 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x225 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x224 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 n00 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x222 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218)))
 (let ((?x220 (* 6 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x219 (* ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x235 (- (+ (- (- (+ (- ?x219 ?x220) ?x222) ?x224) ?x225) ?x228 ?x229 ?x230) ?x232)))
 (let ((?x248 (- (- (+ (- (+ (- (- ?x235 ?x233) ?x234) ?x238) ?x240) ?x242) ?x244) ?x245)))
 (let ((?x263 (+ (- (+ (- (- (+ (- ?x248 ?x246) ?x250) ?x252) ?x253) ?x256) ?x258) ?x260 ?x261 ?x262)))
 (let (($x276 (= (+ (- (+ (- (- ?x263 ?x264) ?x265) ?x268 ?x269) ?x271) ?x273 ?x274) 0)))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* (- 1) y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* (- 1) z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* (- 1) z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x279 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not $x276)))))
 (rewrite (= $x279 $x711)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x281 (asserted $x280)))
 (let ((@x1756 (mp (mp @x281 (quant-intro (proof-bind ?x1025) (= $x280 $x374)) $x374) (rewrite (= $x374 $x374)) $x374)))
 (let ((@x730 (mp~ (mp @x1756 (quant-intro (proof-bind ?x385) (= $x374 $x424)) $x424) (sk (~ $x424 $x1329)) $x1329)))
 (let ((@x492 (mp @x730 (rewrite (= $x1329 $x1908)) $x1908)))
 (let ((@x463 (and-elim @x492 $x1246)))
 (let ((@x563 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1246) $x562)) @x463 $x562)))
 (let (($x687 (>= ?x653 0)))
 (let ((@x1570 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1246) $x687)) @x463 $x687)))
 (let (($x708 (not (<= ?x1542 0))))
 (let (($x1302 (>= ?x1542 0)))
 (let ((@x560 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x756 $x708 (not $x1302))) (and-elim @x492 $x326) (or $x708 (not $x1302)))))
 (let ((@x290 (unit-resolution @x560 (lemma ((_ th-lemma arith) (hypothesis (not $x1302)) @x1570 @x563 false) $x1302) $x708)))
 ((_ th-lemma arith) @x290 @x1570 @x563 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        24
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             712
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      9
 :arith-tableau-max-columns 128
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                21.51
 :memory                    19.46
 :mk-bool-var               21
 :mk-clause                 22
 :num-allocs                30011004
 :num-checks                1
 :propagations              14
 :rlimit-count              173719
 :time                      0.12
 :total-time                0.15)
