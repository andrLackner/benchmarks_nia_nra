% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on freire1_denorm_inv1_4xlen1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7803
% Time elapsed: 0.500 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_6 on freire1_denorm_inv1_4xlen1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7803
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity:gtg=exists_all_2 on freire1_denorm_inv1_4xlen1
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for freire1_denorm_inv1_4xlen1
% SZS output start Proof for freire1_denorm_inv1_4xlen1
1. ? [X1 : $int,X0 : $int] : (0 = $difference($difference($sum($sum($sum($product($uminus(1),X0),r00),$product(X0,X0)),$product(2,X1)),$product(2,x00)),$product(r00,r00)) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($difference($difference($sum($sum($sum($product($uminus(1),$sum(X0,1)),r00),$product($sum(X0,1),$sum(X0,1))),$product(2,$difference(X1,X0))),$product(2,x00)),$product(r00,r00)),$sum(X0,1)),$sum(X0,1)),$difference(X1,X0)),$uminus(1)),$sum(X0,1)),$sum(X0,1)),$sum(X0,1)),$uminus(1)),$difference(X1,X0)),$uminus(1)),$difference(X1,X0)),$difference(X1,X0)),$difference(X1,X0))) [input]
2. ? [X1 : $int,X0 : $int] : (0 = $sum($difference($sum($sum($sum($product($uminus(1),X0),r00),$product(X0,X0)),$product(2,X1)),$product(2,x00)),$uminus($product(r00,r00))) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($sum($difference($sum($sum($sum($product($uminus(1),$sum(X0,1)),r00),$product($sum(X0,1),$sum(X0,1))),$product(2,$difference(X1,X0))),$product(2,x00)),$uminus($product(r00,r00))),$sum(X0,1)),$sum(X0,1)),$sum(X1,$uminus(X0))),$uminus(1)),$sum(X0,1)),$sum(X0,1)),$sum(X0,1)),$uminus(1)),$sum(X1,$uminus(X0))),$uminus(1)),$sum(X1,$uminus(X0))),$sum(X1,$uminus(X0))),$sum(X1,$uminus(X0)))) [theory normalization 1]
3. $sum(X0,X1) = $sum(X1,X0) [theory axiom 141]
14. $product(X0,X1) = $product(X1,X0) [theory axiom 141]
21. ? [X1 : $int,X0 : $int] : (0 = $sum($sum($sum($sum($sum($product($uminus(1),X0),r00),$product(X0,X0)),$product(2,X1)),$uminus($product(2,x00))),$uminus($product(r00,r00))) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum($sum($product($uminus(1),$sum(X0,1)),r00),$product($sum(X0,1),$sum(X0,1))),$product(2,$difference(X1,X0))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum(X0,1)),$sum(X0,1)),$sum(X1,$uminus(X0))),$uminus(1)),$sum(X0,1)),$sum(X0,1)),$sum(X0,1)),$uminus(1)),$sum(X1,$uminus(X0))),$uminus(1)),$sum(X1,$uminus(X0))),$sum(X1,$uminus(X0))),$sum(X1,$uminus(X0)))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum($sum($sum($product($uminus(1),X1),r00),$product(X1,X1)),$product(2,X0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) & ~0 = $product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum($sum($product($uminus(1),$sum(X1,1)),r00),$product($sum(X1,1),$sum(X1,1))),$product(2,$difference(X0,X1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum(X1,1)),$sum(X1,1)),$sum(X0,$uminus(X1))),$uminus(1)),$sum(X1,1)),$sum(X1,1)),$sum(X1,1)),$uminus(1)),$sum(X0,$uminus(X1))),$uminus(1)),$sum(X0,$uminus(X1))),$sum(X0,$uminus(X1))),$sum(X0,$uminus(X1)))) [rectify 21]
23. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum($sum($sum($product($uminus(1),X1),r00),$product(X1,X1)),$product(2,X0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) & 0 != $product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum($sum($product($uminus(1),$sum(X1,1)),r00),$product($sum(X1,1),$sum(X1,1))),$product(2,$difference(X0,X1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum(X1,1)),$sum(X1,1)),$sum(X0,$uminus(X1))),$uminus(1)),$sum(X1,1)),$sum(X1,1)),$sum(X1,1)),$uminus(1)),$sum(X0,$uminus(X1))),$uminus(1)),$sum(X0,$uminus(X1))),$sum(X0,$uminus(X1))),$sum(X0,$uminus(X1)))) [flattening 22]
24. 0 != $product($product($product($product($product($product($product($product($product($product($product($product($product($sum($sum($sum($sum($sum($product($uminus(1),$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$sum(sK1,1)),$sum(sK1,1)),$sum(sK0,$uminus(sK1))),$uminus(1)),$sum(sK1,1)),$sum(sK1,1)),$sum(sK1,1)),$uminus(1)),$sum(sK0,$uminus(sK1))),$uminus(1)),$sum(sK0,$uminus(sK1))),$sum(sK0,$uminus(sK1))),$sum(sK0,$uminus(sK1))) [cnf transformation 23]
25. 0 = $sum($sum($sum($sum($sum($product($uminus(1),sK1),r00),$product(sK1,sK1)),$product(2,sK0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) [cnf transformation 23]
27. 0 != $product($product($product($product($product($product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1))))))),$sum(sK0,$uminus(sK1))),-1),$sum(sK0,$uminus(sK1))),$sum(sK0,$uminus(sK1))),$sum(sK0,$uminus(sK1))) [evaluation 24]
28. 0 = $sum($sum($sum($sum($sum($product(-1,sK1),r00),$product(sK1,sK1)),$product(2,sK0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) [evaluation 25]
30. 1 <=> 0 = $sum($sum($sum($sum($sum($product(-1,sK1),r00),$product(sK1,sK1)),$product(2,sK0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) [avatar definition]
32. 0 = $sum($sum($sum($sum($sum($product(-1,sK1),r00),$product(sK1,sK1)),$product(2,sK0)),$uminus($product(2,x00))),$uminus($product(r00,r00))) <- (1) [avatar component clause 30]
33. 1 [avatar split clause 28,30]
38. 0 = $sum($sum($uminus($product(2,x00)),$sum($sum($sum($product(-1,sK1),r00),$product(sK1,sK1)),$product(2,sK0))),$uminus($product(r00,r00))) <- (1) [backward demodulation 32,3]
47. 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($sum($product(-1,sK1),r00),$product(sK1,sK1)))),$uminus($product(r00,r00))) <- (1) [forward demodulation 38,3]
48. 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum($product(-1,sK1),r00)))),$uminus($product(r00,r00))) <- (1) [forward demodulation 47,3]
49. 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1))))),$uminus($product(r00,r00))) <- (1) [forward demodulation 48,3]
51. 2 <=> 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1))))),$uminus($product(r00,r00))) [avatar definition]
53. 0 = $sum($sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1))))),$uminus($product(r00,r00))) <- (2) [avatar component clause 51]
54. 2 | ~1 [avatar split clause 49,30,51]
55. 0 = $sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1)))))) <- (2) [superposition 53,3]
56. 0 = $sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1)))))) <- (2) [superposition 53,3]
57. 0 = $sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1)))))) <- (2) [superposition 3,53]
58. 0 = $sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1)))))) <- (2) [superposition 3,53]
68. 3 <=> 0 = $sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,sK0),$sum($product(sK1,sK1),$sum(r00,$product(-1,sK1)))))) [avatar definition]
71. 3 | ~2 [avatar split clause 55,51,68]
72. 3 | ~2 [avatar split clause 56,51,68]
73. 3 | ~2 [avatar split clause 57,51,68]
74. 3 | ~2 [avatar split clause 58,51,68]
85. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($product($product($product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1))))))),$sum(sK0,$uminus(sK1))),-1),$sum(sK0,$uminus(sK1)))),$sum(sK0,$uminus(sK1))) [forward demodulation 27,14]
86. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product($product($product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1))))))),$sum(sK0,$uminus(sK1))),-1))),$sum(sK0,$uminus(sK1))) [forward demodulation 85,14]
87. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1))))))),$sum(sK0,$uminus(sK1)))))),$sum(sK0,$uminus(sK1))) [forward demodulation 86,14]
88. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00))),$product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1))))))))))),$sum(sK0,$uminus(sK1))) [forward demodulation 87,14]
89. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1)))))),$sum($sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))),$uminus($product(r00,r00)))))))),$sum(sK0,$uminus(sK1))) [forward demodulation 88,14]
90. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1)))))),$sum($uminus($product(r00,r00)),$sum($sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1))),$uminus($product(2,x00))))))))),$sum(sK0,$uminus(sK1))) [forward demodulation 89,3]
91. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1)))))),$sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))),$product(2,$difference(sK0,sK1)))))))))),$sum(sK0,$uminus(sK1))) [forward demodulation 90,3]
92. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($product($sum(sK1,1),$product($sum(sK1,1),$product($sum(sK0,$uminus(sK1)),$product($sum(sK1,1),$product($sum(sK1,1),$sum(sK1,1)))))),$sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($sum($product(-1,$sum(sK1,1)),r00),$product($sum(sK1,1),$sum(sK1,1))))))))))),$sum(sK0,$uminus(sK1))) [forward demodulation 91,3]
93. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($product($sum(1,sK1),$product($sum(1,sK1),$product($sum(sK0,$uminus(sK1)),$product($sum(1,sK1),$product($sum(1,sK1),$sum(1,sK1)))))),$sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($sum($product(-1,$sum(1,sK1)),r00),$product($sum(1,sK1),$sum(1,sK1))))))))))),$sum(sK0,$uminus(sK1))) [forward demodulation 92,3]
94. 0 != $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($product($sum(1,sK1),$product($sum(1,sK1),$product($sum(sK0,$uminus(sK1)),$product($sum(1,sK1),$product($sum(1,sK1),$sum(1,sK1)))))),$sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($sum(r00,$product(-1,$sum(1,sK1))),$product($sum(1,sK1),$sum(1,sK1))))))))))),$sum(sK0,$uminus(sK1))) [forward demodulation 93,3]
100. 4 <=> 0 = $product($product($sum(sK0,$uminus(sK1)),$product($sum(sK0,$uminus(sK1)),$product(-1,$product($sum(sK0,$uminus(sK1)),$product($product($sum(1,sK1),$product($sum(1,sK1),$product($sum(sK0,$uminus(sK1)),$product($sum(1,sK1),$product($sum(1,sK1),$sum(1,sK1)))))),$sum($uminus($product(r00,r00)),$sum($uminus($product(2,x00)),$sum($product(2,$difference(sK0,sK1)),$sum($sum(r00,$product(-1,$sum(1,sK1))),$product($sum(1,sK1),$sum(1,sK1))))))))))),$sum(sK0,$uminus(sK1))) [avatar definition]
103. ~4 [avatar split clause 94,100]
104. $false [avatar sat refutation 33,54,71,72,73,74,103]
% SZS output end Proof for freire1_denorm_inv1_4xlen1
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Refutation

% Memory used [KB]: 7036
% Time elapsed: 0.032 s
% ------------------------------
% ------------------------------
% Success in time 1.537 s
