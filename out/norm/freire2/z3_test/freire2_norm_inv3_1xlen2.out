unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1511 (* (- 1) s!1)))
 (let ((?x301 (* r00 r00)))
 (let ((?x2702 (* (- 3) ?x301)))
 (let ((?x3376 (+ s00 ?x2702 ?x1511 (* 3 (* r!2 r!2)))))
 (let (($x2601 (<= ?x3376 0)))
 (let (($x3533 (= ?x3376 0)))
 (let ((?x1515 (* 6 r!2)))
 (let ((?x2526 (+ 3 s!1 ?x1515)))
 (let ((?x1519 (+ ?x1511 x!0)))
 (let ((?x2722 (* (- 6) (* r00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526))))
 (let ((?x2852 (* 9 (* (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526))))
 (let ((?x2962 (* (- 9) (* s00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526))))
 (let ((?x2657 (* 18 (* x00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526))))
 (let ((?x5243 (* 6 (* r00 s00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526))))
 (let ((?x1969 (* (- 18) (* (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1519 ?x2526))))
 (let ((?x4787 (+ (* 36 (* s00 s00 x!0 x!0 x!0 r!2)) (* (- 27) (* s00 r00 s!1 s!1 s!1 x!0 r!2)) (* (- 81) (* s00 r00 s!1 s!1 x!0)) (* 81 (* s00 r00 s!1 s!1 s!1 r!2)) (* 27 (* s00 r00 s!1 s!1 x!0 x!0 r!2)) ?x1969 (* (- 9) (* s00 s!1 s!1 x!0 x!0 r!2)) (* 72 (* s00 s00 s!1 s!1 x!0 r!2 r!2)) (* 12 (* s00 s00 s!1 s!1 s!1 x!0 r!2)) ?x5243 (* 7 (* s00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 36 (* s00 s00 s!1 s!1 x!0)) (* 2 (* ?x1519 ?x1519 ?x1519 ?x2526 ?x2526 ?x2526 ?x2526)) (* (- 9) (* s00 r00 s!1 x!0 x!0 x!0 r!2)) (* 12 (* s00 s00 x!0 x!0 x!0)) (* 2 (* s00 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526 ?x2526)) (* 54 (* r00 x00 x!0 x!0 x!0)) (* (- 54) (* s00 s!1 x!0 x!0 r!2 r!2)) ?x2657 (* (- 72) (* s00 s00 s!1 x!0 x!0 r!2 r!2)) (* (- 12) (* s00 s00 s!1 s!1 x!0 x!0 r!2)) (* (- 162) (* r00 x00 s!1 x!0 x!0)) (* (- 18) (* s00 r00 r00 s!1 s!1 s!1 x!0 x!0)) (* (- 66) (* s00 r00 r00 s!1 s!1 s!1 s!1 r!2)) (* (- 108) (* s00 r00 r00 s!1 x!0 x!0)) (* (- 9) (* r00 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526 ?x2526)) (* (- 198) (* s00 r00 r00 s!1 s!1 x!0 x!0 r!2)) (* (- 18) (* r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1519 ?x2526)) (* 486 (* s00 r00 r00 s!1 s!1 x!0 r!2)) (* (- 3) (* s00 s!1 s!1 s!1 s!1)) (* 9 (* s00 s!1 s!1 s!1 x!0 r!2)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1)) (* 162 (* s00 r00 r00 x!0 x!0 x!0 r!2)) (* (- 162) (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* (- 30) (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* (- 180) (* s00 r00 r00 s!1 s!1 s!1 r!2 r!2)) (* 108 (* s00 r00 r00 s!1 s!1 x!0)) (* 540 (* s00 r00 r00 s!1 s!1 x!0 r!2 r!2)) (* 27 (* s00 x!0 x!0 x!0 r!2)) (* 9 (* r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 54 (* s00 s!1 s!1 x!0 r!2 r!2)) (* (- 11) (* (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526 ?x2526)) (* 36 (* s00 r00 r00 x!0 x!0 x!0)) (* 90 (* s00 r00 r00 s!1 s!1 s!1 x!0)) ?x2962 (* 9 (* s00 x!0 x!0 x!0)) (* (- 486) (* s00 r00 r00 s!1 x!0 x!0 r!2)) (* 198 (* s00 r00 r00 s!1 s!1 s!1 x!0 r!2)) (* (- 9) (* s00 s!1 s!1 s!1)) (* 27 (* s00 s!1 s!1 x!0)) (* (- 27) (* s00 s!1 x!0 x!0)) ?x2852 (* 6 (* s00 r00 r00 s!1 s!1 x!0 x!0 x!0)) (* (- 54) (* r00 x00 s!1 s!1 x!0 x!0)) (* (- 324) (* r00 x00 s!1 x!0 x!0 r!2 r!2)) (* (- 486) (* r00 x00 s!1 x!0 x!0 r!2)) (* 66 (* s00 r00 r00 s!1 x!0 x!0 x!0 r!2)) (* 9 (* r00 s00 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 3 (* ?x1519 ?x1519 ?x1519 ?x2526 ?x2526 ?x2526)) (* (- 54) (* s00 r00 x!0 x!0 x!0 r!2 r!2)) (* (- 9) (* s00 r00 s!1 x!0 x!0 x!0)) (* (- 18) (* x00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* (- 27) (* s00 s!1 s!1 s!1 r!2)) (* 162 (* r00 x00 s!1 s!1 x!0)) (* 486 (* r00 x00 s!1 s!1 x!0 r!2)) (* (- 54) (* r00 x00 s!1 s!1 s!1)) (* (- 162) (* s00 r00 s!1 s!1 x!0 r!2 r!2)) (* (- 162) (* r00 x00 s!1 s!1 s!1 r!2)) (* (- 27) (* s00 r00 s!1 s!1 s!1 x!0)) (* (- 18) (* r00 x00 s!1 s!1 s!1 s!1)) (* 162 (* r00 x00 x!0 x!0 x!0 r!2)) (* (- 54) (* r00 x00 s!1 s!1 x!0 x!0 r!2)) (* 18 (* r00 ?x1519 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 81 (* s00 s!1 s!1 x!0 r!2)) (* 18 (* r00 x00 s!1 x!0 x!0 x!0)) (* (- 18) (* r00 x00 s!1 s!1 s!1 s!1 r!2)) (* 6 (* r00 r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* (- 108) (* r00 x00 s!1 s!1 s!1 r!2 r!2)) (* (- 81) (* s00 s!1 x!0 x!0 r!2)) (* (- 36) (* s00 s00 s!1 x!0 x!0)) (* (- 81) (* s00 r00 x!0 x!0 x!0 r!2)) (* 54 (* r00 x00 s!1 s!1 s!1 x!0 r!2)) (* 324 (* r00 x00 s!1 s!1 x!0 r!2 r!2)) (* 54 (* r00 x00 s!1 s!1 s!1 x!0)) (* (- 27) (* s00 r00 x!0 x!0 x!0)) (* 162 (* s00 r00 s!1 x!0 x!0 r!2 r!2)) (* 27 (* s00 r00 s!1 s!1 x!0 x!0)) (* 243 (* s00 r00 s!1 x!0 x!0 r!2)) (* 81 (* s00 r00 s!1 x!0 x!0)) (* 27 (* s00 r00 s!1 s!1 s!1)) (* 54 (* s00 r00 s!1 s!1 s!1 r!2 r!2)) (* 9 (* s00 r00 s!1 s!1 s!1 s!1)) (* 9 (* s00 r00 s!1 s!1 s!1 s!1 r!2)) ?x2722 (* (- 3) (* s00 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 18 (* s00 r00 r00 s!1 s!1 s!1 s!1 x!0)) (* 6 (* r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526 ?x2526)) (* 4 (* s00 s00 s!1 x!0 x!0 x!0 r!2)) (* 24 (* s00 s00 x!0 x!0 x!0 r!2 r!2)) (* 30 (* s00 r00 r00 s!1 x!0 x!0 x!0)) (* (- 24) (* s00 s00 s!1 s!1 s!1 r!2 r!2)) (* 18 (* (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 3 (* s00 s!1 x!0 x!0 x!0)) (* (- 18) (* r00 x00 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 180 (* s00 r00 r00 x!0 x!0 x!0 r!2 r!2)) (* (- 18) (* s00 s!1 s!1 s!1 r!2 r!2)) (* 3 (* s00 s!1 x!0 x!0 x!0 r!2)) (* (- 6) (* r00 s00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* (- 4) (* s00 s00 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* 12 (* s00 s00 s!1 s!1 s!1 x!0)) (* 108 (* s00 s00 s!1 s!1 x!0 r!2)) (* (- 4) (* s00 s00 s!1 s!1 s!1 s!1)) (* (- 36) (* s00 s00 s!1 s!1 s!1 r!2)) (* (- 9) (* s00 s!1 s!1 x!0 x!0)) (* 9 (* s00 s!1 s!1 s!1 x!0)) (* (- 3) (* s00 s!1 s!1 s!1 s!1 r!2)) (* 18 (* s00 x!0 x!0 x!0 r!2 r!2)) (* (- 4) (* s00 s00 s!1 s!1 s!1 s!1 r!2)) (* (- 243) (* s00 r00 s!1 s!1 x!0 r!2)) (* 18 (* r00 x00 s!1 x!0 x!0 x!0 r!2)) (* 108 (* r00 x00 x!0 x!0 x!0 r!2 r!2)) (* (- 12) (* s00 s00 s!1 s!1 x!0 x!0)) (* (- 12) (* s00 s00 s!1 s!1 s!1)) (* (- 3) (* (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x2526 ?x2526)) (* (- 6) (* r00 r00 ?x1519 ?x1519 ?x1519 ?x2526 ?x2526 ?x2526)) (* 4 (* s00 s00 s!1 x!0 x!0 x!0)) (* (- 108) (* s00 s00 s!1 x!0 x!0 r!2)) (* (- 540) (* s00 r00 r00 s!1 x!0 x!0 r!2 r!2)) (* (- 90) (* s00 r00 r00 s!1 s!1 x!0 x!0)) (* (- 6) (* s00 r00 r00 s!1 s!1 s!1 s!1 s!1)))))
 (let (($x4811 (= ?x4787 0)))
 (let (($x2522 (not $x4811)))
 (let ((?x3722 (* (- 9) s!1)))
 (let ((?x3557 (* r00 r00 s!1)))
 (let ((?x3695 (* 36 ?x3557)))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1986 (* 108 ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3245 (* 16 ?x1184)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3053 (* (- 432) ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x3213 (* (- 108) ?x805)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x3667 (* (- 36) ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1929 (* 51 ?x591)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3029 (* 108 ?x522)))
 (let ((?x137 (* 9 s00)))
 (let ((?x5144 (+ ?x137 (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x3029 ?x1929 ?x3667 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* 432 (* r00 r00 r00 x!0)) ?x3213 ?x3053 (* 216 (* s00 r00 r00 r00)) ?x3245 (* (- 12) (* s00 s!1 s!1)) ?x1986 (* 108 (* x!0 x!0)) (* (- 66) (* s00 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* s00 r00 s!1)) (* (- 108) (* s!1 x!0)) (* 108 (* x00 s!1)) (* (- 216) (* x00 x!0)) ?x3695 (* (- 108) (* r00 x!0)) (* 54 (* r00 s!1)) (* 108 (* s00 x!0)) (* 15 (* s!1 s!1)) (* (- 216) (* s00 r00 x!0)) ?x3722 (* (- 216) (* r00 r00 r00 s!1)) (* 36 (* r00 r00 s!1 s!1)))))
 (let ((?x3334 (+ ?x137 (* (- 24) (* s00 r00)) (* 54 ?x522) (* 15 ?x591) ?x3667 (* 2 (* s00 s00 r00)) (* (- 6) ?x805) (* 36 (* r00 r00 x00)) (* (- 54) (* x!0 r!2)) (* (- 12) (* s00 s!1)) (* (- 36) (* r00 x!0 r!2)) (* 24 (* s!1 r!2)) (* 4 (* s00 s00 r!2)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s00 s!1 r!2)) (* (- 6) (* s!1 x!0)) (* (- 36) (* r00 r00 x!0)) (* (- 2) (* s!1 s!1 r!2)) (* 6 (* x00 s!1)) (* 36 (* r00 x00 r!2)) (* (- 24) (* s00 r!2)) ?x3695 (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* 24 (* r00 s!1)) (* 6 (* s00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 3) (* s!1 s!1)) ?x3722)))
 (let (($x3728 (= ?x3334 0)))
 (let ((?x1462 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1544 (+ ?x44 (* (- 9) (* s00 r00)) (* 18 ?x522) (* 4 ?x591) (* (- 6) ?x647) (* (- 18) (* x!0 r!2)) (* (- 2) (* s00 s!1)) (* 9 (* s!1 r!2)) (* (- 6) (* r00 s!1 r!2)) (* (- 9) (* s00 r!2)) (* 6 ?x3557) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* 9 (* r00 s!1)) (* 6 (* s00 r00 r!2)) (* (- 2) (* s!1 s!1)) ?x1462)))
 (let (($x3615 (= ?x1544 0)))
 (let ((?x1901 (* 3 r!2)))
 (let ((?x1905 (* 6 x!0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x426 (* s00 r00)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x3549 (+ ?x44 ?x500 ?x501 ?x504 ?x470 (* 2 (* s!1 r!2)) (* 4 (* s00 r!2)) (* (- 12) (* r00 r00 r!2)) ?x1462 ?x1905 ?x1901)))
 (let (($x1112 (= ?x3549 0)))
 (let (($x3140 (and $x3533 $x1112 $x3615 $x3728 (= ?x5144 0) $x2522)))
 (let ((?x1402 (+ 3 ?x1515 s!1)))
 (let ((?x5012 (* (- 18) (* x00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402))))
 (let ((?x4996 (* 18 (* (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1519 ?x1402))))
 (let ((?x4998 (* (- 6) (* r00 s00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402))))
 (let ((?x4946 (* 6 (* r00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402))))
 (let ((?x4678 (* (- 9) (* (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402))))
 (let ((?x1403 (* 9 (* s00 (+ 1 r!2) (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402))))
 (let ((?x1575 (+ (* 18 (* r!2 r!2 s!1 s!1 s!1 s00)) (* 6 (* r00 s00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* 4 (* s00 s00 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* 11 (* (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402 ?x1402)) (* 540 (* r!2 r!2 s!1 x!0 x!0 s00 r00 r00)) (* 198 (* r!2 s!1 s!1 x!0 x!0 s00 r00 r00)) (* 90 (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* (- 9) (* r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* 18 (* r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1519 ?x1402)) ?x1403 (* 486 (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 198) (* r!2 s!1 s!1 s!1 x!0 s00 r00 r00)) (* 108 (* s!1 x!0 x!0 s00 r00 r00)) (* (- 90) (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 54) (* r!2 r!2 s!1 s!1 x!0 s00)) (* (- 66) (* r!2 s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 180) (* r!2 r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 30) (* s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 162) (* r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 36) (* x!0 x!0 x!0 s00 r00 r00)) (* 18 (* s!1 s!1 s!1 x!0 x!0 s00 r00 r00)) (* 36 (* s!1 s!1 s!1 s00 r00 r00)) (* 162 (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* 30 (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* 180 (* r!2 r!2 s!1 s!1 s!1 s00 r00 r00)) (* 66 (* r!2 s!1 s!1 s!1 s!1 s00 r00 r00)) (* (- 108) (* s!1 s!1 x!0 s00 r00 r00)) (* (- 486) (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 27) (* r!2 x!0 x!0 x!0 s00)) (* (- 540) (* r!2 r!2 s!1 s!1 x!0 s00 r00 r00)) (* 9 (* s!1 s!1 s!1 s00)) (* (- 27) (* s!1 s!1 x!0 s00)) (* 27 (* s!1 x!0 x!0 s00)) (* (- 9) (* x!0 x!0 x!0 s00)) ?x4678 (* (- 6) (* s!1 s!1 x!0 x!0 x!0 s00 r00 r00)) (* (- 18) (* r00 ?x1519 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* (- 162) (* r!2 x!0 x!0 x!0 r00 x00)) (* (- 18) (* s!1 x!0 x!0 x!0 r00 x00)) (* (- 54) (* x!0 x!0 x!0 r00 x00)) (* 54 (* r!2 s!1 s!1 x!0 x!0 r00 x00)) (* 54 (* s!1 s!1 x!0 x!0 r00 x00)) (* 324 (* r!2 r!2 s!1 x!0 x!0 r00 x00)) (* 486 (* r!2 s!1 x!0 x!0 r00 x00)) (* 162 (* s!1 x!0 x!0 r00 x00)) (* (- 9) (* r00 s00 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* (- 3) (* ?x1519 ?x1519 ?x1519 ?x1402 ?x1402 ?x1402)) (* (- 2) (* s00 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402 ?x1402)) (* 18 (* x00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* (- 54) (* r!2 s!1 s!1 s!1 x!0 r00 x00)) (* (- 54) (* s!1 s!1 s!1 x!0 r00 x00)) (* (- 324) (* r!2 r!2 s!1 s!1 x!0 r00 x00)) (* 27 (* r!2 s!1 s!1 s!1 s00)) (* (- 486) (* r!2 s!1 s!1 x!0 r00 x00)) (* (- 162) (* s!1 s!1 x!0 r00 x00)) (* 54 (* s!1 s!1 s!1 r00 x00)) (* 162 (* r!2 s!1 s!1 s!1 r00 x00)) (* 18 (* s!1 s!1 s!1 s!1 r00 x00)) (* (- 81) (* r!2 s!1 s!1 x!0 s00)) (* 18 (* r!2 s!1 s!1 s!1 s!1 r00 x00)) (* 108 (* r!2 r!2 s!1 s!1 s!1 r00 x00)) (* (- 6) (* r00 r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* 81 (* r!2 s!1 x!0 x!0 s00)) (* (- 108) (* r!2 r!2 x!0 x!0 x!0 r00 x00)) (* (- 18) (* r!2 s!1 x!0 x!0 x!0 r00 x00)) (* (- 18) (* s!1 s!1 s!1 s!1 x!0 s00 r00 r00)) (* 3 (* s00 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) ?x4946 (* 9 (* r00 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402 ?x1402)) (* 9 (* r!2 s!1 x!0 x!0 x!0 s00 r00)) (* 9 (* s!1 x!0 x!0 x!0 s00 r00)) (* 54 (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* 81 (* r!2 x!0 x!0 x!0 s00 r00)) (* 27 (* x!0 x!0 x!0 s00 r00)) (* (- 27) (* r!2 s!1 s!1 x!0 x!0 s00 r00)) (* (- 162) (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* (- 27) (* s!1 s!1 x!0 x!0 s00 r00)) (* (- 243) (* r!2 s!1 x!0 x!0 s00 r00)) (* (- 81) (* s!1 x!0 x!0 s00 r00)) (* (- 27) (* s!1 s!1 s!1 s00 r00)) (* (- 81) (* r!2 s!1 s!1 s!1 s00 r00)) (* (- 54) (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* (- 9) (* s!1 s!1 s!1 s!1 s00 r00)) (* (- 9) (* r!2 s!1 s!1 s!1 s!1 s00 r00)) (* 81 (* s!1 s!1 x!0 s00 r00)) (* 243 (* r!2 s!1 s!1 x!0 s00 r00)) (* 162 (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* (- 2) (* ?x1519 ?x1519 ?x1519 ?x1402 ?x1402 ?x1402 ?x1402)) (* 27 (* s!1 s!1 s!1 x!0 s00 r00)) (* (- 7) (* s00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) ?x4998 (* 27 (* r!2 s!1 s!1 s!1 x!0 s00 r00)) ?x4996 (* 12 (* s!1 s!1 s!1 s00 s00)) (* (- 36) (* s!1 s!1 x!0 s00 s00)) (* 36 (* s!1 x!0 x!0 s00 s00)) (* (- 12) (* x!0 x!0 x!0 s00 s00)) (* 6 (* s!1 s!1 s!1 s!1 s!1 s00 r00 r00)) ?x5012 (* 54 (* r!2 r!2 s!1 x!0 x!0 s00)) (* 36 (* r!2 s!1 s!1 s!1 s00 s00)) (* 4 (* s!1 s!1 s!1 s!1 s00 s00)) (* (- 108) (* r!2 s!1 s!1 x!0 s00 s00)) (* (- 12) (* s!1 s!1 s!1 x!0 s00 s00)) (* 108 (* r!2 s!1 x!0 x!0 s00 s00)) (* 12 (* s!1 s!1 x!0 x!0 s00 s00)) (* (- 9) (* r!2 s!1 s!1 s!1 x!0 s00)) (* (- 36) (* r!2 x!0 x!0 x!0 s00 s00)) (* (- 4) (* s!1 x!0 x!0 x!0 s00 s00)) (* (- 18) (* r!2 r!2 x!0 x!0 x!0 s00)) (* 3 (* s!1 s!1 s!1 s!1 s00)) (* 3 (* r!2 s!1 s!1 s!1 s!1 s00)) (* (- 9) (* s!1 s!1 s!1 x!0 s00)) (* 9 (* s!1 s!1 x!0 x!0 s00)) (* (- 12) (* r!2 s!1 s!1 s!1 x!0 s00 s00)) (* (- 72) (* r!2 r!2 s!1 s!1 x!0 s00 s00)) (* 9 (* r!2 s!1 s!1 x!0 x!0 s00)) (* 12 (* r!2 s!1 s!1 x!0 x!0 s00 s00)) (* 72 (* r!2 r!2 s!1 x!0 x!0 s00 s00)) (* (- 3) (* s!1 x!0 x!0 x!0 s00)) (* (- 3) (* r!2 s!1 x!0 x!0 x!0 s00)) (* 4 (* r!2 s!1 s!1 s!1 s!1 s00 s00)) (* 3 (* (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* 18 (* r00 x00 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* 24 (* r!2 r!2 s!1 s!1 s!1 s00 s00)) (* (- 18) (* (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402)) (* (- 6) (* r00 (+ 1 r!2) ?x1519 ?x1519 ?x1519 ?x1402 ?x1402 ?x1402)) (* 6 (* r00 r00 ?x1519 ?x1519 ?x1519 ?x1402 ?x1402 ?x1402)) (* (- 24) (* r!2 r!2 x!0 x!0 x!0 s00 s00)) (* (- 4) (* r!2 s!1 x!0 x!0 x!0 s00 s00)))))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x1873 (* s!1 r00 r00)))
 (let ((?x3563 (* (- 36) ?x1873)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x1476 (* 9 s!1)))
 (let ((?x1526 (+ ?x1476 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s!1 s!1)) ?x3563 ?x1365 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x732 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1129 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x883 (* 12 (* s!1 s!1 s00)) ?x1371 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1375 (* 216 (* x!0 x00)) ?x1376)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1554 (+ ?x1476 ?x987 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x564 ?x551 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x3563 ?x916 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1000 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x696 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x806 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x890 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x1479 (+ (* 3 s!1) ?x378 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x541 ?x536 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x1873) ?x604 (* 18 (* x!0 r00)) ?x648 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x1974 (+ ?x1901 ?x1462 ?x1905 ?x44 ?x500 ?x501 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x504 ?x470)))
 (let (($x1899 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x301)) 0)))
 (let (($x3512 (and $x1899 (= ?x1974 0) (= ?x1479 0) (= ?x1554 0) (= ?x1526 0) (not (= ?x1575 0)))))
 (let (($x1165 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x1383 (+ 3 ?x211 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1389 (+ ?x280 x)))
 (let ((?x1091 (* (- 18) (* x00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x1081 (* 18 (* (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x1078 (* (- 6) (* r00 s00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x986 (* 6 (* r00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383))))
 (let ((?x849 (* (- 9) (* (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383))))
 (let ((?x596 (* 9 (* s00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x1156 (+ (* 18 (* r r s s s s00)) (* 6 (* r00 s00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 4 (* s00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 11 (* (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 540 (* r r s x x s00 r00 r00)) (* 198 (* r s s x x s00 r00 r00)) (* 90 (* s s x x s00 r00 r00)) (* (- 9) (* r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1389 ?x1383)) ?x596 (* 486 (* r s x x s00 r00 r00)) (* (- 198) (* r s s s x s00 r00 r00)) (* 108 (* s x x s00 r00 r00)) (* (- 90) (* s s s x s00 r00 r00)) (* (- 54) (* r r s s x s00)) (* (- 66) (* r s x x x s00 r00 r00)) (* (- 180) (* r r x x x s00 r00 r00)) (* (- 30) (* s x x x s00 r00 r00)) (* (- 162) (* r x x x s00 r00 r00)) (* (- 36) (* x x x s00 r00 r00)) (* 18 (* s s s x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 162 (* r s s s s00 r00 r00)) (* 30 (* s s s s s00 r00 r00)) (* 180 (* r r s s s s00 r00 r00)) (* 66 (* r s s s s s00 r00 r00)) (* (- 108) (* s s x s00 r00 r00)) (* (- 486) (* r s s x s00 r00 r00)) (* (- 27) (* r x x x s00)) (* (- 540) (* r r s s x s00 r00 r00)) (* 9 (* s s s s00)) (* (- 27) (* s s x s00)) (* 27 (* s x x s00)) (* (- 9) (* x x x s00)) ?x849 (* (- 6) (* s s x x x s00 r00 r00)) (* (- 18) (* r00 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 162) (* r x x x r00 x00)) (* (- 18) (* s x x x r00 x00)) (* (- 54) (* x x x r00 x00)) (* 54 (* r s s x x r00 x00)) (* 54 (* s s x x r00 x00)) (* 324 (* r r s x x r00 x00)) (* 486 (* r s x x r00 x00)) (* 162 (* s x x r00 x00)) (* (- 9) (* r00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 3) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 2) (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 18 (* x00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 54) (* r s s s x r00 x00)) (* (- 54) (* s s s x r00 x00)) (* (- 324) (* r r s s x r00 x00)) (* 27 (* r s s s s00)) (* (- 486) (* r s s x r00 x00)) (* (- 162) (* s s x r00 x00)) (* 54 (* s s s r00 x00)) (* 162 (* r s s s r00 x00)) (* 18 (* s s s s r00 x00)) (* (- 81) (* r s s x s00)) (* 18 (* r s s s s r00 x00)) (* 108 (* r r s s s r00 x00)) (* (- 6) (* r00 r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 81 (* r s x x s00)) (* (- 108) (* r r x x x r00 x00)) (* (- 18) (* r s x x x r00 x00)) (* (- 18) (* s s s s x s00 r00 r00)) (* 3 (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) ?x986 (* 9 (* r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 9 (* r s x x x s00 r00)) (* 9 (* s x x x s00 r00)) (* 54 (* r r x x x s00 r00)) (* 81 (* r x x x s00 r00)) (* 27 (* x x x s00 r00)) (* (- 27) (* r s s x x s00 r00)) (* (- 162) (* r r s x x s00 r00)) (* (- 27) (* s s x x s00 r00)) (* (- 243) (* r s x x s00 r00)) (* (- 81) (* s x x s00 r00)) (* (- 27) (* s s s s00 r00)) (* (- 81) (* r s s s s00 r00)) (* (- 54) (* r r s s s s00 r00)) (* (- 9) (* s s s s s00 r00)) (* (- 9) (* r s s s s s00 r00)) (* 81 (* s s x s00 r00)) (* 243 (* r s s x s00 r00)) (* 162 (* r r s s x s00 r00)) (* (- 2) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* 27 (* s s s x s00 r00)) (* (- 7) (* s00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) ?x1078 (* 27 (* r s s s x s00 r00)) ?x1081 (* 12 (* s s s s00 s00)) (* (- 36) (* s s x s00 s00)) (* 36 (* s x x s00 s00)) (* (- 12) (* x x x s00 s00)) (* 6 (* s s s s s s00 r00 r00)) ?x1091 (* 54 (* r r s x x s00)) (* 36 (* r s s s s00 s00)) (* 4 (* s s s s s00 s00)) (* (- 108) (* r s s x s00 s00)) (* (- 12) (* s s s x s00 s00)) (* 108 (* r s x x s00 s00)) (* 12 (* s s x x s00 s00)) (* (- 9) (* r s s s x s00)) (* (- 36) (* r x x x s00 s00)) (* (- 4) (* s x x x s00 s00)) (* (- 18) (* r r x x x s00)) (* 3 (* s s s s s00)) (* 3 (* r s s s s s00)) (* (- 9) (* s s s x s00)) (* 9 (* s s x x s00)) (* (- 12) (* r s s s x s00 s00)) (* (- 72) (* r r s s x s00 s00)) (* 9 (* r s s x x s00)) (* 12 (* r s s x x s00 s00)) (* 72 (* r r s x x s00 s00)) (* (- 3) (* s x x x s00)) (* (- 3) (* r s x x x s00)) (* 4 (* r s s s s s00 s00)) (* 3 (* (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* r00 x00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 24 (* r r s s s s00 s00)) (* (- 18) (* (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 6) (* r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 24) (* r r x x x s00 s00)) (* (- 4) (* r s x x x s00 s00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x1156 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x2742 (exists ((r Int) (s Int) (x Int) )(! (let ((?x211 (* 6 r)))
 (let ((?x2437 (+ 3 s ?x211)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2620 (+ x ?x280)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x5339 (+ (* 2 (* s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 18) (* x00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* 18 (* r00 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 3 (* ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 9 (* ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 6 (* r00 r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 9 (* r00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 3 (* s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 3) (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 18) (* r00 x00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 18 (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 6 (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 6) (* r00 r00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 9) (* r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* 4 (* s00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 3) (* s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 7 (* s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 18) (* ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437)) (* 2 (* ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437 ?x2437)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 9) (* r00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 6 (* r00 r00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 18 (* r00 x00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 18) (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437)) (* 9 (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 4) (* s00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 11) (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 18 (* x00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1986 (* 108 ?x1346)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1929 (* 51 ?x591)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3245 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x3213 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3053 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3029 (* 108 ?x522)))
 (let ((?x518 (+ (* 216 (* r00 s00 x00)) ?x3029 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3053 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3245 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1929 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1986)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x3181 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2935 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x604 (* 18 (* r00 x)) ?x378 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2815 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2436 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x2436 (= ?x2815 0) (= ?x2935 0) (= ?x3181 0) (= ?x518 0) (not (= ?x5339 0))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1178 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x1383 (+ 3 ?x211 s)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x1389 (+ ?x280 x)))
 (let ((?x1091 (* (- 18) (* x00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x1081 (* 18 (* (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x1078 (* (- 6) (* r00 s00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x986 (* 6 (* r00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383))))
 (let ((?x849 (* (- 9) (* (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383))))
 (let ((?x596 (* 9 (* s00 (+ 1 r) (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383))))
 (let ((?x1156 (+ (* 18 (* r r s s s s00)) (* 6 (* r00 s00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 4 (* s00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 11 (* (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 540 (* r r s x x s00 r00 r00)) (* 198 (* r s s x x s00 r00 r00)) (* 90 (* s s x x s00 r00 r00)) (* (- 9) (* r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1389 ?x1383)) ?x596 (* 486 (* r s x x s00 r00 r00)) (* (- 198) (* r s s s x s00 r00 r00)) (* 108 (* s x x s00 r00 r00)) (* (- 90) (* s s s x s00 r00 r00)) (* (- 54) (* r r s s x s00)) (* (- 66) (* r s x x x s00 r00 r00)) (* (- 180) (* r r x x x s00 r00 r00)) (* (- 30) (* s x x x s00 r00 r00)) (* (- 162) (* r x x x s00 r00 r00)) (* (- 36) (* x x x s00 r00 r00)) (* 18 (* s s s x x s00 r00 r00)) (* 36 (* s s s s00 r00 r00)) (* 162 (* r s s s s00 r00 r00)) (* 30 (* s s s s s00 r00 r00)) (* 180 (* r r s s s s00 r00 r00)) (* 66 (* r s s s s s00 r00 r00)) (* (- 108) (* s s x s00 r00 r00)) (* (- 486) (* r s s x s00 r00 r00)) (* (- 27) (* r x x x s00)) (* (- 540) (* r r s s x s00 r00 r00)) (* 9 (* s s s s00)) (* (- 27) (* s s x s00)) (* 27 (* s x x s00)) (* (- 9) (* x x x s00)) ?x849 (* (- 6) (* s s x x x s00 r00 r00)) (* (- 18) (* r00 ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 162) (* r x x x r00 x00)) (* (- 18) (* s x x x r00 x00)) (* (- 54) (* x x x r00 x00)) (* 54 (* r s s x x r00 x00)) (* 54 (* s s x x r00 x00)) (* 324 (* r r s x x r00 x00)) (* 486 (* r s x x r00 x00)) (* 162 (* s x x r00 x00)) (* (- 9) (* r00 s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 3) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 2) (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 18 (* x00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 54) (* r s s s x r00 x00)) (* (- 54) (* s s s x r00 x00)) (* (- 324) (* r r s s x r00 x00)) (* 27 (* r s s s s00)) (* (- 486) (* r s s x r00 x00)) (* (- 162) (* s s x r00 x00)) (* 54 (* s s s r00 x00)) (* 162 (* r s s s r00 x00)) (* 18 (* s s s s r00 x00)) (* (- 81) (* r s s x s00)) (* 18 (* r s s s s r00 x00)) (* 108 (* r r s s s r00 x00)) (* (- 6) (* r00 r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 81 (* r s x x s00)) (* (- 108) (* r r x x x r00 x00)) (* (- 18) (* r s x x x r00 x00)) (* (- 18) (* s s s s x s00 r00 r00)) (* 3 (* s00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) ?x986 (* 9 (* r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 9 (* r s x x x s00 r00)) (* 9 (* s x x x s00 r00)) (* 54 (* r r x x x s00 r00)) (* 81 (* r x x x s00 r00)) (* 27 (* x x x s00 r00)) (* (- 27) (* r s s x x s00 r00)) (* (- 162) (* r r s x x s00 r00)) (* (- 27) (* s s x x s00 r00)) (* (- 243) (* r s x x s00 r00)) (* (- 81) (* s x x s00 r00)) (* (- 27) (* s s s s00 r00)) (* (- 81) (* r s s s s00 r00)) (* (- 54) (* r r s s s s00 r00)) (* (- 9) (* s s s s s00 r00)) (* (- 9) (* r s s s s s00 r00)) (* 81 (* s s x s00 r00)) (* 243 (* r s s x s00 r00)) (* 162 (* r r s s x s00 r00)) (* (- 2) (* ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383 ?x1383)) (* 27 (* s s s x s00 r00)) (* (- 7) (* s00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) ?x1078 (* 27 (* r s s s x s00 r00)) ?x1081 (* 12 (* s s s s00 s00)) (* (- 36) (* s s x s00 s00)) (* 36 (* s x x s00 s00)) (* (- 12) (* x x x s00 s00)) (* 6 (* s s s s s s00 r00 r00)) ?x1091 (* 54 (* r r s x x s00)) (* 36 (* r s s s s00 s00)) (* 4 (* s s s s s00 s00)) (* (- 108) (* r s s x s00 s00)) (* (- 12) (* s s s x s00 s00)) (* 108 (* r s x x s00 s00)) (* 12 (* s s x x s00 s00)) (* (- 9) (* r s s s x s00)) (* (- 36) (* r x x x s00 s00)) (* (- 4) (* s x x x s00 s00)) (* (- 18) (* r r x x x s00)) (* 3 (* s s s s s00)) (* 3 (* r s s s s s00)) (* (- 9) (* s s s x s00)) (* 9 (* s s x x s00)) (* (- 12) (* r s s s x s00 s00)) (* (- 72) (* r r s s x s00 s00)) (* 9 (* r s s x x s00)) (* 12 (* r s s x x s00 s00)) (* 72 (* r r s x x s00 s00)) (* (- 3) (* s x x x s00)) (* (- 3) (* r s x x x s00)) (* 4 (* r s s s s s00 s00)) (* 3 (* (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 18 (* r00 x00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* 24 (* r r s s s s00 s00)) (* (- 18) (* (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383)) (* (- 6) (* r00 (+ 1 r) ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* 6 (* r00 r00 ?x1389 ?x1389 ?x1389 ?x1383 ?x1383 ?x1383)) (* (- 24) (* r r x x x s00 s00)) (* (- 4) (* r s x x x s00 s00)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1376 (* (- 108) ?x1346)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x1375 (* (- 16) ?x1184)))
 (let ((?x1056 (* s00 r00 r00 r00)))
 (let ((?x1371 (* (- 216) ?x1056)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x883 (* 432 ?x882)))
 (let ((?x805 (* s00 x00)))
 (let ((?x1129 (* 108 ?x805)))
 (let ((?x731 (* s00 s00 r00 r00)))
 (let ((?x732 (* 36 ?x731)))
 (let ((?x668 (* s00 s00 r00)))
 (let ((?x1012 (* 108 ?x668)))
 (let ((?x647 (* s00 r00 r00)))
 (let ((?x1000 (* 36 ?x647)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1365 (* (- 51) ?x591)))
 (let ((?x565 (* s r00 r00)))
 (let ((?x864 (* (- 36) ?x565)))
 (let ((?x522 (* r00 x00)))
 (let ((?x1362 (* (- 108) ?x522)))
 (let ((?x513 (* s00 r00 x00)))
 (let ((?x1361 (* (- 216) ?x513)))
 (let ((?x426 (* s00 r00)))
 (let ((?x520 (* 54 ?x426)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1377 (+ ?x143 ?x987 ?x520 ?x1361 ?x1362 (* (- 15) (* s s)) ?x864 ?x1365 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1000 ?x1012 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x732 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1129 (* 108 (* s x)) (* (- 108) (* x x)) ?x883 (* 12 (* s s s00)) ?x1371 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1375 (* 216 (* x x00)) ?x1376)))
 (let (($x1378 (= ?x1377 0)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x696 (* (- 2) ?x668)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x564 (* 24 ?x426)))
 (let ((?x1079 (+ ?x143 ?x987 (* (- 24) (* r s)) (* 24 (* r s00)) ?x564 ?x551 ?x569 (* 54 (* r x)) (* 36 (* r x r00)) ?x864 ?x916 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1000 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x696 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x806 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x890 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1084 (= ?x1079 0)))
 (let ((?x648 (* 6 ?x647)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x541 (* 9 ?x426)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x745 (+ ?x47 ?x378 (* (- 9) (* r s)) (* 9 (* r s00)) ?x541 ?x536 ?x546 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x565) ?x604 (* 18 (* x r00)) ?x648 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x752 (= ?x745 0)))
 (let ((?x469 (* r00 r00 r00)))
 (let ((?x470 (* 12 ?x469)))
 (let ((?x504 (* (- 6) ?x426)))
 (let ((?x501 (* (- 6) x00)))
 (let ((?x500 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x505 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x500 ?x501 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x504 ?x470)))
 (let (($x506 (= ?x505 0)))
 (let ((?x301 (* r00 r00)))
 (let ((?x302 (* 3 ?x301)))
 (let ((?x331 (* (- 1) s00)))
 (let (($x334 (= (+ s ?x331 (* (- 3) (* r r)) ?x302) 0)))
 (let (($x2697 (and $x334 $x506 $x752 $x1084 $x1378 (not (= ?x1156 0)))))
 (let ((?x2437 (+ 3 s ?x211)))
 (let ((?x2620 (+ x ?x280)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x5339 (+ (* 2 (* s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 18) (* x00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* 18 (* r00 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 3 (* ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 9 (* ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 6 (* r00 r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 9 (* r00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 3 (* s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 3) (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 18) (* r00 x00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 18 (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 6 (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 6) (* r00 r00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 9) (* r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* 4 (* s00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 3) (* s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 7 (* s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 18) (* ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437)) (* 2 (* ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437 ?x2437)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 9) (* r00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 6 (* r00 r00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 18 (* r00 x00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 18) (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437)) (* 9 (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 4) (* s00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 11) (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 18 (* x00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)))))
 (let ((?x1986 (* 108 ?x1346)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1929 (* 51 ?x591)))
 (let ((?x3245 (* 16 ?x1184)))
 (let ((?x3213 (* (- 108) ?x805)))
 (let ((?x3053 (* (- 432) ?x882)))
 (let ((?x3029 (* 108 ?x522)))
 (let ((?x518 (+ (* 216 (* r00 s00 x00)) ?x3029 (* (- 54) (* r00 s00)) (* 15 ?x545) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3053 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3245 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1929 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1986)))
 (let ((?x3181 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x2935 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x604 (* 18 (* r00 x)) ?x378 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2815 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x469))))
 (let (($x2827 (and (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) ?x301)) 0) (= ?x2815 0) (= ?x2935 0) (= ?x3181 0) (= ?x518 0) (not (= ?x5339 0)))))
 (rewrite (= $x2827 $x2697)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x277 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (- x s)))
 (let ((?x211 (* 6 r)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x227 (+ (- ?x219 (* 6 ?x216 r00 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x231 (- (- ?x227 (* 3 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x234 (+ ?x231 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x239 (- (- ?x234 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x242 (+ (- ?x239 (* 9 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x246 (- (- ?x242 (* 3 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x251 (- (+ ?x246 (* 7 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x251 (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x259 (+ (- ?x254 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x263 (+ (- ?x259 (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x269 (- (- ?x263 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x272 (+ (- ?x269 (* 11 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x272 0))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x2796 (lambda ((r Int) (s Int) (x Int) )(let ((?x211 (* 6 r)))
 (let ((?x2437 (+ 3 s ?x211)))
 (let ((?x280 (* (- 1) s)))
 (let ((?x2620 (+ x ?x280)))
 (let ((?x1396 (+ 1 r)))
 (let ((?x5339 (+ (* 2 (* s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 18) (* x00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* 18 (* r00 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 3 (* ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 9 (* ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 6 (* r00 r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 9 (* r00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 3 (* s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 3) (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 18) (* r00 x00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 18 (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 6 (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 6) (* r00 r00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* (- 9) (* r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 9) (* s00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* 4 (* s00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 3) (* s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 7 (* s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 18) (* ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437)) (* 2 (* ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437 ?x2437)) (* 6 (* r00 s00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 9) (* r00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 6 (* r00 r00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* 18 (* r00 x00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)) (* (- 18) (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2620 ?x2437)) (* 9 (* r00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 6) (* r00 s00 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 4) (* s00 s00 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437)) (* (- 11) (* ?x1396 ?x2620 ?x2620 ?x2620 ?x2437 ?x2437 ?x2437)) (* 18 (* x00 ?x1396 ?x1396 ?x2620 ?x2620 ?x2620 ?x2437)))))
 (let ((?x1346 (* x00 x00)))
 (let ((?x1986 (* 108 ?x1346)))
 (let ((?x137 (* 9 s00)))
 (let ((?x591 (* s00 s00)))
 (let ((?x1929 (* 51 ?x591)))
 (let ((?x1184 (* s00 s00 s00)))
 (let ((?x3245 (* 16 ?x1184)))
 (let ((?x805 (* s00 x00)))
 (let ((?x3213 (* (- 108) ?x805)))
 (let ((?x882 (* r00 r00 r00 x00)))
 (let ((?x3053 (* (- 432) ?x882)))
 (let ((?x522 (* r00 x00)))
 (let ((?x3029 (* 108 ?x522)))
 (let ((?x518 (+ (* 216 (* r00 s00 x00)) ?x3029 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x3053 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3213 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x3245 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1929 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x1986)))
 (let ((?x143 (* 9 s)))
 (let ((?x987 (* (- 9) s00)))
 (let ((?x916 (* (- 15) ?x591)))
 (let ((?x877 (* r00 r00 x00)))
 (let ((?x890 (* (- 36) ?x877)))
 (let ((?x806 (* 6 ?x805)))
 (let ((?x545 (* s s)))
 (let ((?x569 (* 3 ?x545)))
 (let ((?x551 (* (- 54) ?x522)))
 (let ((?x3181 (+ (* (- 24) (* s r)) ?x551 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x569 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x806 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x890 ?x916 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x987 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x378 (* (- 3) s00)))
 (let ((?x604 (* (- 4) ?x591)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x536 (* (- 18) ?x522)))
 (let ((?x2935 (+ (* (- 9) (* s r)) ?x536 (* 9 (* r00 s00)) ?x546 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x604 (* 18 (* r00 x)) ?x378 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2815 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x378 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x2436 (= (+ s00 ?x280 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2827 (and $x2436 (= ?x2815 0) (= ?x2935 0) (= ?x3181 0) (= ?x518 0) (not (= ?x5339 0)))))
 (let ((?x213 (- x s)))
 (let ((?x212 (+ s ?x211 3)))
 (let ((?x216 (+ r 1)))
 (let ((?x219 (- (* 2 ?x212 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x227 (+ (- ?x219 (* 6 ?x216 r00 r00 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 3 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 ?x216 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 r00 r00 ?x212 ?x212 ?x213 ?x213 ?x213) (* 9 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 3 ?x216 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x231 (- (- ?x227 (* 3 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 r00 ?x212 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x234 (+ ?x231 (* 18 ?x216 ?x212 ?x212 ?x213 ?x213 ?x213 ?x213) (* 6 ?x216 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x239 (- (- ?x234 (* 6 r00 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x242 (+ (- ?x239 (* 9 ?x216 ?x216 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x216 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x246 (- (- ?x242 (* 3 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 6 ?x216 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x251 (- (+ ?x246 (* 7 ?x216 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 ?x213))))
 (let ((?x254 (+ ?x251 (* 2 ?x212 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213) (* 6 ?x216 ?x216 r00 ?x212 s00 ?x213 ?x213 ?x213))))
 (let ((?x259 (+ (- ?x254 (* 9 r00 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 6 r00 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213) (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x263 (+ (- ?x259 (* 18 ?x216 r00 ?x212 ?x213 ?x213 ?x213 ?x213)) (* 9 ?x216 r00 ?x212 ?x212 ?x213 ?x213 ?x213))))
 (let ((?x269 (- (- ?x263 (* 6 ?x216 r00 ?x212 ?x212 s00 ?x213 ?x213 ?x213)) (* 4 ?x212 ?x212 s00 s00 ?x213 ?x213 ?x213))))
 (let ((?x272 (+ (- ?x269 (* 11 ?x216 ?x212 ?x212 ?x212 ?x213 ?x213 ?x213)) (* 18 ?x216 ?x216 ?x212 ?x213 ?x213 ?x213 x00))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x276 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x272 0))))))
 (rewrite (= $x276 $x2827))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x278 (asserted $x277)))
 (let ((@x4638 (mp (mp @x278 (quant-intro (proof-bind ?x2796) (= $x277 $x2742)) $x2742) (rewrite (= $x2742 $x2742)) $x2742)))
 (let ((@x3350 (mp~ (mp @x4638 (quant-intro (proof-bind ?x1178) (= $x2742 $x1165)) $x1165) (sk (~ $x1165 $x3512)) $x3512)))
 (let ((@x4812 (mp @x3350 (rewrite (= $x3512 $x3140)) $x3140)))
 (let ((@x5052 (and-elim @x4812 $x3533)))
 (let ((@x1887 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3533) $x2601)) @x5052 $x2601)))
 (let (($x2672 (>= ?x3376 0)))
 (let ((@x2767 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3533) $x2672)) @x5052 $x2672)))
 (let (($x3119 (<= ?x3549 0)))
 (let ((@x1683 (and-elim @x4812 $x1112)))
 (let ((@x1991 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1112) $x3119)) @x1683 $x3119)))
 (let (($x609 (>= ?x3549 0)))
 (let ((@x823 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1112) $x609)) @x1683 $x609)))
 (let (($x605 (<= ?x1544 0)))
 (let ((@x1486 (and-elim @x4812 $x3615)))
 (let ((@x4727 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3615) $x605)) @x1486 $x605)))
 (let (($x611 (>= ?x1544 0)))
 (let ((@x3553 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3615) $x611)) @x1486 $x611)))
 (let (($x2567 (<= ?x3334 0)))
 (let ((@x5250 (and-elim @x4812 $x3728)))
 (let ((@x1998 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3728) $x2567)) @x5250 $x2567)))
 (let (($x3179 (>= ?x3334 0)))
 (let ((@x1143 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3728) $x3179)) @x5250 $x3179)))
 (let (($x1973 (not (<= ?x4787 0))))
 (let (($x3632 (>= ?x4787 0)))
 (let ((@x4791 ((_ th-lemma arith) (hypothesis (not $x3632)) @x2767 @x1887 @x3553 @x4727 @x1143 @x1998 @x1143 @x1998 @x3553 @x4727 @x823 @x1991 @x2767 @x1887 false)))
 (let ((@x1789 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x4811 $x1973 (not $x3632))) (and-elim @x4812 $x2522) (or $x1973 (not $x3632)))))
 ((_ th-lemma arith) (unit-resolution @x1789 (lemma @x4791 $x3632) $x1973) @x2767 @x1887 @x3553 @x4727 @x1143 @x1998 @x1143 @x1998 @x3553 @x4727 @x823 @x1991 @x2767 @x1887 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        27
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1468
 :arith-nonlinear-bounds    20
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      9
 :arith-tableau-max-columns 252
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                20.51
 :memory                    19.61
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                1644747
 :num-checks                1
 :propagations              12
 :rlimit-count              48838
 :time                      0.05
 :total-time                0.07)
