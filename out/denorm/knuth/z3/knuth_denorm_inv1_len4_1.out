unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x2005 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 4) (* d!1 x!0)) (* (- 1) (* d!1 d!1 q!3)) (* (- 8) r!2) (* 2 (* d!1 q!3)) (* 4 (* r!2 d!1)))))
 (let (($x1403 (>= ?x2005 0)))
 (let (($x2009 (= ?x2005 0)))
 (let ((?x1899 (* r!2 d!1)))
 (let ((?x1682 (* (- 4) ?x1899)))
 (let ((?x2248 (* 8 r!2)))
 (let ((?x1497 (* d!1 d!1 q!3)))
 (let ((?x303 (* r00 d00)))
 (let ((?x304 (* 4 ?x303)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x212 (+ ?x168 ?x216 ?x200 ?x266 ?x304 (* 4 (* d!1 x!0)) ?x1497 ?x2248 (* (- 2) (* d!1 q!3)) ?x1682)))
 (let ((?x2391 (* r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1828 (* 66 ?x2391)))
 (let ((?x2185 (* r!2 r!2 r!2 d!1)))
 (let ((?x981 (* 792 ?x2185)))
 (let ((?x761 (* (- 2) (* r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x1322 (* 4 (* r!2 r!2 r!2 x!0))))
 (let ((?x2257 (* 4 (* r!2 r!2 r!2 d!1 x!0))))
 (let ((?x1856 (* r!2 r!2 r!2)))
 (let ((?x1138 (* 528 ?x1856)))
 (let ((?x1999 (* 6 (* r!2 r!2 r!2 d!1 d!1 q!3 q!3))))
 (let ((?x1320 (* 12 (* r!2 r!2 r!2 d!1 q!3 q!3))))
 (let ((?x1212 (* r!2 r!2 r!2 d!1 d!1 x!0)))
 (let ((?x890 (* (- 8) (* r!2 r!2 r!2 r!2))))
 (let ((?x885 (* (- 8) (* r!2 r!2 r!2 r!2 d!1))))
 (let ((?x1822 (* 8 (* r!2 r!2 r!2 q!3 q!3))))
 (let ((?x753 (* r!2 r!2 r!2 d!1 d!1 d!1 q!3 q!3)))
 (let ((?x2003 (* (- 1) x!0)))
 (let ((?x1892 (* (- 2) d!1)))
 (let ((?x2129 (* 2 r!2)))
 (let ((?x2000 (+ (- 4) ?x2129 ?x1892 ?x2003 q!3)))
 (let ((?x1998 (+ 2 d!1)))
 (let ((?x1891 (+ (- 8) q!3)))
 (let ((?x510 (* r!2 r!2 r!2 d!1 d!1)))
 (let ((?x616 (* 396 ?x510)))
 (let ((?x2008 (+ (* ?x1891 ?x1891 ?x1891 ?x1998 ?x2000 ?x2000 ?x2000 r!2) ?x616 (* ?x1891 ?x1891 ?x1998 ?x1998 ?x2000 ?x2000 ?x2000) ?x753 ?x1822 (* (- 196) (* r!2 r!2 r!2 d!1 q!3)) ?x885 ?x890 ?x1212 (* (- 97) (* r!2 r!2 r!2 d!1 d!1 q!3)) ?x1320 ?x1999 (* (- 132) (* r!2 r!2 r!2 q!3)) ?x1138 ?x2257 (* (- 16) (* r!2 r!2 r!2 d!1 d!1 d!1 q!3)) ?x1322 ?x761 ?x981 ?x1828)))
 (let ((?x1855 (* ?x2008 ?x212)))
 (let (($x280 (= ?x1855 0)))
 (let (($x1993 (not $x280)))
 (let ((?x1337 (+ ?x2129 ?x2003 q!3)))
 (let ((?x1454 (+ (* 12 (* r!2 r!2 x!0 x!0 q!3 q!3 q!3)) (* 12 (* r!2 r!2 r!2 d!1 q!3 q!3 q!3 q!3)) (* 6 (* r!2 r!2 d!1 q!3 q!3 q!3 q!3 q!3)) (* 16 (* r!2 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 2) (* r!2 x!0 x!0 x!0 q!3 q!3 q!3)) ?x753 ?x1822 (* (- 4) (* r!2 r!2 r!2 d!1 q!3)) ?x885 ?x890 (* 12 (* r!2 r!2 q!3 q!3 q!3 q!3 q!3)) (* 24 (* r!2 r!2 r!2 q!3 q!3 q!3 q!3)) ?x1212 (* (- 12) (* r!2 r!2 r!2 d!1 x!0 q!3 q!3 q!3)) (* ?x1998 ?x1998 ?x1337 ?x1337 ?x1337 q!3 q!3) (* 2 (* r!2 q!3 q!3 q!3 q!3 q!3 q!3)) (* (- 6) (* r!2 x!0 q!3 q!3 q!3 q!3 q!3)) (* (- 1) (* r!2 r!2 r!2 d!1 d!1 q!3)) (* (- 24) (* r!2 r!2 r!2 x!0 q!3 q!3 q!3)) ?x1320 ?x1999 (* 6 (* r!2 x!0 x!0 q!3 q!3 q!3 q!3)) (* (- 12) (* r!2 r!2 d!1 x!0 q!3 q!3 q!3 q!3)) (* (- 4) (* r!2 r!2 r!2 q!3)) ?x2257 (* (- 24) (* r!2 r!2 x!0 q!3 q!3 q!3 q!3)) (* 3 (* r!2 d!1 x!0 x!0 q!3 q!3 q!3 q!3)) (* (- 1) (* r!2 d!1 x!0 x!0 x!0 q!3 q!3 q!3)) ?x1322 (* r!2 d!1 q!3 q!3 q!3 q!3 q!3 q!3) ?x761 (* (- 3) (* r!2 d!1 x!0 q!3 q!3 q!3 q!3 q!3)) (* 8 (* r!2 r!2 r!2 r!2 d!1 q!3 q!3 q!3)) (* 6 (* r!2 r!2 d!1 x!0 x!0 q!3 q!3 q!3)))))
 (let ((?x1244 (* ?x1454 ?x212)))
 (let (($x485 (= ?x1244 0)))
 (let ((?x1278 (* 17 ?x2391)))
 (let ((?x1827 (* 204 ?x2185)))
 (let ((?x812 (* (- 1) d!1)))
 (let ((?x1478 (+ (- 2) ?x2129 ?x812 ?x2003 q!3)))
 (let ((?x1826 (+ (- 4) q!3)))
 (let ((?x546 (* 136 ?x1856)))
 (let ((?x611 (* 102 ?x510)))
 (let ((?x1957 (+ ?x611 ?x753 ?x1822 (* (- 100) (* r!2 r!2 r!2 d!1 q!3)) ?x885 ?x890 ?x1212 (* (- 49) (* r!2 r!2 r!2 d!1 d!1 q!3)) ?x1320 ?x1999 (* ?x1826 ?x1826 ?x1998 ?x1998 ?x1478 ?x1478 ?x1478) (* (- 68) (* r!2 r!2 r!2 q!3)) ?x546 ?x2257 (* (- 8) (* r!2 r!2 r!2 d!1 d!1 d!1 q!3)) (* ?x1826 ?x1826 ?x1826 ?x1998 ?x1478 ?x1478 ?x1478 r!2) ?x1322 ?x761 ?x1827 ?x1278)))
 (let ((?x1261 (* ?x1957 ?x212)))
 (let (($x2013 (= ?x1261 0)))
 (let ((?x2021 (* 15 ?x2391)))
 (let ((?x809 (* 180 ?x2185)))
 (let ((?x553 (* 120 ?x1856)))
 (let ((?x845 (+ 2 ?x2129 d!1 ?x2003 q!3)))
 (let ((?x213 (+ 4 q!3)))
 (let ((?x1695 (* 90 ?x510)))
 (let ((?x1817 (+ (* ?x1998 ?x1998 ?x213 ?x213 ?x845 ?x845 ?x845) ?x1695 ?x753 ?x1822 (* 92 (* r!2 r!2 r!2 d!1 q!3)) (* ?x1998 ?x213 ?x213 ?x213 ?x845 ?x845 ?x845 r!2) ?x885 ?x890 ?x1212 (* 47 (* r!2 r!2 r!2 d!1 d!1 q!3)) ?x1320 ?x1999 (* 60 (* r!2 r!2 r!2 q!3)) ?x553 ?x2257 (* 8 (* r!2 r!2 r!2 d!1 d!1 d!1 q!3)) ?x1322 ?x761 ?x809 ?x2021)))
 (let ((?x509 (* ?x1817 ?x212)))
 (let (($x190 (= ?x509 0)))
 (let (($x962 (not $x190)))
 (let (($x1526 (or $x962 (not $x2013) (not $x485) $x1993)))
 (let (($x1502 (and $x2009 $x1526)))
 (let ((?x2295 (+ ?x2248 ?x168 ?x216 ?x200 ?x266 ?x304 (* 4 (* x!0 d!1)) (* (- 2) (* q!3 d!1)) ?x1682 (* q!3 d!1 d!1))))
 (let ((?x1867 (* 8 (* q!3 q!3 r!2 r!2 r!2))))
 (let ((?x378 (* r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x1189 (+ (- 2) q!3 ?x2129 ?x2003 ?x812)))
 (let ((?x214 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1328 (* 6 (* q!3 q!3 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x1080 (* 12 (* q!3 q!3 r!2 r!2 r!2 d!1))))
 (let ((?x2071 (* 4 (* r!2 r!2 r!2 x!0 d!1))))
 (let ((?x534 (+ (* ?x1826 ?x1826 ?x1826 ?x1998 ?x1189 ?x1189 ?x1189 r!2) ?x546 (* (- 8) (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) ?x2071 ?x1080 ?x1328 ?x214 (* (- 68) (* q!3 r!2 r!2 r!2)) (* ?x1826 ?x1826 ?x1998 ?x1998 ?x1189 ?x1189 ?x1189) ?x1322 ?x761 ?x885 ?x378 ?x890 ?x1867 ?x1827 ?x611 ?x1278 (* (- 100) (* q!3 r!2 r!2 r!2 d!1)) (* (- 49) (* q!3 r!2 r!2 r!2 d!1 d!1)))))
 (let ((?x1854 (+ q!3 ?x2129 ?x2003)))
 (let ((?x1398 (+ (* (- 3) (* q!3 q!3 q!3 q!3 q!3 r!2 x!0 d!1)) (* 12 (* q!3 q!3 q!3 r!2 r!2 x!0 x!0)) ?x2071 ?x1080 (* 12 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2)) ?x1328 ?x214 (* (- 24) (* q!3 q!3 q!3 q!3 r!2 r!2 x!0)) (* 3 (* q!3 q!3 q!3 q!3 r!2 x!0 x!0 d!1)) (* (- 1) (* q!3 q!3 q!3 r!2 x!0 x!0 x!0 d!1)) (* (- 4) (* q!3 r!2 r!2 r!2)) (* (- 12) (* q!3 q!3 q!3 q!3 r!2 r!2 x!0 d!1)) (* 16 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2)) ?x1322 ?x761 ?x885 ?x378 (* (- 2) (* q!3 q!3 q!3 r!2 x!0 x!0 x!0)) ?x890 (* 6 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 d!1)) (* q!3 q!3 q!3 q!3 q!3 q!3 r!2 d!1) (* 6 (* q!3 q!3 q!3 r!2 r!2 x!0 x!0 d!1)) (* 6 (* q!3 q!3 q!3 q!3 r!2 x!0 x!0)) (* 2 (* q!3 q!3 q!3 q!3 q!3 q!3 r!2)) (* 12 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1)) (* 8 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1)) (* (- 6) (* q!3 q!3 q!3 q!3 q!3 r!2 x!0)) (* (- 24) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* 24 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2)) (* (- 12) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)) (* ?x1998 ?x1998 ?x1854 ?x1854 ?x1854 q!3 q!3) ?x1867 (* (- 4) (* q!3 r!2 r!2 r!2 d!1)) (* (- 1) (* q!3 r!2 r!2 r!2 d!1 d!1)))))
 (let ((?x220 (+ (- 4) q!3 ?x2129 ?x2003 ?x1892)))
 (let ((?x617 (+ ?x1138 (* (- 16) (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) ?x2071 ?x1080 ?x1328 ?x214 (* ?x1891 ?x1891 ?x1998 ?x1998 ?x220 ?x220 ?x220) (* (- 132) (* q!3 r!2 r!2 r!2)) ?x1322 ?x761 ?x885 ?x378 (* ?x1891 ?x1891 ?x1891 ?x1998 ?x220 ?x220 ?x220 r!2) ?x890 ?x1867 ?x981 ?x616 ?x1828 (* (- 196) (* q!3 r!2 r!2 r!2 d!1)) (* (- 97) (* q!3 r!2 r!2 r!2 d!1 d!1)))))
 (let ((?x2079 (+ 2 q!3 ?x2129 ?x2003 d!1)))
 (let ((?x1511 (+ ?x553 (* 8 (* q!3 r!2 r!2 r!2 d!1 d!1 d!1)) ?x2071 ?x1080 ?x1328 ?x214 (* 60 (* q!3 r!2 r!2 r!2)) ?x1322 ?x761 ?x885 ?x378 (* ?x1998 ?x213 ?x213 ?x213 ?x2079 ?x2079 ?x2079 r!2) ?x890 (* ?x1998 ?x1998 ?x213 ?x213 ?x2079 ?x2079 ?x2079) ?x1867 ?x809 ?x1695 ?x2021 (* 92 (* q!3 r!2 r!2 r!2 d!1)) (* 47 (* q!3 r!2 r!2 r!2 d!1 d!1)))))
 (let (($x1191 (or (not (= (* ?x1511 ?x2295) 0)) (not (= (* ?x617 ?x2295) 0)) (not (= (* ?x1398 ?x2295) 0)) (not (= (* ?x534 ?x2295) 0)))))
 (let (($x2336 (and (= ?x2295 0) $x1191)))
 (let (($x1437 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2381 (* q d d)))
 (let ((?x2329 (* r d)))
 (let ((?x2330 (* (- 4) ?x2329)))
 (let ((?x2332 (* (- 2) (* q d))))
 (let ((?x2478 (* 4 (* x d))))
 (let ((?x303 (* r00 d00)))
 (let ((?x304 (* 4 ?x303)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x197 (* 8 r)))
 (let ((?x1069 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 ?x2332 ?x2330 ?x2381)))
 (let ((?x2557 (* q r r r d d)))
 (let ((?x210 (* (- 49) ?x2557)))
 (let ((?x2543 (* q r r r d)))
 (let ((?x1143 (* (- 100) ?x2543)))
 (let ((?x2541 (* r r r d d d)))
 (let ((?x2410 (* 17 ?x2541)))
 (let ((?x2496 (* r r r d d)))
 (let ((?x2180 (* 102 ?x2496)))
 (let ((?x2494 (* r r r d)))
 (let ((?x2178 (* 204 ?x2494)))
 (let ((?x2490 (* 8 (* q q r r r))))
 (let ((?x1631 (* (- 8) (* r r r r))))
 (let ((?x1318 (* r r r x d d)))
 (let ((?x1622 (* (- 8) (* r r r r d))))
 (let ((?x1168 (* (- 2) (* r r r r d d))))
 (let ((?x1141 (* 4 (* r r r x))))
 (let ((?x2587 (* (- 1) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x133 (* 2 r)))
 (let ((?x1922 (+ (- 2) q ?x133 ?x165 ?x2587)))
 (let ((?x2563 (+ 2 d)))
 (let ((?x2586 (+ (- 4) q)))
 (let ((?x1098 (* ?x2586 ?x2586 ?x2563 ?x2563 ?x1922 ?x1922 ?x1922)))
 (let ((?x853 (* q r r r)))
 (let ((?x2407 (* (- 68) ?x853)))
 (let ((?x439 (* q q r r r d d d)))
 (let ((?x438 (* 6 (* q q r r r d d))))
 (let ((?x425 (* q q r r r d)))
 (let ((?x2397 (* 12 ?x425)))
 (let ((?x1811 (* 4 (* r r r x d))))
 (let ((?x340 (* q r r r d d d)))
 (let ((?x2585 (* (- 8) ?x340)))
 (let ((?x321 (* r r r)))
 (let ((?x2584 (* 136 ?x321)))
 (let ((?x269 (* ?x2586 ?x2586 ?x2586 ?x2563 ?x1922 ?x1922 ?x1922 r)))
 (let ((?x2304 (+ ?x269 ?x2584 ?x2585 ?x1811 ?x2397 ?x438 ?x439 ?x2407 ?x1098 ?x1141 ?x1168 ?x1622 ?x1318 ?x1631 ?x2490 ?x2178 ?x2180 ?x2410 ?x1143 ?x210)))
 (let ((?x1651 (* (- 1) ?x2557)))
 (let ((?x1652 (* (- 4) ?x2543)))
 (let ((?x1659 (+ q ?x133 ?x165)))
 (let ((?x2473 (* ?x2563 ?x2563 ?x1659 ?x1659 ?x1659 q q)))
 (let ((?x594 (* (- 12) (* q q q r r r x d))))
 (let ((?x2414 (* 8 (* q q q r r r r d))))
 (let ((?x2232 (* 12 (* q q q q r r r d))))
 (let ((?x2230 (* 2 (* q q q q q q r))))
 (let ((?x511 (* 6 (* q q q r r x x d))))
 (let ((?x1769 (* q q q q q q r d)))
 (let ((?x1768 (* 6 (* q q q q q r r d))))
 (let ((?x647 (* (- 12) (* q q q q r r x d))))
 (let ((?x1653 (* (- 4) ?x853)))
 (let ((?x640 (* (- 1) (* q q q r x x x d))))
 (let ((?x649 (* 3 (* q q q q r x x d))))
 (let ((?x658 (* (- 3) (* q q q q q r x d))))
 (let ((?x1274 (+ ?x658 (* 12 (* q q q r r x x)) ?x1811 ?x2397 (* 12 (* q q q q q r r)) ?x438 ?x439 (* (- 24) (* q q q q r r x)) ?x649 ?x640 ?x1653 ?x647 (* 16 (* q q q r r r r)) ?x1141 ?x1168 ?x1622 ?x1318 (* (- 2) (* q q q r x x x)) ?x1631 ?x1768 ?x1769 ?x511 (* 6 (* q q q q r x x)) ?x2230 ?x2232 ?x2414 (* (- 6) (* q q q q q r x)) (* (- 24) (* q q q r r r x)) (* 24 (* q q q q r r r)) ?x594 ?x2473 ?x2490 ?x1652 ?x1651)))
 (let ((?x2613 (* 66 ?x2541)))
 (let ((?x1173 (* 396 ?x2496)))
 (let ((?x1176 (* 792 ?x2494)))
 (let ((?x2620 (* (- 2) d)))
 (let ((?x420 (+ (- 4) q ?x133 ?x165 ?x2620)))
 (let ((?x2619 (+ (- 8) q)))
 (let ((?x1569 (* ?x2619 ?x2619 ?x2619 ?x2563 ?x420 ?x420 ?x420 r)))
 (let ((?x2616 (* (- 132) ?x853)))
 (let ((?x469 (* ?x2619 ?x2619 ?x2563 ?x2563 ?x420 ?x420 ?x420)))
 (let ((?x2618 (* (- 16) ?x340)))
 (let ((?x2617 (* 528 ?x321)))
 (let ((?x1153 (+ ?x2617 ?x2618 ?x1811 ?x2397 ?x438 ?x439 ?x469 ?x2616 ?x1141 ?x1168 ?x1622 ?x1318 ?x1569 ?x1631 ?x2490 ?x1176 ?x1173 ?x2613 (* (- 196) ?x2543) (* (- 97) ?x2557))))
 (let ((?x2495 (* 15 ?x2541)))
 (let ((?x1624 (+ 2 q ?x133 ?x165 d)))
 (let ((?x2561 (+ 4 q)))
 (let ((?x1960 (* ?x2563 ?x2563 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624)))
 (let ((?x1529 (* ?x2563 ?x2561 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624 r)))
 (let ((?x1011 (* 60 ?x853)))
 (let ((?x341 (* 8 ?x340)))
 (let ((?x331 (* 120 ?x321)))
 (let ((?x1180 (+ ?x331 ?x341 ?x1811 ?x2397 ?x438 ?x439 ?x1011 ?x1141 ?x1168 ?x1622 ?x1318 ?x1529 ?x1631 ?x1960 ?x2490 (* 180 ?x2494) (* 90 ?x2496) ?x2495 (* 92 ?x2543) (* 47 ?x2557))))
 (let (($x242 (or (not (= (* ?x1180 ?x1069) 0)) (not (= (* ?x1153 ?x1069) 0)) (not (= (* ?x1274 ?x1069) 0)) (not (= (* ?x2304 ?x1069) 0)))))
 (let (($x354 (= ?x1069 0)))
 (and $x354 $x242))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1572 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2381 (* q d d)))
 (let ((?x2329 (* r d)))
 (let ((?x2330 (* (- 4) ?x2329)))
 (let ((?x2332 (* (- 2) (* q d))))
 (let ((?x2607 (* 16 d)))
 (let ((?x2478 (* 4 (* x d))))
 (let ((?x303 (* r00 d00)))
 (let ((?x304 (* 4 ?x303)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x197 (* 8 r)))
 (let ((?x1633 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 (* (- 8) (* d 2)) ?x2607 ?x2332 ?x2330 ?x2381)))
 (let ((?x2557 (* q r r r d d)))
 (let ((?x210 (* (- 49) ?x2557)))
 (let ((?x2543 (* q r r r d)))
 (let ((?x1143 (* (- 100) ?x2543)))
 (let ((?x2541 (* r r r d d d)))
 (let ((?x2613 (* 66 ?x2541)))
 (let ((?x2496 (* r r r d d)))
 (let ((?x1173 (* 396 ?x2496)))
 (let ((?x2494 (* r r r d)))
 (let ((?x1176 (* 792 ?x2494)))
 (let ((?x2490 (* 8 (* q q r r r))))
 (let ((?x1631 (* (- 8) (* r r r r))))
 (let ((?x2620 (* (- 2) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x133 (* 2 r)))
 (let ((?x420 (+ (- 4) q ?x133 ?x165 ?x2620)))
 (let ((?x2563 (+ 2 d)))
 (let ((?x2619 (+ (- 8) q)))
 (let ((?x1569 (* ?x2619 ?x2619 ?x2619 ?x2563 ?x420 ?x420 ?x420 r)))
 (let ((?x1318 (* r r r x d d)))
 (let ((?x1622 (* (- 8) (* r r r r d))))
 (let ((?x1168 (* (- 2) (* r r r r d d))))
 (let ((?x1141 (* 4 (* r r r x))))
 (let ((?x853 (* q r r r)))
 (let ((?x2407 (* (- 68) ?x853)))
 (let ((?x469 (* ?x2619 ?x2619 ?x2563 ?x2563 ?x420 ?x420 ?x420)))
 (let ((?x439 (* q q r r r d d d)))
 (let ((?x438 (* 6 (* q q r r r d d))))
 (let ((?x425 (* q q r r r d)))
 (let ((?x2397 (* 12 ?x425)))
 (let ((?x1811 (* 4 (* r r r x d))))
 (let ((?x340 (* q r r r d d d)))
 (let ((?x2618 (* (- 16) ?x340)))
 (let ((?x321 (* r r r)))
 (let ((?x2617 (* 528 ?x321)))
 (let ((?x208 (+ ?x2617 ?x2618 ?x1811 ?x2397 ?x438 ?x439 ?x469 ?x2407 ?x1141 (* (- 8) (* q 2 d d r r r)) ?x1168 ?x1622 ?x1318 ?x1569 ?x1631 (* (- 8) (* q 2 2 2 r r r)) (* (- 8) (* q 2 d 2 r r r)) (* (- 8) (* q d d 2 r r r)) (* (- 8) (* q 2 2 d r r r)) (* (- 8) (* q d 2 d r r r)) (* (- 8) (* q d 2 2 r r r)) ?x2490 ?x1176 ?x1173 ?x2613 ?x1143 ?x210)))
 (let ((?x2568 (* 2 (* d 4))))
 (let ((?x2403 (* (- 8) d)))
 (let ((?x2542 (* 31 ?x2557)))
 (let ((?x2544 (* 60 ?x2543)))
 (let ((?x2495 (* 15 ?x2541)))
 (let ((?x2497 (* 58 ?x2496)))
 (let ((?x2492 (* 116 ?x2494)))
 (let ((?x2488 (* 2 (* d 2 q q r r r))))
 (let ((?x2417 (* 2 (* d d 4 q r r r))))
 (let ((?x1624 (+ 2 q ?x133 ?x165 d)))
 (let ((?x2561 (+ 4 q)))
 (let ((?x1960 (* ?x2563 ?x2563 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624)))
 (let ((?x851 (* 2 (* d 2 4 q r r r))))
 (let ((?x1529 (* ?x2563 ?x2561 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624 r)))
 (let ((?x270 (* 2 (* d 2 4 4 r r r))))
 (let ((?x856 (* 2 (* d d q 4 r r r))))
 (let ((?x236 (* 2 (* d 2 q 4 r r r))))
 (let ((?x1011 (* 60 ?x853)))
 (let ((?x426 (* 8 ?x425)))
 (let ((?x341 (* 8 ?x340)))
 (let ((?x331 (* 120 ?x321)))
 (let ((?x1017 (* 2 (* d d 4 4 r r r))))
 (let ((?x1597 (+ ?x1017 ?x331 ?x341 ?x1811 ?x426 ?x438 ?x439 ?x1011 ?x236 ?x856 ?x270 ?x1141 ?x1168 ?x1622 ?x1318 ?x1529 ?x851 ?x1631 ?x1960 ?x2417 ?x2488 ?x2490 ?x2492 ?x2497 ?x2495 ?x2544 ?x2542)))
 (let ((?x1582 (* ?x1597 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 ?x2403 ?x2332 ?x2330 ?x2381 ?x2568))))
 (let ((?x2572 (* 8 d)))
 (let ((?x1392 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 (* (- 4) (* d 2)) ?x2572 ?x2332 ?x2330 ?x2381)))
 (let ((?x2410 (* 17 ?x2541)))
 (let ((?x2180 (* 102 ?x2496)))
 (let ((?x2178 (* 204 ?x2494)))
 (let ((?x2587 (* (- 1) d)))
 (let ((?x1922 (+ (- 2) q ?x133 ?x165 ?x2587)))
 (let ((?x2586 (+ (- 4) q)))
 (let ((?x1098 (* ?x2586 ?x2586 ?x2563 ?x2563 ?x1922 ?x1922 ?x1922)))
 (let ((?x2585 (* (- 8) ?x340)))
 (let ((?x2584 (* 136 ?x321)))
 (let ((?x269 (* ?x2586 ?x2586 ?x2586 ?x2563 ?x1922 ?x1922 ?x1922 r)))
 (let ((?x2175 (+ ?x269 ?x2584 ?x2585 ?x1811 ?x2397 ?x438 ?x439 (* (- 36) ?x853) ?x1098 ?x1141 (* (- 4) (* q 2 d d r r r)) ?x1168 ?x1622 ?x1318 ?x1631 (* (- 4) (* q 2 2 2 r r r)) (* (- 4) (* q 2 d 2 r r r)) (* (- 4) (* q d d 2 r r r)) (* (- 4) (* q 2 2 d r r r)) (* (- 4) (* q d 2 d r r r)) (* (- 4) (* q d 2 2 r r r)) ?x2490 ?x2178 ?x2180 ?x2410 (* (- 52) ?x2543) (* (- 25) ?x2557))))
 (let ((?x1069 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 ?x2332 ?x2330 ?x2381)))
 (let ((?x1651 (* (- 1) ?x2557)))
 (let ((?x1652 (* (- 4) ?x2543)))
 (let ((?x1659 (+ q ?x133 ?x165)))
 (let ((?x2473 (* ?x2563 ?x2563 ?x1659 ?x1659 ?x1659 q q)))
 (let ((?x594 (* (- 12) (* q q q r r r x d))))
 (let ((?x2414 (* 8 (* q q q r r r r d))))
 (let ((?x2232 (* 12 (* q q q q r r r d))))
 (let ((?x511 (* 6 (* q q q r r x x d))))
 (let ((?x1769 (* q q q q q q r d)))
 (let ((?x1768 (* 6 (* q q q q q r r d))))
 (let ((?x647 (* (- 12) (* q q q q r r x d))))
 (let ((?x1653 (* (- 4) ?x853)))
 (let ((?x640 (* (- 1) (* q q q r x x x d))))
 (let ((?x649 (* 3 (* q q q q r x x d))))
 (let ((?x658 (* (- 3) (* q q q q q r x d))))
 (let ((?x1805 (+ ?x658 ?x1811 ?x426 ?x438 ?x439 (* 2 (* q ?x165 q r q q q)) (* 2 (* ?x165 q q r q q q)) ?x649 (* 2 (* q q ?x165 r q q q)) (* 2 (* q ?x165 ?x133 r q q q)) ?x640 (* 2 (* ?x165 ?x165 q r q q q)) (* 2 (* ?x165 ?x133 ?x133 r q q q)) ?x1653 (* 2 (* ?x165 q ?x165 r q q q)) (* 2 (* d 2 r r r q q)) ?x647 (* 2 (* q ?x133 ?x133 r q q q)) ?x1141 (* 2 (* q q ?x133 r q q q)) (* 2 (* q q q r q q q)) ?x1168 ?x1622 ?x1318 (* 2 (* ?x165 q ?x133 r q q q)) (* 2 (* ?x133 q ?x133 r q q q)) (* 2 (* ?x133 q q r q q q)) ?x1631 (* 2 (* ?x133 ?x165 q r q q q)) ?x1768 ?x1769 ?x511 (* 2 (* q ?x133 ?x165 r q q q)) ?x2232 ?x2414 (* 2 (* ?x165 ?x165 ?x165 r q q q)) (* 2 (* ?x133 ?x165 ?x165 r q q q)) ?x594 ?x2473 (* 2 (* ?x133 ?x133 ?x133 r q q q)) (* 2 (* q ?x165 ?x165 r q q q)) ?x2490 (* 2 (* ?x165 ?x133 ?x165 r q q q)) (* 2 (* q ?x133 q r q q q)) (* 2 (* ?x165 ?x165 ?x133 r q q q)) (* 2 (* ?x133 ?x165 ?x133 r q q q)) ?x1652 (* 2 (* ?x133 ?x133 ?x165 r q q q)) (* 2 (* ?x133 q ?x165 r q q q)) (* 2 (* ?x133 ?x133 q r q q q)) (* 2 (* ?x165 ?x133 q r q q q)) ?x1651)))
 (let (($x295 (or (not (= (* ?x1805 ?x1069) 0)) (not (= (* ?x2175 ?x1392) 0)) (not (= ?x1582 0)) (not (= (* ?x208 ?x1633) 0)))))
 (let (($x354 (= ?x1069 0)))
 (and $x354 $x295)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1381 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2381 (* q d d)))
 (let ((?x2329 (* r d)))
 (let ((?x2330 (* (- 4) ?x2329)))
 (let ((?x2332 (* (- 2) (* q d))))
 (let ((?x2478 (* 4 (* x d))))
 (let ((?x303 (* r00 d00)))
 (let ((?x304 (* 4 ?x303)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x197 (* 8 r)))
 (let ((?x1069 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 ?x2332 ?x2330 ?x2381)))
 (let ((?x2557 (* q r r r d d)))
 (let ((?x210 (* (- 49) ?x2557)))
 (let ((?x2543 (* q r r r d)))
 (let ((?x1143 (* (- 100) ?x2543)))
 (let ((?x2541 (* r r r d d d)))
 (let ((?x2410 (* 17 ?x2541)))
 (let ((?x2496 (* r r r d d)))
 (let ((?x2180 (* 102 ?x2496)))
 (let ((?x2494 (* r r r d)))
 (let ((?x2178 (* 204 ?x2494)))
 (let ((?x2490 (* 8 (* q q r r r))))
 (let ((?x1631 (* (- 8) (* r r r r))))
 (let ((?x1318 (* r r r x d d)))
 (let ((?x1622 (* (- 8) (* r r r r d))))
 (let ((?x1168 (* (- 2) (* r r r r d d))))
 (let ((?x1141 (* 4 (* r r r x))))
 (let ((?x2587 (* (- 1) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x133 (* 2 r)))
 (let ((?x1922 (+ (- 2) q ?x133 ?x165 ?x2587)))
 (let ((?x2563 (+ 2 d)))
 (let ((?x2586 (+ (- 4) q)))
 (let ((?x1098 (* ?x2586 ?x2586 ?x2563 ?x2563 ?x1922 ?x1922 ?x1922)))
 (let ((?x853 (* q r r r)))
 (let ((?x2407 (* (- 68) ?x853)))
 (let ((?x439 (* q q r r r d d d)))
 (let ((?x438 (* 6 (* q q r r r d d))))
 (let ((?x425 (* q q r r r d)))
 (let ((?x2397 (* 12 ?x425)))
 (let ((?x1811 (* 4 (* r r r x d))))
 (let ((?x340 (* q r r r d d d)))
 (let ((?x2585 (* (- 8) ?x340)))
 (let ((?x321 (* r r r)))
 (let ((?x2584 (* 136 ?x321)))
 (let ((?x269 (* ?x2586 ?x2586 ?x2586 ?x2563 ?x1922 ?x1922 ?x1922 r)))
 (let ((?x2304 (+ ?x269 ?x2584 ?x2585 ?x1811 ?x2397 ?x438 ?x439 ?x2407 ?x1098 ?x1141 ?x1168 ?x1622 ?x1318 ?x1631 ?x2490 ?x2178 ?x2180 ?x2410 ?x1143 ?x210)))
 (let ((?x1651 (* (- 1) ?x2557)))
 (let ((?x1652 (* (- 4) ?x2543)))
 (let ((?x1659 (+ q ?x133 ?x165)))
 (let ((?x2473 (* ?x2563 ?x2563 ?x1659 ?x1659 ?x1659 q q)))
 (let ((?x594 (* (- 12) (* q q q r r r x d))))
 (let ((?x2414 (* 8 (* q q q r r r r d))))
 (let ((?x2232 (* 12 (* q q q q r r r d))))
 (let ((?x2230 (* 2 (* q q q q q q r))))
 (let ((?x511 (* 6 (* q q q r r x x d))))
 (let ((?x1769 (* q q q q q q r d)))
 (let ((?x1768 (* 6 (* q q q q q r r d))))
 (let ((?x647 (* (- 12) (* q q q q r r x d))))
 (let ((?x1653 (* (- 4) ?x853)))
 (let ((?x640 (* (- 1) (* q q q r x x x d))))
 (let ((?x649 (* 3 (* q q q q r x x d))))
 (let ((?x658 (* (- 3) (* q q q q q r x d))))
 (let ((?x1274 (+ ?x658 (* 12 (* q q q r r x x)) ?x1811 ?x2397 (* 12 (* q q q q q r r)) ?x438 ?x439 (* (- 24) (* q q q q r r x)) ?x649 ?x640 ?x1653 ?x647 (* 16 (* q q q r r r r)) ?x1141 ?x1168 ?x1622 ?x1318 (* (- 2) (* q q q r x x x)) ?x1631 ?x1768 ?x1769 ?x511 (* 6 (* q q q q r x x)) ?x2230 ?x2232 ?x2414 (* (- 6) (* q q q q q r x)) (* (- 24) (* q q q r r r x)) (* 24 (* q q q q r r r)) ?x594 ?x2473 ?x2490 ?x1652 ?x1651)))
 (let ((?x2613 (* 66 ?x2541)))
 (let ((?x1173 (* 396 ?x2496)))
 (let ((?x1176 (* 792 ?x2494)))
 (let ((?x2620 (* (- 2) d)))
 (let ((?x420 (+ (- 4) q ?x133 ?x165 ?x2620)))
 (let ((?x2619 (+ (- 8) q)))
 (let ((?x1569 (* ?x2619 ?x2619 ?x2619 ?x2563 ?x420 ?x420 ?x420 r)))
 (let ((?x2616 (* (- 132) ?x853)))
 (let ((?x469 (* ?x2619 ?x2619 ?x2563 ?x2563 ?x420 ?x420 ?x420)))
 (let ((?x2618 (* (- 16) ?x340)))
 (let ((?x2617 (* 528 ?x321)))
 (let ((?x1153 (+ ?x2617 ?x2618 ?x1811 ?x2397 ?x438 ?x439 ?x469 ?x2616 ?x1141 ?x1168 ?x1622 ?x1318 ?x1569 ?x1631 ?x2490 ?x1176 ?x1173 ?x2613 (* (- 196) ?x2543) (* (- 97) ?x2557))))
 (let ((?x2495 (* 15 ?x2541)))
 (let ((?x1624 (+ 2 q ?x133 ?x165 d)))
 (let ((?x2561 (+ 4 q)))
 (let ((?x1960 (* ?x2563 ?x2563 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624)))
 (let ((?x1529 (* ?x2563 ?x2561 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624 r)))
 (let ((?x1011 (* 60 ?x853)))
 (let ((?x341 (* 8 ?x340)))
 (let ((?x331 (* 120 ?x321)))
 (let ((?x1180 (+ ?x331 ?x341 ?x1811 ?x2397 ?x438 ?x439 ?x1011 ?x1141 ?x1168 ?x1622 ?x1318 ?x1529 ?x1631 ?x1960 ?x2490 (* 180 ?x2494) (* 90 ?x2496) ?x2495 (* 92 ?x2543) (* 47 ?x2557))))
 (let (($x242 (or (not (= (* ?x1180 ?x1069) 0)) (not (= (* ?x1153 ?x1069) 0)) (not (= (* ?x1274 ?x1069) 0)) (not (= (* ?x2304 ?x1069) 0)))))
 (let (($x354 (= ?x1069 0)))
 (let (($x2394 (and $x354 $x242)))
 (let ((?x2607 (* 16 d)))
 (let ((?x1633 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 (* (- 8) (* d 2)) ?x2607 ?x2332 ?x2330 ?x2381)))
 (let ((?x208 (+ ?x2617 ?x2618 ?x1811 ?x2397 ?x438 ?x439 ?x469 ?x2407 ?x1141 (* (- 8) (* q 2 d d r r r)) ?x1168 ?x1622 ?x1318 ?x1569 ?x1631 (* (- 8) (* q 2 2 2 r r r)) (* (- 8) (* q 2 d 2 r r r)) (* (- 8) (* q d d 2 r r r)) (* (- 8) (* q 2 2 d r r r)) (* (- 8) (* q d 2 d r r r)) (* (- 8) (* q d 2 2 r r r)) ?x2490 ?x1176 ?x1173 ?x2613 ?x1143 ?x210)))
 (let ((?x2568 (* 2 (* d 4))))
 (let ((?x2403 (* (- 8) d)))
 (let ((?x2542 (* 31 ?x2557)))
 (let ((?x2544 (* 60 ?x2543)))
 (let ((?x2497 (* 58 ?x2496)))
 (let ((?x2492 (* 116 ?x2494)))
 (let ((?x2488 (* 2 (* d 2 q q r r r))))
 (let ((?x2417 (* 2 (* d d 4 q r r r))))
 (let ((?x851 (* 2 (* d 2 4 q r r r))))
 (let ((?x270 (* 2 (* d 2 4 4 r r r))))
 (let ((?x856 (* 2 (* d d q 4 r r r))))
 (let ((?x236 (* 2 (* d 2 q 4 r r r))))
 (let ((?x426 (* 8 ?x425)))
 (let ((?x1017 (* 2 (* d d 4 4 r r r))))
 (let ((?x1597 (+ ?x1017 ?x331 ?x341 ?x1811 ?x426 ?x438 ?x439 ?x1011 ?x236 ?x856 ?x270 ?x1141 ?x1168 ?x1622 ?x1318 ?x1529 ?x851 ?x1631 ?x1960 ?x2417 ?x2488 ?x2490 ?x2492 ?x2497 ?x2495 ?x2544 ?x2542)))
 (let ((?x1582 (* ?x1597 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 ?x2403 ?x2332 ?x2330 ?x2381 ?x2568))))
 (let ((?x2572 (* 8 d)))
 (let ((?x1392 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 (* (- 4) (* d 2)) ?x2572 ?x2332 ?x2330 ?x2381)))
 (let ((?x2175 (+ ?x269 ?x2584 ?x2585 ?x1811 ?x2397 ?x438 ?x439 (* (- 36) ?x853) ?x1098 ?x1141 (* (- 4) (* q 2 d d r r r)) ?x1168 ?x1622 ?x1318 ?x1631 (* (- 4) (* q 2 2 2 r r r)) (* (- 4) (* q 2 d 2 r r r)) (* (- 4) (* q d d 2 r r r)) (* (- 4) (* q 2 2 d r r r)) (* (- 4) (* q d 2 d r r r)) (* (- 4) (* q d 2 2 r r r)) ?x2490 ?x2178 ?x2180 ?x2410 (* (- 52) ?x2543) (* (- 25) ?x2557))))
 (let ((?x1805 (+ ?x658 ?x1811 ?x426 ?x438 ?x439 (* 2 (* q ?x165 q r q q q)) (* 2 (* ?x165 q q r q q q)) ?x649 (* 2 (* q q ?x165 r q q q)) (* 2 (* q ?x165 ?x133 r q q q)) ?x640 (* 2 (* ?x165 ?x165 q r q q q)) (* 2 (* ?x165 ?x133 ?x133 r q q q)) ?x1653 (* 2 (* ?x165 q ?x165 r q q q)) (* 2 (* d 2 r r r q q)) ?x647 (* 2 (* q ?x133 ?x133 r q q q)) ?x1141 (* 2 (* q q ?x133 r q q q)) (* 2 (* q q q r q q q)) ?x1168 ?x1622 ?x1318 (* 2 (* ?x165 q ?x133 r q q q)) (* 2 (* ?x133 q ?x133 r q q q)) (* 2 (* ?x133 q q r q q q)) ?x1631 (* 2 (* ?x133 ?x165 q r q q q)) ?x1768 ?x1769 ?x511 (* 2 (* q ?x133 ?x165 r q q q)) ?x2232 ?x2414 (* 2 (* ?x165 ?x165 ?x165 r q q q)) (* 2 (* ?x133 ?x165 ?x165 r q q q)) ?x594 ?x2473 (* 2 (* ?x133 ?x133 ?x133 r q q q)) (* 2 (* q ?x165 ?x165 r q q q)) ?x2490 (* 2 (* ?x165 ?x133 ?x165 r q q q)) (* 2 (* q ?x133 q r q q q)) (* 2 (* ?x165 ?x165 ?x133 r q q q)) (* 2 (* ?x133 ?x165 ?x133 r q q q)) ?x1652 (* 2 (* ?x133 ?x133 ?x165 r q q q)) (* 2 (* ?x133 q ?x165 r q q q)) (* 2 (* ?x133 ?x133 q r q q q)) (* 2 (* ?x165 ?x133 q r q q q)) ?x1651)))
 (let (($x295 (or (not (= (* ?x1805 ?x1069) 0)) (not (= (* ?x2175 ?x1392) 0)) (not (= ?x1582 0)) (not (= (* ?x208 ?x1633) 0)))))
 (let (($x985 (and $x354 $x295)))
 (rewrite (= $x985 $x2394)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x754 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x671 (* 4 (* d00 r00))))
 (let ((?x2620 (* (- 2) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x133 (* 2 r)))
 (let ((?x936 (+ (- 4) ?x133 ?x165 q ?x2620)))
 (let ((?x2563 (+ 2 d)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x2328 (* 4 (* ?x2563 r))))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x508 (* (- 8) x)))
 (let ((?x413 (* 16 r)))
 (let ((?x2521 (+ (- 32) ?x413 ?x508 ?x30 (* (- 16) d) ?x168 ?x2328 ?x200 ?x216 (* (+ (- 8) q) ?x2563 ?x2563) (* (- 2) (* (+ (- 8) q) ?x2563)) ?x266 (* (- 4) (* ?x2563 ?x936)) ?x671)))
 (let ((?x2619 (+ (- 8) q)))
 (let ((?x928 (+ (* ?x2619 ?x2619 ?x2563 ?x2563 ?x936 ?x936 ?x936) (* ?x2619 ?x2619 ?x2563 ?x2563 ?x2563 r r r) (* ?x2619 ?x2619 ?x2619 ?x2563 ?x936 ?x936 ?x936 r) (* (- 1) (* ?x2563 ?x2563 ?x936 r r r)))))
 (let (($x2547 (not (= (* ?x928 ?x2521) 0))))
 (let ((?x2572 (* 8 d)))
 (let ((?x2024 (+ 16 ?x413 ?x508 ?x30 ?x2572 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 (+ 4 q)) (* (- 2) (* ?x2563 (+ 4 q))) ?x266 (* (- 4) (* ?x2563 (+ 2 ?x133 ?x165 q d))) ?x671)))
 (let ((?x1693 (* (- 1) (* ?x2563 ?x2563 (+ 2 ?x133 ?x165 q d) r r r))))
 (let ((?x344 (+ 2 ?x133 ?x165 q d)))
 (let ((?x2561 (+ 4 q)))
 (let ((?x1917 (+ (* ?x2563 ?x2563 ?x2561 ?x2561 ?x344 ?x344 ?x344) (* ?x2563 ?x2563 ?x2563 ?x2561 ?x2561 r r r) (* ?x2563 ?x2561 ?x2561 ?x2561 ?x344 ?x344 ?x344 r) ?x1693)))
 (let (($x2086 (not (= (* ?x1917 ?x2024) 0))))
 (let ((?x2403 (* (- 8) d)))
 (let ((?x933 (+ (- 16) ?x413 ?x508 ?x30 ?x2403 ?x168 ?x2328 ?x200 ?x216 (* (+ (- 4) q) ?x2563 ?x2563) (* (- 2) (* (+ (- 4) q) ?x2563)) ?x266 (* (- 4) (* ?x2563 (+ (- 2) ?x133 ?x165 q (* (- 1) d)))) ?x671)))
 (let ((?x2587 (* (- 1) d)))
 (let ((?x2084 (+ (- 2) ?x133 ?x165 q ?x2587)))
 (let ((?x2586 (+ (- 4) q)))
 (let ((?x2528 (+ (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2084 ?x2084 ?x2084) (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2563 r r r) (* ?x2586 ?x2586 ?x2586 ?x2563 ?x2084 ?x2084 ?x2084 r) (* (- 1) (* ?x2563 ?x2563 ?x2084 r r r)))))
 (let (($x991 (not (= (* ?x2528 ?x933) 0))))
 (let ((?x2438 (+ ?x413 ?x508 ?x30 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 q) (* (- 2) (* ?x2563 q)) ?x266 (* (- 4) (* ?x2563 (+ ?x133 ?x165 q))) ?x671)))
 (let ((?x2465 (+ ?x133 ?x165 q)))
 (let ((?x869 (+ (* ?x2563 ?x2563 ?x2465 ?x2465 ?x2465 q q) (* ?x2563 ?x2563 ?x2563 r r r q q) (* ?x2563 ?x2465 ?x2465 ?x2465 r q q q) (* (- 1) (* ?x2563 ?x2563 ?x2465 r r r)))))
 (let (($x325 (not (= (* ?x869 ?x2438) 0))))
 (let ((?x2478 (* 4 (* x d))))
 (let ((?x197 (* 8 r)))
 (let ((?x1082 (+ ?x197 ?x168 ?x2478 ?x200 ?x216 (* d d q) (* (- 2) (* d q)) ?x266 (* (- 4) (* d r)) ?x671)))
 (let (($x1083 (= ?x1082 0)))
 (and $x1083 (or $x325 $x991 $x2086 $x2547))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x164 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2381 (* q d d)))
 (let ((?x2329 (* r d)))
 (let ((?x2330 (* (- 4) ?x2329)))
 (let ((?x2332 (* (- 2) (* q d))))
 (let ((?x2607 (* 16 d)))
 (let ((?x2478 (* 4 (* x d))))
 (let ((?x303 (* r00 d00)))
 (let ((?x304 (* 4 ?x303)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x197 (* 8 r)))
 (let ((?x1633 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 (* (- 8) (* d 2)) ?x2607 ?x2332 ?x2330 ?x2381)))
 (let ((?x2557 (* q r r r d d)))
 (let ((?x210 (* (- 49) ?x2557)))
 (let ((?x2543 (* q r r r d)))
 (let ((?x1143 (* (- 100) ?x2543)))
 (let ((?x2541 (* r r r d d d)))
 (let ((?x2613 (* 66 ?x2541)))
 (let ((?x2496 (* r r r d d)))
 (let ((?x1173 (* 396 ?x2496)))
 (let ((?x2494 (* r r r d)))
 (let ((?x1176 (* 792 ?x2494)))
 (let ((?x2490 (* 8 (* q q r r r))))
 (let ((?x1631 (* (- 8) (* r r r r))))
 (let ((?x2620 (* (- 2) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x133 (* 2 r)))
 (let ((?x420 (+ (- 4) q ?x133 ?x165 ?x2620)))
 (let ((?x2563 (+ 2 d)))
 (let ((?x2619 (+ (- 8) q)))
 (let ((?x1569 (* ?x2619 ?x2619 ?x2619 ?x2563 ?x420 ?x420 ?x420 r)))
 (let ((?x1318 (* r r r x d d)))
 (let ((?x1622 (* (- 8) (* r r r r d))))
 (let ((?x1168 (* (- 2) (* r r r r d d))))
 (let ((?x1141 (* 4 (* r r r x))))
 (let ((?x853 (* q r r r)))
 (let ((?x2407 (* (- 68) ?x853)))
 (let ((?x469 (* ?x2619 ?x2619 ?x2563 ?x2563 ?x420 ?x420 ?x420)))
 (let ((?x439 (* q q r r r d d d)))
 (let ((?x438 (* 6 (* q q r r r d d))))
 (let ((?x425 (* q q r r r d)))
 (let ((?x2397 (* 12 ?x425)))
 (let ((?x1811 (* 4 (* r r r x d))))
 (let ((?x340 (* q r r r d d d)))
 (let ((?x2618 (* (- 16) ?x340)))
 (let ((?x321 (* r r r)))
 (let ((?x2617 (* 528 ?x321)))
 (let ((?x208 (+ ?x2617 ?x2618 ?x1811 ?x2397 ?x438 ?x439 ?x469 ?x2407 ?x1141 (* (- 8) (* q 2 d d r r r)) ?x1168 ?x1622 ?x1318 ?x1569 ?x1631 (* (- 8) (* q 2 2 2 r r r)) (* (- 8) (* q 2 d 2 r r r)) (* (- 8) (* q d d 2 r r r)) (* (- 8) (* q 2 2 d r r r)) (* (- 8) (* q d 2 d r r r)) (* (- 8) (* q d 2 2 r r r)) ?x2490 ?x1176 ?x1173 ?x2613 ?x1143 ?x210)))
 (let ((?x2568 (* 2 (* d 4))))
 (let ((?x2403 (* (- 8) d)))
 (let ((?x2542 (* 31 ?x2557)))
 (let ((?x2544 (* 60 ?x2543)))
 (let ((?x2495 (* 15 ?x2541)))
 (let ((?x2497 (* 58 ?x2496)))
 (let ((?x2492 (* 116 ?x2494)))
 (let ((?x2488 (* 2 (* d 2 q q r r r))))
 (let ((?x2417 (* 2 (* d d 4 q r r r))))
 (let ((?x1624 (+ 2 q ?x133 ?x165 d)))
 (let ((?x2561 (+ 4 q)))
 (let ((?x1960 (* ?x2563 ?x2563 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624)))
 (let ((?x851 (* 2 (* d 2 4 q r r r))))
 (let ((?x1529 (* ?x2563 ?x2561 ?x2561 ?x2561 ?x1624 ?x1624 ?x1624 r)))
 (let ((?x270 (* 2 (* d 2 4 4 r r r))))
 (let ((?x856 (* 2 (* d d q 4 r r r))))
 (let ((?x236 (* 2 (* d 2 q 4 r r r))))
 (let ((?x1011 (* 60 ?x853)))
 (let ((?x426 (* 8 ?x425)))
 (let ((?x341 (* 8 ?x340)))
 (let ((?x331 (* 120 ?x321)))
 (let ((?x1017 (* 2 (* d d 4 4 r r r))))
 (let ((?x1597 (+ ?x1017 ?x331 ?x341 ?x1811 ?x426 ?x438 ?x439 ?x1011 ?x236 ?x856 ?x270 ?x1141 ?x1168 ?x1622 ?x1318 ?x1529 ?x851 ?x1631 ?x1960 ?x2417 ?x2488 ?x2490 ?x2492 ?x2497 ?x2495 ?x2544 ?x2542)))
 (let ((?x1582 (* ?x1597 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 ?x2403 ?x2332 ?x2330 ?x2381 ?x2568))))
 (let ((?x2572 (* 8 d)))
 (let ((?x1392 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 (* (- 4) (* d 2)) ?x2572 ?x2332 ?x2330 ?x2381)))
 (let ((?x2410 (* 17 ?x2541)))
 (let ((?x2180 (* 102 ?x2496)))
 (let ((?x2178 (* 204 ?x2494)))
 (let ((?x2587 (* (- 1) d)))
 (let ((?x1922 (+ (- 2) q ?x133 ?x165 ?x2587)))
 (let ((?x2586 (+ (- 4) q)))
 (let ((?x1098 (* ?x2586 ?x2586 ?x2563 ?x2563 ?x1922 ?x1922 ?x1922)))
 (let ((?x2585 (* (- 8) ?x340)))
 (let ((?x2584 (* 136 ?x321)))
 (let ((?x269 (* ?x2586 ?x2586 ?x2586 ?x2563 ?x1922 ?x1922 ?x1922 r)))
 (let ((?x2175 (+ ?x269 ?x2584 ?x2585 ?x1811 ?x2397 ?x438 ?x439 (* (- 36) ?x853) ?x1098 ?x1141 (* (- 4) (* q 2 d d r r r)) ?x1168 ?x1622 ?x1318 ?x1631 (* (- 4) (* q 2 2 2 r r r)) (* (- 4) (* q 2 d 2 r r r)) (* (- 4) (* q d d 2 r r r)) (* (- 4) (* q 2 2 d r r r)) (* (- 4) (* q d 2 d r r r)) (* (- 4) (* q d 2 2 r r r)) ?x2490 ?x2178 ?x2180 ?x2410 (* (- 52) ?x2543) (* (- 25) ?x2557))))
 (let ((?x1069 (+ ?x197 ?x168 ?x216 ?x200 ?x266 ?x304 ?x2478 ?x2332 ?x2330 ?x2381)))
 (let ((?x1651 (* (- 1) ?x2557)))
 (let ((?x1652 (* (- 4) ?x2543)))
 (let ((?x1659 (+ q ?x133 ?x165)))
 (let ((?x2473 (* ?x2563 ?x2563 ?x1659 ?x1659 ?x1659 q q)))
 (let ((?x594 (* (- 12) (* q q q r r r x d))))
 (let ((?x2414 (* 8 (* q q q r r r r d))))
 (let ((?x2232 (* 12 (* q q q q r r r d))))
 (let ((?x511 (* 6 (* q q q r r x x d))))
 (let ((?x1769 (* q q q q q q r d)))
 (let ((?x1768 (* 6 (* q q q q q r r d))))
 (let ((?x647 (* (- 12) (* q q q q r r x d))))
 (let ((?x1653 (* (- 4) ?x853)))
 (let ((?x640 (* (- 1) (* q q q r x x x d))))
 (let ((?x649 (* 3 (* q q q q r x x d))))
 (let ((?x658 (* (- 3) (* q q q q q r x d))))
 (let ((?x1805 (+ ?x658 ?x1811 ?x426 ?x438 ?x439 (* 2 (* q ?x165 q r q q q)) (* 2 (* ?x165 q q r q q q)) ?x649 (* 2 (* q q ?x165 r q q q)) (* 2 (* q ?x165 ?x133 r q q q)) ?x640 (* 2 (* ?x165 ?x165 q r q q q)) (* 2 (* ?x165 ?x133 ?x133 r q q q)) ?x1653 (* 2 (* ?x165 q ?x165 r q q q)) (* 2 (* d 2 r r r q q)) ?x647 (* 2 (* q ?x133 ?x133 r q q q)) ?x1141 (* 2 (* q q ?x133 r q q q)) (* 2 (* q q q r q q q)) ?x1168 ?x1622 ?x1318 (* 2 (* ?x165 q ?x133 r q q q)) (* 2 (* ?x133 q ?x133 r q q q)) (* 2 (* ?x133 q q r q q q)) ?x1631 (* 2 (* ?x133 ?x165 q r q q q)) ?x1768 ?x1769 ?x511 (* 2 (* q ?x133 ?x165 r q q q)) ?x2232 ?x2414 (* 2 (* ?x165 ?x165 ?x165 r q q q)) (* 2 (* ?x133 ?x165 ?x165 r q q q)) ?x594 ?x2473 (* 2 (* ?x133 ?x133 ?x133 r q q q)) (* 2 (* q ?x165 ?x165 r q q q)) ?x2490 (* 2 (* ?x165 ?x133 ?x165 r q q q)) (* 2 (* q ?x133 q r q q q)) (* 2 (* ?x165 ?x165 ?x133 r q q q)) (* 2 (* ?x133 ?x165 ?x133 r q q q)) ?x1652 (* 2 (* ?x133 ?x133 ?x165 r q q q)) (* 2 (* ?x133 q ?x165 r q q q)) (* 2 (* ?x133 ?x133 q r q q q)) (* 2 (* ?x165 ?x133 q r q q q)) ?x1651)))
 (let (($x295 (or (not (= (* ?x1805 ?x1069) 0)) (not (= (* ?x2175 ?x1392) 0)) (not (= ?x1582 0)) (not (= (* ?x208 ?x1633) 0)))))
 (let (($x354 (= ?x1069 0)))
 (let (($x985 (and $x354 $x295)))
 (let ((?x671 (* 4 (* d00 r00))))
 (let ((?x2328 (* 4 (* ?x2563 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x508 (* (- 8) x)))
 (let ((?x413 (* 16 r)))
 (let ((?x2521 (+ (- 32) ?x413 ?x508 ?x30 (* (- 16) d) ?x168 ?x2328 ?x200 ?x216 (* ?x2619 ?x2563 ?x2563) (* (- 2) (* ?x2619 ?x2563)) ?x266 (* (- 4) (* ?x2563 (+ (- 4) ?x133 ?x165 q ?x2620))) ?x671)))
 (let ((?x917 (* (- 1) (* ?x2563 ?x2563 (+ (- 4) ?x133 ?x165 q ?x2620) r r r))))
 (let ((?x936 (+ (- 4) ?x133 ?x165 q ?x2620)))
 (let ((?x928 (+ (* ?x2619 ?x2619 ?x2563 ?x2563 ?x936 ?x936 ?x936) (* ?x2619 ?x2619 ?x2563 ?x2563 ?x2563 r r r) (* ?x2619 ?x2619 ?x2619 ?x2563 ?x936 ?x936 ?x936 r) ?x917)))
 (let (($x2547 (not (= (* ?x928 ?x2521) 0))))
 (let ((?x2024 (+ 16 ?x413 ?x508 ?x30 ?x2572 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 ?x2561) (* (- 2) (* ?x2563 ?x2561)) ?x266 (* (- 4) (* ?x2563 (+ 2 ?x133 ?x165 q d))) ?x671)))
 (let ((?x1693 (* (- 1) (* ?x2563 ?x2563 (+ 2 ?x133 ?x165 q d) r r r))))
 (let ((?x344 (+ 2 ?x133 ?x165 q d)))
 (let ((?x1917 (+ (* ?x2563 ?x2563 ?x2561 ?x2561 ?x344 ?x344 ?x344) (* ?x2563 ?x2563 ?x2563 ?x2561 ?x2561 r r r) (* ?x2563 ?x2561 ?x2561 ?x2561 ?x344 ?x344 ?x344 r) ?x1693)))
 (let (($x2086 (not (= (* ?x1917 ?x2024) 0))))
 (let ((?x933 (+ (- 16) ?x413 ?x508 ?x30 ?x2403 ?x168 ?x2328 ?x200 ?x216 (* ?x2586 ?x2563 ?x2563) (* (- 2) (* ?x2586 ?x2563)) ?x266 (* (- 4) (* ?x2563 (+ (- 2) ?x133 ?x165 q ?x2587))) ?x671)))
 (let ((?x2525 (* (- 1) (* ?x2563 ?x2563 (+ (- 2) ?x133 ?x165 q ?x2587) r r r))))
 (let ((?x2084 (+ (- 2) ?x133 ?x165 q ?x2587)))
 (let ((?x2528 (+ (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2084 ?x2084 ?x2084) (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2563 r r r) (* ?x2586 ?x2586 ?x2586 ?x2563 ?x2084 ?x2084 ?x2084 r) ?x2525)))
 (let (($x991 (not (= (* ?x2528 ?x933) 0))))
 (let ((?x2438 (+ ?x413 ?x508 ?x30 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 q) (* (- 2) (* ?x2563 q)) ?x266 (* (- 4) (* ?x2563 (+ ?x133 ?x165 q))) ?x671)))
 (let ((?x2465 (+ ?x133 ?x165 q)))
 (let ((?x869 (+ (* ?x2563 ?x2563 ?x2465 ?x2465 ?x2465 q q) (* ?x2563 ?x2563 ?x2563 r r r q q) (* ?x2563 ?x2465 ?x2465 ?x2465 r q q q) (* (- 1) (* ?x2563 ?x2563 ?x2465 r r r)))))
 (let (($x325 (not (= (* ?x869 ?x2438) 0))))
 (let ((?x1082 (+ ?x197 ?x168 ?x2478 ?x200 ?x216 (* d d q) (* (- 2) (* d q)) ?x266 (* (- 4) (* d r)) ?x671)))
 (let (($x1083 (= ?x1082 0)))
 (let (($x828 (and $x1083 (or $x325 $x991 $x2086 $x2547))))
 (rewrite (= $x828 $x985))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2513 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x671 (* 4 (* d00 r00))))
 (let ((?x2620 (* (- 2) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x133 (* 2 r)))
 (let ((?x936 (+ (- 4) ?x133 ?x165 q ?x2620)))
 (let ((?x2563 (+ 2 d)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x2328 (* 4 (* ?x2563 r))))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x508 (* (- 8) x)))
 (let ((?x413 (* 16 r)))
 (let ((?x2521 (+ (- 32) ?x413 ?x508 ?x30 (* (- 16) d) ?x168 ?x2328 ?x200 ?x216 (* (+ (- 8) q) ?x2563 ?x2563) (* (- 2) (* (+ (- 8) q) ?x2563)) ?x266 (* (- 4) (* ?x2563 ?x936)) ?x671)))
 (let ((?x2619 (+ (- 8) q)))
 (let ((?x928 (+ (* ?x2619 ?x2619 ?x2563 ?x2563 ?x936 ?x936 ?x936) (* ?x2619 ?x2619 ?x2563 ?x2563 ?x2563 r r r) (* ?x2619 ?x2619 ?x2619 ?x2563 ?x936 ?x936 ?x936 r) (* (- 1) (* ?x2563 ?x2563 ?x936 r r r)))))
 (let (($x2547 (not (= (* ?x928 ?x2521) 0))))
 (let ((?x2403 (* (- 8) d)))
 (let ((?x933 (+ (- 16) ?x413 ?x508 ?x30 ?x2403 ?x168 ?x2328 ?x200 ?x216 (* (+ (- 4) q) ?x2563 ?x2563) (* (- 2) (* (+ (- 4) q) ?x2563)) ?x266 (* (- 4) (* ?x2563 (+ (- 2) ?x133 ?x165 q (* (- 1) d)))) ?x671)))
 (let ((?x2587 (* (- 1) d)))
 (let ((?x2084 (+ (- 2) ?x133 ?x165 q ?x2587)))
 (let ((?x2586 (+ (- 4) q)))
 (let ((?x2528 (+ (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2084 ?x2084 ?x2084) (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2563 r r r) (* ?x2586 ?x2586 ?x2586 ?x2563 ?x2084 ?x2084 ?x2084 r) (* (- 1) (* ?x2563 ?x2563 ?x2084 r r r)))))
 (let (($x991 (not (= (* ?x2528 ?x933) 0))))
 (let ((?x2572 (* 8 d)))
 (let ((?x2024 (+ 16 ?x413 ?x508 ?x30 ?x2572 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 (+ 4 q)) (* (- 2) (* ?x2563 (+ 4 q))) ?x266 (* (- 4) (* ?x2563 (+ 2 ?x133 ?x165 q d))) ?x671)))
 (let ((?x1693 (* (- 1) (* ?x2563 ?x2563 (+ 2 ?x133 ?x165 q d) r r r))))
 (let ((?x344 (+ 2 ?x133 ?x165 q d)))
 (let ((?x2561 (+ 4 q)))
 (let ((?x1917 (+ (* ?x2563 ?x2563 ?x2561 ?x2561 ?x344 ?x344 ?x344) (* ?x2563 ?x2563 ?x2563 ?x2561 ?x2561 r r r) (* ?x2563 ?x2561 ?x2561 ?x2561 ?x344 ?x344 ?x344 r) ?x1693)))
 (let (($x2086 (not (= (* ?x1917 ?x2024) 0))))
 (let ((?x2438 (+ ?x413 ?x508 ?x30 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 q) (* (- 2) (* ?x2563 q)) ?x266 (* (- 4) (* ?x2563 (+ ?x133 ?x165 q))) ?x671)))
 (let ((?x2465 (+ ?x133 ?x165 q)))
 (let ((?x869 (+ (* ?x2563 ?x2563 ?x2465 ?x2465 ?x2465 q q) (* ?x2563 ?x2563 ?x2563 r r r q q) (* ?x2563 ?x2465 ?x2465 ?x2465 r q q q) (* (- 1) (* ?x2563 ?x2563 ?x2465 r r r)))))
 (let (($x325 (not (= (* ?x869 ?x2438) 0))))
 (let ((?x2478 (* 4 (* x d))))
 (let ((?x197 (* 8 r)))
 (let ((?x1082 (+ ?x197 ?x168 ?x2478 ?x200 ?x216 (* d d q) (* (- 2) (* d q)) ?x266 (* (- 4) (* d r)) ?x671)))
 (let (($x1083 (= ?x1082 0)))
 (and $x1083 (or $x325 $x2086 $x991 $x2547))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x697 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x671 (* 4 (* d00 r00))))
 (let ((?x2620 (* (- 2) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x133 (* 2 r)))
 (let ((?x936 (+ (- 4) ?x133 ?x165 q ?x2620)))
 (let ((?x2563 (+ 2 d)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x2328 (* 4 (* ?x2563 r))))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x508 (* (- 8) x)))
 (let ((?x413 (* 16 r)))
 (let ((?x2521 (+ (- 32) ?x413 ?x508 ?x30 (* (- 16) d) ?x168 ?x2328 ?x200 ?x216 (* (+ (- 8) q) ?x2563 ?x2563) (* (- 2) (* (+ (- 8) q) ?x2563)) ?x266 (* (- 4) (* ?x2563 ?x936)) ?x671)))
 (let ((?x2619 (+ (- 8) q)))
 (let ((?x928 (+ (* ?x2619 ?x2619 ?x2563 ?x2563 ?x936 ?x936 ?x936) (* ?x2619 ?x2619 ?x2563 ?x2563 ?x2563 r r r) (* ?x2619 ?x2619 ?x2619 ?x2563 ?x936 ?x936 ?x936 r) (* (- 1) (* ?x2563 ?x2563 ?x936 r r r)))))
 (let (($x2547 (not (= (* ?x928 ?x2521) 0))))
 (let ((?x2572 (* 8 d)))
 (let ((?x2024 (+ 16 ?x413 ?x508 ?x30 ?x2572 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 (+ 4 q)) (* (- 2) (* ?x2563 (+ 4 q))) ?x266 (* (- 4) (* ?x2563 (+ 2 ?x133 ?x165 q d))) ?x671)))
 (let ((?x1693 (* (- 1) (* ?x2563 ?x2563 (+ 2 ?x133 ?x165 q d) r r r))))
 (let ((?x344 (+ 2 ?x133 ?x165 q d)))
 (let ((?x2561 (+ 4 q)))
 (let ((?x1917 (+ (* ?x2563 ?x2563 ?x2561 ?x2561 ?x344 ?x344 ?x344) (* ?x2563 ?x2563 ?x2563 ?x2561 ?x2561 r r r) (* ?x2563 ?x2561 ?x2561 ?x2561 ?x344 ?x344 ?x344 r) ?x1693)))
 (let (($x2086 (not (= (* ?x1917 ?x2024) 0))))
 (let ((?x2403 (* (- 8) d)))
 (let ((?x933 (+ (- 16) ?x413 ?x508 ?x30 ?x2403 ?x168 ?x2328 ?x200 ?x216 (* (+ (- 4) q) ?x2563 ?x2563) (* (- 2) (* (+ (- 4) q) ?x2563)) ?x266 (* (- 4) (* ?x2563 (+ (- 2) ?x133 ?x165 q (* (- 1) d)))) ?x671)))
 (let ((?x2587 (* (- 1) d)))
 (let ((?x2084 (+ (- 2) ?x133 ?x165 q ?x2587)))
 (let ((?x2586 (+ (- 4) q)))
 (let ((?x2528 (+ (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2084 ?x2084 ?x2084) (* ?x2586 ?x2586 ?x2563 ?x2563 ?x2563 r r r) (* ?x2586 ?x2586 ?x2586 ?x2563 ?x2084 ?x2084 ?x2084 r) (* (- 1) (* ?x2563 ?x2563 ?x2084 r r r)))))
 (let (($x991 (not (= (* ?x2528 ?x933) 0))))
 (let ((?x2438 (+ ?x413 ?x508 ?x30 ?x168 ?x2328 ?x200 ?x216 (* ?x2563 ?x2563 q) (* (- 2) (* ?x2563 q)) ?x266 (* (- 4) (* ?x2563 (+ ?x133 ?x165 q))) ?x671)))
 (let ((?x2465 (+ ?x133 ?x165 q)))
 (let ((?x869 (+ (* ?x2563 ?x2563 ?x2465 ?x2465 ?x2465 q q) (* ?x2563 ?x2563 ?x2563 r r r q q) (* ?x2563 ?x2465 ?x2465 ?x2465 r q q q) (* (- 1) (* ?x2563 ?x2563 ?x2465 r r r)))))
 (let (($x325 (not (= (* ?x869 ?x2438) 0))))
 (let ((?x2478 (* 4 (* x d))))
 (let ((?x197 (* 8 r)))
 (let ((?x1082 (+ ?x197 ?x168 ?x2478 ?x200 ?x216 (* d d q) (* (- 2) (* d q)) ?x266 (* (- 4) (* d r)) ?x671)))
 (let (($x1083 (= ?x1082 0)))
 (let (($x828 (and $x1083 (or $x325 $x991 $x2086 $x2547))))
 (let (($x2511 (and $x1083 (or $x325 $x2086 $x991 $x2547))))
 (rewrite (= $x2511 $x828))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x161 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x135 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x141 (- q 8)))
 (let ((?x153 (+ (* ?x62 ?x62 ?x141 ?x141 ?x135 ?x135 ?x135) (* ?x62 ?x62 ?x62 ?x141 ?x141 r r r) (* ?x62 ?x141 ?x141 ?x141 ?x135 ?x135 ?x135 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x139 (- (+ (- (* 8 ?x135) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x146 (+ (- (+ (- ?x139 ?x41) (* ?x62 ?x62 ?x141)) (* 2 ?x62 ?x141)) ?x49)))
 (let ((?x156 (* (+ (- ?x146 (* 4 ?x62 ?x135)) ?x53) (- ?x153 (* ?x62 ?x62 ?x135 r r r)))))
 (let ((?x109 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x115 (- q 4)))
 (let ((?x127 (+ (* ?x62 ?x62 ?x115 ?x115 ?x109 ?x109 ?x109) (* ?x62 ?x62 ?x62 ?x115 ?x115 r r r) (* ?x62 ?x115 ?x115 ?x115 ?x109 ?x109 ?x109 r))))
 (let ((?x113 (- (+ (- (* 8 ?x109) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x120 (+ (- (+ (- ?x113 ?x41) (* ?x62 ?x62 ?x115)) (* 2 ?x62 ?x115)) ?x49)))
 (let ((?x130 (* (+ (- ?x120 (* 4 ?x62 ?x109)) ?x53) (- ?x127 (* ?x62 ?x62 ?x109 r r r)))))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x85 (+ ?x58 q)))
 (let ((?x102 (+ (* ?x62 ?x62 q q ?x85 ?x85 ?x85) (* ?x62 ?x62 ?x62 q q r r r) (* ?x62 q q q ?x85 ?x85 ?x85 r))))
 (let ((?x89 (- (+ (- (* 8 ?x85) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x95 (+ (- (+ (- ?x89 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x105 (* (+ (- ?x95 (* 4 ?x62 ?x85)) ?x53) (- ?x102 (* ?x62 ?x62 ?x85 r r r)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x79 (+ (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x62 ?x62 ?x62 ?x67 ?x67 r r r) (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x82 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (- ?x79 (* ?x62 ?x62 ?x59 r r r)))))
 (let (($x159 (or (not (= ?x82 0)) (not (= ?x105 0)) (not (= ?x130 0)) (not (= ?x156 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x159))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x699 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x671 (* 4 (* d00 r00))))
 (let ((?x1929 (* (- 2) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1028 (+ (- 4) ?x57 ?x165 q ?x1929)))
 (let ((?x271 (+ 2 d)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x499 (* 4 (* ?x271 r))))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x283 (* 8 q)))
 (let ((?x508 (* (- 8) x)))
 (let ((?x240 (* 16 r)))
 (let ((?x367 (+ (- 32) ?x240 ?x508 ?x283 (* (- 16) d) ?x168 ?x499 ?x200 ?x216 (* (+ (- 8) q) ?x271 ?x271) (* (- 2) (* (+ (- 8) q) ?x271)) ?x266 (* (- 4) (* ?x271 ?x1028)) ?x671)))
 (let ((?x1698 (+ (- 8) q)))
 (let ((?x348 (+ (* ?x1698 ?x1698 ?x271 ?x271 ?x1028 ?x1028 ?x1028) (* ?x1698 ?x1698 ?x271 ?x271 ?x271 r r r) (* ?x1698 ?x1698 ?x1698 ?x271 ?x1028 ?x1028 ?x1028 r) (* (- 1) (* ?x271 ?x271 ?x1028 r r r)))))
 (let ((?x458 (* (- 8) d)))
 (let ((?x850 (+ (- 16) ?x240 ?x508 ?x283 ?x458 ?x168 ?x499 ?x200 ?x216 (* (+ (- 4) q) ?x271 ?x271) (* (- 2) (* (+ (- 4) q) ?x271)) ?x266 (* (- 4) (* ?x271 (+ (- 2) ?x57 ?x165 q (* (- 1) d)))) ?x671)))
 (let ((?x1331 (* (- 1) d)))
 (let ((?x763 (+ (- 2) ?x57 ?x165 q ?x1331)))
 (let ((?x531 (+ (- 4) q)))
 (let ((?x2081 (+ (* ?x531 ?x531 ?x271 ?x271 ?x763 ?x763 ?x763) (* ?x531 ?x531 ?x271 ?x271 ?x271 r r r) (* ?x531 ?x531 ?x531 ?x271 ?x763 ?x763 ?x763 r) (* (- 1) (* ?x271 ?x271 ?x763 r r r)))))
 (let ((?x197 (* 8 d)))
 (let ((?x818 (+ 16 ?x240 ?x508 ?x283 ?x197 ?x168 ?x499 ?x200 ?x216 (* ?x271 ?x271 (+ 4 q)) (* (- 2) (* ?x271 (+ 4 q))) ?x266 (* (- 4) (* ?x271 (+ 2 ?x57 ?x165 q d))) ?x671)))
 (let ((?x838 (* (- 1) (* ?x271 ?x271 (+ 2 ?x57 ?x165 q d) r r r))))
 (let ((?x1462 (+ 2 ?x57 ?x165 q d)))
 (let ((?x355 (+ 4 q)))
 (let ((?x193 (+ (* ?x271 ?x271 ?x355 ?x355 ?x1462 ?x1462 ?x1462) (* ?x271 ?x271 ?x271 ?x355 ?x355 r r r) (* ?x271 ?x355 ?x355 ?x355 ?x1462 ?x1462 ?x1462 r) ?x838)))
 (let ((?x1029 (+ ?x240 ?x508 ?x283 ?x168 ?x499 ?x200 ?x216 (* ?x271 ?x271 q) (* (- 2) (* ?x271 q)) ?x266 (* (- 4) (* ?x271 (+ ?x57 ?x165 q))) ?x671)))
 (let ((?x1954 (+ ?x57 ?x165 q)))
 (let ((?x2474 (+ (* ?x271 ?x271 ?x1954 ?x1954 ?x1954 q q) (* ?x271 ?x271 ?x271 r r r q q) (* ?x271 ?x1954 ?x1954 ?x1954 r q q q) (* (- 1) (* ?x271 ?x271 ?x1954 r r r)))))
 (let (($x930 (or (not (= (* ?x2474 ?x1029) 0)) (not (= (* ?x193 ?x818) 0)) (not (= (* ?x2081 ?x850) 0)) (not (= (* ?x348 ?x367) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x750 (+ ?x30 ?x168 (* 4 (* x d)) ?x200 ?x216 ?x44 (* (- 2) (* d q)) ?x266 (* (- 4) (* d r)) ?x671)))
 (and (= ?x750 0) $x930)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x308 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x671 (* 4 (* d00 r00))))
 (let ((?x1929 (* (- 2) d)))
 (let ((?x165 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1028 (+ (- 4) ?x57 ?x165 q ?x1929)))
 (let ((?x271 (+ 2 d)))
 (let ((?x265 (* d00 q00)))
 (let ((?x266 (* 2 ?x265)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x186 (* d00 x00)))
 (let ((?x200 (* (- 4) ?x186)))
 (let ((?x499 (* 4 (* ?x271 r))))
 (let ((?x168 (* (- 8) r00)))
 (let ((?x283 (* 8 q)))
 (let ((?x508 (* (- 8) x)))
 (let ((?x240 (* 16 r)))
 (let ((?x367 (+ (- 32) ?x240 ?x508 ?x283 (* (- 16) d) ?x168 ?x499 ?x200 ?x216 (* (+ (- 8) q) ?x271 ?x271) (* (- 2) (* (+ (- 8) q) ?x271)) ?x266 (* (- 4) (* ?x271 ?x1028)) ?x671)))
 (let ((?x1698 (+ (- 8) q)))
 (let ((?x348 (+ (* ?x1698 ?x1698 ?x271 ?x271 ?x1028 ?x1028 ?x1028) (* ?x1698 ?x1698 ?x271 ?x271 ?x271 r r r) (* ?x1698 ?x1698 ?x1698 ?x271 ?x1028 ?x1028 ?x1028 r) (* (- 1) (* ?x271 ?x271 ?x1028 r r r)))))
 (let ((?x458 (* (- 8) d)))
 (let ((?x850 (+ (- 16) ?x240 ?x508 ?x283 ?x458 ?x168 ?x499 ?x200 ?x216 (* (+ (- 4) q) ?x271 ?x271) (* (- 2) (* (+ (- 4) q) ?x271)) ?x266 (* (- 4) (* ?x271 (+ (- 2) ?x57 ?x165 q (* (- 1) d)))) ?x671)))
 (let ((?x1331 (* (- 1) d)))
 (let ((?x763 (+ (- 2) ?x57 ?x165 q ?x1331)))
 (let ((?x531 (+ (- 4) q)))
 (let ((?x2081 (+ (* ?x531 ?x531 ?x271 ?x271 ?x763 ?x763 ?x763) (* ?x531 ?x531 ?x271 ?x271 ?x271 r r r) (* ?x531 ?x531 ?x531 ?x271 ?x763 ?x763 ?x763 r) (* (- 1) (* ?x271 ?x271 ?x763 r r r)))))
 (let ((?x197 (* 8 d)))
 (let ((?x818 (+ 16 ?x240 ?x508 ?x283 ?x197 ?x168 ?x499 ?x200 ?x216 (* ?x271 ?x271 (+ 4 q)) (* (- 2) (* ?x271 (+ 4 q))) ?x266 (* (- 4) (* ?x271 (+ 2 ?x57 ?x165 q d))) ?x671)))
 (let ((?x838 (* (- 1) (* ?x271 ?x271 (+ 2 ?x57 ?x165 q d) r r r))))
 (let ((?x1462 (+ 2 ?x57 ?x165 q d)))
 (let ((?x355 (+ 4 q)))
 (let ((?x193 (+ (* ?x271 ?x271 ?x355 ?x355 ?x1462 ?x1462 ?x1462) (* ?x271 ?x271 ?x271 ?x355 ?x355 r r r) (* ?x271 ?x355 ?x355 ?x355 ?x1462 ?x1462 ?x1462 r) ?x838)))
 (let ((?x1029 (+ ?x240 ?x508 ?x283 ?x168 ?x499 ?x200 ?x216 (* ?x271 ?x271 q) (* (- 2) (* ?x271 q)) ?x266 (* (- 4) (* ?x271 (+ ?x57 ?x165 q))) ?x671)))
 (let ((?x1954 (+ ?x57 ?x165 q)))
 (let ((?x2474 (+ (* ?x271 ?x271 ?x1954 ?x1954 ?x1954 q q) (* ?x271 ?x271 ?x271 r r r q q) (* ?x271 ?x1954 ?x1954 ?x1954 r q q q) (* (- 1) (* ?x271 ?x271 ?x1954 r r r)))))
 (let (($x930 (or (not (= (* ?x2474 ?x1029) 0)) (not (= (* ?x193 ?x818) 0)) (not (= (* ?x2081 ?x850) 0)) (not (= (* ?x348 ?x367) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x750 (+ ?x30 ?x168 (* 4 (* x d)) ?x200 ?x216 ?x44 (* (- 2) (* d q)) ?x266 (* (- 4) (* d r)) ?x671)))
 (let (($x1087 (and (= ?x750 0) $x930)))
 (let ((?x135 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x141 (- q 8)))
 (let ((?x153 (+ (* ?x62 ?x62 ?x141 ?x141 ?x135 ?x135 ?x135) (* ?x62 ?x62 ?x62 ?x141 ?x141 r r r) (* ?x62 ?x141 ?x141 ?x141 ?x135 ?x135 ?x135 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x139 (- (+ (- (* 8 ?x135) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x146 (+ (- (+ (- ?x139 ?x41) (* ?x62 ?x62 ?x141)) (* 2 ?x62 ?x141)) ?x49)))
 (let ((?x156 (* (+ (- ?x146 (* 4 ?x62 ?x135)) ?x53) (- ?x153 (* ?x62 ?x62 ?x135 r r r)))))
 (let ((?x109 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x115 (- q 4)))
 (let ((?x127 (+ (* ?x62 ?x62 ?x115 ?x115 ?x109 ?x109 ?x109) (* ?x62 ?x62 ?x62 ?x115 ?x115 r r r) (* ?x62 ?x115 ?x115 ?x115 ?x109 ?x109 ?x109 r))))
 (let ((?x113 (- (+ (- (* 8 ?x109) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x120 (+ (- (+ (- ?x113 ?x41) (* ?x62 ?x62 ?x115)) (* 2 ?x62 ?x115)) ?x49)))
 (let ((?x130 (* (+ (- ?x120 (* 4 ?x62 ?x109)) ?x53) (- ?x127 (* ?x62 ?x62 ?x109 r r r)))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x85 (+ ?x58 q)))
 (let ((?x102 (+ (* ?x62 ?x62 q q ?x85 ?x85 ?x85) (* ?x62 ?x62 ?x62 q q r r r) (* ?x62 q q q ?x85 ?x85 ?x85 r))))
 (let ((?x89 (- (+ (- (* 8 ?x85) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x95 (+ (- (+ (- ?x89 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x105 (* (+ (- ?x95 (* 4 ?x62 ?x85)) ?x53) (- ?x102 (* ?x62 ?x62 ?x85 r r r)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x79 (+ (* ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x62 ?x62 ?x62 ?x67 ?x67 r r r) (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x82 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) (- ?x79 (* ?x62 ?x62 ?x59 r r r)))))
 (let (($x159 (or (not (= ?x82 0)) (not (= ?x105 0)) (not (= ?x130 0)) (not (= ?x156 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x160 (and (= ?x54 0) $x159)))
 (rewrite (= $x160 $x1087)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x980 (trans (quant-intro (proof-bind ?x308) (= $x161 $x699)) (elim-unused (= $x699 $x2513)) (= $x161 $x2513))))
 (let ((@x27 (asserted $x161)))
 (let ((@x915 (mp (mp @x27 @x980 $x2513) (quant-intro (proof-bind ?x697) (= $x2513 $x754)) $x754)))
 (let ((@x808 (mp (mp @x915 (rewrite (= $x754 $x754)) $x754) (quant-intro (proof-bind ?x164) (= $x754 $x1572)) $x1572)))
 (let ((@x572 (mp~ (mp @x808 (quant-intro (proof-bind ?x1381) (= $x1572 $x1437)) $x1437) (sk (~ $x1437 $x2336)) $x2336)))
 (let ((@x1387 (mp @x572 (rewrite (= $x2336 $x1502)) $x1502)))
 (let ((@x860 (and-elim @x1387 $x2009)))
 (let ((@x1841 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2009) $x1403)) @x860 $x1403)))
 (let (($x1889 (<= ?x2005 0)))
 (let ((@x2296 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2009) $x1889)) @x860 $x1889)))
 (let (($x263 (not (<= ?x1855 0))))
 (let (($x2004 (<= ?x509 0)))
 (let (($x1195 (>= ?x509 0)))
 (let ((@x1837 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x190 (not $x2004) (not $x1195))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1195)) @x2296 @x1841 false) $x1195) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2004)) @x2296 @x1841 false) $x2004) $x190)))
 (let (($x2166 (>= ?x1244 0)))
 (let (($x589 (<= ?x1244 0)))
 (let ((@x548 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x485 (not $x589) (not $x2166))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x589)) @x2296 @x1841 false) $x589) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2166)) @x2296 @x1841 false) $x2166) $x485)))
 (let (($x1801 (>= ?x1261 0)))
 (let (($x1474 (<= ?x1261 0)))
 (let ((@x2002 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2013 (not $x1474) (not $x1801))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1474)) @x2296 @x1841 false) $x1474) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1801)) @x2296 @x1841 false) $x1801) $x2013)))
 (let ((@x2440 (unit-resolution (unit-resolution (and-elim @x1387 $x1526) @x2002 @x548 (or $x962 $x1993)) @x1837 $x1993)))
 (let (($x1527 (>= ?x1855 0)))
 (let ((@x1273 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x280 $x263 (not $x1527))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1527)) @x2296 @x1841 false) $x1527) @x2440 $x263)))
 ((_ th-lemma arith farkas 1 1 1) @x1273 @x2296 @x1841 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1216
 :arith-nonlinear-bounds    16
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 117
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.98
 :memory                    3.37
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1593631
 :num-checks                1
 :propagations              36
 :rlimit-count              12944
 :time                      0.01
 :total-time                0.02)
