unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x1124 (* b!2 r!1)))
 (let ((?x128 (* s00 a00)))
 (let ((?x142 (+ ?x128 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) ?x1124)))
 (let (($x168 (>= ?x142 0)))
 (let (($x253 (= ?x142 0)))
 (let ((?x1126 (* (- 1) ?x1124)))
 (let ((?x224 (* s!0 a!4)))
 (let ((?x146 (* r00 b00)))
 (let ((?x135 (* (- 1) ?x128)))
 (let ((?x133 (+ ?x135 ?x146 ?x224 ?x1126)))
 (let ((?x741 (* s!0 s!0 a!4 r!1 q!3 q!3 q!3 p!5 p!5)))
 (let ((?x670 (* (- 1) (* s!0 r!1 r!1 q!3 q!3 p!5 p!5))))
 (let ((?x880 (+ (* 2 (* s!0 s!0 r!1 q!3 q!3 q!3 q!3)) (* (- 2) (* s!0 s!0 s!0 b!2 q!3 q!3 q!3 q!3 p!5)) (* (- 4) (* s!0 s!0 r!1 q!3 q!3 q!3 p!5)) (* (- 1) (* s!0 s!0 s!0 a!4 q!3 q!3 q!3 p!5 p!5)) (* (- 2) (* s!0 s!0 a!4 r!1 q!3 q!3 q!3 q!3 p!5)) (* 2 (* s!0 s!0 r!1 q!3 q!3 p!5 p!5)) ?x670 (* 2 (* s!0 r!1 r!1 q!3 q!3 q!3 p!5)) ?x741 (* (- 1) (* s!0 s!0 b!2 r!1 q!3 q!3 q!3 p!5 p!5)) (* (- 1) (* s!0 s!0 s!0 q!3 q!3 p!5 p!5)) (* 2 (* s!0 s!0 b!2 r!1 q!3 q!3 q!3 q!3 p!5)) (* s!0 s!0 a!4 r!1 q!3 q!3 q!3 q!3 q!3) (* (- 1) (* s!0 s!0 b!2 r!1 q!3 q!3 q!3 q!3 q!3)) (* 2 (* s!0 s!0 s!0 q!3 q!3 q!3 p!5)) (* s!0 s!0 s!0 b!2 q!3 q!3 q!3 p!5 p!5) (* 2 (* s!0 s!0 s!0 a!4 q!3 q!3 q!3 q!3 p!5)) (* (- 1) (* s!0 s!0 s!0 a!4 q!3 q!3 q!3 q!3 q!3)) (* s!0 s!0 s!0 b!2 q!3 q!3 q!3 q!3 q!3) (* (- 1) (* s!0 r!1 r!1 q!3 q!3 q!3 q!3)) (* (- 1) (* s!0 s!0 s!0 q!3 q!3 q!3 q!3)))))
 (let ((?x707 (* ?x880 ?x133)))
 (let (($x280 (= ?x707 0)))
 (let ((?x1103 (+ (* (- 3) (* s!0 s!0 a!4 r!1 q!3 q!3 p!5 p!5 p!5)) (* (- 6) (* s!0 a!4 r!1 r!1 q!3 p!5 p!5 p!5 p!5)) (* (- 2) (* r!1 r!1 r!1 q!3 p!5 p!5 p!5)) (* (- 3) (* a!4 r!1 r!1 r!1 q!3 q!3 p!5 p!5 p!5)) (* (- 1) (* s!0 r!1 r!1 p!5 p!5 p!5 p!5)) (* 6 (* s!0 a!4 r!1 r!1 q!3 q!3 p!5 p!5 p!5)) ?x670 (* 2 (* s!0 r!1 r!1 q!3 p!5 p!5 p!5)) ?x741 (* r!1 r!1 r!1 q!3 q!3 p!5 p!5) (* r!1 r!1 r!1 p!5 p!5 p!5 p!5) (* (- 1) (* a!4 r!1 r!1 r!1 p!5 p!5 p!5 p!5 p!5)) (* 3 (* a!4 r!1 r!1 r!1 q!3 p!5 p!5 p!5 p!5)) (* a!4 r!1 r!1 r!1 q!3 q!3 q!3 p!5 p!5) (* 2 (* s!0 a!4 r!1 r!1 p!5 p!5 p!5 p!5 p!5)) (* (- 2) (* s!0 a!4 r!1 r!1 q!3 q!3 q!3 p!5 p!5)) (* (- 1) (* s!0 s!0 a!4 r!1 p!5 p!5 p!5 p!5 p!5)) (* 3 (* s!0 s!0 a!4 r!1 q!3 p!5 p!5 p!5 p!5)))))
 (let ((?x1030 (* ?x1103 ?x133)))
 (let (($x663 (= ?x1030 0)))
 (let (($x833 (not $x663)))
 (let (($x799 (or $x833 (not $x280))))
 (let ((?x620 (+ (* q00 r00 b!2) (* (- 1) (* p00 s00 b!2)) (* p00 b00 s!0) (* (- 1) (* q00 a00 s!0)) (* s00 a00 q!3) (* (- 1) (* r00 b00 q!3)))))
 (let ((?x729 (+ (* p00 s00 a!4) (* q00 a00 r!1) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5))))
 (let ((?x134 (* q00 a00)))
 (let ((?x159 (+ ?x134 (* (- 1) (* p00 b00)) (* b!2 p!5) (* (- 1) (* a!4 q!3)))))
 (let ((?x41 (* q00 r00)))
 (let ((?x560 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x632 (and (= (+ ?x37 ?x560 (* r!1 q!3) (* (- 1) (* s!0 p!5))) 0) $x253 (= ?x159 0) (= ?x729 0) (= ?x620 0) $x799)))
 (let ((?x1039 (+ (* a!4 s!0) ?x1126 ?x135 ?x146)))
 (let ((?x195 (* p!5 p!5 a!4 q!3 q!3 q!3 r!1 s!0 s!0)))
 (let ((?x318 (* (- 1) (* p!5 p!5 q!3 q!3 r!1 r!1 s!0))))
 (let ((?x478 (+ (* 2 (* p!5 p!5 p!5 q!3 r!1 r!1 s!0)) (* p!5 p!5 q!3 q!3 r!1 r!1 r!1) ?x318 (* p!5 p!5 p!5 p!5 r!1 r!1 r!1) ?x195 (* (- 2) (* p!5 p!5 p!5 q!3 r!1 r!1 r!1)) (* (- 1) (* p!5 p!5 p!5 p!5 p!5 a!4 r!1 r!1 r!1)) (* 3 (* p!5 p!5 p!5 p!5 a!4 q!3 r!1 r!1 r!1)) (* (- 3) (* p!5 p!5 p!5 a!4 q!3 q!3 r!1 r!1 r!1)) (* p!5 p!5 a!4 q!3 q!3 q!3 r!1 r!1 r!1) (* (- 1) (* p!5 p!5 p!5 p!5 r!1 r!1 s!0)) (* 2 (* p!5 p!5 p!5 p!5 p!5 a!4 r!1 r!1 s!0)) (* (- 6) (* p!5 p!5 p!5 p!5 a!4 q!3 r!1 r!1 s!0)) (* 6 (* p!5 p!5 p!5 a!4 q!3 q!3 r!1 r!1 s!0)) (* (- 2) (* p!5 p!5 a!4 q!3 q!3 q!3 r!1 r!1 s!0)) (* (- 1) (* p!5 p!5 p!5 p!5 p!5 a!4 r!1 s!0 s!0)) (* 3 (* p!5 p!5 p!5 p!5 a!4 q!3 r!1 s!0 s!0)) (* (- 3) (* p!5 p!5 p!5 a!4 q!3 q!3 r!1 s!0 s!0)))))
 (let ((?x502 (+ (* (- 1) (* q!3 q!3 q!3 q!3 s!0 s!0 s!0)) (* 2 (* q!3 q!3 q!3 q!3 r!1 s!0 s!0)) (* 2 (* p!5 p!5 q!3 q!3 r!1 s!0 s!0)) ?x318 (* 2 (* p!5 q!3 q!3 q!3 r!1 r!1 s!0)) ?x195 (* (- 1) (* p!5 p!5 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* (- 1) (* p!5 p!5 q!3 q!3 s!0 s!0 s!0)) (* (- 2) (* p!5 a!4 q!3 q!3 q!3 q!3 r!1 s!0 s!0)) (* 2 (* p!5 q!3 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* (- 4) (* p!5 q!3 q!3 q!3 r!1 s!0 s!0)) (* a!4 q!3 q!3 q!3 q!3 q!3 r!1 s!0 s!0) (* (- 1) (* q!3 q!3 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* (- 1) (* p!5 p!5 a!4 q!3 q!3 q!3 s!0 s!0 s!0)) (* 2 (* p!5 q!3 q!3 q!3 s!0 s!0 s!0)) (* p!5 p!5 q!3 q!3 q!3 b!2 s!0 s!0 s!0) (* 2 (* p!5 a!4 q!3 q!3 q!3 q!3 s!0 s!0 s!0)) (* (- 2) (* p!5 q!3 q!3 q!3 q!3 b!2 s!0 s!0 s!0)) (* (- 1) (* a!4 q!3 q!3 q!3 q!3 q!3 s!0 s!0 s!0)) (* q!3 q!3 q!3 q!3 q!3 b!2 s!0 s!0 s!0) (* (- 1) (* q!3 q!3 q!3 q!3 r!1 r!1 s!0)))))
 (let ((?x752 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x1147 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x139 (* p00 b00)))
 (let ((?x180 (* (- 1) ?x134)))
 (let ((?x1133 (* a!4 q!3)))
 (let (($x1113 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x1046 (and $x1113 (= ?x1039 0) (= (+ ?x1133 ?x180 ?x139 (* (- 1) (* p!5 b!2))) 0) (= ?x1147 0) (= ?x752 0) (or (not (= (* ?x502 ?x1039) 0)) (not (= (* ?x478 ?x1039) 0))))))
 (let (($x434 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x146 (* r00 b00)))
 (let ((?x128 (* s00 a00)))
 (let ((?x135 (* (- 1) ?x128)))
 (let ((?x123 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x153 (+ ?x49 ?x123 ?x135 ?x146)))
 (let ((?x907 (* (- 3) (* p p p a q q r s s))))
 (let ((?x906 (* 3 (* p p p p a q r s s))))
 (let ((?x842 (* (- 1) (* p p p p p a r s s))))
 (let ((?x905 (* (- 2) (* p p a q q q r r s))))
 (let ((?x904 (* 6 (* p p p a q q r r s))))
 (let ((?x902 (* (- 6) (* p p p p a q r r s))))
 (let ((?x900 (* 2 (* p p p p p a r r s))))
 (let ((?x704 (* p p a q q q r r r)))
 (let ((?x899 (* (- 3) (* p p p a q q r r r))))
 (let ((?x897 (* 3 (* p p p p a q r r r))))
 (let ((?x650 (* (- 1) (* p p p p p a r r r))))
 (let ((?x401 (* p p a q q q r s s)))
 (let ((?x341 (* (- 1) (* p p q q r r s))))
 (let ((?x1188 (+ (* 2 (* p p p q r r s)) (* p p q q r r r) ?x341 (* p p p p r r r) ?x401 (* (- 2) (* p p p q r r r)) ?x650 ?x897 ?x899 ?x704 (* (- 1) (* p p p p r r s)) ?x900 ?x902 ?x904 ?x905 ?x842 ?x906 ?x907)))
 (let ((?x512 (* q q q q q b s s s)))
 (let ((?x506 (* (- 1) (* a q q q q q s s s))))
 (let ((?x525 (* (- 2) (* p q q q q b s s s))))
 (let ((?x524 (* 2 (* p a q q q q s s s))))
 (let ((?x467 (* p p q q q b s s s)))
 (let ((?x461 (* (- 1) (* p p a q q q s s s))))
 (let ((?x451 (* (- 1) (* q q q q q b r s s))))
 (let ((?x441 (* a q q q q q r s s)))
 (let ((?x523 (* 2 (* p q q q q b r s s))))
 (let ((?x521 (* (- 2) (* p a q q q q r s s))))
 (let ((?x405 (* (- 1) (* p p q q q b r s s))))
 (let ((?x116 (+ (* (- 1) (* q q q q s s s)) (* 2 (* q q q q r s s)) (* 2 (* p p q q r s s)) ?x341 (* 2 (* p q q q r r s)) ?x401 ?x405 (* (- 1) (* p p q q s s s)) ?x521 ?x523 (* (- 4) (* p q q q r s s)) ?x441 ?x451 ?x461 (* 2 (* p q q q s s s)) ?x467 ?x524 ?x525 ?x506 ?x512 (* (- 1) (* q q q q r r s)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let ((?x139 (* p00 b00)))
 (let ((?x134 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x134)))
 (let (($x183 (= (+ (* a q) ?x180 ?x139 (* (- 1) (* p b))) 0)))
 (let (($x161 (= ?x153 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x156 (= (+ ?x33 ?x137 ?x41 (* (- 1) (* q r))) 0)))
 (and $x156 $x161 $x183 $x249 $x317 (or (not (= (* ?x116 ?x153) 0)) (not (= (* ?x1188 ?x153) 0)))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x691 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x418 (* (- 1) ?x47)))
 (let ((?x454 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x418 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x568 (* (- 1) p)))
 (let ((?x686 (+ q ?x568)))
 (let ((?x301 (* (- 1) r)))
 (let ((?x893 (+ s ?x301)))
 (let ((?x284 (+ (* (- 1) (* ?x893 ?x686 ?x686 r r p p)) (* ?x893 ?x893 ?x686 ?x686 ?x686 r a p p))))
 (let ((?x884 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x418 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x333 (* (- 1) q)))
 (let ((?x751 (+ p ?x333)))
 (let ((?x706 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x415 (+ r ?x258)))
 (let ((?x445 (+ (* (- 1) (* ?x415 ?x415 ?x751 ?x751 s q q)) (* ?x415 ?x706 ?x751 ?x751 s s q q q))))
 (let (($x143 (or (not (= (* ?x445 ?x884) 0)) (not (= (* ?x284 ?x454) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x555 (= ?x559 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x727 (* p00 s00 a)))
 (let ((?x750 (* b00 r00 p)))
 (let ((?x857 (+ ?x750 ?x727 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x782 (* q a)))
 (let (($x765 (= (+ ?x782 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x843 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x560 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x322 (* r q)))
 (and (= (+ ?x322 (* (- 1) (* s p)) ?x37 ?x560) 0) $x843 $x765 (= ?x857 0) $x555 $x143))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x376 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x146 (* r00 b00)))
 (let ((?x128 (* s00 a00)))
 (let ((?x135 (* (- 1) ?x128)))
 (let ((?x123 (* (- 1) (* b r))))
 (let ((?x49 (* a s)))
 (let ((?x153 (+ ?x49 ?x123 ?x135 ?x146)))
 (let ((?x907 (* (- 3) (* p p p a q q r s s))))
 (let ((?x906 (* 3 (* p p p p a q r s s))))
 (let ((?x842 (* (- 1) (* p p p p p a r s s))))
 (let ((?x905 (* (- 2) (* p p a q q q r r s))))
 (let ((?x904 (* 6 (* p p p a q q r r s))))
 (let ((?x902 (* (- 6) (* p p p p a q r r s))))
 (let ((?x900 (* 2 (* p p p p p a r r s))))
 (let ((?x704 (* p p a q q q r r r)))
 (let ((?x899 (* (- 3) (* p p p a q q r r r))))
 (let ((?x897 (* 3 (* p p p p a q r r r))))
 (let ((?x650 (* (- 1) (* p p p p p a r r r))))
 (let ((?x401 (* p p a q q q r s s)))
 (let ((?x341 (* (- 1) (* p p q q r r s))))
 (let ((?x1188 (+ (* 2 (* p p p q r r s)) (* p p q q r r r) ?x341 (* p p p p r r r) ?x401 (* (- 2) (* p p p q r r r)) ?x650 ?x897 ?x899 ?x704 (* (- 1) (* p p p p r r s)) ?x900 ?x902 ?x904 ?x905 ?x842 ?x906 ?x907)))
 (let ((?x512 (* q q q q q b s s s)))
 (let ((?x506 (* (- 1) (* a q q q q q s s s))))
 (let ((?x525 (* (- 2) (* p q q q q b s s s))))
 (let ((?x524 (* 2 (* p a q q q q s s s))))
 (let ((?x467 (* p p q q q b s s s)))
 (let ((?x461 (* (- 1) (* p p a q q q s s s))))
 (let ((?x451 (* (- 1) (* q q q q q b r s s))))
 (let ((?x441 (* a q q q q q r s s)))
 (let ((?x523 (* 2 (* p q q q q b r s s))))
 (let ((?x521 (* (- 2) (* p a q q q q r s s))))
 (let ((?x405 (* (- 1) (* p p q q q b r s s))))
 (let ((?x116 (+ (* (- 1) (* q q q q s s s)) (* 2 (* q q q q r s s)) (* 2 (* p p q q r s s)) ?x341 (* 2 (* p q q q r r s)) ?x401 ?x405 (* (- 1) (* p p q q s s s)) ?x521 ?x523 (* (- 4) (* p q q q r s s)) ?x441 ?x451 ?x461 (* 2 (* p q q q s s s)) ?x467 ?x524 ?x525 ?x506 ?x512 (* (- 1) (* q q q q r r s)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let ((?x139 (* p00 b00)))
 (let ((?x134 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x134)))
 (let (($x183 (= (+ (* a q) ?x180 ?x139 (* (- 1) (* p b))) 0)))
 (let (($x161 (= ?x153 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x156 (= (+ ?x33 ?x137 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x1202 (and $x156 $x161 $x183 $x249 $x317 (or (not (= (* ?x116 ?x153) 0)) (not (= (* ?x1188 ?x153) 0))))))
 (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x418 (* (- 1) ?x47)))
 (let ((?x454 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x418 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x568 (* (- 1) p)))
 (let ((?x686 (+ q ?x568)))
 (let ((?x301 (* (- 1) r)))
 (let ((?x893 (+ s ?x301)))
 (let ((?x284 (+ (* (- 1) (* ?x893 ?x686 ?x686 r r p p)) (* ?x893 ?x893 ?x686 ?x686 ?x686 r a p p))))
 (let ((?x884 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x418 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x333 (* (- 1) q)))
 (let ((?x751 (+ p ?x333)))
 (let ((?x706 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x415 (+ r ?x258)))
 (let ((?x445 (+ (* (- 1) (* ?x415 ?x415 ?x751 ?x751 s q q)) (* ?x415 ?x706 ?x751 ?x751 s s q q q))))
 (let (($x143 (or (not (= (* ?x445 ?x884) 0)) (not (= (* ?x284 ?x454) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x555 (= ?x559 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x727 (* p00 s00 a)))
 (let ((?x750 (* b00 r00 p)))
 (let ((?x857 (+ ?x750 ?x727 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x782 (* q a)))
 (let (($x765 (= (+ ?x782 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x843 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let (($x677 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x468 (and $x677 $x843 $x765 (= ?x857 0) $x555 $x143)))
 (rewrite (= $x468 $x1202))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x259 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x418 (* (- 1) ?x47)))
 (let ((?x454 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x418 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x568 (* (- 1) p)))
 (let ((?x686 (+ q ?x568)))
 (let ((?x301 (* (- 1) r)))
 (let ((?x893 (+ s ?x301)))
 (let ((?x284 (+ (* (- 1) (* ?x893 ?x686 ?x686 r r p p)) (* ?x893 ?x893 ?x686 ?x686 ?x686 r a p p))))
 (let ((?x884 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x418 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x333 (* (- 1) q)))
 (let ((?x751 (+ p ?x333)))
 (let ((?x706 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x415 (+ r ?x258)))
 (let ((?x445 (+ (* (- 1) (* ?x415 ?x415 ?x751 ?x751 s q q)) (* ?x415 ?x706 ?x751 ?x751 s s q q q))))
 (let (($x143 (or (not (= (* ?x445 ?x884) 0)) (not (= (* ?x284 ?x454) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x555 (= ?x559 0)))
 (let ((?x877 (* a00 s00 p)))
 (let ((?x261 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x129 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x261 ?x877 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x789 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x788 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x788 ?x137 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x418 (* s a) ?x51) 0) $x789 (= ?x129 0) $x555 $x143)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x693 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x418 (* (- 1) ?x47)))
 (let ((?x454 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x418 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x568 (* (- 1) p)))
 (let ((?x686 (+ q ?x568)))
 (let ((?x301 (* (- 1) r)))
 (let ((?x893 (+ s ?x301)))
 (let ((?x284 (+ (* (- 1) (* ?x893 ?x686 ?x686 r r p p)) (* ?x893 ?x893 ?x686 ?x686 ?x686 r a p p))))
 (let ((?x884 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x418 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x333 (* (- 1) q)))
 (let ((?x751 (+ p ?x333)))
 (let ((?x706 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x415 (+ r ?x258)))
 (let ((?x445 (+ (* (- 1) (* ?x415 ?x415 ?x751 ?x751 s q q)) (* ?x415 ?x706 ?x751 ?x751 s s q q q))))
 (let (($x143 (or (not (= (* ?x445 ?x884) 0)) (not (= (* ?x284 ?x454) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x555 (= ?x559 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x727 (* p00 s00 a)))
 (let ((?x750 (* b00 r00 p)))
 (let ((?x857 (+ ?x750 ?x727 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x782 (* q a)))
 (let (($x765 (= (+ ?x782 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let (($x843 (= (+ (* r b) ?x47 (* (- 1) (* s a)) (* (- 1) ?x51)) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x560 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x322 (* r q)))
 (let (($x468 (and (= (+ ?x322 (* (- 1) (* s p)) ?x37 ?x560) 0) $x843 $x765 (= ?x857 0) $x555 $x143)))
 (let ((?x877 (* a00 s00 p)))
 (let ((?x261 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x849 (= (+ (* (- 1) ?x750) (* (- 1) ?x727) ?x65 ?x261 ?x877 (* (- 1) ?x69)) 0)))
 (let (($x789 (= (+ (* (- 1) ?x782) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x489 (and (= (+ (* (- 1) ?x322) (* s p) (* (- 1) ?x37) ?x41) 0) (= (+ (* (- 1) (* r b)) ?x418 (* s a) ?x51) 0) $x789 $x849 $x555 $x143)))
 (rewrite (= $x489 $x468))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x112 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x100 (- s r)))
 (let ((?x103 (- q p)))
 (let ((?x106 (+ (* (- 1) p p ?x103 ?x103 r r ?x100) (* a p p ?x103 ?x103 ?x103 r ?x100 ?x100))))
 (let ((?x51 (* b00 r00)))
 (let ((?x102 (+ (- (* (- 1) (- b a) r) (* a00 s00)) (* a ?x100) ?x51)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x93 (+ (* (- 1) ?x90 ?x90 q q ?x84 ?x84 s) (* ?x87 ?x90 ?x90 q q q ?x84 s s))))
 (let ((?x94 (* (+ (- (* (- 1) b ?x84) (* a00 s00)) (* ?x87 s) ?x51) ?x93)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x94 0)) (not (= (* ?x102 ?x106) 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x867 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x51 (* b00 r00)))
 (let ((?x47 (* a00 s00)))
 (let ((?x418 (* (- 1) ?x47)))
 (let ((?x454 (+ (* (- 1) (* (+ b (* (- 1) a)) r)) ?x418 (* (+ s (* (- 1) r)) a) ?x51)))
 (let ((?x568 (* (- 1) p)))
 (let ((?x686 (+ q ?x568)))
 (let ((?x301 (* (- 1) r)))
 (let ((?x893 (+ s ?x301)))
 (let ((?x284 (+ (* (- 1) (* ?x893 ?x686 ?x686 r r p p)) (* ?x893 ?x893 ?x686 ?x686 ?x686 r a p p))))
 (let ((?x884 (+ (* (- 1) (* (+ r (* (- 1) s)) b)) ?x418 (* (+ a (* (- 1) b)) s) ?x51)))
 (let ((?x333 (* (- 1) q)))
 (let ((?x751 (+ p ?x333)))
 (let ((?x706 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x415 (+ r ?x258)))
 (let ((?x445 (+ (* (- 1) (* ?x415 ?x415 ?x751 ?x751 s q q)) (* ?x415 ?x706 ?x751 ?x751 s s q q q))))
 (let (($x143 (or (not (= (* ?x445 ?x884) 0)) (not (= (* ?x284 ?x454) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x559 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x555 (= ?x559 0)))
 (let ((?x877 (* a00 s00 p)))
 (let ((?x261 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x129 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x261 ?x877 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x789 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x137 (* (- 1) ?x37)))
 (let ((?x788 (* s p)))
 (let (($x489 (and (= (+ (* (- 1) (* r q)) ?x788 ?x137 ?x41) 0) (= (+ (* (- 1) (* r b)) ?x418 (* s a) ?x51) 0) $x789 (= ?x129 0) $x555 $x143)))
 (let ((?x100 (- s r)))
 (let ((?x103 (- q p)))
 (let ((?x106 (+ (* (- 1) p p ?x103 ?x103 r r ?x100) (* a p p ?x103 ?x103 ?x103 r ?x100 ?x100))))
 (let ((?x107 (* (+ (- (* (- 1) (- b a) r) ?x47) (* a ?x100) ?x51) ?x106)))
 (let ((?x84 (- r s)))
 (let ((?x90 (- p q)))
 (let ((?x87 (- a b)))
 (let ((?x93 (+ (* (- 1) ?x90 ?x90 q q ?x84 ?x84 s) (* ?x87 ?x90 ?x90 q q q ?x84 s s))))
 (let (($x95 (= (* (+ (- (* (- 1) b ?x84) ?x47) (* ?x87 s) ?x51) ?x93) 0)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x111 (and $x44 (= (+ (- (* (- 1) b r) ?x47) (* a s) ?x51) 0) $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not $x95) (not (= ?x107 0))))))
 (rewrite (= $x111 $x489)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x113 (asserted $x112)))
 (let ((@x505 (mp (mp @x113 (quant-intro (proof-bind ?x867) (= $x112 $x259)) $x259) (rewrite (= $x259 $x259)) $x259)))
 (let ((@x219 (mp (mp @x505 (quant-intro (proof-bind ?x693) (= $x259 $x691)) $x691) (quant-intro (proof-bind ?x376) (= $x691 $x434)) $x434)))
 (let ((@x1101 (mp (mp~ @x219 (sk (~ $x434 $x1046)) $x1046) (rewrite (= $x1046 $x632)) $x632)))
 (let ((@x952 (and-elim @x1101 $x253)))
 (let ((@x640 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x253) $x168)) @x952 $x168)))
 (let (($x169 (<= ?x142 0)))
 (let ((@x698 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x253) $x169)) @x952 $x169)))
 (let (($x910 (not (<= ?x1030 0))))
 (let (($x822 (>= ?x707 0)))
 (let (($x768 (<= ?x707 0)))
 (let ((@x1040 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x280 (not $x768) (not $x822))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x768)) @x698 @x640 false) $x768) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x822)) @x698 @x640 false) $x822) $x280)))
 (let (($x621 (>= ?x1030 0)))
 (let ((@x179 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x663 $x910 (not $x621))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x621)) @x698 @x640 false) $x621) (unit-resolution (and-elim @x1101 $x799) @x1040 $x833) $x910)))
 ((_ th-lemma arith farkas 1 1 1) @x179 @x698 @x640 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             616
 :arith-nonlinear-horner    30
 :arith-num-rows            8
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 91
 :arith-tableau-max-rows    8
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                92.76
 :memory                    3.20
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                2253588550046.00
 :num-checks                1
 :propagations              19
 :rlimit-count              36201227
 :time                      23.99
 :total-time                24.00)
