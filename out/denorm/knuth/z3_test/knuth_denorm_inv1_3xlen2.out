unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x488 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* 4 (* d!1 r!2)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 1) (* q!3 d!1 d!1)) (* (- 4) (* x!0 d!1)) (* 2 (* q!3 d!1)) (* (- 8) r!2))))
 (let (($x1470 (>= ?x488 0)))
 (let (($x491 (= ?x488 0)))
 (let ((?x1099 (* 8 r!2)))
 (let ((?x1251 (* q!3 d!1)))
 (let ((?x1112 (* (- 2) ?x1251)))
 (let ((?x1092 (* x!0 d!1)))
 (let ((?x1252 (* 4 ?x1092)))
 (let ((?x1049 (* q!3 d!1 d!1)))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x473 (+ ?x182 ?x230 ?x214 (* (- 4) (* d!1 r!2)) ?x280 ?x318 ?x1049 ?x1252 ?x1112 ?x1099)))
 (let ((?x2494 (* 2 r!2)))
 (let ((?x1867 (* (- 2) d!1)))
 (let ((?x2499 (* (- 1) x!0)))
 (let ((?x1446 (+ (- 4) q!3 ?x2499 ?x1867 ?x2494)))
 (let ((?x613 (+ 2 d!1)))
 (let ((?x1866 (+ (- 8) q!3)))
 (let ((?x1769 (+ (* ?x1866 ?x1866 ?x613 ?x613 ?x613 ?x1446 ?x1446 ?x1446 r!2 r!2 r!2) (* (- 1) (* ?x1866 ?x613 ?x613 ?x1446 ?x1446 ?x1446 r!2 r!2 r!2)))))
 (let ((?x631 (* (- 1) (* x!0 r!2 r!2))))
 (let ((?x589 (* 2 (* r!2 r!2 r!2))))
 (let ((?x750 (* q!3 r!2 r!2)))
 (let ((?x327 (* r!2 r!2)))
 (let ((?x1850 (* (- 4) ?x327)))
 (let ((?x1781 (+ ?x1850 ?x750 ?x589 ?x631 (* (- 2) (* d!1 r!2 r!2)) (* ?x1866 ?x1866 ?x613 ?x1446 ?x1446 ?x1446))))
 (let ((?x2511 (* q!3 q!3 q!3)))
 (let ((?x225 (* (- 28) ?x2511)))
 (let ((?x1884 (* q!3 q!3 q!3 d!1)))
 (let ((?x1873 (* (- 2) ?x1884)))
 (let ((?x1875 (* (- 1024) r!2)))
 (let ((?x1714 (* 1024 d!1)))
 (let ((?x1255 (* q!3 q!3 q!3 q!3)))
 (let ((?x1872 (* 512 x!0)))
 (let ((?x1194 (* q!3 q!3 q!3 x!0)))
 (let ((?x1809 (* (- 1) ?x1194)))
 (let ((?x1110 (* q!3 q!3 q!3 r!2)))
 (let ((?x1811 (* 2 ?x1110)))
 (let ((?x259 (+ 2048 (* ?x1866 ?x1446 ?x1446 ?x1446) ?x1811 ?x1809 (* (- 1280) q!3) ?x1872 (* (- 384) ?x1251) ?x1255 ?x1714 ?x1875 (* 48 (* q!3 q!3 d!1)) (* (- 192) (* q!3 x!0)) ?x1873 (* 384 (* q!3 r!2)) (* (- 48) (* q!3 q!3 r!2)) (* 288 (* q!3 q!3)) ?x225 (* 24 (* q!3 q!3 x!0)))))
 (let ((?x1621 (* ?x259 ?x1781 ?x1769 ?x473)))
 (let (($x1817 (= ?x1621 0)))
 (let (($x1655 (not $x1817)))
 (let ((?x2020 (+ q!3 ?x2499 ?x2494)))
 (let ((?x1476 (+ (* (- 1) (* ?x613 ?x613 ?x2020 ?x2020 ?x2020 r!2 r!2 r!2 q!3)) (* ?x613 ?x613 ?x613 ?x2020 ?x2020 ?x2020 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x1223 (* (- 1) (* q!3 q!3 x!0 x!0 x!0 d!1))))
 (let ((?x418 (* (- 3) (* q!3 q!3 q!3 q!3 x!0 d!1))))
 (let ((?x1009 (* 3 (* q!3 q!3 q!3 x!0 x!0 d!1))))
 (let ((?x747 (* q!3 q!3 q!3 q!3 q!3 d!1)))
 (let ((?x744 (* 2 (* q!3 q!3 q!3 q!3 q!3))))
 (let ((?x440 (+ (* (- 12) (* q!3 q!3 q!3 x!0 d!1 r!2)) (* (- 2) (* q!3 q!3 x!0 x!0 x!0)) ?x744 (* (- 6) (* q!3 q!3 q!3 q!3 x!0)) (* 6 (* q!3 q!3 q!3 x!0 x!0)) (* 12 (* q!3 q!3 q!3 q!3 r!2)) ?x747 ?x750 ?x1009 (* 16 (* q!3 q!3 r!2 r!2 r!2)) (* 24 (* q!3 q!3 q!3 r!2 r!2)) (* 6 (* q!3 q!3 x!0 x!0 d!1 r!2)) ?x589 (* 12 (* q!3 q!3 q!3 d!1 r!2 r!2)) ?x631 (* 6 (* q!3 q!3 q!3 q!3 d!1 r!2)) (* 8 (* q!3 q!3 d!1 r!2 r!2 r!2)) (* 12 (* q!3 q!3 x!0 x!0 r!2)) ?x418 (* (- 24) (* q!3 q!3 x!0 r!2 r!2)) ?x1223 (* (- 12) (* q!3 q!3 x!0 d!1 r!2 r!2)) (* (- 24) (* q!3 q!3 q!3 x!0 r!2)))))
 (let ((?x1935 (* (- 1) (* q!3 x!0 x!0 x!0))))
 (let ((?x1204 (* 2 ?x1255)))
 (let ((?x1263 (* (- 4) ?x1194)))
 (let ((?x1103 (* 8 ?x1110)))
 (let ((?x774 (* 12 (* q!3 q!3 r!2 r!2))))
 (let ((?x891 (* 3 (* q!3 q!3 x!0 x!0))))
 (let ((?x603 (* 8 (* q!3 r!2 r!2 r!2))))
 (let ((?x2014 (+ (* (- 12) (* q!3 q!3 x!0 r!2)) ?x603 ?x891 (* (- 12) (* q!3 x!0 r!2 r!2)) (* 6 (* q!3 x!0 x!0 r!2)) ?x774 ?x1103 ?x1263 ?x1204 ?x1935)))
 (let ((?x1478 (* ?x2014 ?x440 ?x1476 ?x473)))
 (let (($x1362 (= ?x1478 0)))
 (let ((?x298 (* (- 1) d!1)))
 (let ((?x1820 (+ (- 2) q!3 ?x2499 ?x298 ?x2494)))
 (let ((?x292 (+ (- 4) q!3)))
 (let ((?x2214 (+ (* (- 1) (* ?x292 ?x613 ?x613 ?x1820 ?x1820 ?x1820 r!2 r!2 r!2)) (* ?x292 ?x292 ?x613 ?x613 ?x613 ?x1820 ?x1820 ?x1820 r!2 r!2 r!2))))
 (let ((?x208 (* (- 2) ?x327)))
 (let ((?x374 (+ ?x208 (* ?x292 ?x292 ?x613 ?x1820 ?x1820 ?x1820) ?x750 ?x589 ?x631 (* (- 1) (* d!1 r!2 r!2)))))
 (let ((?x1292 (* (- 14) ?x2511)))
 (let ((?x2506 (* q!3 q!3)))
 (let ((?x856 (* 72 ?x2506)))
 (let ((?x1905 (* q!3 r!2)))
 (let ((?x180 (* 96 ?x1905)))
 (let ((?x1774 (* (- 1) ?x1884)))
 (let ((?x1812 (* q!3 x!0)))
 (let ((?x748 (* (- 48) ?x1812)))
 (let ((?x1640 (* q!3 q!3 d!1)))
 (let ((?x1641 (* 12 ?x1640)))
 (let ((?x1860 (* (- 128) r!2)))
 (let ((?x818 (* 64 d!1)))
 (let ((?x1772 (* 64 x!0)))
 (let ((?x2264 (+ 128 ?x1811 ?x1809 (* (- 160) q!3) ?x1772 (* (- 48) ?x1251) ?x1255 ?x818 ?x1860 (* ?x292 ?x1820 ?x1820 ?x1820) ?x1641 ?x748 ?x1774 ?x180 (* (- 24) (* q!3 q!3 r!2)) ?x856 ?x1292 (* 12 (* q!3 q!3 x!0)))))
 (let ((?x995 (* ?x2264 ?x374 ?x2214 ?x473)))
 (let (($x1519 (= ?x995 0)))
 (let ((?x1333 (+ 2 q!3 ?x2499 d!1 ?x2494)))
 (let ((?x247 (+ 4 q!3)))
 (let ((?x1927 (+ (* ?x613 ?x613 ?x613 ?x247 ?x247 ?x1333 ?x1333 ?x1333 r!2 r!2 r!2) (* (- 1) (* ?x613 ?x613 ?x247 ?x1333 ?x1333 ?x1333 r!2 r!2 r!2)))))
 (let ((?x1556 (* d!1 r!2 r!2)))
 (let ((?x795 (* 2 ?x327)))
 (let ((?x2508 (* 14 ?x2511)))
 (let ((?x768 (* 128 r!2)))
 (let ((?x890 (* (- 64) x!0)))
 (let ((?x605 (+ 128 (* ?x247 ?x1333 ?x1333 ?x1333) ?x1811 ?x1809 (* 160 q!3) ?x890 (* 48 ?x1251) ?x1255 ?x818 ?x768 ?x1641 ?x748 ?x1884 ?x180 (* 24 (* q!3 q!3 r!2)) ?x856 ?x2508 (* (- 12) (* q!3 q!3 x!0)))))
 (let ((?x539 (* ?x605 (+ ?x795 ?x750 (* ?x613 ?x247 ?x247 ?x1333 ?x1333 ?x1333) ?x589 ?x631 ?x1556) ?x1927 ?x473)))
 (let (($x1328 (= ?x539 0)))
 (let (($x996 (not $x1328)))
 (let (($x1391 (or $x996 (not $x1519) (not $x1362) $x1655)))
 (let (($x1390 (and $x491 $x1391)))
 (let ((?x1199 (* (- 4) (* r!2 d!1))))
 (let ((?x219 (+ ?x1099 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d!1 2)) ?x1252 (* 8 d!1) ?x1049 ?x1112 ?x1199)))
 (let ((?x305 (+ (- 2) q!3 ?x2494 ?x2499 ?x298)))
 (let ((?x1725 (+ (* (- 1) (* ?x292 ?x613 ?x613 ?x305 ?x305 ?x305 r!2 r!2 r!2)) (* ?x292 ?x292 ?x613 ?x613 ?x613 ?x305 ?x305 ?x305 r!2 r!2 r!2))))
 (let ((?x863 (* (- 1) (* r!2 r!2 x!0))))
 (let ((?x1730 (+ ?x208 ?x750 ?x589 (* (- 1) (* r!2 r!2 d!1)) ?x863 (* ?x292 ?x292 ?x613 ?x305 ?x305 ?x305))))
 (let ((?x2507 (* 48 ?x2506)))
 (let ((?x1891 (* (- 32) ?x1812)))
 (let ((?x1895 (* 64 ?x1905)))
 (let ((?x1736 (+ 128 (* (- 128) q!3) ?x1860 ?x1772 ?x1255 (* (- 4) (* q!3 q!3 ?x2494)) (* 8 ?x1640) ?x1895 ?x1774 ?x1811 ?x1891 ?x1809 (* (- 16) (* q!3 q!3 r!2)) (* 8 (* q!3 q!3 x!0)) ?x1292 ?x2507 (* ?x292 ?x305 ?x305 ?x305) ?x818 (* (- 4) (* q!3 (- 4) ?x2499)) (* (- 4) (* q!3 (- 4) ?x2494)) (* (- 4) (* q!3 (- 4) ?x298)) (* (- 4) (* q!3 q!3 ?x298)) (* (- 4) (* q!3 (- 4) q!3)) (* (- 4) (* q!3 q!3 (- 2))) (* (- 4) (* q!3 (- 4) (- 2))) (* (- 4) (* q!3 q!3 ?x2499)) (* (- 32) ?x1251))))
 (let ((?x1864 (+ ?x1099 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d!1 2)) ?x1252 (* 16 d!1) ?x1049 ?x1112 ?x1199)))
 (let ((?x1531 (+ (- 4) q!3 ?x2494 ?x2499 ?x1867)))
 (let ((?x1877 (+ (* (- 1) (* ?x1866 ?x613 ?x613 ?x1531 ?x1531 ?x1531 r!2 r!2 r!2)) (* ?x1866 ?x1866 ?x613 ?x613 ?x613 ?x1531 ?x1531 ?x1531 r!2 r!2 r!2))))
 (let ((?x1882 (+ ?x1850 (* ?x1866 ?x1866 ?x613 ?x1531 ?x1531 ?x1531) ?x750 ?x589 (* (- 2) (* r!2 r!2 d!1)) ?x863)))
 (let ((?x1970 (+ 2048 (* (- 1024) q!3) ?x1875 ?x1872 ?x1255 (* (- 8) (* q!3 q!3 ?x2494)) (* 32 ?x1640) (* 256 ?x1905) ?x1873 ?x1811 (* (- 128) ?x1812) ?x1809 (* (- 32) (* q!3 q!3 r!2)) (* 16 (* q!3 q!3 x!0)) ?x225 (* 192 ?x2506) (* ?x1866 ?x1531 ?x1531 ?x1531) ?x1714 (* (- 8) (* q!3 q!3 ?x2499)) (* (- 256) ?x1251) (* (- 8) (* q!3 (- 8) (- 4))) (* (- 8) (* q!3 q!3 (- 4))) (* (- 8) (* q!3 (- 8) q!3)) (* (- 8) (* q!3 (- 8) ?x2494)) (* (- 8) (* q!3 (- 8) ?x1867)) (* (- 8) (* q!3 q!3 ?x1867)) (* (- 8) (* q!3 (- 8) ?x2499)))))
 (let ((?x1303 (+ ?x1099 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1252 (* (- 8) d!1) ?x1049 ?x1112 ?x1199 (* 2 (* d!1 4)))))
 (let ((?x1752 (+ 2 q!3 ?x2494 ?x2499 d!1)))
 (let ((?x457 (+ (* ?x613 ?x613 ?x613 ?x247 ?x247 ?x1752 ?x1752 ?x1752 r!2 r!2 r!2) (* (- 1) (* ?x613 ?x613 ?x247 ?x1752 ?x1752 ?x1752 r!2 r!2 r!2)))))
 (let ((?x203 (* r!2 r!2 d!1)))
 (let ((?x788 (+ 128 (* 128 q!3) ?x768 ?x890 ?x1255 (* 4 (* q!3 q!3 ?x2494)) (* 4 (* q!3 4 d!1)) ?x1641 ?x1895 ?x1884 (* 4 (* q!3 4 ?x2499)) ?x1811 ?x1891 ?x1809 (* 4 (* q!3 4 q!3)) (* 4 (* q!3 4 ?x2494)) (* 16 (* q!3 q!3 r!2)) (* (- 8) (* q!3 q!3 x!0)) ?x2508 ?x2507 (* 4 (* q!3 4 2)) (* 4 (* q!3 q!3 2)) (* ?x247 ?x1752 ?x1752 ?x1752) ?x818 (* 4 (* q!3 q!3 ?x2499)) (* 32 ?x1251))))
 (let ((?x458 (* ?x788 (+ ?x795 (* ?x613 ?x247 ?x247 ?x1752 ?x1752 ?x1752) ?x750 ?x589 ?x203 ?x863) ?x457 ?x1303)))
 (let ((?x1205 (+ ?x1099 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1252 ?x1049 ?x1112 ?x1199)))
 (let ((?x253 (+ q!3 ?x2494 ?x2499)))
 (let ((?x808 (+ (* (- 1) (* ?x613 ?x613 ?x253 ?x253 ?x253 r!2 r!2 r!2 q!3)) (* ?x613 ?x613 ?x613 ?x253 ?x253 ?x253 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x756 (+ (* 2 (* q!3 ?x2499 ?x2494 q!3 q!3)) (* 2 (* ?x2494 ?x2499 ?x2494 q!3 q!3)) (* 2 (* ?x2499 ?x2499 ?x2494 q!3 q!3)) ?x418 ?x1223 (* 2 (* ?x2494 q!3 ?x2499 q!3 q!3)) (* 2 (* ?x2494 ?x2499 ?x2499 q!3 q!3)) (* 2 (* ?x2499 q!3 ?x2499 q!3 q!3)) (* 2 (* q!3 ?x2494 ?x2499 q!3 q!3)) (* 2 (* ?x2494 ?x2494 ?x2499 q!3 q!3)) (* 6 (* q!3 q!3 r!2 x!0 x!0 d!1)) (* 2 (* q!3 ?x2494 ?x2494 q!3 q!3)) (* 2 (* ?x2494 ?x2494 ?x2494 q!3 q!3)) (* 2 (* ?x2499 ?x2494 ?x2494 q!3 q!3)) (* 2 (* ?x2494 ?x2494 q!3 q!3 q!3)) (* 2 (* ?x2494 q!3 q!3 q!3 q!3)) (* 2 (* q!3 ?x2494 q!3 q!3 q!3)) (* 2 (* ?x2499 ?x2494 q!3 q!3 q!3)) (* 2 (* q!3 ?x2499 q!3 q!3 q!3)) (* (- 12) (* q!3 q!3 q!3 r!2 x!0 d!1)) (* 2 (* q!3 q!3 ?x2494 q!3 q!3)) (* 2 (* q!3 q!3 ?x2499 q!3 q!3)) (* 2 (* ?x2499 ?x2499 ?x2499 q!3 q!3)) (* 2 (* ?x2494 ?x2499 q!3 q!3 q!3)) (* (- 12) (* q!3 q!3 r!2 r!2 x!0 d!1)) (* 2 (* q!3 ?x2499 ?x2499 q!3 q!3)) ?x1009 (* 2 (* ?x2499 ?x2494 ?x2499 q!3 q!3)) (* 2 (* ?x2494 q!3 ?x2494 q!3 q!3)) (* 2 (* ?x2499 q!3 ?x2494 q!3 q!3)) (* 2 (* ?x2499 ?x2499 q!3 q!3 q!3)) (* 2 (* ?x2499 q!3 q!3 q!3 q!3)) ?x747 (* 6 (* q!3 q!3 q!3 q!3 r!2 d!1)) (* 12 (* q!3 q!3 q!3 r!2 r!2 d!1)) (* 8 (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x744 ?x750 ?x589 ?x863)))
 (let ((?x2498 (+ ?x1204 ?x1103 ?x1263 (* (- 12) (* q!3 q!3 r!2 x!0)) ?x774 ?x891 ?x603 (* (- 12) (* q!3 r!2 r!2 x!0)) ?x1935 (* 6 (* q!3 r!2 x!0 x!0)))))
 (let (($x1721 (or (not (= (* ?x2498 ?x756 ?x808 ?x1205) 0)) (not (= ?x458 0)) (not (= (* ?x1970 ?x1882 ?x1877 ?x1864) 0)) (not (= (* ?x1736 ?x1730 ?x1725 ?x219) 0)))))
 (let (($x1719 (and (= ?x1205 0) $x1721)))
 (let (($x2270 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2223 (* r d)))
 (let ((?x2216 (* (- 4) ?x2223)))
 (let ((?x2218 (* q d)))
 (let ((?x2219 (* (- 2) ?x2218)))
 (let ((?x2155 (* q d d)))
 (let ((?x2131 (* 8 d)))
 (let ((?x612 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x512 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x612 ?x2131 ?x2155 ?x2219 ?x2216)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1254 (+ (- 2) q ?x144 ?x179 ?x2354)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x1359 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x1254 ?x1254 ?x1254 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x1254 ?x1254 ?x1254 r r r))))
 (let ((?x2245 (* (- 1) (* r r x))))
 (let ((?x2246 (* r r d)))
 (let ((?x2360 (* (- 1) ?x2246)))
 (let ((?x2232 (* 2 (* r r r))))
 (let ((?x2230 (* q r r)))
 (let ((?x395 (* r r)))
 (let ((?x2345 (* (- 2) ?x395)))
 (let ((?x2344 (* (- 32) ?x2218)))
 (let ((?x2140 (* q q ?x179)))
 (let ((?x2106 (* (- 4) ?x2140)))
 (let ((?x2097 (* (- 4) (* q (- 4) (- 2)))))
 (let ((?x2099 (* (- 4) (* q q (- 2)))))
 (let ((?x2096 (* (- 4) (* q (- 4) q))))
 (let ((?x2088 (* (- 4) (* q q ?x2354))))
 (let ((?x2093 (* (- 4) (* q (- 4) ?x2354))))
 (let ((?x2091 (* (- 4) (* q (- 4) ?x144))))
 (let ((?x2085 (* (- 4) (* q (- 4) ?x179))))
 (let ((?x2228 (* 64 d)))
 (let ((?x823 (* q q)))
 (let ((?x706 (* 48 ?x823)))
 (let ((?x815 (* q q q)))
 (let ((?x2107 (* (- 14) ?x815)))
 (let ((?x805 (* q q x)))
 (let ((?x2100 (* 8 ?x805)))
 (let ((?x804 (* q q r)))
 (let ((?x2105 (* (- 16) ?x804)))
 (let ((?x671 (* q q q x)))
 (let ((?x937 (* (- 1) ?x671)))
 (let ((?x659 (* q x)))
 (let ((?x667 (* (- 32) ?x659)))
 (let ((?x545 (* q q q r)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x419 (* q q q d)))
 (let ((?x2104 (* (- 1) ?x419)))
 (let ((?x291 (* q r)))
 (let ((?x451 (* 64 ?x291)))
 (let ((?x284 (* q q d)))
 (let ((?x2103 (* 8 ?x284)))
 (let ((?x239 (* q q ?x144)))
 (let ((?x2102 (* (- 4) ?x239)))
 (let ((?x229 (* q q q q)))
 (let ((?x1922 (* 64 x)))
 (let ((?x2348 (* (- 128) r)))
 (let ((?x1897 (* (- 128) q)))
 (let ((?x2289 (+ 128 ?x1897 ?x2348 ?x1922 ?x229 ?x2102 ?x2103 ?x451 ?x2104 ?x546 ?x667 ?x937 ?x2105 ?x2100 ?x2107 ?x706 (* ?x2350 ?x1254 ?x1254 ?x1254) ?x2228 ?x2085 ?x2091 ?x2093 ?x2088 ?x2096 ?x2099 ?x2097 ?x2106 ?x2344)))
 (let ((?x2310 (* ?x2289 (+ ?x2345 ?x2230 ?x2232 ?x2360 ?x2245 (* ?x2350 ?x2350 ?x2139 ?x1254 ?x1254 ?x1254)) ?x1359 ?x512)))
 (let ((?x2080 (* 16 d)))
 (let ((?x951 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x612 ?x2080 ?x2155 ?x2219 ?x2216)))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x648 (+ (- 4) q ?x144 ?x179 ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x1183 (+ (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x648 ?x648 ?x648 r r r)) (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x648 ?x648 ?x648 r r r))))
 (let ((?x2065 (* (- 2) ?x2246)))
 (let ((?x588 (* (- 4) ?x395)))
 (let ((?x2383 (* (- 8) (* q (- 8) ?x179))))
 (let ((?x2381 (* (- 8) (* q q ?x2074))))
 (let ((?x2379 (* (- 8) (* q (- 8) ?x2074))))
 (let ((?x2377 (* (- 8) (* q (- 8) ?x144))))
 (let ((?x2375 (* (- 8) (* q (- 8) q))))
 (let ((?x2373 (* (- 8) (* q q (- 4)))))
 (let ((?x2371 (* (- 8) (* q (- 8) (- 4)))))
 (let ((?x2070 (* (- 256) ?x2218)))
 (let ((?x2071 (* (- 8) ?x2140)))
 (let ((?x2069 (* 1024 d)))
 (let ((?x2361 (* 192 ?x823)))
 (let ((?x2362 (* (- 28) ?x815)))
 (let ((?x2369 (* 16 ?x805)))
 (let ((?x2367 (* (- 32) ?x804)))
 (let ((?x2368 (* (- 128) ?x659)))
 (let ((?x2365 (* (- 2) ?x419)))
 (let ((?x2366 (* 256 ?x291)))
 (let ((?x2364 (* 32 ?x284)))
 (let ((?x2363 (* (- 8) ?x239)))
 (let ((?x2301 (* 512 x)))
 (let ((?x2068 (* (- 1024) r)))
 (let ((?x2268 (* (- 1024) q)))
 (let ((?x617 (+ 2048 ?x2268 ?x2068 ?x2301 ?x229 ?x2363 ?x2364 ?x2366 ?x2365 ?x546 ?x2368 ?x937 ?x2367 ?x2369 ?x2362 ?x2361 (* ?x2078 ?x648 ?x648 ?x648) ?x2069 ?x2071 ?x2070 ?x2371 ?x2373 ?x2375 ?x2377 ?x2379 ?x2381 ?x2383)))
 (let ((?x970 (* ?x617 (+ ?x588 (* ?x2078 ?x2078 ?x2139 ?x648 ?x648 ?x648) ?x2230 ?x2232 ?x2065 ?x2245) ?x1183 ?x951)))
 (let ((?x2341 (* 2 (* d 4))))
 (let ((?x2333 (* (- 8) d)))
 (let ((?x1422 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x1910 (+ (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x1422 ?x1422 ?x1422 r r r) (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x1422 ?x1422 ?x1422 r r r)))))
 (let ((?x2231 (* 2 ?x395)))
 (let ((?x2222 (* 32 ?x2218)))
 (let ((?x2142 (* 4 ?x2140)))
 (let ((?x1310 (* 4 (* q q 2))))
 (let ((?x1306 (* 4 (* q 4 2))))
 (let ((?x228 (* 14 ?x815)))
 (let ((?x666 (* (- 8) ?x805)))
 (let ((?x452 (* 16 ?x804)))
 (let ((?x819 (* 4 (* q 4 ?x144))))
 (let ((?x701 (* 4 (* q 4 q))))
 (let ((?x422 (* 4 (* q 4 ?x179))))
 (let ((?x389 (* 12 ?x284)))
 (let ((?x283 (* 4 (* q 4 d))))
 (let ((?x251 (* 4 ?x239)))
 (let ((?x901 (* (- 64) x)))
 (let ((?x2225 (* 128 r)))
 (let ((?x867 (* 128 q)))
 (let ((?x548 (+ 128 ?x867 ?x2225 ?x901 ?x229 ?x251 ?x283 ?x389 ?x451 ?x419 ?x422 ?x546 ?x667 ?x937 ?x701 ?x819 ?x452 ?x666 ?x228 ?x706 ?x1306 ?x1310 (* ?x2254 ?x1422 ?x1422 ?x1422) ?x2228 ?x2142 ?x2222)))
 (let ((?x201 (* ?x548 (+ ?x2231 (* ?x2139 ?x2254 ?x2254 ?x1422 ?x1422 ?x1422) ?x2230 ?x2232 ?x2246 ?x2245) ?x1910 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x612 ?x2333 ?x2155 ?x2219 ?x2216 ?x2341))))
 (let ((?x991 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x612 ?x2155 ?x2219 ?x2216)))
 (let ((?x1581 (+ q ?x144 ?x179)))
 (let ((?x2459 (+ (* (- 1) (* ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q)) (* ?x2139 ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q q))))
 (let ((?x2343 (* 2 (* q q q q q))))
 (let ((?x2060 (* 8 (* q q r r r d))))
 (let ((?x2053 (* 12 (* q q q r r d))))
 (let ((?x2017 (* 6 (* q q q q r d))))
 (let ((?x2013 (* q q q q q d)))
 (let ((?x1686 (* 2 (* q q ?x179 q q))))
 (let ((?x1645 (* 2 (* q q ?x144 q q))))
 (let ((?x1543 (+ (* 2 (* q ?x179 ?x144 q q)) (* 2 (* ?x144 ?x179 ?x144 q q)) (* 2 (* ?x179 ?x179 ?x144 q q)) (* (- 3) (* q q q q x d)) (* (- 1) (* q q x x x d)) (* 2 (* ?x144 q ?x179 q q)) (* 2 (* ?x144 ?x179 ?x179 q q)) (* 2 (* ?x179 q ?x179 q q)) (* 2 (* q ?x144 ?x179 q q)) (* 2 (* ?x144 ?x144 ?x179 q q)) (* 6 (* q q r x x d)) (* 2 (* q ?x144 ?x144 q q)) (* 2 (* ?x144 ?x144 ?x144 q q)) (* 2 (* ?x179 ?x144 ?x144 q q)) (* 2 (* ?x144 ?x144 q q q)) (* 2 (* ?x144 q q q q)) (* 2 (* q ?x144 q q q)) (* 2 (* ?x179 ?x144 q q q)) (* 2 (* q ?x179 q q q)) (* (- 12) (* q q q r x d)) ?x1645 ?x1686 (* 2 (* ?x179 ?x179 ?x179 q q)) (* 2 (* ?x144 ?x179 q q q)) (* (- 12) (* q q r r x d)) (* 2 (* q ?x179 ?x179 q q)) (* 3 (* q q q x x d)) (* 2 (* ?x179 ?x144 ?x179 q q)) (* 2 (* ?x144 q ?x144 q q)) (* 2 (* ?x179 q ?x144 q q)) (* 2 (* ?x179 ?x179 q q q)) (* 2 (* ?x179 q q q q)) ?x2013 ?x2017 ?x2053 ?x2060 ?x2343 ?x2230 ?x2232 ?x2245)))
 (let ((?x2127 (* 6 (* q r x x))))
 (let ((?x2125 (* (- 1) (* q x x x))))
 (let ((?x2123 (* (- 12) (* q r r x))))
 (let ((?x2120 (* 8 (* q r r r))))
 (let ((?x2122 (* 3 (* q q x x))))
 (let ((?x2114 (* 12 (* q q r r))))
 (let ((?x2119 (* (- 12) (* q q r x))))
 (let ((?x2116 (* (- 4) ?x671)))
 (let ((?x2117 (* 8 ?x545)))
 (let ((?x2111 (* 2 ?x229)))
 (let ((?x532 (* (+ ?x2111 ?x2117 ?x2116 ?x2119 ?x2114 ?x2122 ?x2120 ?x2123 ?x2125 ?x2127) ?x1543 ?x2459 ?x991)))
 (let (($x2500 (or (not (= ?x532 0)) (not (= ?x201 0)) (not (= ?x970 0)) (not (= ?x2310 0)))))
 (and (= ?x991 0) $x2500))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2136 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1216 (* 4 (* d00 r00))))
 (let ((?x2145 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x753 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x1036 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x2143 (+ ?x427 ?x1036 ?x30 ?x182 ?x753 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x2145 ?x1216)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x644 (+ ?x144 ?x179 q)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x2153 (+ (* (- 1) (* ?x2139 ?x2139 ?x644 ?x644 ?x644 r r r q)) (* ?x2139 ?x2139 ?x2139 ?x644 ?x644 ?x644 r r r q q))))
 (let ((?x2167 (* (+ (* ?x644 ?x644 ?x644 q) (* ?x644 q q q)) (+ (* ?x2139 ?x644 ?x644 ?x644 q q) (* ?x644 r r)) ?x2153 ?x2143)))
 (let ((?x2131 (* 8 d)))
 (let ((?x657 (+ 16 ?x427 ?x1036 ?x30 ?x2131 ?x182 ?x753 ?x214 ?x230 (* ?x2139 ?x2139 (+ 4 q)) (* (- 2) (* ?x2139 (+ 4 q))) ?x280 (* (- 4) (* ?x2139 (+ 2 ?x144 ?x179 q d))) ?x1216)))
 (let ((?x1595 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x2150 (+ (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x1595 ?x1595 ?x1595 r r r)) (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x1595 ?x1595 ?x1595 r r r))))
 (let ((?x652 (* (+ (* ?x2254 ?x1595 ?x1595 ?x1595) (* ?x2254 ?x2254 ?x2254 ?x1595)) (+ (* ?x2139 ?x2254 ?x2254 ?x1595 ?x1595 ?x1595) (* ?x1595 r r)) ?x2150 ?x657)))
 (let ((?x2333 (* (- 8) d)))
 (let ((?x1591 (+ (- 16) ?x427 ?x1036 ?x30 ?x2333 ?x182 ?x753 ?x214 ?x230 (* (+ (- 4) q) ?x2139 ?x2139) (* (- 2) (* (+ (- 4) q) ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1216)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x873 (+ (- 2) ?x144 ?x179 q ?x2354)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x905 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x873 ?x873 ?x873 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x873 ?x873 ?x873 r r r))))
 (let ((?x1592 (* (+ (* ?x2350 ?x873 ?x873 ?x873) (* ?x2350 ?x2350 ?x2350 ?x873)) (+ (* ?x2350 ?x2350 ?x2139 ?x873 ?x873 ?x873) (* ?x873 r r)) ?x905 ?x1591)))
 (let ((?x883 (+ (- 32) ?x427 ?x1036 ?x30 (* (- 16) d) ?x182 ?x753 ?x214 ?x230 (* (+ (- 8) q) ?x2139 ?x2139) (* (- 2) (* (+ (- 8) q) ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1216)))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x843 (+ (- 4) ?x144 ?x179 q ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x754 (+ (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x843 ?x843 ?x843 r r r)) (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x843 ?x843 ?x843 r r r))))
 (let ((?x758 (* (+ (* ?x2078 ?x843 ?x843 ?x843) (* ?x2078 ?x2078 ?x2078 ?x843)) (+ (* ?x2078 ?x2078 ?x2139 ?x843 ?x843 ?x843) (* ?x843 r r)) ?x754 ?x883)))
 (let (($x2173 (or (not (= ?x758 0)) (not (= ?x1592 0)) (not (= ?x652 0)) (not (= ?x2167 0)))))
 (let ((?x612 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x730 (+ ?x211 ?x182 ?x612 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1216)))
 (and (= ?x730 0) $x2173)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x413 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2223 (* r d)))
 (let ((?x2216 (* (- 4) ?x2223)))
 (let ((?x2218 (* q d)))
 (let ((?x2219 (* (- 2) ?x2218)))
 (let ((?x2155 (* q d d)))
 (let ((?x2131 (* 8 d)))
 (let ((?x612 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x512 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d 2)) ?x612 ?x2131 ?x2155 ?x2219 ?x2216)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x1254 (+ (- 2) q ?x144 ?x179 ?x2354)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x1359 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x1254 ?x1254 ?x1254 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x1254 ?x1254 ?x1254 r r r))))
 (let ((?x2245 (* (- 1) (* r r x))))
 (let ((?x2246 (* r r d)))
 (let ((?x2360 (* (- 1) ?x2246)))
 (let ((?x2232 (* 2 (* r r r))))
 (let ((?x2230 (* q r r)))
 (let ((?x395 (* r r)))
 (let ((?x2345 (* (- 2) ?x395)))
 (let ((?x2344 (* (- 32) ?x2218)))
 (let ((?x2140 (* q q ?x179)))
 (let ((?x2106 (* (- 4) ?x2140)))
 (let ((?x2097 (* (- 4) (* q (- 4) (- 2)))))
 (let ((?x2099 (* (- 4) (* q q (- 2)))))
 (let ((?x2096 (* (- 4) (* q (- 4) q))))
 (let ((?x2088 (* (- 4) (* q q ?x2354))))
 (let ((?x2093 (* (- 4) (* q (- 4) ?x2354))))
 (let ((?x2091 (* (- 4) (* q (- 4) ?x144))))
 (let ((?x2085 (* (- 4) (* q (- 4) ?x179))))
 (let ((?x2228 (* 64 d)))
 (let ((?x823 (* q q)))
 (let ((?x706 (* 48 ?x823)))
 (let ((?x815 (* q q q)))
 (let ((?x2107 (* (- 14) ?x815)))
 (let ((?x805 (* q q x)))
 (let ((?x2100 (* 8 ?x805)))
 (let ((?x804 (* q q r)))
 (let ((?x2105 (* (- 16) ?x804)))
 (let ((?x671 (* q q q x)))
 (let ((?x937 (* (- 1) ?x671)))
 (let ((?x659 (* q x)))
 (let ((?x667 (* (- 32) ?x659)))
 (let ((?x545 (* q q q r)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x419 (* q q q d)))
 (let ((?x2104 (* (- 1) ?x419)))
 (let ((?x291 (* q r)))
 (let ((?x451 (* 64 ?x291)))
 (let ((?x284 (* q q d)))
 (let ((?x2103 (* 8 ?x284)))
 (let ((?x239 (* q q ?x144)))
 (let ((?x2102 (* (- 4) ?x239)))
 (let ((?x229 (* q q q q)))
 (let ((?x1922 (* 64 x)))
 (let ((?x2348 (* (- 128) r)))
 (let ((?x1897 (* (- 128) q)))
 (let ((?x2289 (+ 128 ?x1897 ?x2348 ?x1922 ?x229 ?x2102 ?x2103 ?x451 ?x2104 ?x546 ?x667 ?x937 ?x2105 ?x2100 ?x2107 ?x706 (* ?x2350 ?x1254 ?x1254 ?x1254) ?x2228 ?x2085 ?x2091 ?x2093 ?x2088 ?x2096 ?x2099 ?x2097 ?x2106 ?x2344)))
 (let ((?x2310 (* ?x2289 (+ ?x2345 ?x2230 ?x2232 ?x2360 ?x2245 (* ?x2350 ?x2350 ?x2139 ?x1254 ?x1254 ?x1254)) ?x1359 ?x512)))
 (let ((?x2080 (* 16 d)))
 (let ((?x951 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 8) (* d 2)) ?x612 ?x2080 ?x2155 ?x2219 ?x2216)))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x648 (+ (- 4) q ?x144 ?x179 ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x1183 (+ (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x648 ?x648 ?x648 r r r)) (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x648 ?x648 ?x648 r r r))))
 (let ((?x2065 (* (- 2) ?x2246)))
 (let ((?x588 (* (- 4) ?x395)))
 (let ((?x2383 (* (- 8) (* q (- 8) ?x179))))
 (let ((?x2381 (* (- 8) (* q q ?x2074))))
 (let ((?x2379 (* (- 8) (* q (- 8) ?x2074))))
 (let ((?x2377 (* (- 8) (* q (- 8) ?x144))))
 (let ((?x2375 (* (- 8) (* q (- 8) q))))
 (let ((?x2373 (* (- 8) (* q q (- 4)))))
 (let ((?x2371 (* (- 8) (* q (- 8) (- 4)))))
 (let ((?x2070 (* (- 256) ?x2218)))
 (let ((?x2071 (* (- 8) ?x2140)))
 (let ((?x2069 (* 1024 d)))
 (let ((?x2361 (* 192 ?x823)))
 (let ((?x2362 (* (- 28) ?x815)))
 (let ((?x2369 (* 16 ?x805)))
 (let ((?x2367 (* (- 32) ?x804)))
 (let ((?x2368 (* (- 128) ?x659)))
 (let ((?x2365 (* (- 2) ?x419)))
 (let ((?x2366 (* 256 ?x291)))
 (let ((?x2364 (* 32 ?x284)))
 (let ((?x2363 (* (- 8) ?x239)))
 (let ((?x2301 (* 512 x)))
 (let ((?x2068 (* (- 1024) r)))
 (let ((?x2268 (* (- 1024) q)))
 (let ((?x617 (+ 2048 ?x2268 ?x2068 ?x2301 ?x229 ?x2363 ?x2364 ?x2366 ?x2365 ?x546 ?x2368 ?x937 ?x2367 ?x2369 ?x2362 ?x2361 (* ?x2078 ?x648 ?x648 ?x648) ?x2069 ?x2071 ?x2070 ?x2371 ?x2373 ?x2375 ?x2377 ?x2379 ?x2381 ?x2383)))
 (let ((?x970 (* ?x617 (+ ?x588 (* ?x2078 ?x2078 ?x2139 ?x648 ?x648 ?x648) ?x2230 ?x2232 ?x2065 ?x2245) ?x1183 ?x951)))
 (let ((?x2341 (* 2 (* d 4))))
 (let ((?x2333 (* (- 8) d)))
 (let ((?x1422 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x1910 (+ (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x1422 ?x1422 ?x1422 r r r) (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x1422 ?x1422 ?x1422 r r r)))))
 (let ((?x2231 (* 2 ?x395)))
 (let ((?x2222 (* 32 ?x2218)))
 (let ((?x2142 (* 4 ?x2140)))
 (let ((?x1310 (* 4 (* q q 2))))
 (let ((?x1306 (* 4 (* q 4 2))))
 (let ((?x228 (* 14 ?x815)))
 (let ((?x666 (* (- 8) ?x805)))
 (let ((?x452 (* 16 ?x804)))
 (let ((?x819 (* 4 (* q 4 ?x144))))
 (let ((?x701 (* 4 (* q 4 q))))
 (let ((?x422 (* 4 (* q 4 ?x179))))
 (let ((?x389 (* 12 ?x284)))
 (let ((?x283 (* 4 (* q 4 d))))
 (let ((?x251 (* 4 ?x239)))
 (let ((?x901 (* (- 64) x)))
 (let ((?x2225 (* 128 r)))
 (let ((?x867 (* 128 q)))
 (let ((?x548 (+ 128 ?x867 ?x2225 ?x901 ?x229 ?x251 ?x283 ?x389 ?x451 ?x419 ?x422 ?x546 ?x667 ?x937 ?x701 ?x819 ?x452 ?x666 ?x228 ?x706 ?x1306 ?x1310 (* ?x2254 ?x1422 ?x1422 ?x1422) ?x2228 ?x2142 ?x2222)))
 (let ((?x201 (* ?x548 (+ ?x2231 (* ?x2139 ?x2254 ?x2254 ?x1422 ?x1422 ?x1422) ?x2230 ?x2232 ?x2246 ?x2245) ?x1910 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x612 ?x2333 ?x2155 ?x2219 ?x2216 ?x2341))))
 (let ((?x991 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x612 ?x2155 ?x2219 ?x2216)))
 (let ((?x1581 (+ q ?x144 ?x179)))
 (let ((?x2459 (+ (* (- 1) (* ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q)) (* ?x2139 ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q q))))
 (let ((?x2343 (* 2 (* q q q q q))))
 (let ((?x2060 (* 8 (* q q r r r d))))
 (let ((?x2053 (* 12 (* q q q r r d))))
 (let ((?x2017 (* 6 (* q q q q r d))))
 (let ((?x2013 (* q q q q q d)))
 (let ((?x1686 (* 2 (* q q ?x179 q q))))
 (let ((?x1645 (* 2 (* q q ?x144 q q))))
 (let ((?x1543 (+ (* 2 (* q ?x179 ?x144 q q)) (* 2 (* ?x144 ?x179 ?x144 q q)) (* 2 (* ?x179 ?x179 ?x144 q q)) (* (- 3) (* q q q q x d)) (* (- 1) (* q q x x x d)) (* 2 (* ?x144 q ?x179 q q)) (* 2 (* ?x144 ?x179 ?x179 q q)) (* 2 (* ?x179 q ?x179 q q)) (* 2 (* q ?x144 ?x179 q q)) (* 2 (* ?x144 ?x144 ?x179 q q)) (* 6 (* q q r x x d)) (* 2 (* q ?x144 ?x144 q q)) (* 2 (* ?x144 ?x144 ?x144 q q)) (* 2 (* ?x179 ?x144 ?x144 q q)) (* 2 (* ?x144 ?x144 q q q)) (* 2 (* ?x144 q q q q)) (* 2 (* q ?x144 q q q)) (* 2 (* ?x179 ?x144 q q q)) (* 2 (* q ?x179 q q q)) (* (- 12) (* q q q r x d)) ?x1645 ?x1686 (* 2 (* ?x179 ?x179 ?x179 q q)) (* 2 (* ?x144 ?x179 q q q)) (* (- 12) (* q q r r x d)) (* 2 (* q ?x179 ?x179 q q)) (* 3 (* q q q x x d)) (* 2 (* ?x179 ?x144 ?x179 q q)) (* 2 (* ?x144 q ?x144 q q)) (* 2 (* ?x179 q ?x144 q q)) (* 2 (* ?x179 ?x179 q q q)) (* 2 (* ?x179 q q q q)) ?x2013 ?x2017 ?x2053 ?x2060 ?x2343 ?x2230 ?x2232 ?x2245)))
 (let ((?x2127 (* 6 (* q r x x))))
 (let ((?x2125 (* (- 1) (* q x x x))))
 (let ((?x2123 (* (- 12) (* q r r x))))
 (let ((?x2120 (* 8 (* q r r r))))
 (let ((?x2122 (* 3 (* q q x x))))
 (let ((?x2114 (* 12 (* q q r r))))
 (let ((?x2119 (* (- 12) (* q q r x))))
 (let ((?x2116 (* (- 4) ?x671)))
 (let ((?x2117 (* 8 ?x545)))
 (let ((?x2111 (* 2 ?x229)))
 (let ((?x532 (* (+ ?x2111 ?x2117 ?x2116 ?x2119 ?x2114 ?x2122 ?x2120 ?x2123 ?x2125 ?x2127) ?x1543 ?x2459 ?x991)))
 (let (($x2500 (or (not (= ?x532 0)) (not (= ?x201 0)) (not (= ?x970 0)) (not (= ?x2310 0)))))
 (let (($x2491 (and (= ?x991 0) $x2500)))
 (let ((?x1216 (* 4 (* d00 r00))))
 (let ((?x753 (* 4 (* ?x2139 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x1036 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x2143 (+ ?x427 ?x1036 ?x30 ?x182 ?x753 ?x214 ?x230 (* ?x2139 ?x2139 q) (* (- 2) (* ?x2139 q)) ?x280 (* (- 4) (* ?x2139 (+ ?x144 ?x179 q))) ?x1216)))
 (let ((?x644 (+ ?x144 ?x179 q)))
 (let ((?x2153 (+ (* (- 1) (* ?x2139 ?x2139 ?x644 ?x644 ?x644 r r r q)) (* ?x2139 ?x2139 ?x2139 ?x644 ?x644 ?x644 r r r q q))))
 (let ((?x2167 (* (+ (* ?x644 ?x644 ?x644 q) (* ?x644 q q q)) (+ (* ?x2139 ?x644 ?x644 ?x644 q q) (* ?x644 r r)) ?x2153 ?x2143)))
 (let ((?x657 (+ 16 ?x427 ?x1036 ?x30 ?x2131 ?x182 ?x753 ?x214 ?x230 (* ?x2139 ?x2139 ?x2254) (* (- 2) (* ?x2139 ?x2254)) ?x280 (* (- 4) (* ?x2139 (+ 2 ?x144 ?x179 q d))) ?x1216)))
 (let ((?x1595 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2150 (+ (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x1595 ?x1595 ?x1595 r r r)) (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x1595 ?x1595 ?x1595 r r r))))
 (let ((?x652 (* (+ (* ?x2254 ?x1595 ?x1595 ?x1595) (* ?x2254 ?x2254 ?x2254 ?x1595)) (+ (* ?x2139 ?x2254 ?x2254 ?x1595 ?x1595 ?x1595) (* ?x1595 r r)) ?x2150 ?x657)))
 (let ((?x1591 (+ (- 16) ?x427 ?x1036 ?x30 ?x2333 ?x182 ?x753 ?x214 ?x230 (* ?x2350 ?x2139 ?x2139) (* (- 2) (* ?x2350 ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 2) ?x144 ?x179 q ?x2354))) ?x1216)))
 (let ((?x873 (+ (- 2) ?x144 ?x179 q ?x2354)))
 (let ((?x905 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x873 ?x873 ?x873 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x873 ?x873 ?x873 r r r))))
 (let ((?x1592 (* (+ (* ?x2350 ?x873 ?x873 ?x873) (* ?x2350 ?x2350 ?x2350 ?x873)) (+ (* ?x2350 ?x2350 ?x2139 ?x873 ?x873 ?x873) (* ?x873 r r)) ?x905 ?x1591)))
 (let ((?x883 (+ (- 32) ?x427 ?x1036 ?x30 (* (- 16) d) ?x182 ?x753 ?x214 ?x230 (* ?x2078 ?x2139 ?x2139) (* (- 2) (* ?x2078 ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 4) ?x144 ?x179 q ?x2074))) ?x1216)))
 (let ((?x843 (+ (- 4) ?x144 ?x179 q ?x2074)))
 (let ((?x754 (+ (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x843 ?x843 ?x843 r r r)) (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x843 ?x843 ?x843 r r r))))
 (let ((?x758 (* (+ (* ?x2078 ?x843 ?x843 ?x843) (* ?x2078 ?x2078 ?x2078 ?x843)) (+ (* ?x2078 ?x2078 ?x2139 ?x843 ?x843 ?x843) (* ?x843 r r)) ?x754 ?x883)))
 (let (($x2173 (or (not (= ?x758 0)) (not (= ?x1592 0)) (not (= ?x652 0)) (not (= ?x2167 0)))))
 (let ((?x730 (+ ?x211 ?x182 ?x612 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1216)))
 (let (($x2138 (and (= ?x730 0) $x2173)))
 (rewrite (= $x2138 $x2491))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x146 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x163 (+ (* (- 1) ?x62 ?x62 ?x152 ?x146 ?x146 ?x146 r r r) (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 ?x146 ?x146 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x163 (+ (* ?x62 ?x152 ?x152 ?x146 ?x146 ?x146) (* ?x146 r r)) (+ (* ?x152 ?x146 ?x146 ?x146) (* ?x152 ?x152 ?x152 ?x146)))))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x134 (+ (* (- 1) ?x62 ?x62 ?x123 ?x117 ?x117 ?x117 r r r) (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 ?x117 ?x117 r r r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x134 (+ (* ?x62 ?x123 ?x123 ?x117 ?x117 ?x117) (* ?x117 r r)) (+ (* ?x123 ?x117 ?x117 ?x117) (* ?x123 ?x123 ?x123 ?x117)))))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (+ (* (- 1) ?x62 ?x62 q ?x90 ?x90 ?x90 r r r) (* ?x62 ?x62 ?x62 q q ?x90 ?x90 ?x90 r r r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x106 (+ (* ?x62 q q ?x90 ?x90 ?x90) (* ?x90 r r)) (+ (* q ?x90 ?x90 ?x90) (* q q q ?x90)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* (- 1) ?x62 ?x62 ?x67 ?x59 ?x59 ?x59 r r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80 (+ (* ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x59 r r)) (+ (* ?x67 ?x59 ?x59 ?x59) (* ?x67 ?x67 ?x67 ?x59)))))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x173))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1119 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1216 (* 4 (* d00 r00))))
 (let ((?x576 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1193 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x1126 (* 8 q)))
 (let ((?x1036 (* (- 8) x)))
 (let ((?x1146 (* 16 r)))
 (let ((?x595 (+ ?x1146 ?x1036 ?x1126 ?x182 ?x1193 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x576 ?x1216)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1133 (+ ?x57 ?x179 q)))
 (let ((?x285 (+ 2 d)))
 (let ((?x616 (+ (* (- 1) (* ?x285 ?x285 ?x1133 ?x1133 ?x1133 r r r q)) (* ?x285 ?x285 ?x285 ?x1133 ?x1133 ?x1133 r r r q q))))
 (let ((?x622 (* (+ (* ?x1133 ?x1133 ?x1133 q) (* ?x1133 q q q)) (+ (* ?x285 ?x1133 ?x1133 ?x1133 q q) (* ?x1133 r r)) ?x616 ?x595)))
 (let ((?x211 (* 8 d)))
 (let ((?x1267 (+ 16 ?x1146 ?x1036 ?x1126 ?x211 ?x182 ?x1193 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1216)))
 (let ((?x1025 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x335 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x1025 ?x1025 ?x1025 r r r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x1025 ?x1025 ?x1025 r r r))))
 (let ((?x255 (* (+ (* ?x369 ?x1025 ?x1025 ?x1025) (* ?x369 ?x369 ?x369 ?x1025)) (+ (* ?x285 ?x369 ?x369 ?x1025 ?x1025 ?x1025) (* ?x1025 r r)) ?x335 ?x1267)))
 (let ((?x472 (* (- 8) d)))
 (let ((?x893 (+ (- 16) ?x1146 ?x1036 ?x1126 ?x472 ?x182 ?x1193 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1216)))
 (let ((?x1342 (* (- 1) d)))
 (let ((?x967 (+ (- 2) ?x57 ?x179 q ?x1342)))
 (let ((?x501 (+ (- 4) q)))
 (let ((?x927 (+ (* (- 1) (* ?x501 ?x285 ?x285 ?x967 ?x967 ?x967 r r r)) (* ?x501 ?x501 ?x285 ?x285 ?x285 ?x967 ?x967 ?x967 r r r))))
 (let ((?x714 (* (+ (* ?x501 ?x967 ?x967 ?x967) (* ?x501 ?x501 ?x501 ?x967)) (+ (* ?x501 ?x501 ?x285 ?x967 ?x967 ?x967) (* ?x967 r r)) ?x927 ?x893)))
 (let ((?x2267 (+ (- 32) ?x1146 ?x1036 ?x1126 (* (- 16) d) ?x182 ?x1193 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1216)))
 (let ((?x1952 (* (- 2) d)))
 (let ((?x594 (+ (- 4) ?x57 ?x179 q ?x1952)))
 (let ((?x1616 (+ (- 8) q)))
 (let ((?x2277 (+ (* (- 1) (* ?x1616 ?x285 ?x285 ?x594 ?x594 ?x594 r r r)) (* ?x1616 ?x1616 ?x285 ?x285 ?x285 ?x594 ?x594 ?x594 r r r))))
 (let ((?x2274 (* (+ (* ?x1616 ?x594 ?x594 ?x594) (* ?x1616 ?x1616 ?x1616 ?x594)) (+ (* ?x1616 ?x1616 ?x285 ?x594 ?x594 ?x594) (* ?x594 r r)) ?x2277 ?x2267)))
 (let (($x841 (or (not (= ?x2274 0)) (not (= ?x714 0)) (not (= ?x255 0)) (not (= ?x622 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1060 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1216)))
 (and (= ?x1060 0) $x841)))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1124 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1216 (* 4 (* d00 r00))))
 (let ((?x576 (* (- 4) (* (+ 2 d) (+ (* 2 r) (* (- 1) x) q)))))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1193 (* 4 (* (+ 2 d) r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x1126 (* 8 q)))
 (let ((?x1036 (* (- 8) x)))
 (let ((?x1146 (* 16 r)))
 (let ((?x595 (+ ?x1146 ?x1036 ?x1126 ?x182 ?x1193 ?x214 ?x230 (* (+ 2 d) (+ 2 d) q) (* (- 2) (* (+ 2 d) q)) ?x280 ?x576 ?x1216)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1133 (+ ?x57 ?x179 q)))
 (let ((?x285 (+ 2 d)))
 (let ((?x616 (+ (* (- 1) (* ?x285 ?x285 ?x1133 ?x1133 ?x1133 r r r q)) (* ?x285 ?x285 ?x285 ?x1133 ?x1133 ?x1133 r r r q q))))
 (let ((?x622 (* (+ (* ?x1133 ?x1133 ?x1133 q) (* ?x1133 q q q)) (+ (* ?x285 ?x1133 ?x1133 ?x1133 q q) (* ?x1133 r r)) ?x616 ?x595)))
 (let ((?x211 (* 8 d)))
 (let ((?x1267 (+ 16 ?x1146 ?x1036 ?x1126 ?x211 ?x182 ?x1193 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 (+ 2 ?x57 ?x179 q d))) ?x1216)))
 (let ((?x1025 (+ 2 ?x57 ?x179 q d)))
 (let ((?x369 (+ 4 q)))
 (let ((?x335 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x1025 ?x1025 ?x1025 r r r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x1025 ?x1025 ?x1025 r r r))))
 (let ((?x255 (* (+ (* ?x369 ?x1025 ?x1025 ?x1025) (* ?x369 ?x369 ?x369 ?x1025)) (+ (* ?x285 ?x369 ?x369 ?x1025 ?x1025 ?x1025) (* ?x1025 r r)) ?x335 ?x1267)))
 (let ((?x472 (* (- 8) d)))
 (let ((?x893 (+ (- 16) ?x1146 ?x1036 ?x1126 ?x472 ?x182 ?x1193 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1216)))
 (let ((?x1342 (* (- 1) d)))
 (let ((?x967 (+ (- 2) ?x57 ?x179 q ?x1342)))
 (let ((?x501 (+ (- 4) q)))
 (let ((?x927 (+ (* (- 1) (* ?x501 ?x285 ?x285 ?x967 ?x967 ?x967 r r r)) (* ?x501 ?x501 ?x285 ?x285 ?x285 ?x967 ?x967 ?x967 r r r))))
 (let ((?x714 (* (+ (* ?x501 ?x967 ?x967 ?x967) (* ?x501 ?x501 ?x501 ?x967)) (+ (* ?x501 ?x501 ?x285 ?x967 ?x967 ?x967) (* ?x967 r r)) ?x927 ?x893)))
 (let ((?x2267 (+ (- 32) ?x1146 ?x1036 ?x1126 (* (- 16) d) ?x182 ?x1193 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1216)))
 (let ((?x1952 (* (- 2) d)))
 (let ((?x594 (+ (- 4) ?x57 ?x179 q ?x1952)))
 (let ((?x1616 (+ (- 8) q)))
 (let ((?x2277 (+ (* (- 1) (* ?x1616 ?x285 ?x285 ?x594 ?x594 ?x594 r r r)) (* ?x1616 ?x1616 ?x285 ?x285 ?x285 ?x594 ?x594 ?x594 r r r))))
 (let ((?x2274 (* (+ (* ?x1616 ?x594 ?x594 ?x594) (* ?x1616 ?x1616 ?x1616 ?x594)) (+ (* ?x1616 ?x1616 ?x285 ?x594 ?x594 ?x594) (* ?x594 r r)) ?x2277 ?x2267)))
 (let (($x841 (or (not (= ?x2274 0)) (not (= ?x714 0)) (not (= ?x255 0)) (not (= ?x622 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1060 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1216)))
 (let (($x728 (and (= ?x1060 0) $x841)))
 (let ((?x146 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x163 (+ (* (- 1) ?x62 ?x62 ?x152 ?x146 ?x146 ?x146 r r r) (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 ?x146 ?x146 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x163 (+ (* ?x62 ?x152 ?x152 ?x146 ?x146 ?x146) (* ?x146 r r)) (+ (* ?x152 ?x146 ?x146 ?x146) (* ?x152 ?x152 ?x152 ?x146)))))
 (let ((?x117 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x134 (+ (* (- 1) ?x62 ?x62 ?x123 ?x117 ?x117 ?x117 r r r) (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 ?x117 ?x117 r r r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x134 (+ (* ?x62 ?x123 ?x123 ?x117 ?x117 ?x117) (* ?x117 r r)) (+ (* ?x123 ?x117 ?x117 ?x117) (* ?x123 ?x123 ?x123 ?x117)))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (+ (* (- 1) ?x62 ?x62 q ?x90 ?x90 ?x90 r r r) (* ?x62 ?x62 ?x62 q q ?x90 ?x90 ?x90 r r r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x106 (+ (* ?x62 q q ?x90 ?x90 ?x90) (* ?x90 r r)) (+ (* q ?x90 ?x90 ?x90) (* q q q ?x90)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* (- 1) ?x62 ?x62 ?x67 ?x59 ?x59 ?x59 r r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80 (+ (* ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x59 r r)) (+ (* ?x67 ?x59 ?x59 ?x59) (* ?x67 ?x67 ?x67 ?x59)))))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x174 (and (= ?x54 0) $x173)))
 (rewrite (= $x174 $x728)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x2178 (trans (quant-intro (proof-bind ?x1124) (= $x175 $x1119)) (elim-unused (= $x1119 $x2136)) (= $x175 $x2136))))
 (let ((@x27 (asserted $x175)))
 (let ((@x1211 (mp (mp (mp @x27 @x2178 $x2136) (rewrite (= $x2136 $x2136)) $x2136) (quant-intro (proof-bind ?x413) (= $x2136 $x2270)) $x2270)))
 (let ((@x2467 (mp (mp~ @x1211 (sk (~ $x2270 $x1719)) $x1719) (rewrite (= $x1719 $x1390)) $x1390)))
 (let ((@x1693 (and-elim @x2467 $x491)))
 (let ((@x303 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x1470)) @x1693 $x1470)))
 (let (($x321 (<= ?x488 0)))
 (let ((@x479 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x491) $x321)) @x1693 $x321)))
 (let (($x1887 (not (<= ?x1621 0))))
 (let (($x477 (<= ?x539 0)))
 (let (($x476 (>= ?x539 0)))
 (let ((@x1821 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1328 (not $x477) (not $x476))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x476)) @x479 @x303 false) $x476) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x477)) @x479 @x303 false) $x477) $x1328)))
 (let (($x1908 (>= ?x1478 0)))
 (let (($x264 (<= ?x1478 0)))
 (let ((@x2179 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1362 (not $x264) (not $x1908))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x264)) @x479 @x303 false) $x264) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1908)) @x479 @x303 false) $x1908) $x1362)))
 (let (($x1215 (>= ?x995 0)))
 (let (($x261 (<= ?x995 0)))
 (let ((@x503 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1519 (not $x261) (not $x1215))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x261)) @x479 @x303 false) $x261) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1215)) @x479 @x303 false) $x1215) $x1519)))
 (let ((@x188 (unit-resolution (unit-resolution (and-elim @x2467 $x1391) @x503 @x2179 (or $x996 $x1655)) @x1821 $x1655)))
 (let (($x396 (>= ?x1621 0)))
 (let ((@x1142 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1817 $x1887 (not $x396))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x396)) @x479 @x303 false) $x396) @x188 $x1887)))
 ((_ th-lemma arith farkas 1 1 1) @x1142 @x479 @x303 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        74
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1536
 :arith-nonlinear-bounds    36
 :arith-num-rows            22
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 137
 :arith-tableau-max-rows    22
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                19.94
 :memory                    19.31
 :mk-bool-var               15
 :mk-clause                 20
 :num-allocs                737962
 :num-checks                1
 :propagations              36
 :rlimit-count              13030
 :time                      0.01
 :total-time                0.03)
