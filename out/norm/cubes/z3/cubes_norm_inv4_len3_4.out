unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x876 (+ m!1 (* (- 6) n!0))))
 (let (($x826 (<= ?x876 6)))
 (let (($x366 (= ?x876 6)))
 (let ((?x731 (* 20 (* k!2 m!1 n!0 n!0))))
 (let ((?x223 (* 3 (* m!1 m!1 n!0 n!0 n!0))))
 (let ((?x788 (+ c!3 k!2)))
 (let ((?x775 (+ k!2 m!1)))
 (let ((?x763 (+ 6 m!1)))
 (let ((?x744 (+ 1 n!0)))
 (let ((?x774 (* (- 1) (* ?x744 ?x744 ?x763 ?x775 ?x775 ?x775 ?x788))))
 (let ((?x792 (* (- 6) (* k!2 k!2 m!1 n!0))))
 (let ((?x316 (* (- 6) (* k!2 m!1 m!1 n!0))))
 (let ((?x716 (* 3 (* k!2 k!2 n!0 n!0 n!0))))
 (let ((?x787 (* (- 1) (* k!2 k!2 k!2 n!0 n!0))))
 (let ((?x592 (* 8 (* k!2 m!1))))
 (let ((?x789 (* (- 3) (* ?x744 ?x744 ?x744 ?x744 ?x763 ?x775 ?x775 ?x775 ?x788))))
 (let ((?x776 (* (- 2) (* m!1 m!1 m!1 n!0))))
 (let ((?x573 (* (- 2) (* k!2 k!2 k!2 n!0))))
 (let ((?x770 (* ?x744 ?x744 ?x763 ?x775 ?x775 ?x775 ?x775 ?x788)))
 (let ((?x574 (* 11 (* k!2 k!2 n!0))))
 (let ((?x824 (* (- 3) (* k!2 m!1 m!1 n!0 n!0))))
 (let ((?x723 (* 3 (* ?x744 ?x744 ?x744 ?x763 ?x775 ?x775 ?x775))))
 (let ((?x590 (* 22 (* k!2 m!1 n!0))))
 (let ((?x748 (* 10 (* k!2 k!2 n!0 n!0))))
 (let ((?x734 (* 3 (* ?x744 ?x744 ?x744 ?x744 ?x775 ?x775))))
 (let ((?x728 (* 6 (* k!2 m!1 n!0 n!0 n!0))))
 (let ((?x762 (* 10 (* m!1 m!1 n!0 n!0))))
 (let ((?x719 (* k!2 k!2)))
 (let ((?x751 (* 4 ?x719)))
 (let ((?x798 (* (- 1) (* ?x744 ?x744 ?x763 ?x775 ?x775 ?x775 ?x775))))
 (let ((?x722 (* (- 3) (* ?x744 ?x744 ?x744 ?x763 ?x775 ?x775 ?x775 ?x788))))
 (let ((?x711 (* 4 (* m!1 m!1))))
 (let ((?x584 (* ?x744 ?x744 ?x763 ?x775 ?x775 ?x775)))
 (let ((?x579 (* (- 3) (* k!2 k!2 m!1 n!0 n!0))))
 (let ((?x794 (* (- 3) (* k!2 k!2 m!1))))
 (let ((?x577 (* (- 1) (* m!1 m!1 m!1))))
 (let ((?x337 (* (- 1) (* m!1 m!1 m!1 n!0 n!0))))
 (let ((?x571 (* (- 3) (* k!2 m!1 m!1))))
 (let ((?x796 (* 3 (* ?x744 ?x744 ?x744 ?x744 ?x763 ?x775 ?x775 ?x775))))
 (let ((?x492 (* (- 1) (* k!2 k!2 k!2))))
 (let ((?x236 (* 11 (* m!1 m!1 n!0))))
 (let ((?x123 (+ ?x236 ?x492 ?x796 ?x571 ?x337 ?x577 ?x794 ?x579 ?x584 ?x711 ?x722 ?x798 ?x751 ?x762 ?x728 ?x734 ?x748 ?x590 ?x723 ?x824 ?x574 ?x770 ?x573 ?x776 ?x789 ?x592 ?x787 ?x716 ?x316 ?x792 ?x774 ?x223 ?x731)))
 (let (($x820 (= ?x123 0)))
 (let (($x704 (not $x820)))
 (let ((?x580 (* (- 3) n!0)))
 (let ((?x735 (* (- 3) (* n!0 n!0))))
 (let ((?x805 (+ k!2 ?x735 ?x580)))
 (let (($x810 (= ?x805 1)))
 (let ((?x519 (* (- 2) n!0)))
 (let ((?x233 (* (- 1) (* k!2 n!0))))
 (let ((?x264 (* 3 c!3)))
 (let ((?x605 (+ ?x264 k!2 ?x233 ?x519)))
 (let (($x568 (= ?x605 1)))
 (let ((?x781 (* 9 (* c!3 n!0))))
 (let ((?x783 (* (- 9) n!0)))
 (let ((?x578 (* (- 1) ?x719)))
 (let ((?x559 (* 5 k!2)))
 (let ((?x825 (* 18 c!3)))
 (let (($x813 (and $x366 (= (+ ?x825 ?x559 ?x578 ?x783 ?x781) 4) $x568 $x810 $x704)))
 (let ((?x368 (+ ?x751 ?x734 ?x236 ?x590 ?x731 ?x748 ?x762 ?x796 ?x574 ?x711 ?x592 ?x787 ?x774 ?x798 ?x584 ?x723 ?x579 ?x824 ?x337 ?x492 ?x794 ?x770 ?x571 ?x577 ?x573 ?x792 ?x316 ?x722 ?x776 ?x789 ?x716 ?x728 ?x223)))
 (let (($x610 (and $x366 (= (+ ?x825 ?x559 ?x783 ?x578 ?x781) 4) (= (+ ?x264 k!2 ?x519 ?x233) 1) (= (+ k!2 ?x580 ?x735) 1) (not (= ?x368 0)))))
 (let (($x608 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x946 (* 3 (* m m n n n))))
 (let ((?x940 (* 3 (* k k n n n))))
 (let ((?x77 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x811 (* (- 3) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x878 (* (- 2) (* m m m n))))
 (let ((?x576 (* (- 3) (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x875 (* (- 6) (* k m m n))))
 (let ((?x872 (* (- 6) (* k k m n))))
 (let ((?x869 (* (- 2) (* k k k n))))
 (let ((?x849 (* (- 1) (* m m m))))
 (let ((?x866 (* (- 3) (* k m m))))
 (let ((?x720 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68 ?x77)))
 (let ((?x863 (* (- 3) (* k k m))))
 (let ((?x846 (* (- 1) (* k k k))))
 (let ((?x845 (* (- 1) (* m m m n n))))
 (let ((?x860 (* (- 3) (* k m m n n))))
 (let ((?x857 (* (- 3) (* k k m n n))))
 (let ((?x687 (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x611 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68)))
 (let ((?x520 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x759 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x842 (* (- 1) (* k k k n n))))
 (let ((?x427 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x485 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x68 ?x68))))
 (let ((?x164 (+ (* 4 (* k k)) ?x485 (* 11 (* m m n)) (* 22 (* k m n)) (* 20 (* k m n n)) (* 10 (* k k n n)) (* 10 (* m m n n)) ?x427 (* 11 (* k k n)) (* 4 (* m m)) (* 8 (* k m)) ?x842 ?x759 ?x520 ?x611 ?x687 ?x857 ?x860 ?x845 ?x846 ?x863 ?x720 ?x866 ?x849 ?x869 ?x872 ?x875 ?x576 ?x878 ?x811 ?x940 (* 6 (* k m n n n)) ?x946)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 $x214 $x266 $x304 (not (= ?x164 0)))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x768 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ k m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x485 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x68 ?x68))))
 (let ((?x77 (+ c k)))
 (let ((?x312 (+ 6 m)))
 (let ((?x811 (* (- 3) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x576 (* (- 3) (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x759 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x720 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68 ?x77)))
 (let ((?x520 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x427 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x687 (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x611 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68)))
 (let ((?x249 (+ ?x611 ?x687 ?x427 ?x520 ?x720 (* ?x315 ?x315 ?x68 ?x68) ?x759 ?x576 ?x811 ?x485 (* (- 1) (* ?x315 ?x315 ?x68 ?x68 ?x68)) (* 3 (* ?x315 ?x315 ?x315 ?x68 ?x68)))))
 (let (($x708 (not (= ?x249 0))))
 (let (($x160 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x493 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x493 $x160 $x708)))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x190 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x946 (* 3 (* m m n n n))))
 (let ((?x940 (* 3 (* k k n n n))))
 (let ((?x77 (+ c k)))
 (let ((?x68 (+ k m)))
 (let ((?x312 (+ 6 m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x811 (* (- 3) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x878 (* (- 2) (* m m m n))))
 (let ((?x576 (* (- 3) (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x875 (* (- 6) (* k m m n))))
 (let ((?x872 (* (- 6) (* k k m n))))
 (let ((?x869 (* (- 2) (* k k k n))))
 (let ((?x849 (* (- 1) (* m m m))))
 (let ((?x866 (* (- 3) (* k m m))))
 (let ((?x720 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68 ?x77)))
 (let ((?x863 (* (- 3) (* k k m))))
 (let ((?x846 (* (- 1) (* k k k))))
 (let ((?x845 (* (- 1) (* m m m n n))))
 (let ((?x860 (* (- 3) (* k m m n n))))
 (let ((?x857 (* (- 3) (* k k m n n))))
 (let ((?x687 (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x611 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68)))
 (let ((?x520 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x759 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x842 (* (- 1) (* k k k n n))))
 (let ((?x427 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x485 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x68 ?x68))))
 (let ((?x164 (+ (* 4 (* k k)) ?x485 (* 11 (* m m n)) (* 22 (* k m n)) (* 20 (* k m n n)) (* 10 (* k k n n)) (* 10 (* m m n n)) ?x427 (* 11 (* k k n)) (* 4 (* m m)) (* 8 (* k m)) ?x842 ?x759 ?x520 ?x611 ?x687 ?x857 ?x860 ?x845 ?x846 ?x863 ?x720 ?x866 ?x849 ?x869 ?x872 ?x875 ?x576 ?x878 ?x811 ?x940 (* 6 (* k m n n n)) ?x946)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x182 (and $x130 $x214 $x266 $x304 (not (= ?x164 0)))))
 (let ((?x249 (+ ?x611 ?x687 ?x427 ?x520 ?x720 (* ?x315 ?x315 ?x68 ?x68) ?x759 ?x576 ?x811 ?x485 (* (- 1) (* ?x315 ?x315 ?x68 ?x68 ?x68)) (* 3 (* ?x315 ?x315 ?x315 ?x68 ?x68)))))
 (let (($x708 (not (= ?x249 0))))
 (let (($x160 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x493 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x856 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x493 $x160 $x708)))
 (rewrite (= $x856 $x182))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x713 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ k m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x485 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x68 ?x68))))
 (let ((?x77 (+ c k)))
 (let ((?x312 (+ 6 m)))
 (let ((?x811 (* (- 3) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x576 (* (- 3) (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x759 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x720 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68 ?x77)))
 (let ((?x520 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x427 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x687 (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x611 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68)))
 (let ((?x249 (+ ?x611 ?x687 ?x427 ?x520 ?x720 (* ?x315 ?x315 ?x68 ?x68) ?x759 ?x576 ?x811 ?x485 (* (- 1) (* ?x315 ?x315 ?x68 ?x68 ?x68)) (* 3 (* ?x315 ?x315 ?x315 ?x68 ?x68)))))
 (let (($x708 (not (= ?x249 0))))
 (let (($x160 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x314 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x388 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= ?x388 (- 4)) $x314 $x160 $x708)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x822 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ k m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x485 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x68 ?x68))))
 (let ((?x77 (+ c k)))
 (let ((?x312 (+ 6 m)))
 (let ((?x811 (* (- 3) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x576 (* (- 3) (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x759 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x720 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68 ?x77)))
 (let ((?x520 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x427 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x687 (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x611 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68)))
 (let ((?x249 (+ ?x611 ?x687 ?x427 ?x520 ?x720 (* ?x315 ?x315 ?x68 ?x68) ?x759 ?x576 ?x811 ?x485 (* (- 1) (* ?x315 ?x315 ?x68 ?x68 ?x68)) (* 3 (* ?x315 ?x315 ?x315 ?x68 ?x68)))))
 (let (($x708 (not (= ?x249 0))))
 (let (($x160 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x493 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x856 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x493 $x160 $x708)))
 (let (($x314 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x388 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x682 (and $x130 (= ?x388 (- 4)) $x314 $x160 $x708)))
 (rewrite (= $x682 $x856)))))))))))))))))))))))))))))))
 ))
 (let (($x97 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x68 (+ k m)))
 (let ((?x69 (+ m 6)))
 (let ((?x77 (+ c k)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 ?x69 ?x70 ?x70) (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70) (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x80 (+ (- ?x74 (* ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70)) (* ?x77 ?x68 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70) (* ?x68 ?x68 ?x70 ?x70))))
 (let ((?x85 (- (- ?x80 (* ?x77 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70)) (* 3 ?x77 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70))))
 (let ((?x88 (+ (- ?x85 (* 3 ?x77 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x70 ?x70 ?x70 ?x70))))
 (let ((?x92 (+ (- ?x88 (* ?x68 ?x68 ?x68 ?x70 ?x70)) (* 3 ?x68 ?x68 ?x70 ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x92 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x425 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ k m)))
 (let ((?x315 (+ 1 n)))
 (let ((?x485 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x68 ?x68))))
 (let ((?x77 (+ c k)))
 (let ((?x312 (+ 6 m)))
 (let ((?x811 (* (- 3) (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x576 (* (- 3) (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x759 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x77))))
 (let ((?x720 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68 ?x77)))
 (let ((?x520 (* (- 1) (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68 ?x68))))
 (let ((?x427 (* 3 (* ?x315 ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x687 (* 3 (* ?x315 ?x315 ?x315 ?x312 ?x68 ?x68 ?x68))))
 (let ((?x611 (* ?x315 ?x315 ?x312 ?x68 ?x68 ?x68)))
 (let ((?x249 (+ ?x611 ?x687 ?x427 ?x520 ?x720 (* ?x315 ?x315 ?x68 ?x68) ?x759 ?x576 ?x811 ?x485 (* (- 1) (* ?x315 ?x315 ?x68 ?x68 ?x68)) (* 3 (* ?x315 ?x315 ?x315 ?x68 ?x68)))))
 (let (($x708 (not (= ?x249 0))))
 (let (($x160 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x314 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x388 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x682 (and $x130 (= ?x388 (- 4)) $x314 $x160 $x708)))
 (let ((?x70 (+ n 1)))
 (let ((?x74 (+ (* ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70) (* 3 ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70 ?x70) (* 3 ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70 ?x70 ?x70))))
 (let ((?x80 (+ (- ?x74 (* ?x68 ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70)) (* ?x77 ?x68 ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70) (* ?x68 ?x68 ?x70 ?x70))))
 (let ((?x85 (- (- ?x80 (* ?x77 ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70)) (* 3 ?x77 ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70 ?x70))))
 (let ((?x86 (- ?x85 (* 3 ?x77 ?x68 ?x68 ?x68 (+ m 6) ?x70 ?x70 ?x70 ?x70))))
 (let ((?x90 (- (+ ?x86 (* 3 ?x68 ?x68 ?x70 ?x70 ?x70 ?x70)) (* ?x68 ?x68 ?x68 ?x70 ?x70))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x96 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x90 (* 3 ?x68 ?x68 ?x70 ?x70 ?x70)) 0))))))
 (rewrite (= $x96 $x682)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x98 (asserted $x97)))
 (let ((@x120 (mp (mp @x98 (quant-intro (proof-bind ?x425) (= $x97 $x713)) $x713) (rewrite (= $x713 $x713)) $x713)))
 (let ((@x494 (mp (mp @x120 (quant-intro (proof-bind ?x822) (= $x713 $x768)) $x768) (quant-intro (proof-bind ?x190) (= $x768 $x608)) $x608)))
 (let ((@x558 (mp (mp~ @x494 (sk (~ $x608 $x610)) $x610) (rewrite (= $x610 $x813)) $x813)))
 (let ((@x852 (and-elim @x558 $x366)))
 (let ((@x837 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x366) $x826)) @x852 $x826)))
 (let (($x115 (>= ?x876 6)))
 (let ((@x169 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x366) $x115)) @x852 $x115)))
 (let (($x261 (<= ?x605 1)))
 (let ((@x365 (and-elim @x558 $x568)))
 (let ((@x874 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x568) $x261)) @x365 $x261)))
 (let (($x555 (>= ?x605 1)))
 (let ((@x376 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x568) $x555)) @x365 $x555)))
 (let (($x121 (<= ?x805 1)))
 (let ((@x403 (and-elim @x558 $x810)))
 (let ((@x771 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x810) $x121)) @x403 $x121)))
 (let (($x231 (>= ?x805 1)))
 (let ((@x222 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x810) $x231)) @x403 $x231)))
 (let (($x282 (not (>= ?x123 0))))
 (let (($x855 (<= ?x123 0)))
 (let ((@x174 ((_ th-lemma arith) (hypothesis (not $x855)) @x222 @x771 @x169 @x837 @x169 @x837 @x222 @x771 @x222 @x771 @x376 @x874 @x169 @x837 false)))
 (let ((@x193 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x820 (not $x855) $x282)) (and-elim @x558 $x704) (or (not $x855) $x282))))
 ((_ th-lemma arith) (unit-resolution @x193 (lemma @x174 $x855) $x282) @x222 @x771 @x169 @x837 @x169 @x837 @x222 @x771 @x222 @x771 @x376 @x874 @x169 @x837 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        21
 :arith-assert-upper        73
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           17
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             449
 :arith-nonlinear-bounds    28
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             6
 :arith-pivots              10
 :arith-row-summations      14
 :arith-tableau-max-columns 66
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 63
 :del-clause                16
 :final-checks              12
 :max-memory                3.78
 :memory                    3.19
 :mk-bool-var               83
 :mk-clause                 16
 :num-allocs                1502086
 :num-checks                1
 :propagations              12
 :rlimit-count              12103
 :time                      0.01
 :total-time                0.02)
