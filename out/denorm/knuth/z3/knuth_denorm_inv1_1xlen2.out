unsat
((set-logic NIA)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun x!0 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1587 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 4 (* r!2 d!1)) (* (- 8) r!2) (* (- 4) (* x!0 d!1)) (* (- 1) (* q!3 d!1 d!1)) (* 2 (* q!3 d!1)))))
 (let (($x1428 (>= ?x1587 0)))
 (let (($x1592 (= ?x1587 0)))
 (let ((?x1345 (* q!3 d!1)))
 (let ((?x1096 (* (- 2) ?x1345)))
 (let ((?x1343 (* q!3 d!1 d!1)))
 (let ((?x1342 (* x!0 d!1)))
 (let ((?x1395 (* 4 ?x1342)))
 (let ((?x690 (* 8 r!2)))
 (let ((?x579 (* r!2 d!1)))
 (let ((?x1289 (* (- 4) ?x579)))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x1438 (+ ?x158 ?x206 ?x190 ?x256 ?x294 ?x1289 ?x690 ?x1395 ?x1343 ?x1096)))
 (let ((?x473 (* (- 2) (* q!3 q!3 q!3 q!3 r!2))))
 (let ((?x1820 (* 2 (* q!3 q!3 q!3 r!2))))
 (let ((?x1320 (* (- 4) (* q!3 q!3 q!3 r!2 r!2))))
 (let ((?x1095 (* q!3 q!3 q!3 r!2 d!1)))
 (let ((?x606 (* (- 1) (* x!0 q!3 q!3 r!2 d!1))))
 (let ((?x1318 (* (- 2) (* x!0 q!3 q!3 r!2))))
 (let ((?x1176 (* (- 2) (* q!3 q!3 q!3 r!2 r!2 d!1))))
 (let ((?x1215 (* 2 (* q!3 q!3 r!2 r!2 d!1))))
 (let ((?x322 (* (- 1) (* q!3 q!3 q!3 q!3 r!2 d!1))))
 (let ((?x1047 (* 4 (* q!3 q!3 r!2 r!2))))
 (let ((?x390 (+ ?x1047 ?x322 ?x1215 ?x1176 ?x1318 ?x606 (* 2 (* x!0 q!3 q!3 q!3 r!2)) ?x1095 (* x!0 q!3 q!3 q!3 r!2 d!1) ?x1320 ?x1820 ?x473)))
 (let ((?x1483 (* ?x390 ?x1438)))
 (let (($x533 (= ?x1483 0)))
 (let (($x1477 (not $x533)))
 (let ((?x1719 (* r!2 d!1 d!1)))
 (let ((?x1219 (* 16 ?x1719)))
 (let ((?x1394 (* x!0 r!2 d!1)))
 (let ((?x1478 (* (- 16) ?x1394)))
 (let ((?x1352 (* q!3 r!2 d!1 d!1)))
 (let ((?x1821 (* 8 ?x1352)))
 (let ((?x1230 (+ 4 q!3)))
 (let ((?x1348 (+ 2 d!1)))
 (let ((?x1293 (* ?x1348 ?x1230 ?x1230 ?x1230 (+ 2 (* (- 1) x!0) q!3 (* 2 r!2) d!1) r!2)))
 (let ((?x1220 (* q!3 q!3 r!2)))
 (let ((?x1548 (* 20 ?x1220)))
 (let ((?x1115 (* q!3 q!3 r!2 d!1)))
 (let ((?x506 (* 12 ?x1115)))
 (let ((?x1114 (* q!3 r!2 d!1)))
 (let ((?x1713 (* 48 ?x1114)))
 (let ((?x1072 (* q!3 r!2 r!2)))
 (let ((?x1649 (* 32 ?x1072)))
 (let ((?x1048 (* q!3 r!2)))
 (let ((?x959 (* 64 ?x1048)))
 (let ((?x1042 (* r!2 r!2)))
 (let ((?x1198 (* 64 ?x1042)))
 (let ((?x1739 (* 64 r!2)))
 (let ((?x245 (* 64 ?x579)))
 (let ((?x404 (* r!2 r!2 d!1)))
 (let ((?x1340 (* 32 ?x404)))
 (let ((?x366 (* x!0 r!2)))
 (let ((?x268 (* (- 32) ?x366)))
 (let ((?x197 (* q!3 r!2 r!2 d!1)))
 (let ((?x1112 (* 16 ?x197)))
 (let ((?x159 (* q!3 q!3 r!2 d!1 d!1)))
 (let ((?x1373 (+ ?x159 ?x1112 ?x1047 (* (- 8) (* x!0 q!3 r!2 d!1)) ?x268 ?x1215 ?x1340 ?x245 ?x1739 ?x1198 ?x959 ?x1318 ?x606 ?x1649 ?x1095 ?x1713 ?x506 ?x1548 (* (- 1) ?x1293) ?x1821 ?x1478 (* (- 16) (* x!0 q!3 r!2)) ?x1219 ?x1820)))
 (let ((?x1303 (* ?x1373 ?x1438)))
 (let (($x394 (= ?x1303 0)))
 (let ((?x1221 (* (- 16) ?x1719)))
 (let ((?x898 (+ (- 4) q!3)))
 (let ((?x1307 (* ?x898 ?x898 ?x898 ?x1348 (+ (- 2) (* (- 1) x!0) q!3 (* 2 r!2) (* (- 1) d!1)) r!2)))
 (let ((?x392 (* (- 20) ?x1220)))
 (let ((?x1817 (* (- 12) ?x1115)))
 (let ((?x1382 (* (- 32) ?x1072)))
 (let ((?x1557 (* (- 64) r!2)))
 (let ((?x1876 (* (- 64) ?x579)))
 (let ((?x356 (* (- 16) ?x197)))
 (let ((?x1233 (* (- 1) ?x159)))
 (let ((?x1364 (+ ?x1233 ?x356 ?x1047 (* 8 (* x!0 q!3 r!2 d!1)) ?x268 ?x1215 ?x1340 ?x1876 ?x1557 ?x1198 ?x959 ?x1318 ?x606 ?x1382 ?x1095 ?x1713 ?x1817 ?x392 (* (- 1) ?x1307) ?x1821 ?x1478 (* 16 (* x!0 q!3 r!2)) ?x1221 ?x1820)))
 (let ((?x1309 (* ?x1364 ?x1438)))
 (let (($x1413 (= ?x1309 0)))
 (let ((?x1624 (* (- 128) ?x1719)))
 (let ((?x879 (* 32 ?x1352)))
 (let ((?x1259 (* (- 40) ?x1220)))
 (let ((?x1282 (* (- 24) ?x1115)))
 (let ((?x1158 (* 192 ?x1114)))
 (let ((?x370 (* (- 64) ?x1072)))
 (let ((?x496 (* 256 ?x1048)))
 (let ((?x1562 (* 256 ?x1042)))
 (let ((?x1800 (* (- 512) r!2)))
 (let ((?x977 (* (- 512) ?x579)))
 (let ((?x1735 (* 128 ?x404)))
 (let ((?x331 (+ (- 8) q!3)))
 (let ((?x329 (* ?x331 ?x331 ?x331 ?x1348 (+ (- 4) (* (- 1) x!0) q!3 (* 2 r!2) (* (- 2) d!1)) r!2)))
 (let ((?x1919 (* (- 32) ?x197)))
 (let ((?x975 (* (- 2) ?x159)))
 (let ((?x837 (+ ?x975 ?x1919 ?x1047 (* 16 (* x!0 q!3 r!2 d!1)) (* (- 1) ?x329) (* (- 128) ?x366) ?x1215 ?x1735 ?x977 ?x1800 ?x1562 ?x496 ?x1318 ?x606 ?x370 ?x1095 ?x1158 ?x1282 ?x1259 ?x879 (* (- 64) ?x1394) (* 32 (* x!0 q!3 r!2)) ?x1624 ?x1820)))
 (let ((?x180 (* ?x837 ?x1438)))
 (let (($x1363 (= ?x180 0)))
 (let (($x482 (not $x1363)))
 (let (($x867 (or $x482 (not $x1413) (not $x394) $x1477)))
 (let (($x353 (and $x1592 $x867)))
 (let ((?x1456 (+ ?x690 ?x158 ?x206 ?x190 ?x256 ?x294 ?x1395 ?x1096 ?x1289 ?x1343)))
 (let ((?x1351 (* ?x331 ?x331 ?x331 ?x1348 (+ (- 4) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 2) d!1)) r!2)))
 (let ((?x1387 (* (- 1) (* q!3 q!3 r!2 x!0 d!1))))
 (let ((?x1441 (* (- 2) (* q!3 q!3 r!2 x!0))))
 (let ((?x1760 (+ ?x1800 (* (- 128) (* r!2 x!0)) ?x496 ?x1562 ?x1624 ?x370 (* (- 64) (* r!2 x!0 d!1)) ?x1259 ?x1047 (* 32 (* q!3 r!2 x!0)) ?x1919 ?x1215 ?x1735 ?x1441 ?x1095 ?x1282 ?x1158 (* 16 (* q!3 r!2 x!0 d!1)) ?x1387 ?x1820 ?x879 ?x975 ?x977 (* (- 1) ?x1351))))
 (let ((?x1830 (* ?x898 ?x898 ?x898 ?x1348 (+ (- 2) q!3 (* 2 r!2) (* (- 1) x!0) (* (- 1) d!1)) r!2)))
 (let ((?x373 (* r!2 x!0 d!1)))
 (let ((?x1071 (* (- 16) ?x373)))
 (let ((?x1032 (* r!2 x!0)))
 (let ((?x1218 (* (- 32) ?x1032)))
 (let ((?x577 (+ ?x1557 ?x1218 ?x959 ?x1198 ?x1221 ?x1382 ?x1071 ?x392 ?x1047 (* 16 (* q!3 r!2 x!0)) ?x356 ?x1215 ?x1340 ?x1441 ?x1095 ?x1817 ?x1713 (* 8 (* q!3 r!2 x!0 d!1)) ?x1387 ?x1820 ?x1821 ?x1233 (* (- 1) ?x1830) ?x1876)))
 (let ((?x420 (* ?x1348 ?x1230 ?x1230 ?x1230 (+ 2 q!3 (* 2 r!2) (* (- 1) x!0) d!1) r!2)))
 (let ((?x1265 (+ ?x1739 ?x1218 ?x959 ?x1198 ?x1219 ?x1649 ?x1071 ?x1548 ?x1047 (* (- 16) (* q!3 r!2 x!0)) ?x1112 ?x1215 ?x1340 ?x1441 ?x1095 ?x506 ?x1713 (* (- 8) (* q!3 r!2 x!0 d!1)) ?x1387 ?x1820 ?x1821 (* (- 1) ?x420) ?x159 ?x245)))
 (let ((?x1865 (+ ?x1176 (* q!3 q!3 q!3 r!2 x!0 d!1) ?x1047 ?x1215 ?x1441 ?x322 ?x1095 ?x1387 ?x1820 ?x473 ?x1320 (* 2 (* q!3 q!3 q!3 r!2 x!0)))))
 (let (($x1019 (or (not (= (* ?x1865 ?x1456) 0)) (not (= (* ?x1265 ?x1456) 0)) (not (= (* ?x577 ?x1456) 0)) (not (= (* ?x1760 ?x1456) 0)))))
 (let (($x198 (and (= ?x1456 0) $x1019)))
 (let (($x324 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1890 (* q d d)))
 (let ((?x1826 (* r d)))
 (let ((?x1827 (* (- 4) ?x1826)))
 (let ((?x1825 (* (- 2) (* q d))))
 (let ((?x621 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1038 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x621 ?x1825 ?x1827 ?x1890)))
 (let ((?x480 (+ 2 d)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1929 (* ?x1981 ?x1981 ?x1981 ?x480 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x172 (* (- 1) ?x1929)))
 (let ((?x1977 (* (- 512) ?x1826)))
 (let ((?x1527 (* q q r d d)))
 (let ((?x1966 (* (- 2) ?x1527)))
 (let ((?x1227 (* q r d d)))
 (let ((?x1967 (* 32 ?x1227)))
 (let ((?x1193 (* 2 (* q q q r))))
 (let ((?x721 (* (- 1) (* q q r x d))))
 (let ((?x1127 (* q q r d)))
 (let ((?x648 (* (- 24) ?x1127)))
 (let ((?x1121 (* q q q r d)))
 (let ((?x610 (* (- 2) (* q q r x))))
 (let ((?x1013 (* r r d)))
 (let ((?x1973 (* 128 ?x1013)))
 (let ((?x953 (* 2 (* q q r r d))))
 (let ((?x952 (* q r r d)))
 (let ((?x1974 (* (- 32) ?x952)))
 (let ((?x548 (* 4 (* q q r r))))
 (let ((?x626 (* r x d)))
 (let ((?x1908 (* (- 64) ?x626)))
 (let ((?x608 (* r d d)))
 (let ((?x1976 (* (- 128) ?x608)))
 (let ((?x371 (* r r)))
 (let ((?x1972 (* 256 ?x371)))
 (let ((?x163 (* r x)))
 (let ((?x1987 (* (- 128) ?x163)))
 (let ((?x1982 (* (- 512) r)))
 (let ((?x869 (+ ?x1982 ?x1987 (* 256 (* q r)) ?x1972 ?x1976 (* (- 64) (* q r r)) ?x1908 (* (- 40) (* q q r)) ?x548 (* 32 (* q r x)) ?x1974 ?x953 ?x1973 ?x610 ?x1121 ?x648 (* 192 (* q r d)) (* 16 (* q r x d)) ?x721 ?x1193 ?x1967 ?x1966 ?x1977 ?x172)))
 (let ((?x1617 (* (- 64) ?x1826)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1815 (* ?x1612 ?x1612 ?x1612 ?x480 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let ((?x986 (* (- 1) ?x1815)))
 (let ((?x1629 (* (- 1) ?x1527)))
 (let ((?x1528 (* 8 ?x1227)))
 (let ((?x1161 (* q r x d)))
 (let ((?x1924 (* 8 ?x1161)))
 (let ((?x1129 (* q r d)))
 (let ((?x1454 (* 48 ?x1129)))
 (let ((?x935 (* (- 12) ?x1127)))
 (let ((?x1014 (* 32 ?x1013)))
 (let ((?x1619 (* (- 16) ?x952)))
 (let ((?x863 (* q r x)))
 (let ((?x1990 (* 16 ?x863)))
 (let ((?x307 (* (- 16) ?x626)))
 (let ((?x620 (* q r r)))
 (let ((?x1975 (* (- 32) ?x620)))
 (let ((?x1618 (* (- 16) ?x608)))
 (let ((?x1015 (* 64 ?x371)))
 (let ((?x267 (* q r)))
 (let ((?x906 (* 64 ?x267)))
 (let ((?x1526 (* (- 32) ?x163)))
 (let ((?x1611 (* (- 64) r)))
 (let ((?x1496 (+ ?x1611 ?x1526 ?x906 ?x1015 ?x1618 ?x1975 ?x307 (* (- 20) (* q q r)) ?x548 ?x1990 ?x1619 ?x953 ?x1014 ?x610 ?x1121 ?x935 ?x1454 ?x1924 ?x721 ?x1193 ?x1528 ?x1629 ?x986 ?x1617)))
 (let ((?x607 (* 64 ?x1826)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1406 (* ?x480 ?x481 ?x481 ?x481 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1502 (* (- 1) ?x1406)))
 (let ((?x502 (* (- 8) ?x1161)))
 (let ((?x958 (* 16 ?x952)))
 (let ((?x866 (* (- 16) ?x863)))
 (let ((?x951 (* 16 ?x608)))
 (let ((?x479 (* 64 r)))
 (let ((?x1381 (+ ?x479 ?x1526 ?x906 ?x1015 ?x951 (* 32 ?x620) ?x307 (* 20 (* q q r)) ?x548 ?x866 ?x958 ?x953 ?x1014 ?x610 ?x1121 (* 12 ?x1127) ?x1454 ?x502 ?x721 ?x1193 ?x1528 ?x1502 ?x1527 ?x607)))
 (let ((?x1573 (* 2 (* q q q r x))))
 (let ((?x1571 (* (- 4) (* q q q r r))))
 (let ((?x1554 (* (- 2) (* q q q q r))))
 (let ((?x369 (* (- 1) (* q q q q r d))))
 (let ((?x290 (* q q q r x d)))
 (let ((?x1110 (* (- 2) (* q q q r r d))))
 (let ((?x655 (* (+ ?x1110 ?x290 ?x548 ?x953 ?x610 ?x369 ?x1121 ?x721 ?x1193 ?x1554 ?x1571 ?x1573) ?x1038)))
 (let (($x1445 (or (not (= ?x655 0)) (not (= (* ?x1381 ?x1038) 0)) (not (= (* ?x1496 ?x1038) 0)) (not (= (* ?x869 ?x1038) 0)))))
 (let (($x974 (= ?x1038 0)))
 (and $x974 $x1445)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x810 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1890 (* q d d)))
 (let ((?x1826 (* r d)))
 (let ((?x1827 (* (- 4) ?x1826)))
 (let ((?x1825 (* (- 2) (* q d))))
 (let ((?x621 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1038 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x621 ?x1825 ?x1827 ?x1890)))
 (let ((?x1573 (* 2 (* q q q r x))))
 (let ((?x1571 (* (- 4) (* q q q r r))))
 (let ((?x1554 (* (- 2) (* q q q q r))))
 (let ((?x721 (* (- 1) (* q q r x d))))
 (let ((?x1121 (* q q q r d)))
 (let ((?x369 (* (- 1) (* q q q q r d))))
 (let ((?x953 (* 2 (* q q r r d))))
 (let ((?x290 (* q q q r x d)))
 (let ((?x1110 (* (- 2) (* q q q r r d))))
 (let ((?x1676 (+ ?x1110 ?x290 ?x953 ?x369 ?x1121 ?x721 (* 2 (* q r q q)) (* 2 (* (* 2 r) r q q)) (* 2 (* (* (- 1) x) r q q)) ?x1554 ?x1571 ?x1573)))
 (let ((?x1580 (* 8 d)))
 (let ((?x1385 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 4) (* d 2)) ?x621 ?x1580 ?x1825 ?x1827 ?x1890)))
 (let ((?x1617 (* (- 64) ?x1826)))
 (let ((?x480 (+ 2 d)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1815 (* ?x1612 ?x1612 ?x1612 ?x480 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let ((?x986 (* (- 1) ?x1815)))
 (let ((?x1527 (* q q r d d)))
 (let ((?x1629 (* (- 1) ?x1527)))
 (let ((?x1193 (* 2 (* q q q r))))
 (let ((?x1127 (* q q r d)))
 (let ((?x935 (* (- 12) ?x1127)))
 (let ((?x610 (* (- 2) (* q q r x))))
 (let ((?x1013 (* r r d)))
 (let ((?x1014 (* 32 ?x1013)))
 (let ((?x863 (* q r x)))
 (let ((?x1631 (* 8 ?x863)))
 (let ((?x548 (* 4 (* q q r r))))
 (let ((?x626 (* r x d)))
 (let ((?x307 (* (- 16) ?x626)))
 (let ((?x620 (* q r r)))
 (let ((?x1317 (* (- 16) ?x620)))
 (let ((?x608 (* r d d)))
 (let ((?x1618 (* (- 16) ?x608)))
 (let ((?x371 (* r r)))
 (let ((?x1015 (* 64 ?x371)))
 (let ((?x267 (* q r)))
 (let ((?x1195 (* 48 ?x267)))
 (let ((?x163 (* r x)))
 (let ((?x1526 (* (- 32) ?x163)))
 (let ((?x1611 (* (- 64) r)))
 (let ((?x1070 (+ ?x1611 ?x1526 (* (- 4) (* q d (* 2 r) r)) (* (- 4) (* q d (- 2) r)) (* (- 4) (* q 2 (* 2 r) r)) ?x1195 (* (- 4) (* q 2 (* (- 1) d) r)) ?x1015 (* (- 4) (* q 2 q r)) (* (- 4) (* q 2 (- 2) r)) ?x1618 ?x1317 ?x307 (* (- 12) (* q q r)) (* (- 4) (* q 2 (* (- 1) x) r)) ?x548 ?x1631 (* (- 8) (* q r r d)) ?x953 (* (- 4) (* q d (* (- 1) x) r)) ?x1014 ?x610 ?x1121 ?x935 (* 32 (* q r d)) (* 4 (* q r x d)) ?x721 ?x1193 (* 4 (* q r d d)) ?x1629 (* (- 4) (* q d (* (- 1) d) r)) ?x986 ?x1617)))
 (let ((?x1965 (* 16 d)))
 (let ((?x838 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 8) (* d 2)) ?x621 ?x1965 ?x1825 ?x1827 ?x1890)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1929 (* ?x1981 ?x1981 ?x1981 ?x480 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x172 (* (- 1) ?x1929)))
 (let ((?x1977 (* (- 512) ?x1826)))
 (let ((?x1966 (* (- 2) ?x1527)))
 (let ((?x1161 (* q r x d)))
 (let ((?x1924 (* 8 ?x1161)))
 (let ((?x648 (* (- 24) ?x1127)))
 (let ((?x1973 (* 128 ?x1013)))
 (let ((?x952 (* q r r d)))
 (let ((?x1619 (* (- 16) ?x952)))
 (let ((?x1990 (* 16 ?x863)))
 (let ((?x1908 (* (- 64) ?x626)))
 (let ((?x1975 (* (- 32) ?x620)))
 (let ((?x1976 (* (- 128) ?x608)))
 (let ((?x1972 (* 256 ?x371)))
 (let ((?x1968 (* 192 ?x267)))
 (let ((?x1987 (* (- 128) ?x163)))
 (let ((?x1982 (* (- 512) r)))
 (let ((?x740 (+ ?x1982 ?x1987 (* (- 8) (* q d (* 2 r) r)) (* (- 8) (* q 2 (* 2 r) r)) ?x1968 ?x1972 (* (- 8) (* q 2 q r)) (* (- 8) (* q d (* (- 2) d) r)) ?x1976 ?x1975 ?x1908 (* (- 24) (* q q r)) (* (- 8) (* q 2 (* (- 1) x) r)) ?x548 ?x1990 ?x1619 ?x953 (* (- 8) (* q d (* (- 1) x) r)) ?x1973 ?x610 ?x1121 ?x648 (* 128 (* q r d)) ?x1924 ?x721 ?x1193 (* 16 (* q r d d)) (* (- 8) (* q 2 (* (- 2) d) r)) ?x1966 (* (- 8) (* q 2 (- 4) r)) (* (- 8) (* q d (- 4) r)) ?x1977 ?x172)))
 (let ((?x1961 (* 2 (* d 4))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x607 (* 64 ?x1826)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1406 (* ?x480 ?x481 ?x481 ?x481 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1502 (* (- 1) ?x1406)))
 (let ((?x1227 (* q r d d)))
 (let ((?x1528 (* 8 ?x1227)))
 (let ((?x1226 (* 2 (* q 4 2 r))))
 (let ((?x1209 (* 2 (* q q 2 r))))
 (let ((?x1207 (* 2 (* q 4 q r))))
 (let ((?x502 (* (- 8) ?x1161)))
 (let ((?x1155 (* 2 (* q 4 (* 2 r) r))))
 (let ((?x1151 (* 2 (* q q (* 2 r) r))))
 (let ((?x1148 (* 2 (* q 4 d r))))
 (let ((?x1138 (* 2 (* q q d r))))
 (let ((?x1136 (* 2 (* q 4 (* (- 1) x) r))))
 (let ((?x1133 (* 2 (* q q (* (- 1) x) r))))
 (let ((?x1129 (* q r d)))
 (let ((?x1130 (* 40 ?x1129)))
 (let ((?x1128 (* 10 ?x1127)))
 (let ((?x958 (* 16 ?x952)))
 (let ((?x1543 (* (- 8) ?x863)))
 (let ((?x664 (* q q r)))
 (let ((?x1194 (* 8 ?x664)))
 (let ((?x617 (* 16 ?x620)))
 (let ((?x951 (* 16 ?x608)))
 (let ((?x479 (* 64 r)))
 (let ((?x515 (+ ?x479 ?x1526 ?x1195 ?x1015 ?x951 ?x617 ?x307 ?x1194 ?x1543 ?x958 ?x953 ?x1014 ?x1121 ?x1128 ?x1130 ?x1133 ?x1136 ?x1138 ?x1148 ?x1151 ?x1155 ?x502 ?x721 ?x1193 ?x1207 ?x1209 ?x1226 ?x1528 ?x1502 ?x1527 ?x607)))
 (let ((?x194 (* ?x515 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x621 ?x1954 ?x1825 ?x1827 ?x1890 ?x1961))))
 (let (($x700 (or (not (= ?x194 0)) (not (= (* ?x740 ?x838) 0)) (not (= (* ?x1070 ?x1385) 0)) (not (= (* ?x1676 ?x1038) 0)))))
 (let (($x974 (= ?x1038 0)))
 (and $x974 $x700))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1595 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1890 (* q d d)))
 (let ((?x1826 (* r d)))
 (let ((?x1827 (* (- 4) ?x1826)))
 (let ((?x1825 (* (- 2) (* q d))))
 (let ((?x621 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1038 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x621 ?x1825 ?x1827 ?x1890)))
 (let ((?x480 (+ 2 d)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1929 (* ?x1981 ?x1981 ?x1981 ?x480 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x172 (* (- 1) ?x1929)))
 (let ((?x1977 (* (- 512) ?x1826)))
 (let ((?x1527 (* q q r d d)))
 (let ((?x1966 (* (- 2) ?x1527)))
 (let ((?x1227 (* q r d d)))
 (let ((?x1967 (* 32 ?x1227)))
 (let ((?x1193 (* 2 (* q q q r))))
 (let ((?x721 (* (- 1) (* q q r x d))))
 (let ((?x1127 (* q q r d)))
 (let ((?x648 (* (- 24) ?x1127)))
 (let ((?x1121 (* q q q r d)))
 (let ((?x610 (* (- 2) (* q q r x))))
 (let ((?x1013 (* r r d)))
 (let ((?x1973 (* 128 ?x1013)))
 (let ((?x953 (* 2 (* q q r r d))))
 (let ((?x952 (* q r r d)))
 (let ((?x1974 (* (- 32) ?x952)))
 (let ((?x548 (* 4 (* q q r r))))
 (let ((?x626 (* r x d)))
 (let ((?x1908 (* (- 64) ?x626)))
 (let ((?x608 (* r d d)))
 (let ((?x1976 (* (- 128) ?x608)))
 (let ((?x371 (* r r)))
 (let ((?x1972 (* 256 ?x371)))
 (let ((?x163 (* r x)))
 (let ((?x1987 (* (- 128) ?x163)))
 (let ((?x1982 (* (- 512) r)))
 (let ((?x869 (+ ?x1982 ?x1987 (* 256 (* q r)) ?x1972 ?x1976 (* (- 64) (* q r r)) ?x1908 (* (- 40) (* q q r)) ?x548 (* 32 (* q r x)) ?x1974 ?x953 ?x1973 ?x610 ?x1121 ?x648 (* 192 (* q r d)) (* 16 (* q r x d)) ?x721 ?x1193 ?x1967 ?x1966 ?x1977 ?x172)))
 (let ((?x1617 (* (- 64) ?x1826)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1815 (* ?x1612 ?x1612 ?x1612 ?x480 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let ((?x986 (* (- 1) ?x1815)))
 (let ((?x1629 (* (- 1) ?x1527)))
 (let ((?x1528 (* 8 ?x1227)))
 (let ((?x1161 (* q r x d)))
 (let ((?x1924 (* 8 ?x1161)))
 (let ((?x1129 (* q r d)))
 (let ((?x1454 (* 48 ?x1129)))
 (let ((?x935 (* (- 12) ?x1127)))
 (let ((?x1014 (* 32 ?x1013)))
 (let ((?x1619 (* (- 16) ?x952)))
 (let ((?x863 (* q r x)))
 (let ((?x1990 (* 16 ?x863)))
 (let ((?x307 (* (- 16) ?x626)))
 (let ((?x620 (* q r r)))
 (let ((?x1975 (* (- 32) ?x620)))
 (let ((?x1618 (* (- 16) ?x608)))
 (let ((?x1015 (* 64 ?x371)))
 (let ((?x267 (* q r)))
 (let ((?x906 (* 64 ?x267)))
 (let ((?x1526 (* (- 32) ?x163)))
 (let ((?x1611 (* (- 64) r)))
 (let ((?x1496 (+ ?x1611 ?x1526 ?x906 ?x1015 ?x1618 ?x1975 ?x307 (* (- 20) (* q q r)) ?x548 ?x1990 ?x1619 ?x953 ?x1014 ?x610 ?x1121 ?x935 ?x1454 ?x1924 ?x721 ?x1193 ?x1528 ?x1629 ?x986 ?x1617)))
 (let ((?x607 (* 64 ?x1826)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1406 (* ?x480 ?x481 ?x481 ?x481 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1502 (* (- 1) ?x1406)))
 (let ((?x502 (* (- 8) ?x1161)))
 (let ((?x958 (* 16 ?x952)))
 (let ((?x866 (* (- 16) ?x863)))
 (let ((?x951 (* 16 ?x608)))
 (let ((?x479 (* 64 r)))
 (let ((?x1381 (+ ?x479 ?x1526 ?x906 ?x1015 ?x951 (* 32 ?x620) ?x307 (* 20 (* q q r)) ?x548 ?x866 ?x958 ?x953 ?x1014 ?x610 ?x1121 (* 12 ?x1127) ?x1454 ?x502 ?x721 ?x1193 ?x1528 ?x1502 ?x1527 ?x607)))
 (let ((?x1573 (* 2 (* q q q r x))))
 (let ((?x1571 (* (- 4) (* q q q r r))))
 (let ((?x1554 (* (- 2) (* q q q q r))))
 (let ((?x369 (* (- 1) (* q q q q r d))))
 (let ((?x290 (* q q q r x d)))
 (let ((?x1110 (* (- 2) (* q q q r r d))))
 (let ((?x655 (* (+ ?x1110 ?x290 ?x548 ?x953 ?x610 ?x369 ?x1121 ?x721 ?x1193 ?x1554 ?x1571 ?x1573) ?x1038)))
 (let (($x1445 (or (not (= ?x655 0)) (not (= (* ?x1381 ?x1038) 0)) (not (= (* ?x1496 ?x1038) 0)) (not (= (* ?x869 ?x1038) 0)))))
 (let (($x974 (= ?x1038 0)))
 (let (($x1481 (and $x974 $x1445)))
 (let ((?x1676 (+ ?x1110 ?x290 ?x953 ?x369 ?x1121 ?x721 (* 2 (* q r q q)) (* 2 (* (* 2 r) r q q)) (* 2 (* (* (- 1) x) r q q)) ?x1554 ?x1571 ?x1573)))
 (let ((?x1580 (* 8 d)))
 (let ((?x1385 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 4) (* d 2)) ?x621 ?x1580 ?x1825 ?x1827 ?x1890)))
 (let ((?x1631 (* 8 ?x863)))
 (let ((?x1317 (* (- 16) ?x620)))
 (let ((?x1195 (* 48 ?x267)))
 (let ((?x1070 (+ ?x1611 ?x1526 (* (- 4) (* q d (* 2 r) r)) (* (- 4) (* q d (- 2) r)) (* (- 4) (* q 2 (* 2 r) r)) ?x1195 (* (- 4) (* q 2 (* (- 1) d) r)) ?x1015 (* (- 4) (* q 2 q r)) (* (- 4) (* q 2 (- 2) r)) ?x1618 ?x1317 ?x307 (* (- 12) (* q q r)) (* (- 4) (* q 2 (* (- 1) x) r)) ?x548 ?x1631 (* (- 8) ?x952) ?x953 (* (- 4) (* q d (* (- 1) x) r)) ?x1014 ?x610 ?x1121 ?x935 (* 32 ?x1129) (* 4 ?x1161) ?x721 ?x1193 (* 4 ?x1227) ?x1629 (* (- 4) (* q d (* (- 1) d) r)) ?x986 ?x1617)))
 (let ((?x1965 (* 16 d)))
 (let ((?x838 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 8) (* d 2)) ?x621 ?x1965 ?x1825 ?x1827 ?x1890)))
 (let ((?x1968 (* 192 ?x267)))
 (let ((?x740 (+ ?x1982 ?x1987 (* (- 8) (* q d (* 2 r) r)) (* (- 8) (* q 2 (* 2 r) r)) ?x1968 ?x1972 (* (- 8) (* q 2 q r)) (* (- 8) (* q d (* (- 2) d) r)) ?x1976 ?x1975 ?x1908 (* (- 24) (* q q r)) (* (- 8) (* q 2 (* (- 1) x) r)) ?x548 ?x1990 ?x1619 ?x953 (* (- 8) (* q d (* (- 1) x) r)) ?x1973 ?x610 ?x1121 ?x648 (* 128 ?x1129) ?x1924 ?x721 ?x1193 (* 16 ?x1227) (* (- 8) (* q 2 (* (- 2) d) r)) ?x1966 (* (- 8) (* q 2 (- 4) r)) (* (- 8) (* q d (- 4) r)) ?x1977 ?x172)))
 (let ((?x1961 (* 2 (* d 4))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x1226 (* 2 (* q 4 2 r))))
 (let ((?x1209 (* 2 (* q q 2 r))))
 (let ((?x1207 (* 2 (* q 4 q r))))
 (let ((?x1155 (* 2 (* q 4 (* 2 r) r))))
 (let ((?x1151 (* 2 (* q q (* 2 r) r))))
 (let ((?x1148 (* 2 (* q 4 d r))))
 (let ((?x1138 (* 2 (* q q d r))))
 (let ((?x1136 (* 2 (* q 4 (* (- 1) x) r))))
 (let ((?x1133 (* 2 (* q q (* (- 1) x) r))))
 (let ((?x1130 (* 40 ?x1129)))
 (let ((?x1128 (* 10 ?x1127)))
 (let ((?x1543 (* (- 8) ?x863)))
 (let ((?x664 (* q q r)))
 (let ((?x1194 (* 8 ?x664)))
 (let ((?x617 (* 16 ?x620)))
 (let ((?x515 (+ ?x479 ?x1526 ?x1195 ?x1015 ?x951 ?x617 ?x307 ?x1194 ?x1543 ?x958 ?x953 ?x1014 ?x1121 ?x1128 ?x1130 ?x1133 ?x1136 ?x1138 ?x1148 ?x1151 ?x1155 ?x502 ?x721 ?x1193 ?x1207 ?x1209 ?x1226 ?x1528 ?x1502 ?x1527 ?x607)))
 (let ((?x194 (* ?x515 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x621 ?x1954 ?x1825 ?x1827 ?x1890 ?x1961))))
 (let (($x700 (or (not (= ?x194 0)) (not (= (* ?x740 ?x838) 0)) (not (= (* ?x1070 ?x1385) 0)) (not (= (* ?x1676 ?x1038) 0)))))
 (let (($x683 (and $x974 $x700)))
 (rewrite (= $x683 $x1481)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x363 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1530 (* 4 (* d00 r00))))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x302 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x480 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1145 (* 4 (* ?x480 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x846 (+ (- 32) ?x403 ?x229 ?x30 (* (- 16) d) ?x158 ?x1145 ?x190 ?x206 (* (+ (- 8) q) ?x480 ?x480) (* (- 2) (* (+ (- 8) q) ?x480)) ?x256 (* (- 4) (* ?x480 ?x302)) ?x1530)))
 (let ((?x311 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x480 ?x302 r))))
 (let (($x1190 (= (* (+ ?x311 (* (+ (- 8) q) (+ (- 8) q) ?x480 ?x302 r)) ?x846) 0)))
 (let (($x1565 (not $x1190)))
 (let ((?x538 (+ ?x403 ?x229 ?x30 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x1530)))
 (let ((?x609 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x995 (not (= (* ?x609 ?x538) 0))))
 (let ((?x1580 (* 8 d)))
 (let ((?x1642 (+ 16 ?x403 ?x229 ?x30 ?x1580 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 (+ 4 q)) (* (- 2) (* ?x480 (+ 4 q))) ?x256 (* (- 4) (* ?x480 (+ 2 ?x126 ?x155 q d))) ?x1530)))
 (let ((?x1467 (+ 2 ?x126 ?x155 q d)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1143 (+ (* (- 1) (* ?x480 ?x481 ?x481 ?x481 ?x1467 r)) (* ?x480 ?x481 ?x481 ?x1467 r))))
 (let (($x405 (not (= (* ?x1143 ?x1642) 0))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x1012 (+ (- 16) ?x403 ?x229 ?x30 ?x1954 ?x158 ?x1145 ?x190 ?x206 (* (+ (- 4) q) ?x480 ?x480) (* (- 2) (* (+ (- 4) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x1530)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x552 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x546 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x552 r)) (* ?x1612 ?x1612 ?x480 ?x552 r))))
 (let (($x299 (not (= (* ?x546 ?x1012) 0))))
 (let ((?x621 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x520 (+ ?x187 ?x158 ?x621 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x1530)))
 (let (($x957 (= ?x520 0)))
 (and $x957 (or $x299 $x405 $x995 $x1565))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x705 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1890 (* q d d)))
 (let ((?x1826 (* r d)))
 (let ((?x1827 (* (- 4) ?x1826)))
 (let ((?x1825 (* (- 2) (* q d))))
 (let ((?x621 (* 4 (* x d))))
 (let ((?x293 (* r00 d00)))
 (let ((?x294 (* 4 ?x293)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x187 (* 8 r)))
 (let ((?x1038 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x621 ?x1825 ?x1827 ?x1890)))
 (let ((?x1573 (* 2 (* q q q r x))))
 (let ((?x1571 (* (- 4) (* q q q r r))))
 (let ((?x1554 (* (- 2) (* q q q q r))))
 (let ((?x721 (* (- 1) (* q q r x d))))
 (let ((?x1121 (* q q q r d)))
 (let ((?x369 (* (- 1) (* q q q q r d))))
 (let ((?x953 (* 2 (* q q r r d))))
 (let ((?x290 (* q q q r x d)))
 (let ((?x1110 (* (- 2) (* q q q r r d))))
 (let ((?x1676 (+ ?x1110 ?x290 ?x953 ?x369 ?x1121 ?x721 (* 2 (* q r q q)) (* 2 (* (* 2 r) r q q)) (* 2 (* (* (- 1) x) r q q)) ?x1554 ?x1571 ?x1573)))
 (let ((?x1580 (* 8 d)))
 (let ((?x1385 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 4) (* d 2)) ?x621 ?x1580 ?x1825 ?x1827 ?x1890)))
 (let ((?x1617 (* (- 64) ?x1826)))
 (let ((?x480 (+ 2 d)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x1815 (* ?x1612 ?x1612 ?x1612 ?x480 (+ (- 2) q (* 2 r) (* (- 1) x) (* (- 1) d)) r)))
 (let ((?x986 (* (- 1) ?x1815)))
 (let ((?x1527 (* q q r d d)))
 (let ((?x1629 (* (- 1) ?x1527)))
 (let ((?x1193 (* 2 (* q q q r))))
 (let ((?x1127 (* q q r d)))
 (let ((?x935 (* (- 12) ?x1127)))
 (let ((?x610 (* (- 2) (* q q r x))))
 (let ((?x1013 (* r r d)))
 (let ((?x1014 (* 32 ?x1013)))
 (let ((?x863 (* q r x)))
 (let ((?x1631 (* 8 ?x863)))
 (let ((?x548 (* 4 (* q q r r))))
 (let ((?x626 (* r x d)))
 (let ((?x307 (* (- 16) ?x626)))
 (let ((?x620 (* q r r)))
 (let ((?x1317 (* (- 16) ?x620)))
 (let ((?x608 (* r d d)))
 (let ((?x1618 (* (- 16) ?x608)))
 (let ((?x371 (* r r)))
 (let ((?x1015 (* 64 ?x371)))
 (let ((?x267 (* q r)))
 (let ((?x1195 (* 48 ?x267)))
 (let ((?x163 (* r x)))
 (let ((?x1526 (* (- 32) ?x163)))
 (let ((?x1611 (* (- 64) r)))
 (let ((?x1070 (+ ?x1611 ?x1526 (* (- 4) (* q d (* 2 r) r)) (* (- 4) (* q d (- 2) r)) (* (- 4) (* q 2 (* 2 r) r)) ?x1195 (* (- 4) (* q 2 (* (- 1) d) r)) ?x1015 (* (- 4) (* q 2 q r)) (* (- 4) (* q 2 (- 2) r)) ?x1618 ?x1317 ?x307 (* (- 12) (* q q r)) (* (- 4) (* q 2 (* (- 1) x) r)) ?x548 ?x1631 (* (- 8) (* q r r d)) ?x953 (* (- 4) (* q d (* (- 1) x) r)) ?x1014 ?x610 ?x1121 ?x935 (* 32 (* q r d)) (* 4 (* q r x d)) ?x721 ?x1193 (* 4 (* q r d d)) ?x1629 (* (- 4) (* q d (* (- 1) d) r)) ?x986 ?x1617)))
 (let ((?x1965 (* 16 d)))
 (let ((?x838 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 (* (- 8) (* d 2)) ?x621 ?x1965 ?x1825 ?x1827 ?x1890)))
 (let ((?x1981 (+ (- 8) q)))
 (let ((?x1929 (* ?x1981 ?x1981 ?x1981 ?x480 (+ (- 4) q (* 2 r) (* (- 1) x) (* (- 2) d)) r)))
 (let ((?x172 (* (- 1) ?x1929)))
 (let ((?x1977 (* (- 512) ?x1826)))
 (let ((?x1966 (* (- 2) ?x1527)))
 (let ((?x1161 (* q r x d)))
 (let ((?x1924 (* 8 ?x1161)))
 (let ((?x648 (* (- 24) ?x1127)))
 (let ((?x1973 (* 128 ?x1013)))
 (let ((?x952 (* q r r d)))
 (let ((?x1619 (* (- 16) ?x952)))
 (let ((?x1990 (* 16 ?x863)))
 (let ((?x1908 (* (- 64) ?x626)))
 (let ((?x1975 (* (- 32) ?x620)))
 (let ((?x1976 (* (- 128) ?x608)))
 (let ((?x1972 (* 256 ?x371)))
 (let ((?x1968 (* 192 ?x267)))
 (let ((?x1987 (* (- 128) ?x163)))
 (let ((?x1982 (* (- 512) r)))
 (let ((?x740 (+ ?x1982 ?x1987 (* (- 8) (* q d (* 2 r) r)) (* (- 8) (* q 2 (* 2 r) r)) ?x1968 ?x1972 (* (- 8) (* q 2 q r)) (* (- 8) (* q d (* (- 2) d) r)) ?x1976 ?x1975 ?x1908 (* (- 24) (* q q r)) (* (- 8) (* q 2 (* (- 1) x) r)) ?x548 ?x1990 ?x1619 ?x953 (* (- 8) (* q d (* (- 1) x) r)) ?x1973 ?x610 ?x1121 ?x648 (* 128 (* q r d)) ?x1924 ?x721 ?x1193 (* 16 (* q r d d)) (* (- 8) (* q 2 (* (- 2) d) r)) ?x1966 (* (- 8) (* q 2 (- 4) r)) (* (- 8) (* q d (- 4) r)) ?x1977 ?x172)))
 (let ((?x1961 (* 2 (* d 4))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x607 (* 64 ?x1826)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1406 (* ?x480 ?x481 ?x481 ?x481 (+ 2 q (* 2 r) (* (- 1) x) d) r)))
 (let ((?x1502 (* (- 1) ?x1406)))
 (let ((?x1227 (* q r d d)))
 (let ((?x1528 (* 8 ?x1227)))
 (let ((?x1226 (* 2 (* q 4 2 r))))
 (let ((?x1209 (* 2 (* q q 2 r))))
 (let ((?x1207 (* 2 (* q 4 q r))))
 (let ((?x502 (* (- 8) ?x1161)))
 (let ((?x1155 (* 2 (* q 4 (* 2 r) r))))
 (let ((?x1151 (* 2 (* q q (* 2 r) r))))
 (let ((?x1148 (* 2 (* q 4 d r))))
 (let ((?x1138 (* 2 (* q q d r))))
 (let ((?x1136 (* 2 (* q 4 (* (- 1) x) r))))
 (let ((?x1133 (* 2 (* q q (* (- 1) x) r))))
 (let ((?x1129 (* q r d)))
 (let ((?x1130 (* 40 ?x1129)))
 (let ((?x1128 (* 10 ?x1127)))
 (let ((?x958 (* 16 ?x952)))
 (let ((?x1543 (* (- 8) ?x863)))
 (let ((?x664 (* q q r)))
 (let ((?x1194 (* 8 ?x664)))
 (let ((?x617 (* 16 ?x620)))
 (let ((?x951 (* 16 ?x608)))
 (let ((?x479 (* 64 r)))
 (let ((?x515 (+ ?x479 ?x1526 ?x1195 ?x1015 ?x951 ?x617 ?x307 ?x1194 ?x1543 ?x958 ?x953 ?x1014 ?x1121 ?x1128 ?x1130 ?x1133 ?x1136 ?x1138 ?x1148 ?x1151 ?x1155 ?x502 ?x721 ?x1193 ?x1207 ?x1209 ?x1226 ?x1528 ?x1502 ?x1527 ?x607)))
 (let ((?x194 (* ?x515 (+ ?x187 ?x158 ?x206 ?x190 ?x256 ?x294 ?x621 ?x1954 ?x1825 ?x1827 ?x1890 ?x1961))))
 (let (($x700 (or (not (= ?x194 0)) (not (= (* ?x740 ?x838) 0)) (not (= (* ?x1070 ?x1385) 0)) (not (= (* ?x1676 ?x1038) 0)))))
 (let (($x974 (= ?x1038 0)))
 (let (($x683 (and $x974 $x700)))
 (let ((?x1530 (* 4 (* d00 r00))))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x302 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x1145 (* 4 (* ?x480 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x846 (+ (- 32) ?x403 ?x229 ?x30 (* (- 16) d) ?x158 ?x1145 ?x190 ?x206 (* ?x1981 ?x480 ?x480) (* (- 2) (* ?x1981 ?x480)) ?x256 (* (- 4) (* ?x480 ?x302)) ?x1530)))
 (let ((?x313 (+ (* (- 1) (* ?x1981 ?x1981 ?x1981 ?x480 ?x302 r)) (* ?x1981 ?x1981 ?x480 ?x302 r))))
 (let (($x1565 (not (= (* ?x313 ?x846) 0))))
 (let ((?x538 (+ ?x403 ?x229 ?x30 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x1530)))
 (let ((?x609 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x995 (not (= (* ?x609 ?x538) 0))))
 (let ((?x1642 (+ 16 ?x403 ?x229 ?x30 ?x1580 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 ?x481) (* (- 2) (* ?x480 ?x481)) ?x256 (* (- 4) (* ?x480 (+ 2 ?x126 ?x155 q d))) ?x1530)))
 (let ((?x963 (* (- 1) (* ?x480 ?x481 ?x481 ?x481 (+ 2 ?x126 ?x155 q d) r))))
 (let ((?x343 (* (+ ?x963 (* ?x480 ?x481 ?x481 (+ 2 ?x126 ?x155 q d) r)) ?x1642)))
 (let (($x405 (not (= ?x343 0))))
 (let ((?x1012 (+ (- 16) ?x403 ?x229 ?x30 ?x1954 ?x158 ?x1145 ?x190 ?x206 (* ?x1612 ?x480 ?x480) (* (- 2) (* ?x1612 ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x1530)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x552 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x546 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x552 r)) (* ?x1612 ?x1612 ?x480 ?x552 r))))
 (let (($x299 (not (= (* ?x546 ?x1012) 0))))
 (let ((?x520 (+ ?x187 ?x158 ?x621 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x1530)))
 (let (($x957 (= ?x520 0)))
 (let (($x584 (and $x957 (or $x299 $x405 $x995 $x1565))))
 (rewrite (= $x584 $x683)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1584 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1530 (* 4 (* d00 r00))))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x302 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x480 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1145 (* 4 (* ?x480 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x846 (+ (- 32) ?x403 ?x229 ?x30 (* (- 16) d) ?x158 ?x1145 ?x190 ?x206 (* (+ (- 8) q) ?x480 ?x480) (* (- 2) (* (+ (- 8) q) ?x480)) ?x256 (* (- 4) (* ?x480 ?x302)) ?x1530)))
 (let ((?x311 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x480 ?x302 r))))
 (let (($x1190 (= (* (+ ?x311 (* (+ (- 8) q) (+ (- 8) q) ?x480 ?x302 r)) ?x846) 0)))
 (let (($x1565 (not $x1190)))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x1012 (+ (- 16) ?x403 ?x229 ?x30 ?x1954 ?x158 ?x1145 ?x190 ?x206 (* (+ (- 4) q) ?x480 ?x480) (* (- 2) (* (+ (- 4) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x1530)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x552 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x546 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x552 r)) (* ?x1612 ?x1612 ?x480 ?x552 r))))
 (let (($x299 (not (= (* ?x546 ?x1012) 0))))
 (let ((?x538 (+ ?x403 ?x229 ?x30 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x1530)))
 (let ((?x609 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x995 (not (= (* ?x609 ?x538) 0))))
 (let ((?x1580 (* 8 d)))
 (let ((?x1642 (+ 16 ?x403 ?x229 ?x30 ?x1580 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 (+ 4 q)) (* (- 2) (* ?x480 (+ 4 q))) ?x256 (* (- 4) (* ?x480 (+ 2 ?x126 ?x155 q d))) ?x1530)))
 (let ((?x1467 (+ 2 ?x126 ?x155 q d)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1143 (+ (* (- 1) (* ?x480 ?x481 ?x481 ?x481 ?x1467 r)) (* ?x480 ?x481 ?x481 ?x1467 r))))
 (let (($x405 (not (= (* ?x1143 ?x1642) 0))))
 (let ((?x621 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x520 (+ ?x187 ?x158 ?x621 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x1530)))
 (let (($x957 (= ?x520 0)))
 (and $x957 (or $x405 $x995 $x299 $x1565))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x434 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1530 (* 4 (* d00 r00))))
 (let ((?x1980 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x126 (* 2 r)))
 (let ((?x302 (+ (- 4) ?x126 ?x155 q ?x1980)))
 (let ((?x480 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x1145 (* 4 (* ?x480 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x403 (* 16 r)))
 (let ((?x846 (+ (- 32) ?x403 ?x229 ?x30 (* (- 16) d) ?x158 ?x1145 ?x190 ?x206 (* (+ (- 8) q) ?x480 ?x480) (* (- 2) (* (+ (- 8) q) ?x480)) ?x256 (* (- 4) (* ?x480 ?x302)) ?x1530)))
 (let ((?x311 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x480 ?x302 r))))
 (let (($x1190 (= (* (+ ?x311 (* (+ (- 8) q) (+ (- 8) q) ?x480 ?x302 r)) ?x846) 0)))
 (let (($x1565 (not $x1190)))
 (let ((?x538 (+ ?x403 ?x229 ?x30 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 q) (* (- 2) (* ?x480 q)) ?x256 (* (- 4) (* ?x480 (+ ?x126 ?x155 q))) ?x1530)))
 (let ((?x609 (+ (* (- 1) (* ?x480 (+ ?x126 ?x155 q) r q q q)) (* ?x480 (+ ?x126 ?x155 q) r q q))))
 (let (($x995 (not (= (* ?x609 ?x538) 0))))
 (let ((?x1580 (* 8 d)))
 (let ((?x1642 (+ 16 ?x403 ?x229 ?x30 ?x1580 ?x158 ?x1145 ?x190 ?x206 (* ?x480 ?x480 (+ 4 q)) (* (- 2) (* ?x480 (+ 4 q))) ?x256 (* (- 4) (* ?x480 (+ 2 ?x126 ?x155 q d))) ?x1530)))
 (let ((?x1467 (+ 2 ?x126 ?x155 q d)))
 (let ((?x481 (+ 4 q)))
 (let ((?x1143 (+ (* (- 1) (* ?x480 ?x481 ?x481 ?x481 ?x1467 r)) (* ?x480 ?x481 ?x481 ?x1467 r))))
 (let (($x405 (not (= (* ?x1143 ?x1642) 0))))
 (let ((?x1954 (* (- 8) d)))
 (let ((?x1012 (+ (- 16) ?x403 ?x229 ?x30 ?x1954 ?x158 ?x1145 ?x190 ?x206 (* (+ (- 4) q) ?x480 ?x480) (* (- 2) (* (+ (- 4) q) ?x480)) ?x256 (* (- 4) (* ?x480 (+ (- 2) ?x126 ?x155 q (* (- 1) d)))) ?x1530)))
 (let ((?x1614 (* (- 1) d)))
 (let ((?x552 (+ (- 2) ?x126 ?x155 q ?x1614)))
 (let ((?x1612 (+ (- 4) q)))
 (let ((?x546 (+ (* (- 1) (* ?x1612 ?x1612 ?x1612 ?x480 ?x552 r)) (* ?x1612 ?x1612 ?x480 ?x552 r))))
 (let (($x299 (not (= (* ?x546 ?x1012) 0))))
 (let ((?x621 (* 4 (* x d))))
 (let ((?x187 (* 8 r)))
 (let ((?x520 (+ ?x187 ?x158 ?x621 ?x190 ?x206 (* d d q) (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x1530)))
 (let (($x957 (= ?x520 0)))
 (let (($x584 (and $x957 (or $x299 $x405 $x995 $x1565))))
 (let (($x1583 (and $x957 (or $x405 $x995 $x299 $x1565))))
 (rewrite (= $x1583 $x584))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x151 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x128 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x134 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x145 (+ (* (- 1) ?x62 ?x134 ?x134 ?x134 ?x128 r) (* ?x62 ?x134 ?x134 ?x128 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x132 (- (+ (- (* 8 ?x128) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x139 (+ (- (+ (- ?x132 ?x41) (* ?x62 ?x62 ?x134)) (* 2 ?x62 ?x134)) ?x49)))
 (let ((?x105 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x111 (- q 4)))
 (let ((?x122 (+ (* (- 1) ?x62 ?x111 ?x111 ?x111 ?x105 r) (* ?x62 ?x111 ?x111 ?x105 r))))
 (let ((?x109 (- (+ (- (* 8 ?x105) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x116 (+ (- (+ (- ?x109 ?x41) (* ?x62 ?x62 ?x111)) (* 2 ?x62 ?x111)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x84 (+ ?x58 q)))
 (let ((?x77 (- 1)))
 (let ((?x100 (+ (* ?x77 ?x62 q q q ?x84 r) (* ?x62 q q ?x84 r))))
 (let ((?x88 (- (+ (- (* 8 ?x84) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* ?x77 ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x67 ?x67 ?x59 r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x149 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80) 0)) (not (= (* (+ (- ?x94 (* 4 ?x62 ?x84)) ?x53) ?x100) 0)) (not (= (* (+ (- ?x116 (* 4 ?x62 ?x105)) ?x53) ?x122) 0)) (not (= (* (+ (- ?x139 (* 4 ?x62 ?x128)) ?x53) ?x145) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x149)))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x432 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1530 (* 4 (* d00 r00))))
 (let ((?x1500 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1055 (+ (- 4) ?x57 ?x155 q ?x1500)))
 (let ((?x261 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x702 (* 4 (* ?x261 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x1786 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x494 (* 16 r)))
 (let ((?x258 (+ (- 32) ?x494 ?x229 ?x1786 (* (- 16) d) ?x158 ?x702 ?x190 ?x206 (* (+ (- 8) q) ?x261 ?x261) (* (- 2) (* (+ (- 8) q) ?x261)) ?x256 (* (- 4) (* ?x261 ?x1055)) ?x1530)))
 (let ((?x529 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x261 ?x1055 r))))
 (let (($x1524 (= (* (+ ?x529 (* (+ (- 8) q) (+ (- 8) q) ?x261 ?x1055 r)) ?x258) 0)))
 (let ((?x448 (* (- 8) d)))
 (let ((?x532 (+ (- 16) ?x494 ?x229 ?x1786 ?x448 ?x158 ?x702 ?x190 ?x206 (* (+ (- 4) q) ?x261 ?x261) (* (- 2) (* (+ (- 4) q) ?x261)) ?x256 (* (- 4) (* ?x261 (+ (- 2) ?x57 ?x155 q (* (- 1) d)))) ?x1530)))
 (let ((?x1044 (* (- 1) d)))
 (let ((?x1118 (+ (- 2) ?x57 ?x155 q ?x1044)))
 (let ((?x983 (+ (- 4) q)))
 (let ((?x578 (+ (* (- 1) (* ?x983 ?x983 ?x983 ?x261 ?x1118 r)) (* ?x983 ?x983 ?x261 ?x1118 r))))
 (let ((?x1056 (+ ?x494 ?x229 ?x1786 ?x158 ?x702 ?x190 ?x206 (* ?x261 ?x261 q) (* (- 2) (* ?x261 q)) ?x256 (* (- 4) (* ?x261 (+ ?x57 ?x155 q))) ?x1530)))
 (let ((?x1322 (+ (* (- 1) (* ?x261 (+ ?x57 ?x155 q) r q q q)) (* ?x261 (+ ?x57 ?x155 q) r q q))))
 (let ((?x187 (* 8 d)))
 (let ((?x1175 (+ 16 ?x494 ?x229 ?x1786 ?x187 ?x158 ?x702 ?x190 ?x206 (* ?x261 ?x261 (+ 4 q)) (* (- 2) (* ?x261 (+ 4 q))) ?x256 (* (- 4) (* ?x261 (+ 2 ?x57 ?x155 q d))) ?x1530)))
 (let ((?x1507 (+ 2 ?x57 ?x155 q d)))
 (let ((?x345 (+ 4 q)))
 (let ((?x789 (+ (* (- 1) (* ?x261 ?x345 ?x345 ?x345 ?x1507 r)) (* ?x261 ?x345 ?x345 ?x1507 r))))
 (let (($x1514 (or (not (= (* ?x789 ?x1175) 0)) (not (= (* ?x1322 ?x1056) 0)) (not (= (* ?x578 ?x532) 0)) (not $x1524))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x819 (+ ?x30 ?x158 (* 4 (* x d)) ?x190 ?x206 ?x44 (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x1530)))
 (and (= ?x819 0) $x1514)))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1783 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1530 (* 4 (* d00 r00))))
 (let ((?x1500 (* (- 2) d)))
 (let ((?x155 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1055 (+ (- 4) ?x57 ?x155 q ?x1500)))
 (let ((?x261 (+ 2 d)))
 (let ((?x255 (* d00 q00)))
 (let ((?x256 (* 2 ?x255)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x206 (* (- 1) ?x41)))
 (let ((?x176 (* d00 x00)))
 (let ((?x190 (* (- 4) ?x176)))
 (let ((?x702 (* 4 (* ?x261 r))))
 (let ((?x158 (* (- 8) r00)))
 (let ((?x1786 (* 8 q)))
 (let ((?x229 (* (- 8) x)))
 (let ((?x494 (* 16 r)))
 (let ((?x258 (+ (- 32) ?x494 ?x229 ?x1786 (* (- 16) d) ?x158 ?x702 ?x190 ?x206 (* (+ (- 8) q) ?x261 ?x261) (* (- 2) (* (+ (- 8) q) ?x261)) ?x256 (* (- 4) (* ?x261 ?x1055)) ?x1530)))
 (let ((?x529 (* (- 1) (* (+ (- 8) q) (+ (- 8) q) (+ (- 8) q) ?x261 ?x1055 r))))
 (let (($x1524 (= (* (+ ?x529 (* (+ (- 8) q) (+ (- 8) q) ?x261 ?x1055 r)) ?x258) 0)))
 (let ((?x448 (* (- 8) d)))
 (let ((?x532 (+ (- 16) ?x494 ?x229 ?x1786 ?x448 ?x158 ?x702 ?x190 ?x206 (* (+ (- 4) q) ?x261 ?x261) (* (- 2) (* (+ (- 4) q) ?x261)) ?x256 (* (- 4) (* ?x261 (+ (- 2) ?x57 ?x155 q (* (- 1) d)))) ?x1530)))
 (let ((?x1044 (* (- 1) d)))
 (let ((?x1118 (+ (- 2) ?x57 ?x155 q ?x1044)))
 (let ((?x983 (+ (- 4) q)))
 (let ((?x578 (+ (* (- 1) (* ?x983 ?x983 ?x983 ?x261 ?x1118 r)) (* ?x983 ?x983 ?x261 ?x1118 r))))
 (let ((?x1056 (+ ?x494 ?x229 ?x1786 ?x158 ?x702 ?x190 ?x206 (* ?x261 ?x261 q) (* (- 2) (* ?x261 q)) ?x256 (* (- 4) (* ?x261 (+ ?x57 ?x155 q))) ?x1530)))
 (let ((?x1322 (+ (* (- 1) (* ?x261 (+ ?x57 ?x155 q) r q q q)) (* ?x261 (+ ?x57 ?x155 q) r q q))))
 (let ((?x187 (* 8 d)))
 (let ((?x1175 (+ 16 ?x494 ?x229 ?x1786 ?x187 ?x158 ?x702 ?x190 ?x206 (* ?x261 ?x261 (+ 4 q)) (* (- 2) (* ?x261 (+ 4 q))) ?x256 (* (- 4) (* ?x261 (+ 2 ?x57 ?x155 q d))) ?x1530)))
 (let ((?x1507 (+ 2 ?x57 ?x155 q d)))
 (let ((?x345 (+ 4 q)))
 (let ((?x789 (+ (* (- 1) (* ?x261 ?x345 ?x345 ?x345 ?x1507 r)) (* ?x261 ?x345 ?x345 ?x1507 r))))
 (let (($x1514 (or (not (= (* ?x789 ?x1175) 0)) (not (= (* ?x1322 ?x1056) 0)) (not (= (* ?x578 ?x532) 0)) (not $x1524))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x819 (+ ?x30 ?x158 (* 4 (* x d)) ?x190 ?x206 ?x44 (* (- 2) (* d q)) ?x256 (* (- 4) (* d r)) ?x1530)))
 (let (($x1117 (and (= ?x819 0) $x1514)))
 (let ((?x128 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x134 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x145 (+ (* (- 1) ?x62 ?x134 ?x134 ?x134 ?x128 r) (* ?x62 ?x134 ?x134 ?x128 r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x132 (- (+ (- (* 8 ?x128) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x139 (+ (- (+ (- ?x132 ?x41) (* ?x62 ?x62 ?x134)) (* 2 ?x62 ?x134)) ?x49)))
 (let ((?x105 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x111 (- q 4)))
 (let ((?x122 (+ (* (- 1) ?x62 ?x111 ?x111 ?x111 ?x105 r) (* ?x62 ?x111 ?x111 ?x105 r))))
 (let ((?x109 (- (+ (- (* 8 ?x105) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x116 (+ (- (+ (- ?x109 ?x41) (* ?x62 ?x62 ?x111)) (* 2 ?x62 ?x111)) ?x49)))
 (let ((?x100 (+ (* (- 1) ?x62 q q q (+ (- ?x57 x) q) r) (* ?x62 q q (+ (- ?x57 x) q) r))))
 (let ((?x63 (* 4 ?x62 r)))
 (let ((?x88 (- (+ (- (* 8 (+ (- ?x57 x) q)) (* 8 r00)) ?x63) ?x39)))
 (let ((?x94 (+ (- (+ (- ?x88 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let (($x102 (= (* (+ (- ?x94 (* 4 ?x62 (+ (- ?x57 x) q))) ?x53) ?x100) 0)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* (- 1) ?x62 ?x67 ?x67 ?x67 ?x59 r) (* ?x62 ?x67 ?x67 ?x59 r))))
 (let ((?x69 (+ (- (- (+ (- (* 8 ?x59) (* 8 r00)) ?x63) ?x39) ?x41) (* ?x62 ?x62 ?x67))))
 (let ((?x75 (+ (- (+ (- ?x69 (* 2 ?x62 ?x67)) ?x49) (* 4 ?x62 ?x59)) ?x53)))
 (let (($x149 (or (not (= (* ?x75 ?x80) 0)) (not $x102) (not (= (* (+ (- ?x116 (* 4 ?x62 ?x105)) ?x53) ?x122) 0)) (not (= (* (+ (- ?x139 (* 4 ?x62 ?x128)) ?x53) ?x145) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x150 (and (= ?x54 0) $x149)))
 (rewrite (= $x150 $x1117))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1599 (trans (quant-intro (proof-bind ?x1783) (= $x151 $x432)) (elim-unused (= $x432 $x1584)) (= $x151 $x1584))))
 (let ((@x27 (asserted $x151)))
 (let ((@x943 (mp (mp @x27 @x1599 $x1584) (quant-intro (proof-bind ?x434) (= $x1584 $x363)) $x363)))
 (let ((@x895 (mp (mp @x943 (rewrite (= $x363 $x363)) $x363) (quant-intro (proof-bind ?x705) (= $x363 $x810)) $x810)))
 (let ((@x1755 (mp~ (mp @x895 (quant-intro (proof-bind ?x1595) (= $x810 $x324)) $x324) (sk (~ $x324 $x198)) $x198)))
 (let ((@x1346 (mp @x1755 (rewrite (= $x198 $x353)) $x353)))
 (let ((@x1848 (and-elim @x1346 $x1592)))
 (let ((@x1333 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1592) $x1428)) @x1848 $x1428)))
 (let (($x660 (<= ?x1587 0)))
 (let ((@x1357 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1592) $x660)) @x1848 $x660)))
 (let (($x782 (not (<= ?x1483 0))))
 (let (($x1495 (<= ?x180 0)))
 (let (($x1849 (>= ?x180 0)))
 (let ((@x1312 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1363 (not $x1495) (not $x1849))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1849)) @x1357 @x1333 false) $x1849) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1495)) @x1357 @x1333 false) $x1495) $x1363)))
 (let (($x1334 (>= ?x1303 0)))
 (let (($x1906 (<= ?x1303 0)))
 (let ((@x175 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x394 (not $x1906) (not $x1334))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1906)) @x1357 @x1333 false) $x1906) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1334)) @x1357 @x1333 false) $x1334) $x394)))
 (let (($x1601 (>= ?x1309 0)))
 (let (($x1337 (<= ?x1309 0)))
 (let ((@x1353 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1413 (not $x1337) (not $x1601))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1337)) @x1357 @x1333 false) $x1337) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1601)) @x1357 @x1333 false) $x1601) $x1413)))
 (let ((@x503 (unit-resolution (unit-resolution (and-elim @x1346 $x867) @x1353 @x175 (or $x482 $x1477)) @x1312 $x1477)))
 (let (($x1222 (>= ?x1483 0)))
 (let ((@x1323 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x533 $x782 (not $x1222))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1222)) @x1357 @x1333 false) $x1222) @x503 $x782)))
 ((_ th-lemma arith farkas 1 1 1) @x1323 @x1357 @x1333 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             960
 :arith-nonlinear-bounds    16
 :arith-num-rows            13
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 88
 :arith-tableau-max-rows    13
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.88
 :memory                    3.28
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1469295
 :num-checks                1
 :propagations              36
 :rlimit-count              10804
 :time                      0.01
 :total-time                0.02)
