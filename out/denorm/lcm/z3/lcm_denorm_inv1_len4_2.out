unsat
((set-logic NIA)
(declare-fun k!00 () Int)
(declare-fun u!5 () Int)
(declare-fun x!3 () Int)
(declare-fun v!4 () Int)
(declare-fun y!2 () Int)
(declare-fun k!10 () Int)
(proof
(let ((?x706 (+ k!10 (* (- 1) (* y!2 v!4)) (* (- 1) (* x!3 u!5)) k!00)))
 (let (($x773 (>= ?x706 0)))
 (let (($x707 (= ?x706 0)))
 (let ((?x498 (* (- 1) (* v!4 v!4 v!4 v!4 x!3 x!3))))
 (let ((?x841 (* v!4 v!4 x!3 x!3 x!3)))
 (let ((?x778 (* (- 1) (* y!2 y!2 v!4 v!4 v!4 u!5))))
 (let ((?x737 (* (- 1) (* y!2 y!2 y!2 v!4 v!4))))
 (let ((?x515 (* v!4 v!4 v!4 x!3 x!3 x!3 x!3 x!3 x!3)))
 (let ((?x480 (* v!4 x!3 x!3 x!3)))
 (let ((?x323 (* (- 1) (* y!2 y!2 y!2 v!4))))
 (let ((?x337 (* (- 1) (* y!2 y!2 y!2 v!4 v!4 v!4 x!3 x!3 x!3))))
 (let ((?x343 (+ ?x337 (* 2 (* y!2 v!4 v!4 v!4 x!3 u!5)) (* (- 3) (* y!2 v!4 v!4 v!4 x!3 x!3 x!3 x!3 x!3)) (* (- 3) (* y!2 v!4 x!3 x!3)) (* 3 (* y!2 y!2 v!4 x!3)) ?x323 (* 3 (* y!2 y!2 v!4 v!4 x!3)) (* 3 (* y!2 y!2 v!4 v!4 v!4 x!3 x!3 x!3 x!3)) ?x480 ?x515 ?x737 (* (- 3) (* y!2 v!4 v!4 x!3 x!3)) (* (- 1) (* v!4 v!4 v!4 x!3 x!3 u!5)) (* (- 1) (* y!2 y!2 v!4 v!4 v!4 v!4)) ?x778 (* 2 (* y!2 v!4 v!4 v!4 v!4 x!3)) ?x841 ?x498)))
 (let ((?x403 (* (- 1) k!00)))
 (let ((?x983 (* x!3 u!5)))
 (let ((?x971 (* y!2 v!4)))
 (let ((?x902 (* (- 1) k!10)))
 (let ((?x529 (+ ?x902 ?x971 ?x983 ?x403)))
 (let ((?x254 (* ?x529 ?x343)))
 (let (($x786 (= ?x254 0)))
 (let (($x367 (not $x786)))
 (let ((?x338 (+ (* (- 9) (* y!2 y!2 y!2 y!2 y!2 v!4 v!4 x!3 u!5)) (* (- 3) (* y!2 y!2 y!2 y!2 y!2 v!4 v!4 v!4 x!3)) ?x337 (* 3 (* y!2 y!2 y!2 y!2 x!3 x!3 u!5 u!5 u!5)) (* 3 (* y!2 y!2 y!2 y!2 v!4 v!4 v!4 x!3 x!3)) (* (- 3) (* y!2 y!2 y!2 y!2 y!2 x!3 u!5 u!5 u!5)) (* y!2 y!2 y!2 y!2 y!2 y!2 u!5 u!5 u!5) (* 3 (* y!2 y!2 y!2 y!2 y!2 y!2 v!4 u!5 u!5)) (* y!2 y!2 y!2 y!2 y!2 y!2 v!4 v!4 v!4) (* 3 (* y!2 y!2 y!2 y!2 y!2 y!2 v!4 v!4 u!5)) ?x323 (* (- 1) (* y!2 y!2 y!2 u!5)) (* 9 (* y!2 y!2 y!2 y!2 v!4 x!3 x!3 u!5 u!5)) (* 9 (* y!2 y!2 y!2 y!2 v!4 v!4 x!3 x!3 u!5)) (* (- 9) (* y!2 y!2 y!2 y!2 y!2 v!4 x!3 u!5 u!5)) (* (- 1) (* y!2 y!2 y!2 u!5 u!5)) (* (- 2) (* y!2 y!2 y!2 v!4 u!5)) ?x737 (* (- 1) (* y!2 y!2 u!5 u!5 u!5 u!5)) (* (- 3) (* y!2 y!2 v!4 u!5 u!5 u!5)) (* (- 3) (* y!2 y!2 v!4 v!4 u!5 u!5)) ?x778 (* (- 3) (* y!2 y!2 y!2 v!4 v!4 x!3 x!3 x!3 u!5)) (* (- 3) (* y!2 y!2 y!2 v!4 x!3 x!3 x!3 u!5 u!5)) (* (- 1) (* y!2 y!2 y!2 x!3 x!3 x!3 u!5 u!5 u!5)))))
 (let ((?x345 (* ?x529 ?x338)))
 (let (($x730 (= ?x345 0)))
 (let (($x721 (or (not $x730) $x367)))
 (let (($x445 (and $x707 $x721)))
 (let ((?x141 (* (- 1) (* v!4 y!2 y!2 y!2))))
 (let ((?x819 (* (- 1) (* v!4 v!4 v!4 x!3 x!3 x!3 y!2 y!2 y!2))))
 (let ((?x1088 (* (- 1) (* u!5 v!4 v!4 v!4 y!2 y!2))))
 (let ((?x1082 (* (- 1) (* v!4 v!4 y!2 y!2 y!2))))
 (let ((?x557 (+ ?x841 (* (- 3) (* v!4 v!4 x!3 x!3 y!2)) (* (- 1) (* v!4 v!4 v!4 v!4 y!2 y!2)) ?x1082 ?x1088 ?x819 ?x141 (* (- 1) (* u!5 v!4 v!4 v!4 x!3 x!3)) (* 2 (* v!4 v!4 v!4 v!4 x!3 y!2)) (* 2 (* u!5 v!4 v!4 v!4 x!3 y!2)) ?x498 (* 3 (* v!4 v!4 x!3 y!2 y!2)) ?x515 (* (- 3) (* v!4 v!4 v!4 x!3 x!3 x!3 x!3 x!3 y!2)) (* 3 (* v!4 v!4 v!4 x!3 x!3 x!3 x!3 y!2 y!2)) ?x480 (* (- 3) (* v!4 x!3 x!3 y!2)) (* 3 (* v!4 x!3 y!2 y!2)))))
 (let ((?x948 (+ (* u!5 x!3) (* v!4 y!2) ?x902 ?x403)))
 (let ((?x835 (+ (* (- 1) (* u!5 u!5 y!2 y!2 y!2)) (* (- 2) (* u!5 v!4 y!2 y!2 y!2)) ?x1082 (* (- 1) (* u!5 u!5 u!5 u!5 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 v!4 y!2 y!2)) (* (- 3) (* u!5 u!5 v!4 v!4 y!2 y!2)) ?x1088 (* (- 1) (* u!5 u!5 u!5 x!3 x!3 x!3 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 v!4 x!3 x!3 x!3 y!2 y!2 y!2)) (* (- 3) (* u!5 v!4 v!4 x!3 x!3 x!3 y!2 y!2 y!2)) ?x819 (* 3 (* u!5 u!5 u!5 x!3 x!3 y!2 y!2 y!2 y!2)) (* 9 (* u!5 u!5 v!4 x!3 x!3 y!2 y!2 y!2 y!2)) (* 9 (* u!5 v!4 v!4 x!3 x!3 y!2 y!2 y!2 y!2)) (* 3 (* v!4 v!4 v!4 x!3 x!3 y!2 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 u!5 x!3 y!2 y!2 y!2 y!2 y!2)) (* (- 9) (* u!5 u!5 v!4 x!3 y!2 y!2 y!2 y!2 y!2)) (* (- 9) (* u!5 v!4 v!4 x!3 y!2 y!2 y!2 y!2 y!2)) (* (- 3) (* v!4 v!4 v!4 x!3 y!2 y!2 y!2 y!2 y!2)) (* u!5 u!5 u!5 y!2 y!2 y!2 y!2 y!2 y!2) (* 3 (* u!5 u!5 v!4 y!2 y!2 y!2 y!2 y!2 y!2)) (* 3 (* u!5 v!4 v!4 y!2 y!2 y!2 y!2 y!2 y!2)) (* v!4 v!4 v!4 y!2 y!2 y!2 y!2 y!2 y!2) ?x141 (* (- 1) (* u!5 y!2 y!2 y!2)))))
 (let (($x404 (and (= ?x948 0) (or (not (= (* ?x948 ?x835) 0)) (not (= (* ?x948 ?x557) 0))))))
 (let (($x405 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x1080 (* 3 (* v x y y))))
 (let ((?x1077 (* (- 3) (* v x x y))))
 (let ((?x1007 (* v x x x)))
 (let ((?x980 (* 3 (* v v v x x x x y y))))
 (let ((?x977 (* (- 3) (* v v v x x x x x y))))
 (let ((?x907 (* v v v x x x x x x)))
 (let ((?x870 (* (- 1) (* v v v v x x))))
 (let ((?x878 (* 2 (* u v v v x y))))
 (let ((?x875 (* 2 (* v v v v x y))))
 (let ((?x867 (* (- 1) (* u v v v x x))))
 (let ((?x796 (* (- 1) (* v y y y))))
 (let ((?x729 (* (- 1) (* v v v x x x y y y))))
 (let ((?x215 (* (- 1) (* u v v v y y))))
 (let ((?x160 (* (- 1) (* v v y y y))))
 (let ((?x866 (* (- 1) (* v v v v y y))))
 (let ((?x1365 (+ (* v v x x x) (* (- 3) (* v v x x y)) ?x866 ?x160 ?x215 ?x729 ?x796 ?x867 ?x875 ?x878 ?x870 (* 3 (* v v x y y)) ?x907 ?x977 ?x980 ?x1007 ?x1077 ?x1080)))
 (let ((?x403 (* (- 1) k!00)))
 (let ((?x902 (* (- 1) k!10)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x717 (+ ?x33 ?x34 ?x902 ?x403)))
 (let ((?x797 (* (- 1) (* u y y y))))
 (let ((?x689 (* v v v y y y y y y)))
 (let ((?x780 (* 3 (* u v v y y y y y y))))
 (let ((?x777 (* 3 (* u u v y y y y y y))))
 (let ((?x645 (* u u u y y y y y y)))
 (let ((?x772 (* (- 3) (* v v v x y y y y y))))
 (let ((?x769 (* (- 9) (* u v v x y y y y y))))
 (let ((?x766 (* (- 9) (* u u v x y y y y y))))
 (let ((?x763 (* (- 3) (* u u u x y y y y y))))
 (let ((?x760 (* 3 (* v v v x x y y y y))))
 (let ((?x757 (* 9 (* u v v x x y y y y))))
 (let ((?x754 (* 9 (* u u v x x y y y y))))
 (let ((?x751 (* 3 (* u u u x x y y y y))))
 (let ((?x748 (* (- 3) (* u v v x x x y y y))))
 (let ((?x745 (* (- 3) (* u u v x x x y y y))))
 (let ((?x726 (* (- 1) (* u u u x x x y y y))))
 (let ((?x223 (* (- 3) (* u u v v y y))))
 (let ((?x220 (* (- 3) (* u u u v y y))))
 (let ((?x212 (* (- 1) (* u u u u y y))))
 (let ((?x154 (* (- 1) (* u u y y y))))
 (let ((?x120 (+ ?x154 (* (- 2) (* u v y y y)) ?x160 ?x212 ?x220 ?x223 ?x215 ?x726 ?x745 ?x748 ?x729 ?x751 ?x754 ?x757 ?x760 ?x763 ?x766 ?x769 ?x772 ?x645 ?x777 ?x780 ?x689 ?x796 ?x797)))
 (and (= ?x717 0) (or (not (= (* ?x717 ?x120) 0)) (not (= (* ?x717 ?x1365) 0)))))))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x925 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x165 (* (- 1) x)))
 (let ((?x924 (+ y ?x165)))
 (let ((?x1051 (+ (* (- 1) (* ?x924 ?x924 ?x924 v v)) (* (- 1) (* (+ u v) ?x924 ?x924 v v v)) (* (- 1) (* ?x924 ?x924 ?x924 x x x v v v)) (* (- 1) (* ?x924 ?x924 ?x924 v)))))
 (let ((?x902 (* (- 1) k!10)))
 (let ((?x931 (* ?x924 v)))
 (let ((?x58 (+ u v)))
 (let ((?x59 (* ?x58 x)))
 (let ((?x403 (* (- 1) k!00)))
 (let ((?x883 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x237 (+ (* (- 1) (* ?x44 ?x44 y y y)) (* (- 1) (* ?x44 ?x44 ?x44 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 ?x883 ?x883 ?x883 y y y)) (* (- 1) (* ?x44 y y y)))))
 (let (($x860 (or (not (= (* (+ ?x403 (* ?x883 u) (* ?x44 y) ?x902) ?x237) 0)) (not (= (* (+ ?x403 ?x59 ?x931 ?x902) ?x1051) 0)))))
 (let ((?x895 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (and (= ?x895 0) $x860)))))))))))))) :qid k!29))
 ))
 (let ((?x205 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x1080 (* 3 (* v x y y))))
 (let ((?x1077 (* (- 3) (* v x x y))))
 (let ((?x1007 (* v x x x)))
 (let ((?x980 (* 3 (* v v v x x x x y y))))
 (let ((?x977 (* (- 3) (* v v v x x x x x y))))
 (let ((?x907 (* v v v x x x x x x)))
 (let ((?x870 (* (- 1) (* v v v v x x))))
 (let ((?x878 (* 2 (* u v v v x y))))
 (let ((?x875 (* 2 (* v v v v x y))))
 (let ((?x867 (* (- 1) (* u v v v x x))))
 (let ((?x796 (* (- 1) (* v y y y))))
 (let ((?x729 (* (- 1) (* v v v x x x y y y))))
 (let ((?x215 (* (- 1) (* u v v v y y))))
 (let ((?x160 (* (- 1) (* v v y y y))))
 (let ((?x866 (* (- 1) (* v v v v y y))))
 (let ((?x1365 (+ (* v v x x x) (* (- 3) (* v v x x y)) ?x866 ?x160 ?x215 ?x729 ?x796 ?x867 ?x875 ?x878 ?x870 (* 3 (* v v x y y)) ?x907 ?x977 ?x980 ?x1007 ?x1077 ?x1080)))
 (let ((?x403 (* (- 1) k!00)))
 (let ((?x902 (* (- 1) k!10)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x717 (+ ?x33 ?x34 ?x902 ?x403)))
 (let ((?x797 (* (- 1) (* u y y y))))
 (let ((?x689 (* v v v y y y y y y)))
 (let ((?x780 (* 3 (* u v v y y y y y y))))
 (let ((?x777 (* 3 (* u u v y y y y y y))))
 (let ((?x645 (* u u u y y y y y y)))
 (let ((?x772 (* (- 3) (* v v v x y y y y y))))
 (let ((?x769 (* (- 9) (* u v v x y y y y y))))
 (let ((?x766 (* (- 9) (* u u v x y y y y y))))
 (let ((?x763 (* (- 3) (* u u u x y y y y y))))
 (let ((?x760 (* 3 (* v v v x x y y y y))))
 (let ((?x757 (* 9 (* u v v x x y y y y))))
 (let ((?x754 (* 9 (* u u v x x y y y y))))
 (let ((?x751 (* 3 (* u u u x x y y y y))))
 (let ((?x748 (* (- 3) (* u v v x x x y y y))))
 (let ((?x745 (* (- 3) (* u u v x x x y y y))))
 (let ((?x726 (* (- 1) (* u u u x x x y y y))))
 (let ((?x223 (* (- 3) (* u u v v y y))))
 (let ((?x220 (* (- 3) (* u u u v y y))))
 (let ((?x212 (* (- 1) (* u u u u y y))))
 (let ((?x154 (* (- 1) (* u u y y y))))
 (let ((?x120 (+ ?x154 (* (- 2) (* u v y y y)) ?x160 ?x212 ?x220 ?x223 ?x215 ?x726 ?x745 ?x748 ?x729 ?x751 ?x754 ?x757 ?x760 ?x763 ?x766 ?x769 ?x772 ?x645 ?x777 ?x780 ?x689 ?x796 ?x797)))
 (let (($x1399 (and (= ?x717 0) (or (not (= (* ?x717 ?x120) 0)) (not (= (* ?x717 ?x1365) 0))))))
 (let ((?x165 (* (- 1) x)))
 (let ((?x924 (+ y ?x165)))
 (let ((?x1051 (+ (* (- 1) (* ?x924 ?x924 ?x924 v v)) (* (- 1) (* (+ u v) ?x924 ?x924 v v v)) (* (- 1) (* ?x924 ?x924 ?x924 x x x v v v)) (* (- 1) (* ?x924 ?x924 ?x924 v)))))
 (let (($x888 (= (* (+ ?x403 (* (+ u v) x) (* ?x924 v) ?x902) ?x1051) 0)))
 (let ((?x883 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x237 (+ (* (- 1) (* ?x44 ?x44 y y y)) (* (- 1) (* ?x44 ?x44 ?x44 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 ?x883 ?x883 ?x883 y y y)) (* (- 1) (* ?x44 y y y)))))
 (let (($x860 (or (not (= (* (+ ?x403 (* ?x883 u) (* ?x44 y) ?x902) ?x237) 0)) (not $x888))))
 (let ((?x895 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x487 (and (= ?x895 0) $x860)))
 (rewrite (= $x487 $x1399))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x942 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x165 (* (- 1) x)))
 (let ((?x924 (+ y ?x165)))
 (let ((?x1051 (+ (* (- 1) (* ?x924 ?x924 ?x924 v v)) (* (- 1) (* (+ u v) ?x924 ?x924 v v v)) (* (- 1) (* ?x924 ?x924 ?x924 x x x v v v)) (* (- 1) (* ?x924 ?x924 ?x924 v)))))
 (let ((?x902 (* (- 1) k!10)))
 (let ((?x931 (* ?x924 v)))
 (let ((?x58 (+ u v)))
 (let ((?x59 (* ?x58 x)))
 (let ((?x403 (* (- 1) k!00)))
 (let ((?x883 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x237 (+ (* (- 1) (* ?x44 ?x44 y y y)) (* (- 1) (* ?x44 ?x44 ?x44 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 ?x883 ?x883 ?x883 y y y)) (* (- 1) (* ?x44 y y y)))))
 (let (($x860 (or (not (= (* (+ ?x403 (* ?x883 u) (* ?x44 y) ?x902) ?x237) 0)) (not (= (* (+ ?x403 ?x59 ?x931 ?x902) ?x1051) 0)))))
 (and (= (+ ?x403 (* x u) (* y v) ?x902) 0) $x860))))))))))))) :qid k!29))
 ))
 (let ((?x887 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x165 (* (- 1) x)))
 (let ((?x924 (+ y ?x165)))
 (let ((?x1051 (+ (* (- 1) (* ?x924 ?x924 ?x924 v v)) (* (- 1) (* (+ u v) ?x924 ?x924 v v v)) (* (- 1) (* ?x924 ?x924 ?x924 x x x v v v)) (* (- 1) (* ?x924 ?x924 ?x924 v)))))
 (let ((?x902 (* (- 1) k!10)))
 (let ((?x931 (* ?x924 v)))
 (let ((?x58 (+ u v)))
 (let ((?x59 (* ?x58 x)))
 (let ((?x403 (* (- 1) k!00)))
 (let ((?x883 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x237 (+ (* (- 1) (* ?x44 ?x44 y y y)) (* (- 1) (* ?x44 ?x44 ?x44 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 ?x883 ?x883 ?x883 y y y)) (* (- 1) (* ?x44 y y y)))))
 (let (($x860 (or (not (= (* (+ ?x403 (* ?x883 u) (* ?x44 y) ?x902) ?x237) 0)) (not (= (* (+ ?x403 ?x59 ?x931 ?x902) ?x1051) 0)))))
 (let ((?x895 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x487 (and (= ?x895 0) $x860)))
 (let (($x939 (and (= (+ ?x403 (* x u) (* y v) ?x902) 0) $x860)))
 (rewrite (= $x939 $x487))))))))))))))))))
 ))
 (let (($x715 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x165 (* (- 1) x)))
 (let ((?x924 (+ y ?x165)))
 (let ((?x1051 (+ (* (- 1) (* ?x924 ?x924 ?x924 v v)) (* (- 1) (* (+ u v) ?x924 ?x924 v v v)) (* (- 1) (* ?x924 ?x924 ?x924 x x x v v v)) (* (- 1) (* ?x924 ?x924 ?x924 v)))))
 (let ((?x38 (* v00 y00)))
 (let ((?x101 (* (- 1) ?x38)))
 (let ((?x931 (* ?x924 v)))
 (let ((?x58 (+ u v)))
 (let ((?x59 (* ?x58 x)))
 (let ((?x85 (* (- 1) (* u00 x00))))
 (let ((?x883 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x237 (+ (* (- 1) (* ?x44 ?x44 y y y)) (* (- 1) (* ?x44 ?x44 ?x44 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 ?x883 ?x883 ?x883 y y y)) (* (- 1) (* ?x44 y y y)))))
 (let (($x950 (or (not (= (* (+ ?x85 (* ?x883 u) (* ?x44 y) ?x101) ?x237) 0)) (not (= (* (+ ?x85 ?x59 ?x931 ?x101) ?x1051) 0)))))
 (and (= (+ ?x85 (* x u) (* y v) ?x101) 0) $x950)))))))))))))) :qid k!29))
 ))
 (let ((?x877 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x165 (* (- 1) x)))
 (let ((?x924 (+ y ?x165)))
 (let ((?x1051 (+ (* (- 1) (* ?x924 ?x924 ?x924 v v)) (* (- 1) (* (+ u v) ?x924 ?x924 v v v)) (* (- 1) (* ?x924 ?x924 ?x924 x x x v v v)) (* (- 1) (* ?x924 ?x924 ?x924 v)))))
 (let ((?x902 (* (- 1) k!10)))
 (let ((?x931 (* ?x924 v)))
 (let ((?x58 (+ u v)))
 (let ((?x59 (* ?x58 x)))
 (let ((?x403 (* (- 1) k!00)))
 (let ((?x883 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x237 (+ (* (- 1) (* ?x44 ?x44 y y y)) (* (- 1) (* ?x44 ?x44 ?x44 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 ?x883 ?x883 ?x883 y y y)) (* (- 1) (* ?x44 y y y)))))
 (let (($x860 (or (not (= (* (+ ?x403 (* ?x883 u) (* ?x44 y) ?x902) ?x237) 0)) (not (= (* (+ ?x403 ?x59 ?x931 ?x902) ?x1051) 0)))))
 (let (($x939 (and (= (+ ?x403 (* x u) (* y v) ?x902) 0) $x860)))
 (let ((?x1070 (* (+ (* (- 1) (* u00 x00)) ?x59 ?x931 (* (- 1) (* v00 y00))) ?x1051)))
 (let ((?x38 (* v00 y00)))
 (let ((?x101 (* (- 1) ?x38)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x484 (* ?x883 u)))
 (let ((?x85 (* (- 1) (* u00 x00))))
 (let (($x950 (or (not (= (* (+ ?x85 ?x484 ?x45 ?x101) ?x237) 0)) (not (= ?x1070 0)))))
 (let (($x151 (and (= (+ ?x85 (* x u) (* y v) ?x101) 0) $x950)))
 (rewrite (= $x151 $x939))))))))))))))))))))))))
 ))
 (let (($x76 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x60 (- y x)))
 (let ((?x68 (- (* (- 1) v v ?x60 ?x60 ?x60) (* (+ u v) v v v ?x60 ?x60))))
 (let ((?x70 (- (- ?x68 (* v v v x x x ?x60 ?x60 ?x60)) (* v ?x60 ?x60 ?x60))))
 (let ((?x38 (* v00 y00)))
 (let ((?x63 (- (+ (* (- 1) u00 x00) (* (+ u v) x) (* v ?x60)) ?x38)))
 (let ((?x44 (+ v u)))
 (let ((?x51 (* ?x44 y y y)))
 (let ((?x42 (- x y)))
 (let ((?x52 (- (* (- 1) ?x44 ?x44 y y y) (* u ?x44 ?x44 ?x44 y y))))
 (let ((?x55 (* (- (+ (* (- 1) u00 x00) (* u ?x42) (* ?x44 y)) ?x38) (- (- ?x52 (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y y y)) ?x51))))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (and $x41 (or (not (= ?x55 0)) (not (= (* ?x63 ?x70) 0))))))))))))))) :qid k!29))
 ))
 (let ((?x928 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x165 (* (- 1) x)))
 (let ((?x924 (+ y ?x165)))
 (let ((?x1051 (+ (* (- 1) (* ?x924 ?x924 ?x924 v v)) (* (- 1) (* (+ u v) ?x924 ?x924 v v v)) (* (- 1) (* ?x924 ?x924 ?x924 x x x v v v)) (* (- 1) (* ?x924 ?x924 ?x924 v)))))
 (let ((?x38 (* v00 y00)))
 (let ((?x101 (* (- 1) ?x38)))
 (let ((?x931 (* ?x924 v)))
 (let ((?x58 (+ u v)))
 (let ((?x59 (* ?x58 x)))
 (let ((?x85 (* (- 1) (* u00 x00))))
 (let ((?x883 (+ x (* (- 1) y))))
 (let ((?x44 (+ v u)))
 (let ((?x237 (+ (* (- 1) (* ?x44 ?x44 y y y)) (* (- 1) (* ?x44 ?x44 ?x44 y y u)) (* (- 1) (* ?x44 ?x44 ?x44 ?x883 ?x883 ?x883 y y y)) (* (- 1) (* ?x44 y y y)))))
 (let (($x950 (or (not (= (* (+ ?x85 (* ?x883 u) (* ?x44 y) ?x101) ?x237) 0)) (not (= (* (+ ?x85 ?x59 ?x931 ?x101) ?x1051) 0)))))
 (let (($x151 (and (= (+ ?x85 (* x u) (* y v) ?x101) 0) $x950)))
 (let ((?x60 (- y x)))
 (let ((?x68 (- (* (- 1) v v ?x60 ?x60 ?x60) (* ?x58 v v v ?x60 ?x60))))
 (let ((?x70 (- (- ?x68 (* v v v x x x ?x60 ?x60 ?x60)) (* v ?x60 ?x60 ?x60))))
 (let (($x72 (= (* (- (+ (* (- 1) u00 x00) ?x59 (* v ?x60)) ?x38) ?x70) 0)))
 (let ((?x51 (* ?x44 y y y)))
 (let ((?x42 (- x y)))
 (let ((?x52 (- (* (- 1) ?x44 ?x44 y y y) (* u ?x44 ?x44 ?x44 y y))))
 (let ((?x55 (* (- (+ (* (- 1) u00 x00) (* u ?x42) (* ?x44 y)) ?x38) (- (- ?x52 (* ?x44 ?x44 ?x44 ?x42 ?x42 ?x42 y y y)) ?x51))))
 (let (($x41 (= (- (+ (* (- 1) u00 x00) (* u x) (* v y)) ?x38) 0)))
 (let (($x75 (and $x41 (or (not (= ?x55 0)) (not $x72)))))
 (rewrite (= $x75 $x151)))))))))))))))))))))))))))
 ))
 (let ((@x77 (asserted $x76)))
 (let ((@x386 (mp (mp @x77 (quant-intro (proof-bind ?x928) (= $x76 $x715)) $x715) (rewrite (= $x715 $x715)) $x715)))
 (let ((@x884 (mp (mp @x386 (quant-intro (proof-bind ?x877) (= $x715 $x942)) $x942) (quant-intro (proof-bind ?x887) (= $x942 $x925)) $x925)))
 (let ((@x972 (mp~ (mp @x884 (quant-intro (proof-bind ?x205) (= $x925 $x405)) $x405) (sk (~ $x405 $x404)) $x404)))
 (let ((@x369 (mp @x972 (rewrite (= $x404 $x445)) $x445)))
 (let ((@x742 (and-elim @x369 $x707)))
 (let ((@x969 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x707) $x773)) @x742 $x773)))
 (let (($x775 (<= ?x706 0)))
 (let ((@x524 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x707) $x775)) @x742 $x775)))
 (let (($x702 (not (<= ?x254 0))))
 (let (($x740 (>= ?x254 0)))
 (let (($x547 (>= ?x345 0)))
 (let (($x541 (<= ?x345 0)))
 (let ((@x453 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x730 (not $x541) (not $x547))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x541)) @x524 @x969 false) $x541) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x547)) @x524 @x969 false) $x547) $x730)))
 (let ((@x309 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x786 $x702 (not $x740))) (unit-resolution (and-elim @x369 $x721) @x453 $x367) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x740)) @x524 @x969 false) $x740) $x702)))
 ((_ th-lemma arith farkas 1 1 1) @x309 @x524 @x969 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        31
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-fixed-eqs           5
 :arith-max-min             392
 :arith-nonlinear-bounds    14
 :arith-num-rows            4
 :arith-pivots              1
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 60
 :arith-tableau-max-rows    4
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :eliminated-applications   2
 :final-checks              4
 :max-memory                3.69
 :memory                    3.21
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1178712
 :num-checks                1
 :propagations              14
 :rlimit-count              5534
 :time                      0.01
 :total-time                0.01)
