unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1193 (* (- 1) k!2)))
 (let ((?x1175 (+ (* 3 n!0) (* 3 (* n!0 n!0)) ?x1193)))
 (let (($x1413 (<= ?x1175 (- 1))))
 (let (($x444 (= ?x1175 (- 1))))
 (let ((?x2366 (* (- 18) (* c!3 c!3 c!3))))
 (let ((?x1852 (+ c!3 k!2)))
 (let ((?x1397 (+ m!1 k!2)))
 (let ((?x880 (+ 6 m!1)))
 (let ((?x2479 (* (- 2) (* (+ 1 n!0) (+ 1 n!0) (+ 1 n!0) ?x880 ?x1397 ?x1852))))
 (let ((?x1855 (* k!2 k!2)))
 (let ((?x1860 (* 12 ?x1855)))
 (let ((?x1849 (* (- 54) (* c!3 c!3 k!2))))
 (let ((?x942 (* 18 (* k!2 k!2 k!2))))
 (let ((?x1000 (* 18 (* c!3 c!3))))
 (let ((?x850 (* 30 (* c!3 k!2))))
 (let ((?x1874 (+ 1 n!0)))
 (let ((?x2309 (* (- 18) (* c!3 k!2 k!2))))
 (let ((?x1274 (+ (* 2 (* m!1 n!0 c!3 k!2 k!2)) (* m!1 n!0 k!2 k!2 k!2) (* 2 (* m!1 m!1 n!0 c!3 k!2)) (* m!1 m!1 n!0 k!2 k!2) (* m!1 m!1 n!0 c!3 c!3) (* 12 (* m!1 m!1 m!1 k!2)) (* (- 9) (* m!1 c!3 c!3 k!2)) (* m!1 m!1 k!2 k!2 k!2) (* m!1 n!0 c!3 c!3 k!2) ?x2309 (* (- 1) (* ?x1874 ?x1874 ?x1874 ?x880 ?x1397 ?x1397 ?x1852)) ?x850 ?x1000 (* m!1 m!1 m!1 m!1 c!3) ?x942 (* m!1 m!1 c!3 k!2 k!2) (* 2 (* m!1 m!1 m!1 k!2 k!2)) (* 12 (* n!0 c!3 k!2)) (* (- 1) (* m!1 m!1 n!0 n!0 c!3)) (* 14 (* m!1 n!0 c!3 k!2)) (* (- 6) (* n!0 n!0 c!3 k!2)) (* 6 (* n!0 c!3 c!3 k!2)) (* (- 2) (* m!1 m!1 n!0 c!3)) (* (- 2) (* m!1 m!1 n!0 k!2)) (* (- 1) (* m!1 m!1 n!0 n!0 k!2)) (* 2 (* ?x1874 ?x880 ?x880 ?x1397 ?x1397 ?x1852)) (* (- 3) (* ?x880 ?x880 ?x1397 ?x1397 ?x1852 ?x1852)) (* 8 (* m!1 n!0 c!3 c!3)) (* 6 (* n!0 k!2 k!2 k!2)) (* (- 12) (* m!1 n!0 c!3)) (* 24 (* m!1 m!1 c!3 k!2)) (* 3 (* m!1 c!3 k!2 k!2)) (* 3 (* m!1 c!3 c!3)) (* ?x1874 ?x1874 ?x880 ?x1397 ?x1397 ?x1852) (* (- 6) (* m!1 c!3)) (* ?x1874 ?x880 ?x880 ?x1397 ?x1397 ?x1397 ?x1852) (* (- 6) (* m!1 k!2)) (* (- 1) (* m!1 n!0 n!0 k!2 k!2)) (* 3 (* ?x1874 ?x1874 ?x880 ?x1397 ?x1852 ?x1852)) (* (- 12) (* m!1 n!0 k!2)) (* (- 6) (* m!1 n!0 n!0 c!3)) (* (- 6) (* n!0 n!0 k!2 k!2)) ?x1849 ?x1860 (* (- 6) (* m!1 n!0 n!0 k!2)) (* (- 1) (* m!1 n!0 n!0 c!3 k!2)) (* 6 (* m!1 n!0 k!2 k!2)) ?x2479 (* 9 (* m!1 k!2 k!2 k!2)) (* (- 1) (* ?x880 ?x880 ?x1397 ?x1397 ?x1397 ?x1852)) (* 12 (* n!0 c!3 k!2 k!2)) (* 24 (* m!1 m!1 k!2 k!2)) (* 2 (* m!1 m!1 m!1 c!3 k!2)) (* m!1 m!1 m!1 m!1 k!2) ?x2366 (* 77 (* m!1 c!3 k!2)) (* 74 (* m!1 k!2 k!2)) (* 35 (* m!1 m!1 c!3)) (* 35 (* m!1 m!1 k!2)) (* 12 (* n!0 c!3 c!3)) (* 12 (* m!1 m!1 m!1 c!3)) (* (- 3) (* m!1 c!3 c!3 c!3)))))
 (let (($x2504 (= ?x1274 0)))
 (let (($x450 (not $x2504)))
 (let ((?x1194 (+ (* 2 n!0) (* n!0 k!2) (* (- 3) c!3) ?x1193)))
 (let (($x410 (= ?x1194 (- 1))))
 (let ((?x1135 (+ (* 9 n!0) (* (- 18) c!3) (* (- 5) k!2) ?x1855 (* (- 9) (* n!0 c!3)))))
 (let (($x1136 (= ?x1135 (- 4))))
 (let ((?x2663 (+ m!1 (* (- 6) n!0))))
 (let (($x350 (= ?x2663 6)))
 (let (($x2501 (and $x350 $x1136 $x410 $x444 $x450)))
 (let ((?x424 (* (- 1) (* ?x1874 ?x1874 ?x1874 ?x880 (+ k!2 m!1) (+ k!2 m!1) ?x1852))))
 (let ((?x158 (+ k!2 m!1)))
 (let ((?x366 (+ ?x1860 (* c!3 k!2 k!2 m!1 m!1) (* k!2 k!2 k!2 m!1 m!1) (* 2 (* c!3 k!2 m!1 m!1 m!1)) (* 2 (* k!2 k!2 m!1 m!1 m!1)) (* c!3 m!1 m!1 m!1 m!1) (* k!2 m!1 m!1 m!1 m!1) ?x2309 ?x942 (* 77 (* c!3 k!2 m!1)) (* 74 (* k!2 k!2 m!1)) (* 35 (* c!3 m!1 m!1)) (* 35 (* k!2 m!1 m!1)) (* 3 (* c!3 k!2 k!2 m!1)) (* 9 (* k!2 k!2 k!2 m!1)) (* 24 (* c!3 k!2 m!1 m!1)) (* 24 (* k!2 k!2 m!1 m!1)) (* 12 (* c!3 m!1 m!1 m!1)) (* 12 (* k!2 m!1 m!1 m!1)) (* (- 9) (* c!3 c!3 k!2 m!1)) (* c!3 c!3 k!2 m!1 n!0) (* 2 (* c!3 k!2 k!2 m!1 n!0)) (* k!2 k!2 k!2 m!1 n!0) (* c!3 c!3 m!1 m!1 n!0) (* 2 (* c!3 k!2 m!1 m!1 n!0)) (* k!2 k!2 m!1 m!1 n!0) ?x1849 (* ?x1874 ?x1874 ?x880 ?x158 ?x158 ?x1852) (* 3 (* c!3 c!3 m!1)) (* 6 (* k!2 k!2 m!1 n!0)) (* 6 (* c!3 c!3 k!2 n!0)) (* (- 1) (* ?x880 ?x880 ?x158 ?x158 ?x158 ?x1852)) (* 12 (* c!3 k!2 k!2 n!0)) (* 6 (* k!2 k!2 k!2 n!0)) (* 8 (* c!3 c!3 m!1 n!0)) (* 14 (* c!3 k!2 m!1 n!0)) (* (- 3) (* ?x880 ?x880 ?x158 ?x158 ?x1852 ?x1852)) (* 2 (* ?x1874 ?x880 ?x880 ?x158 ?x158 ?x1852)) (* 3 (* ?x1874 ?x1874 ?x880 ?x158 ?x1852 ?x1852)) (* ?x1874 ?x880 ?x880 ?x158 ?x158 ?x158 ?x1852) ?x424 ?x850 (* (- 2) (* ?x1874 ?x1874 ?x1874 ?x880 ?x158 ?x1852)) ?x1000 (* 12 (* c!3 c!3 n!0)) (* (- 2) (* c!3 m!1 m!1 n!0)) (* (- 2) (* k!2 m!1 m!1 n!0)) (* (- 6) (* c!3 k!2 n!0 n!0)) (* (- 6) (* k!2 k!2 n!0 n!0)) (* (- 6) (* c!3 m!1 n!0 n!0)) (* (- 12) (* k!2 m!1 n!0)) (* (- 12) (* c!3 m!1 n!0)) (* 12 (* c!3 k!2 n!0)) (* (- 6) (* k!2 m!1)) (* (- 6) (* c!3 m!1)) (* (- 6) (* k!2 m!1 n!0 n!0)) (* (- 1) (* c!3 k!2 m!1 n!0 n!0)) (* (- 1) (* k!2 k!2 m!1 n!0 n!0)) (* (- 1) (* c!3 m!1 m!1 n!0 n!0)) (* (- 1) (* k!2 m!1 m!1 n!0 n!0)) (* (- 3) (* c!3 c!3 c!3 m!1)) ?x2366)))
 (let (($x1865 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x2670 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x1855) (* 9 (* c!3 n!0)))))
 (let (($x360 (and $x350 (= ?x2670 4) $x1865 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x366 0)))))
 (let (($x1023 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2623 (* c c c)))
 (let ((?x2533 (* (- 18) ?x2623)))
 (let ((?x2539 (* c c c m)))
 (let ((?x2640 (* (- 3) ?x2539)))
 (let ((?x2200 (* k m m n n)))
 (let ((?x2639 (* (- 1) ?x2200)))
 (let ((?x2196 (* c m m n n)))
 (let ((?x2638 (* (- 1) ?x2196)))
 (let ((?x2192 (* k k m n n)))
 (let ((?x2637 (* (- 1) ?x2192)))
 (let ((?x2188 (* c k m n n)))
 (let ((?x2580 (* (- 1) ?x2188)))
 (let ((?x2184 (* k m n n)))
 (let ((?x2532 (* (- 6) ?x2184)))
 (let ((?x2138 (* c k n)))
 (let ((?x1966 (* 12 ?x2138)))
 (let ((?x2130 (* c m n)))
 (let ((?x2531 (* (- 12) ?x2130)))
 (let ((?x2126 (* k m n)))
 (let ((?x2632 (* (- 12) ?x2126)))
 (let ((?x2116 (* c m n n)))
 (let ((?x2631 (* (- 6) ?x2116)))
 (let ((?x2112 (* k k n n)))
 (let ((?x2635 (* (- 6) ?x2112)))
 (let ((?x2108 (* c k n n)))
 (let ((?x2633 (* (- 6) ?x2108)))
 (let ((?x2104 (* k m m n)))
 (let ((?x2630 (* (- 2) ?x2104)))
 (let ((?x2100 (* c m m n)))
 (let ((?x2629 (* (- 2) ?x2100)))
 (let ((?x2579 (* 12 (* c c n))))
 (let ((?x1867 (* c c)))
 (let ((?x2530 (* 18 ?x1867)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1866 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x2175 (* (- 2) ?x1866)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1776 (* (- 1) ?x1760)))
 (let ((?x1714 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1698 (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1700 (* 3 ?x1698)))
 (let ((?x1451 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1453 (* 2 ?x1451)))
 (let ((?x1381 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1399 (* (- 3) ?x1381)))
 (let ((?x1333 (* c k m n)))
 (let ((?x2626 (* 14 ?x1333)))
 (let ((?x1325 (* c c m n)))
 (let ((?x2625 (* 8 ?x1325)))
 (let ((?x1321 (* k k k n)))
 (let ((?x1290 (* 6 ?x1321)))
 (let ((?x1313 (* c k k n)))
 (let ((?x1311 (* 12 ?x1313)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1356 (* (- 1) ?x1306)))
 (let ((?x1305 (* c c k n)))
 (let ((?x2482 (* 6 ?x1305)))
 (let ((?x1302 (* 6 (* k k m n))))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1239 (* k k m m n)))
 (let ((?x1238 (* c k m m n)))
 (let ((?x1315 (* 2 ?x1238)))
 (let ((?x1236 (* c c m m n)))
 (let ((?x1235 (* k k k m n)))
 (let ((?x1234 (* c k k m n)))
 (let ((?x1317 (* 2 ?x1234)))
 (let ((?x1232 (* c c k m n)))
 (let ((?x964 (* c c k m)))
 (let ((?x2572 (* (- 9) ?x964)))
 (let ((?x575 (* k m m m)))
 (let ((?x1449 (* 12 ?x575)))
 (let ((?x571 (* c m m m)))
 (let ((?x1439 (* 12 ?x571)))
 (let ((?x561 (* k k m m)))
 (let ((?x1445 (* 24 ?x561)))
 (let ((?x551 (* c k m m)))
 (let ((?x1433 (* 24 ?x551)))
 (let ((?x543 (* k k k m)))
 (let ((?x2596 (* 9 ?x543)))
 (let ((?x539 (* c k k m)))
 (let ((?x2636 (* 3 ?x539)))
 (let ((?x535 (* k m m)))
 (let ((?x2597 (* 35 ?x535)))
 (let ((?x531 (* c m m)))
 (let ((?x2548 (* 35 ?x531)))
 (let ((?x503 (* k k k)))
 (let ((?x1115 (* 18 ?x503)))
 (let ((?x492 (* k m m m m)))
 (let ((?x491 (* c m m m m)))
 (let ((?x490 (* k k m m m)))
 (let ((?x1447 (* 2 ?x490)))
 (let ((?x489 (* c k m m m)))
 (let ((?x1437 (* 2 ?x489)))
 (let ((?x486 (* k k k m m)))
 (let ((?x485 (* c k k m m)))
 (let ((?x49 (* k k)))
 (let ((?x2734 (* 12 ?x49)))
 (let ((?x1861 (+ ?x2734 ?x485 ?x486 ?x1437 ?x1447 ?x491 ?x492 (* (- 18) (* c k k)) ?x1115 (* 77 (* c k m)) (* 74 (* k k m)) ?x2548 ?x2597 ?x2636 ?x2596 ?x1433 ?x1445 ?x1439 ?x1449 ?x2572 ?x1232 ?x1317 ?x1235 ?x1236 ?x1315 ?x1239 (* (- 54) (* c c k)) ?x1258 (* 3 (* c c m)) ?x1302 ?x2482 ?x1356 ?x1311 ?x1290 ?x2625 ?x2626 ?x1399 ?x1453 ?x1700 ?x1714 ?x1776 (* 30 (* c k)) ?x2175 ?x2530 ?x2579 ?x2629 ?x2630 ?x2633 ?x2635 ?x2631 ?x2632 ?x2531 ?x1966 (* (- 6) (* k m)) (* (- 6) (* c m)) ?x2532 ?x2580 ?x2637 ?x2638 ?x2639 ?x2640 ?x2533)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 (* c n))) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x1861 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2651 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2623 (* c c c)))
 (let ((?x2533 (* (- 18) ?x2623)))
 (let ((?x2539 (* c c c m)))
 (let ((?x2640 (* (- 3) ?x2539)))
 (let ((?x2200 (* k m m n n)))
 (let ((?x2639 (* (- 1) ?x2200)))
 (let ((?x2196 (* c m m n n)))
 (let ((?x2638 (* (- 1) ?x2196)))
 (let ((?x2192 (* k k m n n)))
 (let ((?x2637 (* (- 1) ?x2192)))
 (let ((?x2188 (* c k m n n)))
 (let ((?x2580 (* (- 1) ?x2188)))
 (let ((?x2184 (* k m n n)))
 (let ((?x2532 (* (- 6) ?x2184)))
 (let ((?x2138 (* c k n)))
 (let ((?x1966 (* 12 ?x2138)))
 (let ((?x2130 (* c m n)))
 (let ((?x2531 (* (- 12) ?x2130)))
 (let ((?x2126 (* k m n)))
 (let ((?x2632 (* (- 12) ?x2126)))
 (let ((?x2116 (* c m n n)))
 (let ((?x2631 (* (- 6) ?x2116)))
 (let ((?x2112 (* k k n n)))
 (let ((?x2635 (* (- 6) ?x2112)))
 (let ((?x2108 (* c k n n)))
 (let ((?x2633 (* (- 6) ?x2108)))
 (let ((?x2104 (* k m m n)))
 (let ((?x2630 (* (- 2) ?x2104)))
 (let ((?x2100 (* c m m n)))
 (let ((?x2629 (* (- 2) ?x2100)))
 (let ((?x2579 (* 12 (* c c n))))
 (let ((?x1867 (* c c)))
 (let ((?x2530 (* 18 ?x1867)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1866 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x2175 (* (- 2) ?x1866)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1776 (* (- 1) ?x1760)))
 (let ((?x1714 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1698 (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1700 (* 3 ?x1698)))
 (let ((?x1451 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1453 (* 2 ?x1451)))
 (let ((?x1381 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1399 (* (- 3) ?x1381)))
 (let ((?x1333 (* c k m n)))
 (let ((?x2626 (* 14 ?x1333)))
 (let ((?x1325 (* c c m n)))
 (let ((?x2625 (* 8 ?x1325)))
 (let ((?x1321 (* k k k n)))
 (let ((?x1290 (* 6 ?x1321)))
 (let ((?x1313 (* c k k n)))
 (let ((?x1311 (* 12 ?x1313)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1356 (* (- 1) ?x1306)))
 (let ((?x1305 (* c c k n)))
 (let ((?x2482 (* 6 ?x1305)))
 (let ((?x1302 (* 6 (* k k m n))))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1239 (* k k m m n)))
 (let ((?x1238 (* c k m m n)))
 (let ((?x1315 (* 2 ?x1238)))
 (let ((?x1236 (* c c m m n)))
 (let ((?x1235 (* k k k m n)))
 (let ((?x1234 (* c k k m n)))
 (let ((?x1317 (* 2 ?x1234)))
 (let ((?x1232 (* c c k m n)))
 (let ((?x964 (* c c k m)))
 (let ((?x2572 (* (- 9) ?x964)))
 (let ((?x575 (* k m m m)))
 (let ((?x1449 (* 12 ?x575)))
 (let ((?x571 (* c m m m)))
 (let ((?x1439 (* 12 ?x571)))
 (let ((?x561 (* k k m m)))
 (let ((?x1445 (* 24 ?x561)))
 (let ((?x551 (* c k m m)))
 (let ((?x1433 (* 24 ?x551)))
 (let ((?x543 (* k k k m)))
 (let ((?x2596 (* 9 ?x543)))
 (let ((?x539 (* c k k m)))
 (let ((?x2636 (* 3 ?x539)))
 (let ((?x535 (* k m m)))
 (let ((?x2597 (* 35 ?x535)))
 (let ((?x531 (* c m m)))
 (let ((?x2548 (* 35 ?x531)))
 (let ((?x503 (* k k k)))
 (let ((?x1115 (* 18 ?x503)))
 (let ((?x492 (* k m m m m)))
 (let ((?x491 (* c m m m m)))
 (let ((?x490 (* k k m m m)))
 (let ((?x1447 (* 2 ?x490)))
 (let ((?x489 (* c k m m m)))
 (let ((?x1437 (* 2 ?x489)))
 (let ((?x486 (* k k k m m)))
 (let ((?x485 (* c k k m m)))
 (let ((?x49 (* k k)))
 (let ((?x2734 (* 12 ?x49)))
 (let ((?x2534 (+ ?x2734 (* (- 6) (* m k c)) (* (- 6) (* k k c)) ?x485 ?x486 ?x1437 ?x1447 ?x491 ?x492 (* (- 6) (* c k k)) ?x1115 (* 89 (* c k m)) (* 80 (* k k m)) ?x2548 ?x2597 ?x2636 ?x2596 ?x1433 ?x1445 ?x1439 ?x1449 ?x2572 (* (- 6) (* m k k)) ?x1232 ?x1317 ?x1235 ?x1236 ?x1315 ?x1239 (* (- 48) (* c c k)) (* (- 6) (* m c k)) ?x1258 (* (- 6) (* k c k)) (* 9 (* c c m)) (* (- 6) (* m c c)) (* (- 6) (* k c c)) ?x1302 ?x2482 ?x1356 ?x1311 ?x1290 ?x2625 ?x2626 ?x1399 ?x1453 ?x1700 ?x1714 ?x1776 (* 36 (* c k)) ?x2175 ?x2530 ?x2579 (* (- 6) (* k c)) (* (- 6) (* m c)) (* (- 6) (* m k)) ?x2629 ?x2630 ?x2633 ?x2635 ?x2631 ?x2632 ?x2531 ?x1966 ?x2532 ?x2580 ?x2637 ?x2638 ?x2639 ?x2640 ?x2533)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 (* c n))) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x2534 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x886 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2623 (* c c c)))
 (let ((?x2533 (* (- 18) ?x2623)))
 (let ((?x2539 (* c c c m)))
 (let ((?x2640 (* (- 3) ?x2539)))
 (let ((?x2200 (* k m m n n)))
 (let ((?x2639 (* (- 1) ?x2200)))
 (let ((?x2196 (* c m m n n)))
 (let ((?x2638 (* (- 1) ?x2196)))
 (let ((?x2192 (* k k m n n)))
 (let ((?x2637 (* (- 1) ?x2192)))
 (let ((?x2188 (* c k m n n)))
 (let ((?x2580 (* (- 1) ?x2188)))
 (let ((?x2184 (* k m n n)))
 (let ((?x2532 (* (- 6) ?x2184)))
 (let ((?x2138 (* c k n)))
 (let ((?x1966 (* 12 ?x2138)))
 (let ((?x2130 (* c m n)))
 (let ((?x2531 (* (- 12) ?x2130)))
 (let ((?x2126 (* k m n)))
 (let ((?x2632 (* (- 12) ?x2126)))
 (let ((?x2116 (* c m n n)))
 (let ((?x2631 (* (- 6) ?x2116)))
 (let ((?x2112 (* k k n n)))
 (let ((?x2635 (* (- 6) ?x2112)))
 (let ((?x2108 (* c k n n)))
 (let ((?x2633 (* (- 6) ?x2108)))
 (let ((?x2104 (* k m m n)))
 (let ((?x2630 (* (- 2) ?x2104)))
 (let ((?x2100 (* c m m n)))
 (let ((?x2629 (* (- 2) ?x2100)))
 (let ((?x2579 (* 12 (* c c n))))
 (let ((?x1867 (* c c)))
 (let ((?x2530 (* 18 ?x1867)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1866 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x2175 (* (- 2) ?x1866)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1776 (* (- 1) ?x1760)))
 (let ((?x1714 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1698 (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1700 (* 3 ?x1698)))
 (let ((?x1451 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1453 (* 2 ?x1451)))
 (let ((?x1381 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1399 (* (- 3) ?x1381)))
 (let ((?x1333 (* c k m n)))
 (let ((?x2626 (* 14 ?x1333)))
 (let ((?x1325 (* c c m n)))
 (let ((?x2625 (* 8 ?x1325)))
 (let ((?x1321 (* k k k n)))
 (let ((?x1290 (* 6 ?x1321)))
 (let ((?x1313 (* c k k n)))
 (let ((?x1311 (* 12 ?x1313)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1356 (* (- 1) ?x1306)))
 (let ((?x1305 (* c c k n)))
 (let ((?x2482 (* 6 ?x1305)))
 (let ((?x1302 (* 6 (* k k m n))))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1239 (* k k m m n)))
 (let ((?x1238 (* c k m m n)))
 (let ((?x1315 (* 2 ?x1238)))
 (let ((?x1236 (* c c m m n)))
 (let ((?x1235 (* k k k m n)))
 (let ((?x1234 (* c k k m n)))
 (let ((?x1317 (* 2 ?x1234)))
 (let ((?x1232 (* c c k m n)))
 (let ((?x964 (* c c k m)))
 (let ((?x2572 (* (- 9) ?x964)))
 (let ((?x575 (* k m m m)))
 (let ((?x1449 (* 12 ?x575)))
 (let ((?x571 (* c m m m)))
 (let ((?x1439 (* 12 ?x571)))
 (let ((?x561 (* k k m m)))
 (let ((?x1445 (* 24 ?x561)))
 (let ((?x551 (* c k m m)))
 (let ((?x1433 (* 24 ?x551)))
 (let ((?x543 (* k k k m)))
 (let ((?x2596 (* 9 ?x543)))
 (let ((?x539 (* c k k m)))
 (let ((?x2636 (* 3 ?x539)))
 (let ((?x535 (* k m m)))
 (let ((?x2597 (* 35 ?x535)))
 (let ((?x531 (* c m m)))
 (let ((?x2548 (* 35 ?x531)))
 (let ((?x503 (* k k k)))
 (let ((?x1115 (* 18 ?x503)))
 (let ((?x492 (* k m m m m)))
 (let ((?x491 (* c m m m m)))
 (let ((?x490 (* k k m m m)))
 (let ((?x1447 (* 2 ?x490)))
 (let ((?x489 (* c k m m m)))
 (let ((?x1437 (* 2 ?x489)))
 (let ((?x486 (* k k k m m)))
 (let ((?x485 (* c k k m m)))
 (let ((?x49 (* k k)))
 (let ((?x2734 (* 12 ?x49)))
 (let ((?x1861 (+ ?x2734 ?x485 ?x486 ?x1437 ?x1447 ?x491 ?x492 (* (- 18) (* c k k)) ?x1115 (* 77 (* c k m)) (* 74 (* k k m)) ?x2548 ?x2597 ?x2636 ?x2596 ?x1433 ?x1445 ?x1439 ?x1449 ?x2572 ?x1232 ?x1317 ?x1235 ?x1236 ?x1315 ?x1239 (* (- 54) (* c c k)) ?x1258 (* 3 (* c c m)) ?x1302 ?x2482 ?x1356 ?x1311 ?x1290 ?x2625 ?x2626 ?x1399 ?x1453 ?x1700 ?x1714 ?x1776 (* 30 (* c k)) ?x2175 ?x2530 ?x2579 ?x2629 ?x2630 ?x2633 ?x2635 ?x2631 ?x2632 ?x2531 ?x1966 (* (- 6) (* k m)) (* (- 6) (* c m)) ?x2532 ?x2580 ?x2637 ?x2638 ?x2639 ?x2640 ?x2533)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 (* c n))) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x1876 (and $x135 $x219 $x271 $x309 (not (= ?x1861 0)))))
 (let ((?x2534 (+ ?x2734 (* (- 6) (* m k c)) (* (- 6) (* k k c)) ?x485 ?x486 ?x1437 ?x1447 ?x491 ?x492 (* (- 6) (* c k k)) ?x1115 (* 89 (* c k m)) (* 80 (* k k m)) ?x2548 ?x2597 ?x2636 ?x2596 ?x1433 ?x1445 ?x1439 ?x1449 ?x2572 (* (- 6) (* m k k)) ?x1232 ?x1317 ?x1235 ?x1236 ?x1315 ?x1239 (* (- 48) (* c c k)) (* (- 6) (* m c k)) ?x1258 (* (- 6) (* k c k)) (* 9 (* c c m)) (* (- 6) (* m c c)) (* (- 6) (* k c c)) ?x1302 ?x2482 ?x1356 ?x1311 ?x1290 ?x2625 ?x2626 ?x1399 ?x1453 ?x1700 ?x1714 ?x1776 (* 36 (* c k)) ?x2175 ?x2530 ?x2579 (* (- 6) (* k c)) (* (- 6) (* m c)) (* (- 6) (* m k)) ?x2629 ?x2630 ?x2633 ?x2635 ?x2631 ?x2632 ?x2531 ?x1966 ?x2532 ?x2580 ?x2637 ?x2638 ?x2639 ?x2640 ?x2533)))
 (let (($x1473 (and $x135 $x219 $x271 $x309 (not (= ?x2534 0)))))
 (rewrite (= $x1473 $x1876)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1746 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x2506 (* ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1511 (* ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2253 (+ ?x1306 (* (- 1) (* ?x319 ?x319 ?x70 ?x70 ?x69)) (* 3 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x1202 ?x319 ?x70 ?x69 ?x69)) (* (- 2) (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)) (* (- 2) (* ?x1202 ?x319 ?x69 ?x69)) ?x1511 (* (- 3) (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)) (* (- 1) (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)) (* (- 1) (* ?x319 ?x69 ?x69)) ?x1760 (* 2 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)) ?x2506 (* 3 (* ?x319 ?x69 ?x69 ?x69)) (* (- 1) ?x1258))))
 (let (($x1141 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2462 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x2462 $x1141 (not (= ?x2253 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2648 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2623 (* c c c)))
 (let ((?x2533 (* (- 18) ?x2623)))
 (let ((?x2539 (* c c c m)))
 (let ((?x2640 (* (- 3) ?x2539)))
 (let ((?x2200 (* k m m n n)))
 (let ((?x2639 (* (- 1) ?x2200)))
 (let ((?x2196 (* c m m n n)))
 (let ((?x2638 (* (- 1) ?x2196)))
 (let ((?x2192 (* k k m n n)))
 (let ((?x2637 (* (- 1) ?x2192)))
 (let ((?x2188 (* c k m n n)))
 (let ((?x2580 (* (- 1) ?x2188)))
 (let ((?x2184 (* k m n n)))
 (let ((?x2532 (* (- 6) ?x2184)))
 (let ((?x2138 (* c k n)))
 (let ((?x1966 (* 12 ?x2138)))
 (let ((?x2130 (* c m n)))
 (let ((?x2531 (* (- 12) ?x2130)))
 (let ((?x2126 (* k m n)))
 (let ((?x2632 (* (- 12) ?x2126)))
 (let ((?x2116 (* c m n n)))
 (let ((?x2631 (* (- 6) ?x2116)))
 (let ((?x2112 (* k k n n)))
 (let ((?x2635 (* (- 6) ?x2112)))
 (let ((?x2108 (* c k n n)))
 (let ((?x2633 (* (- 6) ?x2108)))
 (let ((?x2104 (* k m m n)))
 (let ((?x2630 (* (- 2) ?x2104)))
 (let ((?x2100 (* c m m n)))
 (let ((?x2629 (* (- 2) ?x2100)))
 (let ((?x2579 (* 12 (* c c n))))
 (let ((?x1867 (* c c)))
 (let ((?x2530 (* 18 ?x1867)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1866 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x2175 (* (- 2) ?x1866)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1776 (* (- 1) ?x1760)))
 (let ((?x1714 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1698 (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1700 (* 3 ?x1698)))
 (let ((?x1451 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1453 (* 2 ?x1451)))
 (let ((?x1381 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1399 (* (- 3) ?x1381)))
 (let ((?x1333 (* c k m n)))
 (let ((?x2626 (* 14 ?x1333)))
 (let ((?x1325 (* c c m n)))
 (let ((?x2625 (* 8 ?x1325)))
 (let ((?x1321 (* k k k n)))
 (let ((?x1290 (* 6 ?x1321)))
 (let ((?x1313 (* c k k n)))
 (let ((?x1311 (* 12 ?x1313)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1356 (* (- 1) ?x1306)))
 (let ((?x1305 (* c c k n)))
 (let ((?x2482 (* 6 ?x1305)))
 (let ((?x1302 (* 6 (* k k m n))))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1239 (* k k m m n)))
 (let ((?x1238 (* c k m m n)))
 (let ((?x1315 (* 2 ?x1238)))
 (let ((?x1236 (* c c m m n)))
 (let ((?x1235 (* k k k m n)))
 (let ((?x1234 (* c k k m n)))
 (let ((?x1317 (* 2 ?x1234)))
 (let ((?x1232 (* c c k m n)))
 (let ((?x964 (* c c k m)))
 (let ((?x2572 (* (- 9) ?x964)))
 (let ((?x575 (* k m m m)))
 (let ((?x1449 (* 12 ?x575)))
 (let ((?x571 (* c m m m)))
 (let ((?x1439 (* 12 ?x571)))
 (let ((?x561 (* k k m m)))
 (let ((?x1445 (* 24 ?x561)))
 (let ((?x551 (* c k m m)))
 (let ((?x1433 (* 24 ?x551)))
 (let ((?x543 (* k k k m)))
 (let ((?x2596 (* 9 ?x543)))
 (let ((?x539 (* c k k m)))
 (let ((?x2636 (* 3 ?x539)))
 (let ((?x535 (* k m m)))
 (let ((?x2597 (* 35 ?x535)))
 (let ((?x531 (* c m m)))
 (let ((?x2548 (* 35 ?x531)))
 (let ((?x503 (* k k k)))
 (let ((?x1115 (* 18 ?x503)))
 (let ((?x492 (* k m m m m)))
 (let ((?x491 (* c m m m m)))
 (let ((?x490 (* k k m m m)))
 (let ((?x1447 (* 2 ?x490)))
 (let ((?x489 (* c k m m m)))
 (let ((?x1437 (* 2 ?x489)))
 (let ((?x486 (* k k k m m)))
 (let ((?x485 (* c k k m m)))
 (let ((?x49 (* k k)))
 (let ((?x2734 (* 12 ?x49)))
 (let ((?x2534 (+ ?x2734 (* (- 6) (* m k c)) (* (- 6) (* k k c)) ?x485 ?x486 ?x1437 ?x1447 ?x491 ?x492 (* (- 6) (* c k k)) ?x1115 (* 89 (* c k m)) (* 80 (* k k m)) ?x2548 ?x2597 ?x2636 ?x2596 ?x1433 ?x1445 ?x1439 ?x1449 ?x2572 (* (- 6) (* m k k)) ?x1232 ?x1317 ?x1235 ?x1236 ?x1315 ?x1239 (* (- 48) (* c c k)) (* (- 6) (* m c k)) ?x1258 (* (- 6) (* k c k)) (* 9 (* c c m)) (* (- 6) (* m c c)) (* (- 6) (* k c c)) ?x1302 ?x2482 ?x1356 ?x1311 ?x1290 ?x2625 ?x2626 ?x1399 ?x1453 ?x1700 ?x1714 ?x1776 (* 36 (* c k)) ?x2175 ?x2530 ?x2579 (* (- 6) (* k c)) (* (- 6) (* m c)) (* (- 6) (* m k)) ?x2629 ?x2630 ?x2633 ?x2635 ?x2631 ?x2632 ?x2531 ?x1966 ?x2532 ?x2580 ?x2637 ?x2638 ?x2639 ?x2640 ?x2533)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 (* c n))) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x1473 (and $x135 $x219 $x271 $x309 (not (= ?x2534 0)))))
 (let ((?x2506 (* ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x1511 (* ?x319 ?x70 ?x69 ?x69)))
 (let ((?x2253 (+ ?x1306 (* (- 1) (* ?x319 ?x319 ?x70 ?x70 ?x69)) (* 3 ?x1381) (* (- 1) (* ?x1202 ?x319 ?x70 ?x69 ?x69)) (* (- 2) ?x1451) (* (- 2) (* ?x1202 ?x319 ?x69 ?x69)) ?x1511 (* (- 3) ?x1698) (* (- 1) ?x1714) (* (- 1) (* ?x319 ?x69 ?x69)) ?x1760 (* 2 ?x1866) ?x2506 (* 3 (* ?x319 ?x69 ?x69 ?x69)) (* (- 1) ?x1258))))
 (let (($x1141 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2462 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x2489 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x2462 $x1141 (not (= ?x2253 0)))))
 (rewrite (= $x2489 $x1473)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1395 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1866 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x2175 (* (- 2) ?x1866)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1776 (* (- 1) ?x1760)))
 (let ((?x1730 (* ?x319 ?x69 ?x69)))
 (let ((?x1714 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1698 (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1700 (* 3 ?x1698)))
 (let ((?x1451 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1453 (* 2 ?x1451)))
 (let ((?x1435 (* ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1381 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1399 (* (- 3) ?x1381)))
 (let ((?x1379 (* ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1356 (* (- 1) ?x1306)))
 (let ((?x1261 (+ ?x1356 ?x1379 ?x1399 ?x1435 ?x1453 (* 2 (* ?x1202 ?x319 ?x69 ?x69)) (* (- 1) (* ?x319 ?x70 ?x69 ?x69)) ?x1700 ?x1714 ?x1730 ?x1776 ?x2175 (* (- 1) (* ?x1202 ?x1202 ?x319 ?x70 ?x69)) (* (- 3) (* ?x319 ?x69 ?x69 ?x69)) ?x1258)))
 (let (($x1141 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x442 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x342 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= ?x342 (- 4)) $x442 $x1141 (not (= ?x1261 0))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1792 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x2506 (* ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1511 (* ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2253 (+ ?x1306 (* (- 1) (* ?x319 ?x319 ?x70 ?x70 ?x69)) (* 3 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x1202 ?x319 ?x70 ?x69 ?x69)) (* (- 2) (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)) (* (- 2) (* ?x1202 ?x319 ?x69 ?x69)) ?x1511 (* (- 3) (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)) (* (- 1) (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)) (* (- 1) (* ?x319 ?x69 ?x69)) ?x1760 (* 2 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)) ?x2506 (* 3 (* ?x319 ?x69 ?x69 ?x69)) (* (- 1) ?x1258))))
 (let (($x1141 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2462 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x2489 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x2462 $x1141 (not (= ?x2253 0)))))
 (let ((?x1866 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x2175 (* (- 2) ?x1866)))
 (let ((?x1776 (* (- 1) ?x1760)))
 (let ((?x1730 (* ?x319 ?x69 ?x69)))
 (let ((?x1714 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1698 (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1700 (* 3 ?x1698)))
 (let ((?x1451 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1453 (* 2 ?x1451)))
 (let ((?x1435 (* ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1381 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1399 (* (- 3) ?x1381)))
 (let ((?x1379 (* ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1356 (* (- 1) ?x1306)))
 (let ((?x1261 (+ ?x1356 ?x1379 ?x1399 ?x1435 ?x1453 (* 2 (* ?x1202 ?x319 ?x69 ?x69)) (* (- 1) ?x1511) ?x1700 ?x1714 ?x1730 ?x1776 ?x2175 (* (- 1) ?x2506) (* (- 3) (* ?x319 ?x69 ?x69 ?x69)) ?x1258)))
 (let (($x442 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x342 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x989 (and $x135 (= ?x342 (- 4)) $x442 $x1141 (not (= ?x1261 0)))))
 (rewrite (= $x989 $x2489)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x77 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x74 (+ (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x81 (+ (- ?x74 (* 3 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x71 ?x77) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x77) (* 2 ?x69 ?x69 ?x71 ?x77))))
 (let ((?x87 (+ (- ?x81 (* ?x69 ?x69 ?x70 ?x71)) (* 3 ?x69 ?x69 ?x70 ?x71 ?x77 ?x77) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x77) (* ?x69 ?x69 ?x71))))
 (let ((?x93 (- (- ?x87 (* ?x69 ?x70 ?x70 ?x71 ?x77 ?x77 ?x77)) (* 2 ?x69 ?x70 ?x71 ?x77 ?x77 ?x77))))
 (let ((?x95 (- (- ?x93 (* ?x69 ?x70 ?x71 ?x77 ?x77)) (* 3 ?x69 ?x69 ?x69 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x95 (* ?x69 ?x70 ?x70 ?x71 ?x77 ?x77)) 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1375 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x319 (+ 6 m)))
 (let ((?x1202 (+ 1 n)))
 (let ((?x1258 (* ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1866 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x69)))
 (let ((?x2175 (* (- 2) ?x1866)))
 (let ((?x1760 (* ?x1202 ?x1202 ?x1202 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1776 (* (- 1) ?x1760)))
 (let ((?x1730 (* ?x319 ?x69 ?x69)))
 (let ((?x1714 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1698 (* ?x1202 ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1700 (* 3 ?x1698)))
 (let ((?x1451 (* ?x1202 ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1453 (* 2 ?x1451)))
 (let ((?x1435 (* ?x1202 ?x319 ?x70 ?x69 ?x69)))
 (let ((?x1381 (* ?x319 ?x319 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x1399 (* (- 3) ?x1381)))
 (let ((?x1379 (* ?x319 ?x319 ?x70 ?x70 ?x69)))
 (let ((?x1306 (* ?x319 ?x319 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1356 (* (- 1) ?x1306)))
 (let ((?x1261 (+ ?x1356 ?x1379 ?x1399 ?x1435 ?x1453 (* 2 (* ?x1202 ?x319 ?x69 ?x69)) (* (- 1) (* ?x319 ?x70 ?x69 ?x69)) ?x1700 ?x1714 ?x1730 ?x1776 ?x2175 (* (- 1) (* ?x1202 ?x1202 ?x319 ?x70 ?x69)) (* (- 3) (* ?x319 ?x69 ?x69 ?x69)) ?x1258)))
 (let (($x1141 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x442 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x342 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x989 (and $x135 (= ?x342 (- 4)) $x442 $x1141 (not (= ?x1261 0)))))
 (let ((?x77 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x74 (+ (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x81 (+ (- ?x74 (* 3 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x69 ?x70 ?x71 ?x77) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x77) (* 2 ?x69 ?x69 ?x71 ?x77))))
 (let ((?x87 (+ (- ?x81 (* ?x69 ?x69 ?x70 ?x71)) (* 3 ?x69 ?x69 ?x70 ?x71 ?x77 ?x77) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x77) (* ?x69 ?x69 ?x71))))
 (let ((?x93 (- (- ?x87 (* ?x69 ?x70 ?x70 ?x71 ?x77 ?x77 ?x77)) (* 2 ?x69 ?x70 ?x71 ?x77 ?x77 ?x77))))
 (let ((?x95 (- (- ?x93 (* ?x69 ?x70 ?x71 ?x77 ?x77)) (* 3 ?x69 ?x69 ?x69 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x101 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= (+ ?x95 (* ?x69 ?x70 ?x70 ?x71 ?x77 ?x77)) 0))))))
 (rewrite (= $x101 $x989)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x404 (mp (mp @x103 (quant-intro (proof-bind ?x1375) (= $x102 $x1395)) $x1395) (rewrite (= $x1395 $x1395)) $x1395)))
 (let ((@x1627 (mp (mp @x404 (quant-intro (proof-bind ?x1792) (= $x1395 $x1746)) $x1746) (quant-intro (proof-bind ?x2648) (= $x1746 $x2651)) $x2651)))
 (let ((@x2507 (mp~ (mp @x1627 (quant-intro (proof-bind ?x886) (= $x2651 $x1023)) $x1023) (sk (~ $x1023 $x360)) $x360)))
 (let ((@x607 (mp @x2507 (rewrite (= $x360 $x2501)) $x2501)))
 (let ((@x430 (and-elim @x607 $x444)))
 (let ((@x2255 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x444) $x1413)) @x430 $x1413)))
 (let (($x980 (>= ?x1175 (- 1))))
 (let ((@x2270 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x444) $x980)) @x430 $x980)))
 (let (($x820 (<= ?x2663 6)))
 (let ((@x1322 (and-elim @x607 $x350)))
 (let ((@x2281 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x820)) @x1322 $x820)))
 (let (($x1405 (>= ?x2663 6)))
 (let ((@x1281 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x350) $x1405)) @x1322 $x1405)))
 (let (($x1407 (<= ?x1194 (- 1))))
 (let ((@x426 (and-elim @x607 $x410)))
 (let ((@x1961 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x410) $x1407)) @x426 $x1407)))
 (let (($x1250 (>= ?x1194 (- 1))))
 (let ((@x2115 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x410) $x1250)) @x426 $x1250)))
 (let (($x1298 (<= ?x1135 (- 4))))
 (let ((@x428 (and-elim @x607 $x1136)))
 (let ((@x1457 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1136) $x1298)) @x428 $x1298)))
 (let (($x2313 (>= ?x1135 (- 4))))
 (let ((@x1307 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1136) $x2313)) @x428 $x2313)))
 (let (($x2224 (not (>= ?x1274 0))))
 (let (($x1143 (<= ?x1274 0)))
 (let ((@x1251 ((_ th-lemma arith) (hypothesis (not $x1143)) @x2270 @x2255 @x1307 @x1457 @x2270 @x2255 @x2115 @x1961 @x2270 @x2255 @x2115 @x1961 @x2115 @x1961 @x2270 @x2255 @x1307 @x1457 @x2115 @x1961 @x2270 @x2255 @x1281 @x2281 @x1281 @x2281 @x2270 @x2255 @x1281 @x2281 @x1307 @x1457 @x2115 @x1961 @x2270 @x2255 false)))
 (let ((@x2109 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2504 (not $x1143) $x2224)) (and-elim @x607 $x450) (or (not $x1143) $x2224))))
 ((_ th-lemma arith) (unit-resolution @x2109 (lemma @x1251 $x1143) $x2224) @x2270 @x2255 @x2270 @x2255 @x2115 @x1961 @x2270 @x2255 @x2115 @x1961 @x1307 @x1457 @x2115 @x1961 @x2270 @x2255 @x1281 @x2281 @x1281 @x2281 @x1281 @x2281 @x2270 @x2255 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        22
 :arith-assert-upper        78
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           13
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             793
 :arith-nonlinear-bounds    14
 :arith-nonlinear-horner    19
 :arith-num-rows            10
 :arith-patches             6
 :arith-pivots              15
 :arith-row-summations      31
 :arith-tableau-max-columns 104
 :arith-tableau-max-rows    10
 :conflicts                 4
 :decisions                 68
 :del-clause                16
 :final-checks              12
 :max-memory                4.15
 :memory                    3.47
 :mk-bool-var               89
 :mk-clause                 16
 :num-allocs                1805165
 :num-checks                1
 :propagations              12
 :rlimit-count              19387
 :time                      0.01
 :total-time                0.02)
