unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x516 (* (- 12) s!1)))
 (let ((?x1316 (* r!2 s!1)))
 (let ((?x1446 (* (- 3) ?x1316)))
 (let ((?x935 (* r!2 r!2)))
 (let ((?x1155 (* 18 ?x935)))
 (let ((?x1228 (* 9 r!2)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x609 (* s!1 s!1)))
 (let ((?x552 (* 2 ?x609)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1256 (* 18 x!0)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x732 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x851 (+ ?x1757 ?x732 ?x1681 ?x1562 (* (- 18) (* x00 r!2)) ?x1859 ?x504 (* (- 6) (* s00 r00 r!2)) ?x1256 (* 21 (* s00 r!2)) ?x572 ?x552 ?x616 (* 18 (* r00 x!0)) ?x1228 (* (- 6) (* r00 r00 s!1)) ?x1155 (* (- 21) (* r00 s!1)) (* 18 (* x!0 r!2)) (* 36 (* r00 r!2 r!2)) (* (- 36) (* r00 r00 r!2)) (* 6 (* r00 r!2 s!1)) ?x1446 ?x516 (* 2 (* s00 s!1)))))
 (let (($x709 (<= ?x851 0)))
 (let ((?x1727 (* (- 3) s!1)))
 (let ((?x1317 (* 2 ?x1316)))
 (let ((?x1194 (* 3 r!2)))
 (let ((?x718 (* 6 x!0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x1159 (+ ?x44 ?x468 ?x469 ?x472 ?x438 ?x718 (* 4 (* s00 r!2)) ?x1194 (* (- 12) (* r00 r00 r!2)) ?x1317 ?x1727)))
 (let (($x1719 (<= ?x1159 0)))
 (let (($x878 (= ?x1159 0)))
 (let ((?x869 (+ 3 (* 6 r!2) s!1)))
 (let ((?x667 (* (- 1) s!1)))
 (let ((?x276 (+ x!0 ?x667)))
 (let ((?x1087 (+ 1 r!2)))
 (let ((?x1035 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x276 ?x276 ?x276 ?x276 ?x276 ?x276 ?x276 ?x276 ?x869 ?x869 ?x869 ?x851)))
 (let (($x1021 (= ?x1035 0)))
 (let (($x1718 (not $x1021)))
 (let ((?x777 (* (- 9) s!1)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x789 (* 108 ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x888 (* 16 ?x1162)))
 (let ((?x874 (* r00 r00 s!1)))
 (let ((?x891 (* 36 ?x874)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1193 (* (- 432) ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x253 (* (- 108) ?x783)))
 (let ((?x548 (* (- 36) ?x615)))
 (let ((?x555 (* 51 ?x559)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x137 (* 9 s00)))
 (let ((?x288 (+ ?x137 (* (- 54) ?x394) (* 108 (* s00 r00 s!1)) (* 216 (* s00 r00 x00)) ?x1853 ?x555 (* 15 ?x609) ?x548 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 108) (* r00 x!0)) ?x253 ?x1193 ?x891 (* 54 (* r00 s!1)) (* (- 108) (* x!0 s!1)) (* (- 12) (* s00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* (- 216) (* s00 r00 x!0)) (* 216 (* s00 r00 r00 r00)) (* 108 (* s00 x!0)) ?x888 (* 108 (* x00 s!1)) ?x789 (* (- 4) (* s!1 s!1 s!1)) (* 36 (* r00 r00 s!1 s!1)) ?x777 (* (- 66) (* s00 s!1)) (* (- 216) (* x00 x!0)) (* 108 (* x!0 x!0)))))
 (let (($x409 (= ?x288 0)))
 (let ((?x820 (+ ?x137 (* 54 (* x00 r!2)) (* (- 24) ?x394) (* 2 (* s00 r00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 54 ?x490) (* (- 24) (* s00 r!2)) (* 15 ?x559) (* (- 3) ?x609) ?x548 (* 2 (* s00 s00 r00)) (* 4 (* s00 s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) (* (- 54) (* r00 x!0)) (* (- 6) ?x783) (* (- 36) (* r00 x!0 r!2)) (* 36 (* r00 r00 x00)) ?x891 (* 24 (* r00 s!1)) (* (- 6) (* x!0 s!1)) (* (- 54) (* x!0 r!2)) (* 6 (* s00 x!0)) (* 6 (* x00 s!1)) (* 24 ?x1316) ?x777 (* (- 12) (* s00 s!1)) (* (- 2) (* r!2 s!1 s!1)) (* (- 36) (* r00 r00 x!0)))))
 (let (($x512 (= ?x820 0)))
 (let ((?x1708 (+ ?x44 (* 18 (* x00 r!2)) (* (- 9) ?x394) (* 18 ?x490) (* 6 (* s00 r00 r!2)) (* (- 9) (* s00 r!2)) (* 4 ?x559) (* (- 2) ?x609) (* (- 6) ?x615) (* (- 18) (* r00 x!0)) (* 6 ?x874) (* 9 (* r00 s!1)) (* (- 18) (* x!0 r!2)) (* (- 6) (* r00 r!2 s!1)) (* 9 ?x1316) ?x1727 (* (- 2) (* s00 s!1)))))
 (let (($x390 (= ?x1708 0)))
 (let ((?x850 (* (- 3) ?x269)))
 (let ((?x1580 (+ s00 ?x850 (* 3 ?x935) ?x667)))
 (let (($x1127 (= ?x1580 0)))
 (let (($x309 (and $x1127 $x878 $x390 $x512 $x409 $x1718)))
 (let ((?x484 (* (- 6) (* r!2 s00 r00))))
 (let ((?x1274 (* s!1 s00)))
 (let ((?x577 (* 2 ?x1274)))
 (let ((?x1268 (* r!2 x00)))
 (let ((?x557 (* (- 18) ?x1268)))
 (let ((?x845 (* x!0 r00)))
 (let ((?x1827 (* 18 ?x845)))
 (let ((?x684 (* s!1 r00 r00)))
 (let ((?x454 (* (- 6) ?x684)))
 (let ((?x993 (* 6 (* r!2 s!1 r00))))
 (let ((?x567 (* r!2 x!0)))
 (let ((?x576 (* 18 ?x567)))
 (let ((?x1744 (+ ?x1228 ?x516 ?x1256 ?x1757 ?x732 ?x1681 ?x1155 ?x1562 ?x1446 (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1859 ?x504 ?x552 ?x576 ?x993 ?x454 ?x572 ?x1827 ?x616 ?x557 ?x577 (* (- 21) (* s!1 r00)) ?x484 (* 36 (* r!2 r!2 r00)))))
 (let ((?x350 (+ ?x667 x!0)))
 (let ((?x1451 (* ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x1087 ?x350 ?x350 ?x350 ?x350 ?x350 ?x350 ?x350 ?x350 ?x869 ?x869 ?x869 ?x1744)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x1710 (* (- 36) ?x684)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x1283 (* 9 s!1)))
 (let ((?x1768 (+ ?x1283 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x609) ?x1710 ?x1343 (* 108 ?x845) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x978 (* 66 ?x1274) ?x990 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x726 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1107 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x861 (* 12 (* s!1 s!1 s00)) ?x1349 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1353 (* 216 (* x!0 x00)) ?x1354)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1391 (+ ?x1283 ?x965 (* (- 24) ?x1316) (* 24 (* r!2 s00)) ?x542 ?x527 (* 3 ?x609) (* 54 ?x567) ?x1710 (* 36 (* r!2 x!0 r00)) ?x894 (* 54 ?x845) (* (- 6) (* x!0 s00)) ?x978 (* (- 54) ?x1268) (* 4 (* s!1 s!1 r00)) (* 12 ?x1274) ?x678 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x784 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x868 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x1279 (+ (* 3 s!1) ?x346 (* (- 9) ?x1316) (* 9 (* r!2 s00)) ?x509 ?x504 ?x552 ?x576 ?x993 ?x454 ?x572 ?x1827 ?x616 ?x557 ?x577 (* (- 9) (* s!1 r00)) ?x484)))
 (let ((?x821 (+ ?x1194 ?x1727 ?x718 ?x44 ?x468 ?x469 ?x1317 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x472 ?x438)))
 (let (($x959 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x935) (* 3 ?x269)) 0) (= ?x821 0) (= ?x1279 0) (= ?x1391 0) (= ?x1768 0) (not (= ?x1451 0)))))
 (let (($x1067 (exists ((r Int) (s Int) (x Int) )(! (let ((?x707 (* (- 6) (* r s00 r00))))
 (let ((?x656 (* s s00)))
 (let ((?x657 (* 2 ?x656)))
 (let ((?x627 (* r x00)))
 (let ((?x640 (* (- 18) ?x627)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x585 (* x r00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x546 (* (- 6) ?x533)))
 (let ((?x522 (* 6 (* r s r00))))
 (let ((?x517 (* r x)))
 (let ((?x518 (* 18 ?x517)))
 (let ((?x513 (* s s)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x319 (* r r00 r00)))
 (let ((?x1571 (* (- 36) ?x319)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x732 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x1489 (* 18 x)))
 (let ((?x751 (+ (* 9 r) (* (- 12) s) ?x1489 ?x1757 ?x732 ?x1681 (* 18 (* r r)) ?x1562 (* (- 3) (* r s)) ?x1571 (* 21 (* r s00)) ?x1859 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 (* (- 21) (* s r00)) ?x707 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1467 (+ ?x248 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1096 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1364 ?x1364 ?x1364 ?x751)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x842 (* (- 36) ?x533)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x513) ?x842 ?x1343 (* 108 ?x585) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x978 (* 66 ?x656) ?x990 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x726 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 (* r s00)) ?x542 ?x527 ?x545 (* 54 ?x517) ?x842 (* 36 (* r x r00)) ?x894 (* 54 ?x585) (* (- 6) (* x s00)) ?x978 (* (- 54) ?x627) (* 4 (* s s r00)) (* 12 ?x656) ?x678 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x668 (* s r00)))
 (let ((?x681 (* (- 9) ?x668)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x653 (* 9 ?x367)))
 (let ((?x313 (* r s)))
 (let ((?x485 (* (- 9) ?x313)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 ?x485 ?x653 ?x509 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 ?x681 ?x707)))
 (let (($x720 (= ?x713 0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x468 ?x469 (* 2 ?x313) (* (- 12) ?x319) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x302 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x269)) 0)))
 (and $x302 $x474 $x720 $x1062 $x1356 (not (= ?x1096 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x870 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1464 (* r00 r00 s00)))
 (let ((?x1465 (* 6 ?x1464)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1797 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1691 (* r00 s00)))
 (let ((?x875 (* 9 ?x1691)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x982 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x875 ?x1797 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1465 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x890 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x714 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1048 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x890 ?x890 ?x890 ?x982)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x789 (* 108 ?x1324)))
 (let ((?x137 (* 9 s00)))
 (let ((?x555 (* 51 ?x559)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x888 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x253 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1193 (* (- 432) ?x860)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x800 (+ (* 216 (* r00 s00 x00)) ?x1853 (* (- 54) ?x1691) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x253 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x888 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x555 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1464) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x789)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x513 (* s s)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x1603 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x1691) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1464) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x1792 (+ (* (- 9) (* s r)) ?x504 ?x875 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 ?x1612 ?x346 ?x1465 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x444 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1691) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x963 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x963 (= ?x444 0) (= ?x1792 0) (= ?x1603 0) (= ?x800 0) (not (= ?x1048 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x716 (lambda ((r Int) (s Int) (x Int) )(let ((?x707 (* (- 6) (* r s00 r00))))
 (let ((?x656 (* s s00)))
 (let ((?x657 (* 2 ?x656)))
 (let ((?x627 (* r x00)))
 (let ((?x640 (* (- 18) ?x627)))
 (let ((?x615 (* s00 r00 r00)))
 (let ((?x616 (* 6 ?x615)))
 (let ((?x585 (* x r00)))
 (let ((?x586 (* 18 ?x585)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x533 (* s r00 r00)))
 (let ((?x546 (* (- 6) ?x533)))
 (let ((?x522 (* 6 (* r s r00))))
 (let ((?x517 (* r x)))
 (let ((?x518 (* 18 ?x517)))
 (let ((?x513 (* s s)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x394 (* s00 r00)))
 (let ((?x1859 (* 3 ?x394)))
 (let ((?x319 (* r r00 r00)))
 (let ((?x1571 (* (- 36) ?x319)))
 (let ((?x269 (* r00 r00)))
 (let ((?x1562 (* (- 18) ?x269)))
 (let ((?x1681 (* (- 18) x00)))
 (let ((?x732 (* (- 9) r00)))
 (let ((?x1757 (* 12 s00)))
 (let ((?x1489 (* 18 x)))
 (let ((?x751 (+ (* 9 r) (* (- 12) s) ?x1489 ?x1757 ?x732 ?x1681 (* 18 (* r r)) ?x1562 (* (- 3) (* r s)) ?x1571 (* 21 (* r s00)) ?x1859 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 (* (- 21) (* s r00)) ?x707 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1364 (+ 3 ?x213 s)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x1467 (+ ?x248 x)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1096 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1467 ?x1364 ?x1364 ?x1364 ?x751)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x1354 (* (- 108) ?x1324)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x1353 (* (- 16) ?x1162)))
 (let ((?x1034 (* s00 r00 r00 r00)))
 (let ((?x1349 (* (- 216) ?x1034)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x861 (* 432 ?x860)))
 (let ((?x783 (* s00 x00)))
 (let ((?x1107 (* 108 ?x783)))
 (let ((?x725 (* s00 s00 r00 r00)))
 (let ((?x726 (* 36 ?x725)))
 (let ((?x660 (* s00 s00 r00)))
 (let ((?x990 (* 108 ?x660)))
 (let ((?x978 (* 36 ?x615)))
 (let ((?x1343 (* (- 51) ?x559)))
 (let ((?x842 (* (- 36) ?x533)))
 (let ((?x1340 (* (- 108) ?x490)))
 (let ((?x483 (* s00 r00 x00)))
 (let ((?x1339 (* (- 216) ?x483)))
 (let ((?x494 (* 54 ?x394)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1355 (+ ?x143 ?x965 ?x494 ?x1339 ?x1340 (* (- 15) ?x513) ?x842 ?x1343 (* 108 ?x585) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x978 (* 66 ?x656) ?x990 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x726 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1107 (* 108 (* s x)) (* (- 108) (* x x)) ?x861 (* 12 (* s s s00)) ?x1349 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1353 (* 216 (* x x00)) ?x1354)))
 (let (($x1356 (= ?x1355 0)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x678 (* (- 2) ?x660)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x542 (* 24 ?x394)))
 (let ((?x1057 (+ ?x143 ?x965 (* (- 24) (* r s)) (* 24 (* r s00)) ?x542 ?x527 ?x545 (* 54 ?x517) ?x842 (* 36 (* r x r00)) ?x894 (* 54 ?x585) (* (- 6) (* x s00)) ?x978 (* (- 54) ?x627) (* 4 (* s s r00)) (* 12 ?x656) ?x678 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x784 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x868 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1062 (= ?x1057 0)))
 (let ((?x668 (* s r00)))
 (let ((?x681 (* (- 9) ?x668)))
 (let ((?x509 (* 9 ?x394)))
 (let ((?x367 (* r s00)))
 (let ((?x653 (* 9 ?x367)))
 (let ((?x313 (* r s)))
 (let ((?x485 (* (- 9) ?x313)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x713 (+ ?x47 ?x346 ?x485 ?x653 ?x509 ?x504 ?x514 ?x518 ?x522 ?x546 ?x572 ?x586 ?x616 ?x640 ?x657 ?x681 ?x707)))
 (let (($x720 (= ?x713 0)))
 (let ((?x437 (* r00 r00 r00)))
 (let ((?x438 (* 12 ?x437)))
 (let ((?x472 (* (- 6) ?x394)))
 (let ((?x469 (* (- 6) x00)))
 (let ((?x468 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x473 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x468 ?x469 (* 2 ?x313) (* (- 12) ?x319) (* 4 ?x367) ?x472 ?x438)))
 (let (($x474 (= ?x473 0)))
 (let (($x302 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x269)) 0)))
 (let (($x531 (and $x302 $x474 $x720 $x1062 $x1356 (not (= ?x1096 0)))))
 (let ((?x1464 (* r00 r00 s00)))
 (let ((?x1465 (* 6 ?x1464)))
 (let ((?x1691 (* r00 s00)))
 (let ((?x875 (* 9 ?x1691)))
 (let ((?x982 (+ 9 (* (- 9) (* ?x1361 (+ 3 s ?x213))) ?x504 ?x875 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1361 (+ x ?x248))) (* 6 (* r00 ?x1361 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x572 (* 18 (* r00 (+ x ?x248))) ?x346 ?x1465 (* (- 18) (* x00 ?x1361)) ?x47 (* 18 r) (* 9 (* s00 ?x1361)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1361)))))
 (let ((?x890 (+ 3 s ?x213)))
 (let ((?x714 (+ x ?x248)))
 (let ((?x1048 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x890 ?x890 ?x890 ?x982)))
 (let ((?x789 (* 108 ?x1324)))
 (let ((?x137 (* 9 s00)))
 (let ((?x555 (* 51 ?x559)))
 (let ((?x888 (* 16 ?x1162)))
 (let ((?x253 (* (- 108) ?x783)))
 (let ((?x1193 (* (- 432) ?x860)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x800 (+ (* 216 (* r00 s00 x00)) ?x1853 (* (- 54) ?x1691) (* 15 ?x513) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x253 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x888 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x555 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1464) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x789)))
 (let ((?x1603 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x1691) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1464) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x1792 (+ (* (- 9) (* s r)) ?x504 ?x875 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 ?x1612 ?x346 ?x1465 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x444 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1691) (* (- 6) x) ?x59 (* (- 12) ?x437))))
 (let (($x1255 (and (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) ?x269)) 0) (= ?x444 0) (= ?x1792 0) (= ?x1603 0) (= ?x800 0) (not (= ?x1048 0)))))
 (rewrite (= $x1255 $x531))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x245 (exists ((r Int) (s Int) (x Int) )(! (let ((?x218 (- x s)))
 (let ((?x212 (+ r 1)))
 (let ((?x239 (- 1)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x240 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) ?x212 ?x212 ?x214 ?x218 ?x218 ?x239 ?x212 ?x212 ?x212 ?x214 ?x214 ?x218 ?x218 ?x218 ?x239 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218)))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x240 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1694 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1464 (* r00 r00 s00)))
 (let ((?x1465 (* 6 ?x1464)))
 (let ((?x346 (* (- 3) s00)))
 (let ((?x559 (* s00 s00)))
 (let ((?x572 (* (- 4) ?x559)))
 (let ((?x1797 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1691 (* r00 s00)))
 (let ((?x875 (* 9 ?x1691)))
 (let ((?x490 (* r00 x00)))
 (let ((?x504 (* (- 18) ?x490)))
 (let ((?x982 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x504 ?x875 ?x1797 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x572 (* 18 (* r00 (+ x (* (- 1) s)))) ?x346 ?x1465 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x890 (+ 3 s ?x213)))
 (let ((?x248 (* (- 1) s)))
 (let ((?x714 (+ x ?x248)))
 (let ((?x1361 (+ 1 r)))
 (let ((?x1048 (* ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x1361 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x714 ?x890 ?x890 ?x890 ?x982)))
 (let ((?x1324 (* x00 x00)))
 (let ((?x789 (* 108 ?x1324)))
 (let ((?x137 (* 9 s00)))
 (let ((?x555 (* 51 ?x559)))
 (let ((?x1162 (* s00 s00 s00)))
 (let ((?x888 (* 16 ?x1162)))
 (let ((?x783 (* s00 x00)))
 (let ((?x253 (* (- 108) ?x783)))
 (let ((?x860 (* r00 r00 r00 x00)))
 (let ((?x1193 (* (- 432) ?x860)))
 (let ((?x1853 (* 108 ?x490)))
 (let ((?x800 (+ (* 216 (* r00 s00 x00)) ?x1853 (* (- 54) ?x1691) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1193 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x253 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x888 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x555 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1464) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x789)))
 (let ((?x143 (* 9 s)))
 (let ((?x965 (* (- 9) s00)))
 (let ((?x894 (* (- 15) ?x559)))
 (let ((?x855 (* r00 r00 x00)))
 (let ((?x868 (* (- 36) ?x855)))
 (let ((?x784 (* 6 ?x783)))
 (let ((?x513 (* s s)))
 (let ((?x545 (* 3 ?x513)))
 (let ((?x527 (* (- 54) ?x490)))
 (let ((?x1603 (+ (* (- 24) (* s r)) ?x527 (* 36 (* r00 x r)) (* 24 ?x1691) ?x545 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x784 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x868 ?x894 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x965 (* 36 ?x1464) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1611 (* r00 x)))
 (let ((?x1612 (* 18 ?x1611)))
 (let ((?x514 (* 2 ?x513)))
 (let ((?x1792 (+ (* (- 9) (* s r)) ?x504 ?x875 ?x514 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x572 ?x1612 ?x346 ?x1465 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x444 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x346 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1691) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x963 (= (+ s00 ?x248 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1255 (and $x963 (= ?x444 0) (= ?x1792 0) (= ?x1603 0) (= ?x800 0) (not (= ?x1048 0)))))
 (let ((?x218 (- x s)))
 (let ((?x212 (+ r 1)))
 (let ((?x239 (- 1)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 ?x218) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 ?x218))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x240 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) ?x212 ?x212 ?x214 ?x218 ?x218 ?x239 ?x212 ?x212 ?x212 ?x214 ?x214 ?x218 ?x218 ?x218 ?x239 ?x212 ?x212 ?x212 ?x218 ?x218 ?x218)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x244 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x240 0))))))
 (rewrite (= $x244 $x1255)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x246 (asserted $x245)))
 (let ((@x287 (mp (mp @x246 (quant-intro (proof-bind ?x1694) (= $x245 $x870)) $x870) (rewrite (= $x870 $x870)) $x870)))
 (let ((@x1041 (mp~ (mp @x287 (quant-intro (proof-bind ?x716) (= $x870 $x1067)) $x1067) (sk (~ $x1067 $x959)) $x959)))
 (let ((@x1154 (mp @x1041 (rewrite (= $x959 $x309)) $x309)))
 (let ((@x1008 (and-elim @x1154 $x878)))
 (let ((@x995 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x878) $x1719)) @x1008 $x1719)))
 (let (($x1252 (>= ?x1159 0)))
 (let ((@x857 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x878) $x1252)) @x1008 $x1252)))
 (let (($x1657 (<= ?x1580 0)))
 (let ((@x328 (and-elim @x1154 $x1127)))
 (let ((@x799 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1127) $x1657)) @x328 $x1657)))
 (let (($x1656 (>= ?x1580 0)))
 (let ((@x1837 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1127) $x1656)) @x328 $x1656)))
 (let (($x583 (<= ?x1708 0)))
 (let ((@x844 (and-elim @x1154 $x390)))
 (let ((@x1006 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x583)) @x844 $x583)))
 (let (($x488 (>= ?x1708 0)))
 (let ((@x1574 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x390) $x488)) @x844 $x488)))
 (let (($x852 (<= ?x820 0)))
 (let ((@x596 (and-elim @x1154 $x512)))
 (let ((@x674 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x512) $x852)) @x596 $x852)))
 (let (($x871 (>= ?x820 0)))
 (let ((@x1452 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x512) $x871)) @x596 $x871)))
 (let (($x1389 (<= ?x288 0)))
 (let ((@x1007 (and-elim @x1154 $x409)))
 (let ((@x773 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x409) $x1389)) @x1007 $x1389)))
 (let (($x1536 (>= ?x288 0)))
 (let ((@x1488 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x409) $x1536)) @x1007 $x1536)))
 (let ((@x1647 ((_ th-lemma arith) (hypothesis (not $x709)) @x1837 @x799 @x1488 @x773 @x1574 @x1006 @x1837 @x799 @x1452 @x674 @x1452 @x674 @x1488 @x773 @x1574 @x1006 @x1488 @x773 @x1837 @x799 @x1452 @x674 @x1574 @x1006 @x1837 @x799 @x857 @x995 false)))
 (let ((@x1384 (lemma @x1647 $x709)))
 (let (($x999 (>= ?x851 0)))
 (let ((@x747 ((_ th-lemma arith) (hypothesis (not $x999)) @x1837 @x799 @x1488 @x773 @x1574 @x1006 @x1837 @x799 @x1452 @x674 @x1452 @x674 @x1488 @x773 @x1574 @x1006 @x1488 @x773 @x1837 @x799 @x1452 @x674 @x1574 @x1006 @x1837 @x799 @x857 @x995 false)))
 (let ((@x1114 (lemma @x747 $x999)))
 (let (($x1052 (not (<= ?x1035 0))))
 (let (($x642 (>= ?x1035 0)))
 (let (($x1736 (= ?x851 0)))
 (let ((@x1232 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1736 (not $x709) (not $x999))) @x1114 (or $x1736 (not $x709)))))
 (let ((@x735 (hypothesis $x1736)))
 (let ((@x624 ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x642)) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1736) $x999)) @x735 $x999) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1736) $x709)) @x735 $x709) false)))
 (let ((@x801 (unit-resolution (lemma @x624 (or (not $x1736) $x642)) (unit-resolution @x1232 @x1384 $x1736) $x642)))
 (let ((@x703 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1021 $x1052 (not $x642))) (and-elim @x1154 $x1718) (or $x1052 (not $x642)))))
 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x703 @x801 $x1052) @x1114 @x1384 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        3
 :arith-assert-lower        28
 :arith-assert-upper        14
 :arith-conflicts           4
 :arith-eq-adapter          8
 :arith-gcd-tests           3
 :arith-grobner             3
 :arith-max-min             558
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    27
 :arith-num-rows            9
 :arith-patches             3
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-pseudo-nonlinear    2
 :arith-row-summations      16
 :arith-tableau-max-columns 98
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 4
 :del-clause                23
 :final-checks              7
 :max-memory                19.99
 :memory                    19.36
 :mk-bool-var               24
 :mk-clause                 28
 :num-allocs                1068253
 :num-checks                1
 :propagations              20
 :rlimit-count              49872
 :time                      0.03
 :total-time                0.05)
