unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x1921 (* (- 1) y!0)))
 (let ((?x1920 (* (- 1) x!1)))
 (let ((?x1922 (+ y00 x00 ?x1920 ?x1921)))
 (let (($x2125 (<= ?x1922 0)))
 (let (($x1923 (= ?x1922 0)))
 (let ((?x2130 (* x00 y!0)))
 (let ((?x645 (* (- 1) (* y00 x!1 y!0 y!0 y!0))))
 (let ((?x1873 (* x!1 x!1 x!1)))
 (let ((?x170 (* (- 1) ?x1873)))
 (let ((?x1830 (* x!1 y!0 y!0)))
 (let ((?x1868 (* 5 ?x1830)))
 (let ((?x1822 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x1169 (* x!1 x!1 x!1 y!0)))
 (let ((?x1165 (* (- 1) ?x1169)))
 (let ((?x1123 (* x00 x!1 x!1 y!0)))
 (let ((?x1091 (* y00 y!0)))
 (let ((?x1019 (* x00 x!1 x!1)))
 (let ((?x1161 (* (- 1) (* x00 x!1 y!0 y!0 y!0))))
 (let ((?x767 (* y00 x!1 x!1)))
 (let ((?x386 (* y00 x!1 x!1 y!0)))
 (let ((?x171 (* x!1 y!0 y!0 y!0 y!0)))
 (let ((?x994 (+ y00 x00 (* (- 3) (* x00 x!1)) ?x171 (* 2 (* x!1 y!0)) (* (- 5) (* x00 x!1 y!0)) ?x386 (* (- 3) (* x00 x!1 y!0 y!0)) (* (- 1) (* y!0 y!0)) ?x767 (* (- 5) (* y00 x!1 y!0)) (* (- 3) (* y00 x!1)) ?x1161 ?x1019 ?x1091 ?x1123 ?x1165 ?x1920 (* 3 (* x!1 y!0 y!0 y!0)) ?x1822 (* 3 (* x!1 x!1)) (* 4 (* x!1 x!1 y!0)) ?x1868 ?x1921 (* 2 (* x!1 x!1 y!0 y!0)) ?x170 ?x645 (* (- 3) (* y00 x!1 y!0 y!0)) ?x2130)))
 (let (($x995 (= ?x994 0)))
 (let (($x1655 (not $x995)))
 (let ((?x1904 (* (- 5) ?x1830)))
 (let ((?x1824 (* x!1 x!1)))
 (let ((?x967 (+ y00 x00 (* (- 1) (* x00 x!1)) ?x171 (* 6 (* x!1 y!0)) (* (- 1) (* x00 x!1 y!0)) ?x386 (* 3 (* x00 x!1 y!0 y!0)) (* 5 (* y!0 y!0)) (* (- 2) (* x00 y!0 y!0 y!0)) (* (- 1) ?x767) (* (- 1) (* y00 x!1 y!0)) (* (- 1) (* y00 x!1)) ?x1161 (* 6 (* y00 y!0 y!0)) (* (- 2) (* y00 y!0 y!0 y!0)) (* (- 1) ?x1019) (* 2 (* y!0 y!0 y!0 y!0)) (* (- 5) ?x1091) ?x1123 (* 6 (* x00 y!0 y!0)) ?x1165 ?x1920 (* (- 6) (* y!0 y!0 y!0)) (* (- 1) (* x!1 y!0 y!0 y!0)) ?x1822 ?x1824 (* 2 (* x!1 x!1 y!0)) ?x1904 ?x1921 (* (- 4) (* x!1 x!1 y!0 y!0)) ?x1873 ?x645 (* 3 (* y00 x!1 y!0 y!0)) (* (- 5) ?x2130))))
 (let (($x1072 (= ?x967 0)))
 (let (($x1092 (or (not $x1072) $x1655)))
 (let (($x1385 (and $x1923 $x1092)))
 (let ((?x1003 (* (- 1) ?x171)))
 (let ((?x1869 (* x!1 y!0 y!0 y!0 y00)))
 (let ((?x1823 (* (- 1) ?x1822)))
 (let ((?x481 (* y!0 y!0)))
 (let ((?x1681 (* (- 1) (* x!1 x!1 y!0 x00))))
 (let ((?x1783 (* x!1 y!0 y!0 y!0 x00)))
 (let ((?x1712 (* (- 1) (* x!1 x!1 y!0 y00))))
 (let ((?x95 (* (- 1) x00)))
 (let ((?x88 (* (- 1) y00)))
 (let ((?x1908 (+ x!1 y!0 ?x88 ?x95 (* (- 1) (* y!0 y00)) (* 5 (* x!1 y!0 y00)) ?x1712 (* 3 (* x!1 y00)) (* 3 (* x!1 x00)) (* 5 (* x!1 y!0 x00)) (* 3 (* x!1 y!0 y!0 x00)) ?x1783 (* (- 1) (* x!1 x!1 x00)) (* (- 1) (* y!0 x00)) ?x1681 ?x481 (* (- 3) (* x!1 y!0 y!0 y!0)) ?x1823 (* (- 3) ?x1824) (* (- 2) (* x!1 y!0)) (* (- 4) (* x!1 x!1 y!0)) ?x1904 (* (- 2) (* x!1 x!1 y!0 y!0)) ?x1869 (* 3 (* x!1 y!0 y!0 y00)) ?x1169 ?x1873 ?x1003 (* (- 1) (* x!1 x!1 y00)))))
 (let ((?x1173 (* x!1 x!1 y00)))
 (let ((?x1821 (* x!1 y!0 y!0 y!0)))
 (let ((?x1717 (* x!1 x!1 x00)))
 (let ((?x1883 (* x!1 y!0 x00)))
 (let ((?x1882 (* x!1 x00)))
 (let ((?x1713 (* x!1 y00)))
 (let ((?x446 (* x!1 y!0 y00)))
 (let ((?x198 (+ x!1 y!0 ?x88 ?x95 (* 5 (* y!0 y00)) ?x446 ?x1712 ?x1713 ?x1882 ?x1883 (* (- 3) (* x!1 y!0 y!0 x00)) ?x1783 (* (- 6) (* y!0 y!0 y00)) (* 2 (* y!0 y!0 y!0 y00)) ?x1717 (* 5 (* y!0 x00)) ?x1681 (* (- 6) (* y!0 y!0 x00)) (* 2 (* y!0 y!0 y!0 x00)) (* (- 5) ?x481) (* 6 (* y!0 y!0 y!0)) ?x1821 ?x1823 (* (- 1) ?x1824) (* (- 6) (* x!1 y!0)) (* (- 2) (* x!1 x!1 y!0)) ?x1868 (* 4 (* x!1 x!1 y!0 y!0)) ?x1869 (* (- 3) (* x!1 y!0 y!0 y00)) ?x1169 ?x170 (* (- 2) (* y!0 y!0 y!0 y!0)) ?x1003 ?x1173)))
 (let (($x1913 (and (= (+ x!1 y!0 ?x88 ?x95) 0) (or (not (= ?x198 0)) (not (= ?x1908 0))))))
 (let (($x1633 (exists ((x Int) (y Int) )(! (let ((?x1075 (* x y y y y)))
 (let ((?x1143 (* (- 1) ?x1075)))
 (let ((?x786 (* x x x)))
 (let ((?x770 (* x x x y)))
 (let ((?x723 (* x y y y00)))
 (let ((?x736 (* 3 ?x723)))
 (let ((?x709 (* x y y y y00)))
 (let ((?x560 (* x x y y)))
 (let ((?x873 (* (- 2) ?x560)))
 (let ((?x556 (* x y y)))
 (let ((?x1186 (* (- 5) ?x556)))
 (let ((?x545 (* x x y)))
 (let ((?x871 (* (- 4) ?x545)))
 (let ((?x525 (* x x y y y)))
 (let ((?x623 (* (- 1) ?x525)))
 (let ((?x523 (* x y y y)))
 (let ((?x1185 (* (- 3) ?x523)))
 (let ((?x512 (* y y)))
 (let ((?x341 (* x x y x00)))
 (let ((?x370 (* (- 1) ?x341)))
 (let ((?x324 (* x x x00)))
 (let ((?x368 (* (- 1) ?x324)))
 (let ((?x236 (* x y y y x00)))
 (let ((?x219 (* x y y x00)))
 (let ((?x244 (* 3 ?x219)))
 (let ((?x207 (* x y x00)))
 (let ((?x397 (* 5 ?x207)))
 (let ((?x201 (* x x00)))
 (let ((?x395 (* 3 ?x201)))
 (let ((?x143 (* x x y y00)))
 (let ((?x144 (* (- 1) ?x143)))
 (let ((?x95 (* (- 1) x00)))
 (let ((?x88 (* (- 1) y00)))
 (let ((?x1902 (+ x y ?x88 ?x95 (* (- 1) (* y y00)) (* 5 (* x y y00)) ?x144 (* 3 (* x y00)) ?x395 ?x397 ?x244 ?x236 ?x368 (* (- 1) (* y x00)) ?x370 ?x512 ?x1185 ?x623 (* (- 3) (* x x)) (* (- 2) (* x y)) ?x871 ?x1186 ?x873 ?x709 ?x736 ?x770 ?x786 ?x1143 (* (- 1) (* x x y00)))))
 (let ((?x1692 (* x x y00)))
 (let ((?x1856 (* (- 2) (* y y y y))))
 (let ((?x1526 (* (- 1) ?x786)))
 (let ((?x1487 (* (- 3) ?x723)))
 (let ((?x1601 (* 4 ?x560)))
 (let ((?x1855 (* 5 ?x556)))
 (let ((?x1581 (* (- 2) ?x545)))
 (let ((?x541 (* x y)))
 (let ((?x1424 (* (- 6) ?x541)))
 (let ((?x536 (* x x)))
 (let ((?x624 (* (- 1) ?x536)))
 (let ((?x519 (* y y y)))
 (let ((?x1854 (* 6 ?x519)))
 (let ((?x1041 (* (- 5) ?x512)))
 (let ((?x443 (* y y y x00)))
 (let ((?x1296 (* 2 ?x443)))
 (let ((?x426 (* y y x00)))
 (let ((?x1295 (* (- 6) ?x426)))
 (let ((?x329 (* y x00)))
 (let ((?x1294 (* 5 ?x329)))
 (let ((?x1595 (* 2 (* y y y y00))))
 (let ((?x259 (* y y y00)))
 (let ((?x1594 (* (- 6) ?x259)))
 (let ((?x920 (* (- 3) ?x219)))
 (let ((?x152 (* x y00)))
 (let ((?x140 (* x y y00)))
 (let ((?x134 (* y y00)))
 (let ((?x222 (* 5 ?x134)))
 (let ((?x1893 (+ x y ?x88 ?x95 ?x222 ?x140 ?x144 ?x152 ?x201 ?x207 ?x920 ?x236 ?x1594 ?x1595 ?x324 ?x1294 ?x370 ?x1295 ?x1296 ?x1041 ?x1854 ?x523 ?x623 ?x624 ?x1424 ?x1581 ?x1855 ?x1601 ?x709 ?x1487 ?x770 ?x1526 ?x1856 ?x1143 ?x1692)))
 (let (($x114 (= (+ x y ?x88 ?x95) 0)))
 (and $x114 (or (not (= ?x1893 0)) (not (= ?x1902 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x231 (exists ((x Int) (y Int) )(! (let ((?x1692 (* x x y00)))
 (let ((?x1075 (* x y y y y)))
 (let ((?x786 (* x x x)))
 (let ((?x1526 (* (- 1) ?x786)))
 (let ((?x723 (* x y y y00)))
 (let ((?x1487 (* (- 3) ?x723)))
 (let ((?x525 (* x x y y y)))
 (let ((?x341 (* x x y x00)))
 (let ((?x329 (* y x00)))
 (let ((?x324 (* x x x00)))
 (let ((?x219 (* x y y x00)))
 (let ((?x920 (* (- 3) ?x219)))
 (let ((?x143 (* x x y y00)))
 (let ((?x134 (* y y00)))
 (let ((?x2235 (+ (* 4 y) y00 x00 ?x134 (* (- 5) (* x y y00)) ?x143 (* (- 3) (* x y00)) (* (- 3) (* x x00)) (* (- 5) (* x y x00)) ?x920 (* (- 1) (* x y y y x00)) ?x324 ?x329 ?x341 (* 6 (* y y)) (* 3 (* y y y)) (* 3 (* x y y y)) ?x525 (* 3 (* x x)) (* 5 (* x y)) (* 4 (* x x y)) (* 8 (* x y y)) (* 2 (* x x y y)) (* (- 2) (* y 1 1)) (* (- 1) (* x y y y y00)) ?x1487 (* (- 2) (* y y 1)) (* (- 1) (* x x x y)) (* (- 1) (* y y y 1)) ?x1526 (* (- 1) (* y y 1 1)) (* (- 2) (* y 1)) ?x1075 (* (- 1) (* y 1 1 1)) (* (- 1) (* x 1 1 1)) (* (- 1) (* x y 1 1)) (* (- 1) (* x 1 y 1)) (* (- 1) (* x y y 1)) (* (- 1) (* x 1 1 y)) (* (- 2) (* y 1 y)) (* (- 1) (* x y 1 y)) (* (- 1) (* x 1 y y)) ?x1692 (* (- 1) (* y 1 y 1)) (* (- 1) (* y 1 1 y)) (* (- 1) (* y y 1 y)) (* (- 1) (* y 1 y y)))))
 (let ((?x1143 (* (- 1) ?x1075)))
 (let ((?x1856 (* (- 2) (* y y y y))))
 (let ((?x813 (* y y 1 1)))
 (let ((?x777 (* y y y 1)))
 (let ((?x770 (* x x x y)))
 (let ((?x748 (* y y 1)))
 (let ((?x709 (* x y y y y00)))
 (let ((?x560 (* x x y y)))
 (let ((?x1601 (* 4 ?x560)))
 (let ((?x556 (* x y y)))
 (let ((?x1855 (* 5 ?x556)))
 (let ((?x536 (* x x)))
 (let ((?x624 (* (- 1) ?x536)))
 (let ((?x623 (* (- 1) ?x525)))
 (let ((?x523 (* x y y y)))
 (let ((?x443 (* y y y x00)))
 (let ((?x1296 (* 2 ?x443)))
 (let ((?x426 (* y y x00)))
 (let ((?x1295 (* (- 6) ?x426)))
 (let ((?x370 (* (- 1) ?x341)))
 (let ((?x1294 (* 5 ?x329)))
 (let ((?x1595 (* 2 (* y y y y00))))
 (let ((?x259 (* y y y00)))
 (let ((?x1594 (* (- 6) ?x259)))
 (let ((?x236 (* x y y y x00)))
 (let ((?x207 (* x y x00)))
 (let ((?x201 (* x x00)))
 (let ((?x152 (* x y00)))
 (let ((?x144 (* (- 1) ?x143)))
 (let ((?x140 (* x y y00)))
 (let ((?x222 (* 5 ?x134)))
 (let ((?x95 (* (- 1) x00)))
 (let ((?x88 (* (- 1) y00)))
 (let ((?x225 (+ x y ?x88 ?x95 ?x222 ?x140 ?x144 ?x152 ?x201 ?x207 ?x920 ?x236 ?x1594 ?x1595 ?x324 ?x1294 ?x370 (* y (- 1) (- 1)) ?x1295 ?x1296 (* y (- 1) 1 x) (* (- 3) (* y y)) (* 5 (* y y y)) ?x523 ?x623 ?x624 (* (- 4) (* x y)) (* (- 1) (* x x y)) ?x1855 ?x1601 (* y (- 1) 1 1) ?x709 ?x1487 (* y (- 1) y 1) ?x748 (* y (- 1) y x) ?x770 ?x777 (* y (- 1) (- 1) x) (* y (- 1) x) (* y y (- 1) x) ?x1526 ?x813 (* y (- 1) (- 1) 1) (* y (- 1) 1) (* y y (- 1) 1) (* y y (- 1)) (* y (- 1) x 1) (* y (- 1) y) ?x1856 ?x1143 (* y y x 1) (* y y 1 x) (* y (- 1) x x) ?x1692)))
 (let (($x114 (= (+ x y ?x88 ?x95) 0)))
 (and $x114 (or (not (= ?x225 0)) (not (= ?x2235 0)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1666 (lambda ((x Int) (y Int) )(let ((?x1075 (* x y y y y)))
 (let ((?x1143 (* (- 1) ?x1075)))
 (let ((?x786 (* x x x)))
 (let ((?x770 (* x x x y)))
 (let ((?x723 (* x y y y00)))
 (let ((?x736 (* 3 ?x723)))
 (let ((?x709 (* x y y y y00)))
 (let ((?x560 (* x x y y)))
 (let ((?x873 (* (- 2) ?x560)))
 (let ((?x556 (* x y y)))
 (let ((?x1186 (* (- 5) ?x556)))
 (let ((?x545 (* x x y)))
 (let ((?x871 (* (- 4) ?x545)))
 (let ((?x525 (* x x y y y)))
 (let ((?x623 (* (- 1) ?x525)))
 (let ((?x523 (* x y y y)))
 (let ((?x1185 (* (- 3) ?x523)))
 (let ((?x512 (* y y)))
 (let ((?x341 (* x x y x00)))
 (let ((?x370 (* (- 1) ?x341)))
 (let ((?x324 (* x x x00)))
 (let ((?x368 (* (- 1) ?x324)))
 (let ((?x236 (* x y y y x00)))
 (let ((?x219 (* x y y x00)))
 (let ((?x244 (* 3 ?x219)))
 (let ((?x207 (* x y x00)))
 (let ((?x397 (* 5 ?x207)))
 (let ((?x201 (* x x00)))
 (let ((?x395 (* 3 ?x201)))
 (let ((?x143 (* x x y y00)))
 (let ((?x144 (* (- 1) ?x143)))
 (let ((?x95 (* (- 1) x00)))
 (let ((?x88 (* (- 1) y00)))
 (let ((?x1902 (+ x y ?x88 ?x95 (* (- 1) (* y y00)) (* 5 (* x y y00)) ?x144 (* 3 (* x y00)) ?x395 ?x397 ?x244 ?x236 ?x368 (* (- 1) (* y x00)) ?x370 ?x512 ?x1185 ?x623 (* (- 3) (* x x)) (* (- 2) (* x y)) ?x871 ?x1186 ?x873 ?x709 ?x736 ?x770 ?x786 ?x1143 (* (- 1) (* x x y00)))))
 (let ((?x1692 (* x x y00)))
 (let ((?x1856 (* (- 2) (* y y y y))))
 (let ((?x1526 (* (- 1) ?x786)))
 (let ((?x1487 (* (- 3) ?x723)))
 (let ((?x1601 (* 4 ?x560)))
 (let ((?x1855 (* 5 ?x556)))
 (let ((?x1581 (* (- 2) ?x545)))
 (let ((?x541 (* x y)))
 (let ((?x1424 (* (- 6) ?x541)))
 (let ((?x536 (* x x)))
 (let ((?x624 (* (- 1) ?x536)))
 (let ((?x519 (* y y y)))
 (let ((?x1854 (* 6 ?x519)))
 (let ((?x1041 (* (- 5) ?x512)))
 (let ((?x443 (* y y y x00)))
 (let ((?x1296 (* 2 ?x443)))
 (let ((?x426 (* y y x00)))
 (let ((?x1295 (* (- 6) ?x426)))
 (let ((?x329 (* y x00)))
 (let ((?x1294 (* 5 ?x329)))
 (let ((?x1595 (* 2 (* y y y y00))))
 (let ((?x259 (* y y y00)))
 (let ((?x1594 (* (- 6) ?x259)))
 (let ((?x920 (* (- 3) ?x219)))
 (let ((?x152 (* x y00)))
 (let ((?x140 (* x y y00)))
 (let ((?x134 (* y y00)))
 (let ((?x222 (* 5 ?x134)))
 (let ((?x1893 (+ x y ?x88 ?x95 ?x222 ?x140 ?x144 ?x152 ?x201 ?x207 ?x920 ?x236 ?x1594 ?x1595 ?x324 ?x1294 ?x370 ?x1295 ?x1296 ?x1041 ?x1854 ?x523 ?x623 ?x624 ?x1424 ?x1581 ?x1855 ?x1601 ?x709 ?x1487 ?x770 ?x1526 ?x1856 ?x1143 ?x1692)))
 (let (($x114 (= (+ x y ?x88 ?x95) 0)))
 (let (($x1667 (and $x114 (or (not (= ?x1893 0)) (not (= ?x1902 0))))))
 (let ((?x2235 (+ (* 4 y) y00 x00 ?x134 (* (- 5) ?x140) ?x143 (* (- 3) ?x152) (* (- 3) ?x201) (* (- 5) ?x207) ?x920 (* (- 1) ?x236) ?x324 ?x329 ?x341 (* 6 ?x512) (* 3 ?x519) (* 3 ?x523) ?x525 (* 3 ?x536) (* 5 ?x541) (* 4 ?x545) (* 8 ?x556) (* 2 ?x560) (* (- 2) (* y 1 1)) (* (- 1) ?x709) ?x1487 (* (- 2) (* y y 1)) (* (- 1) ?x770) (* (- 1) (* y y y 1)) ?x1526 (* (- 1) (* y y 1 1)) (* (- 2) (* y 1)) ?x1075 (* (- 1) (* y 1 1 1)) (* (- 1) (* x 1 1 1)) (* (- 1) (* x y 1 1)) (* (- 1) (* x 1 y 1)) (* (- 1) (* x y y 1)) (* (- 1) (* x 1 1 y)) (* (- 2) (* y 1 y)) (* (- 1) (* x y 1 y)) (* (- 1) (* x 1 y y)) ?x1692 (* (- 1) (* y 1 y 1)) (* (- 1) (* y 1 1 y)) (* (- 1) (* y y 1 y)) (* (- 1) (* y 1 y y)))))
 (let ((?x813 (* y y 1 1)))
 (let ((?x777 (* y y y 1)))
 (let ((?x748 (* y y 1)))
 (let ((?x225 (+ x y ?x88 ?x95 ?x222 ?x140 ?x144 ?x152 ?x201 ?x207 ?x920 ?x236 ?x1594 ?x1595 ?x324 ?x1294 ?x370 (* y (- 1) (- 1)) ?x1295 ?x1296 (* y (- 1) 1 x) (* (- 3) ?x512) (* 5 ?x519) ?x523 ?x623 ?x624 (* (- 4) ?x541) (* (- 1) ?x545) ?x1855 ?x1601 (* y (- 1) 1 1) ?x709 ?x1487 (* y (- 1) y 1) ?x748 (* y (- 1) y x) ?x770 ?x777 (* y (- 1) (- 1) x) (* y (- 1) x) (* y y (- 1) x) ?x1526 ?x813 (* y (- 1) (- 1) 1) (* y (- 1) 1) (* y y (- 1) 1) (* y y (- 1)) (* y (- 1) x 1) (* y (- 1) y) ?x1856 ?x1143 (* y y x 1) (* y y 1 x) (* y (- 1) x x) ?x1692)))
 (let (($x708 (and $x114 (or (not (= ?x225 0)) (not (= ?x2235 0))))))
 (rewrite (= $x708 $x1667))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x615 (exists ((x Int) (y Int) )(! (let ((?x434 (+ 1 y)))
 (let ((?x423 (+ (- 1) x)))
 (let ((?x348 (* ?x423 ?x434 ?x434 ?x434 ?x434)))
 (let ((?x670 (* ?x434 ?x434 ?x434 ?x434)))
 (let ((?x626 (* ?x423 ?x434 ?x434 ?x434)))
 (let ((?x489 (* ?x423 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x612 (* x00 ?x423 ?x423 ?x434)))
 (let ((?x441 (* y00 ?x423 ?x423 ?x434)))
 (let ((?x367 (+ ?x441 (* (- 1) (* x00 ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* y00 ?x434 ?x434 ?x434)) ?x612 (* (- 1) (* x00 ?x434 ?x434 ?x434)) ?x489 (* (- 1) (* y00 ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* ?x423 ?x423 ?x423 ?x434)) (* (- 1) (* ?x423 ?x423 ?x434 ?x434)) ?x626 ?x670 ?x348)))
 (let ((?x381 (+ 1 x)))
 (let ((?x449 (+ (- 1) y)))
 (let ((?x1434 (* ?x449 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x1406 (* ?x449 ?x449 ?x449 ?x449)))
 (let ((?x1688 (* ?x449 ?x449 ?x449 ?x381)))
 (let ((?x627 (* ?x449 ?x449 ?x449 ?x381 ?x381)))
 (let ((?x647 (* x00 ?x449 ?x381 ?x381)))
 (let ((?x614 (* y00 ?x449 ?x381 ?x381)))
 (let ((?x520 (+ ?x614 (* (- 1) (* x00 ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* y00 ?x449 ?x449 ?x449)) ?x647 (* (- 1) (* x00 ?x449 ?x449 ?x449)) ?x627 (* (- 1) (* y00 ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* ?x449 ?x381 ?x381 ?x381)) (* (- 1) (* ?x449 ?x449 ?x381 ?x381)) ?x1688 ?x1406 ?x1434)))
 (let (($x432 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x432 (or (not (= ?x520 0)) (not (= ?x367 0))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x232 (lambda ((x Int) (y Int) )(let ((?x1692 (* x x y00)))
 (let ((?x1075 (* x y y y y)))
 (let ((?x786 (* x x x)))
 (let ((?x1526 (* (- 1) ?x786)))
 (let ((?x723 (* x y y y00)))
 (let ((?x1487 (* (- 3) ?x723)))
 (let ((?x525 (* x x y y y)))
 (let ((?x341 (* x x y x00)))
 (let ((?x329 (* y x00)))
 (let ((?x324 (* x x x00)))
 (let ((?x219 (* x y y x00)))
 (let ((?x920 (* (- 3) ?x219)))
 (let ((?x143 (* x x y y00)))
 (let ((?x134 (* y y00)))
 (let ((?x2235 (+ (* 4 y) y00 x00 ?x134 (* (- 5) (* x y y00)) ?x143 (* (- 3) (* x y00)) (* (- 3) (* x x00)) (* (- 5) (* x y x00)) ?x920 (* (- 1) (* x y y y x00)) ?x324 ?x329 ?x341 (* 6 (* y y)) (* 3 (* y y y)) (* 3 (* x y y y)) ?x525 (* 3 (* x x)) (* 5 (* x y)) (* 4 (* x x y)) (* 8 (* x y y)) (* 2 (* x x y y)) (* (- 2) (* y 1 1)) (* (- 1) (* x y y y y00)) ?x1487 (* (- 2) (* y y 1)) (* (- 1) (* x x x y)) (* (- 1) (* y y y 1)) ?x1526 (* (- 1) (* y y 1 1)) (* (- 2) (* y 1)) ?x1075 (* (- 1) (* y 1 1 1)) (* (- 1) (* x 1 1 1)) (* (- 1) (* x y 1 1)) (* (- 1) (* x 1 y 1)) (* (- 1) (* x y y 1)) (* (- 1) (* x 1 1 y)) (* (- 2) (* y 1 y)) (* (- 1) (* x y 1 y)) (* (- 1) (* x 1 y y)) ?x1692 (* (- 1) (* y 1 y 1)) (* (- 1) (* y 1 1 y)) (* (- 1) (* y y 1 y)) (* (- 1) (* y 1 y y)))))
 (let ((?x1143 (* (- 1) ?x1075)))
 (let ((?x1856 (* (- 2) (* y y y y))))
 (let ((?x813 (* y y 1 1)))
 (let ((?x777 (* y y y 1)))
 (let ((?x770 (* x x x y)))
 (let ((?x748 (* y y 1)))
 (let ((?x709 (* x y y y y00)))
 (let ((?x560 (* x x y y)))
 (let ((?x1601 (* 4 ?x560)))
 (let ((?x556 (* x y y)))
 (let ((?x1855 (* 5 ?x556)))
 (let ((?x536 (* x x)))
 (let ((?x624 (* (- 1) ?x536)))
 (let ((?x623 (* (- 1) ?x525)))
 (let ((?x523 (* x y y y)))
 (let ((?x443 (* y y y x00)))
 (let ((?x1296 (* 2 ?x443)))
 (let ((?x426 (* y y x00)))
 (let ((?x1295 (* (- 6) ?x426)))
 (let ((?x370 (* (- 1) ?x341)))
 (let ((?x1294 (* 5 ?x329)))
 (let ((?x1595 (* 2 (* y y y y00))))
 (let ((?x259 (* y y y00)))
 (let ((?x1594 (* (- 6) ?x259)))
 (let ((?x236 (* x y y y x00)))
 (let ((?x207 (* x y x00)))
 (let ((?x201 (* x x00)))
 (let ((?x152 (* x y00)))
 (let ((?x144 (* (- 1) ?x143)))
 (let ((?x140 (* x y y00)))
 (let ((?x222 (* 5 ?x134)))
 (let ((?x95 (* (- 1) x00)))
 (let ((?x88 (* (- 1) y00)))
 (let ((?x225 (+ x y ?x88 ?x95 ?x222 ?x140 ?x144 ?x152 ?x201 ?x207 ?x920 ?x236 ?x1594 ?x1595 ?x324 ?x1294 ?x370 (* y (- 1) (- 1)) ?x1295 ?x1296 (* y (- 1) 1 x) (* (- 3) (* y y)) (* 5 (* y y y)) ?x523 ?x623 ?x624 (* (- 4) (* x y)) (* (- 1) (* x x y)) ?x1855 ?x1601 (* y (- 1) 1 1) ?x709 ?x1487 (* y (- 1) y 1) ?x748 (* y (- 1) y x) ?x770 ?x777 (* y (- 1) (- 1) x) (* y (- 1) x) (* y y (- 1) x) ?x1526 ?x813 (* y (- 1) (- 1) 1) (* y (- 1) 1) (* y y (- 1) 1) (* y y (- 1)) (* y (- 1) x 1) (* y (- 1) y) ?x1856 ?x1143 (* y y x 1) (* y y 1 x) (* y (- 1) x x) ?x1692)))
 (let (($x114 (= (+ x y ?x88 ?x95) 0)))
 (let (($x708 (and $x114 (or (not (= ?x225 0)) (not (= ?x2235 0))))))
 (let ((?x434 (+ 1 y)))
 (let ((?x423 (+ (- 1) x)))
 (let ((?x348 (* ?x423 ?x434 ?x434 ?x434 ?x434)))
 (let ((?x670 (* ?x434 ?x434 ?x434 ?x434)))
 (let ((?x626 (* ?x423 ?x434 ?x434 ?x434)))
 (let ((?x489 (* ?x423 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x612 (* x00 ?x423 ?x423 ?x434)))
 (let ((?x441 (* y00 ?x423 ?x423 ?x434)))
 (let ((?x367 (+ ?x441 (* (- 1) (* x00 ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* y00 ?x434 ?x434 ?x434)) ?x612 (* (- 1) (* x00 ?x434 ?x434 ?x434)) ?x489 (* (- 1) (* y00 ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* ?x423 ?x423 ?x423 ?x434)) (* (- 1) (* ?x423 ?x423 ?x434 ?x434)) ?x626 ?x670 ?x348)))
 (let ((?x381 (+ 1 x)))
 (let ((?x449 (+ (- 1) y)))
 (let ((?x1434 (* ?x449 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x1406 (* ?x449 ?x449 ?x449 ?x449)))
 (let ((?x1688 (* ?x449 ?x449 ?x449 ?x381)))
 (let ((?x627 (* ?x449 ?x449 ?x449 ?x381 ?x381)))
 (let ((?x647 (* x00 ?x449 ?x381 ?x381)))
 (let ((?x614 (* y00 ?x449 ?x381 ?x381)))
 (let ((?x520 (+ ?x614 (* (- 1) (* x00 ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* y00 ?x449 ?x449 ?x449)) ?x647 (* (- 1) (* x00 ?x449 ?x449 ?x449)) ?x627 (* (- 1) (* y00 ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* ?x449 ?x381 ?x381 ?x381)) (* (- 1) (* ?x449 ?x449 ?x381 ?x381)) ?x1688 ?x1406 ?x1434)))
 (let (($x432 (= (+ x ?x88 ?x95 y) 0)))
 (let (($x330 (and $x432 (or (not (= ?x520 0)) (not (= ?x367 0))))))
 (rewrite (= $x330 $x708))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x636 (exists ((x Int) (y Int) )(! (let ((?x381 (+ 1 x)))
 (let ((?x449 (+ (- 1) y)))
 (let ((?x1434 (* ?x449 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x292 (* ?x449 ?x449 ?x381 ?x381)))
 (let ((?x384 (* ?x449 ?x381 ?x381 ?x381)))
 (let ((?x365 (* y00 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x653 (* x00 ?x449 ?x449 ?x449)))
 (let ((?x619 (* y00 ?x449 ?x449 ?x449)))
 (let ((?x641 (* x00 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x932 (+ (* (- 1) (* y00 ?x449 ?x381 ?x381)) ?x641 ?x619 (* (- 1) (* x00 ?x449 ?x381 ?x381)) ?x653 (* (- 1) (* ?x449 ?x449 ?x449 ?x381 ?x381)) ?x365 ?x384 ?x292 (* (- 1) (* ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* ?x449 ?x449 ?x449 ?x449)) (* (- 1) ?x1434))))
 (let ((?x434 (+ 1 y)))
 (let ((?x423 (+ (- 1) x)))
 (let ((?x348 (* ?x423 ?x434 ?x434 ?x434 ?x434)))
 (let ((?x652 (* ?x423 ?x423 ?x434 ?x434)))
 (let ((?x517 (* ?x423 ?x423 ?x423 ?x434)))
 (let ((?x620 (* y00 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x474 (* x00 ?x434 ?x434 ?x434)))
 (let ((?x533 (* y00 ?x434 ?x434 ?x434)))
 (let ((?x451 (* x00 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x374 (+ (* (- 1) (* y00 ?x423 ?x423 ?x434)) ?x451 ?x533 (* (- 1) (* x00 ?x423 ?x423 ?x434)) ?x474 (* (- 1) (* ?x423 ?x423 ?x434 ?x434 ?x434)) ?x620 ?x517 ?x652 (* (- 1) (* ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* ?x434 ?x434 ?x434 ?x434)) (* (- 1) ?x348))))
 (let (($x432 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (and $x432 (or (not (= ?x374 0)) (not (= ?x932 0))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x375 (lambda ((x Int) (y Int) )(let ((?x434 (+ 1 y)))
 (let ((?x423 (+ (- 1) x)))
 (let ((?x348 (* ?x423 ?x434 ?x434 ?x434 ?x434)))
 (let ((?x670 (* ?x434 ?x434 ?x434 ?x434)))
 (let ((?x626 (* ?x423 ?x434 ?x434 ?x434)))
 (let ((?x489 (* ?x423 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x612 (* x00 ?x423 ?x423 ?x434)))
 (let ((?x441 (* y00 ?x423 ?x423 ?x434)))
 (let ((?x367 (+ ?x441 (* (- 1) (* x00 ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* y00 ?x434 ?x434 ?x434)) ?x612 (* (- 1) (* x00 ?x434 ?x434 ?x434)) ?x489 (* (- 1) (* y00 ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* ?x423 ?x423 ?x423 ?x434)) (* (- 1) (* ?x423 ?x423 ?x434 ?x434)) ?x626 ?x670 ?x348)))
 (let ((?x381 (+ 1 x)))
 (let ((?x449 (+ (- 1) y)))
 (let ((?x1434 (* ?x449 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x1406 (* ?x449 ?x449 ?x449 ?x449)))
 (let ((?x1688 (* ?x449 ?x449 ?x449 ?x381)))
 (let ((?x627 (* ?x449 ?x449 ?x449 ?x381 ?x381)))
 (let ((?x647 (* x00 ?x449 ?x381 ?x381)))
 (let ((?x614 (* y00 ?x449 ?x381 ?x381)))
 (let ((?x520 (+ ?x614 (* (- 1) (* x00 ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* y00 ?x449 ?x449 ?x449)) ?x647 (* (- 1) (* x00 ?x449 ?x449 ?x449)) ?x627 (* (- 1) (* y00 ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* ?x449 ?x381 ?x381 ?x381)) (* (- 1) (* ?x449 ?x449 ?x381 ?x381)) ?x1688 ?x1406 ?x1434)))
 (let (($x432 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x330 (and $x432 (or (not (= ?x520 0)) (not (= ?x367 0))))))
 (let ((?x292 (* ?x449 ?x449 ?x381 ?x381)))
 (let ((?x384 (* ?x449 ?x381 ?x381 ?x381)))
 (let ((?x365 (* y00 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x653 (* x00 ?x449 ?x449 ?x449)))
 (let ((?x619 (* y00 ?x449 ?x449 ?x449)))
 (let ((?x641 (* x00 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x932 (+ (* (- 1) ?x614) ?x641 ?x619 (* (- 1) ?x647) ?x653 (* (- 1) ?x627) ?x365 ?x384 ?x292 (* (- 1) ?x1688) (* (- 1) ?x1406) (* (- 1) ?x1434))))
 (let ((?x652 (* ?x423 ?x423 ?x434 ?x434)))
 (let ((?x517 (* ?x423 ?x423 ?x423 ?x434)))
 (let ((?x620 (* y00 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x474 (* x00 ?x434 ?x434 ?x434)))
 (let ((?x533 (* y00 ?x434 ?x434 ?x434)))
 (let ((?x451 (* x00 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x374 (+ (* (- 1) ?x441) ?x451 ?x533 (* (- 1) ?x612) ?x474 (* (- 1) ?x489) ?x620 ?x517 ?x652 (* (- 1) ?x626) (* (- 1) ?x670) (* (- 1) ?x348))))
 (let (($x649 (and $x432 (or (not (= ?x374 0)) (not (= ?x932 0))))))
 (rewrite (= $x649 $x330))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x85 (exists ((x Int) (y Int) )(! (let ((?x60 (- y 1)))
 (let ((?x59 (+ x 1)))
 (let ((?x64 (+ (* (- 1) ?x59 ?x59 ?x60 y00) (* ?x59 x00 ?x60 ?x60 ?x60) (* ?x60 ?x60 ?x60 y00))))
 (let ((?x70 (- (+ (- ?x64 (* ?x59 ?x59 x00 ?x60)) (* x00 ?x60 ?x60 ?x60)) (* ?x59 ?x59 ?x60 ?x60 ?x60))))
 (let ((?x74 (+ ?x70 (* ?x59 ?x60 ?x60 ?x60 y00) (* ?x59 ?x59 ?x59 ?x60) (* ?x59 ?x59 ?x60 ?x60))))
 (let ((?x80 (- (- (- ?x74 (* ?x59 ?x60 ?x60 ?x60)) (* ?x60 ?x60 ?x60 ?x60)) (* ?x59 ?x60 ?x60 ?x60 ?x60))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x40 (+ (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 x00 ?x36 ?x36 ?x36) (* ?x36 ?x36 ?x36 y00))))
 (let ((?x46 (- (+ (- ?x40 (* ?x35 ?x35 x00 ?x36)) (* x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x50 (+ ?x46 (* ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36) (* ?x35 ?x35 ?x36 ?x36))))
 (let ((?x56 (- (- (- ?x50 (* ?x35 ?x36 ?x36 ?x36)) (* ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 ?x36))))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x56 0)) (not (= ?x80 0)))))))))))))))) :qid k!27))
 ))
 (let ((?x98 (lambda ((x Int) (y Int) )(let ((?x381 (+ 1 x)))
 (let ((?x449 (+ (- 1) y)))
 (let ((?x1434 (* ?x449 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x292 (* ?x449 ?x449 ?x381 ?x381)))
 (let ((?x384 (* ?x449 ?x381 ?x381 ?x381)))
 (let ((?x365 (* y00 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x653 (* x00 ?x449 ?x449 ?x449)))
 (let ((?x619 (* y00 ?x449 ?x449 ?x449)))
 (let ((?x641 (* x00 ?x449 ?x449 ?x449 ?x381)))
 (let ((?x932 (+ (* (- 1) (* y00 ?x449 ?x381 ?x381)) ?x641 ?x619 (* (- 1) (* x00 ?x449 ?x381 ?x381)) ?x653 (* (- 1) (* ?x449 ?x449 ?x449 ?x381 ?x381)) ?x365 ?x384 ?x292 (* (- 1) (* ?x449 ?x449 ?x449 ?x381)) (* (- 1) (* ?x449 ?x449 ?x449 ?x449)) (* (- 1) ?x1434))))
 (let ((?x434 (+ 1 y)))
 (let ((?x423 (+ (- 1) x)))
 (let ((?x348 (* ?x423 ?x434 ?x434 ?x434 ?x434)))
 (let ((?x652 (* ?x423 ?x423 ?x434 ?x434)))
 (let ((?x517 (* ?x423 ?x423 ?x423 ?x434)))
 (let ((?x620 (* y00 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x474 (* x00 ?x434 ?x434 ?x434)))
 (let ((?x533 (* y00 ?x434 ?x434 ?x434)))
 (let ((?x451 (* x00 ?x423 ?x434 ?x434 ?x434)))
 (let ((?x374 (+ (* (- 1) (* y00 ?x423 ?x423 ?x434)) ?x451 ?x533 (* (- 1) (* x00 ?x423 ?x423 ?x434)) ?x474 (* (- 1) (* ?x423 ?x423 ?x434 ?x434 ?x434)) ?x620 ?x517 ?x652 (* (- 1) (* ?x423 ?x434 ?x434 ?x434)) (* (- 1) (* ?x434 ?x434 ?x434 ?x434)) (* (- 1) ?x348))))
 (let (($x432 (= (+ x (* (- 1) y00) (* (- 1) x00) y) 0)))
 (let (($x649 (and $x432 (or (not (= ?x374 0)) (not (= ?x932 0))))))
 (let ((?x60 (- y 1)))
 (let ((?x59 (+ x 1)))
 (let ((?x64 (+ (* (- 1) ?x59 ?x59 ?x60 y00) (* ?x59 x00 ?x60 ?x60 ?x60) (* ?x60 ?x60 ?x60 y00))))
 (let ((?x70 (- (+ (- ?x64 (* ?x59 ?x59 x00 ?x60)) (* x00 ?x60 ?x60 ?x60)) (* ?x59 ?x59 ?x60 ?x60 ?x60))))
 (let ((?x74 (+ ?x70 (* ?x59 ?x60 ?x60 ?x60 y00) (* ?x59 ?x59 ?x59 ?x60) (* ?x59 ?x59 ?x60 ?x60))))
 (let ((?x80 (- (- (- ?x74 (* ?x59 ?x60 ?x60 ?x60)) (* ?x60 ?x60 ?x60 ?x60)) (* ?x59 ?x60 ?x60 ?x60 ?x60))))
 (let ((?x36 (+ y 1)))
 (let ((?x35 (- x 1)))
 (let ((?x40 (+ (* (- 1) ?x35 ?x35 ?x36 y00) (* ?x35 x00 ?x36 ?x36 ?x36) (* ?x36 ?x36 ?x36 y00))))
 (let ((?x46 (- (+ (- ?x40 (* ?x35 ?x35 x00 ?x36)) (* x00 ?x36 ?x36 ?x36)) (* ?x35 ?x35 ?x36 ?x36 ?x36))))
 (let ((?x50 (+ ?x46 (* ?x35 ?x36 ?x36 ?x36 y00) (* ?x35 ?x35 ?x35 ?x36) (* ?x35 ?x35 ?x36 ?x36))))
 (let ((?x56 (- (- (- ?x50 (* ?x35 ?x36 ?x36 ?x36)) (* ?x36 ?x36 ?x36 ?x36)) (* ?x35 ?x36 ?x36 ?x36 ?x36))))
 (let (($x84 (and (= (+ (- (- x y00) x00) y) 0) (or (not (= ?x56 0)) (not (= ?x80 0))))))
 (rewrite (= $x84 $x649))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x86 (asserted $x85)))
 (let ((@x238 (mp (mp @x86 (quant-intro (proof-bind ?x98) (= $x85 $x636)) $x636) (rewrite (= $x636 $x636)) $x636)))
 (let ((@x961 (mp (mp @x238 (quant-intro (proof-bind ?x375) (= $x636 $x615)) $x615) (quant-intro (proof-bind ?x232) (= $x615 $x231)) $x231)))
 (let ((@x1916 (mp~ (mp @x961 (quant-intro (proof-bind ?x1666) (= $x231 $x1633)) $x1633) (sk (~ $x1633 $x1913)) $x1913)))
 (let ((@x1144 (mp @x1916 (rewrite (= $x1913 $x1385)) $x1385)))
 (let ((@x1004 (and-elim @x1144 $x1923)))
 (let ((@x2122 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1923) $x2125)) @x1004 $x2125)))
 (let (($x2126 (>= ?x1922 0)))
 (let ((@x2127 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1923) $x2126)) @x1004 $x2126)))
 (let (($x466 (<= ?x967 0)))
 (let ((@x464 ((_ th-lemma arith) (hypothesis (not $x466)) @x2127 @x2122 @x2127 @x2122 @x2127 @x2122 false)))
 (let ((@x371 (lemma @x464 $x466)))
 (let (($x958 (>= ?x967 0)))
 (let ((@x117 ((_ th-lemma arith) (hypothesis (not $x958)) @x2127 @x2122 @x2127 @x2122 @x2127 @x2122 false)))
 (let ((@x1198 (lemma @x117 $x958)))
 (let (($x2116 (not (<= ?x994 0))))
 (let (($x2132 (>= ?x994 0)))
 (let ((@x2134 (lemma ((_ th-lemma arith) (hypothesis (not $x2132)) @x2127 @x2122 @x2127 @x2122 false) $x2132)))
 (let ((@x1756 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1072 (not $x466) (not $x958))) @x371 @x1198 $x1072)))
 (let ((@x863 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x995 $x2116 (not $x2132))) (unit-resolution (and-elim @x1144 $x1092) @x1756 $x1655) @x2134 $x2116)))
 ((_ th-lemma arith) @x863 @x2127 @x2122 @x1198 @x371 @x2127 @x2122 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        23
 :arith-assert-upper        7
 :arith-branch-var          1
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           10
 :arith-grobner             4
 :arith-ineq-splits         1
 :arith-max-min             545
 :arith-nonlinear-bounds    15
 :arith-nonlinear-horner    11
 :arith-num-rows            3
 :arith-patches             8
 :arith-patches_succ        7
 :arith-pivots              4
 :arith-row-summations      3
 :arith-tableau-max-columns 50
 :arith-tableau-max-rows    3
 :conflicts                 4
 :decisions                 7
 :del-clause                12
 :final-checks              9
 :max-memory                3.83
 :memory                    3.35
 :mk-bool-var               16
 :mk-clause                 12
 :num-allocs                1295854
 :num-checks                1
 :propagations              14
 :rlimit-count              7922
 :time                      0.01
 :total-time                0.02)
