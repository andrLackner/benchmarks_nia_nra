unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun d!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1256 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* 4 (* d!1 r!2)) (* (- 4) (* d!1 x!0)) (* (- 8) r!2) (* 2 (* d!1 q!3)) (* (- 1) (* d!1 d!1 q!3)))))
 (let (($x632 (>= ?x1256 0)))
 (let (($x474 (= ?x1256 0)))
 (let ((?x2143 (* d!1 d!1 q!3)))
 (let ((?x1175 (* 8 r!2)))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x1614 (+ ?x182 ?x230 ?x214 ?x280 ?x318 (* (- 4) (* d!1 r!2)) (* 4 (* d!1 x!0)) ?x1175 (* (- 2) (* d!1 q!3)) ?x2143)))
 (let ((?x404 (* 2 r!2)))
 (let ((?x450 (* (- 1) x!0)))
 (let ((?x1939 (* (- 1) d!1)))
 (let ((?x2456 (+ (- 2) ?x1939 ?x450 ?x404 q!3)))
 (let ((?x226 (+ 2 d!1)))
 (let ((?x1159 (+ (- 4) q!3)))
 (let ((?x611 (+ (* ?x1159 ?x1159 ?x226 ?x226 ?x226 ?x2456 ?x2456 ?x2456 r!2 r!2 r!2) (* (- 1) (* ?x1159 ?x226 ?x226 ?x2456 ?x2456 ?x2456 r!2 r!2 r!2)))))
 (let ((?x1742 (* 2 (* r!2 r!2 r!2))))
 (let ((?x577 (* r!2 r!2 q!3)))
 (let ((?x1954 (* (- 1) (* x!0 r!2 r!2))))
 (let ((?x268 (* r!2 r!2)))
 (let ((?x1423 (* (- 2) ?x268)))
 (let ((?x2450 (+ ?x1423 ?x1954 ?x577 (* ?x1159 ?x1159 ?x226 ?x2456 ?x2456 ?x2456) (* (- 1) (* d!1 r!2 r!2)) ?x1742)))
 (let ((?x1986 (* q!3 q!3 q!3 q!3)))
 (let ((?x1924 (* x!0 q!3)))
 (let ((?x1373 (* (- 48) ?x1924)))
 (let ((?x1801 (* q!3 q!3 q!3)))
 (let ((?x518 (* (- 14) ?x1801)))
 (let ((?x1798 (* r!2 q!3 q!3 q!3)))
 (let ((?x571 (* 2 ?x1798)))
 (let ((?x641 (* (- 160) q!3)))
 (let ((?x1634 (* (- 128) r!2)))
 (let ((?x223 (* 64 x!0)))
 (let ((?x862 (* x!0 q!3 q!3 q!3)))
 (let ((?x1479 (* (- 1) ?x862)))
 (let ((?x776 (* q!3 q!3)))
 (let ((?x1606 (* 72 ?x776)))
 (let ((?x1207 (* 64 d!1)))
 (let ((?x562 (* d!1 q!3 q!3)))
 (let ((?x364 (* 12 ?x562)))
 (let ((?x524 (* r!2 q!3)))
 (let ((?x807 (* 96 ?x524)))
 (let ((?x1559 (+ 128 (* 12 (* x!0 q!3 q!3)) ?x807 ?x364 (* (- 24) (* r!2 q!3 q!3)) ?x1207 ?x1606 ?x1479 ?x223 (* (- 1) (* d!1 q!3 q!3 q!3)) (* ?x1159 ?x2456 ?x2456 ?x2456) ?x1634 ?x641 ?x571 ?x518 (* (- 48) (* d!1 q!3)) ?x1373 ?x1986)))
 (let ((?x1333 (* ?x1559 ?x2450 ?x611 ?x1614)))
 (let (($x2466 (= ?x1333 0)))
 (let (($x2181 (not $x2466)))
 (let ((?x444 (+ 2 d!1 ?x450 ?x404 q!3)))
 (let ((?x204 (+ 4 q!3)))
 (let ((?x857 (+ (* (- 1) (* ?x226 ?x226 ?x204 ?x444 ?x444 ?x444 r!2 r!2 r!2)) (* ?x226 ?x226 ?x226 ?x204 ?x204 ?x444 ?x444 ?x444 r!2 r!2 r!2))))
 (let ((?x1472 (* d!1 r!2 r!2)))
 (let ((?x955 (* 2 ?x268)))
 (let ((?x563 (* 14 ?x1801)))
 (let ((?x986 (* 160 q!3)))
 (let ((?x227 (* 128 r!2)))
 (let ((?x1435 (* d!1 q!3 q!3 q!3)))
 (let ((?x483 (* (- 64) x!0)))
 (let ((?x656 (+ 128 (* (- 12) (* x!0 q!3 q!3)) ?x807 ?x364 (* 24 (* r!2 q!3 q!3)) ?x1207 ?x1606 ?x1479 ?x483 ?x1435 ?x227 ?x986 (* ?x204 ?x444 ?x444 ?x444) ?x571 ?x563 (* 48 (* d!1 q!3)) ?x1373 ?x1986)))
 (let ((?x661 (* ?x656 (+ ?x955 ?x1954 (* ?x226 ?x204 ?x204 ?x444 ?x444 ?x444) ?x577 ?x1472 ?x1742) ?x857 ?x1614)))
 (let (($x488 (= ?x661 0)))
 (let ((?x1536 (+ ?x450 ?x404 q!3)))
 (let ((?x1412 (+ (* (- 1) (* ?x226 ?x226 ?x1536 ?x1536 ?x1536 r!2 r!2 r!2 q!3)) (* ?x226 ?x226 ?x226 ?x1536 ?x1536 ?x1536 r!2 r!2 r!2 q!3 q!3))))
 (let ((?x575 (* 2 (* q!3 q!3 q!3 q!3 q!3))))
 (let ((?x1385 (+ ?x1954 (* (- 12) (* d!1 x!0 r!2 r!2 q!3 q!3)) (* (- 3) (* d!1 x!0 q!3 q!3 q!3 q!3)) (* 8 (* d!1 r!2 r!2 r!2 q!3 q!3)) (* 12 (* x!0 x!0 r!2 q!3 q!3)) ?x577 (* 12 (* r!2 q!3 q!3 q!3 q!3)) (* (- 2) (* x!0 x!0 x!0 q!3 q!3)) (* (- 1) (* d!1 x!0 x!0 x!0 q!3 q!3)) (* 6 (* d!1 r!2 q!3 q!3 q!3 q!3)) (* 16 (* r!2 r!2 r!2 q!3 q!3)) (* 6 (* x!0 x!0 q!3 q!3 q!3)) (* (- 12) (* d!1 x!0 r!2 q!3 q!3 q!3)) (* 12 (* d!1 r!2 r!2 q!3 q!3 q!3)) ?x575 (* 6 (* d!1 x!0 x!0 r!2 q!3 q!3)) (* (- 6) (* x!0 q!3 q!3 q!3 q!3)) (* 3 (* d!1 x!0 x!0 q!3 q!3 q!3)) (* 24 (* r!2 r!2 q!3 q!3 q!3)) ?x1742 (* (- 24) (* x!0 r!2 r!2 q!3 q!3)) (* d!1 q!3 q!3 q!3 q!3 q!3) (* (- 24) (* x!0 r!2 q!3 q!3 q!3)))))
 (let ((?x376 (* 2 ?x1986)))
 (let ((?x1821 (+ (* (- 1) (* x!0 x!0 x!0 q!3)) (* 3 (* x!0 x!0 q!3 q!3)) (* (- 4) ?x862) (* (- 12) (* x!0 r!2 q!3 q!3)) (* (- 12) (* x!0 r!2 r!2 q!3)) (* 6 (* x!0 x!0 r!2 q!3)) (* 8 ?x1798) (* 12 (* r!2 r!2 q!3 q!3)) (* 8 (* r!2 r!2 r!2 q!3)) ?x376)))
 (let ((?x362 (* ?x1821 ?x1385 ?x1412 ?x1614)))
 (let (($x1389 (= ?x362 0)))
 (let ((?x586 (* (- 2) d!1)))
 (let ((?x208 (+ (- 4) ?x586 ?x450 ?x404 q!3)))
 (let ((?x1745 (+ (- 8) q!3)))
 (let ((?x856 (+ (* (- 1) (* ?x1745 ?x226 ?x226 ?x208 ?x208 ?x208 r!2 r!2 r!2)) (* ?x1745 ?x1745 ?x226 ?x226 ?x226 ?x208 ?x208 ?x208 r!2 r!2 r!2))))
 (let ((?x1172 (* (- 4) ?x268)))
 (let ((?x1904 (+ (* ?x1745 ?x1745 ?x226 ?x208 ?x208 ?x208) ?x1172 ?x1954 ?x577 (* (- 2) ?x1472) ?x1742)))
 (let ((?x1911 (* (- 28) ?x1801)))
 (let ((?x1736 (* (- 1280) q!3)))
 (let ((?x1182 (* (- 1024) r!2)))
 (let ((?x1901 (* 512 x!0)))
 (let ((?x408 (* 288 ?x776)))
 (let ((?x1156 (* 1024 d!1)))
 (let ((?x810 (+ 2048 (* 24 (* x!0 q!3 q!3)) (* 384 ?x524) (* 48 ?x562) (* (- 48) (* r!2 q!3 q!3)) ?x1156 (* ?x1745 ?x208 ?x208 ?x208) ?x408 ?x1479 ?x1901 (* (- 2) ?x1435) ?x1182 ?x1736 ?x571 ?x1911 (* (- 384) (* d!1 q!3)) (* (- 192) ?x1924) ?x1986)))
 (let ((?x2327 (* ?x810 ?x1904 ?x856 ?x1614)))
 (let (($x1889 (= ?x2327 0)))
 (let (($x250 (not $x1889)))
 (let (($x581 (or $x250 (not $x1389) (not $x488) $x2181)))
 (let (($x627 (and $x474 $x581)))
 (let ((?x1257 (+ ?x1175 ?x182 ?x230 ?x214 ?x280 ?x318 (* 4 (* x!0 d!1)) (* q!3 d!1 d!1) (* (- 2) (* q!3 d!1)) (* (- 4) (* r!2 d!1)))))
 (let ((?x1208 (+ (- 2) q!3 ?x404 ?x450 ?x1939)))
 (let ((?x1205 (+ (* (- 1) (* ?x1159 ?x226 ?x226 ?x1208 ?x1208 ?x1208 r!2 r!2 r!2)) (* ?x1159 ?x1159 ?x226 ?x226 ?x226 ?x1208 ?x1208 ?x1208 r!2 r!2 r!2))))
 (let ((?x594 (* (- 1) (* r!2 r!2 x!0))))
 (let ((?x1931 (* q!3 r!2 r!2)))
 (let ((?x1213 (+ (* ?x1159 ?x1159 ?x226 ?x1208 ?x1208 ?x1208) ?x1423 ?x1931 ?x1742 (* (- 1) (* r!2 r!2 d!1)) ?x594)))
 (let ((?x599 (* q!3 q!3 q!3 x!0)))
 (let ((?x1191 (* (- 1) ?x599)))
 (let ((?x1734 (* q!3 x!0)))
 (let ((?x2047 (* (- 48) ?x1734)))
 (let ((?x1189 (* q!3 q!3 q!3 r!2)))
 (let ((?x1732 (* 2 ?x1189)))
 (let ((?x1731 (* q!3 r!2)))
 (let ((?x255 (* 96 ?x1731)))
 (let ((?x396 (* q!3 q!3 d!1)))
 (let ((?x998 (* 12 ?x396)))
 (let ((?x1164 (+ 128 ?x641 ?x1634 ?x223 (* ?x1159 ?x1208 ?x1208 ?x1208) ?x1986 ?x998 ?x255 (* (- 1) (* q!3 q!3 q!3 d!1)) ?x1732 ?x2047 ?x1191 (* (- 24) (* q!3 q!3 r!2)) (* 12 (* q!3 q!3 x!0)) ?x518 ?x1606 ?x1207 (* (- 48) (* q!3 d!1)))))
 (let ((?x1194 (+ q!3 ?x404 ?x450)))
 (let ((?x1047 (+ (* ?x226 ?x226 ?x226 ?x1194 ?x1194 ?x1194 r!2 r!2 r!2 q!3 q!3) (* (- 1) (* ?x226 ?x226 ?x1194 ?x1194 ?x1194 r!2 r!2 r!2 q!3)))))
 (let ((?x1441 (+ (* (- 24) (* q!3 q!3 q!3 r!2 x!0)) (* (- 12) (* q!3 q!3 q!3 r!2 x!0 d!1)) (* 3 (* q!3 q!3 q!3 x!0 x!0 d!1)) (* 24 (* q!3 q!3 q!3 r!2 r!2)) (* (- 2) (* q!3 q!3 x!0 x!0 x!0)) (* 12 (* q!3 q!3 q!3 q!3 r!2)) (* (- 6) (* q!3 q!3 q!3 q!3 x!0)) (* 12 (* q!3 q!3 r!2 x!0 x!0)) (* (- 24) (* q!3 q!3 r!2 r!2 x!0)) (* (- 3) (* q!3 q!3 q!3 q!3 x!0 d!1)) (* (- 12) (* q!3 q!3 r!2 r!2 x!0 d!1)) (* 6 (* q!3 q!3 r!2 x!0 x!0 d!1)) (* (- 1) (* q!3 q!3 x!0 x!0 x!0 d!1)) (* 16 (* q!3 q!3 r!2 r!2 r!2)) (* q!3 q!3 q!3 q!3 q!3 d!1) (* 6 (* q!3 q!3 q!3 q!3 r!2 d!1)) (* 12 (* q!3 q!3 q!3 r!2 r!2 d!1)) (* 8 (* q!3 q!3 r!2 r!2 r!2 d!1)) ?x575 (* 6 (* q!3 q!3 q!3 x!0 x!0)) ?x1931 ?x1742 ?x594)))
 (let ((?x1263 (+ ?x376 (* 8 ?x1189) (* (- 4) ?x599) (* (- 12) (* q!3 q!3 r!2 x!0)) (* 12 (* q!3 q!3 r!2 r!2)) (* 3 (* q!3 q!3 x!0 x!0)) (* 8 (* q!3 r!2 r!2 r!2)) (* (- 12) (* q!3 r!2 r!2 x!0)) (* (- 1) (* q!3 x!0 x!0 x!0)) (* 6 (* q!3 r!2 x!0 x!0)))))
 (let ((?x1188 (+ 2 q!3 ?x404 ?x450 d!1)))
 (let ((?x1554 (+ (* ?x226 ?x226 ?x226 ?x204 ?x204 ?x1188 ?x1188 ?x1188 r!2 r!2 r!2) (* (- 1) (* ?x226 ?x226 ?x204 ?x1188 ?x1188 ?x1188 r!2 r!2 r!2)))))
 (let ((?x647 (* r!2 r!2 d!1)))
 (let ((?x1729 (* q!3 q!3 q!3 d!1)))
 (let ((?x464 (+ 128 ?x986 ?x227 ?x483 ?x1986 ?x998 ?x255 ?x1729 ?x1732 ?x2047 ?x1191 (* ?x204 ?x1188 ?x1188 ?x1188) (* 24 (* q!3 q!3 r!2)) (* (- 12) (* q!3 q!3 x!0)) ?x563 ?x1606 ?x1207 (* 48 (* q!3 d!1)))))
 (let ((?x1499 (* ?x464 (+ ?x955 (* ?x226 ?x204 ?x204 ?x1188 ?x1188 ?x1188) ?x1931 ?x1742 ?x647 ?x594) ?x1554 ?x1257)))
 (let ((?x1722 (+ (- 4) q!3 ?x404 ?x450 ?x586)))
 (let ((?x1203 (+ (* ?x1745 ?x1745 ?x226 ?x226 ?x226 ?x1722 ?x1722 ?x1722 r!2 r!2 r!2) (* (- 1) (* ?x1745 ?x226 ?x226 ?x1722 ?x1722 ?x1722 r!2 r!2 r!2)))))
 (let ((?x244 (+ ?x1172 (* ?x1745 ?x1745 ?x226 ?x1722 ?x1722 ?x1722) ?x1931 ?x1742 (* (- 2) ?x647) ?x594)))
 (let ((?x1493 (+ 2048 ?x1736 ?x1182 ?x1901 ?x1986 (* 48 ?x396) (* 384 ?x1731) (* (- 2) ?x1729) ?x1732 (* (- 192) ?x1734) ?x1191 (* (- 48) (* q!3 q!3 r!2)) (* 24 (* q!3 q!3 x!0)) ?x1911 ?x408 (* ?x1745 ?x1722 ?x1722 ?x1722) ?x1156 (* (- 384) (* q!3 d!1)))))
 (let (($x1054 (or (not (= (* ?x1493 ?x244 ?x1203 ?x1257) 0)) (not (= ?x1499 0)) (not (= (* ?x1263 ?x1441 ?x1047 ?x1257) 0)) (not (= (* ?x1164 ?x1213 ?x1205 ?x1257) 0)))))
 (let (($x945 (and (= ?x1257 0) $x1054)))
 (let (($x190 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2223 (* r d)))
 (let ((?x2216 (* (- 4) ?x2223)))
 (let ((?x2218 (* q d)))
 (let ((?x2219 (* (- 2) ?x2218)))
 (let ((?x2155 (* q d d)))
 (let ((?x1613 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x2161 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1613 ?x2155 ?x2219 ?x2216)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x222 (+ (- 2) q ?x144 ?x179 ?x2354)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x849 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r))))
 (let ((?x2245 (* (- 1) (* r r x))))
 (let ((?x2246 (* r r d)))
 (let ((?x2360 (* (- 1) ?x2246)))
 (let ((?x2232 (* 2 (* r r r))))
 (let ((?x2230 (* q r r)))
 (let ((?x395 (* r r)))
 (let ((?x2345 (* (- 2) ?x395)))
 (let ((?x1656 (+ (* ?x2350 ?x2350 ?x2139 ?x222 ?x222 ?x222) ?x2345 ?x2230 ?x2232 ?x2360 ?x2245)))
 (let ((?x2228 (* 64 d)))
 (let ((?x823 (* q q)))
 (let ((?x871 (* 72 ?x823)))
 (let ((?x815 (* q q q)))
 (let ((?x2107 (* (- 14) ?x815)))
 (let ((?x671 (* q q q x)))
 (let ((?x937 (* (- 1) ?x671)))
 (let ((?x659 (* q x)))
 (let ((?x313 (* (- 48) ?x659)))
 (let ((?x545 (* q q q r)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x419 (* q q q d)))
 (let ((?x2104 (* (- 1) ?x419)))
 (let ((?x291 (* q r)))
 (let ((?x311 (* 96 ?x291)))
 (let ((?x284 (* q q d)))
 (let ((?x389 (* 12 ?x284)))
 (let ((?x229 (* q q q q)))
 (let ((?x185 (* ?x2350 ?x222 ?x222 ?x222)))
 (let ((?x1922 (* 64 x)))
 (let ((?x2348 (* (- 128) r)))
 (let ((?x754 (+ 128 (* (- 160) q) ?x2348 ?x1922 ?x185 ?x229 ?x389 ?x311 ?x2104 ?x546 ?x313 ?x937 (* (- 24) (* q q r)) (* 12 (* q q x)) ?x2107 ?x871 ?x2228 (* (- 48) ?x2218))))
 (let ((?x1581 (+ q ?x144 ?x179)))
 (let ((?x676 (+ (* ?x2139 ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q q) (* (- 1) (* ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q)))))
 (let ((?x2343 (* 2 (* q q q q q))))
 (let ((?x2060 (* 8 (* q q r r r d))))
 (let ((?x2053 (* 12 (* q q q r r d))))
 (let ((?x2017 (* 6 (* q q q q r d))))
 (let ((?x2013 (* q q q q q d)))
 (let ((?x853 (* (- 1) (* q q x x x d))))
 (let ((?x1809 (* 6 (* q q r x x d))))
 (let ((?x1894 (* (- 12) (* q q r r x d))))
 (let ((?x1811 (* (- 3) (* q q q q x d))))
 (let ((?x1891 (* 3 (* q q q x x d))))
 (let ((?x1812 (* (- 12) (* q q q r x d))))
 (let ((?x333 (+ (* (- 24) (* q q q r x)) ?x1812 ?x1891 (* 24 (* q q q r r)) (* (- 2) (* q q x x x)) (* 12 (* q q q q r)) (* (- 6) (* q q q q x)) (* 12 (* q q r x x)) (* (- 24) (* q q r r x)) ?x1811 ?x1894 ?x1809 ?x853 (* 16 (* q q r r r)) ?x2013 ?x2017 ?x2053 ?x2060 ?x2343 (* 6 (* q q q x x)) ?x2230 ?x2232 ?x2245)))
 (let ((?x2127 (* 6 (* q r x x))))
 (let ((?x2125 (* (- 1) (* q x x x))))
 (let ((?x2123 (* (- 12) (* q r r x))))
 (let ((?x2120 (* 8 (* q r r r))))
 (let ((?x2122 (* 3 (* q q x x))))
 (let ((?x2114 (* 12 (* q q r r))))
 (let ((?x2119 (* (- 12) (* q q r x))))
 (let ((?x2116 (* (- 4) ?x671)))
 (let ((?x2117 (* 8 ?x545)))
 (let ((?x2111 (* 2 ?x229)))
 (let ((?x1391 (+ ?x2111 ?x2117 ?x2116 ?x2119 ?x2114 ?x2122 ?x2120 ?x2123 ?x2125 ?x2127)))
 (let ((?x886 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x2479 (+ (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886 r r r) (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x886 ?x886 ?x886 r r r)))))
 (let ((?x2231 (* 2 ?x395)))
 (let ((?x927 (+ ?x2231 (* ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886) ?x2230 ?x2232 ?x2246 ?x2245)))
 (let ((?x228 (* 14 ?x815)))
 (let ((?x757 (* ?x2254 ?x886 ?x886 ?x886)))
 (let ((?x901 (* (- 64) x)))
 (let ((?x2225 (* 128 r)))
 (let ((?x494 (+ 128 (* 160 q) ?x2225 ?x901 ?x229 ?x389 ?x311 ?x419 ?x546 ?x313 ?x937 ?x757 (* 24 (* q q r)) (* (- 12) (* q q x)) ?x228 ?x871 ?x2228 (* 48 ?x2218))))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x1044 (+ (- 4) q ?x144 ?x179 ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x883 (+ (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r) (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r)))))
 (let ((?x2065 (* (- 2) ?x2246)))
 (let ((?x588 (* (- 4) ?x395)))
 (let ((?x994 (+ ?x588 (* ?x2078 ?x2078 ?x2139 ?x1044 ?x1044 ?x1044) ?x2230 ?x2232 ?x2065 ?x2245)))
 (let ((?x2069 (* 1024 d)))
 (let ((?x1283 (* ?x2078 ?x1044 ?x1044 ?x1044)))
 (let ((?x2362 (* (- 28) ?x815)))
 (let ((?x2365 (* (- 2) ?x419)))
 (let ((?x2301 (* 512 x)))
 (let ((?x2068 (* (- 1024) r)))
 (let ((?x1332 (+ 2048 (* (- 1280) q) ?x2068 ?x2301 ?x229 (* 48 ?x284) (* 384 ?x291) ?x2365 ?x546 (* (- 192) ?x659) ?x937 (* (- 48) (* q q r)) (* 24 (* q q x)) ?x2362 (* 288 ?x823) ?x1283 ?x2069 (* (- 384) ?x2218))))
 (let (($x1906 (or (not (= (* ?x1332 ?x994 ?x883 ?x2161) 0)) (not (= (* ?x494 ?x927 ?x2479 ?x2161) 0)) (not (= (* ?x1391 ?x333 ?x676 ?x2161) 0)) (not (= (* ?x754 ?x1656 ?x849 ?x2161) 0)))))
 (let (($x207 (= ?x2161 0)))
 (and $x207 $x1906)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x2298 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x2341 (* 2 (* d 4))))
 (let ((?x2223 (* r d)))
 (let ((?x2216 (* (- 4) ?x2223)))
 (let ((?x2218 (* q d)))
 (let ((?x2219 (* (- 2) ?x2218)))
 (let ((?x2155 (* q d d)))
 (let ((?x2333 (* (- 8) d)))
 (let ((?x1613 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x886 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x2479 (+ (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886 r r r) (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x886 ?x886 ?x886 r r r)))))
 (let ((?x2245 (* (- 1) (* r r x))))
 (let ((?x2246 (* r r d)))
 (let ((?x2232 (* 2 (* r r r))))
 (let ((?x2230 (* q r r)))
 (let ((?x395 (* r r)))
 (let ((?x2231 (* 2 ?x395)))
 (let ((?x927 (+ ?x2231 (* ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886) ?x2230 ?x2232 ?x2246 ?x2245)))
 (let ((?x2222 (* 32 ?x2218)))
 (let ((?x2140 (* q q ?x179)))
 (let ((?x2142 (* 4 ?x2140)))
 (let ((?x2228 (* 64 d)))
 (let ((?x1310 (* 4 (* q q 2))))
 (let ((?x1306 (* 4 (* q 4 2))))
 (let ((?x823 (* q q)))
 (let ((?x706 (* 48 ?x823)))
 (let ((?x815 (* q q q)))
 (let ((?x228 (* 14 ?x815)))
 (let ((?x805 (* q q x)))
 (let ((?x666 (* (- 8) ?x805)))
 (let ((?x804 (* q q r)))
 (let ((?x452 (* 16 ?x804)))
 (let ((?x757 (* ?x2254 ?x886 ?x886 ?x886)))
 (let ((?x819 (* 4 (* q 4 ?x144))))
 (let ((?x701 (* 4 (* q 4 q))))
 (let ((?x671 (* q q q x)))
 (let ((?x937 (* (- 1) ?x671)))
 (let ((?x659 (* q x)))
 (let ((?x667 (* (- 32) ?x659)))
 (let ((?x545 (* q q q r)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x422 (* 4 (* q 4 ?x179))))
 (let ((?x419 (* q q q d)))
 (let ((?x291 (* q r)))
 (let ((?x451 (* 64 ?x291)))
 (let ((?x284 (* q q d)))
 (let ((?x389 (* 12 ?x284)))
 (let ((?x283 (* 4 (* q 4 d))))
 (let ((?x239 (* q q ?x144)))
 (let ((?x251 (* 4 ?x239)))
 (let ((?x229 (* q q q q)))
 (let ((?x901 (* (- 64) x)))
 (let ((?x2225 (* 128 r)))
 (let ((?x867 (* 128 q)))
 (let ((?x1866 (+ 128 ?x867 ?x2225 ?x901 ?x229 ?x251 ?x283 ?x389 ?x451 ?x419 ?x422 ?x546 ?x667 ?x937 ?x701 ?x819 ?x757 ?x452 ?x666 ?x228 ?x706 ?x1306 ?x1310 ?x2228 ?x2142 ?x2222)))
 (let ((?x2049 (* ?x1866 ?x927 ?x2479 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1613 ?x2333 ?x2155 ?x2219 ?x2216 ?x2341))))
 (let ((?x2131 (* 8 d)))
 (let ((?x1636 (+ ?x211 ?x182 ?x230 ?x214 (* (- 4) (* d 2)) ?x280 ?x318 ?x1613 ?x2131 ?x2155 ?x2219 ?x2216)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x222 (+ (- 2) q ?x144 ?x179 ?x2354)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x849 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r))))
 (let ((?x2360 (* (- 1) ?x2246)))
 (let ((?x2345 (* (- 2) ?x395)))
 (let ((?x1656 (+ (* ?x2350 ?x2350 ?x2139 ?x222 ?x222 ?x222) ?x2345 ?x2230 ?x2232 ?x2360 ?x2245)))
 (let ((?x2344 (* (- 32) ?x2218)))
 (let ((?x2106 (* (- 4) ?x2140)))
 (let ((?x2097 (* (- 4) (* q (- 4) (- 2)))))
 (let ((?x2099 (* (- 4) (* q q (- 2)))))
 (let ((?x2096 (* (- 4) (* q (- 4) q))))
 (let ((?x2088 (* (- 4) (* q q ?x2354))))
 (let ((?x2093 (* (- 4) (* q (- 4) ?x2354))))
 (let ((?x2091 (* (- 4) (* q (- 4) ?x144))))
 (let ((?x2085 (* (- 4) (* q (- 4) ?x179))))
 (let ((?x2107 (* (- 14) ?x815)))
 (let ((?x2100 (* 8 ?x805)))
 (let ((?x2105 (* (- 16) ?x804)))
 (let ((?x2104 (* (- 1) ?x419)))
 (let ((?x2103 (* 8 ?x284)))
 (let ((?x2102 (* (- 4) ?x239)))
 (let ((?x185 (* ?x2350 ?x222 ?x222 ?x222)))
 (let ((?x1922 (* 64 x)))
 (let ((?x2348 (* (- 128) r)))
 (let ((?x1897 (* (- 128) q)))
 (let ((?x527 (+ 128 ?x1897 ?x2348 ?x1922 ?x185 ?x229 ?x2102 ?x2103 ?x451 ?x2104 ?x546 ?x667 ?x937 ?x2105 ?x2100 ?x2107 ?x706 ?x2228 ?x2085 ?x2091 ?x2093 ?x2088 ?x2096 ?x2099 ?x2097 ?x2106 ?x2344)))
 (let ((?x2080 (* 16 d)))
 (let ((?x216 (+ ?x211 ?x182 ?x230 ?x214 (* (- 8) (* d 2)) ?x280 ?x318 ?x1613 ?x2080 ?x2155 ?x2219 ?x2216)))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x1044 (+ (- 4) q ?x144 ?x179 ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x883 (+ (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r) (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r)))))
 (let ((?x2065 (* (- 2) ?x2246)))
 (let ((?x588 (* (- 4) ?x395)))
 (let ((?x994 (+ ?x588 (* ?x2078 ?x2078 ?x2139 ?x1044 ?x1044 ?x1044) ?x2230 ?x2232 ?x2065 ?x2245)))
 (let ((?x2383 (* (- 8) (* q (- 8) ?x179))))
 (let ((?x2381 (* (- 8) (* q q ?x2074))))
 (let ((?x2379 (* (- 8) (* q (- 8) ?x2074))))
 (let ((?x2377 (* (- 8) (* q (- 8) ?x144))))
 (let ((?x2375 (* (- 8) (* q (- 8) q))))
 (let ((?x2373 (* (- 8) (* q q (- 4)))))
 (let ((?x2371 (* (- 8) (* q (- 8) (- 4)))))
 (let ((?x2070 (* (- 256) ?x2218)))
 (let ((?x2071 (* (- 8) ?x2140)))
 (let ((?x2069 (* 1024 d)))
 (let ((?x1283 (* ?x2078 ?x1044 ?x1044 ?x1044)))
 (let ((?x2361 (* 192 ?x823)))
 (let ((?x2362 (* (- 28) ?x815)))
 (let ((?x2369 (* 16 ?x805)))
 (let ((?x2367 (* (- 32) ?x804)))
 (let ((?x2368 (* (- 128) ?x659)))
 (let ((?x2365 (* (- 2) ?x419)))
 (let ((?x2366 (* 256 ?x291)))
 (let ((?x2364 (* 32 ?x284)))
 (let ((?x2363 (* (- 8) ?x239)))
 (let ((?x2301 (* 512 x)))
 (let ((?x2068 (* (- 1024) r)))
 (let ((?x2268 (* (- 1024) q)))
 (let ((?x1255 (+ 2048 ?x2268 ?x2068 ?x2301 ?x229 ?x2363 ?x2364 ?x2366 ?x2365 ?x546 ?x2368 ?x937 ?x2367 ?x2369 ?x2362 ?x2361 ?x1283 ?x2069 ?x2071 ?x2070 ?x2371 ?x2373 ?x2375 ?x2377 ?x2379 ?x2381 ?x2383)))
 (let ((?x2161 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1613 ?x2155 ?x2219 ?x2216)))
 (let ((?x1581 (+ q ?x144 ?x179)))
 (let ((?x676 (+ (* ?x2139 ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q q) (* (- 1) (* ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q)))))
 (let ((?x2343 (* 2 (* q q q q q))))
 (let ((?x2060 (* 8 (* q q r r r d))))
 (let ((?x2053 (* 12 (* q q q r r d))))
 (let ((?x2017 (* 6 (* q q q q r d))))
 (let ((?x2013 (* q q q q q d)))
 (let ((?x853 (* (- 1) (* q q x x x d))))
 (let ((?x1809 (* 6 (* q q r x x d))))
 (let ((?x1686 (* 2 (* q q ?x179 q q))))
 (let ((?x1645 (* 2 (* q q ?x144 q q))))
 (let ((?x1894 (* (- 12) (* q q r r x d))))
 (let ((?x1811 (* (- 3) (* q q q q x d))))
 (let ((?x1891 (* 3 (* q q q x x d))))
 (let ((?x1812 (* (- 12) (* q q q r x d))))
 (let ((?x1909 (+ ?x1812 ?x1891 (* 2 (* ?x179 q ?x144 q q)) (* 2 (* q ?x144 ?x144 q q)) (* 2 (* ?x144 ?x144 ?x144 q q)) (* 2 (* ?x179 q ?x179 q q)) (* 2 (* ?x179 ?x144 ?x179 q q)) (* 2 (* ?x179 ?x179 ?x179 q q)) ?x1811 (* 2 (* ?x144 q q q q)) (* 2 (* ?x179 q q q q)) (* 2 (* q ?x144 q q q)) (* 2 (* ?x144 ?x144 q q q)) (* 2 (* ?x179 ?x144 q q q)) (* 2 (* ?x144 ?x179 q q q)) (* 2 (* q ?x179 q q q)) (* 2 (* ?x179 ?x179 q q q)) (* 2 (* ?x144 q ?x144 q q)) (* 2 (* ?x179 ?x144 ?x144 q q)) (* 2 (* ?x144 ?x179 ?x144 q q)) (* 2 (* q ?x179 ?x144 q q)) (* 2 (* ?x179 ?x179 ?x144 q q)) (* 2 (* ?x144 q ?x179 q q)) (* 2 (* q ?x144 ?x179 q q)) (* 2 (* ?x144 ?x144 ?x179 q q)) (* 2 (* q ?x179 ?x179 q q)) (* 2 (* ?x144 ?x179 ?x179 q q)) ?x1894 ?x1645 ?x1686 ?x1809 ?x853 ?x2013 ?x2017 ?x2053 ?x2060 ?x2343 ?x2230 ?x2232 ?x2245)))
 (let ((?x2127 (* 6 (* q r x x))))
 (let ((?x2125 (* (- 1) (* q x x x))))
 (let ((?x2123 (* (- 12) (* q r r x))))
 (let ((?x2120 (* 8 (* q r r r))))
 (let ((?x2122 (* 3 (* q q x x))))
 (let ((?x2114 (* 12 (* q q r r))))
 (let ((?x2119 (* (- 12) (* q q r x))))
 (let ((?x2116 (* (- 4) ?x671)))
 (let ((?x2117 (* 8 ?x545)))
 (let ((?x2111 (* 2 ?x229)))
 (let ((?x1391 (+ ?x2111 ?x2117 ?x2116 ?x2119 ?x2114 ?x2122 ?x2120 ?x2123 ?x2125 ?x2127)))
 (let (($x2452 (or (not (= (* ?x1391 ?x1909 ?x676 ?x2161) 0)) (not (= (* ?x1255 ?x994 ?x883 ?x216) 0)) (not (= (* ?x527 ?x1656 ?x849 ?x1636) 0)) (not (= ?x2049 0)))))
 (let (($x207 (= ?x2161 0)))
 (and $x207 $x2452)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x258 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2223 (* r d)))
 (let ((?x2216 (* (- 4) ?x2223)))
 (let ((?x2218 (* q d)))
 (let ((?x2219 (* (- 2) ?x2218)))
 (let ((?x2155 (* q d d)))
 (let ((?x1613 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x2161 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1613 ?x2155 ?x2219 ?x2216)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x222 (+ (- 2) q ?x144 ?x179 ?x2354)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x849 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r))))
 (let ((?x2245 (* (- 1) (* r r x))))
 (let ((?x2246 (* r r d)))
 (let ((?x2360 (* (- 1) ?x2246)))
 (let ((?x2232 (* 2 (* r r r))))
 (let ((?x2230 (* q r r)))
 (let ((?x395 (* r r)))
 (let ((?x2345 (* (- 2) ?x395)))
 (let ((?x1656 (+ (* ?x2350 ?x2350 ?x2139 ?x222 ?x222 ?x222) ?x2345 ?x2230 ?x2232 ?x2360 ?x2245)))
 (let ((?x2228 (* 64 d)))
 (let ((?x823 (* q q)))
 (let ((?x871 (* 72 ?x823)))
 (let ((?x815 (* q q q)))
 (let ((?x2107 (* (- 14) ?x815)))
 (let ((?x671 (* q q q x)))
 (let ((?x937 (* (- 1) ?x671)))
 (let ((?x659 (* q x)))
 (let ((?x313 (* (- 48) ?x659)))
 (let ((?x545 (* q q q r)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x419 (* q q q d)))
 (let ((?x2104 (* (- 1) ?x419)))
 (let ((?x291 (* q r)))
 (let ((?x311 (* 96 ?x291)))
 (let ((?x284 (* q q d)))
 (let ((?x389 (* 12 ?x284)))
 (let ((?x229 (* q q q q)))
 (let ((?x185 (* ?x2350 ?x222 ?x222 ?x222)))
 (let ((?x1922 (* 64 x)))
 (let ((?x2348 (* (- 128) r)))
 (let ((?x754 (+ 128 (* (- 160) q) ?x2348 ?x1922 ?x185 ?x229 ?x389 ?x311 ?x2104 ?x546 ?x313 ?x937 (* (- 24) (* q q r)) (* 12 (* q q x)) ?x2107 ?x871 ?x2228 (* (- 48) ?x2218))))
 (let ((?x1581 (+ q ?x144 ?x179)))
 (let ((?x676 (+ (* ?x2139 ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q q) (* (- 1) (* ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q)))))
 (let ((?x2343 (* 2 (* q q q q q))))
 (let ((?x2060 (* 8 (* q q r r r d))))
 (let ((?x2053 (* 12 (* q q q r r d))))
 (let ((?x2017 (* 6 (* q q q q r d))))
 (let ((?x2013 (* q q q q q d)))
 (let ((?x853 (* (- 1) (* q q x x x d))))
 (let ((?x1809 (* 6 (* q q r x x d))))
 (let ((?x1894 (* (- 12) (* q q r r x d))))
 (let ((?x1811 (* (- 3) (* q q q q x d))))
 (let ((?x1891 (* 3 (* q q q x x d))))
 (let ((?x1812 (* (- 12) (* q q q r x d))))
 (let ((?x333 (+ (* (- 24) (* q q q r x)) ?x1812 ?x1891 (* 24 (* q q q r r)) (* (- 2) (* q q x x x)) (* 12 (* q q q q r)) (* (- 6) (* q q q q x)) (* 12 (* q q r x x)) (* (- 24) (* q q r r x)) ?x1811 ?x1894 ?x1809 ?x853 (* 16 (* q q r r r)) ?x2013 ?x2017 ?x2053 ?x2060 ?x2343 (* 6 (* q q q x x)) ?x2230 ?x2232 ?x2245)))
 (let ((?x2127 (* 6 (* q r x x))))
 (let ((?x2125 (* (- 1) (* q x x x))))
 (let ((?x2123 (* (- 12) (* q r r x))))
 (let ((?x2120 (* 8 (* q r r r))))
 (let ((?x2122 (* 3 (* q q x x))))
 (let ((?x2114 (* 12 (* q q r r))))
 (let ((?x2119 (* (- 12) (* q q r x))))
 (let ((?x2116 (* (- 4) ?x671)))
 (let ((?x2117 (* 8 ?x545)))
 (let ((?x2111 (* 2 ?x229)))
 (let ((?x1391 (+ ?x2111 ?x2117 ?x2116 ?x2119 ?x2114 ?x2122 ?x2120 ?x2123 ?x2125 ?x2127)))
 (let ((?x886 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x2479 (+ (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886 r r r) (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x886 ?x886 ?x886 r r r)))))
 (let ((?x2231 (* 2 ?x395)))
 (let ((?x927 (+ ?x2231 (* ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886) ?x2230 ?x2232 ?x2246 ?x2245)))
 (let ((?x228 (* 14 ?x815)))
 (let ((?x757 (* ?x2254 ?x886 ?x886 ?x886)))
 (let ((?x901 (* (- 64) x)))
 (let ((?x2225 (* 128 r)))
 (let ((?x494 (+ 128 (* 160 q) ?x2225 ?x901 ?x229 ?x389 ?x311 ?x419 ?x546 ?x313 ?x937 ?x757 (* 24 (* q q r)) (* (- 12) (* q q x)) ?x228 ?x871 ?x2228 (* 48 ?x2218))))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x1044 (+ (- 4) q ?x144 ?x179 ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x883 (+ (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r) (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r)))))
 (let ((?x2065 (* (- 2) ?x2246)))
 (let ((?x588 (* (- 4) ?x395)))
 (let ((?x994 (+ ?x588 (* ?x2078 ?x2078 ?x2139 ?x1044 ?x1044 ?x1044) ?x2230 ?x2232 ?x2065 ?x2245)))
 (let ((?x2069 (* 1024 d)))
 (let ((?x1283 (* ?x2078 ?x1044 ?x1044 ?x1044)))
 (let ((?x2362 (* (- 28) ?x815)))
 (let ((?x2365 (* (- 2) ?x419)))
 (let ((?x2301 (* 512 x)))
 (let ((?x2068 (* (- 1024) r)))
 (let ((?x1332 (+ 2048 (* (- 1280) q) ?x2068 ?x2301 ?x229 (* 48 ?x284) (* 384 ?x291) ?x2365 ?x546 (* (- 192) ?x659) ?x937 (* (- 48) (* q q r)) (* 24 (* q q x)) ?x2362 (* 288 ?x823) ?x1283 ?x2069 (* (- 384) ?x2218))))
 (let (($x1906 (or (not (= (* ?x1332 ?x994 ?x883 ?x2161) 0)) (not (= (* ?x494 ?x927 ?x2479 ?x2161) 0)) (not (= (* ?x1391 ?x333 ?x676 ?x2161) 0)) (not (= (* ?x754 ?x1656 ?x849 ?x2161) 0)))))
 (let (($x207 (= ?x2161 0)))
 (let (($x1108 (and $x207 $x1906)))
 (let ((?x2341 (* 2 (* d 4))))
 (let ((?x2333 (* (- 8) d)))
 (let ((?x2222 (* 32 ?x2218)))
 (let ((?x2140 (* q q ?x179)))
 (let ((?x2142 (* 4 ?x2140)))
 (let ((?x1310 (* 4 (* q q 2))))
 (let ((?x1306 (* 4 (* q 4 2))))
 (let ((?x706 (* 48 ?x823)))
 (let ((?x805 (* q q x)))
 (let ((?x666 (* (- 8) ?x805)))
 (let ((?x804 (* q q r)))
 (let ((?x452 (* 16 ?x804)))
 (let ((?x819 (* 4 (* q 4 ?x144))))
 (let ((?x701 (* 4 (* q 4 q))))
 (let ((?x667 (* (- 32) ?x659)))
 (let ((?x422 (* 4 (* q 4 ?x179))))
 (let ((?x451 (* 64 ?x291)))
 (let ((?x283 (* 4 (* q 4 d))))
 (let ((?x239 (* q q ?x144)))
 (let ((?x251 (* 4 ?x239)))
 (let ((?x867 (* 128 q)))
 (let ((?x1866 (+ 128 ?x867 ?x2225 ?x901 ?x229 ?x251 ?x283 ?x389 ?x451 ?x419 ?x422 ?x546 ?x667 ?x937 ?x701 ?x819 ?x757 ?x452 ?x666 ?x228 ?x706 ?x1306 ?x1310 ?x2228 ?x2142 ?x2222)))
 (let ((?x2049 (* ?x1866 ?x927 ?x2479 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1613 ?x2333 ?x2155 ?x2219 ?x2216 ?x2341))))
 (let ((?x2131 (* 8 d)))
 (let ((?x1636 (+ ?x211 ?x182 ?x230 ?x214 (* (- 4) (* d 2)) ?x280 ?x318 ?x1613 ?x2131 ?x2155 ?x2219 ?x2216)))
 (let ((?x2344 (* (- 32) ?x2218)))
 (let ((?x2106 (* (- 4) ?x2140)))
 (let ((?x2097 (* (- 4) (* q (- 4) (- 2)))))
 (let ((?x2099 (* (- 4) (* q q (- 2)))))
 (let ((?x2096 (* (- 4) (* q (- 4) q))))
 (let ((?x2088 (* (- 4) (* q q ?x2354))))
 (let ((?x2093 (* (- 4) (* q (- 4) ?x2354))))
 (let ((?x2091 (* (- 4) (* q (- 4) ?x144))))
 (let ((?x2085 (* (- 4) (* q (- 4) ?x179))))
 (let ((?x2100 (* 8 ?x805)))
 (let ((?x2105 (* (- 16) ?x804)))
 (let ((?x2103 (* 8 ?x284)))
 (let ((?x2102 (* (- 4) ?x239)))
 (let ((?x1897 (* (- 128) q)))
 (let ((?x527 (+ 128 ?x1897 ?x2348 ?x1922 ?x185 ?x229 ?x2102 ?x2103 ?x451 ?x2104 ?x546 ?x667 ?x937 ?x2105 ?x2100 ?x2107 ?x706 ?x2228 ?x2085 ?x2091 ?x2093 ?x2088 ?x2096 ?x2099 ?x2097 ?x2106 ?x2344)))
 (let ((?x2080 (* 16 d)))
 (let ((?x216 (+ ?x211 ?x182 ?x230 ?x214 (* (- 8) (* d 2)) ?x280 ?x318 ?x1613 ?x2080 ?x2155 ?x2219 ?x2216)))
 (let ((?x2383 (* (- 8) (* q (- 8) ?x179))))
 (let ((?x2381 (* (- 8) (* q q ?x2074))))
 (let ((?x2379 (* (- 8) (* q (- 8) ?x2074))))
 (let ((?x2377 (* (- 8) (* q (- 8) ?x144))))
 (let ((?x2375 (* (- 8) (* q (- 8) q))))
 (let ((?x2373 (* (- 8) (* q q (- 4)))))
 (let ((?x2371 (* (- 8) (* q (- 8) (- 4)))))
 (let ((?x2070 (* (- 256) ?x2218)))
 (let ((?x2071 (* (- 8) ?x2140)))
 (let ((?x2361 (* 192 ?x823)))
 (let ((?x2369 (* 16 ?x805)))
 (let ((?x2367 (* (- 32) ?x804)))
 (let ((?x2368 (* (- 128) ?x659)))
 (let ((?x2366 (* 256 ?x291)))
 (let ((?x2364 (* 32 ?x284)))
 (let ((?x2363 (* (- 8) ?x239)))
 (let ((?x2268 (* (- 1024) q)))
 (let ((?x1255 (+ 2048 ?x2268 ?x2068 ?x2301 ?x229 ?x2363 ?x2364 ?x2366 ?x2365 ?x546 ?x2368 ?x937 ?x2367 ?x2369 ?x2362 ?x2361 ?x1283 ?x2069 ?x2071 ?x2070 ?x2371 ?x2373 ?x2375 ?x2377 ?x2379 ?x2381 ?x2383)))
 (let ((?x1686 (* 2 (* q q ?x179 q q))))
 (let ((?x1645 (* 2 (* q q ?x144 q q))))
 (let ((?x1909 (+ ?x1812 ?x1891 (* 2 (* ?x179 q ?x144 q q)) (* 2 (* q ?x144 ?x144 q q)) (* 2 (* ?x144 ?x144 ?x144 q q)) (* 2 (* ?x179 q ?x179 q q)) (* 2 (* ?x179 ?x144 ?x179 q q)) (* 2 (* ?x179 ?x179 ?x179 q q)) ?x1811 (* 2 (* ?x144 q q q q)) (* 2 (* ?x179 q q q q)) (* 2 (* q ?x144 q q q)) (* 2 (* ?x144 ?x144 q q q)) (* 2 (* ?x179 ?x144 q q q)) (* 2 (* ?x144 ?x179 q q q)) (* 2 (* q ?x179 q q q)) (* 2 (* ?x179 ?x179 q q q)) (* 2 (* ?x144 q ?x144 q q)) (* 2 (* ?x179 ?x144 ?x144 q q)) (* 2 (* ?x144 ?x179 ?x144 q q)) (* 2 (* q ?x179 ?x144 q q)) (* 2 (* ?x179 ?x179 ?x144 q q)) (* 2 (* ?x144 q ?x179 q q)) (* 2 (* q ?x144 ?x179 q q)) (* 2 (* ?x144 ?x144 ?x179 q q)) (* 2 (* q ?x179 ?x179 q q)) (* 2 (* ?x144 ?x179 ?x179 q q)) ?x1894 ?x1645 ?x1686 ?x1809 ?x853 ?x2013 ?x2017 ?x2053 ?x2060 ?x2343 ?x2230 ?x2232 ?x2245)))
 (let (($x2452 (or (not (= (* ?x1391 ?x1909 ?x676 ?x2161) 0)) (not (= (* ?x1255 ?x994 ?x883 ?x216) 0)) (not (= (* ?x527 ?x1656 ?x849 ?x1636) 0)) (not (= ?x2049 0)))))
 (let (($x902 (and $x207 $x2452)))
 (rewrite (= $x902 $x1108))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x2189 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1132 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x2174 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x438 (* 4 (* ?x2139 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x2131 (* 8 d)))
 (let ((?x30 (* 8 q)))
 (let ((?x274 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x2180 (+ 16 ?x427 ?x274 ?x30 ?x2131 ?x182 ?x438 ?x214 ?x230 (* ?x2139 ?x2139 (+ 4 q)) (* (- 2) (* ?x2139 (+ 4 q))) ?x280 (* (- 4) (* ?x2139 ?x2174)) ?x1132)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x2252 (+ (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x2174 ?x2174 ?x2174 r r r)) (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x2174 ?x2174 ?x2174 r r r))))
 (let ((?x2264 (* (+ (* ?x2254 ?x2174 ?x2174 ?x2174) (* ?x2254 ?x2254 ?x2254 ?x2174)) (+ (* ?x2139 ?x2254 ?x2254 ?x2174 ?x2174 ?x2174) (* ?x2174 r r)) ?x2252 ?x2180)))
 (let ((?x2333 (* (- 8) d)))
 (let ((?x2151 (+ (- 16) ?x427 ?x274 ?x30 ?x2333 ?x182 ?x438 ?x214 ?x230 (* (+ (- 4) q) ?x2139 ?x2139) (* (- 2) (* (+ (- 4) q) ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 2) ?x144 ?x179 q (* (- 1) d)))) ?x1132)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x1490 (+ (- 2) ?x144 ?x179 q ?x2354)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x246 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x1490 ?x1490 ?x1490 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x1490 ?x1490 ?x1490 r r r))))
 (let ((?x2146 (* (+ (* ?x2350 ?x1490 ?x1490 ?x1490) (* ?x2350 ?x2350 ?x2350 ?x1490)) (+ (* ?x2350 ?x2350 ?x2139 ?x1490 ?x1490 ?x1490) (* ?x1490 r r)) ?x246 ?x2151)))
 (let ((?x342 (+ ?x427 ?x274 ?x30 ?x182 ?x438 ?x214 ?x230 (* ?x2139 ?x2139 q) (* (- 2) (* ?x2139 q)) ?x280 (* (- 4) (* ?x2139 (+ ?x144 ?x179 q))) ?x1132)))
 (let ((?x385 (+ ?x144 ?x179 q)))
 (let ((?x943 (+ (* (- 1) (* ?x2139 ?x2139 ?x385 ?x385 ?x385 r r r q)) (* ?x2139 ?x2139 ?x2139 ?x385 ?x385 ?x385 r r r q q))))
 (let ((?x343 (* (+ (* ?x385 ?x385 ?x385 q) (* ?x385 q q q)) (+ (* ?x2139 ?x385 ?x385 ?x385 q q) (* ?x385 r r)) ?x943 ?x342)))
 (let ((?x584 (+ (- 32) ?x427 ?x274 ?x30 (* (- 16) d) ?x182 ?x438 ?x214 ?x230 (* (+ (- 8) q) ?x2139 ?x2139) (* (- 2) (* (+ (- 8) q) ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 4) ?x144 ?x179 q (* (- 2) d)))) ?x1132)))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x1864 (+ (- 4) ?x144 ?x179 q ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x263 (+ (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x1864 ?x1864 ?x1864 r r r)) (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x1864 ?x1864 ?x1864 r r r))))
 (let ((?x585 (* (+ (* ?x2078 ?x1864 ?x1864 ?x1864) (* ?x2078 ?x2078 ?x2078 ?x1864)) (+ (* ?x2078 ?x2078 ?x2139 ?x1864 ?x1864 ?x1864) (* ?x1864 r r)) ?x263 ?x584)))
 (let (($x2187 (or (not (= ?x585 0)) (not (= ?x343 0)) (not (= ?x2146 0)) (not (= ?x2264 0)))))
 (let ((?x1613 (* 4 (* x d))))
 (let ((?x211 (* 8 r)))
 (let ((?x1887 (+ ?x211 ?x182 ?x1613 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1132)))
 (and (= ?x1887 0) $x2187))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1359 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x2341 (* 2 (* d 4))))
 (let ((?x2223 (* r d)))
 (let ((?x2216 (* (- 4) ?x2223)))
 (let ((?x2218 (* q d)))
 (let ((?x2219 (* (- 2) ?x2218)))
 (let ((?x2155 (* q d d)))
 (let ((?x2333 (* (- 8) d)))
 (let ((?x1613 (* 4 (* x d))))
 (let ((?x317 (* r00 d00)))
 (let ((?x318 (* 4 ?x317)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 r)))
 (let ((?x179 (* (- 1) x)))
 (let ((?x144 (* 2 r)))
 (let ((?x886 (+ 2 q ?x144 ?x179 d)))
 (let ((?x2254 (+ 4 q)))
 (let ((?x2139 (+ 2 d)))
 (let ((?x2479 (+ (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886 r r r) (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x886 ?x886 ?x886 r r r)))))
 (let ((?x2245 (* (- 1) (* r r x))))
 (let ((?x2246 (* r r d)))
 (let ((?x2232 (* 2 (* r r r))))
 (let ((?x2230 (* q r r)))
 (let ((?x395 (* r r)))
 (let ((?x2231 (* 2 ?x395)))
 (let ((?x927 (+ ?x2231 (* ?x2139 ?x2254 ?x2254 ?x886 ?x886 ?x886) ?x2230 ?x2232 ?x2246 ?x2245)))
 (let ((?x2222 (* 32 ?x2218)))
 (let ((?x2140 (* q q ?x179)))
 (let ((?x2142 (* 4 ?x2140)))
 (let ((?x2228 (* 64 d)))
 (let ((?x1310 (* 4 (* q q 2))))
 (let ((?x1306 (* 4 (* q 4 2))))
 (let ((?x823 (* q q)))
 (let ((?x706 (* 48 ?x823)))
 (let ((?x815 (* q q q)))
 (let ((?x228 (* 14 ?x815)))
 (let ((?x805 (* q q x)))
 (let ((?x666 (* (- 8) ?x805)))
 (let ((?x804 (* q q r)))
 (let ((?x452 (* 16 ?x804)))
 (let ((?x757 (* ?x2254 ?x886 ?x886 ?x886)))
 (let ((?x819 (* 4 (* q 4 ?x144))))
 (let ((?x701 (* 4 (* q 4 q))))
 (let ((?x671 (* q q q x)))
 (let ((?x937 (* (- 1) ?x671)))
 (let ((?x659 (* q x)))
 (let ((?x667 (* (- 32) ?x659)))
 (let ((?x545 (* q q q r)))
 (let ((?x546 (* 2 ?x545)))
 (let ((?x422 (* 4 (* q 4 ?x179))))
 (let ((?x419 (* q q q d)))
 (let ((?x291 (* q r)))
 (let ((?x451 (* 64 ?x291)))
 (let ((?x284 (* q q d)))
 (let ((?x389 (* 12 ?x284)))
 (let ((?x283 (* 4 (* q 4 d))))
 (let ((?x239 (* q q ?x144)))
 (let ((?x251 (* 4 ?x239)))
 (let ((?x229 (* q q q q)))
 (let ((?x901 (* (- 64) x)))
 (let ((?x2225 (* 128 r)))
 (let ((?x867 (* 128 q)))
 (let ((?x1866 (+ 128 ?x867 ?x2225 ?x901 ?x229 ?x251 ?x283 ?x389 ?x451 ?x419 ?x422 ?x546 ?x667 ?x937 ?x701 ?x819 ?x757 ?x452 ?x666 ?x228 ?x706 ?x1306 ?x1310 ?x2228 ?x2142 ?x2222)))
 (let ((?x2049 (* ?x1866 ?x927 ?x2479 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1613 ?x2333 ?x2155 ?x2219 ?x2216 ?x2341))))
 (let ((?x2131 (* 8 d)))
 (let ((?x1636 (+ ?x211 ?x182 ?x230 ?x214 (* (- 4) (* d 2)) ?x280 ?x318 ?x1613 ?x2131 ?x2155 ?x2219 ?x2216)))
 (let ((?x2354 (* (- 1) d)))
 (let ((?x222 (+ (- 2) q ?x144 ?x179 ?x2354)))
 (let ((?x2350 (+ (- 4) q)))
 (let ((?x849 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x222 ?x222 ?x222 r r r))))
 (let ((?x2360 (* (- 1) ?x2246)))
 (let ((?x2345 (* (- 2) ?x395)))
 (let ((?x1656 (+ (* ?x2350 ?x2350 ?x2139 ?x222 ?x222 ?x222) ?x2345 ?x2230 ?x2232 ?x2360 ?x2245)))
 (let ((?x2344 (* (- 32) ?x2218)))
 (let ((?x2106 (* (- 4) ?x2140)))
 (let ((?x2097 (* (- 4) (* q (- 4) (- 2)))))
 (let ((?x2099 (* (- 4) (* q q (- 2)))))
 (let ((?x2096 (* (- 4) (* q (- 4) q))))
 (let ((?x2088 (* (- 4) (* q q ?x2354))))
 (let ((?x2093 (* (- 4) (* q (- 4) ?x2354))))
 (let ((?x2091 (* (- 4) (* q (- 4) ?x144))))
 (let ((?x2085 (* (- 4) (* q (- 4) ?x179))))
 (let ((?x2107 (* (- 14) ?x815)))
 (let ((?x2100 (* 8 ?x805)))
 (let ((?x2105 (* (- 16) ?x804)))
 (let ((?x2104 (* (- 1) ?x419)))
 (let ((?x2103 (* 8 ?x284)))
 (let ((?x2102 (* (- 4) ?x239)))
 (let ((?x185 (* ?x2350 ?x222 ?x222 ?x222)))
 (let ((?x1922 (* 64 x)))
 (let ((?x2348 (* (- 128) r)))
 (let ((?x1897 (* (- 128) q)))
 (let ((?x527 (+ 128 ?x1897 ?x2348 ?x1922 ?x185 ?x229 ?x2102 ?x2103 ?x451 ?x2104 ?x546 ?x667 ?x937 ?x2105 ?x2100 ?x2107 ?x706 ?x2228 ?x2085 ?x2091 ?x2093 ?x2088 ?x2096 ?x2099 ?x2097 ?x2106 ?x2344)))
 (let ((?x2080 (* 16 d)))
 (let ((?x216 (+ ?x211 ?x182 ?x230 ?x214 (* (- 8) (* d 2)) ?x280 ?x318 ?x1613 ?x2080 ?x2155 ?x2219 ?x2216)))
 (let ((?x2074 (* (- 2) d)))
 (let ((?x1044 (+ (- 4) q ?x144 ?x179 ?x2074)))
 (let ((?x2078 (+ (- 8) q)))
 (let ((?x883 (+ (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r) (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x1044 ?x1044 ?x1044 r r r)))))
 (let ((?x2065 (* (- 2) ?x2246)))
 (let ((?x588 (* (- 4) ?x395)))
 (let ((?x994 (+ ?x588 (* ?x2078 ?x2078 ?x2139 ?x1044 ?x1044 ?x1044) ?x2230 ?x2232 ?x2065 ?x2245)))
 (let ((?x2383 (* (- 8) (* q (- 8) ?x179))))
 (let ((?x2381 (* (- 8) (* q q ?x2074))))
 (let ((?x2379 (* (- 8) (* q (- 8) ?x2074))))
 (let ((?x2377 (* (- 8) (* q (- 8) ?x144))))
 (let ((?x2375 (* (- 8) (* q (- 8) q))))
 (let ((?x2373 (* (- 8) (* q q (- 4)))))
 (let ((?x2371 (* (- 8) (* q (- 8) (- 4)))))
 (let ((?x2070 (* (- 256) ?x2218)))
 (let ((?x2071 (* (- 8) ?x2140)))
 (let ((?x2069 (* 1024 d)))
 (let ((?x1283 (* ?x2078 ?x1044 ?x1044 ?x1044)))
 (let ((?x2361 (* 192 ?x823)))
 (let ((?x2362 (* (- 28) ?x815)))
 (let ((?x2369 (* 16 ?x805)))
 (let ((?x2367 (* (- 32) ?x804)))
 (let ((?x2368 (* (- 128) ?x659)))
 (let ((?x2365 (* (- 2) ?x419)))
 (let ((?x2366 (* 256 ?x291)))
 (let ((?x2364 (* 32 ?x284)))
 (let ((?x2363 (* (- 8) ?x239)))
 (let ((?x2301 (* 512 x)))
 (let ((?x2068 (* (- 1024) r)))
 (let ((?x2268 (* (- 1024) q)))
 (let ((?x1255 (+ 2048 ?x2268 ?x2068 ?x2301 ?x229 ?x2363 ?x2364 ?x2366 ?x2365 ?x546 ?x2368 ?x937 ?x2367 ?x2369 ?x2362 ?x2361 ?x1283 ?x2069 ?x2071 ?x2070 ?x2371 ?x2373 ?x2375 ?x2377 ?x2379 ?x2381 ?x2383)))
 (let ((?x2161 (+ ?x211 ?x182 ?x230 ?x214 ?x280 ?x318 ?x1613 ?x2155 ?x2219 ?x2216)))
 (let ((?x1581 (+ q ?x144 ?x179)))
 (let ((?x676 (+ (* ?x2139 ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q q) (* (- 1) (* ?x2139 ?x2139 ?x1581 ?x1581 ?x1581 r r r q)))))
 (let ((?x2343 (* 2 (* q q q q q))))
 (let ((?x2060 (* 8 (* q q r r r d))))
 (let ((?x2053 (* 12 (* q q q r r d))))
 (let ((?x2017 (* 6 (* q q q q r d))))
 (let ((?x2013 (* q q q q q d)))
 (let ((?x853 (* (- 1) (* q q x x x d))))
 (let ((?x1809 (* 6 (* q q r x x d))))
 (let ((?x1686 (* 2 (* q q ?x179 q q))))
 (let ((?x1645 (* 2 (* q q ?x144 q q))))
 (let ((?x1894 (* (- 12) (* q q r r x d))))
 (let ((?x1811 (* (- 3) (* q q q q x d))))
 (let ((?x1891 (* 3 (* q q q x x d))))
 (let ((?x1812 (* (- 12) (* q q q r x d))))
 (let ((?x1909 (+ ?x1812 ?x1891 (* 2 (* ?x179 q ?x144 q q)) (* 2 (* q ?x144 ?x144 q q)) (* 2 (* ?x144 ?x144 ?x144 q q)) (* 2 (* ?x179 q ?x179 q q)) (* 2 (* ?x179 ?x144 ?x179 q q)) (* 2 (* ?x179 ?x179 ?x179 q q)) ?x1811 (* 2 (* ?x144 q q q q)) (* 2 (* ?x179 q q q q)) (* 2 (* q ?x144 q q q)) (* 2 (* ?x144 ?x144 q q q)) (* 2 (* ?x179 ?x144 q q q)) (* 2 (* ?x144 ?x179 q q q)) (* 2 (* q ?x179 q q q)) (* 2 (* ?x179 ?x179 q q q)) (* 2 (* ?x144 q ?x144 q q)) (* 2 (* ?x179 ?x144 ?x144 q q)) (* 2 (* ?x144 ?x179 ?x144 q q)) (* 2 (* q ?x179 ?x144 q q)) (* 2 (* ?x179 ?x179 ?x144 q q)) (* 2 (* ?x144 q ?x179 q q)) (* 2 (* q ?x144 ?x179 q q)) (* 2 (* ?x144 ?x144 ?x179 q q)) (* 2 (* q ?x179 ?x179 q q)) (* 2 (* ?x144 ?x179 ?x179 q q)) ?x1894 ?x1645 ?x1686 ?x1809 ?x853 ?x2013 ?x2017 ?x2053 ?x2060 ?x2343 ?x2230 ?x2232 ?x2245)))
 (let ((?x2127 (* 6 (* q r x x))))
 (let ((?x2125 (* (- 1) (* q x x x))))
 (let ((?x2123 (* (- 12) (* q r r x))))
 (let ((?x2120 (* 8 (* q r r r))))
 (let ((?x2122 (* 3 (* q q x x))))
 (let ((?x2114 (* 12 (* q q r r))))
 (let ((?x2119 (* (- 12) (* q q r x))))
 (let ((?x2116 (* (- 4) ?x671)))
 (let ((?x2117 (* 8 ?x545)))
 (let ((?x2111 (* 2 ?x229)))
 (let ((?x1391 (+ ?x2111 ?x2117 ?x2116 ?x2119 ?x2114 ?x2122 ?x2120 ?x2123 ?x2125 ?x2127)))
 (let (($x2452 (or (not (= (* ?x1391 ?x1909 ?x676 ?x2161) 0)) (not (= (* ?x1255 ?x994 ?x883 ?x216) 0)) (not (= (* ?x527 ?x1656 ?x849 ?x1636) 0)) (not (= ?x2049 0)))))
 (let (($x207 (= ?x2161 0)))
 (let (($x902 (and $x207 $x2452)))
 (let ((?x1132 (* 4 (* d00 r00))))
 (let ((?x438 (* 4 (* ?x2139 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x274 (* (- 8) x)))
 (let ((?x427 (* 16 r)))
 (let ((?x2180 (+ 16 ?x427 ?x274 ?x30 ?x2131 ?x182 ?x438 ?x214 ?x230 (* ?x2139 ?x2139 ?x2254) (* (- 2) (* ?x2139 ?x2254)) ?x280 (* (- 4) (* ?x2139 (+ 2 ?x144 ?x179 q d))) ?x1132)))
 (let ((?x2174 (+ 2 ?x144 ?x179 q d)))
 (let ((?x2252 (+ (* (- 1) (* ?x2139 ?x2139 ?x2254 ?x2174 ?x2174 ?x2174 r r r)) (* ?x2139 ?x2139 ?x2139 ?x2254 ?x2254 ?x2174 ?x2174 ?x2174 r r r))))
 (let ((?x2264 (* (+ (* ?x2254 ?x2174 ?x2174 ?x2174) (* ?x2254 ?x2254 ?x2254 ?x2174)) (+ (* ?x2139 ?x2254 ?x2254 ?x2174 ?x2174 ?x2174) (* ?x2174 r r)) ?x2252 ?x2180)))
 (let ((?x2151 (+ (- 16) ?x427 ?x274 ?x30 ?x2333 ?x182 ?x438 ?x214 ?x230 (* ?x2350 ?x2139 ?x2139) (* (- 2) (* ?x2350 ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 2) ?x144 ?x179 q ?x2354))) ?x1132)))
 (let ((?x1490 (+ (- 2) ?x144 ?x179 q ?x2354)))
 (let ((?x246 (+ (* (- 1) (* ?x2350 ?x2139 ?x2139 ?x1490 ?x1490 ?x1490 r r r)) (* ?x2350 ?x2350 ?x2139 ?x2139 ?x2139 ?x1490 ?x1490 ?x1490 r r r))))
 (let ((?x2146 (* (+ (* ?x2350 ?x1490 ?x1490 ?x1490) (* ?x2350 ?x2350 ?x2350 ?x1490)) (+ (* ?x2350 ?x2350 ?x2139 ?x1490 ?x1490 ?x1490) (* ?x1490 r r)) ?x246 ?x2151)))
 (let ((?x342 (+ ?x427 ?x274 ?x30 ?x182 ?x438 ?x214 ?x230 (* ?x2139 ?x2139 q) (* (- 2) (* ?x2139 q)) ?x280 (* (- 4) (* ?x2139 (+ ?x144 ?x179 q))) ?x1132)))
 (let ((?x385 (+ ?x144 ?x179 q)))
 (let ((?x943 (+ (* (- 1) (* ?x2139 ?x2139 ?x385 ?x385 ?x385 r r r q)) (* ?x2139 ?x2139 ?x2139 ?x385 ?x385 ?x385 r r r q q))))
 (let ((?x343 (* (+ (* ?x385 ?x385 ?x385 q) (* ?x385 q q q)) (+ (* ?x2139 ?x385 ?x385 ?x385 q q) (* ?x385 r r)) ?x943 ?x342)))
 (let ((?x584 (+ (- 32) ?x427 ?x274 ?x30 (* (- 16) d) ?x182 ?x438 ?x214 ?x230 (* ?x2078 ?x2139 ?x2139) (* (- 2) (* ?x2078 ?x2139)) ?x280 (* (- 4) (* ?x2139 (+ (- 4) ?x144 ?x179 q ?x2074))) ?x1132)))
 (let ((?x1864 (+ (- 4) ?x144 ?x179 q ?x2074)))
 (let ((?x263 (+ (* (- 1) (* ?x2078 ?x2139 ?x2139 ?x1864 ?x1864 ?x1864 r r r)) (* ?x2078 ?x2078 ?x2139 ?x2139 ?x2139 ?x1864 ?x1864 ?x1864 r r r))))
 (let ((?x585 (* (+ (* ?x2078 ?x1864 ?x1864 ?x1864) (* ?x2078 ?x2078 ?x2078 ?x1864)) (+ (* ?x2078 ?x2078 ?x2139 ?x1864 ?x1864 ?x1864) (* ?x1864 r r)) ?x263 ?x584)))
 (let (($x2187 (or (not (= ?x585 0)) (not (= ?x343 0)) (not (= ?x2146 0)) (not (= ?x2264 0)))))
 (let ((?x1887 (+ ?x211 ?x182 ?x1613 ?x214 ?x230 (* d d q) (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1132)))
 (let (($x2185 (and (= ?x1887 0) $x2187)))
 (rewrite (= $x2185 $x902)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x175 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x146 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x163 (+ (* (- 1) ?x62 ?x62 ?x152 ?x146 ?x146 ?x146 r r r) (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 ?x146 ?x146 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x163 (+ (* ?x62 ?x152 ?x152 ?x146 ?x146 ?x146) (* ?x146 r r)) (+ (* ?x152 ?x146 ?x146 ?x146) (* ?x152 ?x152 ?x152 ?x146)))))
 (let ((?x117 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x134 (+ (* (- 1) ?x62 ?x62 ?x123 ?x117 ?x117 ?x117 r r r) (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 ?x117 ?x117 r r r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x134 (+ (* ?x62 ?x123 ?x123 ?x117 ?x117 ?x117) (* ?x117 r r)) (+ (* ?x123 ?x117 ?x117 ?x117) (* ?x123 ?x123 ?x123 ?x117)))))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (+ (* (- 1) ?x62 ?x62 q ?x90 ?x90 ?x90 r r r) (* ?x62 ?x62 ?x62 q q ?x90 ?x90 ?x90 r r r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x106 (+ (* ?x62 q q ?x90 ?x90 ?x90) (* ?x90 r r)) (+ (* q ?x90 ?x90 ?x90) (* q q q ?x90)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* (- 1) ?x62 ?x62 ?x67 ?x59 ?x59 ?x59 r r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80 (+ (* ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x59 r r)) (+ (* ?x67 ?x59 ?x59 ?x59) (* ?x67 ?x67 ?x67 ?x59)))))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x173))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x1290 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x1132 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1962 (+ 2 ?x57 ?x179 q d)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1196 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 d)))
 (let ((?x504 (* 8 q)))
 (let ((?x274 (* (- 8) x)))
 (let ((?x271 (* 16 r)))
 (let ((?x990 (+ 16 ?x271 ?x274 ?x504 ?x211 ?x182 ?x1196 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 ?x1962)) ?x1132)))
 (let ((?x369 (+ 4 q)))
 (let ((?x974 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x1962 ?x1962 ?x1962 r r r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x1962 ?x1962 ?x1962 r r r))))
 (let ((?x976 (* (+ (* ?x369 ?x1962 ?x1962 ?x1962) (* ?x369 ?x369 ?x369 ?x1962)) (+ (* ?x285 ?x369 ?x369 ?x1962 ?x1962 ?x1962) (* ?x1962 r r)) ?x974 ?x990)))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1550 (+ (- 16) ?x271 ?x274 ?x504 ?x472 ?x182 ?x1196 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1132)))
 (let ((?x1342 (* (- 1) d)))
 (let ((?x1186 (+ (- 2) ?x57 ?x179 q ?x1342)))
 (let ((?x501 (+ (- 4) q)))
 (let ((?x811 (+ (* (- 1) (* ?x501 ?x285 ?x285 ?x1186 ?x1186 ?x1186 r r r)) (* ?x501 ?x501 ?x285 ?x285 ?x285 ?x1186 ?x1186 ?x1186 r r r))))
 (let ((?x1599 (* (+ (* ?x501 ?x1186 ?x1186 ?x1186) (* ?x501 ?x501 ?x501 ?x1186)) (+ (* ?x501 ?x501 ?x285 ?x1186 ?x1186 ?x1186) (* ?x1186 r r)) ?x811 ?x1550)))
 (let ((?x368 (+ ?x271 ?x274 ?x504 ?x182 ?x1196 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1132)))
 (let ((?x267 (+ ?x57 ?x179 q)))
 (let ((?x180 (+ (* (- 1) (* ?x285 ?x285 ?x267 ?x267 ?x267 r r r q)) (* ?x285 ?x285 ?x285 ?x267 ?x267 ?x267 r r r q q))))
 (let ((?x829 (* (+ (* ?x267 ?x267 ?x267 q) (* ?x267 q q q)) (+ (* ?x285 ?x267 ?x267 ?x267 q q) (* ?x267 r r)) ?x180 ?x368)))
 (let ((?x2280 (+ (- 32) ?x271 ?x274 ?x504 (* (- 16) d) ?x182 ?x1196 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1132)))
 (let ((?x1952 (* (- 2) d)))
 (let ((?x367 (+ (- 4) ?x57 ?x179 q ?x1952)))
 (let ((?x1616 (+ (- 8) q)))
 (let ((?x2202 (+ (* (- 1) (* ?x1616 ?x285 ?x285 ?x367 ?x367 ?x367 r r r)) (* ?x1616 ?x1616 ?x285 ?x285 ?x285 ?x367 ?x367 ?x367 r r r))))
 (let ((?x2288 (* (+ (* ?x1616 ?x367 ?x367 ?x367) (* ?x1616 ?x1616 ?x1616 ?x367)) (+ (* ?x1616 ?x1616 ?x285 ?x367 ?x367 ?x367) (* ?x367 r r)) ?x2202 ?x2280)))
 (let (($x1695 (or (not (= ?x2288 0)) (not (= ?x829 0)) (not (= ?x1599 0)) (not (= ?x976 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1138 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1132)))
 (and (= ?x1138 0) $x1695))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x522 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x1132 (* 4 (* d00 r00))))
 (let ((?x179 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1962 (+ 2 ?x57 ?x179 q d)))
 (let ((?x285 (+ 2 d)))
 (let ((?x279 (* d00 q00)))
 (let ((?x280 (* 2 ?x279)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x230 (* (- 1) ?x41)))
 (let ((?x200 (* d00 x00)))
 (let ((?x214 (* (- 4) ?x200)))
 (let ((?x1196 (* 4 (* ?x285 r))))
 (let ((?x182 (* (- 8) r00)))
 (let ((?x211 (* 8 d)))
 (let ((?x504 (* 8 q)))
 (let ((?x274 (* (- 8) x)))
 (let ((?x271 (* 16 r)))
 (let ((?x990 (+ 16 ?x271 ?x274 ?x504 ?x211 ?x182 ?x1196 ?x214 ?x230 (* ?x285 ?x285 (+ 4 q)) (* (- 2) (* ?x285 (+ 4 q))) ?x280 (* (- 4) (* ?x285 ?x1962)) ?x1132)))
 (let ((?x369 (+ 4 q)))
 (let ((?x974 (+ (* (- 1) (* ?x285 ?x285 ?x369 ?x1962 ?x1962 ?x1962 r r r)) (* ?x285 ?x285 ?x285 ?x369 ?x369 ?x1962 ?x1962 ?x1962 r r r))))
 (let ((?x976 (* (+ (* ?x369 ?x1962 ?x1962 ?x1962) (* ?x369 ?x369 ?x369 ?x1962)) (+ (* ?x285 ?x369 ?x369 ?x1962 ?x1962 ?x1962) (* ?x1962 r r)) ?x974 ?x990)))
 (let ((?x472 (* (- 8) d)))
 (let ((?x1550 (+ (- 16) ?x271 ?x274 ?x504 ?x472 ?x182 ?x1196 ?x214 ?x230 (* (+ (- 4) q) ?x285 ?x285) (* (- 2) (* (+ (- 4) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 2) ?x57 ?x179 q (* (- 1) d)))) ?x1132)))
 (let ((?x1342 (* (- 1) d)))
 (let ((?x1186 (+ (- 2) ?x57 ?x179 q ?x1342)))
 (let ((?x501 (+ (- 4) q)))
 (let ((?x811 (+ (* (- 1) (* ?x501 ?x285 ?x285 ?x1186 ?x1186 ?x1186 r r r)) (* ?x501 ?x501 ?x285 ?x285 ?x285 ?x1186 ?x1186 ?x1186 r r r))))
 (let ((?x1599 (* (+ (* ?x501 ?x1186 ?x1186 ?x1186) (* ?x501 ?x501 ?x501 ?x1186)) (+ (* ?x501 ?x501 ?x285 ?x1186 ?x1186 ?x1186) (* ?x1186 r r)) ?x811 ?x1550)))
 (let ((?x368 (+ ?x271 ?x274 ?x504 ?x182 ?x1196 ?x214 ?x230 (* ?x285 ?x285 q) (* (- 2) (* ?x285 q)) ?x280 (* (- 4) (* ?x285 (+ ?x57 ?x179 q))) ?x1132)))
 (let ((?x267 (+ ?x57 ?x179 q)))
 (let ((?x180 (+ (* (- 1) (* ?x285 ?x285 ?x267 ?x267 ?x267 r r r q)) (* ?x285 ?x285 ?x285 ?x267 ?x267 ?x267 r r r q q))))
 (let ((?x829 (* (+ (* ?x267 ?x267 ?x267 q) (* ?x267 q q q)) (+ (* ?x285 ?x267 ?x267 ?x267 q q) (* ?x267 r r)) ?x180 ?x368)))
 (let ((?x2280 (+ (- 32) ?x271 ?x274 ?x504 (* (- 16) d) ?x182 ?x1196 ?x214 ?x230 (* (+ (- 8) q) ?x285 ?x285) (* (- 2) (* (+ (- 8) q) ?x285)) ?x280 (* (- 4) (* ?x285 (+ (- 4) ?x57 ?x179 q (* (- 2) d)))) ?x1132)))
 (let ((?x1952 (* (- 2) d)))
 (let ((?x367 (+ (- 4) ?x57 ?x179 q ?x1952)))
 (let ((?x1616 (+ (- 8) q)))
 (let ((?x2202 (+ (* (- 1) (* ?x1616 ?x285 ?x285 ?x367 ?x367 ?x367 r r r)) (* ?x1616 ?x1616 ?x285 ?x285 ?x285 ?x367 ?x367 ?x367 r r r))))
 (let ((?x2288 (* (+ (* ?x1616 ?x367 ?x367 ?x367) (* ?x1616 ?x1616 ?x1616 ?x367)) (+ (* ?x1616 ?x1616 ?x285 ?x367 ?x367 ?x367) (* ?x367 r r)) ?x2202 ?x2280)))
 (let (($x1695 (or (not (= ?x2288 0)) (not (= ?x829 0)) (not (= ?x1599 0)) (not (= ?x976 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1138 (+ ?x30 ?x182 (* 4 (* x d)) ?x214 ?x230 ?x44 (* (- 2) (* d q)) ?x280 (* (- 4) (* d r)) ?x1132)))
 (let (($x1882 (and (= ?x1138 0) $x1695)))
 (let ((?x146 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x152 (- q 8)))
 (let ((?x62 (+ d 2)))
 (let ((?x163 (+ (* (- 1) ?x62 ?x62 ?x152 ?x146 ?x146 ?x146 r r r) (* ?x62 ?x62 ?x62 ?x152 ?x152 ?x146 ?x146 ?x146 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x150 (- (+ (- (* 8 ?x146) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x157 (+ (- (+ (- ?x150 ?x41) (* ?x62 ?x62 ?x152)) (* 2 ?x62 ?x152)) ?x49)))
 (let ((?x170 (* (+ (- ?x157 (* 4 ?x62 ?x146)) ?x53) ?x163 (+ (* ?x62 ?x152 ?x152 ?x146 ?x146 ?x146) (* ?x146 r r)) (+ (* ?x152 ?x146 ?x146 ?x146) (* ?x152 ?x152 ?x152 ?x146)))))
 (let ((?x117 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x123 (- q 4)))
 (let ((?x134 (+ (* (- 1) ?x62 ?x62 ?x123 ?x117 ?x117 ?x117 r r r) (* ?x62 ?x62 ?x62 ?x123 ?x123 ?x117 ?x117 ?x117 r r r))))
 (let ((?x121 (- (+ (- (* 8 ?x117) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x128 (+ (- (+ (- ?x121 ?x41) (* ?x62 ?x62 ?x123)) (* 2 ?x62 ?x123)) ?x49)))
 (let ((?x141 (* (+ (- ?x128 (* 4 ?x62 ?x117)) ?x53) ?x134 (+ (* ?x62 ?x123 ?x123 ?x117 ?x117 ?x117) (* ?x117 r r)) (+ (* ?x123 ?x117 ?x117 ?x117) (* ?x123 ?x123 ?x123 ?x117)))))
 (let ((?x58 (- ?x57 x)))
 (let ((?x90 (+ ?x58 q)))
 (let ((?x106 (+ (* (- 1) ?x62 ?x62 q ?x90 ?x90 ?x90 r r r) (* ?x62 ?x62 ?x62 q q ?x90 ?x90 ?x90 r r r))))
 (let ((?x94 (- (+ (- (* 8 ?x90) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x100 (+ (- (+ (- ?x94 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x113 (* (+ (- ?x100 (* 4 ?x62 ?x90)) ?x53) ?x106 (+ (* ?x62 q q ?x90 ?x90 ?x90) (* ?x90 r r)) (+ (* q ?x90 ?x90 ?x90) (* q q q ?x90)))))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x80 (+ (* (- 1) ?x62 ?x62 ?x67 ?x59 ?x59 ?x59 r r r) (* ?x62 ?x62 ?x62 ?x67 ?x67 ?x59 ?x59 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let ((?x87 (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x80 (+ (* ?x62 ?x67 ?x67 ?x59 ?x59 ?x59) (* ?x59 r r)) (+ (* ?x67 ?x59 ?x59 ?x59) (* ?x67 ?x67 ?x67 ?x59)))))
 (let (($x173 (or (not (= ?x87 0)) (not (= ?x113 0)) (not (= ?x141 0)) (not (= ?x170 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x174 (and (= ?x54 0) $x173)))
 (rewrite (= $x174 $x1882))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x2197 (trans (quant-intro (proof-bind ?x522) (= $x175 $x1290)) (elim-unused (= $x1290 $x2189)) (= $x175 $x2189))))
 (let ((@x27 (asserted $x175)))
 (let ((@x1017 (mp (mp (mp @x27 @x2197 $x2189) (rewrite (= $x2189 $x2189)) $x2189) (quant-intro (proof-bind ?x1359) (= $x2189 $x2298)) $x2298)))
 (let ((@x843 (mp~ (mp @x1017 (quant-intro (proof-bind ?x258) (= $x2298 $x190)) $x190) (sk (~ $x190 $x945)) $x945)))
 (let ((@x1560 (mp @x843 (rewrite (= $x945 $x627)) $x627)))
 (let ((@x610 (and-elim @x1560 $x474)))
 (let ((@x1484 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x474) $x632)) @x610 $x632)))
 (let (($x2329 (<= ?x1256 0)))
 (let ((@x775 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x474) $x2329)) @x610 $x2329)))
 (let (($x2331 (not (<= ?x1333 0))))
 (let (($x1544 (<= ?x2327 0)))
 (let (($x2465 (>= ?x2327 0)))
 (let ((@x674 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1889 (not $x1544) (not $x2465))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x2465)) @x775 @x1484 false) $x2465) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1544)) @x775 @x1484 false) $x1544) $x1889)))
 (let (($x1934 (>= ?x661 0)))
 (let (($x1509 (<= ?x661 0)))
 (let ((@x603 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x488 (not $x1509) (not $x1934))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1509)) @x775 @x1484 false) $x1509) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1934)) @x775 @x1484 false) $x1934) $x488)))
 (let (($x1951 (>= ?x362 0)))
 (let (($x1829 (<= ?x362 0)))
 (let ((@x1079 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1389 (not $x1829) (not $x1951))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1829)) @x775 @x1484 false) $x1829) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1951)) @x775 @x1484 false) $x1951) $x1389)))
 (let ((@x2168 (unit-resolution (unit-resolution (and-elim @x1560 $x581) @x1079 @x603 (or $x250 $x2181)) @x674 $x2181)))
 (let (($x492 (>= ?x1333 0)))
 (let ((@x1819 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2466 $x2331 (not $x492))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x492)) @x775 @x1484 false) $x492) @x2168 $x2331)))
 ((_ th-lemma arith farkas 1 1 1) @x1819 @x775 @x1484 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        74
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             1536
 :arith-nonlinear-bounds    36
 :arith-num-rows            22
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 137
 :arith-tableau-max-rows    22
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                4.04
 :memory                    3.35
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1950463
 :num-checks                1
 :propagations              36
 :rlimit-count              15068
 :time                      0.02
 :total-time                0.03)
