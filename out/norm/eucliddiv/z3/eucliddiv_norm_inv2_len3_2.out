unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x79 (* y00 q00)))
 (let ((?x543 (+ r00 ?x79 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x999 (<= ?x543 0)))
 (let (($x544 (= ?x543 0)))
 (let ((?x1413 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1370 (* y00 y00 y00 q00)))
 (let ((?x1265 (* y00 y00 y00 y00 q00)))
 (let ((?x892 (* y00 y00 y00 r00)))
 (let ((?x626 (* y00 y00 r00)))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x333 (+ ?x74 r!1)))
 (let ((?x931 (+ 1 q!2)))
 (let ((?x143 (* y00 y00 y00 y00 r00)))
 (let ((?x342 (+ ?x143 (* y00 y00 y00 q00 r!1 r!1) (* y00 y00 y00 y00 q00 q!2 q!2) (* (- 1) (* y00 y00 y00 q!2)) (* ?x931 ?x931 ?x333 ?x333 ?x333 ?x333) (* (- 3) (* y00 y00 y00 y00 q!2 q!2)) (* y00 y00 y00 q00 q!2) (* 2 (* y00 y00 y00 y00 q00 q!2)) (* (- 3) (* y00 y00 y00 q00 r!1 q!2 q!2)) (* (- 6) (* y00 y00 y00 q00 r!1 q!2)) (* (- 3) (* y00 y00 y00 q00 r!1)) (* 3 (* y00 y00 q00 r!1 r!1 q!2 q!2)) (* 6 (* y00 y00 q00 r!1 r!1 q!2)) (* 3 (* y00 y00 q00 r!1 r!1)) (* (- 1) (* y00 q00 r!1 r!1 r!1 q!2 q!2)) (* (- 2) (* y00 q00 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 q00 r!1 r!1 r!1)) (* (- 2) (* y00 y00 y00 y00 q00 r!1)) (* (- 1) (* y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00)) (* (- 1) (* r00 r!1 r!1 r!1)) (* (- 2) (* r00 r!1 r!1 r!1 q!2)) (* (- 2) (* y00 y00 y00 r00 r!1)) (* 3 (* y00 r!1 r!1 r!1 q!2)) (* y00 r!1 r!1 r!1 q!2 q!2 q!2) (* 3 (* y00 r!1 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 r!1)) (* (- 1) (* y00 y00 r!1 q!2)) (* y00 y00 r00 r!1 r!1) (* y00 r!1 r!1 r!1) (* (- 9) (* y00 y00 r!1 r!1 q!2)) (* 3 (* y00 y00 y00 r!1 q!2 q!2 q!2)) ?x626 (* y00 y00 r00 q!2) (* (- 9) (* y00 y00 r!1 r!1 q!2 q!2)) (* (- 3) (* y00 y00 r!1 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1)) (* 2 (* y00 y00 y00 y00 r!1 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) ?x892 (* (- 3) (* y00 y00 r!1 r!1)) (* (- 1) (* r00 r!1 r!1 r!1 q!2 q!2)) (* 9 (* y00 y00 y00 r!1 q!2)) (* 9 (* y00 y00 y00 r!1 q!2 q!2)) (* 3 (* y00 y00 y00 r!1)) (* (- 1) (* y00 y00 y00 y00 q!2 q!2 q!2)) ?x1265 (* (- 3) (* y00 y00 y00 y00 q!2)) ?x1370 (* (- 6) (* y00 y00 r00 r!1 q!2)) (* 3 (* y00 r00 r!1 r!1)) (* 6 (* y00 r00 r!1 r!1 q!2)) (* 3 (* y00 r00 r!1 r!1 q!2 q!2)) (* (- 3) (* y00 y00 r00 r!1)) (* (- 3) (* y00 y00 r00 r!1 q!2 q!2)) ?x1413 (* 2 (* y00 y00 y00 r00 q!2)) (* 2 (* y00 y00 y00 r!1 r!1)) (* (- 1) (* y00 y00 y00 y00 r!1)) (* y00 y00 y00 r00 q!2 q!2))))
 (let (($x343 (= ?x342 0)))
 (let (($x353 (not $x343)))
 (let ((?x781 (+ y00 (* (- 1) y!0))))
 (let (($x1270 (= ?x781 0)))
 (let (($x554 (and $x1270 $x544 $x353)))
 (let ((?x1465 (* (- 1) ?x1413)))
 (let ((?x1461 (* (- 1) ?x1370)))
 (let ((?x1268 (* (- 1) ?x1265)))
 (let ((?x567 (+ r!1 ?x74)))
 (let ((?x893 (* (- 1) ?x892)))
 (let ((?x1458 (* (- 1) ?x626)))
 (let ((?x462 (* y00 y00 y00 y00)))
 (let ((?x1442 (* (- 1) ?x143)))
 (let ((?x859 (+ (* r!1 y00 y00) (* q!2 r!1 y00 y00) (* (- 1) (* r!1 r!1 y00 y00 r00)) (* 2 (* r!1 y00 y00 y00 r00)) ?x1442 (* (- 1) (* r!1 r!1 r!1 y00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 r!1 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 r!1 y00)) (* 3 (* r!1 r!1 y00 y00)) (* 9 (* q!2 r!1 r!1 y00 y00)) (* 9 (* q!2 q!2 r!1 r!1 y00 y00)) (* 3 (* q!2 q!2 q!2 r!1 r!1 y00 y00)) (* (- 3) (* r!1 y00 y00 y00)) (* (- 9) (* q!2 r!1 y00 y00 y00)) (* (- 9) (* q!2 q!2 r!1 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 r!1 y00 y00 y00)) ?x462 (* 3 (* q!2 y00 y00 y00 y00)) (* 3 (* q!2 q!2 y00 y00 y00 y00)) (* q!2 q!2 q!2 y00 y00 y00 y00) (* r!1 r!1 r!1 y00 y00) (* (- 2) (* r!1 r!1 y00 y00 y00)) (* r!1 y00 y00 y00 y00) ?x1458 (* (- 1) (* q!2 y00 y00 r00)) (* q!2 r!1 r!1 y00 y00 y00) (* (- 2) (* q!2 r!1 y00 y00 y00 y00)) (* q!2 y00 y00 y00 y00 y00) (* r!1 r!1 r!1 r00) (* 2 (* q!2 r!1 r!1 r!1 r00)) (* q!2 q!2 r!1 r!1 r!1 r00) (* (- 3) (* r!1 r!1 y00 r00)) (* (- 6) (* q!2 r!1 r!1 y00 r00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 r00)) (* 3 (* r!1 y00 y00 r00)) (* 6 (* q!2 r!1 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 y00 y00 r00)) ?x893 (* (- 2) (* q!2 y00 y00 y00 r00)) (* (- 1) (* q!2 q!2 y00 y00 y00 r00)) (* (- 1) (* ?x931 ?x931 ?x567 ?x567 ?x567 ?x567)) (* q!2 q!2 y00 y00 y00) (* q!2 y00 y00 y00) (* r!1 r!1 r!1 y00 q00) (* 2 (* q!2 r!1 r!1 r!1 y00 q00)) (* q!2 q!2 r!1 r!1 r!1 y00 q00) (* (- 3) (* r!1 r!1 y00 y00 q00)) (* (- 6) (* q!2 r!1 r!1 y00 y00 q00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00 q00)) (* 3 (* r!1 y00 y00 y00 q00)) (* 6 (* q!2 r!1 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 q00)) ?x1268 (* (- 2) (* q!2 y00 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00 q00)) ?x1461 (* (- 1) (* q!2 y00 y00 y00 q00)) (* (- 1) (* r!1 r!1 y00 y00 y00 q00)) (* 2 (* r!1 y00 y00 y00 y00 q00)) ?x1465)))
 (let (($x863 (and (= (+ y!0 ?x74) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x79)) 0) (not (= ?x859 0)))))
 (let (($x1323 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1413 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1465 (* (- 1) ?x1413)))
 (let ((?x1464 (* 2 (* r y00 y00 y00 y00 q00))))
 (let ((?x1463 (* (- 1) (* r r y00 y00 y00 q00))))
 (let ((?x1462 (* (- 1) (* q y00 y00 y00 q00))))
 (let ((?x1370 (* y00 y00 y00 q00)))
 (let ((?x1461 (* (- 1) ?x1370)))
 (let ((?x1292 (* (- 1) (* q q y00 y00 y00 y00 q00))))
 (let ((?x1305 (* (- 2) (* q y00 y00 y00 y00 q00))))
 (let ((?x1265 (* y00 y00 y00 y00 q00)))
 (let ((?x1268 (* (- 1) ?x1265)))
 (let ((?x1304 (* 3 (* q q r y00 y00 y00 q00))))
 (let ((?x1303 (* 6 (* q r y00 y00 y00 q00))))
 (let ((?x1302 (* 3 (* r y00 y00 y00 q00))))
 (let ((?x1301 (* (- 3) (* q q r r y00 y00 q00))))
 (let ((?x1300 (* (- 6) (* q r r y00 y00 q00))))
 (let ((?x1299 (* (- 3) (* r r y00 y00 q00))))
 (let ((?x1090 (* q q r r r y00 q00)))
 (let ((?x1298 (* 2 (* q r r r y00 q00))))
 (let ((?x1080 (* r r r y00 q00)))
 (let ((?x1023 (* q y00 y00 y00)))
 (let ((?x1022 (* q q y00 y00 y00)))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x960 (* ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1460 (* (- 1) ?x960)))
 (let ((?x903 (* (- 1) (* q q y00 y00 y00 r00))))
 (let ((?x918 (* (- 2) (* q y00 y00 y00 r00))))
 (let ((?x892 (* y00 y00 y00 r00)))
 (let ((?x893 (* (- 1) ?x892)))
 (let ((?x917 (* 3 (* q q r y00 y00 r00))))
 (let ((?x916 (* 6 (* q r y00 y00 r00))))
 (let ((?x914 (* 3 (* r y00 y00 r00))))
 (let ((?x913 (* (- 3) (* q q r r y00 r00))))
 (let ((?x912 (* (- 6) (* q r r y00 r00))))
 (let ((?x910 (* (- 3) (* r r y00 r00))))
 (let ((?x731 (* q q r r r r00)))
 (let ((?x909 (* 2 (* q r r r r00))))
 (let ((?x728 (* r r r r00)))
 (let ((?x675 (* q y00 y00 y00 y00 y00)))
 (let ((?x682 (* (- 2) (* q r y00 y00 y00 y00))))
 (let ((?x644 (* q r r y00 y00 y00)))
 (let ((?x1459 (* (- 1) (* q y00 y00 r00))))
 (let ((?x626 (* y00 y00 r00)))
 (let ((?x1458 (* (- 1) ?x626)))
 (let ((?x551 (* r y00 y00 y00 y00)))
 (let ((?x1457 (* (- 2) (* r r y00 y00 y00))))
 (let ((?x523 (* r r r y00 y00)))
 (let ((?x482 (* q q q y00 y00 y00 y00)))
 (let ((?x1456 (* 3 (* q q y00 y00 y00 y00))))
 (let ((?x1455 (* 3 (* q y00 y00 y00 y00))))
 (let ((?x462 (* y00 y00 y00 y00)))
 (let ((?x1454 (* (- 3) (* q q q r y00 y00 y00))))
 (let ((?x1453 (* (- 9) (* q q r y00 y00 y00))))
 (let ((?x1452 (* (- 9) (* q r y00 y00 y00))))
 (let ((?x1451 (* (- 3) (* r y00 y00 y00))))
 (let ((?x1450 (* 3 (* q q q r r y00 y00))))
 (let ((?x1449 (* 9 (* q q r r y00 y00))))
 (let ((?x1448 (* 9 (* q r r y00 y00))))
 (let ((?x1447 (* 3 (* r r y00 y00))))
 (let ((?x1446 (* (- 1) (* q q q r r r y00))))
 (let ((?x1445 (* (- 3) (* q q r r r y00))))
 (let ((?x1444 (* (- 3) (* q r r r y00))))
 (let ((?x1443 (* (- 1) (* r r r y00))))
 (let ((?x143 (* y00 y00 y00 y00 r00)))
 (let ((?x1442 (* (- 1) ?x143)))
 (let ((?x1441 (* 2 (* r y00 y00 y00 r00))))
 (let ((?x1440 (* (- 1) (* r r y00 y00 r00))))
 (let ((?x98 (* q r y00 y00)))
 (let ((?x93 (* r y00 y00)))
 (let ((?x1656 (+ ?x93 ?x98 ?x1440 ?x1441 ?x1442 ?x1443 ?x1444 ?x1445 ?x1446 ?x1447 ?x1448 ?x1449 ?x1450 ?x1451 ?x1452 ?x1453 ?x1454 ?x462 ?x1455 ?x1456 ?x482 ?x523 ?x1457 ?x551 ?x1458 ?x1459 ?x644 ?x682 ?x675 ?x728 ?x909 ?x731 ?x910 ?x912 ?x913 ?x914 ?x916 ?x917 ?x893 ?x918 ?x903 ?x1460 ?x1022 ?x1023 ?x1080 ?x1298 ?x1090 ?x1299 ?x1300 ?x1301 ?x1302 ?x1303 ?x1304 ?x1268 ?x1305 ?x1292 ?x1461 ?x1462 ?x1463 ?x1464 ?x1465)))
 (let (($x108 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x85 (= (+ y ?x74) 0)))
 (and $x85 $x108 (not (= ?x1656 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x792 (exists ((q Int) (r Int) (y Int) )(! (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x235 (* q00 y00 y00 y00 ?x82 ?x82)))
 (let ((?x76 (+ 1 q)))
 (let ((?x1327 (* q00 y00 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x772 (* y00 y00 y00 ?x76 ?x76)))
 (let ((?x960 (* ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1460 (* (- 1) ?x960)))
 (let ((?x681 (* r00 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x1411 (* y00 y00 y00 ?x76 ?x82 ?x82)))
 (let ((?x1403 (* y00 y00 ?x82 ?x82 ?x82)))
 (let ((?x504 (* y00 y00 ?x76 ?x82)))
 (let ((?x1390 (+ ?x504 (* (- 1) (* r00 y00 y00 ?x82 ?x82)) (* (- 1) (* y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x1403 (* (- 1) (* r00 y00 y00 ?x76)) ?x1411 ?x681 ?x1460 ?x772 ?x1327 (* (- 1) (* q00 y00 y00 y00 ?x76)) (* (- 1) ?x235))))
 (let (($x994 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x994 (not (= ?x1390 0))))))))))))))))) :qid k!29))
 ))
 (let ((?x1328 (lambda ((q Int) (r Int) (y Int) )(let ((?x1413 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1465 (* (- 1) ?x1413)))
 (let ((?x1464 (* 2 (* r y00 y00 y00 y00 q00))))
 (let ((?x1463 (* (- 1) (* r r y00 y00 y00 q00))))
 (let ((?x1462 (* (- 1) (* q y00 y00 y00 q00))))
 (let ((?x1370 (* y00 y00 y00 q00)))
 (let ((?x1461 (* (- 1) ?x1370)))
 (let ((?x1292 (* (- 1) (* q q y00 y00 y00 y00 q00))))
 (let ((?x1305 (* (- 2) (* q y00 y00 y00 y00 q00))))
 (let ((?x1265 (* y00 y00 y00 y00 q00)))
 (let ((?x1268 (* (- 1) ?x1265)))
 (let ((?x1304 (* 3 (* q q r y00 y00 y00 q00))))
 (let ((?x1303 (* 6 (* q r y00 y00 y00 q00))))
 (let ((?x1302 (* 3 (* r y00 y00 y00 q00))))
 (let ((?x1301 (* (- 3) (* q q r r y00 y00 q00))))
 (let ((?x1300 (* (- 6) (* q r r y00 y00 q00))))
 (let ((?x1299 (* (- 3) (* r r y00 y00 q00))))
 (let ((?x1090 (* q q r r r y00 q00)))
 (let ((?x1298 (* 2 (* q r r r y00 q00))))
 (let ((?x1080 (* r r r y00 q00)))
 (let ((?x1023 (* q y00 y00 y00)))
 (let ((?x1022 (* q q y00 y00 y00)))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x76 (+ 1 q)))
 (let ((?x960 (* ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1460 (* (- 1) ?x960)))
 (let ((?x903 (* (- 1) (* q q y00 y00 y00 r00))))
 (let ((?x918 (* (- 2) (* q y00 y00 y00 r00))))
 (let ((?x892 (* y00 y00 y00 r00)))
 (let ((?x893 (* (- 1) ?x892)))
 (let ((?x917 (* 3 (* q q r y00 y00 r00))))
 (let ((?x916 (* 6 (* q r y00 y00 r00))))
 (let ((?x914 (* 3 (* r y00 y00 r00))))
 (let ((?x913 (* (- 3) (* q q r r y00 r00))))
 (let ((?x912 (* (- 6) (* q r r y00 r00))))
 (let ((?x910 (* (- 3) (* r r y00 r00))))
 (let ((?x731 (* q q r r r r00)))
 (let ((?x909 (* 2 (* q r r r r00))))
 (let ((?x728 (* r r r r00)))
 (let ((?x675 (* q y00 y00 y00 y00 y00)))
 (let ((?x682 (* (- 2) (* q r y00 y00 y00 y00))))
 (let ((?x644 (* q r r y00 y00 y00)))
 (let ((?x1459 (* (- 1) (* q y00 y00 r00))))
 (let ((?x626 (* y00 y00 r00)))
 (let ((?x1458 (* (- 1) ?x626)))
 (let ((?x551 (* r y00 y00 y00 y00)))
 (let ((?x1457 (* (- 2) (* r r y00 y00 y00))))
 (let ((?x523 (* r r r y00 y00)))
 (let ((?x482 (* q q q y00 y00 y00 y00)))
 (let ((?x1456 (* 3 (* q q y00 y00 y00 y00))))
 (let ((?x1455 (* 3 (* q y00 y00 y00 y00))))
 (let ((?x462 (* y00 y00 y00 y00)))
 (let ((?x1454 (* (- 3) (* q q q r y00 y00 y00))))
 (let ((?x1453 (* (- 9) (* q q r y00 y00 y00))))
 (let ((?x1452 (* (- 9) (* q r y00 y00 y00))))
 (let ((?x1451 (* (- 3) (* r y00 y00 y00))))
 (let ((?x1450 (* 3 (* q q q r r y00 y00))))
 (let ((?x1449 (* 9 (* q q r r y00 y00))))
 (let ((?x1448 (* 9 (* q r r y00 y00))))
 (let ((?x1447 (* 3 (* r r y00 y00))))
 (let ((?x1446 (* (- 1) (* q q q r r r y00))))
 (let ((?x1445 (* (- 3) (* q q r r r y00))))
 (let ((?x1444 (* (- 3) (* q r r r y00))))
 (let ((?x1443 (* (- 1) (* r r r y00))))
 (let ((?x143 (* y00 y00 y00 y00 r00)))
 (let ((?x1442 (* (- 1) ?x143)))
 (let ((?x1441 (* 2 (* r y00 y00 y00 r00))))
 (let ((?x1440 (* (- 1) (* r r y00 y00 r00))))
 (let ((?x98 (* q r y00 y00)))
 (let ((?x93 (* r y00 y00)))
 (let ((?x1656 (+ ?x93 ?x98 ?x1440 ?x1441 ?x1442 ?x1443 ?x1444 ?x1445 ?x1446 ?x1447 ?x1448 ?x1449 ?x1450 ?x1451 ?x1452 ?x1453 ?x1454 ?x462 ?x1455 ?x1456 ?x482 ?x523 ?x1457 ?x551 ?x1458 ?x1459 ?x644 ?x682 ?x675 ?x728 ?x909 ?x731 ?x910 ?x912 ?x913 ?x914 ?x916 ?x917 ?x893 ?x918 ?x903 ?x1460 ?x1022 ?x1023 ?x1080 ?x1298 ?x1090 ?x1299 ?x1300 ?x1301 ?x1302 ?x1303 ?x1304 ?x1268 ?x1305 ?x1292 ?x1461 ?x1462 ?x1463 ?x1464 ?x1465)))
 (let (($x108 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x85 (= (+ y ?x74) 0)))
 (let (($x1662 (and $x85 $x108 (not (= ?x1656 0)))))
 (let ((?x1327 (* q00 y00 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x772 (* y00 y00 y00 ?x76 ?x76)))
 (let ((?x681 (* r00 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x1411 (* y00 y00 y00 ?x76 ?x82 ?x82)))
 (let ((?x1403 (* y00 y00 ?x82 ?x82 ?x82)))
 (let ((?x504 (* y00 y00 ?x76 ?x82)))
 (let ((?x1390 (+ ?x504 (* (- 1) (* r00 y00 y00 ?x82 ?x82)) (* (- 1) (* y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x1403 (* (- 1) (* r00 y00 y00 ?x76)) ?x1411 ?x681 ?x1460 ?x772 ?x1327 (* (- 1) (* q00 y00 y00 y00 ?x76)) (* (- 1) (* q00 y00 y00 y00 ?x82 ?x82)))))
 (let (($x994 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x716 (and (= (+ y00 (* (- 1) y)) 0) $x994 (not (= ?x1390 0)))))
 (rewrite (= $x716 $x1662)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1127 (exists ((q Int) (r Int) (y Int) )(! (let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x235 (* q00 y00 y00 y00 ?x82 ?x82)))
 (let ((?x76 (+ 1 q)))
 (let ((?x311 (* q00 y00 y00 y00 ?x76)))
 (let ((?x960 (* ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1381 (* r00 y00 y00 ?x76)))
 (let ((?x1401 (* y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x968 (* r00 y00 y00 ?x82 ?x82)))
 (let ((?x241 (+ (* (- 1) (* y00 y00 ?x76 ?x82)) ?x968 ?x1401 (* (- 1) (* y00 y00 ?x82 ?x82 ?x82)) ?x1381 (* (- 1) (* y00 y00 y00 ?x76 ?x82 ?x82)) (* (- 1) (* r00 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x960 (* (- 1) (* y00 y00 y00 ?x76 ?x76)) (* (- 1) (* q00 y00 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x311 ?x235)))
 (let (($x994 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x74 y) 0) $x994 (not (= ?x241 0)))))))))))))) :qid k!29))
 ))
 (let ((?x502 (lambda ((q Int) (r Int) (y Int) )(let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x235 (* q00 y00 y00 y00 ?x82 ?x82)))
 (let ((?x76 (+ 1 q)))
 (let ((?x1327 (* q00 y00 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x772 (* y00 y00 y00 ?x76 ?x76)))
 (let ((?x960 (* ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1460 (* (- 1) ?x960)))
 (let ((?x681 (* r00 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x1411 (* y00 y00 y00 ?x76 ?x82 ?x82)))
 (let ((?x1403 (* y00 y00 ?x82 ?x82 ?x82)))
 (let ((?x504 (* y00 y00 ?x76 ?x82)))
 (let ((?x1390 (+ ?x504 (* (- 1) (* r00 y00 y00 ?x82 ?x82)) (* (- 1) (* y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x1403 (* (- 1) (* r00 y00 y00 ?x76)) ?x1411 ?x681 ?x1460 ?x772 ?x1327 (* (- 1) (* q00 y00 y00 y00 ?x76)) (* (- 1) ?x235))))
 (let (($x994 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x716 (and (= (+ y00 (* (- 1) y)) 0) $x994 (not (= ?x1390 0)))))
 (let ((?x311 (* q00 y00 y00 y00 ?x76)))
 (let ((?x1381 (* r00 y00 y00 ?x76)))
 (let ((?x1401 (* y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x968 (* r00 y00 y00 ?x82 ?x82)))
 (let ((?x241 (+ (* (- 1) ?x504) ?x968 ?x1401 (* (- 1) ?x1403) ?x1381 (* (- 1) ?x1411) (* (- 1) ?x681) ?x960 (* (- 1) ?x772) (* (- 1) ?x1327) ?x311 ?x235)))
 (let (($x956 (and (= (+ ?x74 y) 0) $x994 (not (= ?x241 0)))))
 (rewrite (= $x956 $x716))))))))))))))))))))))))
 ))
 (let (($x69 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x47 (+ (* (- 1) ?x42 ?x43 y00 y00) (* ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00))))
 (let ((?x51 (+ (- ?x47 (* ?x43 ?x43 ?x43 y00 y00)) (* ?x42 r00 y00 y00))))
 (let ((?x55 (- (- ?x51 (* ?x42 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 r00))))
 (let ((?x60 (- (+ ?x55 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43)) (* ?x42 ?x42 y00 y00 y00))))
 (let ((?x64 (+ (- ?x60 (* ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00)) (* ?x42 q00 y00 y00 y00) (* q00 ?x43 ?x43 y00 y00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0))))))))))) :qid k!29))
 ))
 (let ((?x1153 (lambda ((q Int) (r Int) (y Int) )(let ((?x74 (* (- 1) y00)))
 (let ((?x82 (+ r ?x74)))
 (let ((?x235 (* q00 y00 y00 y00 ?x82 ?x82)))
 (let ((?x76 (+ 1 q)))
 (let ((?x311 (* q00 y00 y00 y00 ?x76)))
 (let ((?x960 (* ?x76 ?x76 ?x82 ?x82 ?x82 ?x82)))
 (let ((?x1381 (* r00 y00 y00 ?x76)))
 (let ((?x1401 (* y00 ?x76 ?x76 ?x76 ?x82 ?x82 ?x82)))
 (let ((?x968 (* r00 y00 y00 ?x82 ?x82)))
 (let ((?x241 (+ (* (- 1) (* y00 y00 ?x76 ?x82)) ?x968 ?x1401 (* (- 1) (* y00 y00 ?x82 ?x82 ?x82)) ?x1381 (* (- 1) (* y00 y00 y00 ?x76 ?x82 ?x82)) (* (- 1) (* r00 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x960 (* (- 1) (* y00 y00 y00 ?x76 ?x76)) (* (- 1) (* q00 y00 ?x76 ?x76 ?x82 ?x82 ?x82)) ?x311 ?x235)))
 (let (($x994 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x956 (and (= (+ ?x74 y) 0) $x994 (not (= ?x241 0)))))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x47 (+ (* (- 1) ?x42 ?x43 y00 y00) (* ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x43 ?x43 ?x43 y00))))
 (let ((?x51 (+ (- ?x47 (* ?x43 ?x43 ?x43 y00 y00)) (* ?x42 r00 y00 y00))))
 (let ((?x55 (- (- ?x51 (* ?x42 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x43 ?x43 ?x43 r00))))
 (let ((?x60 (- (+ ?x55 (* ?x42 ?x42 ?x43 ?x43 ?x43 ?x43)) (* ?x42 ?x42 y00 y00 y00))))
 (let ((?x64 (+ (- ?x60 (* ?x42 ?x42 q00 ?x43 ?x43 ?x43 y00)) (* ?x42 q00 y00 y00 y00) (* q00 ?x43 ?x43 y00 y00 y00))))
 (let (($x68 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0))))))
 (rewrite (= $x68 $x956)))))))))))))))))))))))
 ))
 (let ((@x70 (asserted $x69)))
 (let ((@x804 (mp (mp @x70 (quant-intro (proof-bind ?x1153) (= $x69 $x1127)) $x1127) (rewrite (= $x1127 $x1127)) $x1127)))
 (let ((@x391 (mp (mp @x804 (quant-intro (proof-bind ?x502) (= $x1127 $x792)) $x792) (quant-intro (proof-bind ?x1328) (= $x792 $x1323)) $x1323)))
 (let ((@x355 (mp (mp~ @x391 (sk (~ $x1323 $x863)) $x863) (rewrite (= $x863 $x554)) $x554)))
 (let ((@x1240 (and-elim @x355 $x544)))
 (let ((@x267 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x544) $x999)) @x1240 $x999)))
 (let (($x1033 (>= ?x543 0)))
 (let ((@x821 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x544) $x1033)) @x1240 $x1033)))
 (let (($x535 (<= ?x781 0)))
 (let ((@x190 (and-elim @x355 $x1270)))
 (let ((@x236 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1270) $x535)) @x190 $x535)))
 (let (($x584 (>= ?x781 0)))
 (let ((@x1382 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1270) $x584)) @x190 $x584)))
 (let (($x1125 (not (<= ?x342 0))))
 (let (($x982 (>= ?x342 0)))
 (let ((@x290 ((_ th-lemma arith) (hypothesis (not $x982)) @x1382 @x236 @x1382 @x236 @x821 @x267 false)))
 (let ((@x232 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x343 $x1125 (not $x982))) (and-elim @x355 $x353) (or $x1125 (not $x982)))))
 ((_ th-lemma arith) (unit-resolution @x232 (lemma @x290 $x982) $x1125) @x1382 @x236 @x1382 @x236 @x821 @x267 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        14
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             550
 :arith-nonlinear-bounds    10
 :arith-nonlinear-horner    10
 :arith-num-rows            5
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 85
 :arith-tableau-max-rows    5
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.75
 :memory                    3.25
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1287195
 :num-checks                1
 :propagations              6
 :rlimit-count              8352
 :time                      0.01
 :total-time                0.02)
