unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x219 (* (- 1) k!2)))
 (let ((?x96 (+ (* 3 (* n!0 n!0)) ?x219 (* 3 n!0))))
 (let (($x213 (<= ?x96 (- 1))))
 (let (($x330 (= ?x96 (- 1))))
 (let ((?x102 (+ k!2 c!3)))
 (let ((?x474 (+ k!2 m!1)))
 (let ((?x204 (+ 6 m!1)))
 (let ((?x231 (+ 1 n!0)))
 (let ((?x378 (* (- 3) (* ?x231 ?x231 ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x102 ?x102 ?x102))))
 (let ((?x516 (+ (* ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x474 ?x102 ?x102 ?x102) ?x378 (* 3 (* ?x231 ?x231 ?x231 ?x204 ?x474 ?x474 ?x102 ?x102 ?x102)) (* 3 (* ?x231 ?x231 ?x204 ?x474 ?x474 ?x102 ?x102 ?x102)) (* (- 1) (* ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x102 ?x102 ?x102)) (* (- 3) (* ?x231 ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x102 ?x102 ?x102)) (* ?x231 ?x204 ?x474 ?x474 ?x102 ?x102 ?x102) (* (- 1) (* ?x231 ?x204 ?x474 ?x474 ?x474 ?x102 ?x102 ?x102)))))
 (let (($x128 (= ?x516 0)))
 (let (($x415 (not $x128)))
 (let ((?x243 (* k!2 n!0)))
 (let ((?x512 (+ ?x243 ?x219 (* (- 3) c!3) (* 2 n!0))))
 (let (($x425 (= ?x512 (- 1))))
 (let ((?x197 (* (- 9) n!0)))
 (let ((?x195 (* 18 c!3)))
 (let ((?x198 (* 5 k!2)))
 (let ((?x176 (* (- 1) (* k!2 k!2))))
 (let ((?x182 (* 9 (* c!3 n!0))))
 (let ((?x163 (+ ?x182 ?x176 ?x198 ?x195 ?x197)))
 (let (($x207 (= ?x163 4)))
 (let ((?x190 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x172 (= ?x190 (- 6))))
 (let (($x174 (and $x172 $x207 $x425 $x330 $x415)))
 (let ((?x229 (+ c!3 k!2)))
 (let ((?x233 (* 3 (* ?x231 ?x231 ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x229 ?x229 ?x229))))
 (let ((?x142 (+ ?x233 (* (- 3) (* ?x231 ?x231 ?x231 ?x204 ?x474 ?x474 ?x229 ?x229 ?x229)) (* ?x231 ?x204 ?x474 ?x474 ?x474 ?x229 ?x229 ?x229) (* ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x229 ?x229 ?x229) (* (- 3) (* ?x231 ?x231 ?x204 ?x474 ?x474 ?x229 ?x229 ?x229)) (* (- 1) (* ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x474 ?x229 ?x229 ?x229)) (* (- 1) (* ?x231 ?x204 ?x474 ?x474 ?x229 ?x229 ?x229)) (* 3 (* ?x231 ?x231 ?x231 ?x231 ?x204 ?x204 ?x474 ?x229 ?x229 ?x229)))))
 (let (($x256 (and (= (+ m!1 (* (- 6) n!0)) 6) (= (+ ?x195 ?x198 ?x197 ?x176 ?x182) 4) (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) ?x243)) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x142 0)))))
 (let (($x119 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x309 (+ 1 n)))
 (let ((?x550 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x563 (* (- 1) (* ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x486 (* (- 1) (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x344 (* (- 3) (* ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x420 (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x316 (* ?x309 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x371 (* (- 3) (* ?x309 ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x106 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 $x208 $x260 $x298 (not (= (+ ?x106 ?x371 ?x316 ?x420 ?x344 ?x486 ?x563 ?x550) 0)))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x228 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x309 (+ 1 n)))
 (let ((?x316 (* ?x309 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x563 (* (- 1) (* ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x486 (* (- 1) (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x420 (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x344 (* (- 3) (* ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x550 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x371 (* (- 3) (* ?x309 ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x106 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let (($x214 (not (= (+ ?x106 ?x371 ?x550 ?x344 ?x420 ?x486 ?x563 ?x316) 0))))
 (let (($x201 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x541 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x541 $x201 $x214)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x566 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x309 (+ 1 n)))
 (let ((?x550 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x563 (* (- 1) (* ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x486 (* (- 1) (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x344 (* (- 3) (* ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x420 (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x316 (* ?x309 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x371 (* (- 3) (* ?x309 ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x106 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let (($x298 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x260 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x208 (= (+ ?x40 ?x44 ?x210 ?x211 (* 9 (* c n))) 4)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x230 (and $x124 $x208 $x260 $x298 (not (= (+ ?x106 ?x371 ?x316 ?x420 ?x344 ?x486 ?x563 ?x550) 0)))))
 (let (($x214 (not (= (+ ?x106 ?x371 ?x550 ?x344 ?x420 ?x486 ?x563 ?x316) 0))))
 (let (($x201 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x541 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x249 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x541 $x201 $x214)))
 (rewrite (= $x249 $x230)))))))))))))))))))))))))))))
 ))
 (let (($x215 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x309 (+ 1 n)))
 (let ((?x316 (* ?x309 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x563 (* (- 1) (* ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x486 (* (- 1) (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x420 (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x344 (* (- 3) (* ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x550 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x371 (* (- 3) (* ?x309 ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x106 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let (($x214 (not (= (+ ?x106 ?x371 ?x550 ?x344 ?x420 ?x486 ?x563 ?x316) 0))))
 (let (($x201 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x130 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x285 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (and $x124 (= ?x285 (- 4)) $x130 $x201 $x214)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x240 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x309 (+ 1 n)))
 (let ((?x316 (* ?x309 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x563 (* (- 1) (* ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x486 (* (- 1) (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x420 (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x344 (* (- 3) (* ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x550 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x371 (* (- 3) (* ?x309 ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x106 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let (($x214 (not (= (+ ?x106 ?x371 ?x550 ?x344 ?x420 ?x486 ?x563 ?x316) 0))))
 (let (($x201 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x541 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x211 (* (- 1) ?x49)))
 (let ((?x210 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x249 (and $x124 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x210 ?x211) 4) $x541 $x201 $x214)))
 (let (($x130 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x285 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x105 (and $x124 (= ?x285 (- 4)) $x130 $x201 $x214)))
 (rewrite (= $x105 $x249)))))))))))))))))))))))))))))
 ))
 (let (($x91 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x69 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x74 (- (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71) (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x76 (+ ?x74 (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x80 (+ (- ?x76 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71)) (* ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x84 (- (- ?x80 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71))))
 (let (($x88 (not (= (+ ?x84 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71)) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x88)))))))))))))))))) :qid k!34))
 ))
 (let ((?x95 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x68 (+ c k)))
 (let ((?x69 (+ k m)))
 (let ((?x306 (+ 6 m)))
 (let ((?x309 (+ 1 n)))
 (let ((?x316 (* ?x309 ?x306 ?x69 ?x69 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x563 (* (- 1) (* ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x486 (* (- 1) (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x420 (* ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68)))
 (let ((?x344 (* (- 3) (* ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x550 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x371 (* (- 3) (* ?x309 ?x309 ?x309 ?x306 ?x69 ?x69 ?x68 ?x68 ?x68))))
 (let ((?x106 (* 3 (* ?x309 ?x309 ?x309 ?x309 ?x309 ?x306 ?x306 ?x69 ?x68 ?x68 ?x68))))
 (let (($x214 (not (= (+ ?x106 ?x371 ?x550 ?x344 ?x420 ?x486 ?x563 ?x316) 0))))
 (let (($x201 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x130 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x285 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x124 (= (+ m (* (- 6) n)) 6)))
 (let (($x105 (and $x124 (= ?x285 (- 4)) $x130 $x201 $x214)))
 (let ((?x71 (+ n 1)))
 (let ((?x70 (+ m 6)))
 (let ((?x74 (- (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71) (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x76 (+ ?x74 (* 3 ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71))))
 (let ((?x80 (+ (- ?x76 (* 3 ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71 ?x71)) (* ?x68 ?x68 ?x68 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x84 (- (- ?x80 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71)) (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x70 ?x71))))
 (let (($x88 (not (= (+ ?x84 (* ?x68 ?x68 ?x68 ?x69 ?x69 ?x69 ?x70 ?x71)) 0))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x90 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or $x88))))
 (rewrite (= $x90 $x105))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x92 (asserted $x91)))
 (let ((@x353 (mp (mp @x92 (quant-intro (proof-bind ?x95) (= $x91 $x215)) $x215) (rewrite (= $x215 $x215)) $x215)))
 (let ((@x348 (mp (mp @x353 (quant-intro (proof-bind ?x240) (= $x215 $x228)) $x228) (quant-intro (proof-bind ?x566) (= $x228 $x119)) $x119)))
 (let ((@x441 (mp (mp~ @x348 (sk (~ $x119 $x256)) $x256) (rewrite (= $x256 $x174)) $x174)))
 (let ((@x440 (and-elim @x441 $x330)))
 (let ((@x127 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x330) $x213)) @x440 $x213)))
 (let (($x159 (>= ?x96 (- 1))))
 (let ((@x554 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x330) $x159)) @x440 $x159)))
 (let (($x335 (<= ?x190 (- 6))))
 (let ((@x433 (and-elim @x441 $x172)))
 (let ((@x431 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x172) $x335)) @x433 $x335)))
 (let (($x139 (>= ?x190 (- 6))))
 (let ((@x166 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x172) $x139)) @x433 $x139)))
 (let (($x149 (<= ?x163 4)))
 (let ((@x343 (and-elim @x441 $x207)))
 (let ((@x342 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x207) $x149)) @x343 $x149)))
 (let (($x171 (>= ?x163 4)))
 (let ((@x192 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x207) $x171)) @x343 $x171)))
 (let (($x307 (<= ?x512 (- 1))))
 (let ((@x334 (and-elim @x441 $x425)))
 (let ((@x253 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x425) $x307)) @x334 $x307)))
 (let (($x336 (>= ?x512 (- 1))))
 (let ((@x108 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x425) $x336)) @x334 $x336)))
 (let (($x135 (not (<= ?x516 0))))
 (let (($x491 (>= ?x516 0)))
 (let ((@x428 ((_ th-lemma arith) (hypothesis (not $x491)) @x554 @x127 @x108 @x253 @x554 @x127 @x166 @x431 @x554 @x127 @x192 @x342 @x554 @x127 @x166 @x431 @x554 @x127 false)))
 (let ((@x451 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x128 $x135 (not $x491))) (and-elim @x441 $x415) (or $x135 (not $x491)))))
 ((_ th-lemma arith) (unit-resolution @x451 (lemma @x428 $x491) $x135) @x554 @x127 @x108 @x253 @x554 @x127 @x166 @x431 @x554 @x127 @x192 @x342 @x554 @x127 @x166 @x431 @x554 @x127 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        11
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           1
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             185
 :arith-nonlinear-bounds    3
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             1
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 37
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.62
 :memory                    3.14
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1865420
 :num-checks                1
 :propagations              11
 :rlimit-count              16707
 :time                      0.02
 :total-time                0.02)
