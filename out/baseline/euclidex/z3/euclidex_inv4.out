unsat
((set-logic NIA)
(declare-fun p!5 () Int)
(declare-fun a!4 () Int)
(declare-fun r!1 () Int)
(declare-fun s!0 () Int)
(declare-fun q!3 () Int)
(declare-fun b!2 () Int)
(proof
(let ((?x436 (* (- 1) (* r00 b00 p!5))))
 (let ((?x344 (* q00 r00 a!4)))
 (let ((?x211 (* p00 b00 r!1)))
 (let ((?x435 (* (- 1) (* p00 s00 a!4))))
 (let ((?x431 (* (- 1) (* q00 a00 r!1))))
 (let ((?x104 (* s00 a00 p!5)))
 (let ((?x423 (+ ?x104 ?x431 ?x435 ?x211 ?x344 ?x436)))
 (let (($x407 (<= ?x423 0)))
 (let (($x425 (= ?x423 0)))
 (let ((?x418 (* q00 a00 s!0)))
 (let ((?x369 (* r00 b00 q!3)))
 (let ((?x296 (* p00 s00 b!2)))
 (let ((?x483 (+ ?x104 ?x431 ?x435 ?x211 (* (- 1) (* q00 r00 b!2)) ?x296 ?x344 (* (- 1) (* p00 b00 s!0)) ?x436 ?x369 (* (- 1) (* s00 a00 q!3)) ?x418)))
 (let (($x484 (= ?x483 0)))
 (let (($x489 (not $x484)))
 (let (($x437 (not $x425)))
 (let (($x464 (or $x437 $x489)))
 (let ((?x370 (* s00 a00 q!3)))
 (let ((?x345 (* p00 b00 s!0)))
 (let ((?x288 (* q00 r00 b!2)))
 (let ((?x419 (+ ?x288 (* (- 1) ?x296) ?x345 (* (- 1) ?x369) ?x370 (* (- 1) ?x418))))
 (let (($x455 (= ?x419 0)))
 (let ((?x121 (* q00 a00)))
 (let ((?x265 (+ ?x121 (* (- 1) (* p00 b00)) (* b!2 p!5) (* (- 1) (* q!3 a!4)))))
 (let ((?x117 (* s00 a00)))
 (let ((?x399 (+ ?x117 (* (- 1) (* r00 b00)) (* r!1 b!2) (* (- 1) (* s!0 a!4)))))
 (let ((?x41 (* q00 r00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x490 (and (= (+ ?x37 ?x216 (* (- 1) (* s!0 p!5)) (* r!1 q!3)) 0) (= ?x399 0) (= ?x265 0) $x425 $x455 $x464)))
 (let ((?x331 (* (- 1) (* s!0 q00 a00))))
 (let ((?x209 (* q!3 s00 a00)))
 (let ((?x337 (* (- 1) (* q!3 r00 b00))))
 (let ((?x198 (* s!0 p00 b00)))
 (let ((?x146 (* r!1 q00 a00)))
 (let ((?x162 (* (- 1) (* p!5 s00 a00))))
 (let ((?x334 (* (- 1) (* r!1 p00 b00))))
 (let ((?x355 (* p!5 r00 b00)))
 (let ((?x266 (* (- 1) (* b!2 p00 s00))))
 (let ((?x301 (* b!2 q00 r00)))
 (let ((?x354 (* (- 1) (* a!4 q00 r00))))
 (let ((?x330 (* a!4 p00 s00)))
 (let (($x268 (= (+ ?x330 ?x354 ?x301 ?x266 ?x355 ?x334 ?x162 ?x146 ?x198 ?x337 ?x209 ?x331) 0)))
 (let (($x300 (= (+ ?x330 ?x354 ?x355 ?x334 ?x162 ?x146) 0)))
 (let ((?x122 (* p00 b00)))
 (let ((?x165 (* (- 1) ?x121)))
 (let ((?x135 (* r00 b00)))
 (let ((?x124 (* (- 1) ?x117)))
 (let (($x195 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x106 (and $x195 (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x124 ?x135) 0) (= (+ (* a!4 q!3) ?x165 ?x122 (* (- 1) (* p!5 b!2))) 0) $x300 (= (+ ?x301 ?x266 ?x198 ?x337 ?x209 ?x331) 0) (or (not $x300) (not $x268)))))
 (let (($x470 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x291 (* (- 1) (* s q00 a00))))
 (let ((?x274 (* q s00 a00)))
 (let ((?x249 (* (- 1) (* q r00 b00))))
 (let ((?x239 (* s p00 b00)))
 (let ((?x210 (* r q00 a00)))
 (let ((?x232 (* (- 1) (* p s00 a00))))
 (let ((?x231 (* (- 1) (* r p00 b00))))
 (let ((?x176 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x263 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x230 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let (($x467 (= (+ ?x63 ?x230 ?x72 ?x263 ?x176 ?x231 ?x232 ?x210 ?x239 ?x249 ?x274 ?x291) 0)))
 (let (($x234 (= (+ ?x63 ?x230 ?x176 ?x231 ?x232 ?x210) 0)))
 (let (($x246 (not $x234)))
 (let (($x302 (= (+ ?x72 ?x263 ?x239 ?x249 ?x274 ?x291) 0)))
 (let ((?x122 (* p00 b00)))
 (let ((?x121 (* q00 a00)))
 (let ((?x165 (* (- 1) ?x121)))
 (let (($x168 (= (+ (* a q) ?x165 ?x122 (* (- 1) (* p b))) 0)))
 (let ((?x135 (* r00 b00)))
 (let ((?x117 (* s00 a00)))
 (let ((?x124 (* (- 1) ?x117)))
 (let ((?x49 (* a s)))
 (let (($x150 (= (+ ?x49 (* (- 1) (* b r)) ?x124 ?x135) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x145 (= (+ ?x33 ?x126 ?x41 (* (- 1) (* q r))) 0)))
 (and $x145 $x150 $x168 $x234 $x302 (or $x246 (not $x467))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x244 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x139 (+ r (* (- 1) s))))
 (let ((?x206 (* a00 q00 ?x139)))
 (let ((?x434 (+ a (* (- 1) b))))
 (let ((?x348 (* p00 s00 ?x434)))
 (let ((?x243 (* (- 1) q)))
 (let ((?x358 (+ p ?x243)))
 (let ((?x327 (* b00 r00 ?x358)))
 (let ((?x227 (+ ?x327 ?x348 (* (- 1) (* b00 p00 ?x139)) (* (- 1) (* q00 r00 ?x434)) (* (- 1) (* a00 s00 ?x358)) ?x206)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x309 (* p00 s00 a)))
 (let ((?x404 (* b00 r00 p)))
 (let ((?x411 (+ ?x404 ?x309 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x346 (= ?x411 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x361 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x212 (= ?x361 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x255 (* q a)))
 (let (($x280 (= (+ ?x255 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x185 (* r b)))
 (let (($x351 (= (+ ?x185 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x191 (* r q)))
 (and (= (+ ?x191 (* (- 1) (* s p)) ?x37 ?x216) 0) $x351 $x280 $x346 $x212 (or (not $x346) (not (= ?x227 0)))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x284 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x291 (* (- 1) (* s q00 a00))))
 (let ((?x274 (* q s00 a00)))
 (let ((?x249 (* (- 1) (* q r00 b00))))
 (let ((?x239 (* s p00 b00)))
 (let ((?x210 (* r q00 a00)))
 (let ((?x232 (* (- 1) (* p s00 a00))))
 (let ((?x231 (* (- 1) (* r p00 b00))))
 (let ((?x176 (* p r00 b00)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x263 (* (- 1) ?x76)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x230 (* (- 1) ?x66)))
 (let ((?x63 (* a p00 s00)))
 (let (($x467 (= (+ ?x63 ?x230 ?x72 ?x263 ?x176 ?x231 ?x232 ?x210 ?x239 ?x249 ?x274 ?x291) 0)))
 (let (($x234 (= (+ ?x63 ?x230 ?x176 ?x231 ?x232 ?x210) 0)))
 (let (($x246 (not $x234)))
 (let (($x302 (= (+ ?x72 ?x263 ?x239 ?x249 ?x274 ?x291) 0)))
 (let ((?x122 (* p00 b00)))
 (let ((?x121 (* q00 a00)))
 (let ((?x165 (* (- 1) ?x121)))
 (let (($x168 (= (+ (* a q) ?x165 ?x122 (* (- 1) (* p b))) 0)))
 (let ((?x135 (* r00 b00)))
 (let ((?x117 (* s00 a00)))
 (let ((?x124 (* (- 1) ?x117)))
 (let ((?x49 (* a s)))
 (let (($x150 (= (+ ?x49 (* (- 1) (* b r)) ?x124 ?x135) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x145 (= (+ ?x33 ?x126 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x170 (and $x145 $x150 $x168 $x234 $x302 (or $x246 (not $x467)))))
 (let ((?x139 (+ r (* (- 1) s))))
 (let ((?x206 (* a00 q00 ?x139)))
 (let ((?x434 (+ a (* (- 1) b))))
 (let ((?x348 (* p00 s00 ?x434)))
 (let ((?x243 (* (- 1) q)))
 (let ((?x358 (+ p ?x243)))
 (let ((?x327 (* b00 r00 ?x358)))
 (let ((?x227 (+ ?x327 ?x348 (* (- 1) (* b00 p00 ?x139)) (* (- 1) (* q00 r00 ?x434)) (* (- 1) (* a00 s00 ?x358)) ?x206)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x309 (* p00 s00 a)))
 (let ((?x404 (* b00 r00 p)))
 (let ((?x411 (+ ?x404 ?x309 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x346 (= ?x411 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x361 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x212 (= ?x361 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x255 (* q a)))
 (let (($x280 (= (+ ?x255 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x185 (* r b)))
 (let (($x351 (= (+ ?x185 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x299 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x429 (and $x299 $x351 $x280 $x346 $x212 (or (not $x346) (not (= ?x227 0))))))
 (rewrite (= $x429 $x170))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x317 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x243 (* (- 1) q)))
 (let ((?x358 (+ p ?x243)))
 (let ((?x183 (* a00 s00 ?x358)))
 (let ((?x434 (+ a (* (- 1) b))))
 (let ((?x173 (* q00 r00 ?x434)))
 (let ((?x139 (+ r (* (- 1) s))))
 (let ((?x353 (* b00 p00 ?x139)))
 (let ((?x226 (+ (* (- 1) (* b00 r00 ?x358)) (* (- 1) (* p00 s00 ?x434)) ?x353 ?x173 ?x183 (* (- 1) (* a00 q00 ?x139)))))
 (let ((?x414 (* a00 s00 p)))
 (let ((?x410 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x250 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x410 ?x414 (* (- 1) (* a00 q00 r)))))
 (let (($x373 (= ?x250 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x361 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x212 (= ?x361 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x321 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x224 (* s a)))
 (let (($x310 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x224 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let ((?x270 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x270 ?x126 ?x41) 0) $x310 $x321 $x373 $x212 (or (not $x373) (not (= ?x226 0)))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x286 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x139 (+ r (* (- 1) s))))
 (let ((?x206 (* a00 q00 ?x139)))
 (let ((?x434 (+ a (* (- 1) b))))
 (let ((?x348 (* p00 s00 ?x434)))
 (let ((?x243 (* (- 1) q)))
 (let ((?x358 (+ p ?x243)))
 (let ((?x327 (* b00 r00 ?x358)))
 (let ((?x227 (+ ?x327 ?x348 (* (- 1) (* b00 p00 ?x139)) (* (- 1) (* q00 r00 ?x434)) (* (- 1) (* a00 s00 ?x358)) ?x206)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x309 (* p00 s00 a)))
 (let ((?x404 (* b00 r00 p)))
 (let ((?x411 (+ ?x404 ?x309 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x346 (= ?x411 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x361 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x212 (= ?x361 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x255 (* q a)))
 (let (($x280 (= (+ ?x255 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x185 (* r b)))
 (let (($x351 (= (+ ?x185 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x216 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x191 (* r q)))
 (let (($x429 (and (= (+ ?x191 (* (- 1) (* s p)) ?x37 ?x216) 0) $x351 $x280 $x346 $x212 (or (not $x346) (not (= ?x227 0))))))
 (let ((?x183 (* a00 s00 ?x358)))
 (let ((?x173 (* q00 r00 ?x434)))
 (let ((?x353 (* b00 p00 ?x139)))
 (let (($x236 (= (+ (* (- 1) ?x327) (* (- 1) ?x348) ?x353 ?x173 ?x183 (* (- 1) ?x206)) 0)))
 (let ((?x414 (* a00 s00 p)))
 (let ((?x410 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x373 (= (+ (* (- 1) ?x404) (* (- 1) ?x309) ?x65 ?x410 ?x414 (* (- 1) ?x69)) 0)))
 (let (($x321 (= (+ (* (- 1) ?x255) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x310 (= (+ (* (- 1) ?x185) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x277 (and (= (+ (* (- 1) ?x191) (* s p) (* (- 1) ?x37) ?x41) 0) $x310 $x321 $x373 $x212 (or (not $x373) (not $x236)))))
 (rewrite (= $x277 $x429)))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x101 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x71 (= (- ?x68 ?x69) 0)))
 (let ((?x88 (- (* (- 1) b00 (- p q) r00) (* (- a b) p00 s00))))
 (let ((?x93 (+ ?x88 (* b00 p00 (- r s)) (* (- a b) q00 r00) (* a00 (- p q) s00))))
 (let (($x99 (or (not (= (- ?x93 (* a00 q00 (- r s))) 0)) (not $x71))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) $x71 (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) $x99))))))))))))))))))) :qid k!38))
 ))
 (let ((?x421 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x243 (* (- 1) q)))
 (let ((?x358 (+ p ?x243)))
 (let ((?x183 (* a00 s00 ?x358)))
 (let ((?x434 (+ a (* (- 1) b))))
 (let ((?x173 (* q00 r00 ?x434)))
 (let ((?x139 (+ r (* (- 1) s))))
 (let ((?x353 (* b00 p00 ?x139)))
 (let ((?x226 (+ (* (- 1) (* b00 r00 ?x358)) (* (- 1) (* p00 s00 ?x434)) ?x353 ?x173 ?x183 (* (- 1) (* a00 q00 ?x139)))))
 (let ((?x414 (* a00 s00 p)))
 (let ((?x410 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x250 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x410 ?x414 (* (- 1) (* a00 q00 r)))))
 (let (($x373 (= ?x250 0)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x361 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x212 (= ?x361 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x321 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x224 (* s a)))
 (let (($x310 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x224 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x126 (* (- 1) ?x37)))
 (let ((?x270 (* s p)))
 (let (($x277 (and (= (+ (* (- 1) (* r q)) ?x270 ?x126 ?x41) 0) $x310 $x321 $x373 $x212 (or (not $x373) (not (= ?x226 0))))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x71 (= (- ?x68 ?x69) 0)))
 (let ((?x88 (- (* (- 1) b00 (- p q) r00) (* (- a b) p00 s00))))
 (let ((?x93 (+ ?x88 (* b00 p00 (- r s)) (* (- a b) q00 r00) (* a00 (- p q) s00))))
 (let (($x99 (or (not (= (- ?x93 (* a00 q00 (- r s))) 0)) (not $x71))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x100 (and $x44 $x53 $x61 $x71 (= (- ?x80 ?x81) 0) $x99)))
 (rewrite (= $x100 $x277))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x102 (asserted $x101)))
 (let ((@x256 (mp (mp @x102 (quant-intro (proof-bind ?x421) (= $x101 $x317)) $x317) (rewrite (= $x317 $x317)) $x317)))
 (let ((@x275 (mp (mp @x256 (quant-intro (proof-bind ?x286) (= $x317 $x244)) $x244) (quant-intro (proof-bind ?x284) (= $x244 $x470)) $x470)))
 (let ((@x469 (mp (mp~ @x275 (sk (~ $x470 $x106)) $x106) (rewrite (= $x106 $x490)) $x490)))
 (let ((@x201 (and-elim @x469 $x425)))
 (let (($x424 (not (<= ?x483 0))))
 (let (($x179 (>= ?x483 0)))
 (let (($x290 (>= ?x423 0)))
 (let (($x293 (<= ?x419 0)))
 (let ((@x120 (and-elim @x469 $x455)))
 (let ((@x400 ((_ th-lemma arith farkas -1 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x455) $x293)) @x120 $x293) (hypothesis (not $x179)) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x437 $x290)) @x201 $x290) false)))
 (let ((@x379 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x484 $x424 (not $x179))) (unit-resolution (and-elim @x469 $x464) @x201 $x489) (or $x424 (not $x179)))))
 (let (($x174 (>= ?x419 0)))
 ((_ th-lemma arith farkas -1 -1 1) (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x455) $x174)) @x120 $x174) (unit-resolution @x379 (lemma @x400 $x179) $x424) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x437 $x407)) @x201 $x407) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        7
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-num-rows            6
 :arith-pivots              2
 :arith-row-summations      3
 :arith-tableau-max-columns 44
 :arith-tableau-max-rows    6
 :conflicts                 2
 :decisions                 1
 :del-clause                17
 :max-memory                3.56
 :memory                    3.08
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                1092160
 :num-checks                1
 :propagations              12
 :rlimit-count              2654
 :time                      0.01
 :total-time                0.01)
