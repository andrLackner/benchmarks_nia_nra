unsat
((set-logic NIA)
(declare-fun q!3 () Int)
(declare-fun r!1 () Int)
(declare-fun p!5 () Int)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x510 (* r!1 q!3)))
 (let ((?x41 (* q00 r00)))
 (let ((?x314 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x593 (+ ?x37 ?x314 (* (- 1) (* s!0 p!5)) ?x510)))
 (let (($x366 (>= ?x593 0)))
 (let (($x592 (= ?x593 0)))
 (let ((?x492 (* s!0 p!5)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x496 (+ ?x133 ?x41 ?x492 (* (- 1) ?x510))))
 (let ((?x518 (+ p!5 (* (- 1) q!3))))
 (let ((?x176 (+ a!4 (* (- 1) b!2))))
 (let ((?x697 (* (+ (* (- 1) s!0) r!1) ?x176 ?x176 ?x176 ?x518 ?x518 ?x518 ?x518 ?x496 s!0 s!0 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let (($x699 (= ?x697 0)))
 (let ((?x339 (+ (* (- 1) p!5) q!3)))
 (let ((?x337 (+ (* (- 1) a!4) b!2)))
 (let ((?x178 (* (- 1) r!1)))
 (let ((?x364 (+ s!0 ?x178)))
 (let ((?x367 (* ?x364 ?x364 ?x337 ?x337 ?x337 ?x337 ?x337 ?x339 ?x339 ?x339 ?x496 r!1 a!4 a!4 a!4 p!5 p!5 p!5 p!5)))
 (let (($x369 (= ?x367 0)))
 (let (($x368 (not $x369)))
 (let (($x700 (or $x368 (not $x699))))
 (let ((?x358 (+ (* q00 a00 s!0) (* (- 1) (* s00 a00 q!3)) (* r00 b00 q!3) (* (- 1) (* p00 b00 s!0)) (* p00 s00 b!2) (* (- 1) (* q00 r00 b!2)))))
 (let ((?x565 (+ (* q00 r00 a!4) (* (- 1) (* p00 s00 a!4)) (* (- 1) (* r00 b00 p!5)) (* (- 1) (* q00 a00 r!1)) (* s00 a00 p!5) (* p00 b00 r!1))))
 (let ((?x513 (* p!5 b!2)))
 (let ((?x128 (* q00 a00)))
 (let (($x619 (= (+ ?x128 (* (- 1) (* p00 b00)) ?x513 (* (- 1) (* a!4 q!3))) 0)))
 (let ((?x124 (* s00 a00)))
 (let ((?x321 (+ ?x124 (* (- 1) (* r00 b00)) (* r!1 b!2) (* (- 1) (* s!0 a!4)))))
 (let (($x710 (and $x592 (= ?x321 0) $x619 (= ?x565 0) (= ?x358 0) $x700)))
 (let ((?x488 (+ (* p!5 s!0) ?x133 ?x41 (* (- 1) (* q!3 r!1)))))
 (let ((?x516 (* (+ r!1 (* (- 1) s!0)) ?x176 ?x176 ?x176 ?x518 ?x518 ?x518 ?x518 ?x488 s!0 s!0 b!2 b!2 b!2 b!2 b!2 q!3 q!3 q!3)))
 (let ((?x311 (+ ?x178 s!0)))
 (let ((?x524 (* ?x311 ?x311 ?x337 ?x337 ?x337 ?x337 ?x337 ?x339 ?x339 ?x339 ?x488 r!1 a!4 a!4 a!4 p!5 p!5 p!5 p!5)))
 (let ((?x229 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x244 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x159 (= (+ (* a!4 q!3) (* (- 1) ?x128) (* p00 b00) (* (- 1) ?x513)) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let (($x156 (and (= ?x488 0) (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x131 ?x142) 0) $x159 (= ?x244 0) (= ?x229 0) (or (not (= ?x524 0)) (not (= ?x516 0))))))
 (let (($x171 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x612 (* ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x147 s s b b b b b q q q)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x265 (+ ?x253 q)))
 (let ((?x493 (* (- 1) a)))
 (let ((?x489 (+ ?x493 b)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x318 (+ ?x313 s)))
 (let ((?x578 (* ?x318 ?x318 ?x489 ?x489 ?x489 ?x489 ?x489 ?x265 ?x265 ?x265 ?x147 r a a a p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x578 0)) (not (= ?x612 0)))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x296 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x310 s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x275 (+ q ?x253)))
 (let ((?x493 (* (- 1) a)))
 (let ((?x232 (+ b ?x493)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x275 ?x275 ?x275 ?x221 r a a a p p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x302 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x260 (+ ?x280 ?x302 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x530 (* q a)))
 (let (($x531 (= (+ ?x530 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x536 (* r b)))
 (let (($x299 (= (+ ?x536 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x231 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (and $x231 $x299 $x531 (= ?x260 0) $x207 $x182))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x177 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x117 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x147 (+ ?x33 ?x133 ?x41 ?x117)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x612 (* ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x147 s s b b b b b q q q)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x265 (+ ?x253 q)))
 (let ((?x493 (* (- 1) a)))
 (let ((?x489 (+ ?x493 b)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x318 (+ ?x313 s)))
 (let ((?x578 (* ?x318 ?x318 ?x489 ?x489 ?x489 ?x489 ?x489 ?x265 ?x265 ?x265 ?x147 r a a a p p p p)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x304 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x309 (= ?x304 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x240 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x241 (= ?x240 0)))
 (let ((?x129 (* p00 b00)))
 (let ((?x128 (* q00 a00)))
 (let ((?x172 (* (- 1) ?x128)))
 (let (($x175 (= (+ (* a q) ?x172 ?x129 (* (- 1) (* p b))) 0)))
 (let ((?x142 (* r00 b00)))
 (let ((?x124 (* s00 a00)))
 (let ((?x131 (* (- 1) ?x124)))
 (let ((?x49 (* a s)))
 (let (($x157 (= (+ ?x49 (* (- 1) (* b r)) ?x131 ?x142) 0)))
 (let (($x152 (= ?x147 0)))
 (let (($x629 (and $x152 $x157 $x175 $x241 $x309 (or (not (= ?x578 0)) (not (= ?x612 0))))))
 (let ((?x213 (* ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 (+ (* (- 1) (* ?x252 q)) (* ?x269 s) ?x133 ?x41) s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q ?x253) r)) (* (+ s ?x313) p) ?x133 ?x41)))
 (let ((?x275 (+ q ?x253)))
 (let ((?x232 (+ b ?x493)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x275 ?x275 ?x275 ?x221 r a a a p p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x302 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x260 (+ ?x280 ?x302 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x530 (* q a)))
 (let (($x531 (= (+ ?x530 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x536 (* r b)))
 (let (($x299 (= (+ ?x536 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x231 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x262 (and $x231 $x299 $x531 (= ?x260 0) $x207 $x182)))
 (rewrite (= $x262 $x629))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x234 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x310 s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x275 (+ q ?x253)))
 (let ((?x493 (* (- 1) a)))
 (let ((?x232 (+ b ?x493)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x275 ?x275 ?x275 ?x221 r a a a p p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x323 (* a00 s00 p)))
 (let ((?x504 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x145 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x504 ?x323 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x264 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x273 (* s a)))
 (let (($x251 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x273 ?x51) 0)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x251 $x264 (= ?x145 0) $x207 $x182)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x319 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x310 s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x275 (+ q ?x253)))
 (let ((?x493 (* (- 1) a)))
 (let ((?x232 (+ b ?x493)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x275 ?x275 ?x275 ?x221 r a a a p p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x302 (* p00 s00 a)))
 (let ((?x280 (* b00 r00 p)))
 (let ((?x260 (+ ?x280 ?x302 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let ((?x57 (* b00 p00)))
 (let ((?x530 (* q a)))
 (let (($x531 (= (+ ?x530 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x536 (* r b)))
 (let (($x299 (= (+ ?x536 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x231 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x262 (and $x231 $x299 $x531 (= ?x260 0) $x207 $x182)))
 (let ((?x323 (* a00 s00 p)))
 (let ((?x504 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x261 (= (+ (* (- 1) ?x280) (* (- 1) ?x302) ?x65 ?x504 ?x323 (* (- 1) ?x69)) 0)))
 (let (($x264 (= (+ (* (- 1) ?x530) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x251 (= (+ (* (- 1) ?x536) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x255 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x251 $x264 $x261 $x207 $x182)))
 (rewrite (= $x255 $x262)))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x95 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x97 (- s r)))
 (let ((?x41 (* q00 r00)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) (* p00 s00)) ?x41) ?x102 ?x102 p ?x95 ?x97 ?x97 ?x31 a a a ?x102 ?x102 ?x102 p p p ?x95 ?x95 r)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x92 (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) (* p00 s00)) ?x41) b b ?x86 q s s ?x31 ?x91 ?x91 ?x91 b b b ?x86 ?x86 ?x86 q q ?x84)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x236 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x133 (* (- 1) ?x37)))
 (let ((?x310 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x133 ?x41)))
 (let ((?x269 (+ p (* (- 1) q))))
 (let ((?x334 (+ a (* (- 1) b))))
 (let ((?x250 (* (- 1) s)))
 (let ((?x252 (+ r ?x250)))
 (let ((?x213 (* ?x252 ?x334 ?x334 ?x334 ?x269 ?x269 ?x269 ?x269 ?x310 s s b b b b b q q q)))
 (let ((?x221 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x133 ?x41)))
 (let ((?x253 (* (- 1) p)))
 (let ((?x275 (+ q ?x253)))
 (let ((?x493 (* (- 1) a)))
 (let ((?x232 (+ b ?x493)))
 (let ((?x313 (* (- 1) r)))
 (let ((?x295 (+ s ?x313)))
 (let ((?x122 (* ?x295 ?x295 ?x232 ?x232 ?x232 ?x232 ?x232 ?x275 ?x275 ?x275 ?x221 r a a a p p p p)))
 (let (($x182 (or (not (= ?x122 0)) (not (= ?x213 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x197 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x207 (= ?x197 0)))
 (let ((?x323 (* a00 s00 p)))
 (let ((?x504 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x145 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x504 ?x323 (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x264 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x273 (* s a)))
 (let (($x251 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x273 ?x51) 0)))
 (let (($x255 (and (= (+ (* (- 1) (* r q)) (* s p) ?x133 ?x41) 0) $x251 $x264 (= ?x145 0) $x207 $x182)))
 (let ((?x95 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x31 (- 1)))
 (let ((?x97 (- s r)))
 (let ((?x103 (* (+ (- (+ (* ?x31 ?x95 r) (* p ?x97)) ?x37) ?x41) ?x102 ?x102 p ?x95 ?x97 ?x97 ?x31 a a a ?x102 ?x102 ?x102 p p p ?x95 ?x95 r)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x92 (* (+ (- (+ (* ?x31 q ?x84) (* ?x86 s)) ?x37) ?x41) b b ?x86 q s s ?x31 ?x91 ?x91 ?x91 b b b ?x86 ?x86 ?x86 q q ?x84)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x107 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x92 0)) (not (= ?x103 0))))))
 (rewrite (= $x107 $x255))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x148 (mp (mp @x109 (quant-intro (proof-bind ?x236) (= $x108 $x234)) $x234) (rewrite (= $x234 $x234)) $x234)))
 (let ((@x274 (mp (mp @x148 (quant-intro (proof-bind ?x319) (= $x234 $x296)) $x296) (quant-intro (proof-bind ?x177) (= $x296 $x171)) $x171)))
 (let ((@x709 (mp (mp~ @x274 (sk (~ $x171 $x156)) $x156) (rewrite (= $x156 $x710)) $x710)))
 (let ((@x707 (and-elim @x709 $x592)))
 (let ((@x499 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x592) $x366)) @x707 $x366)))
 (let (($x365 (<= ?x593 0)))
 (let ((@x582 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x592) $x365)) @x707 $x365)))
 (let (($x574 (not (<= ?x367 0))))
 (let (($x554 (>= ?x697 0)))
 (let (($x477 (<= ?x697 0)))
 (let ((@x620 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x699 (not $x477) (not $x554))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x477)) @x582 @x499 false) $x477) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x554)) @x582 @x499 false) $x554) $x699)))
 (let (($x495 (>= ?x367 0)))
 (let ((@x571 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x369 $x574 (not $x495))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x495)) @x582 @x499 false) $x495) (unit-resolution (and-elim @x709 $x700) @x620 $x368) $x574)))
 ((_ th-lemma arith farkas 1 1 1) @x571 @x582 @x499 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             352
 :arith-nonlinear-horner    42
 :arith-num-rows            12
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 51
 :arith-tableau-max-rows    12
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.65
 :memory                    3.16
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1276030
 :num-checks                1
 :propagations              19
 :rlimit-count              8747
 :time                      0.01
 :total-time                0.02)
