unsat
((set-logic NIA)
(declare-fun s!0 () Int)
(declare-fun b!2 () Int)
(declare-fun q!3 () Int)
(declare-fun r!1 () Int)
(declare-fun a!4 () Int)
(declare-fun p!5 () Int)
(proof
(let ((?x1479 (* p00 b00 s!0)))
 (let ((?x1473 (* s00 a00 q!3)))
 (let ((?x365 (* q00 r00 b!2)))
 (let ((?x1499 (+ ?x365 ?x1473 (* (- 1) (* r00 b00 q!3)) ?x1479 (* (- 1) (* p00 s00 b!2)) (* (- 1) (* q00 a00 s!0)))))
 (let (($x1244 (>= ?x1499 0)))
 (let (($x1505 (= ?x1499 0)))
 (let ((?x350 (* (- 1) (* q00 a00 r!1))))
 (let ((?x1308 (* q00 r00 a!4)))
 (let ((?x879 (* (- 1) (* p00 s00 a!4))))
 (let ((?x692 (* p00 b00 r!1)))
 (let ((?x875 (* (- 1) (* r00 b00 p!5))))
 (let ((?x336 (* s00 a00 p!5)))
 (let ((?x351 (+ ?x336 ?x875 ?x692 ?x879 ?x1308 ?x350)))
 (let ((?x1535 (* r!1 q!3 b!2 s!0 s!0 p!5 p!5 p!5)))
 (let ((?x1533 (* (- 1) (* r!1 r!1 r!1 b!2 s!0 a!4 a!4 a!4))))
 (let ((?x1586 (* (- 1) (* q!3 q!3 q!3 a!4 a!4))))
 (let ((?x236 (+ (* r!1 r!1 r!1 r!1 b!2 a!4 a!4 a!4) (* r!1 r!1 r!1 s!0 a!4 a!4 a!4 a!4) (* r!1 r!1 r!1 a!4 p!5 p!5 p!5 p!5) (* (- 1) (* r!1 r!1 r!1 q!3 a!4 p!5 p!5 p!5)) (* (- 1) (* r!1 r!1 r!1 b!2 p!5 p!5 p!5 p!5)) (* r!1 r!1 r!1 q!3 b!2 p!5 p!5 p!5) (* a!4 a!4 p!5 p!5 p!5) ?x1586 (* (- 2) (* r!1 r!1 s!0 a!4 p!5 p!5 p!5 p!5)) (* (- 2) (* r!1 r!1 q!3 b!2 s!0 p!5 p!5 p!5)) (* 2 (* r!1 r!1 q!3 s!0 a!4 p!5 p!5 p!5)) (* 2 (* r!1 r!1 b!2 s!0 p!5 p!5 p!5 p!5)) ?x1533 (* r!1 s!0 s!0 a!4 p!5 p!5 p!5 p!5) ?x1535 (* (- 1) (* r!1 q!3 s!0 s!0 a!4 p!5 p!5 p!5)) (* (- 1) (* r!1 b!2 s!0 s!0 p!5 p!5 p!5 p!5)) (* (- 3) (* q!3 a!4 a!4 p!5 p!5)) (* 3 (* q!3 q!3 a!4 a!4 p!5)) (* (- 1) (* r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4)))))
 (let (($x644 (= (* ?x236 ?x351) 0)))
 (let (($x1667 (not $x644)))
 (let ((?x1489 (* q00 a00 s!0)))
 (let ((?x1484 (* p00 s00 b!2)))
 (let ((?x1476 (* r00 b00 q!3)))
 (let ((?x655 (+ ?x336 (* (- 1) ?x365) ?x875 ?x692 ?x879 ?x1308 (* (- 1) ?x1473) ?x1476 (* (- 1) ?x1479) ?x1484 ?x1489 ?x350)))
 (let ((?x708 (* (- 1) (* b!2 b!2 b!2 b!2 s!0 s!0 s!0 s!0))))
 (let ((?x1412 (* (- 1) (* q!3 q!3 q!3 b!2 b!2))))
 (let ((?x817 (* q!3 q!3 q!3 q!3 b!2 s!0 s!0 s!0)))
 (let ((?x713 (+ ?x817 (* r!1 r!1 r!1 b!2 b!2 b!2 b!2 s!0) (* 9 (* r!1 b!2 b!2 s!0 s!0 s!0 a!4 a!4)) (* 3 (* r!1 r!1 b!2 s!0 s!0 a!4 a!4 a!4)) (* (- 3) (* q!3 q!3 q!3 b!2 s!0 s!0 s!0 p!5)) ?x1586 (* 3 (* r!1 b!2 b!2 b!2 b!2 s!0 s!0 s!0)) ?x1412 ?x708 (* (- 3) (* r!1 b!2 s!0 s!0 s!0 a!4 a!4 a!4)) (* (- 3) (* r!1 r!1 b!2 b!2 b!2 b!2 s!0 s!0)) (* (- 3) (* b!2 b!2 s!0 s!0 s!0 s!0 a!4 a!4)) (* (- 9) (* r!1 r!1 b!2 b!2 s!0 s!0 a!4 a!4)) ?x1533 (* b!2 s!0 s!0 s!0 s!0 a!4 a!4 a!4) ?x1535 (* (- 3) (* r!1 q!3 q!3 b!2 s!0 s!0 p!5 p!5)) (* 3 (* r!1 q!3 q!3 q!3 b!2 s!0 s!0 p!5)) (* (- 3) (* r!1 r!1 r!1 b!2 b!2 b!2 s!0 a!4)) (* 9 (* r!1 r!1 b!2 b!2 b!2 s!0 s!0 a!4)) (* (- 1) (* r!1 q!3 q!3 q!3 q!3 b!2 s!0 s!0)) (* (- 1) (* q!3 b!2 s!0 s!0 s!0 p!5 p!5 p!5)) (* (- 9) (* r!1 b!2 b!2 b!2 s!0 s!0 s!0 a!4)) (* 3 (* q!3 q!3 b!2 s!0 s!0 s!0 p!5 p!5)) (* 3 (* b!2 b!2 b!2 s!0 s!0 s!0 s!0 a!4)) (* 2 (* q!3 q!3 q!3 b!2 a!4)) (* 3 (* r!1 r!1 r!1 b!2 b!2 s!0 a!4 a!4)))))
 (let ((?x289 (* ?x713 ?x655)))
 (let (($x666 (= ?x289 0)))
 (let (($x344 (not $x666)))
 (let (($x598 (or $x344 $x1667)))
 (let (($x940 (= ?x351 0)))
 (let ((?x137 (* q00 a00)))
 (let ((?x1300 (+ ?x137 (* (- 1) (* p00 b00)) (* b!2 p!5) (* (- 1) (* q!3 a!4)))))
 (let ((?x133 (* s00 a00)))
 (let ((?x827 (+ ?x133 (* (- 1) (* r00 b00)) (* (- 1) (* s!0 a!4)) (* r!1 b!2))))
 (let ((?x37 (* p00 s00)))
 (let ((?x1660 (+ ?x37 (* (- 1) (* q00 r00)) (* r!1 q!3) (* (- 1) (* s!0 p!5)))))
 (let (($x685 (and (= ?x1660 0) (= ?x827 0) (= ?x1300 0) $x940 $x1505 $x598)))
 (let ((?x408 (* r!1 q00 a00)))
 (let ((?x1162 (* (- 1) ?x408)))
 (let ((?x381 (* p!5 s00 a00)))
 (let ((?x345 (* r!1 p00 b00)))
 (let ((?x921 (* p!5 r00 b00)))
 (let ((?x1161 (* (- 1) ?x921)))
 (let ((?x1043 (* a!4 q00 r00)))
 (let ((?x1032 (* a!4 p00 s00)))
 (let ((?x734 (* (- 1) ?x1032)))
 (let ((?x880 (* (- 1) (* a!4 a!4 q!3 q!3 q!3))))
 (let ((?x618 (* p!5 p!5 p!5 q!3 b!2 r!1 s!0 s!0)))
 (let ((?x1368 (* (- 1) (* a!4 a!4 a!4 b!2 r!1 r!1 r!1 s!0))))
 (let ((?x1634 (+ (* p!5 p!5 p!5 p!5 a!4 r!1 r!1 r!1) (* (- 1) (* p!5 p!5 p!5 p!5 b!2 r!1 r!1 r!1)) (* (- 1) (* p!5 p!5 p!5 a!4 q!3 r!1 r!1 r!1)) (* p!5 p!5 p!5 q!3 b!2 r!1 r!1 r!1) (* (- 2) (* p!5 p!5 p!5 p!5 a!4 r!1 r!1 s!0)) ?x1368 ?x618 ?x880 (* (- 2) (* p!5 p!5 p!5 q!3 b!2 r!1 r!1 s!0)) (* 2 (* p!5 p!5 p!5 a!4 q!3 r!1 r!1 s!0)) (* 2 (* p!5 p!5 p!5 p!5 b!2 r!1 r!1 s!0)) (* p!5 p!5 p!5 p!5 a!4 r!1 s!0 s!0) (* (- 1) (* p!5 p!5 p!5 p!5 b!2 r!1 s!0 s!0)) (* (- 1) (* p!5 p!5 p!5 a!4 q!3 r!1 s!0 s!0)) (* p!5 p!5 p!5 a!4 a!4) (* (- 3) (* p!5 p!5 a!4 a!4 q!3)) (* 3 (* p!5 a!4 a!4 q!3 q!3)) (* (- 1) (* a!4 a!4 a!4 a!4 r!1 r!1 r!1 r!1)) (* a!4 a!4 a!4 a!4 r!1 r!1 r!1 s!0) (* a!4 a!4 a!4 b!2 r!1 r!1 r!1 r!1))))
 (let ((?x263 (* s!0 q00 a00)))
 (let ((?x992 (* q!3 r00 b00)))
 (let ((?x1541 (* b!2 p00 s00)))
 (let ((?x1606 (+ ?x734 ?x1043 (* (- 1) (* b!2 q00 r00)) ?x1541 ?x1161 ?x345 ?x381 ?x1162 (* (- 1) (* s!0 p00 b00)) ?x992 (* (- 1) (* q!3 s00 a00)) ?x263)))
 (let ((?x1434 (+ (* (- 3) (* a!4 a!4 a!4 b!2 r!1 s!0 s!0 s!0)) (* b!2 b!2 b!2 b!2 r!1 r!1 r!1 s!0) (* (- 3) (* b!2 b!2 b!2 b!2 r!1 r!1 s!0 s!0)) (* (- 3) (* a!4 a!4 b!2 b!2 s!0 s!0 s!0 s!0)) (* 9 (* a!4 a!4 b!2 b!2 r!1 s!0 s!0 s!0)) (* (- 9) (* a!4 a!4 b!2 b!2 r!1 r!1 s!0 s!0)) (* 3 (* a!4 a!4 a!4 b!2 r!1 r!1 s!0 s!0)) ?x1368 (* a!4 a!4 a!4 b!2 s!0 s!0 s!0 s!0) ?x618 (* (- 3) (* p!5 p!5 q!3 q!3 b!2 r!1 s!0 s!0)) (* 3 (* p!5 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* (- 3) (* a!4 b!2 b!2 b!2 r!1 r!1 r!1 s!0)) (* 9 (* a!4 b!2 b!2 b!2 r!1 r!1 s!0 s!0)) (* (- 1) (* q!3 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* (- 1) (* p!5 p!5 p!5 q!3 b!2 s!0 s!0 s!0)) (* (- 9) (* a!4 b!2 b!2 b!2 r!1 s!0 s!0 s!0)) (* 3 (* p!5 p!5 q!3 q!3 b!2 s!0 s!0 s!0)) (* (- 3) (* p!5 q!3 q!3 q!3 b!2 s!0 s!0 s!0)) (* 3 (* a!4 b!2 b!2 b!2 s!0 s!0 s!0 s!0)) ?x817 ?x880 (* 2 (* a!4 q!3 q!3 q!3 b!2)) ?x1412 (* 3 (* a!4 a!4 b!2 b!2 r!1 r!1 r!1 s!0)) (* 3 (* b!2 b!2 b!2 b!2 r!1 s!0 s!0 s!0)) ?x708)))
 (let (($x1598 (or (not (= (* ?x1434 ?x1606) 0)) (not (= (* ?x1634 (+ ?x734 ?x1043 ?x1161 ?x345 ?x381 ?x1162)) 0)))))
 (let ((?x636 (* q!3 s00 a00)))
 (let ((?x948 (* s!0 p00 b00)))
 (let ((?x1537 (* b!2 q00 r00)))
 (let (($x1179 (= (+ ?x1537 (* (- 1) ?x1541) ?x948 (* (- 1) ?x992) ?x636 (* (- 1) ?x263)) 0)))
 (let (($x1439 (= (+ ?x1032 (* (- 1) ?x1043) ?x921 (* (- 1) ?x345) (* (- 1) ?x381) ?x408) 0)))
 (let ((?x138 (* p00 b00)))
 (let ((?x181 (* (- 1) ?x137)))
 (let ((?x151 (* r00 b00)))
 (let ((?x140 (* (- 1) ?x133)))
 (let ((?x41 (* q00 r00)))
 (let ((?x142 (* (- 1) ?x37)))
 (let (($x1639 (and (= (+ (* p!5 s!0) ?x142 ?x41 (* (- 1) (* q!3 r!1))) 0) (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x140 ?x151) 0) (= (+ (* a!4 q!3) ?x181 ?x138 (* (- 1) (* p!5 b!2))) 0) $x1439 $x1179 $x1598)))
 (let (($x1487 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x226 (* r q00 a00)))
 (let ((?x232 (* (- 1) ?x226)))
 (let ((?x215 (* p s00 a00)))
 (let ((?x212 (* r p00 b00)))
 (let ((?x192 (* p r00 b00)))
 (let ((?x193 (* (- 1) ?x192)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x201 (* (- 1) ?x63)))
 (let ((?x238 (+ ?x201 ?x66 ?x193 ?x212 ?x215 ?x232)))
 (let ((?x1049 (* 3 (* p a a q q))))
 (let ((?x1046 (* (- 3) (* p p a a q))))
 (let ((?x963 (* p p p a a)))
 (let ((?x919 (* (- 1) (* p p p a q r s s))))
 (let ((?x915 (* (- 1) (* p p p p b r s s))))
 (let ((?x903 (* p p p p a r s s)))
 (let ((?x926 (* 2 (* p p p p b r r s))))
 (let ((?x927 (* 2 (* p p p a q r r s))))
 (let ((?x928 (* (- 2) (* p p p q b r r s))))
 (let ((?x819 (* (- 1) (* a a q q q))))
 (let ((?x615 (* p p p q b r s s)))
 (let ((?x459 (* (- 1) (* a a a b r r r s))))
 (let ((?x925 (* (- 2) (* p p p p a r r s))))
 (let ((?x410 (* p p p q b r r r)))
 (let ((?x404 (* (- 1) (* p p p a q r r r))))
 (let ((?x382 (* (- 1) (* p p p p b r r r))))
 (let ((?x356 (* p p p p a r r r)))
 (let ((?x1675 (+ ?x356 ?x382 ?x404 ?x410 ?x925 ?x459 ?x615 ?x819 ?x928 ?x927 ?x926 ?x903 ?x915 ?x919 ?x963 ?x1046 ?x1049 (* (- 1) (* a a a a r r r r)) (* a a a a r r r s) (* a a a b r r r r))))
 (let ((?x301 (* s q00 a00)))
 (let ((?x290 (* q s00 a00)))
 (let ((?x394 (* (- 1) ?x290)))
 (let ((?x256 (* q r00 b00)))
 (let ((?x255 (* s p00 b00)))
 (let ((?x359 (* (- 1) ?x255)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x374 (* (- 1) ?x72)))
 (let ((?x821 (* (- 1) (* q q q b b))))
 (let ((?x826 (* 2 (* a q q q b))))
 (let ((?x737 (* q q q q b s s s)))
 (let ((?x750 (* (- 3) (* p q q q b s s s))))
 (let ((?x749 (* 3 (* p p q q b s s s))))
 (let ((?x683 (* (- 1) (* p p p q b s s s))))
 (let ((?x673 (* (- 1) (* q q q q b r s s))))
 (let ((?x748 (* 3 (* p q q q b r s s))))
 (let ((?x746 (* (- 3) (* p p q q b r s s))))
 (let ((?x1332 (+ (* (- 3) (* a a a b r s s s)) (* b b b b r r r s) (* (- 3) (* b b b b r r s s)) (* (- 3) (* a a b b s s s s)) (* 9 (* a a b b r s s s)) (* (- 9) (* a a b b r r s s)) (* 3 (* a a a b r r s s)) ?x459 (* a a a b s s s s) ?x615 ?x746 ?x748 (* (- 3) (* a b b b r r r s)) (* 9 (* a b b b r r s s)) ?x673 ?x683 (* (- 9) (* a b b b r s s s)) ?x749 ?x750 (* 3 (* a b b b s s s s)) ?x737 ?x819 ?x826 ?x821 (* 3 (* a a b b r r r s)) (* 3 (* b b b b r s s s)) (* (- 1) (* b b b b s s s s)))))
 (let ((?x1464 (* ?x1332 (+ ?x201 ?x66 ?x374 ?x76 ?x193 ?x212 ?x215 ?x232 ?x359 ?x256 ?x394 ?x301))))
 (let (($x318 (= (+ ?x72 (* (- 1) ?x76) ?x255 (* (- 1) ?x256) ?x290 (* (- 1) ?x301)) 0)))
 (let (($x250 (= (+ ?x63 (* (- 1) ?x66) ?x192 (* (- 1) ?x212) (* (- 1) ?x215) ?x226) 0)))
 (let ((?x138 (* p00 b00)))
 (let ((?x137 (* q00 a00)))
 (let ((?x181 (* (- 1) ?x137)))
 (let (($x184 (= (+ (* a q) ?x181 ?x138 (* (- 1) (* p b))) 0)))
 (let ((?x151 (* r00 b00)))
 (let ((?x133 (* s00 a00)))
 (let ((?x140 (* (- 1) ?x133)))
 (let ((?x49 (* a s)))
 (let (($x166 (= (+ ?x49 (* (- 1) (* b r)) ?x140 ?x151) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x142 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x161 (= (+ ?x33 ?x142 ?x41 (* (- 1) (* q r))) 0)))
 (and $x161 $x166 $x184 $x250 $x318 (or (not (= ?x1464 0)) (not (= (* ?x1675 ?x238) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x352 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x65 (* b00 p00 r)))
 (let ((?x141 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x785 (+ q (* (- 1) p))))
 (let ((?x456 (* (- 1) a)))
 (let ((?x208 (+ b ?x456)))
 (let ((?x612 (* (- 1) r)))
 (let ((?x939 (+ s ?x612)))
 (let ((?x908 (+ (* (- 1) (* ?x939 ?x208 r r r a a a)) (* ?x939 ?x939 ?x208 ?x785 r p p p) (* (- 1) (* ?x785 ?x785 ?x785 a a)))))
 (let ((?x849 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x369 (* (- 1) (* (+ a (* (- 1) b)) (+ a (* (- 1) b)) q q q))))
 (let ((?x259 (* (- 1) q)))
 (let ((?x436 (+ p ?x259)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x787 (+ r ?x341)))
 (let ((?x281 (* (- 1) b)))
 (let ((?x383 (+ a ?x281)))
 (let ((?x446 (+ (* (- 1) (* ?x787 ?x787 ?x787 ?x383 ?x383 ?x383 s b)) (* ?x787 ?x436 ?x436 ?x436 s s b q) ?x369)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x797 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x1007 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x990 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x142 (* (- 1) ?x37)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x142 ?x41) 0) (= ?x990 0) $x1007 (= ?x141 0) (= ?x797 0) (or (not (= (* ?x446 ?x849) 0)) (not (= (* ?x908 ?x141) 0))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x1345 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x226 (* r q00 a00)))
 (let ((?x232 (* (- 1) ?x226)))
 (let ((?x215 (* p s00 a00)))
 (let ((?x212 (* r p00 b00)))
 (let ((?x192 (* p r00 b00)))
 (let ((?x193 (* (- 1) ?x192)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x201 (* (- 1) ?x63)))
 (let ((?x238 (+ ?x201 ?x66 ?x193 ?x212 ?x215 ?x232)))
 (let ((?x1049 (* 3 (* p a a q q))))
 (let ((?x1046 (* (- 3) (* p p a a q))))
 (let ((?x963 (* p p p a a)))
 (let ((?x919 (* (- 1) (* p p p a q r s s))))
 (let ((?x915 (* (- 1) (* p p p p b r s s))))
 (let ((?x903 (* p p p p a r s s)))
 (let ((?x926 (* 2 (* p p p p b r r s))))
 (let ((?x927 (* 2 (* p p p a q r r s))))
 (let ((?x928 (* (- 2) (* p p p q b r r s))))
 (let ((?x819 (* (- 1) (* a a q q q))))
 (let ((?x615 (* p p p q b r s s)))
 (let ((?x459 (* (- 1) (* a a a b r r r s))))
 (let ((?x925 (* (- 2) (* p p p p a r r s))))
 (let ((?x410 (* p p p q b r r r)))
 (let ((?x404 (* (- 1) (* p p p a q r r r))))
 (let ((?x382 (* (- 1) (* p p p p b r r r))))
 (let ((?x356 (* p p p p a r r r)))
 (let ((?x1675 (+ ?x356 ?x382 ?x404 ?x410 ?x925 ?x459 ?x615 ?x819 ?x928 ?x927 ?x926 ?x903 ?x915 ?x919 ?x963 ?x1046 ?x1049 (* (- 1) (* a a a a r r r r)) (* a a a a r r r s) (* a a a b r r r r))))
 (let ((?x301 (* s q00 a00)))
 (let ((?x290 (* q s00 a00)))
 (let ((?x394 (* (- 1) ?x290)))
 (let ((?x256 (* q r00 b00)))
 (let ((?x255 (* s p00 b00)))
 (let ((?x359 (* (- 1) ?x255)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x374 (* (- 1) ?x72)))
 (let ((?x821 (* (- 1) (* q q q b b))))
 (let ((?x826 (* 2 (* a q q q b))))
 (let ((?x737 (* q q q q b s s s)))
 (let ((?x750 (* (- 3) (* p q q q b s s s))))
 (let ((?x749 (* 3 (* p p q q b s s s))))
 (let ((?x683 (* (- 1) (* p p p q b s s s))))
 (let ((?x673 (* (- 1) (* q q q q b r s s))))
 (let ((?x748 (* 3 (* p q q q b r s s))))
 (let ((?x746 (* (- 3) (* p p q q b r s s))))
 (let ((?x1332 (+ (* (- 3) (* a a a b r s s s)) (* b b b b r r r s) (* (- 3) (* b b b b r r s s)) (* (- 3) (* a a b b s s s s)) (* 9 (* a a b b r s s s)) (* (- 9) (* a a b b r r s s)) (* 3 (* a a a b r r s s)) ?x459 (* a a a b s s s s) ?x615 ?x746 ?x748 (* (- 3) (* a b b b r r r s)) (* 9 (* a b b b r r s s)) ?x673 ?x683 (* (- 9) (* a b b b r s s s)) ?x749 ?x750 (* 3 (* a b b b s s s s)) ?x737 ?x819 ?x826 ?x821 (* 3 (* a a b b r r r s)) (* 3 (* b b b b r s s s)) (* (- 1) (* b b b b s s s s)))))
 (let ((?x1464 (* ?x1332 (+ ?x201 ?x66 ?x374 ?x76 ?x193 ?x212 ?x215 ?x232 ?x359 ?x256 ?x394 ?x301))))
 (let (($x318 (= (+ ?x72 (* (- 1) ?x76) ?x255 (* (- 1) ?x256) ?x290 (* (- 1) ?x301)) 0)))
 (let (($x250 (= (+ ?x63 (* (- 1) ?x66) ?x192 (* (- 1) ?x212) (* (- 1) ?x215) ?x226) 0)))
 (let ((?x138 (* p00 b00)))
 (let ((?x137 (* q00 a00)))
 (let ((?x181 (* (- 1) ?x137)))
 (let (($x184 (= (+ (* a q) ?x181 ?x138 (* (- 1) (* p b))) 0)))
 (let ((?x151 (* r00 b00)))
 (let ((?x133 (* s00 a00)))
 (let ((?x140 (* (- 1) ?x133)))
 (let ((?x49 (* a s)))
 (let (($x166 (= (+ ?x49 (* (- 1) (* b r)) ?x140 ?x151) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x142 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x161 (= (+ ?x33 ?x142 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x1458 (and $x161 $x166 $x184 $x250 $x318 (or (not (= ?x1464 0)) (not (= (* ?x1675 ?x238) 0))))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x141 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x785 (+ q (* (- 1) p))))
 (let ((?x456 (* (- 1) a)))
 (let ((?x208 (+ b ?x456)))
 (let ((?x612 (* (- 1) r)))
 (let ((?x939 (+ s ?x612)))
 (let ((?x908 (+ (* (- 1) (* ?x939 ?x208 r r r a a a)) (* ?x939 ?x939 ?x208 ?x785 r p p p) (* (- 1) (* ?x785 ?x785 ?x785 a a)))))
 (let ((?x849 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x369 (* (- 1) (* (+ a (* (- 1) b)) (+ a (* (- 1) b)) q q q))))
 (let ((?x259 (* (- 1) q)))
 (let ((?x436 (+ p ?x259)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x787 (+ r ?x341)))
 (let ((?x281 (* (- 1) b)))
 (let ((?x383 (+ a ?x281)))
 (let ((?x446 (+ (* (- 1) (* ?x787 ?x787 ?x787 ?x383 ?x383 ?x383 s b)) (* ?x787 ?x436 ?x436 ?x436 s s b q) ?x369)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x797 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x1007 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x990 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x899 (and (= (+ (* (- 1) (* r q)) (* s p) ?x142 ?x41) 0) (= ?x990 0) $x1007 (= ?x141 0) (= ?x797 0) (or (not (= (* ?x446 ?x849) 0)) (not (= (* ?x908 ?x141) 0))))))
 (rewrite (= $x899 $x1458)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x117 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x105 (- s r)))
 (let ((?x107 (- q p)))
 (let ((?x104 (- b a)))
 (let ((?x109 (+ (* (- 1) a a a ?x104 r r r ?x105) (* ?x104 p p p ?x107 r ?x105 ?x105))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x31 (- 1)))
 (let ((?x98 (+ (* ?x31 ?x86 ?x86 ?x86 b ?x89 ?x89 ?x89 s) (* b ?x84 ?x84 ?x84 q ?x89 s s))))
 (let ((?x93 (+ (- (* ?x31 b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let ((?x101 (* (- ?x93 (* a00 q00 ?x89)) (- ?x98 (* ?x86 ?x86 q q q)))))
 (let (($x115 (or (not (= ?x101 0)) (not (= (* ?x70 (- ?x109 (* a a ?x107 ?x107 ?x107))) 0)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= ?x70 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) $x115))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x592 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x65 (* b00 p00 r)))
 (let ((?x141 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x785 (+ q (* (- 1) p))))
 (let ((?x456 (* (- 1) a)))
 (let ((?x208 (+ b ?x456)))
 (let ((?x612 (* (- 1) r)))
 (let ((?x939 (+ s ?x612)))
 (let ((?x908 (+ (* (- 1) (* ?x939 ?x208 r r r a a a)) (* ?x939 ?x939 ?x208 ?x785 r p p p) (* (- 1) (* ?x785 ?x785 ?x785 a a)))))
 (let ((?x849 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x369 (* (- 1) (* (+ a (* (- 1) b)) (+ a (* (- 1) b)) q q q))))
 (let ((?x259 (* (- 1) q)))
 (let ((?x436 (+ p ?x259)))
 (let ((?x341 (* (- 1) s)))
 (let ((?x787 (+ r ?x341)))
 (let ((?x281 (* (- 1) b)))
 (let ((?x383 (+ a ?x281)))
 (let ((?x446 (+ (* (- 1) (* ?x787 ?x787 ?x787 ?x383 ?x383 ?x383 s b)) (* ?x787 ?x436 ?x436 ?x436 s s b q) ?x369)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x797 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x1007 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x990 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x142 (* (- 1) ?x37)))
 (let (($x899 (and (= (+ (* (- 1) (* r q)) (* s p) ?x142 ?x41) 0) (= ?x990 0) $x1007 (= ?x141 0) (= ?x797 0) (or (not (= (* ?x446 ?x849) 0)) (not (= (* ?x908 ?x141) 0))))))
 (let ((?x105 (- s r)))
 (let ((?x107 (- q p)))
 (let ((?x104 (- b a)))
 (let ((?x109 (+ (* (- 1) a a a ?x104 r r r ?x105) (* ?x104 p p p ?x107 r ?x105 ?x105))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x31 (- 1)))
 (let ((?x98 (+ (* ?x31 ?x86 ?x86 ?x86 b ?x89 ?x89 ?x89 s) (* b ?x84 ?x84 ?x84 q ?x89 s s))))
 (let ((?x93 (+ (- (* ?x31 b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let ((?x101 (* (- ?x93 (* a00 q00 ?x89)) (- ?x98 (* ?x86 ?x86 q q q)))))
 (let (($x115 (or (not (= ?x101 0)) (not (= (* ?x70 (- ?x109 (* a a ?x107 ?x107 ?x107))) 0)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x116 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= ?x70 0) (= (- ?x80 ?x81) 0) $x115)))
 (rewrite (= $x116 $x899))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x118 (asserted $x117)))
 (let ((@x968 (mp (mp @x118 (quant-intro (proof-bind ?x592) (= $x117 $x352)) $x352) (rewrite (= $x352 $x352)) $x352)))
 (let ((@x1642 (mp~ (mp @x968 (quant-intro (proof-bind ?x1345) (= $x352 $x1487)) $x1487) (sk (~ $x1487 $x1639)) $x1639)))
 (let ((@x1211 (mp @x1642 (rewrite (= $x1639 $x685)) $x685)))
 (let ((@x637 (and-elim @x1211 $x1505)))
 (let ((@x1587 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1505) $x1244)) @x637 $x1244)))
 (let (($x1475 (<= ?x351 0)))
 (let ((@x1683 (and-elim @x1211 $x940)))
 (let ((@x1539 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x940) $x1475)) @x1683 $x1475)))
 (let (($x1243 (<= ?x1499 0)))
 (let ((@x688 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1505) $x1243)) @x637 $x1243)))
 (let (($x1471 (>= ?x351 0)))
 (let ((@x1490 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x940) $x1471)) @x1683 $x1471)))
 (let (($x1510 (not (<= ?x289 0))))
 (let ((@x1310 (unit-resolution (hypothesis $x1667) ((_ th-lemma arith eq-propagate 0 0 0 0) @x1490 @x1539 @x1490 @x1539 $x644) false)))
 (let (($x1477 (>= ?x289 0)))
 (let ((@x417 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x1477)) @x1490 @x688 @x1539 @x1587 false) $x1477)))
 (let ((@x681 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x666 $x1510 (not $x1477))) @x417 (unit-resolution (and-elim @x1211 $x598) (lemma @x1310 $x644) $x344) $x1510)))
 ((_ th-lemma arith farkas 1 1 1 1 1) @x681 @x1490 @x688 @x1539 @x1587 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        2
 :arith-assert-lower        24
 :arith-assert-upper        13
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-fixed-eqs           3
 :arith-max-min             334
 :arith-nonlinear-bounds    10
 :arith-num-rows            8
 :arith-pivots              5
 :arith-pseudo-nonlinear    4
 :arith-row-summations      2
 :arith-tableau-max-columns 97
 :arith-tableau-max-rows    8
 :conflicts                 3
 :decisions                 2
 :del-clause                15
 :final-checks              2
 :max-memory                19.73
 :memory                    19.28
 :mk-bool-var               21
 :mk-clause                 24
 :num-allocs                502788
 :num-checks                1
 :propagations              15
 :rlimit-count              6126
 :time                      0.01
 :total-time                0.02)
