unsat
((set-logic NIA)
(declare-fun c!3 () Int)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x474 (* k!2 k!2)))
 (let ((?x483 (+ (* 9 n!0) (* (- 18) c!3) (* (- 5) k!2) ?x474 (* (- 9) (* n!0 c!3)))))
 (let (($x752 (<= ?x483 (- 4))))
 (let (($x615 (= ?x483 (- 4))))
 (let ((?x582 (* (- 24) (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x1647 (* (- 12) (* k!2 m!1 m!1 m!1 m!1))))
 (let ((?x1599 (* (- 1) (* c!3 k!2 k!2 m!1 m!1 m!1))))
 (let ((?x1643 (* (- 2) (* k!2 k!2 m!1 m!1 m!1 m!1))))
 (let ((?x1614 (+ c!3 k!2)))
 (let ((?x1651 (+ k!2 m!1)))
 (let ((?x539 (+ 6 m!1)))
 (let ((?x1652 (+ 1 n!0)))
 (let ((?x1611 (* n!0 ?x1652 ?x1652 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1651 ?x1651 ?x1614 ?x1614 ?x1614)))
 (let ((?x1462 (* 6 ?x1611)))
 (let ((?x1644 (* (- 1) (* c!3 m!1 m!1 m!1 m!1 m!1))))
 (let ((?x425 (* 6 (* ?x1652 ?x539 ?x539 ?x1651 ?x1651 ?x1614))))
 (let ((?x559 (* (- 24) (* c!3 k!2 m!1 m!1 m!1))))
 (let ((?x562 (* (- 1) (* k!2 k!2 k!2 m!1 m!1 m!1))))
 (let ((?x1608 (* (- 1) (* k!2 m!1 m!1 m!1 m!1 m!1))))
 (let ((?x758 (* 6 (* n!0 ?x1652 ?x1652 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1614))))
 (let ((?x1231 (* (- 6) (* n!0 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1651 ?x1614 ?x1614 ?x1614))))
 (let ((?x1638 (* (- 2) (* c!3 k!2 m!1 m!1 m!1 m!1))))
 (let ((?x668 (* (- 36) (* k!2 k!2 k!2 m!1))))
 (let ((?x838 (* (- 72) (* c!3 k!2 m!1 m!1))))
 (let ((?x743 (* (- 12) (* c!3 m!1 m!1 m!1 m!1))))
 (let ((?x560 (* (- 12) (* c!3 k!2 k!2 m!1 m!1))))
 (let ((?x147 (* (- 36) (* c!3 m!1 m!1 m!1))))
 (let ((?x759 (* m!1 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1651 ?x1614 ?x1614 ?x1614)))
 (let ((?x552 (* 6 (* ?x1652 ?x1652 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1614))))
 (let ((?x368 (* (- 72) (* k!2 k!2 m!1 m!1))))
 (let ((?x141 (* (- 36) (* c!3 k!2 k!2 m!1))))
 (let ((?x1496 (* (- 36) (* k!2 m!1 m!1 m!1))))
 (let ((?x576 (* m!1 ?x1652 ?x1652 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1651 ?x1651 ?x1614 ?x1614 ?x1614)))
 (let ((?x1232 (* (- 1) ?x576)))
 (let ((?x1237 (* (- 1) (* m!1 ?x1652 ?x1652 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1614))))
 (let ((?x537 (* (- 6) (* ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1651 ?x1614 ?x1614 ?x1614))))
 (let ((?x739 (* (- 12) (* k!2 k!2 k!2 m!1 m!1))))
 (let ((?x427 (* 6 (* ?x1652 ?x1652 ?x1652 ?x539 ?x539 ?x539 ?x1651 ?x1651 ?x1651 ?x1614 ?x1614 ?x1614))))
 (let ((?x944 (+ ?x427 (* 72 (* n!0 k!2 k!2 m!1 m!1)) (* (- 6) (* n!0 k!2 m!1 m!1 m!1 m!1)) (* 72 (* n!0 n!0 k!2 k!2 k!2 m!1)) (* 216 (* n!0 n!0 k!2 m!1 m!1)) (* 432 (* n!0 n!0 c!3 k!2 m!1)) (* (- 1) (* n!0 c!3 k!2 k!2 m!1 m!1 m!1)) ?x739 ?x537 ?x1237 ?x1232 ?x1496 ?x141 ?x368 (* 36 (* n!0 c!3 k!2 k!2 m!1)) (* 72 (* n!0 n!0 k!2 m!1 m!1 m!1)) (* 36 (* n!0 k!2 k!2 k!2 m!1)) (* 72 (* n!0 c!3 k!2 m!1 m!1)) (* 36 (* n!0 c!3 m!1 m!1 m!1)) (* (- 6) (* n!0 c!3 k!2 k!2 m!1 m!1)) (* 36 (* n!0 k!2 m!1 m!1 m!1)) (* (- 6) (* n!0 k!2 k!2 k!2 m!1 m!1)) (* (- 12) (* n!0 c!3 k!2 m!1 m!1 m!1)) (* (- 12) (* n!0 k!2 k!2 m!1 m!1 m!1)) (* (- 6) (* n!0 c!3 m!1 m!1 m!1 m!1)) (* 72 (* n!0 n!0 c!3 m!1 m!1 m!1)) (* 144 (* n!0 n!0 k!2 k!2 m!1 m!1)) (* 144 (* n!0 n!0 c!3 k!2 m!1 m!1)) (* 72 (* n!0 n!0 c!3 k!2 k!2 m!1)) (* 216 (* n!0 n!0 c!3 m!1 m!1)) (* 432 (* n!0 n!0 k!2 k!2 m!1)) (* 216 (* n!0 n!0 k!2 k!2 k!2)) (* 216 (* n!0 n!0 c!3 k!2 k!2)) ?x552 (* 216 (* n!0 k!2 m!1 m!1)) (* 216 (* n!0 c!3 m!1 m!1)) (* 432 (* n!0 k!2 k!2 m!1)) (* 432 (* n!0 c!3 k!2 m!1)) ?x759 (* 216 (* n!0 k!2 k!2 k!2)) (* 216 (* n!0 c!3 k!2 k!2)) (* (- 1) (* n!0 k!2 m!1 m!1 m!1 m!1 m!1)) (* (- 1) (* n!0 c!3 m!1 m!1 m!1 m!1 m!1)) (* (- 2) (* n!0 k!2 k!2 m!1 m!1 m!1 m!1)) (* (- 2) (* n!0 c!3 k!2 m!1 m!1 m!1 m!1)) (* (- 1) (* n!0 k!2 k!2 k!2 m!1 m!1 m!1)) (* 6 (* n!0 n!0 c!3 k!2 k!2 m!1 m!1)) ?x147 (* 6 (* n!0 n!0 k!2 k!2 k!2 m!1 m!1)) ?x560 ?x743 (* 12 (* n!0 n!0 c!3 k!2 m!1 m!1 m!1)) (* 12 (* n!0 n!0 k!2 k!2 m!1 m!1 m!1)) (* 6 (* n!0 n!0 k!2 m!1 m!1 m!1 m!1)) (* 6 (* n!0 n!0 c!3 m!1 m!1 m!1 m!1)) ?x838 ?x668 ?x1638 ?x1231 ?x758 ?x1608 ?x562 ?x559 ?x425 ?x1644 ?x1462 ?x1643 ?x1599 ?x1647 ?x582)))
 (let (($x942 (= ?x944 0)))
 (let (($x664 (not $x942)))
 (let ((?x592 (* (- 1) k!2)))
 (let ((?x426 (+ (* 3 n!0) ?x592 (* 3 (* n!0 n!0)))))
 (let (($x431 (= ?x426 (- 1))))
 (let ((?x459 (+ (* 2 n!0) (* (- 3) c!3) ?x592 (* n!0 k!2))))
 (let (($x439 (= ?x459 (- 1))))
 (let ((?x657 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x649 (= ?x657 (- 6))))
 (let (($x951 (and $x649 $x615 $x439 $x431 $x664)))
 (let ((?x1333 (+ ?x1462 ?x1232 ?x1237 ?x368 ?x838 ?x668 ?x141 ?x425 ?x427 ?x147 ?x1496 ?x582 ?x552 ?x559 ?x739 ?x537 ?x560 ?x743 ?x1647 ?x1599 ?x562 ?x1638 ?x1643 ?x1644 ?x1608 (* 36 (* c!3 k!2 k!2 m!1 n!0)) (* 36 (* k!2 k!2 k!2 m!1 n!0)) (* 72 (* c!3 k!2 m!1 m!1 n!0)) (* 72 (* k!2 k!2 m!1 m!1 n!0)) (* 36 (* c!3 m!1 m!1 m!1 n!0)) (* 36 (* k!2 m!1 m!1 m!1 n!0)) (* (- 6) (* c!3 k!2 k!2 m!1 m!1 n!0)) (* (- 6) (* k!2 k!2 k!2 m!1 m!1 n!0)) (* (- 12) (* c!3 k!2 m!1 m!1 m!1 n!0)) (* (- 12) (* k!2 k!2 m!1 m!1 m!1 n!0)) (* (- 6) (* c!3 m!1 m!1 m!1 m!1 n!0)) (* (- 6) (* k!2 m!1 m!1 m!1 m!1 n!0)) (* (- 1) (* c!3 k!2 k!2 m!1 m!1 m!1 n!0)) (* (- 1) (* k!2 k!2 k!2 m!1 m!1 m!1 n!0)) (* (- 2) (* c!3 k!2 m!1 m!1 m!1 m!1 n!0)) (* (- 2) (* k!2 k!2 m!1 m!1 m!1 m!1 n!0)) (* (- 1) (* c!3 m!1 m!1 m!1 m!1 m!1 n!0)) (* (- 1) (* k!2 m!1 m!1 m!1 m!1 m!1 n!0)) (* 216 (* c!3 k!2 k!2 n!0)) (* 216 (* k!2 k!2 k!2 n!0)) (* 432 (* c!3 k!2 m!1 n!0)) (* 432 (* k!2 k!2 m!1 n!0)) (* 216 (* c!3 m!1 m!1 n!0)) (* 216 (* k!2 m!1 m!1 n!0)) (* 216 (* c!3 k!2 k!2 n!0 n!0)) (* 216 (* k!2 k!2 k!2 n!0 n!0)) (* 432 (* c!3 k!2 m!1 n!0 n!0)) (* 432 (* k!2 k!2 m!1 n!0 n!0)) (* 216 (* c!3 m!1 m!1 n!0 n!0)) (* 216 (* k!2 m!1 m!1 n!0 n!0)) (* 72 (* c!3 k!2 k!2 m!1 n!0 n!0)) (* 72 (* k!2 k!2 k!2 m!1 n!0 n!0)) (* 144 (* c!3 k!2 m!1 m!1 n!0 n!0)) (* 144 (* k!2 k!2 m!1 m!1 n!0 n!0)) (* 72 (* c!3 m!1 m!1 m!1 n!0 n!0)) (* 72 (* k!2 m!1 m!1 m!1 n!0 n!0)) (* 6 (* c!3 k!2 k!2 m!1 m!1 n!0 n!0)) (* 6 (* k!2 k!2 k!2 m!1 m!1 n!0 n!0)) (* 12 (* c!3 k!2 m!1 m!1 m!1 n!0 n!0)) (* 12 (* k!2 k!2 m!1 m!1 m!1 n!0 n!0)) (* 6 (* c!3 m!1 m!1 m!1 m!1 n!0 n!0)) (* 6 (* k!2 m!1 m!1 m!1 m!1 n!0 n!0)) ?x758 ?x759 ?x1231)))
 (let (($x808 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x869 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x474) (* 9 (* c!3 n!0)))))
 (let (($x816 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x869 4) $x808 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1333 0)))))
 (let (($x604 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x1659 (* 6 (* k m m m m n n))))
 (let ((?x1658 (* 6 (* c m m m m n n))))
 (let ((?x1749 (* 12 (* k k m m m n n))))
 (let ((?x1746 (* 12 (* c k m m m n n))))
 (let ((?x1655 (* 6 (* k k k m m n n))))
 (let ((?x1654 (* 6 (* c k k m m n n))))
 (let ((?x1743 (* 72 (* k m m m n n))))
 (let ((?x1740 (* 72 (* c m m m n n))))
 (let ((?x1737 (* 144 (* k k m m n n))))
 (let ((?x1734 (* 144 (* c k m m n n))))
 (let ((?x1731 (* 72 (* k k k m n n))))
 (let ((?x1728 (* 72 (* c k k m n n))))
 (let ((?x1725 (* 216 (* k m m n n))))
 (let ((?x1722 (* 216 (* c m m n n))))
 (let ((?x1719 (* 432 (* k k m n n))))
 (let ((?x1716 (* 432 (* c k m n n))))
 (let ((?x1713 (* 216 (* k k k n n))))
 (let ((?x1710 (* 216 (* c k k n n))))
 (let ((?x1707 (* 216 (* k m m n))))
 (let ((?x1704 (* 216 (* c m m n))))
 (let ((?x1701 (* 432 (* k k m n))))
 (let ((?x1698 (* 432 (* c k m n))))
 (let ((?x1694 (* 216 (* k k k n))))
 (let ((?x1691 (* 216 (* c k k n))))
 (let ((?x1039 (* (- 1) (* k m m m m m n))))
 (let ((?x1038 (* (- 1) (* c m m m m m n))))
 (let ((?x1130 (* (- 2) (* k k m m m m n))))
 (let ((?x1127 (* (- 2) (* c k m m m m n))))
 (let ((?x1035 (* (- 1) (* k k k m m m n))))
 (let ((?x1034 (* (- 1) (* c k k m m m n))))
 (let ((?x1925 (* (- 6) (* k m m m m n))))
 (let ((?x1928 (* (- 6) (* c m m m m n))))
 (let ((?x1927 (* (- 12) (* k k m m m n))))
 (let ((?x1930 (* (- 12) (* c k m m m n))))
 (let ((?x1929 (* (- 6) (* k k k m m n))))
 (let ((?x1932 (* (- 6) (* c k k m m n))))
 (let ((?x835 (* 36 (* k m m m n))))
 (let ((?x825 (* 36 (* c m m m n))))
 (let ((?x985 (* 72 (* k k m m n))))
 (let ((?x984 (* 72 (* c k m m n))))
 (let ((?x779 (* 36 (* k k k m n))))
 (let ((?x769 (* 36 (* c k k m n))))
 (let ((?x1021 (* (- 1) (* k m m m m m))))
 (let ((?x1020 (* (- 1) (* c m m m m m))))
 (let ((?x1088 (* (- 2) (* k k m m m m))))
 (let ((?x1085 (* (- 2) (* c k m m m m))))
 (let ((?x1017 (* (- 1) (* k k k m m m))))
 (let ((?x1016 (* (- 1) (* c k k m m m))))
 (let ((?x1082 (* (- 12) (* k m m m m))))
 (let ((?x1079 (* (- 12) (* c m m m m))))
 (let ((?x1076 (* (- 12) (* c k k m m))))
 (let ((?x1073 (* (- 12) (* k k k m m))))
 (let ((?x1069 (* (- 24) (* c k m m m))))
 (let ((?x1066 (* (- 24) (* k k m m m))))
 (let ((?x1062 (* (- 36) (* k m m m))))
 (let ((?x1059 (* (- 36) (* c m m m))))
 (let ((?x553 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1056 (* (- 36) (* c k k m))))
 (let ((?x1053 (* (- 36) (* k k k m))))
 (let ((?x1049 (* (- 72) (* c k m m))))
 (let ((?x1046 (* (- 72) (* k k m m))))
 (let ((?x186 (* m ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x97 (* n ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1903 (+ (* 6 ?x97) (* (- 1) ?x186) (* (- 1) (* m ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)) ?x1046 ?x1049 ?x1053 ?x1056 (* 6 (* ?x319 ?x365 ?x365 ?x74 ?x74 ?x73)) (* 6 ?x553) ?x1059 ?x1062 ?x1066 (* 6 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)) ?x1069 ?x1073 (* (- 6) (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)) ?x1076 ?x1079 ?x1082 ?x1016 ?x1017 ?x1085 ?x1088 ?x1020 ?x1021 ?x769 ?x779 ?x984 ?x985 ?x825 ?x835 ?x1932 ?x1929 ?x1930 ?x1927 ?x1928 ?x1925 ?x1034 ?x1035 ?x1127 ?x1130 ?x1038 ?x1039 ?x1691 ?x1694 ?x1698 ?x1701 ?x1704 ?x1707 ?x1710 ?x1713 ?x1716 ?x1719 ?x1722 ?x1725 ?x1728 ?x1731 ?x1734 ?x1737 ?x1740 ?x1743 ?x1654 ?x1655 ?x1746 ?x1749 ?x1658 ?x1659 (* 6 (* n ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)) (* m ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73) (* (- 6) (* n ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)))))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 $x214 $x266 $x304 (not (= ?x1903 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x1607 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x600 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)))
 (let ((?x624 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x553 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x581 (+ (* (- 1) ?x553) (* (- 1) (* ?x319 ?x365 ?x365 ?x74 ?x74 ?x73)) ?x624 (* (- 1) ?x600))))
 (let (($x644 (not (= (* (+ (- 6) m (* (- 6) n)) ?x581) 0))))
 (let (($x1755 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x413 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x413 $x1755 $x644)))))))))))))))))) :qid k!34))
 ))
 (let ((?x419 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x1659 (* 6 (* k m m m m n n))))
 (let ((?x1658 (* 6 (* c m m m m n n))))
 (let ((?x1749 (* 12 (* k k m m m n n))))
 (let ((?x1746 (* 12 (* c k m m m n n))))
 (let ((?x1655 (* 6 (* k k k m m n n))))
 (let ((?x1654 (* 6 (* c k k m m n n))))
 (let ((?x1743 (* 72 (* k m m m n n))))
 (let ((?x1740 (* 72 (* c m m m n n))))
 (let ((?x1737 (* 144 (* k k m m n n))))
 (let ((?x1734 (* 144 (* c k m m n n))))
 (let ((?x1731 (* 72 (* k k k m n n))))
 (let ((?x1728 (* 72 (* c k k m n n))))
 (let ((?x1725 (* 216 (* k m m n n))))
 (let ((?x1722 (* 216 (* c m m n n))))
 (let ((?x1719 (* 432 (* k k m n n))))
 (let ((?x1716 (* 432 (* c k m n n))))
 (let ((?x1713 (* 216 (* k k k n n))))
 (let ((?x1710 (* 216 (* c k k n n))))
 (let ((?x1707 (* 216 (* k m m n))))
 (let ((?x1704 (* 216 (* c m m n))))
 (let ((?x1701 (* 432 (* k k m n))))
 (let ((?x1698 (* 432 (* c k m n))))
 (let ((?x1694 (* 216 (* k k k n))))
 (let ((?x1691 (* 216 (* c k k n))))
 (let ((?x1039 (* (- 1) (* k m m m m m n))))
 (let ((?x1038 (* (- 1) (* c m m m m m n))))
 (let ((?x1130 (* (- 2) (* k k m m m m n))))
 (let ((?x1127 (* (- 2) (* c k m m m m n))))
 (let ((?x1035 (* (- 1) (* k k k m m m n))))
 (let ((?x1034 (* (- 1) (* c k k m m m n))))
 (let ((?x1925 (* (- 6) (* k m m m m n))))
 (let ((?x1928 (* (- 6) (* c m m m m n))))
 (let ((?x1927 (* (- 12) (* k k m m m n))))
 (let ((?x1930 (* (- 12) (* c k m m m n))))
 (let ((?x1929 (* (- 6) (* k k k m m n))))
 (let ((?x1932 (* (- 6) (* c k k m m n))))
 (let ((?x835 (* 36 (* k m m m n))))
 (let ((?x825 (* 36 (* c m m m n))))
 (let ((?x985 (* 72 (* k k m m n))))
 (let ((?x984 (* 72 (* c k m m n))))
 (let ((?x779 (* 36 (* k k k m n))))
 (let ((?x769 (* 36 (* c k k m n))))
 (let ((?x1021 (* (- 1) (* k m m m m m))))
 (let ((?x1020 (* (- 1) (* c m m m m m))))
 (let ((?x1088 (* (- 2) (* k k m m m m))))
 (let ((?x1085 (* (- 2) (* c k m m m m))))
 (let ((?x1017 (* (- 1) (* k k k m m m))))
 (let ((?x1016 (* (- 1) (* c k k m m m))))
 (let ((?x1082 (* (- 12) (* k m m m m))))
 (let ((?x1079 (* (- 12) (* c m m m m))))
 (let ((?x1076 (* (- 12) (* c k k m m))))
 (let ((?x1073 (* (- 12) (* k k k m m))))
 (let ((?x1069 (* (- 24) (* c k m m m))))
 (let ((?x1066 (* (- 24) (* k k m m m))))
 (let ((?x1062 (* (- 36) (* k m m m))))
 (let ((?x1059 (* (- 36) (* c m m m))))
 (let ((?x553 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1056 (* (- 36) (* c k k m))))
 (let ((?x1053 (* (- 36) (* k k k m))))
 (let ((?x1049 (* (- 72) (* c k m m))))
 (let ((?x1046 (* (- 72) (* k k m m))))
 (let ((?x186 (* m ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x97 (* n ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x1903 (+ (* 6 ?x97) (* (- 1) ?x186) (* (- 1) (* m ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)) ?x1046 ?x1049 ?x1053 ?x1056 (* 6 (* ?x319 ?x365 ?x365 ?x74 ?x74 ?x73)) (* 6 ?x553) ?x1059 ?x1062 ?x1066 (* 6 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)) ?x1069 ?x1073 (* (- 6) (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)) ?x1076 ?x1079 ?x1082 ?x1016 ?x1017 ?x1085 ?x1088 ?x1020 ?x1021 ?x769 ?x779 ?x984 ?x985 ?x825 ?x835 ?x1932 ?x1929 ?x1930 ?x1927 ?x1928 ?x1925 ?x1034 ?x1035 ?x1127 ?x1130 ?x1038 ?x1039 ?x1691 ?x1694 ?x1698 ?x1701 ?x1704 ?x1707 ?x1710 ?x1713 ?x1716 ?x1719 ?x1722 ?x1725 ?x1728 ?x1731 ?x1734 ?x1737 ?x1740 ?x1743 ?x1654 ?x1655 ?x1746 ?x1749 ?x1658 ?x1659 (* 6 (* n ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)) (* m ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73) (* (- 6) (* n ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)))))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x1911 (and $x130 $x214 $x266 $x304 (not (= ?x1903 0)))))
 (let ((?x624 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x581 (+ (* (- 1) ?x553) (* (- 1) (* ?x319 ?x365 ?x365 ?x74 ?x74 ?x73)) ?x624 (* (- 1) (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)))))
 (let (($x644 (not (= (* (+ (- 6) m (* (- 6) n)) ?x581) 0))))
 (let (($x1755 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x413 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x478 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x413 $x1755 $x644)))
 (rewrite (= $x478 $x1911)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x488 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x600 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)))
 (let ((?x624 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x553 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x581 (+ (* (- 1) ?x553) (* (- 1) (* ?x319 ?x365 ?x365 ?x74 ?x74 ?x73)) ?x624 (* (- 1) ?x600))))
 (let (($x644 (not (= (* (+ (- 6) m (* (- 6) n)) ?x581) 0))))
 (let (($x1755 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1406 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1337 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= ?x1337 (- 4)) $x1406 $x1755 $x644)))))))))))))))) :qid k!34))
 ))
 (let ((?x434 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x600 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)))
 (let ((?x624 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x553 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x581 (+ (* (- 1) ?x553) (* (- 1) (* ?x319 ?x365 ?x365 ?x74 ?x74 ?x73)) ?x624 (* (- 1) ?x600))))
 (let (($x644 (not (= (* (+ (- 6) m (* (- 6) n)) ?x581) 0))))
 (let (($x1755 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x413 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x478 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x413 $x1755 $x644)))
 (let (($x1406 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1337 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x557 (and $x130 (= ?x1337 (- 4)) $x1406 $x1755 $x644)))
 (rewrite (= $x557 $x478)))))))))))))))))))))))))
 ))
 (let (($x88 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ n 1)))
 (let ((?x75 (+ m 6)))
 (let ((?x74 (+ k m)))
 (let ((?x73 (+ c k)))
 (let ((?x76 (* (- 1) ?x73 ?x73 ?x73 ?x74 ?x74 ?x74 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69)))
 (let ((?x80 (+ (- ?x76 (* ?x73 ?x74 ?x74 ?x75 ?x75 ?x69)) (* ?x73 ?x73 ?x73 ?x74 ?x74 ?x75 ?x75 ?x75 ?x69))))
 (let ((?x83 (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) (- ?x80 (* ?x73 ?x74 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x83 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x543 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x73 (+ c k)))
 (let ((?x74 (+ k m)))
 (let ((?x365 (+ 6 m)))
 (let ((?x319 (+ 1 n)))
 (let ((?x600 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x73)))
 (let ((?x624 (* ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x553 (* ?x319 ?x319 ?x319 ?x365 ?x365 ?x365 ?x74 ?x74 ?x74 ?x73 ?x73 ?x73)))
 (let ((?x581 (+ (* (- 1) ?x553) (* (- 1) (* ?x319 ?x365 ?x365 ?x74 ?x74 ?x73)) ?x624 (* (- 1) ?x600))))
 (let (($x644 (not (= (* (+ (- 6) m (* (- 6) n)) ?x581) 0))))
 (let (($x1755 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1406 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1337 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x557 (and $x130 (= ?x1337 (- 4)) $x1406 $x1755 $x644)))
 (let ((?x69 (+ n 1)))
 (let ((?x75 (+ m 6)))
 (let ((?x76 (* (- 1) ?x73 ?x73 ?x73 ?x74 ?x74 ?x74 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69)))
 (let ((?x80 (+ (- ?x76 (* ?x73 ?x74 ?x74 ?x75 ?x75 ?x69)) (* ?x73 ?x73 ?x73 ?x74 ?x74 ?x75 ?x75 ?x75 ?x69))))
 (let ((?x83 (* (- (+ (* (- 6) 1) m 6) (* 6 ?x69)) (- ?x80 (* ?x73 ?x74 ?x75 ?x75 ?x75 ?x69 ?x69 ?x69)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x87 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x83 0))))))
 (rewrite (= $x87 $x557))))))))))))))))))))))))))))))
 ))
 (let ((@x89 (asserted $x88)))
 (let ((@x477 (mp (mp @x89 (quant-intro (proof-bind ?x543) (= $x88 $x488)) $x488) (rewrite (= $x488 $x488)) $x488)))
 (let ((@x1595 (mp (mp @x477 (quant-intro (proof-bind ?x434) (= $x488 $x1607)) $x1607) (quant-intro (proof-bind ?x419) (= $x1607 $x604)) $x604)))
 (let ((@x669 (mp (mp~ @x1595 (sk (~ $x604 $x816)) $x816) (rewrite (= $x816 $x951)) $x951)))
 (let ((@x173 (and-elim @x669 $x615)))
 (let ((@x524 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x615) $x752)) @x173 $x752)))
 (let (($x747 (>= ?x483 (- 4))))
 (let ((@x857 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x615) $x747)) @x173 $x747)))
 (let (($x748 (<= ?x459 (- 1))))
 (let ((@x443 (and-elim @x669 $x439)))
 (let ((@x494 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x439) $x748)) @x443 $x748)))
 (let (($x651 (>= ?x459 (- 1))))
 (let ((@x918 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x439) $x651)) @x443 $x651)))
 (let (($x402 (<= ?x657 (- 6))))
 (let ((@x675 (and-elim @x669 $x649)))
 (let ((@x565 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x649) $x402)) @x675 $x402)))
 (let (($x762 (>= ?x657 (- 6))))
 (let ((@x819 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x649) $x762)) @x675 $x762)))
 (let (($x740 (<= ?x426 (- 1))))
 (let ((@x441 (and-elim @x669 $x431)))
 (let ((@x756 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x431) $x740)) @x441 $x740)))
 (let (($x401 (>= ?x426 (- 1))))
 (let ((@x1238 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x431) $x401)) @x441 $x401)))
 (let (($x519 (not (<= ?x944 0))))
 (let (($x486 (>= ?x944 0)))
 (let ((@x922 ((_ th-lemma arith) (hypothesis (not $x486)) @x1238 @x756 @x819 @x565 @x1238 @x756 @x1238 @x756 @x918 @x494 @x1238 @x756 @x918 @x494 @x1238 @x756 @x819 @x565 @x819 @x565 @x918 @x494 @x857 @x524 false)))
 (let ((@x900 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x942 $x519 (not $x486))) (and-elim @x669 $x664) (or $x519 (not $x486)))))
 ((_ th-lemma arith) (unit-resolution @x900 (lemma @x922 $x486) $x519) @x1238 @x756 @x819 @x565 @x1238 @x756 @x1238 @x756 @x918 @x494 @x1238 @x756 @x918 @x494 @x1238 @x756 @x819 @x565 @x819 @x565 @x918 @x494 @x857 @x524 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        17
 :arith-assert-upper        11
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           7
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             644
 :arith-nonlinear-bounds    10
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             3
 :arith-patches_succ        1
 :arith-pivots              9
 :arith-row-summations      10
 :arith-tableau-max-columns 110
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.92
 :memory                    3.31
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                1599018
 :num-checks                1
 :propagations              10
 :rlimit-count              14112
 :time                      0.02
 :total-time                0.02)
