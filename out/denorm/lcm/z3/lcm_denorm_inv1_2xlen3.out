unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun v!4 () Int)
(declare-fun k!10 () Int)
(declare-fun k!00 () Int)
(declare-fun x!3 () Int)
(declare-fun u!5 () Int)
(proof
(let ((?x694 (* v!4 y!2)))
 (let ((?x877 (* (- 1) k!10)))
 (let ((?x239 (* (- 1) k!00)))
 (let ((?x247 (* u!5 x!3)))
 (let ((?x606 (+ ?x247 ?x239 ?x877 ?x694)))
 (let ((?x1574 (* u!5 u!5 v!4 v!4 y!2 y!2 y!2 y!2)))
 (let ((?x1573 (* 3 (* u!5 u!5 u!5 u!5 x!3 x!3 y!2 y!2))))
 (let ((?x1559 (* 2 (* u!5 u!5 u!5 v!4 y!2 y!2 y!2 y!2))))
 (let ((?x245 (* (- 1) (* u!5 v!4 v!4 v!4 y!2 y!2))))
 (let ((?x1533 (* (- 3) (* u!5 u!5 v!4 v!4 y!2 y!2))))
 (let ((?x1531 (* (- 3) (* u!5 u!5 u!5 v!4 y!2 y!2))))
 (let ((?x1529 (* (- 1) (* u!5 u!5 u!5 u!5 y!2 y!2))))
 (let ((?x1521 (* (- 1) (* u!5 u!5 u!5 u!5 x!3 x!3 x!3 y!2))))
 (let ((?x1515 (* u!5 u!5 u!5 u!5 y!2 y!2 y!2 y!2)))
 (let ((?x1506 (* (- 1) (* y!2 y!2))))
 (let ((?x1507 (* u!5 u!5 u!5 u!5 x!3 y!2)))
 (let ((?x237 (* (- 1) (* u!5 u!5 x!3 x!3 x!3 v!4 v!4 y!2))))
 (let ((?x1153 (* u!5 x!3 v!4 v!4 v!4 y!2)))
 (let ((?x966 (* (- 3) (* u!5 u!5 u!5 u!5 x!3 y!2 y!2 y!2))))
 (let ((?x1076 (+ (* 6 (* u!5 u!5 u!5 x!3 x!3 v!4 y!2 y!2)) (* 3 (* u!5 u!5 u!5 x!3 v!4 y!2)) (* 3 (* u!5 u!5 x!3 v!4 v!4 y!2)) ?x966 ?x1153 (* (- 2) (* u!5 u!5 u!5 x!3 x!3 x!3 v!4 y!2)) ?x237 (* 3 (* u!5 u!5 x!3 x!3 v!4 v!4 y!2 y!2)) (* (- 6) (* u!5 u!5 u!5 x!3 v!4 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 x!3 v!4 v!4 y!2 y!2 y!2)) ?x1507 ?x1506 ?x1515 ?x1521 ?x1529 ?x1531 ?x1533 ?x245 ?x1559 ?x1573 ?x1574)))
 (let ((?x1505 (* v!4 y!2 y!2 y!2 y!2 y!2)))
 (let ((?x1560 (* (- 1) (* x!3 x!3 x!3 v!4 y!2 y!2))))
 (let ((?x1329 (* (- 1) (* u!5 x!3 x!3 x!3 y!2 y!2))))
 (let ((?x1323 (* (- 1) (* u!5 u!5 u!5 y!2 y!2 y!2))))
 (let ((?x984 (* u!5 y!2 y!2 y!2 y!2 y!2)))
 (let ((?x977 (* (- 3) (* u!5 x!3 y!2 y!2 y!2 y!2))))
 (let ((?x795 (* u!5 u!5 u!5 x!3 y!2 y!2)))
 (let ((?x792 (* (- 1) (* u!5 v!4 v!4))))
 (let ((?x785 (* (- 2) (* u!5 u!5 v!4))))
 (let ((?x700 (* (- 1) (* u!5 u!5 u!5))))
 (let ((?x822 (* 3 (* u!5 x!3 x!3 y!2 y!2 y!2))))
 (let ((?x1584 (+ ?x822 ?x700 ?x785 ?x792 ?x795 ?x977 ?x984 ?x1323 ?x1329 ?x1560 (* 3 (* x!3 x!3 v!4 y!2 y!2 y!2)) (* (- 3) (* x!3 v!4 y!2 y!2 y!2 y!2)) ?x1505)))
 (let (($x1171 (= (* ?x1584 ?x1076 ?x606) 0)))
 (let (($x1084 (<= ?x606 0)))
 (let (($x110 (= ?x606 0)))
 (let ((?x1121 (* 2 (* x!3 y!2))))
 (let ((?x495 (* (- 1) (* x!3 x!3))))
 (let ((?x1188 (+ ?x495 (* (- 1) (* x!3 x!3 v!4 v!4 v!4 v!4)) (* x!3 v!4 v!4 v!4 v!4 y!2) ?x1121 (* (- 1) (* x!3 x!3 x!3 v!4 v!4 v!4 v!4 y!2)) (* (- 2) (* u!5 x!3 x!3 x!3 v!4 v!4 v!4 y!2)) ?x1153 (* (- 1) (* u!5 x!3 x!3 v!4 v!4 v!4)) ?x237 (* u!5 u!5 x!3 x!3 x!3 x!3 v!4 v!4) (* 2 (* u!5 x!3 x!3 x!3 x!3 v!4 v!4 v!4)) (* x!3 x!3 x!3 x!3 v!4 v!4 v!4 v!4) ?x1506)))
 (let ((?x290 (* (- 1) (* v!4 v!4 v!4))))
 (let ((?x1581 (* u!5 u!5 u!5 x!3 x!3 x!3)))
 (let ((?x313 (* (- 2) (* u!5 u!5 u!5 x!3 x!3 y!2))))
 (let ((?x1140 (+ (* 3 (* u!5 u!5 x!3 v!4 y!2 y!2)) (* 3 (* u!5 x!3 v!4 v!4 y!2 y!2)) ?x313 (* (- 1) (* x!3 x!3 x!3 x!3 x!3 v!4)) (* x!3 v!4 v!4 v!4 y!2 y!2) ?x792 ?x795 (* (- 6) (* u!5 x!3 x!3 v!4 v!4 y!2)) (* 3 (* u!5 u!5 x!3 x!3 x!3 v!4)) (* x!3 x!3 x!3 v!4 v!4 v!4) (* 3 (* u!5 x!3 x!3 x!3 v!4 v!4)) (* 2 (* x!3 x!3 x!3 x!3 v!4 y!2)) ?x1560 (* (- 2) (* x!3 x!3 v!4 v!4 v!4 y!2)) ?x1581 ?x290 (* (- 6) (* u!5 u!5 x!3 x!3 v!4 y!2)))))
 (let ((?x1189 (* ?x1140 ?x1188 ?x606)))
 (let (($x1132 (= ?x1189 0)))
 (let (($x1131 (or (not $x1171) (not $x1132))))
 (let (($x1217 (and $x110 $x1131)))
 (let ((?x139 (+ ?x247 ?x694 ?x239 ?x877)))
 (let ((?x1527 (* u!5 v!4 v!4 v!4 x!3 y!2)))
 (let ((?x1520 (* (- 1) (* u!5 u!5 v!4 v!4 x!3 x!3 x!3 y!2))))
 (let ((?x93 (+ ?x1506 ?x1520 ?x1527 (* (- 2) (* u!5 v!4 v!4 v!4 x!3 x!3 x!3 y!2)) (* (- 1) (* v!4 v!4 v!4 v!4 x!3 x!3 x!3 y!2)) (* v!4 v!4 v!4 v!4 x!3 y!2) (* (- 1) (* u!5 v!4 v!4 v!4 x!3 x!3)) (* (- 1) (* v!4 v!4 v!4 v!4 x!3 x!3)) ?x495 ?x1121 (* u!5 u!5 v!4 v!4 x!3 x!3 x!3 x!3) (* 2 (* u!5 v!4 v!4 v!4 x!3 x!3 x!3 x!3)) (* v!4 v!4 v!4 v!4 x!3 x!3 x!3 x!3))))
 (let ((?x677 (* (- 1) (* v!4 x!3 x!3 x!3 y!2 y!2))))
 (let ((?x1160 (+ (* 3 (* u!5 u!5 v!4 x!3 y!2 y!2)) (* 3 (* u!5 v!4 v!4 x!3 y!2 y!2)) (* v!4 v!4 v!4 x!3 y!2 y!2) ?x1581 ?x792 ?x795 ?x290 ?x677 (* 3 (* u!5 v!4 v!4 x!3 x!3 x!3)) (* 3 (* u!5 u!5 v!4 x!3 x!3 x!3)) (* v!4 v!4 v!4 x!3 x!3 x!3) ?x313 (* (- 6) (* u!5 u!5 v!4 x!3 x!3 y!2)) (* (- 6) (* u!5 v!4 v!4 x!3 x!3 y!2)) (* (- 2) (* v!4 v!4 v!4 x!3 x!3 y!2)) (* (- 1) (* v!4 x!3 x!3 x!3 x!3 x!3)) (* 2 (* v!4 x!3 x!3 x!3 x!3 y!2)))))
 (let ((?x753 (+ ?x1506 ?x1515 (* 6 (* u!5 u!5 u!5 v!4 x!3 x!3 y!2 y!2)) ?x1521 (* (- 2) (* u!5 u!5 u!5 v!4 x!3 x!3 x!3 y!2)) ?x1520 ?x1507 (* 3 (* u!5 u!5 u!5 v!4 x!3 y!2)) (* 3 (* u!5 u!5 v!4 v!4 x!3 y!2)) ?x1527 ?x1529 ?x1531 ?x1533 ?x245 (* 3 (* u!5 u!5 v!4 v!4 x!3 x!3 y!2 y!2)) ?x966 (* (- 6) (* u!5 u!5 u!5 v!4 x!3 y!2 y!2 y!2)) (* (- 3) (* u!5 u!5 v!4 v!4 x!3 y!2 y!2 y!2)) ?x1559 ?x1573 ?x1574)))
 (let ((?x1513 (+ ?x700 ?x785 ?x792 ?x795 ?x1323 ?x1329 ?x677 ?x822 (* 3 (* v!4 x!3 x!3 y!2 y!2 y!2)) ?x977 (* (- 3) (* v!4 x!3 y!2 y!2 y!2 y!2)) ?x984 ?x1505)))
 (let (($x325 (or (not (= (* ?x1513 ?x753 ?x139) 0)) (not (= (* ?x1160 ?x93 ?x139) 0)))))
 (let (($x571 (and (= ?x139 0) $x325)))
 (let (($x896 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x877 (* (- 1) k!10)))
 (let ((?x239 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x758 (+ ?x33 ?x34 ?x239 ?x877)))
 (let ((?x915 (* 2 (* x y))))
 (let ((?x910 (* (- 1) (* x x))))
 (let ((?x843 (* (- 1) (* v v v v x x))))
 (let ((?x839 (* (- 1) (* u v v v x x))))
 (let ((?x832 (* v v v v x y)))
 (let ((?x816 (* (- 1) (* v v v v x x x y))))
 (let ((?x440 (* u v v v x y)))
 (let ((?x368 (* (- 1) (* u u v v x x x y))))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x1554 (+ ?x535 ?x368 ?x440 (* (- 2) (* u v v v x x x y)) ?x816 ?x832 ?x839 ?x843 ?x910 ?x915 (* u u v v x x x x) (* 2 (* u v v v x x x x)) (* v v v v x x x x))))
 (let ((?x329 (* (- 1) (* v x x x y y))))
 (let ((?x175 (* u u u x y y)))
 (let ((?x166 (* (- 1) (* u v v))))
 (let ((?x793 (+ (* 3 (* u u v x y y)) (* 3 (* u v v x y y)) (* v v v x y y) (* u u u x x x) ?x166 ?x175 (* (- 1) (* v v v)) ?x329 (* 3 (* u v v x x x)) (* 3 (* u u v x x x)) (* v v v x x x) (* (- 2) (* u u u x x y)) (* (- 6) (* u u v x x y)) (* (- 6) (* u v v x x y)) (* (- 2) (* v v v x x y)) (* (- 1) (* v x x x x x)) (* 2 (* v x x x x y)))))
 (let ((?x507 (* (- 1) (* u v v v y y))))
 (let ((?x516 (* (- 3) (* u u v v y y))))
 (let ((?x515 (* (- 3) (* u u u v y y))))
 (let ((?x463 (* (- 1) (* u u u u y y))))
 (let ((?x514 (* 3 (* u u v v x y))))
 (let ((?x513 (* 3 (* u u u v x y))))
 (let ((?x433 (* u u u u x y)))
 (let ((?x362 (* (- 1) (* u u u u x x x y))))
 (let ((?x1021 (+ ?x535 (* u u u u y y y y) (* 6 (* u u u v x x y y)) ?x362 (* (- 2) (* u u u v x x x y)) ?x368 ?x433 ?x513 ?x514 ?x440 ?x463 ?x515 ?x516 ?x507 (* 3 (* u u v v x x y y)) (* (- 3) (* u u u u x y y y)) (* (- 6) (* u u u v x y y y)) (* (- 3) (* u u v v x y y y)) (* 2 (* u u u v y y y y)) (* 3 (* u u u u x x y y)) (* u u v v y y y y))))
 (let ((?x299 (* v y y y y y)))
 (let ((?x295 (* u y y y y y)))
 (let ((?x348 (* (- 3) (* v x y y y y))))
 (let ((?x345 (* (- 3) (* u x y y y y))))
 (let ((?x342 (* 3 (* v x x y y y))))
 (let ((?x339 (* 3 (* u x x y y y))))
 (let ((?x328 (* (- 1) (* u x x x y y))))
 (let ((?x183 (* (- 1) (* u u u y y y))))
 (let ((?x160 (* (- 1) (* u u u))))
 (let ((?x665 (+ ?x160 (* (- 2) (* u u v)) ?x166 ?x175 ?x183 ?x328 ?x329 ?x339 ?x342 ?x345 ?x348 ?x295 ?x299)))
 (let (($x1586 (or (not (= (* ?x665 ?x1021 ?x758) 0)) (not (= (* ?x793 ?x1554 ?x758) 0)))))
 (and (= ?x758 0) $x1586))))))))))))))))))))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x735 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x877 (* (- 1) k!10)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x358 (+ y ?x429)))
 (let ((?x883 (* ?x358 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x239 (* (- 1) k!00)))
 (let ((?x189 (+ (* (- 1) (* ?x61 ?x61 ?x358 x x x v v)) (* ?x61 ?x358 x v v v) (* (- 1) (* ?x358 ?x358)))))
 (let ((?x323 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x358 ?x358 x) (* (- 1) (* ?x358 ?x358 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x156 (+ x ?x96)))
 (let ((?x878 (* ?x156 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x760 (+ (* (- 1) (* ?x44 ?x44 ?x156 ?x156 ?x156 y u u)) (* ?x44 ?x44 ?x44 ?x156 y u) ?x535)))
 (let ((?x745 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x156 y y u u u) (* (- 1) (* ?x44 ?x156 ?x156 ?x156 y y)))))
 (let (($x322 (or (not (= (* ?x745 ?x760 (+ ?x239 ?x878 ?x45 ?x877)) 0)) (not (= (* ?x323 ?x189 (+ ?x239 ?x62 ?x883 ?x877)) 0)))))
 (let ((?x330 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (and (= ?x330 0) $x322))))))))))))))))))))) :qid k!29))
 ))
 (let ((?x737 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x877 (* (- 1) k!10)))
 (let ((?x239 (* (- 1) k!00)))
 (let ((?x34 (* v y)))
 (let ((?x33 (* u x)))
 (let ((?x758 (+ ?x33 ?x34 ?x239 ?x877)))
 (let ((?x915 (* 2 (* x y))))
 (let ((?x910 (* (- 1) (* x x))))
 (let ((?x843 (* (- 1) (* v v v v x x))))
 (let ((?x839 (* (- 1) (* u v v v x x))))
 (let ((?x832 (* v v v v x y)))
 (let ((?x816 (* (- 1) (* v v v v x x x y))))
 (let ((?x440 (* u v v v x y)))
 (let ((?x368 (* (- 1) (* u u v v x x x y))))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x1554 (+ ?x535 ?x368 ?x440 (* (- 2) (* u v v v x x x y)) ?x816 ?x832 ?x839 ?x843 ?x910 ?x915 (* u u v v x x x x) (* 2 (* u v v v x x x x)) (* v v v v x x x x))))
 (let ((?x329 (* (- 1) (* v x x x y y))))
 (let ((?x175 (* u u u x y y)))
 (let ((?x166 (* (- 1) (* u v v))))
 (let ((?x793 (+ (* 3 (* u u v x y y)) (* 3 (* u v v x y y)) (* v v v x y y) (* u u u x x x) ?x166 ?x175 (* (- 1) (* v v v)) ?x329 (* 3 (* u v v x x x)) (* 3 (* u u v x x x)) (* v v v x x x) (* (- 2) (* u u u x x y)) (* (- 6) (* u u v x x y)) (* (- 6) (* u v v x x y)) (* (- 2) (* v v v x x y)) (* (- 1) (* v x x x x x)) (* 2 (* v x x x x y)))))
 (let ((?x507 (* (- 1) (* u v v v y y))))
 (let ((?x516 (* (- 3) (* u u v v y y))))
 (let ((?x515 (* (- 3) (* u u u v y y))))
 (let ((?x463 (* (- 1) (* u u u u y y))))
 (let ((?x514 (* 3 (* u u v v x y))))
 (let ((?x513 (* 3 (* u u u v x y))))
 (let ((?x433 (* u u u u x y)))
 (let ((?x362 (* (- 1) (* u u u u x x x y))))
 (let ((?x1021 (+ ?x535 (* u u u u y y y y) (* 6 (* u u u v x x y y)) ?x362 (* (- 2) (* u u u v x x x y)) ?x368 ?x433 ?x513 ?x514 ?x440 ?x463 ?x515 ?x516 ?x507 (* 3 (* u u v v x x y y)) (* (- 3) (* u u u u x y y y)) (* (- 6) (* u u u v x y y y)) (* (- 3) (* u u v v x y y y)) (* 2 (* u u u v y y y y)) (* 3 (* u u u u x x y y)) (* u u v v y y y y))))
 (let ((?x299 (* v y y y y y)))
 (let ((?x295 (* u y y y y y)))
 (let ((?x348 (* (- 3) (* v x y y y y))))
 (let ((?x345 (* (- 3) (* u x y y y y))))
 (let ((?x342 (* 3 (* v x x y y y))))
 (let ((?x339 (* 3 (* u x x y y y))))
 (let ((?x328 (* (- 1) (* u x x x y y))))
 (let ((?x183 (* (- 1) (* u u u y y y))))
 (let ((?x160 (* (- 1) (* u u u))))
 (let ((?x665 (+ ?x160 (* (- 2) (* u u v)) ?x166 ?x175 ?x183 ?x328 ?x329 ?x339 ?x342 ?x345 ?x348 ?x295 ?x299)))
 (let (($x1586 (or (not (= (* ?x665 ?x1021 ?x758) 0)) (not (= (* ?x793 ?x1554 ?x758) 0)))))
 (let (($x1625 (and (= ?x758 0) $x1586)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x358 (+ y ?x429)))
 (let ((?x883 (* ?x358 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x189 (+ (* (- 1) (* ?x61 ?x61 ?x358 x x x v v)) (* ?x61 ?x358 x v v v) (* (- 1) (* ?x358 ?x358)))))
 (let ((?x323 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x358 ?x358 x) (* (- 1) (* ?x358 ?x358 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x156 (+ x ?x96)))
 (let ((?x878 (* ?x156 u)))
 (let ((?x760 (+ (* (- 1) (* ?x44 ?x44 ?x156 ?x156 ?x156 y u u)) (* ?x44 ?x44 ?x44 ?x156 y u) ?x535)))
 (let ((?x745 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x156 y y u u u) (* (- 1) (* ?x44 ?x156 ?x156 ?x156 y y)))))
 (let (($x322 (or (not (= (* ?x745 ?x760 (+ ?x239 ?x878 ?x45 ?x877)) 0)) (not (= (* ?x323 ?x189 (+ ?x239 ?x62 ?x883 ?x877)) 0)))))
 (let ((?x330 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x296 (and (= ?x330 0) $x322)))
 (rewrite (= $x296 $x1625)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x890 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x877 (* (- 1) k!10)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x358 (+ y ?x429)))
 (let ((?x883 (* ?x358 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x239 (* (- 1) k!00)))
 (let ((?x189 (+ (* (- 1) (* ?x61 ?x61 ?x358 x x x v v)) (* ?x61 ?x358 x v v v) (* (- 1) (* ?x358 ?x358)))))
 (let ((?x323 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x358 ?x358 x) (* (- 1) (* ?x358 ?x358 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x156 (+ x ?x96)))
 (let ((?x878 (* ?x156 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x760 (+ (* (- 1) (* ?x44 ?x44 ?x156 ?x156 ?x156 y u u)) (* ?x44 ?x44 ?x44 ?x156 y u) ?x535)))
 (let ((?x745 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x156 y y u u u) (* (- 1) (* ?x44 ?x156 ?x156 ?x156 y y)))))
 (let (($x322 (or (not (= (* ?x745 ?x760 (+ ?x239 ?x878 ?x45 ?x877)) 0)) (not (= (* ?x323 ?x189 (+ ?x239 ?x62 ?x883 ?x877)) 0)))))
 (and (= (+ ?x239 (* x u) (* y v) ?x877) 0) $x322)))))))))))))))))))) :qid k!29))
 ))
 (let ((?x867 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x877 (* (- 1) k!10)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x358 (+ y ?x429)))
 (let ((?x883 (* ?x358 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x239 (* (- 1) k!00)))
 (let ((?x189 (+ (* (- 1) (* ?x61 ?x61 ?x358 x x x v v)) (* ?x61 ?x358 x v v v) (* (- 1) (* ?x358 ?x358)))))
 (let ((?x323 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x358 ?x358 x) (* (- 1) (* ?x358 ?x358 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x156 (+ x ?x96)))
 (let ((?x878 (* ?x156 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x760 (+ (* (- 1) (* ?x44 ?x44 ?x156 ?x156 ?x156 y u u)) (* ?x44 ?x44 ?x44 ?x156 y u) ?x535)))
 (let ((?x745 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x156 y y u u u) (* (- 1) (* ?x44 ?x156 ?x156 ?x156 y y)))))
 (let (($x322 (or (not (= (* ?x745 ?x760 (+ ?x239 ?x878 ?x45 ?x877)) 0)) (not (= (* ?x323 ?x189 (+ ?x239 ?x62 ?x883 ?x877)) 0)))))
 (let ((?x330 (+ k!00 (* (- 1) (* x u)) (* (- 1) (* y v)) k!10)))
 (let (($x296 (and (= ?x330 0) $x322)))
 (let (($x886 (and (= (+ ?x239 (* x u) (* y v) ?x877) 0) $x322)))
 (rewrite (= $x886 $x296)))))))))))))))))))))))))
 ))
 (let (($x659 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x38 (* v00 y00)))
 (let ((?x107 (* (- 1) ?x38)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x358 (+ y ?x429)))
 (let ((?x883 (* ?x358 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x91 (* (- 1) (* u00 x00))))
 (let ((?x189 (+ (* (- 1) (* ?x61 ?x61 ?x358 x x x v v)) (* ?x61 ?x358 x v v v) (* (- 1) (* ?x358 ?x358)))))
 (let ((?x323 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x358 ?x358 x) (* (- 1) (* ?x358 ?x358 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x156 (+ x ?x96)))
 (let ((?x878 (* ?x156 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x760 (+ (* (- 1) (* ?x44 ?x44 ?x156 ?x156 ?x156 y u u)) (* ?x44 ?x44 ?x44 ?x156 y u) ?x535)))
 (let ((?x745 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x156 y y u u u) (* (- 1) (* ?x44 ?x156 ?x156 ?x156 y y)))))
 (let (($x231 (or (not (= (* ?x745 ?x760 (+ ?x91 ?x878 ?x45 ?x107)) 0)) (not (= (* ?x323 ?x189 (+ ?x91 ?x62 ?x883 ?x107)) 0)))))
 (and (= (+ ?x91 (* x u) (* y v) ?x107) 0) $x231))))))))))))))))))))) :qid k!29))
 ))
 (let ((?x898 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x877 (* (- 1) k!10)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x358 (+ y ?x429)))
 (let ((?x883 (* ?x358 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x239 (* (- 1) k!00)))
 (let ((?x189 (+ (* (- 1) (* ?x61 ?x61 ?x358 x x x v v)) (* ?x61 ?x358 x v v v) (* (- 1) (* ?x358 ?x358)))))
 (let ((?x323 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x358 ?x358 x) (* (- 1) (* ?x358 ?x358 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x156 (+ x ?x96)))
 (let ((?x878 (* ?x156 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x760 (+ (* (- 1) (* ?x44 ?x44 ?x156 ?x156 ?x156 y u u)) (* ?x44 ?x44 ?x44 ?x156 y u) ?x535)))
 (let ((?x745 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x156 y y u u u) (* (- 1) (* ?x44 ?x156 ?x156 ?x156 y y)))))
 (let (($x322 (or (not (= (* ?x745 ?x760 (+ ?x239 ?x878 ?x45 ?x877)) 0)) (not (= (* ?x323 ?x189 (+ ?x239 ?x62 ?x883 ?x877)) 0)))))
 (let (($x886 (and (= (+ ?x239 (* x u) (* y v) ?x877) 0) $x322)))
 (let ((?x569 (* ?x323 ?x189 (+ (* (- 1) (* u00 x00)) ?x62 ?x883 (* (- 1) (* v00 y00))))))
 (let ((?x335 (* ?x745 ?x760 (+ (* (- 1) (* u00 x00)) ?x878 ?x45 (* (- 1) (* v00 y00))))))
 (let ((?x38 (* v00 y00)))
 (let ((?x107 (* (- 1) ?x38)))
 (let ((?x539 (* y v)))
 (let ((?x537 (* x u)))
 (let ((?x91 (* (- 1) (* u00 x00))))
 (let (($x748 (and (= (+ ?x91 ?x537 ?x539 ?x107) 0) (or (not (= ?x335 0)) (not (= ?x569 0))))))
 (rewrite (= $x748 $x886)))))))))))))))))))))))))))))))
 ))
 (let (($x82 (exists ((u Int) (v Int) (x Int) (y Int) )(! (let ((?x63 (- y x)))
 (let ((?x61 (+ u v)))
 (let ((?x29 (- 1)))
 (let ((?x74 (+ (* ?x29 ?x61 ?x61 v v x x x ?x63) (* ?x61 v v v x ?x63))))
 (let ((?x71 (- (+ (* ?x29 ?x61 v v) (* ?x61 ?x61 ?x61 x ?x63 ?x63)) (* v x x x ?x63 ?x63))))
 (let ((?x38 (* v00 y00)))
 (let ((?x77 (* (- (+ (* ?x29 u00 x00) (* ?x61 x) (* v ?x63)) ?x38) ?x71 (- ?x74 (* ?x63 ?x63)))))
 (let ((?x56 (* y y)))
 (let ((?x42 (- x y)))
 (let ((?x44 (+ v u)))
 (let ((?x55 (+ (* ?x29 u u ?x44 ?x44 ?x42 ?x42 ?x42 y) (* u ?x44 ?x44 ?x44 ?x42 y))))
 (let ((?x52 (- (+ (* ?x29 u ?x44 ?x44) (* u u u ?x42 y y)) (* ?x44 ?x42 ?x42 ?x42 y y))))
 (let ((?x58 (* (- (+ (* ?x29 u00 x00) (* u ?x42) (* ?x44 y)) ?x38) ?x52 (- ?x55 ?x56))))
 (let (($x41 (= (- (+ (* ?x29 u00 x00) (* u x) (* v y)) ?x38) 0)))
 (and $x41 (or (not (= ?x58 0)) (not (= ?x77 0)))))))))))))))))) :qid k!29))
 ))
 (let ((?x888 (lambda ((u Int) (v Int) (x Int) (y Int) )(let ((?x38 (* v00 y00)))
 (let ((?x107 (* (- 1) ?x38)))
 (let ((?x429 (* (- 1) x)))
 (let ((?x358 (+ y ?x429)))
 (let ((?x883 (* ?x358 v)))
 (let ((?x61 (+ u v)))
 (let ((?x62 (* ?x61 x)))
 (let ((?x91 (* (- 1) (* u00 x00))))
 (let ((?x189 (+ (* (- 1) (* ?x61 ?x61 ?x358 x x x v v)) (* ?x61 ?x358 x v v v) (* (- 1) (* ?x358 ?x358)))))
 (let ((?x323 (+ (* (- 1) (* ?x61 v v)) (* ?x61 ?x61 ?x61 ?x358 ?x358 x) (* (- 1) (* ?x358 ?x358 x x x v)))))
 (let ((?x44 (+ v u)))
 (let ((?x45 (* ?x44 y)))
 (let ((?x96 (* (- 1) y)))
 (let ((?x156 (+ x ?x96)))
 (let ((?x878 (* ?x156 u)))
 (let ((?x56 (* y y)))
 (let ((?x535 (* (- 1) ?x56)))
 (let ((?x760 (+ (* (- 1) (* ?x44 ?x44 ?x156 ?x156 ?x156 y u u)) (* ?x44 ?x44 ?x44 ?x156 y u) ?x535)))
 (let ((?x745 (+ (* (- 1) (* ?x44 ?x44 u)) (* ?x156 y y u u u) (* (- 1) (* ?x44 ?x156 ?x156 ?x156 y y)))))
 (let (($x231 (or (not (= (* ?x745 ?x760 (+ ?x91 ?x878 ?x45 ?x107)) 0)) (not (= (* ?x323 ?x189 (+ ?x91 ?x62 ?x883 ?x107)) 0)))))
 (let (($x748 (and (= (+ ?x91 (* x u) (* y v) ?x107) 0) $x231)))
 (let ((?x74 (+ (* (- 1) ?x61 ?x61 v v x x x (- y x)) (* ?x61 v v v x (- y x)))))
 (let ((?x69 (+ (* (- 1) ?x61 v v) (* ?x61 ?x61 ?x61 x (- y x) (- y x)))))
 (let ((?x77 (* (- (+ (* (- 1) u00 x00) ?x62 (* v (- y x))) ?x38) (- ?x69 (* v x x x (- y x) (- y x))) (- ?x74 (* (- y x) (- y x))))))
 (let ((?x42 (- x y)))
 (let ((?x29 (- 1)))
 (let ((?x55 (+ (* ?x29 u u ?x44 ?x44 ?x42 ?x42 ?x42 y) (* u ?x44 ?x44 ?x44 ?x42 y))))
 (let ((?x52 (- (+ (* ?x29 u ?x44 ?x44) (* u u u ?x42 y y)) (* ?x44 ?x42 ?x42 ?x42 y y))))
 (let ((?x58 (* (- (+ (* ?x29 u00 x00) (* u ?x42) ?x45) ?x38) ?x52 (- ?x55 ?x56))))
 (let (($x41 (= (- (+ (* ?x29 u00 x00) (* u x) (* v y)) ?x38) 0)))
 (let (($x81 (and $x41 (or (not (= ?x58 0)) (not (= ?x77 0))))))
 (rewrite (= $x81 $x748))))))))))))))))))))))))))))))))))
 ))
 (let ((@x83 (asserted $x82)))
 (let ((@x893 (mp (mp @x83 (quant-intro (proof-bind ?x888) (= $x82 $x659)) $x659) (rewrite (= $x659 $x659)) $x659)))
 (let ((@x528 (mp (mp @x893 (quant-intro (proof-bind ?x898) (= $x659 $x890)) $x890) (quant-intro (proof-bind ?x867) (= $x890 $x735)) $x735)))
 (let ((@x444 (mp~ (mp @x528 (quant-intro (proof-bind ?x737) (= $x735 $x896)) $x896) (sk (~ $x896 $x571)) $x571)))
 (let ((@x1127 (mp @x444 (rewrite (= $x571 $x1217)) $x1217)))
 (let ((@x1128 (and-elim @x1127 $x110)))
 (let ((@x1167 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x110) $x1084)) @x1128 $x1084)))
 (let (($x1082 (>= ?x606 0)))
 (let ((@x1174 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x110) $x1082)) @x1128 $x1082)))
 (let (($x1267 (>= ?x1189 0)))
 (let ((@x1179 ((_ th-lemma arith eq-propagate 0 0 0) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1267)) @x1174 @x1167 false) $x1267) @x1174 @x1167 $x1132)))
 (unit-resolution (and-elim @x1127 $x1131) @x1179 ((_ th-lemma arith eq-propagate 0 0 0 0) @x1174 @x1167 @x1174 @x1167 $x1171) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        6
 :arith-assert-upper        6
 :arith-conflicts           1
 :arith-eq-adapter          3
 :arith-fixed-eqs           3
 :arith-num-rows            5
 :arith-pseudo-nonlinear    4
 :arith-tableau-max-columns 80
 :arith-tableau-max-rows    5
 :conflicts                 2
 :decisions                 1
 :del-clause                3
 :eliminated-applications   2
 :max-memory                3.76
 :memory                    3.26
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1152397
 :num-checks                1
 :propagations              6
 :rlimit-count              5145
 :time                      0.01
 :total-time                0.02)
