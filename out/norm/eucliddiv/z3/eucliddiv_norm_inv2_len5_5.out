unsat
((set-logic NIA)
(declare-fun r!1 () Int)
(declare-fun q!2 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x1647 (* (- 1) r!1)))
 (let ((?x1615 (* (- 1) (* y00 q!2))))
 (let ((?x91 (* y00 q00)))
 (let ((?x254 (+ r00 ?x91 ?x1615 ?x1647)))
 (let (($x957 (<= ?x254 0)))
 (let (($x1648 (= ?x254 0)))
 (let ((?x2721 (* y00 y00 y00 q00)))
 (let ((?x2557 (* y00 y00 y00 y00 r00)))
 (let ((?x1658 (* y00 y00 y00 r00)))
 (let ((?x1519 (* y00 y00 q00)))
 (let ((?x1502 (* y00 r00)))
 (let ((?x1446 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1077 (* y00 y00 y00 y00 q00)))
 (let ((?x343 (* y00 y00 r00)))
 (let ((?x1252 (+ r00 ?x91 ?x1615 (* (- 1) (* y00 y00 q!2)) (* y00 y00 r!1 r!1) (* (- 2) (* y00 y00 q00 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 y00 q00 r!1 r!1 r!1 q!2 q!2)) ?x343 (* y00 y00 r!1 q!2 q!2) (* (- 1) (* y00 y00 y00 y00 r!1)) (* 3 (* y00 q00 q!2)) (* (- 6) (* y00 y00 y00 r00 r!1 q!2)) (* y00 y00 y00 y00 r00 q!2 q!2) (* 3 (* y00 q00 q!2 q!2)) (* y00 q00 q!2 q!2 q!2) (* (- 3) (* y00 y00 y00 r!1 r!1 q!2 q!2 q!2)) (* (- 3) (* y00 y00 y00 y00 q!2 q!2)) (* 2 (* y00 y00 y00 r!1 q!2 q!2 q!2)) (* 3 (* y00 y00 y00 r!1 r!1 q!2)) (* (- 3) (* y00 y00 y00 r!1 r!1 q!2 q!2)) (* (- 3) (* y00 y00 y00 y00 q00 r!1)) (* y00 y00 y00 q00 q!2) (* (- 3) (* y00 y00 y00 r00 r!1 q!2 q!2)) (* 3 (* y00 y00 y00 y00 q00 q!2)) (* 2 (* y00 y00 y00 y00 r00 q!2)) (* y00 r!1 r!1) (* y00 r!1 r!1 q!2) (* (- 1) (* y00 y00 q00 r!1)) (* (- 1) (* y00 y00 q00 r!1 q!2)) (* 2 (* y00 r!1 r!1 r!1 r!1 q!2)) (* y00 r!1 r!1 r!1 r!1 q!2 q!2) ?x1077 (* y00 y00 r!1 r!1 q!2 q!2 q!2) (* 3 (* y00 y00 r!1 r!1 q!2)) (* (- 1) (* y00 y00 y00 r!1)) (* 3 (* y00 y00 r!1 r!1 q!2 q!2)) (* 3 (* y00 y00 r00 r!1 r!1)) (* 6 (* y00 y00 r00 r!1 r!1 q!2)) (* 6 (* y00 y00 y00 q00 r!1 r!1 q!2)) (* y00 y00 y00 y00 y00 q00 q!2 q!2) (* (- 3) (* y00 y00 r00 r!1 q!2 q!2)) (* (- 3) (* y00 q!2 q!2)) ?x1647 (* (- 3) (* y00 y00 y00 y00 q00 r!1 q!2 q!2)) (* 3 (* y00 y00 y00 q00 r!1 r!1)) (* 3 (* y00 y00 y00 q00 r!1 r!1 q!2 q!2)) (* (- 6) (* y00 y00 y00 y00 q00 r!1 q!2)) (* (- 1) (* y00 y00 q00 r!1 r!1 r!1)) (* y00 y00 r00 q!2) (* 2 (* y00 y00 y00 y00 y00 q00 q!2)) (* 3 (* r00 q!2)) (* 3 (* r00 q!2 q!2)) (* r00 q!2 q!2 q!2) (* (- 1) (* y00 y00 r00 r!1)) (* (- 2) (* y00 y00 y00 y00 y00 q!2 q!2)) (* (- 3) (* y00 y00 r00 r!1 q!2)) (* (- 3) (* y00 q!2 q!2 q!2)) (* (- 1) (* y00 q!2 q!2 q!2 q!2)) (* 3 (* y00 y00 r00 r!1 r!1 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) (* (- 1) (* y00 r00 r!1 r!1 r!1)) ?x1446 (* 3 (* y00 y00 y00 y00 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2 q!2 q!2)) ?x1502 ?x1519 (* (- 1) (* y00 r!1)) (* (- 2) (* y00 r00 r!1 r!1 r!1 q!2)) (* (- 1) (* y00 r00 r!1 r!1 r!1 q!2 q!2)) ?x1658 (* (- 1) (* y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 y00 r00 r!1 q!2 q!2 q!2)) (* (- 2) (* y00 y00 y00 r!1 q!2)) (* (- 1) (* y00 y00 y00 q00 r!1)) (* (- 3) (* y00 y00 y00 q00 r!1 q!2)) (* (- 3) (* y00 y00 y00 q00 r!1 q!2 q!2)) (* y00 y00 r!1 r!1 r!1 q!2 q!2 q!2) (* (- 3) (* y00 y00 y00 r00 r!1)) (* (- 1) (* y00 y00 y00 q00 r!1 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 q!2)) (* (- 5) (* y00 y00 r!1 r!1 r!1 q!2)) (* 3 (* y00 y00 y00 r00 q!2 q!2)) (* 3 (* y00 y00 y00 r!1 r!1)) (* (- 1) (* y00 y00 y00 q!2)) (* y00 y00 y00 r00 q!2 q!2 q!2) (* (- 1) (* y00 y00 r!1)) (* y00 r!1 r!1 r!1 r!1) ?x2557 (* (- 3) (* y00 y00 y00 y00 q!2 q!2 q!2)) (* (- 1) (* y00 r00 r!1)) ?x2721 (* y00 y00 y00 r!1 q!2 q!2 q!2 q!2) (* (- 1) (* y00 y00 y00 y00 q!2 q!2 q!2 q!2)) (* (- 3) (* r!1 q!2)) (* (- 3) (* r!1 q!2 q!2)) (* 3 (* y00 y00 y00 r00 q!2)) (* y00 y00 y00 y00 r!1 q!2) (* 5 (* y00 y00 y00 y00 r!1 q!2 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1 q!2 q!2)) (* 3 (* y00 y00 y00 y00 q00 q!2 q!2)) (* y00 y00 y00 y00 q00 q!2 q!2 q!2) (* (- 1) (* r!1 q!2 q!2 q!2)) (* (- 1) (* y00 r00 r!1 q!2)) (* (- 3) (* y00 y00 r!1 r!1 r!1)))))
 (let (($x1444 (= ?x1252 0)))
 (let (($x1253 (not $x1444)))
 (let ((?x153 (+ y00 (* (- 1) y!0))))
 (let (($x966 (= ?x153 0)))
 (let (($x1191 (and $x966 $x1648 $x1253)))
 (let ((?x2724 (* (- 1) ?x2721)))
 (let ((?x2560 (* (- 1) ?x2557)))
 (let ((?x1659 (* (- 1) ?x1658)))
 (let ((?x1525 (* (- 1) ?x1519)))
 (let ((?x1508 (* (- 1) ?x1502)))
 (let ((?x1449 (* (- 1) ?x1446)))
 (let ((?x1080 (* (- 1) ?x1077)))
 (let ((?x344 (* (- 1) ?x343)))
 (let ((?x102 (* (- 1) ?x91)))
 (let ((?x2606 (* q!2 y00)))
 (let ((?x90 (* (- 1) r00)))
 (let ((?x3135 (+ r!1 ?x90 ?x2606 ?x102 (* q!2 y00 y00) (* (- 1) (* r!1 r!1 y00 y00)) (* (- 3) (* q!2 r!1 r!1 y00 y00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 y00 y00)) (* r!1 y00 y00 y00) (* 2 (* q!2 r!1 y00 y00 y00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00 y00 y00)) (* q!2 y00 y00 y00 y00) (* 3 (* q!2 q!2 y00 y00 y00 y00)) (* 3 (* q!2 q!2 q!2 y00 y00 y00 y00)) (* r!1 y00 r00) (* q!2 r!1 y00 r00) ?x344 (* r!1 y00) (* (- 1) (* q!2 y00 y00 r00)) (* (- 1) (* r!1 r!1 y00)) (* (- 1) (* q!2 r!1 r!1 y00)) (* r!1 y00 y00) (* q!2 y00 y00 y00) (* (- 1) (* r!1 r!1 r!1 r!1 y00)) (* (- 2) (* q!2 r!1 r!1 r!1 r!1 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 r!1 y00)) (* 3 (* r!1 r!1 r!1 y00 y00)) (* 5 (* q!2 r!1 r!1 r!1 y00 y00)) (* q!2 q!2 r!1 r!1 r!1 y00 y00) (* (- 3) (* r!1 r!1 y00 y00 y00)) (* (- 3) (* q!2 r!1 r!1 y00 y00 y00)) (* 3 (* q!2 q!2 r!1 r!1 y00 y00 y00)) (* r!1 y00 y00 y00 y00) (* (- 1) (* q!2 r!1 y00 y00 y00 y00)) (* (- 5) (* q!2 q!2 r!1 y00 y00 y00 y00)) (* q!2 y00 y00 y00 y00 y00) (* 2 (* q!2 q!2 y00 y00 y00 y00 y00)) (* 3 (* q!2 q!2 y00)) (* 3 (* q!2 q!2 q!2 y00)) (* q!2 q!2 q!2 q!2 y00) (* r!1 y00 y00 y00 q00) (* 3 (* q!2 r!1 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 q00)) (* q!2 q!2 q!2 r!1 y00 y00 y00 q00) ?x1080 (* (- 3) (* q!2 y00 y00 y00 y00 q00)) (* (- 3) (* q!2 q!2 y00 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 r!1 y00 y00)) (* q!2 q!2 y00 y00 y00) (* r!1 r!1 r!1 y00 y00 q00) (* 2 (* q!2 r!1 r!1 r!1 y00 y00 q00)) (* q!2 q!2 r!1 r!1 r!1 y00 y00 q00) (* (- 3) (* r!1 r!1 y00 y00 y00 q00)) (* (- 6) (* q!2 r!1 r!1 y00 y00 y00 q00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00 y00 q00)) (* 3 (* r!1 y00 y00 y00 y00 q00)) (* 6 (* q!2 r!1 y00 y00 y00 y00 q00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 y00 q00)) ?x1449 (* (- 2) (* q!2 y00 y00 y00 y00 y00 q00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00 y00 q00)) ?x1508 ?x1525 (* (- 3) (* q!2 r00)) (* (- 3) (* q!2 q!2 r00)) (* (- 1) (* q!2 q!2 q!2 r00)) (* r!1 y00 y00 r00) (* 3 (* q!2 r!1 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 y00 y00 r00)) (* q!2 q!2 q!2 r!1 y00 y00 r00) ?x1659 (* (- 3) (* q!2 y00 y00 y00 r00)) (* (- 3) (* q!2 q!2 y00 y00 y00 r00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 r00)) (* 3 (* q!2 r!1)) (* 3 (* q!2 q!2 r!1)) (* q!2 q!2 q!2 r!1) (* (- 1) (* q!2 q!2 q!2 q!2 r!1 y00 y00 y00)) (* q!2 q!2 q!2 q!2 y00 y00 y00 y00) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 r!1 y00 y00)) (* 3 (* q!2 q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 3) (* q!2 q!2 q!2 r!1 y00 y00 y00 y00)) (* q!2 q!2 q!2 y00 y00 y00 y00 y00) (* r!1 r!1 r!1 y00 r00) (* 2 (* q!2 r!1 r!1 r!1 y00 r00)) (* q!2 q!2 r!1 r!1 r!1 y00 r00) (* (- 3) (* r!1 r!1 y00 y00 r00)) (* (- 6) (* q!2 r!1 r!1 y00 y00 r00)) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00 r00)) (* 3 (* r!1 y00 y00 y00 r00)) (* 6 (* q!2 r!1 y00 y00 y00 r00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00 r00)) ?x2560 (* (- 2) (* q!2 y00 y00 y00 y00 r00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00 r00)) (* (- 3) (* q!2 y00 q00)) (* (- 3) (* q!2 q!2 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 q00)) (* r!1 y00 y00 q00) (* q!2 r!1 y00 y00 q00) ?x2724 (* (- 1) (* q!2 y00 y00 y00 q00)))))
 (let (($x630 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 ?x90 ?x2606 ?x102) 0) (not (= ?x3135 0)))))
 (let (($x96 (exists ((q Int) (r Int) (y Int) )(! (let ((?x2721 (* y00 y00 y00 q00)))
 (let ((?x2724 (* (- 1) ?x2721)))
 (let ((?x2557 (* y00 y00 y00 y00 r00)))
 (let ((?x2560 (* (- 1) ?x2557)))
 (let ((?x1658 (* y00 y00 y00 r00)))
 (let ((?x1659 (* (- 1) ?x1658)))
 (let ((?x1519 (* y00 y00 q00)))
 (let ((?x1525 (* (- 1) ?x1519)))
 (let ((?x1502 (* y00 r00)))
 (let ((?x1508 (* (- 1) ?x1502)))
 (let ((?x1446 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1449 (* (- 1) ?x1446)))
 (let ((?x1077 (* y00 y00 y00 y00 q00)))
 (let ((?x1080 (* (- 1) ?x1077)))
 (let ((?x343 (* y00 y00 r00)))
 (let ((?x344 (* (- 1) ?x343)))
 (let ((?x91 (* y00 q00)))
 (let ((?x102 (* (- 1) ?x91)))
 (let ((?x39 (* q y00)))
 (let ((?x90 (* (- 1) r00)))
 (let ((?x2720 (+ r ?x90 ?x39 ?x102 (* q y00 y00) (* (- 1) (* r r y00 y00)) (* (- 3) (* q r r y00 y00)) (* (- 3) (* q q r r y00 y00)) (* (- 1) (* q q q r r y00 y00)) (* r y00 y00 y00) (* 2 (* q r y00 y00 y00)) (* (- 2) (* q q q r y00 y00 y00)) (* q y00 y00 y00 y00) (* 3 (* q q y00 y00 y00 y00)) (* 3 (* q q q y00 y00 y00 y00)) (* r y00 r00) (* q r y00 r00) ?x344 (* r y00) (* (- 1) (* q y00 y00 r00)) (* (- 1) (* r r y00)) (* (- 1) (* q r r y00)) (* r y00 y00) (* q y00 y00 y00) (* (- 1) (* r r r r y00)) (* (- 2) (* q r r r r y00)) (* (- 1) (* q q r r r r y00)) (* 3 (* r r r y00 y00)) (* 5 (* q r r r y00 y00)) (* q q r r r y00 y00) (* (- 3) (* r r y00 y00 y00)) (* (- 3) (* q r r y00 y00 y00)) (* 3 (* q q r r y00 y00 y00)) (* r y00 y00 y00 y00) (* (- 1) (* q r y00 y00 y00 y00)) (* (- 5) (* q q r y00 y00 y00 y00)) (* q y00 y00 y00 y00 y00) (* 2 (* q q y00 y00 y00 y00 y00)) (* 3 (* q q y00)) (* 3 (* q q q y00)) (* q q q q y00) (* r y00 y00 y00 q00) (* 3 (* q r y00 y00 y00 q00)) (* 3 (* q q r y00 y00 y00 q00)) (* q q q r y00 y00 y00 q00) ?x1080 (* (- 3) (* q y00 y00 y00 y00 q00)) (* (- 3) (* q q y00 y00 y00 y00 q00)) (* (- 1) (* q q q y00 y00 y00 y00 q00)) (* (- 1) (* q q r y00 y00)) (* q q y00 y00 y00) (* r r r y00 y00 q00) (* 2 (* q r r r y00 y00 q00)) (* q q r r r y00 y00 q00) (* (- 3) (* r r y00 y00 y00 q00)) (* (- 6) (* q r r y00 y00 y00 q00)) (* (- 3) (* q q r r y00 y00 y00 q00)) (* 3 (* r y00 y00 y00 y00 q00)) (* 6 (* q r y00 y00 y00 y00 q00)) (* 3 (* q q r y00 y00 y00 y00 q00)) ?x1449 (* (- 2) (* q y00 y00 y00 y00 y00 q00)) (* (- 1) (* q q y00 y00 y00 y00 y00 q00)) ?x1508 ?x1525 (* (- 3) (* q r00)) (* (- 3) (* q q r00)) (* (- 1) (* q q q r00)) (* r y00 y00 r00) (* 3 (* q r y00 y00 r00)) (* 3 (* q q r y00 y00 r00)) (* q q q r y00 y00 r00) ?x1659 (* (- 3) (* q y00 y00 y00 r00)) (* (- 3) (* q q y00 y00 y00 r00)) (* (- 1) (* q q q y00 y00 y00 r00)) (* 3 (* q r)) (* 3 (* q q r)) (* q q q r) (* (- 1) (* q q q q r y00 y00 y00)) (* q q q q y00 y00 y00 y00) (* (- 1) (* q q q r r r y00 y00)) (* 3 (* q q q r r y00 y00 y00)) (* (- 3) (* q q q r y00 y00 y00 y00)) (* q q q y00 y00 y00 y00 y00) (* r r r y00 r00) (* 2 (* q r r r y00 r00)) (* q q r r r y00 r00) (* (- 3) (* r r y00 y00 r00)) (* (- 6) (* q r r y00 y00 r00)) (* (- 3) (* q q r r y00 y00 r00)) (* 3 (* r y00 y00 y00 r00)) (* 6 (* q r y00 y00 y00 r00)) (* 3 (* q q r y00 y00 y00 r00)) ?x2560 (* (- 2) (* q y00 y00 y00 y00 r00)) (* (- 1) (* q q y00 y00 y00 y00 r00)) (* (- 3) (* q y00 q00)) (* (- 3) (* q q y00 q00)) (* (- 1) (* q q q y00 q00)) (* r y00 y00 q00) (* q r y00 y00 q00) ?x2724 (* (- 1) (* q y00 y00 y00 q00)))))
 (and (= (+ y (* (- 1) y00)) 0) (= (+ r ?x90 ?x39 ?x102) 0) (not (= ?x2720 0)))))))))))))))))))))))) :qid k!29))
 ))
 (let (($x1172 (exists ((q Int) (r Int) (y Int) )(! (let ((?x2662 (* (- 1) (* q00 y00 (+ 1 q) (+ 1 q) (+ 1 q)))))
 (let ((?x89 (* (- 1) y00)))
 (let ((?x2689 (+ r ?x89)))
 (let ((?x448 (+ 1 q)))
 (let ((?x1677 (+ (* y00 y00 ?x448) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x2689) (* y00 ?x2689) (* (- 1) (* y00 ?x448 ?x2689 ?x2689)) (* (- 1) (* y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689 ?x2689)) (* y00 ?x448 ?x448 ?x448 ?x448) (* q00 y00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 ?x448 ?x448 ?x2689)) (* q00 y00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) (* (- 1) (* r00 y00)) (* (- 1) (* q00 y00 y00)) (* (- 1) (* r00 ?x448 ?x448 ?x448)) (* r00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 y00 ?x448 ?x448 ?x448 ?x448 ?x2689)) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) ?x2662 (* q00 y00 y00 ?x448 ?x2689))))
 (let (($x453 (not (= ?x1677 0))))
 (let (($x404 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x404 $x453)))))))) :qid k!29))
 ))
 (let ((?x259 (lambda ((q Int) (r Int) (y Int) )(let ((?x2721 (* y00 y00 y00 q00)))
 (let ((?x2724 (* (- 1) ?x2721)))
 (let ((?x2557 (* y00 y00 y00 y00 r00)))
 (let ((?x2560 (* (- 1) ?x2557)))
 (let ((?x1658 (* y00 y00 y00 r00)))
 (let ((?x1659 (* (- 1) ?x1658)))
 (let ((?x1519 (* y00 y00 q00)))
 (let ((?x1525 (* (- 1) ?x1519)))
 (let ((?x1502 (* y00 r00)))
 (let ((?x1508 (* (- 1) ?x1502)))
 (let ((?x1446 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x1449 (* (- 1) ?x1446)))
 (let ((?x1077 (* y00 y00 y00 y00 q00)))
 (let ((?x1080 (* (- 1) ?x1077)))
 (let ((?x343 (* y00 y00 r00)))
 (let ((?x344 (* (- 1) ?x343)))
 (let ((?x91 (* y00 q00)))
 (let ((?x102 (* (- 1) ?x91)))
 (let ((?x39 (* q y00)))
 (let ((?x90 (* (- 1) r00)))
 (let ((?x2720 (+ r ?x90 ?x39 ?x102 (* q y00 y00) (* (- 1) (* r r y00 y00)) (* (- 3) (* q r r y00 y00)) (* (- 3) (* q q r r y00 y00)) (* (- 1) (* q q q r r y00 y00)) (* r y00 y00 y00) (* 2 (* q r y00 y00 y00)) (* (- 2) (* q q q r y00 y00 y00)) (* q y00 y00 y00 y00) (* 3 (* q q y00 y00 y00 y00)) (* 3 (* q q q y00 y00 y00 y00)) (* r y00 r00) (* q r y00 r00) ?x344 (* r y00) (* (- 1) (* q y00 y00 r00)) (* (- 1) (* r r y00)) (* (- 1) (* q r r y00)) (* r y00 y00) (* q y00 y00 y00) (* (- 1) (* r r r r y00)) (* (- 2) (* q r r r r y00)) (* (- 1) (* q q r r r r y00)) (* 3 (* r r r y00 y00)) (* 5 (* q r r r y00 y00)) (* q q r r r y00 y00) (* (- 3) (* r r y00 y00 y00)) (* (- 3) (* q r r y00 y00 y00)) (* 3 (* q q r r y00 y00 y00)) (* r y00 y00 y00 y00) (* (- 1) (* q r y00 y00 y00 y00)) (* (- 5) (* q q r y00 y00 y00 y00)) (* q y00 y00 y00 y00 y00) (* 2 (* q q y00 y00 y00 y00 y00)) (* 3 (* q q y00)) (* 3 (* q q q y00)) (* q q q q y00) (* r y00 y00 y00 q00) (* 3 (* q r y00 y00 y00 q00)) (* 3 (* q q r y00 y00 y00 q00)) (* q q q r y00 y00 y00 q00) ?x1080 (* (- 3) (* q y00 y00 y00 y00 q00)) (* (- 3) (* q q y00 y00 y00 y00 q00)) (* (- 1) (* q q q y00 y00 y00 y00 q00)) (* (- 1) (* q q r y00 y00)) (* q q y00 y00 y00) (* r r r y00 y00 q00) (* 2 (* q r r r y00 y00 q00)) (* q q r r r y00 y00 q00) (* (- 3) (* r r y00 y00 y00 q00)) (* (- 6) (* q r r y00 y00 y00 q00)) (* (- 3) (* q q r r y00 y00 y00 q00)) (* 3 (* r y00 y00 y00 y00 q00)) (* 6 (* q r y00 y00 y00 y00 q00)) (* 3 (* q q r y00 y00 y00 y00 q00)) ?x1449 (* (- 2) (* q y00 y00 y00 y00 y00 q00)) (* (- 1) (* q q y00 y00 y00 y00 y00 q00)) ?x1508 ?x1525 (* (- 3) (* q r00)) (* (- 3) (* q q r00)) (* (- 1) (* q q q r00)) (* r y00 y00 r00) (* 3 (* q r y00 y00 r00)) (* 3 (* q q r y00 y00 r00)) (* q q q r y00 y00 r00) ?x1659 (* (- 3) (* q y00 y00 y00 r00)) (* (- 3) (* q q y00 y00 y00 r00)) (* (- 1) (* q q q y00 y00 y00 r00)) (* 3 (* q r)) (* 3 (* q q r)) (* q q q r) (* (- 1) (* q q q q r y00 y00 y00)) (* q q q q y00 y00 y00 y00) (* (- 1) (* q q q r r r y00 y00)) (* 3 (* q q q r r y00 y00 y00)) (* (- 3) (* q q q r y00 y00 y00 y00)) (* q q q y00 y00 y00 y00 y00) (* r r r y00 r00) (* 2 (* q r r r y00 r00)) (* q q r r r y00 r00) (* (- 3) (* r r y00 y00 r00)) (* (- 6) (* q r r y00 y00 r00)) (* (- 3) (* q q r r y00 y00 r00)) (* 3 (* r y00 y00 y00 r00)) (* 6 (* q r y00 y00 y00 r00)) (* 3 (* q q r y00 y00 y00 r00)) ?x2560 (* (- 2) (* q y00 y00 y00 y00 r00)) (* (- 1) (* q q y00 y00 y00 y00 r00)) (* (- 3) (* q y00 q00)) (* (- 3) (* q q y00 q00)) (* (- 1) (* q q q y00 q00)) (* r y00 y00 q00) (* q r y00 y00 q00) ?x2724 (* (- 1) (* q y00 y00 y00 q00)))))
 (let (($x118 (and (= (+ y (* (- 1) y00)) 0) (= (+ r ?x90 ?x39 ?x102) 0) (not (= ?x2720 0)))))
 (let ((?x2662 (* (- 1) (* q00 y00 (+ 1 q) (+ 1 q) (+ 1 q)))))
 (let ((?x89 (* (- 1) y00)))
 (let ((?x2689 (+ r ?x89)))
 (let ((?x448 (+ 1 q)))
 (let ((?x1677 (+ (* y00 y00 ?x448) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x2689) (* y00 ?x2689) (* (- 1) (* y00 ?x448 ?x2689 ?x2689)) (* (- 1) (* y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689 ?x2689)) (* y00 ?x448 ?x448 ?x448 ?x448) (* q00 y00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 ?x448 ?x448 ?x2689)) (* q00 y00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) (* (- 1) (* r00 y00)) (* (- 1) (* q00 y00 y00)) (* (- 1) (* r00 ?x448 ?x448 ?x448)) (* r00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 y00 ?x448 ?x448 ?x448 ?x448 ?x2689)) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) ?x2662 (* q00 y00 y00 ?x448 ?x2689))))
 (let (($x453 (not (= ?x1677 0))))
 (let (($x404 (= (+ r ?x90 (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x447 (and (= (+ y00 (* (- 1) y)) 0) $x404 $x453)))
 (rewrite (= $x447 $x118)))))))))))))))))))))))))))))))))
 ))
 (let (($x456 (exists ((q Int) (r Int) (y Int) )(! (let ((?x2662 (* (- 1) (* q00 y00 (+ 1 q) (+ 1 q) (+ 1 q)))))
 (let ((?x89 (* (- 1) y00)))
 (let ((?x2689 (+ r ?x89)))
 (let ((?x448 (+ 1 q)))
 (let ((?x1677 (+ (* y00 y00 ?x448) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x2689) (* y00 ?x2689) (* (- 1) (* y00 ?x448 ?x2689 ?x2689)) (* (- 1) (* y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689 ?x2689)) (* y00 ?x448 ?x448 ?x448 ?x448) (* q00 y00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 ?x448 ?x448 ?x2689)) (* q00 y00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) (* (- 1) (* r00 y00)) (* (- 1) (* q00 y00 y00)) (* (- 1) (* r00 ?x448 ?x448 ?x448)) (* r00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 y00 ?x448 ?x448 ?x448 ?x448 ?x2689)) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) ?x2662 (* q00 y00 y00 ?x448 ?x2689))))
 (let (($x453 (not (= ?x1677 0))))
 (let (($x404 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x89 y) 0) $x404 $x453)))))))) :qid k!29))
 ))
 (let ((?x1159 (lambda ((q Int) (r Int) (y Int) )(let ((?x2662 (* (- 1) (* q00 y00 (+ 1 q) (+ 1 q) (+ 1 q)))))
 (let ((?x89 (* (- 1) y00)))
 (let ((?x2689 (+ r ?x89)))
 (let ((?x448 (+ 1 q)))
 (let ((?x1677 (+ (* y00 y00 ?x448) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x2689) (* y00 ?x2689) (* (- 1) (* y00 ?x448 ?x2689 ?x2689)) (* (- 1) (* y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689 ?x2689)) (* y00 ?x448 ?x448 ?x448 ?x448) (* q00 y00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 ?x448 ?x448 ?x2689)) (* q00 y00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) (* (- 1) (* r00 y00)) (* (- 1) (* q00 y00 y00)) (* (- 1) (* r00 ?x448 ?x448 ?x448)) (* r00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 y00 ?x448 ?x448 ?x448 ?x448 ?x2689)) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) ?x2662 (* q00 y00 y00 ?x448 ?x2689))))
 (let (($x453 (not (= ?x1677 0))))
 (let (($x404 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x447 (and (= (+ y00 (* (- 1) y)) 0) $x404 $x453)))
 (let (($x1452 (and (= (+ ?x89 y) 0) $x404 $x453)))
 (rewrite (= $x1452 $x447))))))))))))
 ))
 (let (($x84 (exists ((q Int) (r Int) (y Int) )(! (let ((?x44 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x62 (* q00 y00 y00)))
 (let ((?x61 (* r00 y00)))
 (let ((?x49 (+ (- (* ?x42 y00 y00) (* ?x42 ?x42 ?x42 ?x44 ?x44 y00 y00)) (* ?x42 ?x44 r00 y00) (* ?x44 y00))))
 (let ((?x53 (- (- ?x49 (* ?x42 ?x44 ?x44 y00)) (* ?x42 ?x42 ?x44 ?x44 ?x44 ?x44 y00))))
 (let ((?x56 (+ ?x53 (* ?x42 ?x42 ?x42 ?x42 y00) (* ?x42 ?x42 ?x42 q00 ?x44 y00 y00 y00))))
 (let ((?x60 (+ (- ?x56 (* ?x42 ?x42 ?x44 y00 y00)) (* ?x42 ?x42 q00 ?x44 ?x44 ?x44 y00 y00))))
 (let ((?x69 (+ (- (- (- ?x60 ?x61) ?x62) (* ?x42 ?x42 ?x42 r00)) (* ?x42 ?x42 ?x42 ?x44 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x44))))
 (let ((?x73 (- (- ?x69 (* ?x42 ?x42 ?x42 ?x42 ?x44 y00 y00 y00)) (* ?x42 ?x42 ?x42 ?x44 ?x44 ?x44 y00 y00))))
 (let ((?x77 (- (+ ?x73 (* ?x42 ?x42 ?x44 ?x44 ?x44 r00 y00)) (* ?x42 ?x42 ?x42 q00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= (+ ?x77 (* ?x42 q00 ?x44 y00 y00)) 0))))))))))))))) :qid k!29))
 ))
 (let ((?x1373 (lambda ((q Int) (r Int) (y Int) )(let ((?x2662 (* (- 1) (* q00 y00 (+ 1 q) (+ 1 q) (+ 1 q)))))
 (let ((?x89 (* (- 1) y00)))
 (let ((?x2689 (+ r ?x89)))
 (let ((?x448 (+ 1 q)))
 (let ((?x1677 (+ (* y00 y00 ?x448) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x2689) (* y00 ?x2689) (* (- 1) (* y00 ?x448 ?x2689 ?x2689)) (* (- 1) (* y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689 ?x2689)) (* y00 ?x448 ?x448 ?x448 ?x448) (* q00 y00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 ?x448 ?x448 ?x2689)) (* q00 y00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) (* (- 1) (* r00 y00)) (* (- 1) (* q00 y00 y00)) (* (- 1) (* r00 ?x448 ?x448 ?x448)) (* r00 y00 y00 ?x448 ?x448 ?x448 ?x2689) (* ?x448 ?x448 ?x448 ?x2689) (* (- 1) (* y00 y00 y00 ?x448 ?x448 ?x448 ?x448 ?x2689)) (* (- 1) (* y00 y00 ?x448 ?x448 ?x448 ?x2689 ?x2689 ?x2689)) (* r00 y00 ?x448 ?x448 ?x2689 ?x2689 ?x2689) ?x2662 (* q00 y00 y00 ?x448 ?x2689))))
 (let (($x453 (not (= ?x1677 0))))
 (let (($x404 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x1452 (and (= (+ ?x89 y) 0) $x404 $x453)))
 (let ((?x44 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x62 (* q00 y00 y00)))
 (let ((?x61 (* r00 y00)))
 (let ((?x49 (+ (- (* ?x42 y00 y00) (* ?x42 ?x42 ?x42 ?x44 ?x44 y00 y00)) (* ?x42 ?x44 r00 y00) (* ?x44 y00))))
 (let ((?x53 (- (- ?x49 (* ?x42 ?x44 ?x44 y00)) (* ?x42 ?x42 ?x44 ?x44 ?x44 ?x44 y00))))
 (let ((?x56 (+ ?x53 (* ?x42 ?x42 ?x42 ?x42 y00) (* ?x42 ?x42 ?x42 q00 ?x44 y00 y00 y00))))
 (let ((?x60 (+ (- ?x56 (* ?x42 ?x42 ?x44 y00 y00)) (* ?x42 ?x42 q00 ?x44 ?x44 ?x44 y00 y00))))
 (let ((?x69 (+ (- (- (- ?x60 ?x61) ?x62) (* ?x42 ?x42 ?x42 r00)) (* ?x42 ?x42 ?x42 ?x44 r00 y00 y00) (* ?x42 ?x42 ?x42 ?x44))))
 (let ((?x73 (- (- ?x69 (* ?x42 ?x42 ?x42 ?x42 ?x44 y00 y00 y00)) (* ?x42 ?x42 ?x42 ?x44 ?x44 ?x44 y00 y00))))
 (let ((?x77 (- (+ ?x73 (* ?x42 ?x42 ?x44 ?x44 ?x44 r00 y00)) (* ?x42 ?x42 ?x42 q00 y00))))
 (let (($x83 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= (+ ?x77 (* ?x42 q00 ?x44 y00 y00)) 0))))))
 (rewrite (= $x83 $x1452)))))))))))))))))))))))
 ))
 (let ((@x85 (asserted $x84)))
 (let ((@x569 (mp (mp @x85 (quant-intro (proof-bind ?x1373) (= $x84 $x456)) $x456) (rewrite (= $x456 $x456)) $x456)))
 (let ((@x2076 (mp (mp @x569 (quant-intro (proof-bind ?x1159) (= $x456 $x1172)) $x1172) (quant-intro (proof-bind ?x259) (= $x1172 $x96)) $x96)))
 (let ((@x1241 (mp (mp~ @x2076 (sk (~ $x96 $x630)) $x630) (rewrite (= $x630 $x1191)) $x1191)))
 (let ((@x154 (and-elim @x1241 $x1648)))
 (let ((@x1320 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1648) $x957)) @x154 $x957)))
 (let (($x252 (>= ?x254 0)))
 (let ((@x815 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1648) $x252)) @x154 $x252)))
 (let (($x964 (<= ?x153 0)))
 (let ((@x1453 (and-elim @x1241 $x966)))
 (let ((@x1547 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x966) $x964)) @x1453 $x964)))
 (let (($x960 (>= ?x153 0)))
 (let ((@x1286 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x966) $x960)) @x1453 $x960)))
 (let (($x823 (not (<= ?x1252 0))))
 (let (($x955 (>= ?x1252 0)))
 (let ((@x2696 ((_ th-lemma arith) (hypothesis (not $x955)) @x815 @x1320 @x1286 @x1547 @x815 @x1320 false)))
 (let ((@x1284 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1444 $x823 (not $x955))) (and-elim @x1241 $x1253) (or $x823 (not $x955)))))
 ((_ th-lemma arith) (unit-resolution @x1284 (lemma @x2696 $x955) $x823) @x815 @x1320 @x1286 @x1547 @x815 @x1320 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        12
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             848
 :arith-nonlinear-bounds    8
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-row-summations      1
 :arith-tableau-max-columns 121
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                4.17
 :memory                    3.49
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1482675
 :num-checks                1
 :propagations              6
 :rlimit-count              12405
 :time                      0.02
 :total-time                0.02)
