unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x789 (+ (* 3 n!0) (* (- 1) k!2) (* 3 (* n!0 n!0)))))
 (let (($x550 (<= ?x789 (- 1))))
 (let (($x902 (= ?x789 (- 1))))
 (let ((?x931 (+ c!3 k!2)))
 (let ((?x492 (+ m!1 k!2)))
 (let ((?x187 (+ 6 m!1)))
 (let ((?x882 (+ 1 n!0)))
 (let ((?x993 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x991 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x920 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x894 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x931 ?x931 ?x931)))
 (let ((?x861 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x931 ?x931 ?x931)))
 (let ((?x860 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x931 ?x931 ?x931)))
 (let ((?x857 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x797 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x730 (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x653 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x492 ?x492)))
 (let ((?x623 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x621 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x615 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x584 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x574 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x492 ?x492 ?x492)))
 (let ((?x545 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x513 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x456 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x914 (* (- 3) (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x931))))
 (let ((?x373 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x468 (* (- 3) (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x931))))
 (let ((?x353 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x302 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x233 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x232 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x229 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x931 ?x931 ?x931)))
 (let ((?x153 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x492 ?x492)))
 (let ((?x613 (+ (* 3 ?x153) (* 3 ?x229) (* (- 1) ?x232) (* (- 3) ?x233) (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931) (* (- 3) ?x302) (* (- 1) (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x931)) (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x492 ?x492) (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492) (* 3 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492)) (* (- 1) ?x353) ?x468 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492 ?x931) (* (- 1) ?x373) ?x914 (* (- 1) ?x456) ?x513 (* (- 1) (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492 ?x492)) (* 3 ?x545) (* (- 1) ?x574) (* (- 3) ?x584) (* 3 ?x615) ?x621 (* 3 ?x623) (* 3 ?x653) (* (- 1) ?x730) (* 3 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x492 ?x492 ?x492)) (* 3 ?x797) (* 3 ?x857) (* (- 1) ?x860) (* (- 3) ?x861) (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x492 ?x931 ?x931 ?x931) (* (- 3) ?x894) (* (- 3) ?x920) ?x991 ?x993)))
 (let (($x678 (= ?x613 0)))
 (let (($x168 (not $x678)))
 (let ((?x723 (* (- 2) n!0)))
 (let ((?x608 (* 3 c!3)))
 (let ((?x434 (+ ?x608 ?x723 (* (- 1) (* n!0 k!2)) k!2)))
 (let (($x779 (= ?x434 1)))
 (let ((?x526 (* 5 k!2)))
 (let ((?x269 (* (- 1) (* k!2 k!2))))
 (let ((?x341 (* 9 (* c!3 n!0))))
 (let ((?x181 (* (- 9) n!0)))
 (let ((?x198 (* 18 c!3)))
 (let ((?x762 (+ ?x198 ?x181 ?x341 ?x269 ?x526)))
 (let (($x231 (= ?x762 4)))
 (let ((?x715 (+ m!1 (* (- 6) n!0))))
 (let (($x682 (= ?x715 6)))
 (let (($x641 (and $x682 $x231 $x779 $x902 $x168)))
 (let ((?x727 (+ k!2 m!1)))
 (let ((?x583 (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x969 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x330 (* (- 1) (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931))))
 (let ((?x666 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x1106 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x727 ?x727)))
 (let ((?x733 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x727 ?x727 ?x727)))
 (let ((?x572 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x727 ?x727)))
 (let ((?x151 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x758 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x957 (* (- 1) (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931))))
 (let ((?x158 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x159 (* (- 1) (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x727 ?x727))))
 (let ((?x922 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x746 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x953 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x189 (* 3 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x931))))
 (let ((?x634 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x912 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x515 (* 3 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x931))))
 (let ((?x1052 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x756 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x741 (* (- 1) (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x931))))
 (let ((?x318 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x809 (* ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x931 ?x931 ?x931)))
 (let ((?x859 (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x187 ?x187 ?x727 ?x931 ?x931 ?x931 ?x931)))
 (let ((?x1023 (+ (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x727) ?x859 (* 3 ?x809) ?x318 ?x741 ?x756 (* 3 ?x1052) ?x515 (* (- 1) ?x912) (* (- 3) ?x623) (* (- 3) ?x634) ?x189 (* 3 ?x953) (* (- 3) ?x746) (* (- 3) ?x545) (* 3 ?x922) (* (- 1) (* ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727)) ?x159 (* (- 1) ?x158) ?x957 (* (- 3) ?x758) (* (- 1) ?x151) (* (- 3) ?x572) ?x733 (* (- 3) (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727)) ?x860 (* ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727 ?x931) (* (- 1) ?x513) (* 3 ?x894) (* (- 3) ?x1106) ?x666 ?x330 (* (- 3) ?x969) ?x583 (* (- 3) (* ?x882 ?x882 ?x882 ?x882 ?x187 ?x187 ?x187 ?x727 ?x727 ?x727)) (* 3 ?x861))))
 (let (($x164 (and $x682 (= (+ ?x198 ?x526 ?x181 ?x269 ?x341) 4) (= (+ ?x608 k!2 ?x723 (* (- 1) (* k!2 n!0))) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1023 0)))))
 (let (($x726 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x70 (+ k m)))
 (let ((?x1099 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x680 (* (- 3) ?x1099)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1037 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1029 (* (- 1) ?x1037)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x997 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x875 (* 3 ?x997)))
 (let ((?x987 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x835 (* (- 1) ?x987)))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x837 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x383 (* (- 3) ?x837)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x603 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x589 (* (- 1) ?x603)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x529 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x691 (* (- 1) ?x529)))
 (let ((?x522 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x855 (* (- 1) ?x522)))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x436 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x970 (* 3 ?x436)))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x254 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x255 (* 3 ?x254)))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x218 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x219 (* (- 1) ?x218)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x614 (+ ?x142 ?x166 ?x176 ?x206 ?x219 ?x227 ?x247 ?x255 ?x281 ?x180 ?x555 ?x970 ?x447 ?x896 ?x336 ?x510 ?x855 ?x691 ?x540 ?x589 ?x924 ?x787 ?x724 ?x815 ?x383 ?x937 ?x962 ?x835 ?x875 ?x979 ?x1018 ?x1029 ?x388 ?x1090 ?x680 ?x1113)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x256 (= (+ ?x40 ?x44 ?x258 ?x259 (* 9 (* c n))) 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 $x256 $x308 $x346 (not (= ?x614 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x289 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x529 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1037 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x997 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x436 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x522 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x254 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x987 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x218 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (+ ?x218 ?x987 (* 3 ?x475) ?x267 (* 3 ?x300) (* (- 1) ?x206) (* (- 1) ?x227) (* (- 3) ?x246) (* (- 3) ?x254) (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)) (* (- 1) ?x166) (* (- 3) ?x175) ?x603 ?x548 (* (- 1) ?x815) ?x667 (* 3 ?x631) (* 3 ?x408) ?x522 (* (- 3) ?x436) (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)) (* 3 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)) (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)) (* (- 3) ?x1116) (* (- 3) ?x997) (* (- 1) ?x1090) (* 3 ?x1065) (* (- 3) ?x497) ?x1037 (* (- 1) ?x1018) (* 3 ?x1002) (* (- 3) ?x442) (* 3 ?x471) ?x529 (* 3 ?x705) (* (- 1) ?x937))))
 (let (($x886 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x702 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x258 ?x259) 4) $x702 $x886 (not (= ?x486 0)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x728 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x70 (+ k m)))
 (let ((?x1099 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x680 (* (- 3) ?x1099)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1037 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1029 (* (- 1) ?x1037)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x997 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x875 (* 3 ?x997)))
 (let ((?x987 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x835 (* (- 1) ?x987)))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x837 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x383 (* (- 3) ?x837)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x603 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x589 (* (- 1) ?x603)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x529 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x691 (* (- 1) ?x529)))
 (let ((?x522 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x855 (* (- 1) ?x522)))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x436 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x970 (* 3 ?x436)))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x254 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x255 (* 3 ?x254)))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x218 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x219 (* (- 1) ?x218)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x614 (+ ?x142 ?x166 ?x176 ?x206 ?x219 ?x227 ?x247 ?x255 ?x281 ?x180 ?x555 ?x970 ?x447 ?x896 ?x336 ?x510 ?x855 ?x691 ?x540 ?x589 ?x924 ?x787 ?x724 ?x815 ?x383 ?x937 ?x962 ?x835 ?x875 ?x979 ?x1018 ?x1029 ?x388 ?x1090 ?x680 ?x1113)))
 (let (($x346 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x308 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x256 (= (+ ?x40 ?x44 ?x258 ?x259 (* 9 (* c n))) 4)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x592 (and $x172 $x256 $x308 $x346 (not (= ?x614 0)))))
 (let ((?x486 (+ ?x218 ?x987 (* 3 ?x475) ?x267 (* 3 ?x300) (* (- 1) ?x206) (* (- 1) ?x227) (* (- 3) ?x246) (* (- 3) ?x254) (* (- 1) ?x142) (* (- 1) ?x166) (* (- 3) ?x175) ?x603 ?x548 (* (- 1) ?x815) ?x667 (* 3 ?x631) (* 3 ?x408) ?x522 (* (- 3) ?x436) (* (- 1) ?x962) (* 3 ?x837) (* 3 ?x1099) (* (- 3) ?x1116) (* (- 3) ?x997) (* (- 1) ?x1090) (* 3 ?x1065) (* (- 3) ?x497) ?x1037 (* (- 1) ?x1018) (* 3 ?x1002) (* (- 3) ?x442) (* 3 ?x471) ?x529 (* 3 ?x705) (* (- 1) ?x937))))
 (let (($x886 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x702 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x821 (and $x172 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x258 ?x259) 4) $x702 $x886 (not (= ?x486 0)))))
 (rewrite (= $x821 $x592)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x211 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x529 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x691 (* (- 1) ?x529)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1037 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1029 (* (- 1) ?x1037)))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x997 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x875 (* 3 ?x997)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x1099 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x680 (* (- 3) ?x1099)))
 (let ((?x837 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x383 (* (- 3) ?x837)))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x436 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x970 (* 3 ?x436)))
 (let ((?x522 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x855 (* (- 1) ?x522)))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x603 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x589 (* (- 1) ?x603)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x254 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x255 (* 3 ?x254)))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x987 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x835 (* (- 1) ?x987)))
 (let ((?x218 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x219 (* (- 1) ?x218)))
 (let ((?x945 (+ ?x219 ?x835 ?x336 ?x281 ?x180 ?x206 ?x227 ?x247 ?x255 ?x142 ?x166 ?x176 ?x589 ?x540 ?x815 ?x787 ?x924 ?x555 ?x855 ?x970 ?x962 ?x383 ?x680 ?x1113 ?x875 ?x1090 ?x388 ?x510 ?x1029 ?x1018 ?x979 ?x447 ?x896 ?x691 ?x724 ?x937)))
 (let (($x886 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x371 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x609 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (and $x172 (= ?x609 (- 4)) $x371 $x886 (not (= ?x945 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x291 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x529 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1037 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x997 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x436 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x522 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x603 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x254 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x987 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x218 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x486 (+ ?x218 ?x987 (* 3 ?x475) ?x267 (* 3 ?x300) (* (- 1) ?x206) (* (- 1) ?x227) (* (- 3) ?x246) (* (- 3) ?x254) (* (- 1) (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)) (* (- 1) ?x166) (* (- 3) ?x175) ?x603 ?x548 (* (- 1) ?x815) ?x667 (* 3 ?x631) (* 3 ?x408) ?x522 (* (- 3) ?x436) (* (- 1) (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)) (* 3 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)) (* 3 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)) (* (- 3) ?x1116) (* (- 3) ?x997) (* (- 1) ?x1090) (* 3 ?x1065) (* (- 3) ?x497) ?x1037 (* (- 1) ?x1018) (* 3 ?x1002) (* (- 3) ?x442) (* 3 ?x471) ?x529 (* 3 ?x705) (* (- 1) ?x937))))
 (let (($x886 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x702 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x259 (* (- 1) ?x49)))
 (let ((?x258 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x821 (and $x172 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x258 ?x259) 4) $x702 $x886 (not (= ?x486 0)))))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x691 (* (- 1) ?x529)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x1029 (* (- 1) ?x1037)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x875 (* 3 ?x997)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x1099 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x680 (* (- 3) ?x1099)))
 (let ((?x837 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x383 (* (- 3) ?x837)))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x970 (* 3 ?x436)))
 (let ((?x855 (* (- 1) ?x522)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x589 (* (- 1) ?x603)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x255 (* 3 ?x254)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x835 (* (- 1) ?x987)))
 (let ((?x219 (* (- 1) ?x218)))
 (let ((?x945 (+ ?x219 ?x835 ?x336 ?x281 ?x180 ?x206 ?x227 ?x247 ?x255 ?x142 ?x166 ?x176 ?x589 ?x540 ?x815 ?x787 ?x924 ?x555 ?x855 ?x970 ?x962 ?x383 ?x680 ?x1113 ?x875 ?x1090 ?x388 ?x510 ?x1029 ?x1018 ?x979 ?x447 ?x896 ?x691 ?x724 ?x937)))
 (let (($x371 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x609 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1111 (and $x172 (= ?x609 (- 4)) $x371 $x886 (not (= ?x945 0)))))
 (rewrite (= $x1111 $x821)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x139 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x129 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x121 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x117 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x113 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x112 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x96 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x94 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (- (- (- ?x73 ?x74) ?x75) ?x76) ?x77) ?x82 ?x83 ?x84 ?x85 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) ?x87 ?x88)))
 (let ((?x92 (- ?x89 (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x103 (- (- (- (- (+ (- ?x92 ?x91) ?x94) ?x96) ?x97) ?x98) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x106 (+ ?x103 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x110 (- (- ?x106 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x120 (- (+ (- (+ ?x110 ?x111 ?x112 ?x113) ?x115) ?x117) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x131 (- (- (+ (- (+ ?x120 ?x121) ?x123) ?x125) ?x127) (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x134 (+ (- ?x131 ?x129) (* ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x134 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x217 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x356 (+ 6 m)))
 (let ((?x359 (+ 1 n)))
 (let ((?x937 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x70 (+ k m)))
 (let ((?x705 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x724 (* (- 3) ?x705)))
 (let ((?x529 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x691 (* (- 1) ?x529)))
 (let ((?x471 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x896 (* (- 3) ?x471)))
 (let ((?x442 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x447 (* 3 ?x442)))
 (let ((?x1002 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x979 (* (- 3) ?x1002)))
 (let ((?x1018 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1037 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1029 (* (- 1) ?x1037)))
 (let ((?x497 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x510 (* 3 ?x497)))
 (let ((?x1065 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x388 (* (- 3) ?x1065)))
 (let ((?x1090 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x997 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x875 (* 3 ?x997)))
 (let ((?x1116 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69)))
 (let ((?x1113 (* 3 ?x1116)))
 (let ((?x1099 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x680 (* (- 3) ?x1099)))
 (let ((?x837 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x383 (* (- 3) ?x837)))
 (let ((?x962 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x436 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x970 (* 3 ?x436)))
 (let ((?x522 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70)))
 (let ((?x855 (* (- 1) ?x522)))
 (let ((?x408 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x555 (* (- 3) ?x408)))
 (let ((?x631 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x924 (* (- 3) ?x631)))
 (let ((?x667 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x787 (* (- 1) ?x667)))
 (let ((?x815 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x548 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x540 (* (- 1) ?x548)))
 (let ((?x603 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x589 (* (- 1) ?x603)))
 (let ((?x175 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x176 (* 3 ?x175)))
 (let ((?x166 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x142 (* ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x254 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x255 (* 3 ?x254)))
 (let ((?x246 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x247 (* 3 ?x246)))
 (let ((?x227 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x206 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x300 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 3) ?x300)))
 (let ((?x267 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x281 (* (- 1) ?x267)))
 (let ((?x475 (* ?x359 ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x336 (* (- 3) ?x475)))
 (let ((?x987 (* ?x359 ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x356 ?x356 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x835 (* (- 1) ?x987)))
 (let ((?x218 (* ?x359 ?x359 ?x359 ?x356 ?x356 ?x356 ?x70 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x219 (* (- 1) ?x218)))
 (let ((?x945 (+ ?x219 ?x835 ?x336 ?x281 ?x180 ?x206 ?x227 ?x247 ?x255 ?x142 ?x166 ?x176 ?x589 ?x540 ?x815 ?x787 ?x924 ?x555 ?x855 ?x970 ?x962 ?x383 ?x680 ?x1113 ?x875 ?x1090 ?x388 ?x510 ?x1029 ?x1018 ?x979 ?x447 ?x896 ?x691 ?x724 ?x937)))
 (let (($x886 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x371 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x609 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x172 (= (+ m (* (- 6) n)) 6)))
 (let (($x1111 (and $x172 (= ?x609 (- 4)) $x371 $x886 (not (= ?x945 0)))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x129 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x127 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x125 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x123 (* 3 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x121 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x117 (* 3 ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x115 (* 3 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x113 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x112 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x111 (* 3 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x98 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x97 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x96 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x94 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x91 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x88 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x87 (* ?x69 ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x85 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x84 (* 3 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x83 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x82 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x77 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x76 (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x75 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x74 (* ?x69 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72)))
 (let ((?x73 (* (- 1) ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)))
 (let ((?x89 (+ (- (- (- (- ?x73 ?x74) ?x75) ?x76) ?x77) ?x82 ?x83 ?x84 ?x85 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) ?x87 ?x88)))
 (let ((?x92 (- ?x89 (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x103 (- (- (- (- (+ (- ?x92 ?x91) ?x94) ?x96) ?x97) ?x98) (* ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x106 (+ ?x103 (* 3 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let ((?x110 (- (- ?x106 (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 3 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x120 (- (+ (- (+ ?x110 ?x111 ?x112 ?x113) ?x115) ?x117) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x131 (- (- (+ (- (+ ?x120 ?x121) ?x123) ?x125) ?x127) (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72 ?x72))))
 (let ((?x134 (+ (- ?x131 ?x129) (* ?x69 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x138 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x134 0))))))
 (rewrite (= $x138 $x1111))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x140 (asserted $x139)))
 (let ((@x390 (mp (mp @x140 (quant-intro (proof-bind ?x217) (= $x139 $x211)) $x211) (rewrite (= $x211 $x211)) $x211)))
 (let ((@x457 (mp (mp @x390 (quant-intro (proof-bind ?x291) (= $x211 $x289)) $x289) (quant-intro (proof-bind ?x728) (= $x289 $x726)) $x726)))
 (let ((@x169 (mp (mp~ @x457 (sk (~ $x726 $x164)) $x164) (rewrite (= $x164 $x641)) $x641)))
 (let ((@x1021 (and-elim @x169 $x902)))
 (let ((@x326 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x902) $x550)) @x1021 $x550)))
 (let (($x352 (>= ?x789 (- 1))))
 (let ((@x197 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x902) $x352)) @x1021 $x352)))
 (let (($x370 (<= ?x715 6)))
 (let ((@x806 (and-elim @x169 $x682)))
 (let ((@x760 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x682) $x370)) @x806 $x370)))
 (let (($x224 (>= ?x715 6)))
 (let ((@x345 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x682) $x224)) @x806 $x224)))
 (let (($x350 (<= ?x762 4)))
 (let ((@x557 (and-elim @x169 $x231)))
 (let ((@x478 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x231) $x350)) @x557 $x350)))
 (let (($x409 (>= ?x762 4)))
 (let ((@x654 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x231) $x409)) @x557 $x409)))
 (let (($x249 (<= ?x434 1)))
 (let ((@x721 (and-elim @x169 $x779)))
 (let ((@x273 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x779) $x249)) @x721 $x249)))
 (let (($x205 (>= ?x434 1)))
 (let ((@x539 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x779) $x205)) @x721 $x205)))
 (let (($x664 (not (<= ?x613 0))))
 (let (($x222 (>= ?x613 0)))
 (let ((@x618 ((_ th-lemma arith) (hypothesis (not $x222)) @x197 @x326 @x197 @x326 @x539 @x273 @x197 @x326 @x654 @x478 @x197 @x326 @x345 @x760 @x345 @x760 @x197 @x326 false)))
 (let ((@x271 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x678 $x664 (not $x222))) (and-elim @x169 $x168) (or $x664 (not $x222)))))
 ((_ th-lemma arith) (unit-resolution @x271 (lemma @x618 $x222) $x664) @x197 @x326 @x197 @x326 @x539 @x273 @x197 @x326 @x654 @x478 @x197 @x326 @x345 @x760 @x345 @x760 @x197 @x326 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        15
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             461
 :arith-nonlinear-bounds    9
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 65
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.03
 :memory                    3.42
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                3597526
 :num-checks                1
 :propagations              11
 :rlimit-count              36097
 :time                      0.05
 :total-time                0.06)
