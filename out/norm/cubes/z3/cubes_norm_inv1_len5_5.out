unsat
((set-logic NIA)
(declare-fun k!2 () Int)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x128 (* (- 1) k!2)))
 (let ((?x509 (* n!0 k!2)))
 (let ((?x1255 (+ ?x509 (* (- 3) c!3) (* 2 n!0) ?x128)))
 (let (($x1408 (<= ?x1255 (- 1))))
 (let (($x537 (= ?x1255 (- 1))))
 (let ((?x1769 (* k!2 k!2 m!1)))
 (let ((?x724 (+ k!2 m!1)))
 (let ((?x800 (+ 1 n!0)))
 (let ((?x1207 (* ?x800 ?x800 ?x800 ?x800 ?x724 ?x724)))
 (let ((?x1114 (* c!3 c!3 m!1)))
 (let ((?x836 (* ?x800 ?x800 ?x800 (+ 6 m!1) ?x724 ?x724)))
 (let ((?x449 (+ (* 18 (* c!3 k!2 k!2 m!1)) (* 18 (* c!3 c!3 k!2 m!1)) (* 6 (* c!3 c!3 c!3 m!1)) (* 18 (* c!3 k!2 k!2 k!2)) (* (- 216) (* n!0 n!0 k!2)) (* (- 18) (* n!0 n!0 k!2 k!2)) (* 18 (* c!3 n!0 k!2 k!2 k!2)) (* 6 (* n!0 k!2 k!2 k!2 k!2)) (* 18 (* c!3 c!3 n!0 k!2 m!1)) (* (- 6) (* c!3 c!3)) (* 18 (* c!3 c!3 k!2 k!2)) (* (- 6) (* m!1 m!1)) (* (- 432) ?x509) (* 2 (* c!3 k!2 m!1)) (* 18 (* c!3 n!0 k!2 k!2 m!1)) (* 6 (* n!0 k!2 k!2 k!2 m!1)) (* (- 216) (* c!3 n!0 n!0)) (* 24 (* k!2 k!2)) (* (- 72) (* c!3 n!0 n!0 m!1)) (* (- 1) (* c!3 c!3 c!3 k!2 m!1)) (* (- 6) (* n!0 n!0 k!2 m!1 m!1)) (* 6 (* k!2 k!2 k!2 m!1)) (* 6 (* k!2 k!2 k!2 k!2)) (* 6 (* c!3 c!3 c!3 n!0 k!2)) (* (- 1) (* k!2 k!2 k!2 k!2 m!1)) (* (- 216) c!3) ?x836 (* 6 (* k!2 m!1 m!1)) (* (- 3) (* c!3 k!2 k!2 k!2 m!1)) (* (- 3) (* c!3 c!3 k!2 k!2 m!1)) (* (- 1) (* c!3 c!3 c!3 m!1 m!1)) (* 18 (* c!3 c!3 n!0 k!2 k!2)) (* (- 18) (* n!0 m!1 m!1)) (* (- 6) (* c!3 n!0 n!0 m!1 m!1)) ?x1114 (* (- 6) ?x1207) (* (- 6) (* c!3 c!3 n!0)) (* (- 12) (* n!0 n!0 n!0 k!2 m!1)) (* (- 1) (* c!3 k!2 m!1 m!1)) (* (- 1) (* k!2 k!2 m!1 m!1)) (* 6 (* c!3 c!3 c!3 n!0 m!1)) (* (- 6) (* n!0 n!0 n!0 k!2 k!2)) (* (- 3) (* c!3 k!2 k!2 m!1 m!1)) (* (- 3) (* c!3 c!3 k!2 m!1 m!1)) (* 6 (* c!3 c!3 c!3 k!2)) (* (- 18) (* n!0 n!0 m!1 m!1)) (* n!0 k!2 m!1 m!1 m!1) (* c!3 n!0 m!1 m!1 m!1) (* (- 108) (* n!0 k!2 m!1)) (* (- 72) (* c!3 n!0 m!1)) (* 12 (* n!0 k!2 k!2)) (* (- 6) (* n!0 n!0 n!0 m!1 m!1)) (* 6 (* n!0 k!2 m!1 m!1)) (* (- 108) (* n!0 n!0 k!2 m!1)) (* (- 1) (* k!2 k!2 k!2 m!1 m!1)) (* (- 432) (* c!3 n!0)) (* (- 12) (* k!2 m!1)) (* (- 216) k!2) (* 24 (* c!3 n!0 k!2)) (* 6 (* c!3 n!0 m!1 m!1)) (* 24 (* c!3 k!2)) (* 6 (* n!0 k!2 k!2 m!1)) (* 6 (* c!3 n!0 k!2 m!1)) ?x1769 (* 6 (* c!3 m!1 m!1)))))
 (let (($x1449 (= ?x449 0)))
 (let (($x1743 (not $x1449)))
 (let ((?x373 (+ (* 3 n!0) ?x128 (* 3 (* n!0 n!0)))))
 (let (($x1258 (= ?x373 (- 1))))
 (let ((?x631 (* k!2 k!2)))
 (let ((?x1533 (+ ?x631 (* (- 18) c!3) (* 9 n!0) (* (- 9) (* c!3 n!0)) (* (- 5) k!2))))
 (let (($x1534 (= ?x1533 (- 4))))
 (let ((?x1480 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x1481 (= ?x1480 (- 6))))
 (let (($x381 (and $x1481 $x1534 $x537 $x1258 $x1743)))
 (let ((?x1246 (* k!2 k!2 m!1 m!1)))
 (let ((?x1245 (* c!3 k!2 m!1 m!1)))
 (let ((?x1522 (* k!2 k!2 k!2 m!1 m!1)))
 (let ((?x1003 (* c!3 c!3 c!3 m!1 m!1)))
 (let ((?x817 (* k!2 k!2 k!2 k!2 m!1)))
 (let ((?x693 (* c!3 c!3 c!3 k!2 m!1)))
 (let ((?x1342 (+ (* 216 c!3) (* 216 k!2) (* (- 24) ?x631) (* 432 (* k!2 n!0)) (* 18 (* k!2 k!2 n!0 n!0)) (* 432 (* c!3 n!0)) (* (- 2) (* c!3 k!2 m!1)) (* (- 1) ?x1769) (* (- 6) (* c!3 m!1 m!1)) (* (- 6) (* k!2 m!1 m!1)) (* (- 24) (* c!3 k!2)) (* 12 (* k!2 m!1)) (* 6 (* m!1 m!1)) ?x693 (* 3 (* c!3 c!3 k!2 k!2 m!1)) (* 3 (* c!3 k!2 k!2 k!2 m!1)) ?x817 ?x1003 (* 3 (* c!3 c!3 k!2 m!1 m!1)) (* 3 (* c!3 k!2 k!2 m!1 m!1)) ?x1522 (* (- 6) (* c!3 c!3 c!3 k!2)) (* (- 18) (* c!3 c!3 k!2 k!2)) (* 6 (* c!3 c!3)) (* (- 18) (* c!3 k!2 k!2 k!2)) (* (- 6) (* k!2 k!2 k!2 k!2)) (* (- 6) (* c!3 c!3 c!3 m!1)) (* (- 18) (* c!3 c!3 k!2 m!1)) (* (- 18) (* c!3 k!2 k!2 m!1)) (* (- 6) (* k!2 k!2 k!2 m!1)) (* (- 6) (* c!3 c!3 c!3 k!2 n!0)) (* (- 18) (* c!3 c!3 k!2 k!2 n!0)) (* (- 18) (* c!3 k!2 k!2 k!2 n!0)) (* (- 6) (* k!2 k!2 k!2 k!2 n!0)) (* (- 6) (* c!3 c!3 c!3 m!1 n!0)) (* (- 18) (* c!3 c!3 k!2 m!1 n!0)) (* (- 18) (* c!3 k!2 k!2 m!1 n!0)) (* (- 6) (* k!2 k!2 k!2 m!1 n!0)) (* 216 (* k!2 n!0 n!0)) (* 108 (* k!2 m!1 n!0 n!0)) (* (- 1) ?x836) (* (- 6) (* c!3 k!2 m!1 n!0)) (* (- 6) (* k!2 k!2 m!1 n!0)) (* (- 6) (* c!3 m!1 m!1 n!0)) (* (- 6) (* k!2 m!1 m!1 n!0)) (* (- 24) (* c!3 k!2 n!0)) (* (- 12) (* k!2 k!2 n!0)) (* 72 (* c!3 m!1 n!0)) (* 108 (* k!2 m!1 n!0)) (* (- 1) (* c!3 m!1 m!1 m!1 n!0)) (* (- 1) (* k!2 m!1 m!1 m!1 n!0)) (* 18 (* m!1 m!1 n!0)) (* 6 (* c!3 m!1 m!1 n!0 n!0)) (* 6 (* k!2 m!1 m!1 n!0 n!0)) (* 18 (* m!1 m!1 n!0 n!0)) (* (- 1) ?x1114) (* 6 ?x1207) (* 6 (* c!3 c!3 n!0)) (* 216 (* c!3 n!0 n!0)) ?x1245 ?x1246 (* 72 (* c!3 m!1 n!0 n!0)) (* 6 (* k!2 k!2 n!0 n!0 n!0)) (* 12 (* k!2 m!1 n!0 n!0 n!0)) (* 6 (* m!1 m!1 n!0 n!0 n!0)))))
 (let (($x1580 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x1523 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x631) (* 9 (* c!3 n!0)))))
 (let (($x1347 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x1523 4) $x1580 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x1342 0)))))
 (let (($x995 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1969 (* m m n n n)))
 (let ((?x2177 (* 6 ?x1969)))
 (let ((?x1967 (* k m n n n)))
 (let ((?x2176 (* 12 ?x1967)))
 (let ((?x1963 (* k k n n n)))
 (let ((?x2175 (* 6 ?x1963)))
 (let ((?x2173 (* 72 (* c m n n))))
 (let ((?x1660 (* k k m m)))
 (let ((?x1659 (* c k m m)))
 (let ((?x2172 (* 216 (* c n n))))
 (let ((?x1628 (* c c n)))
 (let ((?x2171 (* 6 ?x1628)))
 (let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1627 (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1629 (* 6 ?x1627)))
 (let ((?x1540 (* c c m)))
 (let ((?x2170 (* (- 1) ?x1540)))
 (let ((?x2168 (* 18 (* m m n n))))
 (let ((?x1474 (* k m m n n)))
 (let ((?x2165 (* 6 ?x1474)))
 (let ((?x1472 (* c m m n n)))
 (let ((?x2164 (* 6 ?x1472)))
 (let ((?x2163 (* 18 (* m m n))))
 (let ((?x1243 (* k m m m n)))
 (let ((?x2162 (* (- 1) ?x1243)))
 (let ((?x1242 (* c m m m n)))
 (let ((?x1986 (* (- 1) ?x1242)))
 (let ((?x1163 (* k m n)))
 (let ((?x959 (* 108 ?x1163)))
 (let ((?x1159 (* c m n)))
 (let ((?x1985 (* 72 ?x1159)))
 (let ((?x1155 (* k k n)))
 (let ((?x1984 (* (- 12) ?x1155)))
 (let ((?x1151 (* c k n)))
 (let ((?x1983 (* (- 24) ?x1151)))
 (let ((?x1100 (* k m m n)))
 (let ((?x1608 (* (- 6) ?x1100)))
 (let ((?x1098 (* c m m n)))
 (let ((?x1606 (* (- 6) ?x1098)))
 (let ((?x1096 (* k k m n)))
 (let ((?x1982 (* (- 6) ?x1096)))
 (let ((?x1094 (* c k m n)))
 (let ((?x1981 (* (- 6) ?x1094)))
 (let ((?x858 (+ 6 m)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x903 (* (- 1) ?x898)))
 (let ((?x1980 (* 108 (* k m n n))))
 (let ((?x1979 (* 216 (* k n n))))
 (let ((?x796 (* k k k m n)))
 (let ((?x1978 (* (- 6) ?x796)))
 (let ((?x794 (* c k k m n)))
 (let ((?x1977 (* (- 18) ?x794)))
 (let ((?x790 (* c c k m n)))
 (let ((?x1976 (* (- 18) ?x790)))
 (let ((?x782 (* c c c m n)))
 (let ((?x1975 (* (- 6) ?x782)))
 (let ((?x780 (* k k k k n)))
 (let ((?x1974 (* (- 6) ?x780)))
 (let ((?x778 (* c k k k n)))
 (let ((?x1973 (* (- 18) ?x778)))
 (let ((?x774 (* c c k k n)))
 (let ((?x1972 (* (- 18) ?x774)))
 (let ((?x766 (* c c c k n)))
 (let ((?x1906 (* (- 6) ?x766)))
 (let ((?x685 (* k k k m)))
 (let ((?x604 (* (- 6) ?x685)))
 (let ((?x667 (* c k k m)))
 (let ((?x746 (* (- 18) ?x667)))
 (let ((?x649 (* c c k m)))
 (let ((?x748 (* (- 18) ?x649)))
 (let ((?x641 (* c c c m)))
 (let ((?x425 (* (- 6) ?x641)))
 (let ((?x637 (* k k k k)))
 (let ((?x383 (* (- 6) ?x637)))
 (let ((?x619 (* c k k k)))
 (let ((?x745 (* (- 18) ?x619)))
 (let ((?x648 (* 6 (* c c))))
 (let ((?x601 (* c c k k)))
 (let ((?x747 (* (- 18) ?x601)))
 (let ((?x593 (* c c c k)))
 (let ((?x1425 (* (- 6) ?x593)))
 (let ((?x587 (* k k k m m)))
 (let ((?x586 (* c k k m m)))
 (let ((?x1317 (* 3 ?x586)))
 (let ((?x584 (* c c k m m)))
 (let ((?x1314 (* 3 ?x584)))
 (let ((?x580 (* c c c m m)))
 (let ((?x579 (* k k k k m)))
 (let ((?x578 (* c k k k m)))
 (let ((?x1240 (* 3 ?x578)))
 (let ((?x576 (* c c k k m)))
 (let ((?x1313 (* 3 ?x576)))
 (let ((?x572 (* c c c k m)))
 (let ((?x1905 (* 6 (* m m))))
 (let ((?x478 (* k m m)))
 (let ((?x931 (* (- 6) ?x478)))
 (let ((?x476 (* c m m)))
 (let ((?x930 (* (- 6) ?x476)))
 (let ((?x474 (* k k m)))
 (let ((?x1901 (* (- 1) ?x474)))
 (let ((?x472 (* c k m)))
 (let ((?x1900 (* (- 2) ?x472)))
 (let ((?x157 (* c n)))
 (let ((?x1753 (* 432 ?x157)))
 (let ((?x1756 (* 18 (* k k n n))))
 (let ((?x55 (* k n)))
 (let ((?x1755 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x1757 (* (- 24) ?x49)))
 (let ((?x1253 (* 216 k)))
 (let ((?x1250 (* 216 c)))
 (let ((?x1526 (+ ?x1250 ?x1253 ?x1757 ?x1755 ?x1756 ?x1753 ?x1900 ?x1901 ?x930 ?x931 (* (- 24) (* c k)) (* 12 (* k m)) ?x1905 ?x572 ?x1313 ?x1240 ?x579 ?x580 ?x1314 ?x1317 ?x587 ?x1425 ?x747 ?x648 ?x745 ?x383 ?x425 ?x748 ?x746 ?x604 ?x1906 ?x1972 ?x1973 ?x1974 ?x1975 ?x1976 ?x1977 ?x1978 ?x1979 ?x1980 ?x903 ?x1981 ?x1982 ?x1606 ?x1608 ?x1983 ?x1984 ?x1985 ?x959 ?x1986 ?x2162 ?x2163 ?x2164 ?x2165 ?x2168 ?x2170 ?x1629 ?x2171 ?x2172 ?x1659 ?x1660 ?x2173 ?x2175 ?x2176 ?x2177)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x1526 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2186 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x1969 (* m m n n n)))
 (let ((?x2177 (* 6 ?x1969)))
 (let ((?x1967 (* k m n n n)))
 (let ((?x2176 (* 12 ?x1967)))
 (let ((?x1963 (* k k n n n)))
 (let ((?x2175 (* 6 ?x1963)))
 (let ((?x2173 (* 72 (* c m n n))))
 (let ((?x1660 (* k k m m)))
 (let ((?x1659 (* c k m m)))
 (let ((?x2172 (* 216 (* c n n))))
 (let ((?x1628 (* c c n)))
 (let ((?x2171 (* 6 ?x1628)))
 (let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1627 (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1629 (* 6 ?x1627)))
 (let ((?x1540 (* c c m)))
 (let ((?x2170 (* (- 1) ?x1540)))
 (let ((?x2055 (* (- 6) (* k c))))
 (let ((?x2168 (* 18 (* m m n n))))
 (let ((?x1474 (* k m m n n)))
 (let ((?x2165 (* 6 ?x1474)))
 (let ((?x1472 (* c m m n n)))
 (let ((?x2164 (* 6 ?x1472)))
 (let ((?x2163 (* 18 (* m m n))))
 (let ((?x1243 (* k m m m n)))
 (let ((?x2162 (* (- 1) ?x1243)))
 (let ((?x1242 (* c m m m n)))
 (let ((?x1986 (* (- 1) ?x1242)))
 (let ((?x1163 (* k m n)))
 (let ((?x959 (* 108 ?x1163)))
 (let ((?x1159 (* c m n)))
 (let ((?x1985 (* 72 ?x1159)))
 (let ((?x1155 (* k k n)))
 (let ((?x1984 (* (- 12) ?x1155)))
 (let ((?x1151 (* c k n)))
 (let ((?x1983 (* (- 24) ?x1151)))
 (let ((?x1100 (* k m m n)))
 (let ((?x1608 (* (- 6) ?x1100)))
 (let ((?x1098 (* c m m n)))
 (let ((?x1606 (* (- 6) ?x1098)))
 (let ((?x1096 (* k k m n)))
 (let ((?x1982 (* (- 6) ?x1096)))
 (let ((?x1094 (* c k m n)))
 (let ((?x1981 (* (- 6) ?x1094)))
 (let ((?x858 (+ 6 m)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x903 (* (- 1) ?x898)))
 (let ((?x1980 (* 108 (* k m n n))))
 (let ((?x1979 (* 216 (* k n n))))
 (let ((?x796 (* k k k m n)))
 (let ((?x1978 (* (- 6) ?x796)))
 (let ((?x794 (* c k k m n)))
 (let ((?x1977 (* (- 18) ?x794)))
 (let ((?x790 (* c c k m n)))
 (let ((?x1976 (* (- 18) ?x790)))
 (let ((?x782 (* c c c m n)))
 (let ((?x1975 (* (- 6) ?x782)))
 (let ((?x780 (* k k k k n)))
 (let ((?x1974 (* (- 6) ?x780)))
 (let ((?x778 (* c k k k n)))
 (let ((?x1973 (* (- 18) ?x778)))
 (let ((?x774 (* c c k k n)))
 (let ((?x1972 (* (- 18) ?x774)))
 (let ((?x766 (* c c c k n)))
 (let ((?x1906 (* (- 6) ?x766)))
 (let ((?x685 (* k k k m)))
 (let ((?x604 (* (- 6) ?x685)))
 (let ((?x667 (* c k k m)))
 (let ((?x746 (* (- 18) ?x667)))
 (let ((?x649 (* c c k m)))
 (let ((?x748 (* (- 18) ?x649)))
 (let ((?x641 (* c c c m)))
 (let ((?x425 (* (- 6) ?x641)))
 (let ((?x637 (* k k k k)))
 (let ((?x383 (* (- 6) ?x637)))
 (let ((?x619 (* c k k k)))
 (let ((?x745 (* (- 18) ?x619)))
 (let ((?x648 (* 6 (* c c))))
 (let ((?x601 (* c c k k)))
 (let ((?x747 (* (- 18) ?x601)))
 (let ((?x593 (* c c c k)))
 (let ((?x1425 (* (- 6) ?x593)))
 (let ((?x587 (* k k k m m)))
 (let ((?x586 (* c k k m m)))
 (let ((?x1317 (* 3 ?x586)))
 (let ((?x584 (* c c k m m)))
 (let ((?x1314 (* 3 ?x584)))
 (let ((?x580 (* c c c m m)))
 (let ((?x579 (* k k k k m)))
 (let ((?x578 (* c k k k m)))
 (let ((?x1240 (* 3 ?x578)))
 (let ((?x576 (* c c k k m)))
 (let ((?x1313 (* 3 ?x576)))
 (let ((?x572 (* c c c k m)))
 (let ((?x1905 (* 6 (* m m))))
 (let ((?x478 (* k m m)))
 (let ((?x931 (* (- 6) ?x478)))
 (let ((?x476 (* c m m)))
 (let ((?x930 (* (- 6) ?x476)))
 (let ((?x474 (* k k m)))
 (let ((?x1901 (* (- 1) ?x474)))
 (let ((?x472 (* c k m)))
 (let ((?x1900 (* (- 2) ?x472)))
 (let ((?x157 (* c n)))
 (let ((?x1753 (* 432 ?x157)))
 (let ((?x1756 (* 18 (* k k n n))))
 (let ((?x55 (* k n)))
 (let ((?x1755 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x1757 (* (- 24) ?x49)))
 (let ((?x1253 (* 216 k)))
 (let ((?x1250 (* 216 c)))
 (let ((?x2179 (+ ?x1250 ?x1253 ?x1757 ?x1755 ?x1756 ?x1753 ?x1900 ?x1901 ?x930 ?x931 (* (- 18) (* c k)) (* 36 (* c m)) (* 48 (* k m)) ?x1905 ?x572 ?x1313 ?x1240 ?x579 ?x580 ?x1314 ?x1317 ?x587 ?x1425 ?x747 ?x648 ?x745 ?x383 ?x425 ?x748 ?x746 ?x604 ?x1906 ?x1972 ?x1973 ?x1974 ?x1975 ?x1976 ?x1977 ?x1978 ?x1979 ?x1980 ?x903 ?x1981 ?x1982 ?x1606 ?x1608 ?x1983 ?x1984 ?x1985 ?x959 ?x1986 ?x2162 ?x2163 ?x2164 ?x2165 ?x2168 ?x2055 ?x2170 ?x1629 ?x2171 ?x2172 ?x1659 ?x1660 ?x2173 (* (- 6) (* m 6 c)) ?x2175 ?x2176 ?x2177 (* (- 6) (* m 6 k)))))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 $x219 $x271 $x309 (not (= ?x2179 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1000 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1969 (* m m n n n)))
 (let ((?x2177 (* 6 ?x1969)))
 (let ((?x1967 (* k m n n n)))
 (let ((?x2176 (* 12 ?x1967)))
 (let ((?x1963 (* k k n n n)))
 (let ((?x2175 (* 6 ?x1963)))
 (let ((?x2173 (* 72 (* c m n n))))
 (let ((?x1660 (* k k m m)))
 (let ((?x1659 (* c k m m)))
 (let ((?x2172 (* 216 (* c n n))))
 (let ((?x1628 (* c c n)))
 (let ((?x2171 (* 6 ?x1628)))
 (let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1627 (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1629 (* 6 ?x1627)))
 (let ((?x1540 (* c c m)))
 (let ((?x2170 (* (- 1) ?x1540)))
 (let ((?x2168 (* 18 (* m m n n))))
 (let ((?x1474 (* k m m n n)))
 (let ((?x2165 (* 6 ?x1474)))
 (let ((?x1472 (* c m m n n)))
 (let ((?x2164 (* 6 ?x1472)))
 (let ((?x2163 (* 18 (* m m n))))
 (let ((?x1243 (* k m m m n)))
 (let ((?x2162 (* (- 1) ?x1243)))
 (let ((?x1242 (* c m m m n)))
 (let ((?x1986 (* (- 1) ?x1242)))
 (let ((?x1163 (* k m n)))
 (let ((?x959 (* 108 ?x1163)))
 (let ((?x1159 (* c m n)))
 (let ((?x1985 (* 72 ?x1159)))
 (let ((?x1155 (* k k n)))
 (let ((?x1984 (* (- 12) ?x1155)))
 (let ((?x1151 (* c k n)))
 (let ((?x1983 (* (- 24) ?x1151)))
 (let ((?x1100 (* k m m n)))
 (let ((?x1608 (* (- 6) ?x1100)))
 (let ((?x1098 (* c m m n)))
 (let ((?x1606 (* (- 6) ?x1098)))
 (let ((?x1096 (* k k m n)))
 (let ((?x1982 (* (- 6) ?x1096)))
 (let ((?x1094 (* c k m n)))
 (let ((?x1981 (* (- 6) ?x1094)))
 (let ((?x858 (+ 6 m)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x903 (* (- 1) ?x898)))
 (let ((?x1980 (* 108 (* k m n n))))
 (let ((?x1979 (* 216 (* k n n))))
 (let ((?x796 (* k k k m n)))
 (let ((?x1978 (* (- 6) ?x796)))
 (let ((?x794 (* c k k m n)))
 (let ((?x1977 (* (- 18) ?x794)))
 (let ((?x790 (* c c k m n)))
 (let ((?x1976 (* (- 18) ?x790)))
 (let ((?x782 (* c c c m n)))
 (let ((?x1975 (* (- 6) ?x782)))
 (let ((?x780 (* k k k k n)))
 (let ((?x1974 (* (- 6) ?x780)))
 (let ((?x778 (* c k k k n)))
 (let ((?x1973 (* (- 18) ?x778)))
 (let ((?x774 (* c c k k n)))
 (let ((?x1972 (* (- 18) ?x774)))
 (let ((?x766 (* c c c k n)))
 (let ((?x1906 (* (- 6) ?x766)))
 (let ((?x685 (* k k k m)))
 (let ((?x604 (* (- 6) ?x685)))
 (let ((?x667 (* c k k m)))
 (let ((?x746 (* (- 18) ?x667)))
 (let ((?x649 (* c c k m)))
 (let ((?x748 (* (- 18) ?x649)))
 (let ((?x641 (* c c c m)))
 (let ((?x425 (* (- 6) ?x641)))
 (let ((?x637 (* k k k k)))
 (let ((?x383 (* (- 6) ?x637)))
 (let ((?x619 (* c k k k)))
 (let ((?x745 (* (- 18) ?x619)))
 (let ((?x648 (* 6 (* c c))))
 (let ((?x601 (* c c k k)))
 (let ((?x747 (* (- 18) ?x601)))
 (let ((?x593 (* c c c k)))
 (let ((?x1425 (* (- 6) ?x593)))
 (let ((?x587 (* k k k m m)))
 (let ((?x586 (* c k k m m)))
 (let ((?x1317 (* 3 ?x586)))
 (let ((?x584 (* c c k m m)))
 (let ((?x1314 (* 3 ?x584)))
 (let ((?x580 (* c c c m m)))
 (let ((?x579 (* k k k k m)))
 (let ((?x578 (* c k k k m)))
 (let ((?x1240 (* 3 ?x578)))
 (let ((?x576 (* c c k k m)))
 (let ((?x1313 (* 3 ?x576)))
 (let ((?x572 (* c c c k m)))
 (let ((?x1905 (* 6 (* m m))))
 (let ((?x478 (* k m m)))
 (let ((?x931 (* (- 6) ?x478)))
 (let ((?x476 (* c m m)))
 (let ((?x930 (* (- 6) ?x476)))
 (let ((?x474 (* k k m)))
 (let ((?x1901 (* (- 1) ?x474)))
 (let ((?x472 (* c k m)))
 (let ((?x1900 (* (- 2) ?x472)))
 (let ((?x157 (* c n)))
 (let ((?x1753 (* 432 ?x157)))
 (let ((?x1756 (* 18 (* k k n n))))
 (let ((?x55 (* k n)))
 (let ((?x1755 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x1757 (* (- 24) ?x49)))
 (let ((?x1253 (* 216 k)))
 (let ((?x1250 (* 216 c)))
 (let ((?x1526 (+ ?x1250 ?x1253 ?x1757 ?x1755 ?x1756 ?x1753 ?x1900 ?x1901 ?x930 ?x931 (* (- 24) (* c k)) (* 12 (* k m)) ?x1905 ?x572 ?x1313 ?x1240 ?x579 ?x580 ?x1314 ?x1317 ?x587 ?x1425 ?x747 ?x648 ?x745 ?x383 ?x425 ?x748 ?x746 ?x604 ?x1906 ?x1972 ?x1973 ?x1974 ?x1975 ?x1976 ?x1977 ?x1978 ?x1979 ?x1980 ?x903 ?x1981 ?x1982 ?x1606 ?x1608 ?x1983 ?x1984 ?x1985 ?x959 ?x1986 ?x2162 ?x2163 ?x2164 ?x2165 ?x2168 ?x2170 ?x1629 ?x2171 ?x2172 ?x1659 ?x1660 ?x2173 ?x2175 ?x2176 ?x2177)))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x1637 (and $x135 $x219 $x271 $x309 (not (= ?x1526 0)))))
 (let ((?x2055 (* (- 6) (* k c))))
 (let ((?x2179 (+ ?x1250 ?x1253 ?x1757 ?x1755 ?x1756 ?x1753 ?x1900 ?x1901 ?x930 ?x931 (* (- 18) (* c k)) (* 36 (* c m)) (* 48 (* k m)) ?x1905 ?x572 ?x1313 ?x1240 ?x579 ?x580 ?x1314 ?x1317 ?x587 ?x1425 ?x747 ?x648 ?x745 ?x383 ?x425 ?x748 ?x746 ?x604 ?x1906 ?x1972 ?x1973 ?x1974 ?x1975 ?x1976 ?x1977 ?x1978 ?x1979 ?x1980 ?x903 ?x1981 ?x1982 ?x1606 ?x1608 ?x1983 ?x1984 ?x1985 ?x959 ?x1986 ?x2162 ?x2163 ?x2164 ?x2165 ?x2168 ?x2055 ?x2170 ?x1629 ?x2171 ?x2172 ?x1659 ?x1660 ?x2173 (* (- 6) (* m 6 c)) ?x2175 ?x2176 ?x2177 (* (- 6) (* m 6 k)))))
 (let (($x1226 (and $x135 $x219 $x271 $x309 (not (= ?x2179 0)))))
 (rewrite (= $x1226 $x1637))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1519 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1761 (* ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x73 (+ c k)))
 (let ((?x858 (+ 6 m)))
 (let ((?x1770 (* ?x858 ?x73 ?x73)))
 (let ((?x429 (* ?x1008 ?x858 ?x858 ?x858 ?x73)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x503 (+ ?x898 (* 6 (* ?x858 ?x69 ?x73)) (* (- 1) (* ?x858 ?x69 ?x73 ?x73 ?x73)) (* 6 (* ?x1008 ?x69 ?x73 ?x73 ?x73)) (* 6 (* ?x1008 ?x858 ?x69 ?x73)) ?x429 (* (- 6) (* ?x1008 ?x1008 ?x858 ?x858 ?x73)) (* (- 6) (* ?x1008 ?x858 ?x858 ?x73)) (* (- 6) (* ?x73 ?x73)) ?x1770 (* (- 6) (* ?x1008 ?x73 ?x73)) (* (- 1) (* ?x858 ?x858 ?x69 ?x73)) (* 6 (* ?x69 ?x73 ?x73 ?x73)) (* (- 6) (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)) (* (- 6) ?x1761))))
 (let (($x784 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1212 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x1212 $x784 (not (= ?x503 0)))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2188 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x1969 (* m m n n n)))
 (let ((?x2177 (* 6 ?x1969)))
 (let ((?x1967 (* k m n n n)))
 (let ((?x2176 (* 12 ?x1967)))
 (let ((?x1963 (* k k n n n)))
 (let ((?x2175 (* 6 ?x1963)))
 (let ((?x2173 (* 72 (* c m n n))))
 (let ((?x1660 (* k k m m)))
 (let ((?x1659 (* c k m m)))
 (let ((?x2172 (* 216 (* c n n))))
 (let ((?x1628 (* c c n)))
 (let ((?x2171 (* 6 ?x1628)))
 (let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1627 (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1629 (* 6 ?x1627)))
 (let ((?x1540 (* c c m)))
 (let ((?x2170 (* (- 1) ?x1540)))
 (let ((?x2055 (* (- 6) (* k c))))
 (let ((?x2168 (* 18 (* m m n n))))
 (let ((?x1474 (* k m m n n)))
 (let ((?x2165 (* 6 ?x1474)))
 (let ((?x1472 (* c m m n n)))
 (let ((?x2164 (* 6 ?x1472)))
 (let ((?x2163 (* 18 (* m m n))))
 (let ((?x1243 (* k m m m n)))
 (let ((?x2162 (* (- 1) ?x1243)))
 (let ((?x1242 (* c m m m n)))
 (let ((?x1986 (* (- 1) ?x1242)))
 (let ((?x1163 (* k m n)))
 (let ((?x959 (* 108 ?x1163)))
 (let ((?x1159 (* c m n)))
 (let ((?x1985 (* 72 ?x1159)))
 (let ((?x1155 (* k k n)))
 (let ((?x1984 (* (- 12) ?x1155)))
 (let ((?x1151 (* c k n)))
 (let ((?x1983 (* (- 24) ?x1151)))
 (let ((?x1100 (* k m m n)))
 (let ((?x1608 (* (- 6) ?x1100)))
 (let ((?x1098 (* c m m n)))
 (let ((?x1606 (* (- 6) ?x1098)))
 (let ((?x1096 (* k k m n)))
 (let ((?x1982 (* (- 6) ?x1096)))
 (let ((?x1094 (* c k m n)))
 (let ((?x1981 (* (- 6) ?x1094)))
 (let ((?x858 (+ 6 m)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x903 (* (- 1) ?x898)))
 (let ((?x1980 (* 108 (* k m n n))))
 (let ((?x1979 (* 216 (* k n n))))
 (let ((?x796 (* k k k m n)))
 (let ((?x1978 (* (- 6) ?x796)))
 (let ((?x794 (* c k k m n)))
 (let ((?x1977 (* (- 18) ?x794)))
 (let ((?x790 (* c c k m n)))
 (let ((?x1976 (* (- 18) ?x790)))
 (let ((?x782 (* c c c m n)))
 (let ((?x1975 (* (- 6) ?x782)))
 (let ((?x780 (* k k k k n)))
 (let ((?x1974 (* (- 6) ?x780)))
 (let ((?x778 (* c k k k n)))
 (let ((?x1973 (* (- 18) ?x778)))
 (let ((?x774 (* c c k k n)))
 (let ((?x1972 (* (- 18) ?x774)))
 (let ((?x766 (* c c c k n)))
 (let ((?x1906 (* (- 6) ?x766)))
 (let ((?x685 (* k k k m)))
 (let ((?x604 (* (- 6) ?x685)))
 (let ((?x667 (* c k k m)))
 (let ((?x746 (* (- 18) ?x667)))
 (let ((?x649 (* c c k m)))
 (let ((?x748 (* (- 18) ?x649)))
 (let ((?x641 (* c c c m)))
 (let ((?x425 (* (- 6) ?x641)))
 (let ((?x637 (* k k k k)))
 (let ((?x383 (* (- 6) ?x637)))
 (let ((?x619 (* c k k k)))
 (let ((?x745 (* (- 18) ?x619)))
 (let ((?x648 (* 6 (* c c))))
 (let ((?x601 (* c c k k)))
 (let ((?x747 (* (- 18) ?x601)))
 (let ((?x593 (* c c c k)))
 (let ((?x1425 (* (- 6) ?x593)))
 (let ((?x587 (* k k k m m)))
 (let ((?x586 (* c k k m m)))
 (let ((?x1317 (* 3 ?x586)))
 (let ((?x584 (* c c k m m)))
 (let ((?x1314 (* 3 ?x584)))
 (let ((?x580 (* c c c m m)))
 (let ((?x579 (* k k k k m)))
 (let ((?x578 (* c k k k m)))
 (let ((?x1240 (* 3 ?x578)))
 (let ((?x576 (* c c k k m)))
 (let ((?x1313 (* 3 ?x576)))
 (let ((?x572 (* c c c k m)))
 (let ((?x1905 (* 6 (* m m))))
 (let ((?x478 (* k m m)))
 (let ((?x931 (* (- 6) ?x478)))
 (let ((?x476 (* c m m)))
 (let ((?x930 (* (- 6) ?x476)))
 (let ((?x474 (* k k m)))
 (let ((?x1901 (* (- 1) ?x474)))
 (let ((?x472 (* c k m)))
 (let ((?x1900 (* (- 2) ?x472)))
 (let ((?x157 (* c n)))
 (let ((?x1753 (* 432 ?x157)))
 (let ((?x1756 (* 18 (* k k n n))))
 (let ((?x55 (* k n)))
 (let ((?x1755 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x1757 (* (- 24) ?x49)))
 (let ((?x1253 (* 216 k)))
 (let ((?x1250 (* 216 c)))
 (let ((?x2179 (+ ?x1250 ?x1253 ?x1757 ?x1755 ?x1756 ?x1753 ?x1900 ?x1901 ?x930 ?x931 (* (- 18) (* c k)) (* 36 (* c m)) (* 48 (* k m)) ?x1905 ?x572 ?x1313 ?x1240 ?x579 ?x580 ?x1314 ?x1317 ?x587 ?x1425 ?x747 ?x648 ?x745 ?x383 ?x425 ?x748 ?x746 ?x604 ?x1906 ?x1972 ?x1973 ?x1974 ?x1975 ?x1976 ?x1977 ?x1978 ?x1979 ?x1980 ?x903 ?x1981 ?x1982 ?x1606 ?x1608 ?x1983 ?x1984 ?x1985 ?x959 ?x1986 ?x2162 ?x2163 ?x2164 ?x2165 ?x2168 ?x2055 ?x2170 ?x1629 ?x2171 ?x2172 ?x1659 ?x1660 ?x2173 (* (- 6) (* m 6 c)) ?x2175 ?x2176 ?x2177 (* (- 6) (* m 6 k)))))
 (let (($x309 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x271 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x219 (= (+ ?x40 ?x44 ?x221 ?x222 (* 9 ?x157)) 4)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x1226 (and $x135 $x219 $x271 $x309 (not (= ?x2179 0)))))
 (let ((?x73 (+ c k)))
 (let ((?x1770 (* ?x858 ?x73 ?x73)))
 (let ((?x429 (* ?x1008 ?x858 ?x858 ?x858 ?x73)))
 (let ((?x503 (+ ?x898 (* 6 (* ?x858 ?x69 ?x73)) (* (- 1) (* ?x858 ?x69 ?x73 ?x73 ?x73)) (* 6 (* ?x1008 ?x69 ?x73 ?x73 ?x73)) (* 6 (* ?x1008 ?x858 ?x69 ?x73)) ?x429 (* (- 6) (* ?x1008 ?x1008 ?x858 ?x858 ?x73)) (* (- 6) (* ?x1008 ?x858 ?x858 ?x73)) (* (- 6) (* ?x73 ?x73)) ?x1770 (* (- 6) (* ?x1008 ?x73 ?x73)) (* (- 1) (* ?x858 ?x858 ?x69 ?x73)) (* 6 (* ?x69 ?x73 ?x73 ?x73)) (* (- 6) ?x1627) (* (- 6) (* ?x1008 ?x1008 ?x1008 ?x69 ?x69)))))
 (let (($x784 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1212 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x504 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x1212 $x784 (not (= ?x503 0)))))
 (rewrite (= $x504 $x1226)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x856 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1761 (* ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1627 (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1629 (* 6 ?x1627)))
 (let ((?x73 (+ c k)))
 (let ((?x858 (+ 6 m)))
 (let ((?x1713 (* ?x858 ?x858 ?x69 ?x73)))
 (let ((?x511 (* ?x858 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x903 (* (- 1) ?x898)))
 (let ((?x734 (+ ?x903 (* (- 6) (* ?x858 ?x69 ?x73)) ?x511 (* (- 6) (* ?x1008 ?x69 ?x73 ?x73 ?x73)) (* (- 6) (* ?x1008 ?x858 ?x69 ?x73)) (* (- 1) (* ?x1008 ?x858 ?x858 ?x858 ?x73)) (* 6 (* ?x1008 ?x1008 ?x858 ?x858 ?x73)) (* 6 (* ?x1008 ?x858 ?x858 ?x73)) (* 6 (* ?x73 ?x73)) (* (- 1) (* ?x858 ?x73 ?x73)) (* 6 (* ?x1008 ?x73 ?x73)) ?x1713 (* (- 6) (* ?x69 ?x73 ?x73 ?x73)) ?x1629 (* 6 ?x1761))))
 (let (($x784 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1499 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1315 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (and $x135 (= ?x1315 (- 4)) $x1499 $x784 (not (= ?x734 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1521 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1761 (* ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x73 (+ c k)))
 (let ((?x858 (+ 6 m)))
 (let ((?x1770 (* ?x858 ?x73 ?x73)))
 (let ((?x429 (* ?x1008 ?x858 ?x858 ?x858 ?x73)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x503 (+ ?x898 (* 6 (* ?x858 ?x69 ?x73)) (* (- 1) (* ?x858 ?x69 ?x73 ?x73 ?x73)) (* 6 (* ?x1008 ?x69 ?x73 ?x73 ?x73)) (* 6 (* ?x1008 ?x858 ?x69 ?x73)) ?x429 (* (- 6) (* ?x1008 ?x1008 ?x858 ?x858 ?x73)) (* (- 6) (* ?x1008 ?x858 ?x858 ?x73)) (* (- 6) (* ?x73 ?x73)) ?x1770 (* (- 6) (* ?x1008 ?x73 ?x73)) (* (- 1) (* ?x858 ?x858 ?x69 ?x73)) (* 6 (* ?x69 ?x73 ?x73 ?x73)) (* (- 6) (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)) (* (- 6) ?x1761))))
 (let (($x784 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1212 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x222 (* (- 1) ?x49)))
 (let ((?x221 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x504 (and $x135 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x221 ?x222) 4) $x1212 $x784 (not (= ?x503 0)))))
 (let ((?x1627 (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1629 (* 6 ?x1627)))
 (let ((?x1713 (* ?x858 ?x858 ?x69 ?x73)))
 (let ((?x511 (* ?x858 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x903 (* (- 1) ?x898)))
 (let ((?x734 (+ ?x903 (* (- 6) (* ?x858 ?x69 ?x73)) ?x511 (* (- 6) (* ?x1008 ?x69 ?x73 ?x73 ?x73)) (* (- 6) (* ?x1008 ?x858 ?x69 ?x73)) (* (- 1) ?x429) (* 6 (* ?x1008 ?x1008 ?x858 ?x858 ?x73)) (* 6 (* ?x1008 ?x858 ?x858 ?x73)) (* 6 (* ?x73 ?x73)) (* (- 1) ?x1770) (* 6 (* ?x1008 ?x73 ?x73)) ?x1713 (* (- 6) (* ?x69 ?x73 ?x73 ?x73)) ?x1629 (* 6 ?x1761))))
 (let (($x1499 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x1315 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x232 (and $x135 (= ?x1315 (- 4)) $x1499 $x784 (not (= ?x734 0)))))
 (rewrite (= $x232 $x504)))))))))))))))))))))))))))))))
 ))
 (let (($x102 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x69 (+ k m)))
 (let ((?x70 (+ m 6)))
 (let ((?x73 (+ c k)))
 (let ((?x75 (- (* (- 1) ?x69 ?x69 ?x70 ?x71 ?x71 ?x71) (* 6 ?x73 ?x69 ?x70))))
 (let ((?x81 (- (+ ?x75 (* ?x73 ?x73 ?x73 ?x69 ?x70)) (* 6 ?x73 ?x73 ?x73 ?x69 ?x71))))
 (let ((?x83 (- (- ?x81 (* 6 ?x73 ?x69 ?x70 ?x71)) (* ?x73 ?x70 ?x70 ?x70 ?x71))))
 (let ((?x87 (+ ?x83 (* 6 ?x73 ?x70 ?x70 ?x71 ?x71) (* 6 ?x73 ?x70 ?x70 ?x71) (* 6 ?x73 ?x73))))
 (let ((?x92 (+ (- ?x87 (* ?x73 ?x73 ?x70)) (* 6 ?x73 ?x73 ?x71) (* ?x73 ?x69 ?x70 ?x70))))
 (let ((?x97 (+ (- ?x92 (* 6 ?x73 ?x73 ?x73 ?x69)) (* 6 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71) (* 6 ?x69 ?x69 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x873 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ k m)))
 (let ((?x1008 (+ 1 n)))
 (let ((?x1761 (* ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1627 (* ?x1008 ?x1008 ?x1008 ?x1008 ?x69 ?x69)))
 (let ((?x1629 (* 6 ?x1627)))
 (let ((?x73 (+ c k)))
 (let ((?x858 (+ 6 m)))
 (let ((?x1713 (* ?x858 ?x858 ?x69 ?x73)))
 (let ((?x511 (* ?x858 ?x69 ?x73 ?x73 ?x73)))
 (let ((?x898 (* ?x1008 ?x1008 ?x1008 ?x858 ?x69 ?x69)))
 (let ((?x903 (* (- 1) ?x898)))
 (let ((?x734 (+ ?x903 (* (- 6) (* ?x858 ?x69 ?x73)) ?x511 (* (- 6) (* ?x1008 ?x69 ?x73 ?x73 ?x73)) (* (- 6) (* ?x1008 ?x858 ?x69 ?x73)) (* (- 1) (* ?x1008 ?x858 ?x858 ?x858 ?x73)) (* 6 (* ?x1008 ?x1008 ?x858 ?x858 ?x73)) (* 6 (* ?x1008 ?x858 ?x858 ?x73)) (* 6 (* ?x73 ?x73)) (* (- 1) (* ?x858 ?x73 ?x73)) (* 6 (* ?x1008 ?x73 ?x73)) ?x1713 (* (- 6) (* ?x69 ?x73 ?x73 ?x73)) ?x1629 (* 6 ?x1761))))
 (let (($x784 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1499 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x1315 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x135 (= (+ m (* (- 6) n)) 6)))
 (let (($x232 (and $x135 (= ?x1315 (- 4)) $x1499 $x784 (not (= ?x734 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x75 (- (* (- 1) ?x69 ?x69 (+ m 6) ?x71 ?x71 ?x71) (* 6 ?x73 ?x69 (+ m 6)))))
 (let ((?x81 (- (+ ?x75 (* ?x73 ?x73 ?x73 ?x69 (+ m 6))) (* 6 ?x73 ?x73 ?x73 ?x69 ?x71))))
 (let ((?x83 (- (- ?x81 (* 6 ?x73 ?x69 (+ m 6) ?x71)) (* ?x73 (+ m 6) (+ m 6) (+ m 6) ?x71))))
 (let ((?x87 (+ ?x83 (* 6 ?x73 (+ m 6) (+ m 6) ?x71 ?x71) (* 6 ?x73 (+ m 6) (+ m 6) ?x71) (* 6 ?x73 ?x73))))
 (let ((?x92 (+ (- ?x87 (* ?x73 ?x73 (+ m 6))) (* 6 ?x73 ?x73 ?x71) (* ?x73 ?x69 (+ m 6) (+ m 6)))))
 (let ((?x97 (+ (- ?x92 (* 6 ?x73 ?x73 ?x73 ?x69)) (* 6 ?x69 ?x69 ?x71 ?x71 ?x71 ?x71) (* 6 ?x69 ?x69 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x101 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x97 0))))))
 (rewrite (= $x101 $x232)))))))))))))))))))))))))))))))))))
 ))
 (let ((@x103 (asserted $x102)))
 (let ((@x1711 (mp (mp @x103 (quant-intro (proof-bind ?x873) (= $x102 $x856)) $x856) (rewrite (= $x856 $x856)) $x856)))
 (let ((@x411 (mp (mp @x1711 (quant-intro (proof-bind ?x1521) (= $x856 $x1519)) $x1519) (quant-intro (proof-bind ?x2188) (= $x1519 $x2186)) $x2186)))
 (let ((@x1370 (mp~ (mp @x411 (quant-intro (proof-bind ?x1000) (= $x2186 $x995)) $x995) (sk (~ $x995 $x1347)) $x1347)))
 (let ((@x1042 (mp @x1370 (rewrite (= $x1347 $x381)) $x381)))
 (let ((@x357 (and-elim @x1042 $x537)))
 (let ((@x719 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x537) $x1408)) @x357 $x1408)))
 (let (($x490 (>= ?x1255 (- 1))))
 (let ((@x1742 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x537) $x490)) @x357 $x490)))
 (let (($x673 (<= ?x1533 (- 4))))
 (let ((@x359 (and-elim @x1042 $x1534)))
 (let ((@x126 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1534) $x673)) @x359 $x673)))
 (let (($x1371 (>= ?x1533 (- 4))))
 (let ((@x573 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1534) $x1371)) @x359 $x1371)))
 (let (($x493 (<= ?x373 (- 1))))
 (let ((@x361 (and-elim @x1042 $x1258)))
 (let ((@x164 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1258) $x493)) @x361 $x493)))
 (let (($x1410 (>= ?x373 (- 1))))
 (let ((@x1465 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1258) $x1410)) @x361 $x1410)))
 (let (($x114 (<= ?x1480 (- 6))))
 (let ((@x971 (and-elim @x1042 $x1481)))
 (let ((@x1463 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1481) $x114)) @x971 $x114)))
 (let (($x110 (>= ?x1480 (- 6))))
 (let ((@x1668 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1481) $x110)) @x971 $x110)))
 (let (($x149 (not (<= ?x449 0))))
 (let (($x491 (>= ?x449 0)))
 (let ((@x1710 ((_ th-lemma arith) (hypothesis (not $x491)) @x1668 @x1463 @x1465 @x164 @x1465 @x164 @x1742 @x719 @x573 @x126 @x1465 @x164 @x1742 @x719 @x573 @x126 @x1742 @x719 @x1465 @x164 @x1668 @x1463 @x1668 @x1463 @x1465 @x164 @x1465 @x164 @x573 @x126 @x1742 @x719 false)))
 (let ((@x1800 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1449 $x149 (not $x491))) (and-elim @x1042 $x1743) (or $x149 (not $x491)))))
 ((_ th-lemma arith) (unit-resolution @x1800 (lemma @x1710 $x491) $x149) @x1465 @x164 @x1668 @x1463 @x1742 @x719 @x1465 @x164 @x573 @x126 @x1668 @x1463 @x1668 @x1463 @x1465 @x164 @x1742 @x719 @x1465 @x164 @x1465 @x164 @x573 @x126 @x1742 @x719 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        19
 :arith-branch-var          3
 :arith-conflicts           4
 :arith-eq-adapter          5
 :arith-gcd-tests           8
 :arith-gomory-cuts         1
 :arith-grobner             2
 :arith-ineq-splits         3
 :arith-max-min             821
 :arith-nonlinear-bounds    59
 :arith-nonlinear-horner    17
 :arith-num-rows            9
 :arith-patches             6
 :arith-patches_succ        1
 :arith-pivots              16
 :arith-row-summations      39
 :arith-tableau-max-columns 99
 :arith-tableau-max-rows    9
 :conflicts                 4
 :decisions                 9
 :del-clause                16
 :final-checks              11
 :max-memory                3.89
 :memory                    3.32
 :mk-bool-var               30
 :mk-clause                 16
 :num-allocs                1472315
 :num-checks                1
 :propagations              12
 :rlimit-count              16401
 :time                      0.01
 :total-time                0.02)
