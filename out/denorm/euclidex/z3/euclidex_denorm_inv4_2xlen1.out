unsat
((set-logic NIA)
(declare-fun p!5 () Int)
(declare-fun r!1 () Int)
(declare-fun a!4 () Int)
(declare-fun q!3 () Int)
(declare-fun b!2 () Int)
(declare-fun s!0 () Int)
(proof
(let ((?x256 (* q00 a00 r!1)))
 (let ((?x247 (* r00 b00 p!5)))
 (let ((?x139 (* p00 s00 a!4)))
 (let ((?x189 (+ ?x139 ?x247 ?x256 (* (- 1) (* q00 r00 a!4)) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)))))
 (let (($x636 (>= ?x189 0)))
 (let (($x424 (= ?x189 0)))
 (let ((?x642 (* q00 a00 s!0)))
 (let ((?x406 (* r00 b00 q!3)))
 (let ((?x324 (* s00 a00 p!5)))
 (let ((?x323 (* p00 s00 b!2)))
 (let ((?x313 (* p00 b00 r!1)))
 (let ((?x261 (* q00 r00 a!4)))
 (let ((?x617 (* (- 1) ?x256)))
 (let ((?x627 (* (- 1) ?x247)))
 (let ((?x630 (* (- 1) ?x139)))
 (let ((?x525 (+ ?x630 ?x627 ?x617 ?x261 (* (- 1) (* q00 r00 b!2)) (* (- 1) (* p00 b00 s!0)) ?x313 ?x323 ?x324 ?x406 ?x642 (* (- 1) (* s00 a00 q!3)))))
 (let ((?x593 (* (- 1) q!3)))
 (let ((?x576 (+ ?x593 p!5)))
 (let ((?x199 (+ a!4 (* (- 1) b!2))))
 (let ((?x414 (* (- 1) s!0)))
 (let ((?x591 (+ ?x414 r!1)))
 (let ((?x520 (* ?x591 ?x591 ?x591 ?x591 ?x199 ?x199 ?x199 ?x199 ?x576 ?x576 ?x576 ?x576 ?x576 ?x525 s!0 s!0 s!0 s!0 b!2 q!3)))
 (let (($x566 (= ?x520 0)))
 (let ((?x431 (+ (* (- 1) a!4) b!2)))
 (let ((?x322 (* (- 1) r!1)))
 (let ((?x298 (+ s!0 ?x322)))
 (let ((?x571 (* ?x298 ?x298 ?x298 ?x298 ?x431 (+ q!3 (* (- 1) p!5)) (+ ?x630 ?x627 ?x617 ?x261 ?x313 ?x324) r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5)))
 (let (($x594 (= ?x571 0)))
 (let (($x567 (not $x594)))
 (let (($x534 (or $x567 (not $x566))))
 (let ((?x649 (* s00 a00 q!3)))
 (let ((?x304 (* p00 b00 s!0)))
 (let ((?x277 (* q00 r00 b!2)))
 (let ((?x621 (+ ?x277 ?x304 (* (- 1) ?x323) (* (- 1) ?x406) (* (- 1) ?x642) ?x649)))
 (let (($x608 (= ?x621 0)))
 (let ((?x600 (* p!5 b!2)))
 (let ((?x127 (* q00 a00)))
 (let (($x219 (= (+ ?x127 (* (- 1) (* p00 b00)) (* (- 1) (* q!3 a!4)) ?x600) 0)))
 (let ((?x603 (* b!2 r!1)))
 (let ((?x123 (* s00 a00)))
 (let (($x224 (= (+ ?x123 (* (- 1) (* r00 b00)) ?x603 (* (- 1) (* a!4 s!0))) 0)))
 (let ((?x330 (* q!3 r!1)))
 (let ((?x41 (* q00 r00)))
 (let ((?x124 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x715 (and (= (+ ?x37 ?x124 (* (- 1) (* p!5 s!0)) ?x330) 0) $x224 $x219 $x424 $x608 $x534)))
 (let ((?x572 (* s!0 q00 a00)))
 (let ((?x587 (* q!3 r00 b00)))
 (let ((?x654 (* r!1 q00 a00)))
 (let ((?x125 (* (- 1) ?x654)))
 (let ((?x444 (* p!5 s00 a00)))
 (let ((?x287 (* r!1 p00 b00)))
 (let ((?x248 (* p!5 r00 b00)))
 (let ((?x144 (* (- 1) ?x248)))
 (let ((?x639 (* b!2 p00 s00)))
 (let ((?x209 (* a!4 q00 r00)))
 (let ((?x422 (* a!4 p00 s00)))
 (let ((?x122 (* (- 1) ?x422)))
 (let ((?x624 (+ ?x122 ?x209 (* (- 1) (* b!2 q00 r00)) ?x639 ?x144 ?x287 ?x444 ?x125 (* (- 1) (* s!0 p00 b00)) ?x587 (* (- 1) (* q!3 s00 a00)) ?x572)))
 (let ((?x588 (+ p!5 ?x593)))
 (let ((?x306 (+ r!1 ?x414)))
 (let ((?x622 (* ?x306 ?x306 ?x306 ?x306 ?x199 ?x199 ?x199 ?x199 ?x588 ?x588 ?x588 ?x588 ?x588 ?x624 s!0 s!0 s!0 s!0 b!2 q!3)))
 (let ((?x295 (+ ?x322 s!0)))
 (let ((?x367 (* ?x295 ?x295 ?x295 ?x295 ?x431 (+ (* (- 1) p!5) q!3) (+ ?x122 ?x209 ?x144 ?x287 ?x444 ?x125) r!1 r!1 r!1 r!1 a!4 a!4 a!4 a!4 p!5 p!5 p!5 p!5 p!5)))
 (let ((?x573 (* q!3 s00 a00)))
 (let ((?x635 (* s!0 p00 b00)))
 (let ((?x650 (* b!2 q00 r00)))
 (let (($x383 (= (+ ?x650 (* (- 1) ?x639) ?x635 (* (- 1) ?x587) ?x573 (* (- 1) ?x572)) 0)))
 (let (($x653 (= (+ ?x422 (* (- 1) ?x209) ?x248 (* (- 1) ?x287) (* (- 1) ?x444) ?x654) 0)))
 (let (($x415 (= (+ (* a!4 q!3) (* (- 1) ?x127) (* p00 b00) (* (- 1) ?x600)) 0)))
 (let (($x607 (= (+ (* a!4 s!0) (* (- 1) ?x603) (* (- 1) ?x123) (* r00 b00)) 0)))
 (let (($x421 (and (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) ?x330)) 0) $x607 $x415 $x653 $x383 (or (not (= ?x367 0)) (not (= ?x622 0))))))
 (let (($x282 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x291 (* s q00 a00)))
 (let ((?x280 (* q s00 a00)))
 (let ((?x384 (* (- 1) ?x280)))
 (let ((?x246 (* q r00 b00)))
 (let ((?x245 (* s p00 b00)))
 (let ((?x349 (* (- 1) ?x245)))
 (let ((?x216 (* r q00 a00)))
 (let ((?x222 (* (- 1) ?x216)))
 (let ((?x205 (* p s00 a00)))
 (let ((?x202 (* r p00 b00)))
 (let ((?x182 (* p r00 b00)))
 (let ((?x183 (* (- 1) ?x182)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x364 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x191 (* (- 1) ?x63)))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x550 (* ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x251 ?x251 (+ ?x191 ?x66 ?x364 ?x76 ?x183 ?x202 ?x205 ?x222 ?x349 ?x246 ?x384 ?x291) s s s s b q)))
 (let ((?x228 (+ ?x191 ?x66 ?x183 ?x202 ?x205 ?x222)))
 (let ((?x252 (* (- 1) p)))
 (let ((?x266 (+ ?x252 q)))
 (let ((?x299 (* (- 1) a)))
 (let ((?x310 (+ ?x299 b)))
 (let ((?x281 (* (- 1) r)))
 (let ((?x288 (+ ?x281 s)))
 (let ((?x307 (* ?x288 ?x288 ?x288 ?x288 ?x310 ?x266 ?x228 r r r r a a a a p p p p p)))
 (let (($x308 (= (+ ?x72 (* (- 1) ?x76) ?x245 (* (- 1) ?x246) ?x280 (* (- 1) ?x291)) 0)))
 (let (($x240 (= (+ ?x63 (* (- 1) ?x66) ?x182 (* (- 1) ?x202) (* (- 1) ?x205) ?x216) 0)))
 (let ((?x128 (* p00 b00)))
 (let ((?x127 (* q00 a00)))
 (let ((?x171 (* (- 1) ?x127)))
 (let (($x174 (= (+ (* a q) ?x171 ?x128 (* (- 1) (* p b))) 0)))
 (let ((?x141 (* r00 b00)))
 (let ((?x123 (* s00 a00)))
 (let ((?x130 (* (- 1) ?x123)))
 (let ((?x49 (* a s)))
 (let (($x156 (= (+ ?x49 (* (- 1) (* b r)) ?x130 ?x141) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x151 (= (+ ?x33 ?x132 ?x41 (* (- 1) (* q r))) 0)))
 (and $x151 $x156 $x174 $x240 $x308 (or (not (= ?x307 0)) (not (= ?x550 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x167 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x129 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x161 (* ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x251 ?x251 ?x129 s s s s b q)))
 (let ((?x133 (* a00 s00 p)))
 (let ((?x232 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x315 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x232 ?x133 (* (- 1) (* a00 q00 r)))))
 (let ((?x281 (* (- 1) r)))
 (let ((?x427 (+ s ?x281)))
 (let ((?x290 (* ?x427 ?x427 ?x427 ?x427 (+ b (* (- 1) a)) (+ q (* (- 1) p)) ?x315 r r r r a a a a p p p p p)))
 (let (($x440 (or (not (= ?x290 0)) (not (= ?x161 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x373 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x285 (= ?x373 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x206 (* p00 s00 a)))
 (let ((?x110 (* b00 r00 p)))
 (let (($x165 (= (+ ?x110 ?x206 (* (- 1) ?x65) (* (- 1) ?x232) (* (- 1) ?x133) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x223 (* q a)))
 (let (($x111 (= (+ ?x223 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x410 (* r b)))
 (let (($x333 (= (+ ?x410 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x124 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x347 (* r q)))
 (and (= (+ ?x347 (* (- 1) (* s p)) ?x37 ?x124) 0) $x333 $x111 $x165 $x285 $x440)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x392 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x291 (* s q00 a00)))
 (let ((?x280 (* q s00 a00)))
 (let ((?x384 (* (- 1) ?x280)))
 (let ((?x246 (* q r00 b00)))
 (let ((?x245 (* s p00 b00)))
 (let ((?x349 (* (- 1) ?x245)))
 (let ((?x216 (* r q00 a00)))
 (let ((?x222 (* (- 1) ?x216)))
 (let ((?x205 (* p s00 a00)))
 (let ((?x202 (* r p00 b00)))
 (let ((?x182 (* p r00 b00)))
 (let ((?x183 (* (- 1) ?x182)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x364 (* (- 1) ?x72)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x191 (* (- 1) ?x63)))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x550 (* ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x251 ?x251 (+ ?x191 ?x66 ?x364 ?x76 ?x183 ?x202 ?x205 ?x222 ?x349 ?x246 ?x384 ?x291) s s s s b q)))
 (let ((?x228 (+ ?x191 ?x66 ?x183 ?x202 ?x205 ?x222)))
 (let ((?x252 (* (- 1) p)))
 (let ((?x266 (+ ?x252 q)))
 (let ((?x299 (* (- 1) a)))
 (let ((?x310 (+ ?x299 b)))
 (let ((?x281 (* (- 1) r)))
 (let ((?x288 (+ ?x281 s)))
 (let ((?x307 (* ?x288 ?x288 ?x288 ?x288 ?x310 ?x266 ?x228 r r r r a a a a p p p p p)))
 (let (($x308 (= (+ ?x72 (* (- 1) ?x76) ?x245 (* (- 1) ?x246) ?x280 (* (- 1) ?x291)) 0)))
 (let (($x240 (= (+ ?x63 (* (- 1) ?x66) ?x182 (* (- 1) ?x202) (* (- 1) ?x205) ?x216) 0)))
 (let ((?x128 (* p00 b00)))
 (let ((?x127 (* q00 a00)))
 (let ((?x171 (* (- 1) ?x127)))
 (let (($x174 (= (+ (* a q) ?x171 ?x128 (* (- 1) (* p b))) 0)))
 (let ((?x141 (* r00 b00)))
 (let ((?x123 (* s00 a00)))
 (let ((?x130 (* (- 1) ?x123)))
 (let ((?x49 (* a s)))
 (let (($x156 (= (+ ?x49 (* (- 1) (* b r)) ?x130 ?x141) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x151 (= (+ ?x33 ?x132 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x707 (and $x151 $x156 $x174 $x240 $x308 (or (not (= ?x307 0)) (not (= ?x550 0))))))
 (let ((?x129 (+ (* (- 1) (* b00 r00 ?x251)) (* (- 1) (* p00 s00 ?x272)) (* b00 p00 ?x332) (* q00 r00 ?x272) (* a00 s00 ?x251) (* (- 1) (* a00 q00 ?x332)))))
 (let ((?x161 (* ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x251 ?x251 ?x129 s s s s b q)))
 (let ((?x133 (* a00 s00 p)))
 (let ((?x232 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x315 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x232 ?x133 (* (- 1) (* a00 q00 r)))))
 (let ((?x427 (+ s ?x281)))
 (let ((?x290 (* ?x427 ?x427 ?x427 ?x427 (+ b ?x299) (+ q ?x252) ?x315 r r r r a a a a p p p p p)))
 (let (($x440 (or (not (= ?x290 0)) (not (= ?x161 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x373 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x285 (= ?x373 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x206 (* p00 s00 a)))
 (let ((?x110 (* b00 r00 p)))
 (let (($x165 (= (+ ?x110 ?x206 (* (- 1) ?x65) (* (- 1) ?x232) (* (- 1) ?x133) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x223 (* q a)))
 (let (($x111 (= (+ ?x223 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x410 (* r b)))
 (let (($x333 (= (+ ?x410 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x185 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x164 (and $x185 $x333 $x111 $x165 $x285 $x440)))
 (rewrite (= $x164 $x707)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x159 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x129 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x161 (* ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x251 ?x251 ?x129 s s s s b q)))
 (let ((?x133 (* a00 s00 p)))
 (let ((?x232 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x315 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x232 ?x133 (* (- 1) (* a00 q00 r)))))
 (let ((?x281 (* (- 1) r)))
 (let ((?x427 (+ s ?x281)))
 (let ((?x290 (* ?x427 ?x427 ?x427 ?x427 (+ b (* (- 1) a)) (+ q (* (- 1) p)) ?x315 r r r r a a a a p p p p p)))
 (let (($x440 (or (not (= ?x290 0)) (not (= ?x161 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x373 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x285 (= ?x373 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x221 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x196 (* s a)))
 (let (($x210 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x196 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (let ((?x449 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x449 ?x132 ?x41) 0) $x210 $x221 (= ?x315 0) $x285 $x440)))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x143 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x129 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x161 (* ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x251 ?x251 ?x129 s s s s b q)))
 (let ((?x133 (* a00 s00 p)))
 (let ((?x232 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x315 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x232 ?x133 (* (- 1) (* a00 q00 r)))))
 (let ((?x281 (* (- 1) r)))
 (let ((?x427 (+ s ?x281)))
 (let ((?x290 (* ?x427 ?x427 ?x427 ?x427 (+ b (* (- 1) a)) (+ q (* (- 1) p)) ?x315 r r r r a a a a p p p p p)))
 (let (($x440 (or (not (= ?x290 0)) (not (= ?x161 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x373 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x285 (= ?x373 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x206 (* p00 s00 a)))
 (let ((?x110 (* b00 r00 p)))
 (let (($x165 (= (+ ?x110 ?x206 (* (- 1) ?x65) (* (- 1) ?x232) (* (- 1) ?x133) ?x69) 0)))
 (let ((?x57 (* b00 p00)))
 (let ((?x223 (* q a)))
 (let (($x111 (= (+ ?x223 (* (- 1) (* a00 q00)) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x410 (* r b)))
 (let (($x333 (= (+ ?x410 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x124 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x347 (* r q)))
 (let (($x164 (and (= (+ ?x347 (* (- 1) (* s p)) ?x37 ?x124) 0) $x333 $x111 $x165 $x285 $x440)))
 (let (($x221 (= (+ (* (- 1) ?x223) (* a00 q00) (* (- 1) ?x57) (* b p)) 0)))
 (let (($x210 (= (+ (* (- 1) ?x410) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x339 (and (= (+ (* (- 1) ?x347) (* s p) (* (- 1) ?x37) ?x41) 0) $x210 $x221 (= ?x315 0) $x285 $x440)))
 (rewrite (= $x339 $x164))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x107 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x100 (- s r)))
 (let ((?x31 (- 1)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x102 (* ?x70 a p p p (- q p) r r ?x100 ?x31 a a a (- b a) p p r r ?x100 ?x100 ?x100)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x93 (+ (- (* ?x31 b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let ((?x96 (* (- ?x93 (* a00 q00 ?x89)) ?x86 ?x84 ?x84 ?x84 q ?x89 ?x89 s ?x31 ?x86 ?x86 ?x86 b ?x84 ?x84 ?x89 ?x89 s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* ?x31 a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let ((?x41 (* q00 r00)))
 (let (($x44 (= (+ (- (+ (* ?x31 q r) (* p s)) (* p00 s00)) ?x41) 0)))
 (and $x44 (= (+ (- (* ?x31 b r) (* a00 s00)) ?x49 ?x51) 0) (= ?x60 0) (= ?x70 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= ?x96 0)) (not (= ?x102 0)))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x154 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x129 (+ (* (- 1) (* b00 r00 (+ p (* (- 1) q)))) (* (- 1) (* p00 s00 (+ a (* (- 1) b)))) (* b00 p00 (+ r (* (- 1) s))) (* q00 r00 (+ a (* (- 1) b))) (* a00 s00 (+ p (* (- 1) q))) (* (- 1) (* a00 q00 (+ r (* (- 1) s)))))))
 (let ((?x249 (* (- 1) q)))
 (let ((?x251 (+ p ?x249)))
 (let ((?x272 (+ a (* (- 1) b))))
 (let ((?x332 (+ r (* (- 1) s))))
 (let ((?x161 (* ?x332 ?x332 ?x332 ?x332 ?x272 ?x272 ?x272 ?x272 ?x251 ?x251 ?x251 ?x251 ?x251 ?x129 s s s s b q)))
 (let ((?x133 (* a00 s00 p)))
 (let ((?x232 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x315 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x232 ?x133 (* (- 1) (* a00 q00 r)))))
 (let ((?x281 (* (- 1) r)))
 (let ((?x427 (+ s ?x281)))
 (let ((?x290 (* ?x427 ?x427 ?x427 ?x427 (+ b (* (- 1) a)) (+ q (* (- 1) p)) ?x315 r r r r a a a a p p p p p)))
 (let (($x440 (or (not (= ?x290 0)) (not (= ?x161 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x373 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x285 (= ?x373 0)))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x221 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x196 (* s a)))
 (let (($x210 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x196 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x132 (* (- 1) ?x37)))
 (let ((?x449 (* s p)))
 (let (($x339 (and (= (+ (* (- 1) (* r q)) ?x449 ?x132 ?x41) 0) $x210 $x221 (= ?x315 0) $x285 $x440)))
 (let ((?x100 (- s r)))
 (let ((?x31 (- 1)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* ?x31 b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x70 (- ?x68 ?x69)))
 (let ((?x102 (* ?x70 a p p p (- q p) r r ?x100 ?x31 a a a (- b a) p p r r ?x100 ?x100 ?x100)))
 (let ((?x89 (- r s)))
 (let ((?x84 (- p q)))
 (let ((?x86 (- a b)))
 (let ((?x93 (+ (- (* ?x31 b00 ?x84 r00) (* ?x86 p00 s00)) (* b00 p00 ?x89) (* ?x86 q00 r00) (* a00 ?x84 s00))))
 (let ((?x96 (* (- ?x93 (* a00 q00 ?x89)) ?x86 ?x84 ?x84 ?x84 q ?x89 ?x89 s ?x31 ?x86 ?x86 ?x86 b ?x84 ?x84 ?x89 ?x89 s s s)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let (($x53 (= (+ (- (* ?x31 b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x106 (and (= (+ (- (+ (* ?x31 q r) (* p s)) ?x37) ?x41) 0) $x53 (= (+ (- (+ (* ?x31 a q) ?x55) (* b00 p00)) ?x59) 0) (= ?x70 0) (= (- ?x80 ?x81) 0) (or (not (= ?x96 0)) (not (= ?x102 0))))))
 (rewrite (= $x106 $x339))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x108 (asserted $x107)))
 (let ((@x318 (mp (mp @x108 (quant-intro (proof-bind ?x154) (= $x107 $x159)) $x159) (rewrite (= $x159 $x159)) $x159)))
 (let ((@x325 (mp (mp @x318 (quant-intro (proof-bind ?x143) (= $x159 $x167)) $x167) (quant-intro (proof-bind ?x392) (= $x167 $x282)) $x282)))
 (let ((@x531 (mp (mp~ @x325 (sk (~ $x282 $x421)) $x421) (rewrite (= $x421 $x715)) $x715)))
 (let ((@x445 (and-elim @x531 $x424)))
 (let ((@x625 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x424) $x636)) @x445 $x636)))
 (let (($x641 (<= ?x189 0)))
 (let ((@x140 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x424) $x641)) @x445 $x641)))
 (let (($x428 (not (<= ?x571 0))))
 (let (($x267 (>= ?x520 0)))
 (let (($x283 (>= ?x621 0)))
 (let ((@x447 (and-elim @x531 $x608)))
 (let ((@x184 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x608) $x283)) @x447 $x283)))
 (let (($x344 (<= ?x621 0)))
 (let ((@x225 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x608) $x344)) @x447 $x344)))
 (let ((@x561 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x267)) @x140 @x225 @x625 @x184 false) $x267)))
 (let (($x250 (<= ?x520 0)))
 (let ((@x613 (lemma ((_ th-lemma arith farkas 1 1 1 1 1) (hypothesis (not $x250)) @x140 @x225 @x625 @x184 false) $x250)))
 (let ((@x599 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x566 (not $x250) (not $x267))) @x613 @x561 $x566)))
 (let (($x620 (>= ?x571 0)))
 (let ((@x319 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x594 $x428 (not $x620))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x620)) @x140 @x625 false) $x620) (unit-resolution (and-elim @x531 $x534) @x599 $x567) $x428)))
 ((_ th-lemma arith farkas 1 1 1) @x319 @x140 @x625 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 14
 :arith-assert-diseq        3
 :arith-assert-lower        23
 :arith-assert-upper        22
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           10
 :arith-grobner             4
 :arith-max-min             360
 :arith-nonlinear-horner    44
 :arith-num-rows            13
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      3
 :arith-tableau-max-columns 52
 :arith-tableau-max-rows    13
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                3.67
 :memory                    3.19
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                1326775
 :num-checks                1
 :propagations              19
 :rlimit-count              10815
 :time                      0.01
 :total-time                0.02)
