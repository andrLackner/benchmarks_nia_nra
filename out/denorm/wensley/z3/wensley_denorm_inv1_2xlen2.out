unsat
((set-logic NRA)
(declare-fun y!5 () Real)
(declare-fun a!8 () Real)
(declare-fun d!6 () Real)
(declare-fun b!7 () Real)
(proof
(let ((?x1508 (* b00 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x1298 (* b00 y00 b!7 d!6 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5)))
 (let ((?x1110 (* b00 b!7 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x902 (* d00 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x859 (* a00 d00 b!7 d!6 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5)))
 (let ((?x851 (* b00 b!7 b!7 d!6 d!6 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x661 (* a00 d00 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x522 (* b00 y00 b!7 b!7 d!6 d!6 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x484 (* a00 d00 b!7 b!7 d!6 d!6 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x477 (* d00 b!7 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x476 (* a00 d00 b!7 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x432 (* b00 b!7 d!6 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x244 (* d00 b!7 d!6 a!8 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5)))
 (let ((?x172 (* b00 y00 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x150 (* b00 y00 b!7 d!6 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5 y!5)))
 (let ((?x86 (* d00 b!7 b!7 d!6 d!6 a!8 a!8 a!8 a!8 a!8 y!5 y!5 y!5 y!5)))
 (let ((?x680 (+ (* (/ 1.0 16.0) ?x86) (* (/ 1.0 16.0) ?x150) (* (- (/ 1.0 4.0)) ?x172) (* (- (/ 1.0 4.0)) ?x244) (* (/ 1.0 2.0) ?x432) (* (- (/ 1.0 32.0)) ?x476) (* (/ 1.0 32.0) ?x477) (* (- (/ 1.0 16.0)) ?x484) (* (/ 1.0 8.0) ?x522) (* (/ 1.0 8.0) ?x661) (* (- (/ 1.0 8.0)) ?x851) (* (/ 1.0 4.0) ?x859) (* (- (/ 1.0 8.0)) ?x902) (* (- (/ 1.0 16.0)) ?x1110) (* (- (/ 1.0 2.0)) ?x1298) (* (/ 1.0 4.0) ?x1508))))
 (let (($x1095 (>= ?x680 0.0)))
 (let (($x641 (not $x1095)))
 (let (($x98 (= 0.0 ?x680)))
 (let (($x640 (not $x98)))
 (let ((@x1146 (symm (commutativity (= $x98 (= ?x680 0.0))) (= (= ?x680 0.0) $x98))))
 (let (($x684 (= ?x680 0.0)))
 (let (($x613 (not $x684)))
 (let ((?x1425 (* b00 d!6)))
 (let ((?x1135 (* d00 b!7)))
 (let ((?x1107 (* (- 1.0) ?x1135)))
 (let ((?x1063 (* (- 1.0) (* d00 a!8))))
 (let ((?x103 (* 2.0 (* b00 y!5))))
 (let ((?x88 (* (- 2.0) (* b00 y00))))
 (let ((?x30 (* a00 d00)))
 (let ((?x95 (* (- (/ 1.0 4.0)) (* d!6 d!6 a!8 a!8 a!8))))
 (let ((?x405 (+ ?x95 (* (- (/ 3.0 4.0)) (* b!7 d!6 d!6 a!8 a!8)) (* (- 1.0) (* d!6 a!8 a!8 a!8 y!5)) (* (/ 1.0 2.0) (* b!7 b!7 d!6 a!8 y!5 y!5 y!5)) (* (- 1.0) (* b!7 b!7 b!7 d!6 y!5)) (* (- 3.0) (* b!7 a!8 a!8 y!5 y!5)) (* (/ 1.0 4.0) (* b!7 b!7 b!7 d!6 y!5 y!5 y!5)) (* (/ 3.0 4.0) (* b!7 b!7 d!6 d!6 a!8 y!5 y!5)) (* (/ 3.0 8.0) (* b!7 d!6 d!6 a!8 a!8 y!5 y!5)) (* (- 1.0) (* a!8 a!8 a!8 y!5 y!5)) (* (/ 1.0 4.0) (* b!7 d!6 a!8 a!8 y!5 y!5 y!5)) (* (/ 1.0 32.0) (* b!7 d!6 d!6 d!6 d!6 a!8 a!8)) (* (- 3.0) (* b!7 b!7 a!8 y!5 y!5)) (* (/ 3.0 8.0) (* b!7 b!7 b!7 d!6 d!6 y!5 y!5)) (* (- 3.0) (* b!7 b!7 d!6 a!8 y!5)) (* (- (/ 1.0 4.0)) (* b!7 b!7 b!7 d!6 d!6)) (* (- 3.0) (* b!7 d!6 a!8 a!8 y!5)) (* (/ 1.0 16.0) (* b!7 b!7 d!6 d!6 d!6 d!6 a!8)) (* (- (/ 3.0 4.0)) (* b!7 b!7 d!6 d!6 a!8)) (* (/ 3.0 16.0) (* b!7 b!7 b!7 d!6 d!6 d!6 y!5)) (* (/ 3.0 8.0) (* b!7 b!7 d!6 d!6 d!6 a!8 y!5)) (* (/ 3.0 16.0) (* b!7 d!6 d!6 d!6 a!8 a!8 y!5)) (* (/ 1.0 32.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6)) (* (- 1.0) (* b!7 b!7 b!7 y!5 y!5)))))
 (let ((?x1539 (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 a!8 a!8 a!8))))
 (let ((?x358 (+ (* (/ 1.0 8.0) (* b!7 d!6 d!6 a!8 a!8)) (* (/ 1.0 4.0) (* b!7 b!7 b!7 d!6 y!5)) (* (/ 1.0 8.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 y!5)) (* (/ 3.0 32.0) (* b!7 d!6 d!6 d!6 d!6 d!6 a!8 a!8)) (* (/ 1.0 2.0) (* b!7 b!7 d!6 a!8 y!5)) (* (/ 1.0 8.0) (* b!7 b!7 b!7 d!6 d!6)) (* (/ 1.0 4.0) (* b!7 d!6 a!8 a!8 y!5)) (* (/ 3.0 8.0) (* b!7 d!6 d!6 d!6 d!6 a!8 a!8 y!5)) (* (/ 1.0 4.0) (* b!7 b!7 d!6 d!6 a!8)) (* (/ 1.0 8.0) (* d!6 d!6 d!6 d!6 a!8 a!8 a!8 y!5)) (* (/ 1.0 32.0) (* b!7 b!7 b!7 d!6 d!6 d!6 d!6 d!6)) (* (/ 1.0 8.0) (* d!6 d!6 d!6 a!8 a!8 a!8 y!5 y!5)) (* (/ 1.0 8.0) (* b!7 b!7 b!7 d!6 d!6 d!6 y!5 y!5)) (* (/ 3.0 32.0) (* b!7 b!7 d!6 d!6 d!6 d!6 d!6 a!8)) ?x1539 (* (/ 3.0 8.0) (* b!7 b!7 d!6 d!6 d!6 a!8 y!5 y!5)) (* (/ 3.0 8.0) (* b!7 b!7 d!6 d!6 d!6 d!6 a!8 y!5)) (* (/ 3.0 8.0) (* b!7 d!6 d!6 d!6 a!8 a!8 y!5 y!5)))))
 (let (($x1108 (= (* ?x358 ?x405 (+ ?x30 ?x88 ?x103 ?x1063 ?x1107 ?x1425)) 0.0)))
 (let ((?x143 (+ ?x30 ?x1107 ?x88 ?x103 ?x1063 ?x1425)))
 (let (($x1112 (= ?x143 0.0)))
 (let ((?x1014 (* d!6 a!8)))
 (let ((?x1111 (+ ?x1014 (* (- 2.0) (* b!7 y!5)) (* (- 1.0) (* a00 d!6)) (* 2.0 (* y00 b!7)))))
 (let (($x1278 (= ?x1111 0.0)))
 (let (($x121 (not $x1108)))
 (let (($x140 (or $x613 $x121)))
 (let ((?x82 (+ ?x1135 (* (- 1.0) ?x1425))))
 (let (($x871 (= ?x82 0.0)))
 (let ((?x1141 (+ ?x30 ?x88 ?x103 ?x1063)))
 (let (($x1031 (= ?x1141 0.0)))
 (let (($x738 (and $x1031 $x871 $x1278 $x140)))
 (let ((?x352 (* d!6 b00)))
 (let ((?x1397 (* 2.0 (* y!5 b00))))
 (let ((?x222 (* (- 1.0) (* a!8 d00))))
 (let ((?x1321 (+ (* (/ 1.0 4.0) (* y!5 y!5 y!5 d!6 b!7 a!8 a!8)) (* (- 1.0) (* y!5 y!5 a!8 a!8 a!8)) (* (- 3.0) (* y!5 d!6 b!7 a!8 a!8)) (* (/ 1.0 4.0) (* y!5 y!5 y!5 d!6 b!7 b!7 b!7)) (* (/ 1.0 2.0) (* y!5 y!5 y!5 d!6 b!7 b!7 a!8)) (* (/ 3.0 8.0) (* y!5 y!5 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 4.0) (* y!5 y!5 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 8.0) (* y!5 y!5 d!6 d!6 b!7 a!8 a!8)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 8.0) (* y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 16.0) (* y!5 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 16.0) (* d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 b!7 a!8 a!8)) (* (- 1.0) (* y!5 y!5 b!7 b!7 b!7)) (* (- 3.0) (* y!5 y!5 b!7 b!7 a!8)) (* (- 3.0) (* y!5 y!5 b!7 a!8 a!8)) (* (- 1.0) (* y!5 d!6 b!7 b!7 b!7)) (* (- 3.0) (* y!5 d!6 b!7 b!7 a!8)) (* (- 1.0) (* y!5 d!6 a!8 a!8 a!8)) (* (- (/ 1.0 4.0)) (* d!6 d!6 b!7 b!7 b!7)) (* (- (/ 3.0 4.0)) (* d!6 d!6 b!7 b!7 a!8)) (* (- (/ 3.0 4.0)) (* d!6 d!6 b!7 a!8 a!8)) ?x95)))
 (let ((?x1540 (+ (* (/ 1.0 4.0) (* y!5 d!6 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 y!5 d!6 d!6 d!6 a!8 a!8 a!8)) (* (/ 1.0 4.0) (* y!5 d!6 b!7 b!7 b!7)) (* (/ 1.0 2.0) (* y!5 d!6 b!7 b!7 a!8)) (* (/ 1.0 8.0) (* d!6 d!6 b!7 b!7 b!7)) (* (/ 1.0 4.0) (* d!6 d!6 b!7 b!7 a!8)) (* (/ 1.0 8.0) (* d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 8.0) (* y!5 y!5 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 8.0) (* y!5 y!5 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 8.0) (* y!5 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 8.0) (* y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8)) (* (/ 1.0 8.0) (* y!5 d!6 d!6 d!6 d!6 a!8 a!8 a!8)) (* (/ 1.0 32.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 b!7)) (* (/ 3.0 32.0) (* d!6 d!6 d!6 d!6 d!6 b!7 b!7 a!8)) (* (/ 3.0 32.0) (* d!6 d!6 d!6 d!6 d!6 b!7 a!8 a!8)) ?x1539)))
 (let ((?x916 (* ?x1540 ?x1321 (+ ?x30 ?x222 ?x88 ?x1397 (* (- 1.0) (* b!7 d00)) ?x352))))
 (let ((?x375 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 b00)))
 (let ((?x374 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 b00 y00)))
 (let ((?x829 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 a!8 d00)))
 (let ((?x827 (* y!5 y!5 y!5 y!5 d!6 d!6 d!6 a!8 a!8 a!8 a!8 a!8 a!8 a00 d00)))
 (let ((?x719 (* y!5 y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8 a!8 a!8 b00)))
 (let ((?x795 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8 a!8 a!8 b00 y00)))
 (let ((?x791 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8 a!8 a!8 a!8 d00)))
 (let ((?x148 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 d!6 d!6 b!7 a!8 a!8 a!8 a!8 a!8 a00 d00)))
 (let ((?x955 (* y!5 y!5 y!5 y!5 d!6 b!7 a!8 a!8 a!8 a!8 a!8 b00)))
 (let ((?x1051 (* y!5 y!5 y!5 d!6 b!7 a!8 a!8 a!8 a!8 a!8 b00 y00)))
 (let ((?x1033 (* y!5 y!5 y!5 d!6 b!7 a!8 a!8 a!8 a!8 a!8 a!8 d00)))
 (let ((?x1133 (* y!5 y!5 y!5 d!6 b!7 a!8 a!8 a!8 a!8 a!8 a00 d00)))
 (let ((?x1035 (* y!5 y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a!8 b00)))
 (let ((?x1477 (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a!8 b00 y00)))
 (let ((?x302 (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a!8 a!8 d00)))
 (let ((?x1246 (* y!5 y!5 y!5 y!5 d!6 d!6 b!7 b!7 a!8 a!8 a!8 a!8 a00 d00)))
 (let ((?x365 (+ (* (/ 1.0 16.0) ?x1246) (* (- (/ 1.0 16.0)) ?x302) (* (- (/ 1.0 8.0)) ?x1477) (* (/ 1.0 8.0) ?x1035) (* (- (/ 1.0 4.0)) ?x1133) (* (/ 1.0 4.0) ?x1033) (* (/ 1.0 2.0) ?x1051) (* (- (/ 1.0 2.0)) ?x955) (* (/ 1.0 32.0) ?x148) (* (- (/ 1.0 32.0)) ?x791) (* (- (/ 1.0 16.0)) ?x795) (* (/ 1.0 16.0) ?x719) (* (- (/ 1.0 8.0)) ?x827) (* (/ 1.0 8.0) ?x829) (* (/ 1.0 4.0) ?x374) (* (- (/ 1.0 4.0)) ?x375))))
 (let ((?x1254 (+ ?x1014 (* (- 2.0) (* y!5 b!7)) (* 2.0 (* b!7 y00)) (* (- 1.0) (* d!6 a00)))))
 (let (($x1028 (and (= (+ ?x30 ?x222 ?x88 ?x1397) 0.0) (= (+ (* b!7 d00) (* (- 1.0) ?x352)) 0.0) (= ?x1254 0.0) (or (not (= ?x365 0.0)) (not (= ?x916 0.0))))))
 (let (($x1516 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x134 (* d b00)))
 (let ((?x128 (* b d00)))
 (let ((?x129 (* (- 1.0) ?x128)))
 (let ((?x94 (* 2.0 (* y b00))))
 (let ((?x88 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x109 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let ((?x183 (* (- 1.0) (* y y a a a))))
 (let ((?x171 (* (/ 1.0 4.0) (* y y y d b a a))))
 (let ((?x1056 (+ ?x171 ?x183 (* (- 3.0) (* y d b a a)) (* (/ 1.0 4.0) (* y y y d b b b)) (* (/ 1.0 2.0) (* y y y d b b a)) (* (/ 3.0 8.0) (* y y d d b b b)) (* (/ 3.0 4.0) (* y y d d b b a)) (* (/ 3.0 8.0) (* y y d d b a a)) (* (/ 3.0 16.0) (* y d d d b b b)) (* (/ 3.0 8.0) (* y d d d b b a)) (* (/ 3.0 16.0) (* y d d d b a a)) (* (/ 1.0 32.0) (* d d d d b b b)) (* (/ 1.0 16.0) (* d d d d b b a)) (* (/ 1.0 32.0) (* d d d d b a a)) (* (- 1.0) (* y y b b b)) (* (- 3.0) (* y y b b a)) (* (- 3.0) (* y y b a a)) (* (- 1.0) (* y d b b b)) (* (- 3.0) (* y d b b a)) (* (- 1.0) (* y d a a a)) (* (- (/ 1.0 4.0)) (* d d b b b)) (* (- (/ 3.0 4.0)) (* d d b b a)) (* (- (/ 3.0 4.0)) (* d d b a a)) (* (- (/ 1.0 4.0)) (* d d a a a)))))
 (let ((?x223 (* (/ 1.0 8.0) (* y y d d d a a a))))
 (let ((?x204 (* y d b a a)))
 (let ((?x207 (* (/ 1.0 4.0) ?x204)))
 (let ((?x1474 (+ ?x207 ?x223 (* (/ 1.0 4.0) (* y d b b b)) (* (/ 1.0 2.0) (* y d b b a)) (* (/ 1.0 8.0) (* d d b b b)) (* (/ 1.0 4.0) (* d d b b a)) (* (/ 1.0 8.0) (* d d b a a)) (* (/ 1.0 8.0) (* y y d d d b b b)) (* (/ 3.0 8.0) (* y y d d d b b a)) (* (/ 3.0 8.0) (* y y d d d b a a)) (* (/ 1.0 8.0) (* y d d d d b b b)) (* (/ 3.0 8.0) (* y d d d d b b a)) (* (/ 3.0 8.0) (* y d d d d b a a)) (* (/ 1.0 8.0) (* y d d d d a a a)) (* (/ 1.0 32.0) (* d d d d d b b b)) (* (/ 3.0 32.0) (* d d d d d b b a)) (* (/ 3.0 32.0) (* d d d d d b a a)) (* (/ 1.0 32.0) (* d d d d d a a a)))))
 (let ((?x396 (* y y y y y d d d a a a a a a b00)))
 (let ((?x386 (* y y y y d d d a a a a a a b00 y00)))
 (let ((?x376 (* y y y y d d d a a a a a a a d00)))
 (let ((?x366 (* y y y y d d d a a a a a a a00 d00)))
 (let ((?x356 (* y y y y y y d d d d b a a a a a b00)))
 (let ((?x346 (* y y y y y d d d d b a a a a a b00 y00)))
 (let ((?x336 (* y y y y y d d d d b a a a a a a d00)))
 (let ((?x325 (* y y y y y d d d d b a a a a a a00 d00)))
 (let ((?x317 (* (- (/ 1.0 2.0)) (* y y y y d b a a a a a b00))))
 (let ((?x306 (* (/ 1.0 2.0) (* y y y d b a a a a a b00 y00))))
 (let ((?x296 (* (/ 1.0 4.0) (* y y y d b a a a a a a d00))))
 (let ((?x286 (* (- (/ 1.0 4.0)) (* y y y d b a a a a a a00 d00))))
 (let ((?x272 (* y y y y y d d b b a a a a b00)))
 (let ((?x262 (* y y y y d d b b a a a a b00 y00)))
 (let ((?x251 (* y y y y d d b b a a a a a d00)))
 (let ((?x240 (* y y y y d d b b a a a a a00 d00)))
 (let ((?x401 (+ (* (/ 1.0 16.0) ?x240) (* (- (/ 1.0 16.0)) ?x251) (* (- (/ 1.0 8.0)) ?x262) (* (/ 1.0 8.0) ?x272) ?x286 ?x296 ?x306 ?x317 (* (/ 1.0 32.0) ?x325) (* (- (/ 1.0 32.0)) ?x336) (* (- (/ 1.0 16.0)) ?x346) (* (/ 1.0 16.0) ?x356) (* (- (/ 1.0 8.0)) ?x366) (* (/ 1.0 8.0) ?x376) (* (/ 1.0 4.0) ?x386) (* (- (/ 1.0 4.0)) ?x396))))
 (let (($x151 (not (= ?x401 0.0))))
 (let (($x1506 (or $x151 (not (= (* ?x1474 ?x1056 (+ ?x30 ?x109 ?x88 ?x94 ?x129 ?x134)) 0.0)))))
 (let ((?x155 (* (- 2.0) (* y b))))
 (let ((?x133 (* d a)))
 (let (($x190 (= (+ ?x133 ?x155 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x126 (= (+ ?x128 (* (- 1.0) ?x134)) 0.0)))
 (let (($x120 (= (+ ?x30 ?x109 ?x88 ?x94) 0.0)))
 (and $x120 $x126 $x190 $x1506)))))))))))))))))))))))))))))))))))))))) :qid k!33))
 ))
 (let (($x538 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x30 (* a00 d00)))
 (let ((?x88 (* (- 2.0) (* b00 y00))))
 (let ((?x988 (+ ?x88 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x146 (* (/ 1.0 2.0) d)))
 (let ((?x1144 (+ y ?x146)))
 (let ((?x65 (+ a b)))
 (let ((?x117 (+ (* (/ 1.0 4.0) (* ?x65 ?x65 ?x1144 ?x1144 ?x1144 d b)) (* (- 1.0) (* ?x65 ?x65 ?x65 ?x1144 ?x1144)))))
 (let ((?x1004 (+ (* (/ 1.0 4.0) (* ?x65 ?x65 ?x1144 d b)) (* (/ 1.0 8.0) (* ?x65 ?x65 ?x65 ?x1144 ?x1144 d d d)))))
 (let ((?x170 (* 2.0 (* b00 y))))
 (let ((?x1086 (+ ?x88 ?x30 ?x170 (* (- 1.0) (* d00 a)))))
 (let ((?x183 (* (- 1.0) (* y y a a a))))
 (let ((?x171 (* (/ 1.0 4.0) (* y y y d b a a))))
 (let ((?x223 (* (/ 1.0 8.0) (* y y d d d a a a))))
 (let ((?x204 (* y d b a a)))
 (let ((?x207 (* (/ 1.0 4.0) ?x204)))
 (let (($x876 (or (not (= (* (+ ?x207 ?x223) (+ ?x171 ?x183) ?x1086) 0.0)) (not (= (* ?x1004 ?x117 ?x988) 0.0)))))
 (let ((?x155 (* (- 2.0) (* y b))))
 (let ((?x133 (* d a)))
 (let (($x1153 (= (+ ?x133 ?x155 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (and (= ?x1086 0.0) (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x1153 $x876)))))))))))))))))))) :qid k!33))
 ))
 (let ((?x1518 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x134 (* d b00)))
 (let ((?x128 (* b d00)))
 (let ((?x129 (* (- 1.0) ?x128)))
 (let ((?x94 (* 2.0 (* y b00))))
 (let ((?x88 (* (- 2.0) (* b00 y00))))
 (let ((?x33 (* a d00)))
 (let ((?x109 (* (- 1.0) ?x33)))
 (let ((?x30 (* a00 d00)))
 (let ((?x183 (* (- 1.0) (* y y a a a))))
 (let ((?x171 (* (/ 1.0 4.0) (* y y y d b a a))))
 (let ((?x1056 (+ ?x171 ?x183 (* (- 3.0) (* y d b a a)) (* (/ 1.0 4.0) (* y y y d b b b)) (* (/ 1.0 2.0) (* y y y d b b a)) (* (/ 3.0 8.0) (* y y d d b b b)) (* (/ 3.0 4.0) (* y y d d b b a)) (* (/ 3.0 8.0) (* y y d d b a a)) (* (/ 3.0 16.0) (* y d d d b b b)) (* (/ 3.0 8.0) (* y d d d b b a)) (* (/ 3.0 16.0) (* y d d d b a a)) (* (/ 1.0 32.0) (* d d d d b b b)) (* (/ 1.0 16.0) (* d d d d b b a)) (* (/ 1.0 32.0) (* d d d d b a a)) (* (- 1.0) (* y y b b b)) (* (- 3.0) (* y y b b a)) (* (- 3.0) (* y y b a a)) (* (- 1.0) (* y d b b b)) (* (- 3.0) (* y d b b a)) (* (- 1.0) (* y d a a a)) (* (- (/ 1.0 4.0)) (* d d b b b)) (* (- (/ 3.0 4.0)) (* d d b b a)) (* (- (/ 3.0 4.0)) (* d d b a a)) (* (- (/ 1.0 4.0)) (* d d a a a)))))
 (let ((?x223 (* (/ 1.0 8.0) (* y y d d d a a a))))
 (let ((?x204 (* y d b a a)))
 (let ((?x207 (* (/ 1.0 4.0) ?x204)))
 (let ((?x1474 (+ ?x207 ?x223 (* (/ 1.0 4.0) (* y d b b b)) (* (/ 1.0 2.0) (* y d b b a)) (* (/ 1.0 8.0) (* d d b b b)) (* (/ 1.0 4.0) (* d d b b a)) (* (/ 1.0 8.0) (* d d b a a)) (* (/ 1.0 8.0) (* y y d d d b b b)) (* (/ 3.0 8.0) (* y y d d d b b a)) (* (/ 3.0 8.0) (* y y d d d b a a)) (* (/ 1.0 8.0) (* y d d d d b b b)) (* (/ 3.0 8.0) (* y d d d d b b a)) (* (/ 3.0 8.0) (* y d d d d b a a)) (* (/ 1.0 8.0) (* y d d d d a a a)) (* (/ 1.0 32.0) (* d d d d d b b b)) (* (/ 3.0 32.0) (* d d d d d b b a)) (* (/ 3.0 32.0) (* d d d d d b a a)) (* (/ 1.0 32.0) (* d d d d d a a a)))))
 (let ((?x396 (* y y y y y d d d a a a a a a b00)))
 (let ((?x386 (* y y y y d d d a a a a a a b00 y00)))
 (let ((?x376 (* y y y y d d d a a a a a a a d00)))
 (let ((?x366 (* y y y y d d d a a a a a a a00 d00)))
 (let ((?x356 (* y y y y y y d d d d b a a a a a b00)))
 (let ((?x346 (* y y y y y d d d d b a a a a a b00 y00)))
 (let ((?x336 (* y y y y y d d d d b a a a a a a d00)))
 (let ((?x325 (* y y y y y d d d d b a a a a a a00 d00)))
 (let ((?x317 (* (- (/ 1.0 2.0)) (* y y y y d b a a a a a b00))))
 (let ((?x306 (* (/ 1.0 2.0) (* y y y d b a a a a a b00 y00))))
 (let ((?x296 (* (/ 1.0 4.0) (* y y y d b a a a a a a d00))))
 (let ((?x286 (* (- (/ 1.0 4.0)) (* y y y d b a a a a a a00 d00))))
 (let ((?x272 (* y y y y y d d b b a a a a b00)))
 (let ((?x262 (* y y y y d d b b a a a a b00 y00)))
 (let ((?x251 (* y y y y d d b b a a a a a d00)))
 (let ((?x240 (* y y y y d d b b a a a a a00 d00)))
 (let ((?x401 (+ (* (/ 1.0 16.0) ?x240) (* (- (/ 1.0 16.0)) ?x251) (* (- (/ 1.0 8.0)) ?x262) (* (/ 1.0 8.0) ?x272) ?x286 ?x296 ?x306 ?x317 (* (/ 1.0 32.0) ?x325) (* (- (/ 1.0 32.0)) ?x336) (* (- (/ 1.0 16.0)) ?x346) (* (/ 1.0 16.0) ?x356) (* (- (/ 1.0 8.0)) ?x366) (* (/ 1.0 8.0) ?x376) (* (/ 1.0 4.0) ?x386) (* (- (/ 1.0 4.0)) ?x396))))
 (let (($x151 (not (= ?x401 0.0))))
 (let (($x1506 (or $x151 (not (= (* ?x1474 ?x1056 (+ ?x30 ?x109 ?x88 ?x94 ?x129 ?x134)) 0.0)))))
 (let ((?x155 (* (- 2.0) (* y b))))
 (let ((?x133 (* d a)))
 (let (($x190 (= (+ ?x133 ?x155 (* 2.0 (* b y00)) (* (- 1.0) (* d a00))) 0.0)))
 (let (($x126 (= (+ ?x128 (* (- 1.0) ?x134)) 0.0)))
 (let (($x120 (= (+ ?x30 ?x109 ?x88 ?x94) 0.0)))
 (let (($x1598 (and $x120 $x126 $x190 $x1506)))
 (let ((?x988 (+ ?x88 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x146 (* (/ 1.0 2.0) d)))
 (let ((?x1144 (+ y ?x146)))
 (let ((?x65 (+ a b)))
 (let ((?x117 (+ (* (/ 1.0 4.0) (* ?x65 ?x65 ?x1144 ?x1144 ?x1144 d b)) (* (- 1.0) (* ?x65 ?x65 ?x65 ?x1144 ?x1144)))))
 (let ((?x1004 (+ (* (/ 1.0 4.0) (* ?x65 ?x65 ?x1144 d b)) (* (/ 1.0 8.0) (* ?x65 ?x65 ?x65 ?x1144 ?x1144 d d d)))))
 (let ((?x170 (* 2.0 (* b00 y))))
 (let ((?x1086 (+ ?x88 ?x30 ?x170 (* (- 1.0) (* d00 a)))))
 (let (($x876 (or (not (= (* (+ ?x207 ?x223) (+ ?x171 ?x183) ?x1086) 0.0)) (not (= (* ?x1004 ?x117 ?x988) 0.0)))))
 (let (($x1153 (= (+ ?x133 ?x155 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x1142 (and (= ?x1086 0.0) (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x1153 $x876)))
 (rewrite (= $x1142 $x1598))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x79 (exists ((a Real) (b Real) (d Real) (y Real) )(! (let ((?x52 (/ d 2.0)))
 (let ((?x62 (+ y ?x52)))
 (let ((?x65 (+ a b)))
 (let ((?x73 (+ (* ?x65 ?x65 (/ b 2.0) ?x52 ?x62) (* ?x65 ?x65 ?x65 ?x52 ?x52 ?x52 ?x62 ?x62))))
 (let ((?x70 (- (* ?x65 ?x65 (/ b 2.0) ?x52 ?x62 ?x62 ?x62) (* ?x65 ?x65 ?x65 ?x62 ?x62))))
 (let ((?x30 (* a00 d00)))
 (let ((?x27 (* (- 2.0) b00 y00)))
 (let ((?x74 (* (- (+ ?x27 ?x30 (* 2.0 b00 ?x62)) (* ?x65 d00)) ?x70 ?x73)))
 (let ((?x58 (+ (* a a (/ b 2.0) ?x52 y) (* a a a ?x52 ?x52 ?x52 y y))))
 (let ((?x55 (- (* a a (/ b 2.0) ?x52 y y y) (* a a a y y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ ?x27 ?x30 (* 2.0 b00 y)) ?x33)))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) (or (not (= (* ?x34 ?x55 ?x58) 0.0)) (not (= ?x74 0.0)))))))))))))))))) :qid k!33))
 ))
 (let ((?x1130 (lambda ((a Real) (b Real) (d Real) (y Real) )(let ((?x30 (* a00 d00)))
 (let ((?x88 (* (- 2.0) (* b00 y00))))
 (let ((?x988 (+ ?x88 ?x30 (* 2.0 (* b00 (+ y (* (/ 1.0 2.0) d)))) (* (- 1.0) (* d00 (+ a b))))))
 (let ((?x146 (* (/ 1.0 2.0) d)))
 (let ((?x1144 (+ y ?x146)))
 (let ((?x65 (+ a b)))
 (let ((?x117 (+ (* (/ 1.0 4.0) (* ?x65 ?x65 ?x1144 ?x1144 ?x1144 d b)) (* (- 1.0) (* ?x65 ?x65 ?x65 ?x1144 ?x1144)))))
 (let ((?x1004 (+ (* (/ 1.0 4.0) (* ?x65 ?x65 ?x1144 d b)) (* (/ 1.0 8.0) (* ?x65 ?x65 ?x65 ?x1144 ?x1144 d d d)))))
 (let ((?x170 (* 2.0 (* b00 y))))
 (let ((?x1086 (+ ?x88 ?x30 ?x170 (* (- 1.0) (* d00 a)))))
 (let ((?x183 (* (- 1.0) (* y y a a a))))
 (let ((?x171 (* (/ 1.0 4.0) (* y y y d b a a))))
 (let ((?x223 (* (/ 1.0 8.0) (* y y d d d a a a))))
 (let ((?x204 (* y d b a a)))
 (let ((?x207 (* (/ 1.0 4.0) ?x204)))
 (let (($x876 (or (not (= (* (+ ?x207 ?x223) (+ ?x171 ?x183) ?x1086) 0.0)) (not (= (* ?x1004 ?x117 ?x988) 0.0)))))
 (let ((?x155 (* (- 2.0) (* y b))))
 (let ((?x133 (* d a)))
 (let (($x1153 (= (+ ?x133 ?x155 (* 2.0 (* y00 b)) (* (- 1.0) (* a00 d))) 0.0)))
 (let (($x1142 (and (= ?x1086 0.0) (= (+ (* (- 1.0) (* d00 b)) (* b00 d)) 0.0) $x1153 $x876)))
 (let ((?x52 (/ d 2.0)))
 (let ((?x62 (+ y ?x52)))
 (let ((?x73 (+ (* ?x65 ?x65 (/ b 2.0) ?x52 ?x62) (* ?x65 ?x65 ?x65 ?x52 ?x52 ?x52 ?x62 ?x62))))
 (let ((?x70 (- (* ?x65 ?x65 (/ b 2.0) ?x52 ?x62 ?x62 ?x62) (* ?x65 ?x65 ?x65 ?x62 ?x62))))
 (let ((?x67 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 ?x62)) (* ?x65 d00))))
 (let ((?x58 (+ (* a a (/ b 2.0) ?x52 y) (* a a a ?x52 ?x52 ?x52 y y))))
 (let ((?x55 (- (* a a (/ b 2.0) ?x52 y y y) (* a a a y y))))
 (let ((?x33 (* a d00)))
 (let ((?x34 (- (+ (* (- 2.0) b00 y00) ?x30 (* 2.0 b00 y)) ?x33)))
 (let (($x77 (or (not (= (* ?x34 ?x55 ?x58) 0.0)) (not (= (* ?x67 ?x70 ?x73) 0.0)))))
 (let ((?x48 (* a00 d)))
 (let ((?x49 (- (+ (- (* a d) (* 2.0 b y)) (* 2.0 b y00)) ?x48)))
 (let (($x78 (and (= ?x34 0.0) (= (+ (* (- 1.0) b d00) (* b00 d)) 0.0) (= ?x49 0.0) $x77)))
 (rewrite (= $x78 $x1142))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x80 (asserted $x79)))
 (let ((@x1011 (mp (mp @x80 (quant-intro (proof-bind ?x1130) (= $x79 $x538)) $x538) (quant-intro (proof-bind ?x1518) (= $x538 $x1516)) $x1516)))
 (let ((@x330 (mp (mp~ @x1011 (sk (~ $x1516 $x1028)) $x1028) (rewrite (= $x1028 $x738)) $x738)))
 (let ((@x246 (and-elim @x330 $x1278)))
 (let (($x1025 (<= ?x1111 0.0)))
 (let (($x1026 (= 0.0 ?x1111)))
 (let ((@x218 (mp @x246 (symm (commutativity (= $x1026 $x1278)) (= $x1278 $x1026)) $x1026)))
 (let ((@x201 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1026) $x1025)) @x218 $x1025)))
 (let (($x935 (>= ?x1111 0.0)))
 (let ((@x228 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1026) $x935)) @x218 $x935)))
 (let (($x491 (<= ?x143 0.0)))
 (let (($x893 (<= ?x1141 0.0)))
 (let (($x953 (= 0.0 ?x1141)))
 (let ((@x299 (mp (and-elim @x330 $x1031) (symm (commutativity (= $x953 $x1031)) (= $x1031 $x953)) $x953)))
 (let (($x961 (>= ?x82 0.0)))
 (let (($x470 (= 0.0 ?x82)))
 (let ((@x702 (mp (and-elim @x330 $x871) (symm (commutativity (= $x470 $x871)) (= $x871 $x470)) $x470)))
 (let ((@x704 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x470) $x961)) @x702 $x961)))
 (let ((@x413 ((_ th-lemma arith) @x704 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x953) $x893)) @x299 $x893) (hypothesis (not $x491)) false)))
 (let (($x1032 (>= ?x143 0.0)))
 (let (($x468 (>= ?x1141 0.0)))
 (let (($x909 (<= ?x82 0.0)))
 (let ((@x629 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x470) $x909)) @x702 $x909)))
 (let ((@x255 ((_ th-lemma arith) (hypothesis (not $x1032)) @x629 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x953) $x468)) @x299 $x468) false)))
 (let ((@x230 ((_ th-lemma arith) (lemma @x255 $x1032) (lemma @x413 $x491) @x228 @x201 (= ?x143 ?x1111))))
 (let (($x199 (or (not $x1112) $x1108)))
 (let ((@x362 (unit-resolution ((_ th-lemma arith) $x199) (hypothesis $x121) (hypothesis $x1112) false)))
 (let ((@x1481 (unit-resolution (and-elim @x330 $x140) (unit-resolution (lemma @x362 $x199) (trans* @x230 @x246 $x1112) $x1108) $x613)))
 (let (($x540 (<= ?x680 0.0)))
 (let ((@x1528 (unit-resolution ((_ th-lemma arith) (or (not $x1025) (not $x935) (not $x909) (not $x961) $x540)) @x629 @x704 @x201 @x228 (hypothesis (not $x540)) false)))
 (let ((@x1039 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x98 (not $x540) $x641)) (lemma @x1528 $x540) (mp @x1481 (monotonicity @x1146 (= $x613 $x640)) $x640) $x641)))
 (unit-resolution ((_ th-lemma arith) (or (not $x1025) (not $x935) (not $x909) (not $x961) $x1095)) @x629 @x704 @x201 @x228 @x1039 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                       93
 :arith-eq-adapter                94
 :arith-bound-propagations-cheap  81
 :arith-bound-propagations-lp     20
 :arith-conflicts                 190
 :arith-diseq                     168
 :arith-fixed-eqs                 1
 :arith-grobner-calls             5
 :arith-grobner-conflicts         2
 :arith-horner-calls              5
 :arith-horner-cross-nested-forms 11
 :arith-lower                     139
 :arith-make-feasible             91
 :arith-max-columns               121
 :arith-max-rows                  46
 :arith-nla-explanations          75
 :arith-nla-lemmas                188
 :arith-propagations              81
 :arith-upper                     108
 :conflicts                       7
 :decisions                       182
 :del-clause                      380
 :final-checks                    35
 :max-memory                      5.56
 :memory                          1.19
 :mk-bool-var                     548
 :mk-clause                       574
 :num-allocs                      8081314530.00
 :num-checks                      1
 :propagations                    218
 :rlimit-count                    11131
 :time                            1.35
 :total-time                      1.36)
