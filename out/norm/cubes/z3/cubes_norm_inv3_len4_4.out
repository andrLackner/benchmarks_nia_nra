unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun c!3 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(proof
(let ((?x1903 (* (- 2) n!0)))
 (let ((?x648 (* 3 c!3)))
 (let ((?x1862 (* k!2 n!0)))
 (let ((?x653 (* (- 1) ?x1862)))
 (let ((?x773 (+ k!2 ?x653 ?x648 ?x1903)))
 (let (($x2386 (<= ?x773 1)))
 (let (($x194 (= ?x773 1)))
 (let ((?x2314 (+ k!2 c!3)))
 (let ((?x632 (+ k!2 m!1)))
 (let ((?x2023 (+ 1 n!0)))
 (let ((?x2368 (* k!2 k!2 k!2 n!0 n!0)))
 (let ((?x1901 (* 2 (* k!2 k!2 k!2 n!0))))
 (let ((?x1957 (* ?x2023 ?x2023 ?x2023 ?x632 ?x632 ?x632 ?x632)))
 (let ((?x1882 (* (- 1) (* c!3 c!3 c!3 n!0 n!0))))
 (let ((?x1947 (* (- 15) (* m!1 m!1 m!1 m!1))))
 (let ((?x650 (* (- 72) (* k!2 k!2 m!1 m!1))))
 (let ((?x1917 (* 5 (* k!2 k!2 m!1 n!0 n!0))))
 (let ((?x1942 (* k!2 k!2)))
 (let ((?x639 (* (- 864) ?x1942)))
 (let ((?x1854 (* (- 1) (* c!3 c!3 c!3))))
 (let ((?x1937 (* 2 (* ?x2023 ?x2023 ?x2023 ?x632 ?x632 ?x632))))
 (let ((?x1856 (* 38 (* m!1 m!1 m!1 n!0))))
 (let ((?x1934 (* m!1 m!1 m!1 n!0 n!0)))
 (let ((?x665 (* (- 1) (* ?x2023 ?x2023 ?x632 ?x632 ?x632 ?x632))))
 (let ((?x1914 (* 216 (* m!1 m!1 n!0))))
 (let ((?x162 (* 2 (* k!2 m!1 m!1 m!1 n!0))))
 (let ((?x1906 (* (- 482) (* k!2 m!1 m!1))))
 (let ((?x1954 (* 216 (* k!2 m!1 n!0))))
 (let ((?x568 (* 432 ?x1862)))
 (let ((?x1858 (* k!2 k!2 k!2)))
 (let ((?x1949 (* (- 2) (* c!3 c!3 c!3 n!0))))
 (let ((?x1897 (* 648 m!1)))
 (let ((?x527 (* (- 53) (* m!1 m!1 m!1))))
 (let ((?x134 (* 648 k!2)))
 (let ((?x2334 (* 2 (* m!1 m!1 m!1 m!1 n!0))))
 (let ((?x1462 (* (- 87) (* k!2 m!1 m!1 m!1))))
 (let ((?x1855 (* (- 1) (* m!1 m!1 m!1 m!1 m!1))))
 (let ((?x676 (* (- 5) (* k!2 m!1 m!1 m!1 m!1))))
 (let ((?x655 (* 4 (* k!2 m!1 m!1 n!0 n!0))))
 (let ((?x576 (* 432 (* m!1 n!0))))
 (let ((?x1918 (+ 6 m!1)))
 (let ((?x649 (* ?x2023 ?x1918 ?x1918 ?x1918 ?x632 ?x632)))
 (let ((?x1926 (* 10 (* k!2 k!2 m!1 n!0))))
 (let ((?x658 (* (- 427) (* k!2 k!2 m!1))))
 (let ((?x674 (* (- 4) (* k!2 k!2 m!1 m!1 m!1))))
 (let ((?x638 (* 44 (* k!2 m!1 m!1 n!0))))
 (let ((?x164 (* (- 756) (* k!2 m!1))))
 (let ((?x157 (* 108 (* m!1 m!1))))
 (let ((?x2378 (+ ?x157 (* (- 3) (* k!2 m!1 m!1 m!1 c!3)) ?x164 ?x638 ?x674 (* (- 3) (* k!2 c!3 c!3)) ?x658 ?x1926 ?x649 ?x576 ?x655 ?x676 ?x1855 (* (- 6) (* k!2 c!3 c!3 n!0)) ?x1462 ?x2334 ?x134 ?x527 ?x1897 ?x1949 ?x1858 ?x568 ?x1954 ?x1906 ?x162 ?x1914 ?x665 ?x1934 ?x1856 ?x1937 ?x1854 ?x639 ?x1917 ?x650 ?x1947 ?x1882 ?x1957 (* (- 648) (* m!1 c!3)) ?x1901 (* (- 3) (* ?x2023 ?x2023 ?x632 ?x632 ?x2314 ?x2314)) (* (- 54) (* k!2 m!1 m!1 c!3)) (* 2 (* m!1 m!1 c!3 n!0)) (* 4 (* k!2 m!1 c!3 n!0)) (* (- 4) (* k!2 k!2 c!3 n!0)) (* (- 323) (* m!1 m!1 c!3)) (* (- 322) (* k!2 m!1 c!3)) (* (- 2) (* k!2 k!2 c!3)) (* m!1 m!1 c!3 n!0 n!0) (* 2 (* k!2 m!1 c!3 n!0 n!0)) (* (- 2) (* k!2 k!2 c!3 n!0 n!0)) ?x2368 (* (- 4) (* ?x2023 ?x2023 ?x632 ?x632 ?x632 ?x2314)) (* (- 648) (* k!2 c!3)) (* (- 3) (* m!1 m!1 m!1 m!1 c!3)) (* 2 (* ?x2023 ?x2023 ?x2023 ?x632 ?x632 ?x2314)) (* ?x2023 ?x2023 ?x2023 ?x632 ?x632 ?x632 ?x2314) (* (- 3) (* k!2 c!3 c!3 n!0 n!0)) (* 3 (* ?x2023 ?x2023 ?x2314 ?x2314 ?x2314 ?x2314)) (* (- 2) (* ?x2023 ?x2023 ?x2023 ?x2314 ?x2314 ?x2314)) (* ?x2023 ?x2023 ?x632 ?x2314 ?x2314 ?x2314) (* (- 54) (* m!1 m!1 m!1 c!3)) (* (- 1) (* ?x2023 ?x2023 ?x2023 ?x632 ?x2314 ?x2314 ?x2314)))))
 (let (($x3003 (= ?x2378 0)))
 (let (($x2348 (not $x3003)))
 (let ((?x1702 (* (- 3) n!0)))
 (let ((?x1898 (* (- 3) (* n!0 n!0))))
 (let ((?x640 (+ k!2 ?x1898 ?x1702)))
 (let (($x195 (= ?x640 1)))
 (let ((?x1925 (* (- 9) n!0)))
 (let ((?x1941 (* (- 1) ?x1942)))
 (let ((?x1924 (* 18 c!3)))
 (let ((?x2198 (* 5 k!2)))
 (let ((?x2014 (* 9 (* c!3 n!0))))
 (let ((?x971 (+ ?x2014 ?x2198 ?x1924 ?x1941 ?x1925)))
 (let (($x644 (= ?x971 4)))
 (let ((?x2029 (+ m!1 (* (- 6) n!0))))
 (let (($x2692 (= ?x2029 6)))
 (let (($x794 (and $x2692 $x644 $x194 $x195 $x2348)))
 (let ((?x1965 (* (- 2) (* ?x2023 ?x2023 ?x2023 (+ c!3 k!2) (+ c!3 k!2) (+ c!3 k!2)))))
 (let ((?x1463 (+ c!3 k!2)))
 (let ((?x2300 (+ ?x134 ?x1897 ?x639 ?x568 ?x649 ?x162 ?x2334 (* (- 2) (* c!3 k!2 k!2 n!0 n!0)) ?x2368 (* 2 (* c!3 k!2 m!1 n!0 n!0)) ?x1917 (* c!3 m!1 m!1 n!0 n!0) ?x655 (* (- 2) (* c!3 k!2 k!2)) ?x1858 (* (- 322) (* c!3 k!2 m!1)) ?x658 (* (- 323) (* c!3 m!1 m!1)) ?x1906 (* (- 4) (* c!3 k!2 k!2 n!0)) ?x1901 (* 4 (* c!3 k!2 m!1 n!0)) ?x1926 (* 2 (* c!3 m!1 m!1 n!0)) ?x638 ?x1914 (* (- 54) (* c!3 k!2 m!1 m!1)) ?x650 ?x576 ?x1462 ?x1947 ?x164 (* (- 1) (* ?x2023 ?x2023 ?x2023 ?x632 ?x1463 ?x1463 ?x1463)) ?x157 ?x527 (* (- 3) (* ?x2023 ?x2023 ?x632 ?x632 ?x1463 ?x1463)) ?x674 ?x676 ?x1855 (* 3 (* ?x2023 ?x2023 ?x1463 ?x1463 ?x1463 ?x1463)) ?x665 ?x1934 ?x1856 ?x1937 ?x1854 (* (- 3) (* c!3 c!3 k!2)) ?x1949 (* (- 6) (* c!3 c!3 k!2 n!0)) ?x1882 (* (- 3) (* c!3 c!3 k!2 n!0 n!0)) ?x1954 (* ?x2023 ?x2023 ?x2023 ?x632 ?x632 ?x632 ?x1463) (* 2 (* ?x2023 ?x2023 ?x2023 ?x632 ?x632 ?x1463)) ?x1957 (* ?x2023 ?x2023 ?x632 ?x1463 ?x1463 ?x1463) ?x1965 (* (- 3) (* c!3 k!2 m!1 m!1 m!1)) (* (- 3) (* c!3 m!1 m!1 m!1 m!1)) (* (- 4) (* ?x2023 ?x2023 ?x632 ?x632 ?x632 ?x1463)) (* (- 648) (* c!3 k!2)) (* (- 648) (* c!3 m!1)) (* (- 54) (* c!3 m!1 m!1 m!1)))))
 (let (($x2343 (and $x2692 (= (+ ?x1924 ?x2198 ?x1925 ?x1941 ?x2014) 4) (= (+ ?x648 k!2 ?x1903 ?x653) 1) (= (+ k!2 ?x1702 ?x1898) 1) (not (= ?x2300 0)))))
 (let (($x1218 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2893 (* (- 54) (* c m m m))))
 (let ((?x2844 (* (- 648) (* c m))))
 (let ((?x2840 (* (- 648) (* c k))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2804 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1420 (* (- 4) ?x2804)))
 (let ((?x2879 (* (- 3) (* c m m m m))))
 (let ((?x2876 (* (- 3) (* c k m m m))))
 (let ((?x2719 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x2730 (* (- 2) ?x2719)))
 (let ((?x2707 (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2702 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2677 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x2678 (* 2 ?x2677)))
 (let ((?x2676 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2759 (* 216 (* k m n))))
 (let ((?x2338 (* c c k n n)))
 (let ((?x725 (* (- 3) ?x2338)))
 (let ((?x2330 (* c c c n n)))
 (let ((?x1176 (* (- 1) ?x2330)))
 (let ((?x2278 (* c c k n)))
 (let ((?x1175 (* (- 6) ?x2278)))
 (let ((?x2269 (* c c c n)))
 (let ((?x1143 (* (- 2) ?x2269)))
 (let ((?x2238 (* c c k)))
 (let ((?x1141 (* (- 3) ?x2238)))
 (let ((?x2230 (* c c c)))
 (let ((?x976 (* (- 1) ?x2230)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x2050 (* 2 ?x2033)))
 (let ((?x1933 (* m m m n)))
 (let ((?x1136 (* 38 ?x1933)))
 (let ((?x1884 (* m m m n n)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1706 (* (- 1) ?x1678)))
 (let ((?x1644 (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1668 (* 3 ?x1644)))
 (let ((?x1677 (* (- 1) (* m m m m m))))
 (let ((?x2922 (* (- 5) (* k m m m m))))
 (let ((?x2921 (* (- 4) (* k k m m m))))
 (let ((?x1490 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2649 (* (- 3) ?x1490)))
 (let ((?x1453 (* m m)))
 (let ((?x1194 (* 108 ?x1453)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* (- 1) ?x1450)))
 (let ((?x1448 (* k m)))
 (let ((?x2633 (* (- 756) ?x1448)))
 (let ((?x1435 (* m m m m)))
 (let ((?x2631 (* (- 15) ?x1435)))
 (let ((?x1434 (* k m m m)))
 (let ((?x2621 (* (- 87) ?x1434)))
 (let ((?x2619 (* 432 (* m n))))
 (let ((?x939 (* k k m m)))
 (let ((?x2610 (* (- 72) ?x939)))
 (let ((?x935 (* c k m m)))
 (let ((?x2608 (* (- 54) ?x935)))
 (let ((?x2607 (* 216 (* m m n))))
 (let ((?x663 (* k m m n)))
 (let ((?x2529 (* 44 ?x663)))
 (let ((?x699 (* 2 (* c m m n))))
 (let ((?x2044 (* 10 (* k k m n))))
 (let ((?x697 (* 4 (* c k m n))))
 (let ((?x637 (* k k k n)))
 (let ((?x2056 (* 2 ?x637)))
 (let ((?x634 (* c k k n)))
 (let ((?x2605 (* (- 4) ?x634)))
 (let ((?x2911 (* (- 323) (* c m m))))
 (let ((?x619 (* k k m)))
 (let ((?x2909 (* (- 427) ?x619)))
 (let ((?x2907 (* (- 322) (* c k m))))
 (let ((?x605 (* k k k)))
 (let ((?x602 (* c k k)))
 (let ((?x2527 (* (- 2) ?x602)))
 (let ((?x1976 (* 4 (* k m m n n))))
 (let ((?x595 (* c m m n n)))
 (let ((?x1977 (* 5 (* k k m n n))))
 (let ((?x701 (* 2 (* c k m n n))))
 (let ((?x590 (* k k k n n)))
 (let ((?x589 (* c k k n n)))
 (let ((?x2600 (* (- 2) ?x589)))
 (let ((?x551 (* 2 (* m m m m n))))
 (let ((?x549 (* 2 (* k m m m n))))
 (let ((?x524 (+ 6 m)))
 (let ((?x528 (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x2598 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2905 (* (- 864) ?x49)))
 (let ((?x2597 (* 648 m)))
 (let ((?x2526 (* 648 k)))
 (let ((?x1927 (+ ?x2526 ?x2597 ?x2905 ?x2598 ?x528 ?x549 ?x551 ?x2600 ?x590 ?x701 ?x1977 ?x595 ?x1976 ?x2527 ?x605 ?x2907 ?x2909 ?x2911 (* (- 482) (* k m m)) ?x2605 ?x2056 ?x697 ?x2044 ?x699 ?x2529 ?x2607 ?x2608 ?x2610 ?x2619 ?x2621 ?x2631 ?x2633 ?x1458 ?x1194 (* (- 53) (* m m m)) ?x2649 ?x2921 ?x2922 ?x1677 ?x1668 ?x1706 ?x1884 ?x1136 ?x2050 ?x976 ?x1141 ?x1143 ?x1175 ?x1176 ?x725 ?x2759 ?x2676 ?x2678 ?x2702 ?x2707 ?x2730 ?x2876 ?x2879 ?x1420 ?x2840 ?x2844 ?x2893)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 (* c n))) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 $x225 $x277 $x315 (not (= ?x1927 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x2772 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x2893 (* (- 54) (* c m m m))))
 (let ((?x2844 (* (- 648) (* c m))))
 (let ((?x2840 (* (- 648) (* c k))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2804 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1420 (* (- 4) ?x2804)))
 (let ((?x2879 (* (- 3) (* c m m m m))))
 (let ((?x2876 (* (- 3) (* c k m m m))))
 (let ((?x2719 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x2730 (* (- 2) ?x2719)))
 (let ((?x2707 (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2702 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2677 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x2678 (* 2 ?x2677)))
 (let ((?x2676 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2759 (* 216 (* k m n))))
 (let ((?x2338 (* c c k n n)))
 (let ((?x725 (* (- 3) ?x2338)))
 (let ((?x2330 (* c c c n n)))
 (let ((?x1176 (* (- 1) ?x2330)))
 (let ((?x2278 (* c c k n)))
 (let ((?x1175 (* (- 6) ?x2278)))
 (let ((?x2269 (* c c c n)))
 (let ((?x1143 (* (- 2) ?x2269)))
 (let ((?x2238 (* c c k)))
 (let ((?x1141 (* (- 3) ?x2238)))
 (let ((?x2230 (* c c c)))
 (let ((?x976 (* (- 1) ?x2230)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x2050 (* 2 ?x2033)))
 (let ((?x1933 (* m m m n)))
 (let ((?x1136 (* 38 ?x1933)))
 (let ((?x1884 (* m m m n n)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1706 (* (- 1) ?x1678)))
 (let ((?x1644 (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1668 (* 3 ?x1644)))
 (let ((?x1677 (* (- 1) (* m m m m m))))
 (let ((?x2922 (* (- 5) (* k m m m m))))
 (let ((?x2921 (* (- 4) (* k k m m m))))
 (let ((?x1490 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2649 (* (- 3) ?x1490)))
 (let ((?x1453 (* m m)))
 (let ((?x1194 (* 108 ?x1453)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* (- 1) ?x1450)))
 (let ((?x1448 (* k m)))
 (let ((?x2633 (* (- 756) ?x1448)))
 (let ((?x1435 (* m m m m)))
 (let ((?x2631 (* (- 15) ?x1435)))
 (let ((?x1434 (* k m m m)))
 (let ((?x2621 (* (- 87) ?x1434)))
 (let ((?x2619 (* 432 (* m n))))
 (let ((?x939 (* k k m m)))
 (let ((?x2610 (* (- 72) ?x939)))
 (let ((?x935 (* c k m m)))
 (let ((?x2608 (* (- 54) ?x935)))
 (let ((?x2607 (* 216 (* m m n))))
 (let ((?x663 (* k m m n)))
 (let ((?x2529 (* 44 ?x663)))
 (let ((?x699 (* 2 (* c m m n))))
 (let ((?x2044 (* 10 (* k k m n))))
 (let ((?x697 (* 4 (* c k m n))))
 (let ((?x637 (* k k k n)))
 (let ((?x2056 (* 2 ?x637)))
 (let ((?x634 (* c k k n)))
 (let ((?x2605 (* (- 4) ?x634)))
 (let ((?x2911 (* (- 323) (* c m m))))
 (let ((?x2907 (* (- 322) (* c k m))))
 (let ((?x605 (* k k k)))
 (let ((?x602 (* c k k)))
 (let ((?x2527 (* (- 2) ?x602)))
 (let ((?x1976 (* 4 (* k m m n n))))
 (let ((?x595 (* c m m n n)))
 (let ((?x1977 (* 5 (* k k m n n))))
 (let ((?x701 (* 2 (* c k m n n))))
 (let ((?x590 (* k k k n n)))
 (let ((?x589 (* c k k n n)))
 (let ((?x2600 (* (- 2) ?x589)))
 (let ((?x551 (* 2 (* m m m m n))))
 (let ((?x549 (* 2 (* k m m m n))))
 (let ((?x524 (+ 6 m)))
 (let ((?x528 (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x2598 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2905 (* (- 864) ?x49)))
 (let ((?x2597 (* 648 m)))
 (let ((?x2526 (* 648 k)))
 (let ((?x2765 (+ ?x2526 ?x2597 ?x2905 ?x2598 ?x528 ?x549 ?x551 (* (- 6) (* m 6 k m)) ?x2600 ?x590 ?x701 ?x1977 ?x595 ?x1976 ?x2527 ?x605 ?x2907 (* (- 6) (* m 6 k k)) (* (- 391) (* k k m)) ?x2911 (* (- 410) (* k m m)) ?x2605 ?x2056 ?x697 ?x2044 ?x699 ?x2529 ?x2607 ?x2608 (* (- 6) (* m 6 m k)) ?x2610 (* (- 6) (* m 6 m m)) ?x2619 ?x2621 ?x2631 ?x2633 ?x1458 ?x1194 (* (- 17) (* m m m)) ?x2649 ?x2921 ?x2922 ?x1677 ?x1668 ?x1706 ?x1884 ?x1136 ?x2050 ?x976 ?x1141 ?x1143 ?x1175 ?x1176 ?x725 ?x2759 ?x2676 ?x2678 ?x2702 ?x2707 ?x2730 ?x2876 ?x2879 ?x1420 ?x2840 ?x2844 ?x2893)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 (* c n))) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 $x225 $x277 $x315 (not (= ?x2765 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2302 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2893 (* (- 54) (* c m m m))))
 (let ((?x2844 (* (- 648) (* c m))))
 (let ((?x2840 (* (- 648) (* c k))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2804 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1420 (* (- 4) ?x2804)))
 (let ((?x2879 (* (- 3) (* c m m m m))))
 (let ((?x2876 (* (- 3) (* c k m m m))))
 (let ((?x2719 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x2730 (* (- 2) ?x2719)))
 (let ((?x2707 (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2702 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2677 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x2678 (* 2 ?x2677)))
 (let ((?x2676 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2759 (* 216 (* k m n))))
 (let ((?x2338 (* c c k n n)))
 (let ((?x725 (* (- 3) ?x2338)))
 (let ((?x2330 (* c c c n n)))
 (let ((?x1176 (* (- 1) ?x2330)))
 (let ((?x2278 (* c c k n)))
 (let ((?x1175 (* (- 6) ?x2278)))
 (let ((?x2269 (* c c c n)))
 (let ((?x1143 (* (- 2) ?x2269)))
 (let ((?x2238 (* c c k)))
 (let ((?x1141 (* (- 3) ?x2238)))
 (let ((?x2230 (* c c c)))
 (let ((?x976 (* (- 1) ?x2230)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x2050 (* 2 ?x2033)))
 (let ((?x1933 (* m m m n)))
 (let ((?x1136 (* 38 ?x1933)))
 (let ((?x1884 (* m m m n n)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1706 (* (- 1) ?x1678)))
 (let ((?x1644 (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1668 (* 3 ?x1644)))
 (let ((?x1677 (* (- 1) (* m m m m m))))
 (let ((?x2922 (* (- 5) (* k m m m m))))
 (let ((?x2921 (* (- 4) (* k k m m m))))
 (let ((?x1490 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2649 (* (- 3) ?x1490)))
 (let ((?x1453 (* m m)))
 (let ((?x1194 (* 108 ?x1453)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* (- 1) ?x1450)))
 (let ((?x1448 (* k m)))
 (let ((?x2633 (* (- 756) ?x1448)))
 (let ((?x1435 (* m m m m)))
 (let ((?x2631 (* (- 15) ?x1435)))
 (let ((?x1434 (* k m m m)))
 (let ((?x2621 (* (- 87) ?x1434)))
 (let ((?x2619 (* 432 (* m n))))
 (let ((?x939 (* k k m m)))
 (let ((?x2610 (* (- 72) ?x939)))
 (let ((?x935 (* c k m m)))
 (let ((?x2608 (* (- 54) ?x935)))
 (let ((?x2607 (* 216 (* m m n))))
 (let ((?x663 (* k m m n)))
 (let ((?x2529 (* 44 ?x663)))
 (let ((?x699 (* 2 (* c m m n))))
 (let ((?x2044 (* 10 (* k k m n))))
 (let ((?x697 (* 4 (* c k m n))))
 (let ((?x637 (* k k k n)))
 (let ((?x2056 (* 2 ?x637)))
 (let ((?x634 (* c k k n)))
 (let ((?x2605 (* (- 4) ?x634)))
 (let ((?x2911 (* (- 323) (* c m m))))
 (let ((?x619 (* k k m)))
 (let ((?x2909 (* (- 427) ?x619)))
 (let ((?x2907 (* (- 322) (* c k m))))
 (let ((?x605 (* k k k)))
 (let ((?x602 (* c k k)))
 (let ((?x2527 (* (- 2) ?x602)))
 (let ((?x1976 (* 4 (* k m m n n))))
 (let ((?x595 (* c m m n n)))
 (let ((?x1977 (* 5 (* k k m n n))))
 (let ((?x701 (* 2 (* c k m n n))))
 (let ((?x590 (* k k k n n)))
 (let ((?x589 (* c k k n n)))
 (let ((?x2600 (* (- 2) ?x589)))
 (let ((?x551 (* 2 (* m m m m n))))
 (let ((?x549 (* 2 (* k m m m n))))
 (let ((?x524 (+ 6 m)))
 (let ((?x528 (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x2598 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2905 (* (- 864) ?x49)))
 (let ((?x2597 (* 648 m)))
 (let ((?x2526 (* 648 k)))
 (let ((?x1927 (+ ?x2526 ?x2597 ?x2905 ?x2598 ?x528 ?x549 ?x551 ?x2600 ?x590 ?x701 ?x1977 ?x595 ?x1976 ?x2527 ?x605 ?x2907 ?x2909 ?x2911 (* (- 482) (* k m m)) ?x2605 ?x2056 ?x697 ?x2044 ?x699 ?x2529 ?x2607 ?x2608 ?x2610 ?x2619 ?x2621 ?x2631 ?x2633 ?x1458 ?x1194 (* (- 53) (* m m m)) ?x2649 ?x2921 ?x2922 ?x1677 ?x1668 ?x1706 ?x1884 ?x1136 ?x2050 ?x976 ?x1141 ?x1143 ?x1175 ?x1176 ?x725 ?x2759 ?x2676 ?x2678 ?x2702 ?x2707 ?x2730 ?x2876 ?x2879 ?x1420 ?x2840 ?x2844 ?x2893)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 (* c n))) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x1921 (and $x141 $x225 $x277 $x315 (not (= ?x1927 0)))))
 (let ((?x2765 (+ ?x2526 ?x2597 ?x2905 ?x2598 ?x528 ?x549 ?x551 (* (- 6) (* m 6 k m)) ?x2600 ?x590 ?x701 ?x1977 ?x595 ?x1976 ?x2527 ?x605 ?x2907 (* (- 6) (* m 6 k k)) (* (- 391) ?x619) ?x2911 (* (- 410) (* k m m)) ?x2605 ?x2056 ?x697 ?x2044 ?x699 ?x2529 ?x2607 ?x2608 (* (- 6) (* m 6 m k)) ?x2610 (* (- 6) (* m 6 m m)) ?x2619 ?x2621 ?x2631 ?x2633 ?x1458 ?x1194 (* (- 17) (* m m m)) ?x2649 ?x2921 ?x2922 ?x1677 ?x1668 ?x1706 ?x1884 ?x1136 ?x2050 ?x976 ?x1141 ?x1143 ?x1175 ?x1176 ?x725 ?x2759 ?x2676 ?x2678 ?x2702 ?x2707 ?x2730 ?x2876 ?x2879 ?x1420 ?x2840 ?x2844 ?x2893)))
 (let (($x1455 (and $x141 $x225 $x277 $x315 (not (= ?x2765 0)))))
 (rewrite (= $x1455 $x1921))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x689 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x524 (+ 6 m)))
 (let ((?x2002 (* ?x524 ?x524 ?x524 ?x70 ?x69)))
 (let ((?x2745 (* ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x807 (* ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x918 (+ (* 4 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)) ?x1450 (* (- 2) (* ?x326 ?x524 ?x524 ?x524 ?x70)) (* (- 1) (* ?x326 ?x326 ?x70 ?x70 ?x69)) (* 3 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)) (* (- 2) (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)) (* (- 1) (* ?x524 ?x524 ?x524 ?x70)) ?x807 (* (- 3) (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)) ?x1678 (* (- 1) (* ?x326 ?x326 ?x70 ?x70 ?x70)) (* (- 1) (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)) (* (- 1) (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)) (* (- 1) (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)) (* 2 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)) ?x2745 (* 3 ?x2002) (* (- 2) ?x2033))))
 (let (($x700 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2443 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x2443 $x700 (not (= ?x918 0)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x2774 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x2893 (* (- 54) (* c m m m))))
 (let ((?x2844 (* (- 648) (* c m))))
 (let ((?x2840 (* (- 648) (* c k))))
 (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2804 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1420 (* (- 4) ?x2804)))
 (let ((?x2879 (* (- 3) (* c m m m m))))
 (let ((?x2876 (* (- 3) (* c k m m m))))
 (let ((?x2719 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x2730 (* (- 2) ?x2719)))
 (let ((?x2707 (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2702 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x2677 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x2678 (* 2 ?x2677)))
 (let ((?x2676 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x2759 (* 216 (* k m n))))
 (let ((?x2338 (* c c k n n)))
 (let ((?x725 (* (- 3) ?x2338)))
 (let ((?x2330 (* c c c n n)))
 (let ((?x1176 (* (- 1) ?x2330)))
 (let ((?x2278 (* c c k n)))
 (let ((?x1175 (* (- 6) ?x2278)))
 (let ((?x2269 (* c c c n)))
 (let ((?x1143 (* (- 2) ?x2269)))
 (let ((?x2238 (* c c k)))
 (let ((?x1141 (* (- 3) ?x2238)))
 (let ((?x2230 (* c c c)))
 (let ((?x976 (* (- 1) ?x2230)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x2050 (* 2 ?x2033)))
 (let ((?x1933 (* m m m n)))
 (let ((?x1136 (* 38 ?x1933)))
 (let ((?x1884 (* m m m n n)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1706 (* (- 1) ?x1678)))
 (let ((?x1644 (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1668 (* 3 ?x1644)))
 (let ((?x1677 (* (- 1) (* m m m m m))))
 (let ((?x2922 (* (- 5) (* k m m m m))))
 (let ((?x2921 (* (- 4) (* k k m m m))))
 (let ((?x1490 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2649 (* (- 3) ?x1490)))
 (let ((?x1453 (* m m)))
 (let ((?x1194 (* 108 ?x1453)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* (- 1) ?x1450)))
 (let ((?x1448 (* k m)))
 (let ((?x2633 (* (- 756) ?x1448)))
 (let ((?x1435 (* m m m m)))
 (let ((?x2631 (* (- 15) ?x1435)))
 (let ((?x1434 (* k m m m)))
 (let ((?x2621 (* (- 87) ?x1434)))
 (let ((?x2619 (* 432 (* m n))))
 (let ((?x939 (* k k m m)))
 (let ((?x2610 (* (- 72) ?x939)))
 (let ((?x935 (* c k m m)))
 (let ((?x2608 (* (- 54) ?x935)))
 (let ((?x2607 (* 216 (* m m n))))
 (let ((?x663 (* k m m n)))
 (let ((?x2529 (* 44 ?x663)))
 (let ((?x699 (* 2 (* c m m n))))
 (let ((?x2044 (* 10 (* k k m n))))
 (let ((?x697 (* 4 (* c k m n))))
 (let ((?x637 (* k k k n)))
 (let ((?x2056 (* 2 ?x637)))
 (let ((?x634 (* c k k n)))
 (let ((?x2605 (* (- 4) ?x634)))
 (let ((?x2911 (* (- 323) (* c m m))))
 (let ((?x2907 (* (- 322) (* c k m))))
 (let ((?x605 (* k k k)))
 (let ((?x602 (* c k k)))
 (let ((?x2527 (* (- 2) ?x602)))
 (let ((?x1976 (* 4 (* k m m n n))))
 (let ((?x595 (* c m m n n)))
 (let ((?x1977 (* 5 (* k k m n n))))
 (let ((?x701 (* 2 (* c k m n n))))
 (let ((?x590 (* k k k n n)))
 (let ((?x589 (* c k k n n)))
 (let ((?x2600 (* (- 2) ?x589)))
 (let ((?x551 (* 2 (* m m m m n))))
 (let ((?x549 (* 2 (* k m m m n))))
 (let ((?x524 (+ 6 m)))
 (let ((?x528 (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x55 (* k n)))
 (let ((?x2598 (* 432 ?x55)))
 (let ((?x49 (* k k)))
 (let ((?x2905 (* (- 864) ?x49)))
 (let ((?x2597 (* 648 m)))
 (let ((?x2526 (* 648 k)))
 (let ((?x2765 (+ ?x2526 ?x2597 ?x2905 ?x2598 ?x528 ?x549 ?x551 (* (- 6) (* m 6 k m)) ?x2600 ?x590 ?x701 ?x1977 ?x595 ?x1976 ?x2527 ?x605 ?x2907 (* (- 6) (* m 6 k k)) (* (- 391) (* k k m)) ?x2911 (* (- 410) (* k m m)) ?x2605 ?x2056 ?x697 ?x2044 ?x699 ?x2529 ?x2607 ?x2608 (* (- 6) (* m 6 m k)) ?x2610 (* (- 6) (* m 6 m m)) ?x2619 ?x2621 ?x2631 ?x2633 ?x1458 ?x1194 (* (- 17) (* m m m)) ?x2649 ?x2921 ?x2922 ?x1677 ?x1668 ?x1706 ?x1884 ?x1136 ?x2050 ?x976 ?x1141 ?x1143 ?x1175 ?x1176 ?x725 ?x2759 ?x2676 ?x2678 ?x2702 ?x2707 ?x2730 ?x2876 ?x2879 ?x1420 ?x2840 ?x2844 ?x2893)))
 (let (($x315 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x277 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) ?x55)) 1)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x225 (= (+ ?x40 ?x44 ?x227 ?x228 (* 9 (* c n))) 4)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x1455 (and $x141 $x225 $x277 $x315 (not (= ?x2765 0)))))
 (let ((?x2745 (* ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x807 (* ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x918 (+ (* 4 ?x2804) ?x1450 (* (- 2) (* ?x326 ?x524 ?x524 ?x524 ?x70)) (* (- 1) (* ?x326 ?x326 ?x70 ?x70 ?x69)) (* 3 ?x1490) (* (- 1) ?x2676) (* (- 2) ?x2677) (* (- 1) (* ?x524 ?x524 ?x524 ?x70)) ?x807 (* (- 3) ?x1644) ?x1678 (* (- 1) (* ?x326 ?x326 ?x70 ?x70 ?x70)) (* (- 1) ?x528) (* (- 1) ?x2702) (* (- 1) ?x2707) (* 2 ?x2719) ?x2745 (* 3 (* ?x524 ?x524 ?x524 ?x70 ?x69)) (* (- 2) ?x2033))))
 (let (($x700 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2443 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x592 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x2443 $x700 (not (= ?x918 0)))))
 (rewrite (= $x592 $x1455))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1500 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x2050 (* 2 ?x2033)))
 (let ((?x69 (+ c k)))
 (let ((?x524 (+ 6 m)))
 (let ((?x2002 (* ?x524 ?x524 ?x524 ?x70 ?x69)))
 (let ((?x2719 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x2730 (* (- 2) ?x2719)))
 (let ((?x2707 (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2702 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x528 (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x445 (* ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1706 (* (- 1) ?x1678)))
 (let ((?x1644 (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1668 (* 3 ?x1644)))
 (let ((?x2438 (* ?x524 ?x524 ?x524 ?x70)))
 (let ((?x2677 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x2678 (* 2 ?x2677)))
 (let ((?x2676 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1490 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2649 (* (- 3) ?x1490)))
 (let ((?x1431 (* ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* (- 1) ?x1450)))
 (let ((?x2804 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1420 (* (- 4) ?x2804)))
 (let ((?x2058 (+ ?x1420 ?x1458 (* 2 (* ?x326 ?x524 ?x524 ?x524 ?x70)) ?x1431 ?x2649 ?x2676 ?x2678 ?x2438 (* (- 1) (* ?x524 ?x524 ?x524 ?x70 ?x70)) ?x1668 ?x1706 ?x445 ?x528 ?x2702 ?x2707 ?x2730 (* (- 1) (* ?x326 ?x326 ?x69 ?x69 ?x69)) (* (- 3) ?x2002) ?x2050)))
 (let (($x700 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1414 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x2041 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (and $x141 (= ?x2041 (- 4)) $x1414 $x700 (not (= ?x2058 0)))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1689 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x69 (+ c k)))
 (let ((?x524 (+ 6 m)))
 (let ((?x2002 (* ?x524 ?x524 ?x524 ?x70 ?x69)))
 (let ((?x2745 (* ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x807 (* ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x918 (+ (* 4 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)) ?x1450 (* (- 2) (* ?x326 ?x524 ?x524 ?x524 ?x70)) (* (- 1) (* ?x326 ?x326 ?x70 ?x70 ?x69)) (* 3 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)) (* (- 1) (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)) (* (- 2) (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)) (* (- 1) (* ?x524 ?x524 ?x524 ?x70)) ?x807 (* (- 3) (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)) ?x1678 (* (- 1) (* ?x326 ?x326 ?x70 ?x70 ?x70)) (* (- 1) (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)) (* (- 1) (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)) (* (- 1) (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)) (* 2 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)) ?x2745 (* 3 ?x2002) (* (- 2) ?x2033))))
 (let (($x700 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x2443 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x228 (* (- 1) ?x49)))
 (let ((?x227 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x592 (and $x141 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x227 ?x228) 4) $x2443 $x700 (not (= ?x918 0)))))
 (let ((?x2050 (* 2 ?x2033)))
 (let ((?x2719 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x2730 (* (- 2) ?x2719)))
 (let ((?x2707 (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2702 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x528 (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x445 (* ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x1706 (* (- 1) ?x1678)))
 (let ((?x1644 (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1668 (* 3 ?x1644)))
 (let ((?x2438 (* ?x524 ?x524 ?x524 ?x70)))
 (let ((?x2677 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x2678 (* 2 ?x2677)))
 (let ((?x2676 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1490 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2649 (* (- 3) ?x1490)))
 (let ((?x1431 (* ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x1458 (* (- 1) ?x1450)))
 (let ((?x2804 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1420 (* (- 4) ?x2804)))
 (let ((?x2058 (+ ?x1420 ?x1458 (* 2 (* ?x326 ?x524 ?x524 ?x524 ?x70)) ?x1431 ?x2649 ?x2676 ?x2678 ?x2438 (* (- 1) ?x807) ?x1668 ?x1706 ?x445 ?x528 ?x2702 ?x2707 ?x2730 (* (- 1) ?x2745) (* (- 3) ?x2002) ?x2050)))
 (let (($x1414 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x2041 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x1446 (and $x141 (= ?x2041 (- 4)) $x1414 $x700 (not (= ?x2058 0)))))
 (rewrite (= $x1446 $x592))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x108 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x71 (+ n 1)))
 (let ((?x70 (+ k m)))
 (let ((?x75 (+ m 6)))
 (let ((?x69 (+ c k)))
 (let ((?x74 (- (* (- 4) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x78 (+ ?x74 (* 2 ?x70 ?x75 ?x75 ?x75 ?x71) (* ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x84 (+ (- ?x78 (* 3 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x70 ?x75 ?x75 ?x75))))
 (let ((?x88 (+ (- ?x84 (* ?x70 ?x70 ?x75 ?x75 ?x75)) (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x95 (+ (- ?x88 (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x70 ?x70 ?x75 ?x75 ?x75 ?x71) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x100 (- (- ?x95 (* 2 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x103 (+ (- ?x100 (* 3 ?x69 ?x70 ?x75 ?x75 ?x75)) (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x103 0)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x1187 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x70 (+ k m)))
 (let ((?x326 (+ 1 n)))
 (let ((?x2033 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x2050 (* 2 ?x2033)))
 (let ((?x69 (+ c k)))
 (let ((?x524 (+ 6 m)))
 (let ((?x2002 (* ?x524 ?x524 ?x524 ?x70 ?x69)))
 (let ((?x2719 (* ?x326 ?x326 ?x326 ?x69 ?x69 ?x69)))
 (let ((?x2730 (* (- 2) ?x2719)))
 (let ((?x2707 (* ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x2702 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x528 (* ?x326 ?x524 ?x524 ?x524 ?x70 ?x70)))
 (let ((?x445 (* ?x326 ?x326 ?x70 ?x70 ?x70)))
 (let ((?x1678 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x1706 (* (- 1) ?x1678)))
 (let ((?x1644 (* ?x326 ?x326 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x1668 (* 3 ?x1644)))
 (let ((?x2438 (* ?x524 ?x524 ?x524 ?x70)))
 (let ((?x2677 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x2678 (* 2 ?x2677)))
 (let ((?x2676 (* ?x326 ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1490 (* ?x326 ?x326 ?x70 ?x70 ?x69 ?x69)))
 (let ((?x2649 (* (- 3) ?x1490)))
 (let ((?x1431 (* ?x326 ?x326 ?x70 ?x70 ?x69)))
 (let ((?x1450 (* ?x326 ?x326 ?x326 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x1458 (* (- 1) ?x1450)))
 (let ((?x2804 (* ?x326 ?x326 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x1420 (* (- 4) ?x2804)))
 (let ((?x2058 (+ ?x1420 ?x1458 (* 2 (* ?x326 ?x524 ?x524 ?x524 ?x70)) ?x1431 ?x2649 ?x2676 ?x2678 ?x2438 (* (- 1) (* ?x524 ?x524 ?x524 ?x70 ?x70)) ?x1668 ?x1706 ?x445 ?x528 ?x2702 ?x2707 ?x2730 (* (- 1) (* ?x326 ?x326 ?x69 ?x69 ?x69)) (* (- 3) ?x2002) ?x2050)))
 (let (($x700 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x1414 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x2041 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x141 (= (+ m (* (- 6) n)) 6)))
 (let (($x1446 (and $x141 (= ?x2041 (- 4)) $x1414 $x700 (not (= ?x2058 0)))))
 (let ((?x71 (+ n 1)))
 (let ((?x74 (- (* (- 4) ?x69 ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71 ?x71))))
 (let ((?x78 (+ ?x74 (* 2 ?x70 (+ m 6) (+ m 6) (+ m 6) ?x71) (* ?x69 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x84 (+ (- ?x78 (* 3 ?x69 ?x69 ?x70 ?x70 ?x71 ?x71)) (* ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* 2 ?x69 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x70 (+ m 6) (+ m 6) (+ m 6)))))
 (let ((?x86 (- ?x84 (* ?x70 ?x70 (+ m 6) (+ m 6) (+ m 6)))))
 (let ((?x90 (- (+ ?x86 (* 3 ?x69 ?x69 ?x69 ?x69 ?x71 ?x71)) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71))))
 (let ((?x95 (+ ?x90 (* ?x70 ?x70 ?x70 ?x71 ?x71) (* ?x70 ?x70 (+ m 6) (+ m 6) (+ m 6) ?x71) (* ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71) (* ?x69 ?x69 ?x69 ?x70 ?x71 ?x71))))
 (let ((?x100 (- (- ?x95 (* 2 ?x69 ?x69 ?x69 ?x71 ?x71 ?x71)) (* ?x69 ?x69 ?x69 ?x71 ?x71))))
 (let ((?x101 (- ?x100 (* 3 ?x69 ?x70 (+ m 6) (+ m 6) (+ m 6)))))
 (let (($x106 (or (not (= (+ ?x101 (* 2 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71)) 0)))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x107 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 $x106)))
 (rewrite (= $x107 $x1446)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x109 (asserted $x108)))
 (let ((@x2732 (mp (mp @x109 (quant-intro (proof-bind ?x1187) (= $x108 $x1500)) $x1500) (rewrite (= $x1500 $x1500)) $x1500)))
 (let ((@x2622 (mp (mp @x2732 (quant-intro (proof-bind ?x1689) (= $x1500 $x689)) $x689) (quant-intro (proof-bind ?x2774) (= $x689 $x2772)) $x2772)))
 (let ((@x969 (mp~ (mp @x2622 (quant-intro (proof-bind ?x2302) (= $x2772 $x1218)) $x1218) (sk (~ $x1218 $x2343)) $x2343)))
 (let ((@x2349 (mp @x969 (rewrite (= $x2343 $x794)) $x794)))
 (let ((@x206 (and-elim @x2349 $x194)))
 (let ((@x2194 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x194) $x2386)) @x206 $x2386)))
 (let (($x2392 (>= ?x773 1)))
 (let ((@x2186 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x194) $x2392)) @x206 $x2392)))
 (let (($x2385 (<= ?x2029 6)))
 (let ((@x2345 (and-elim @x2349 $x2692)))
 (let ((@x2423 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2692) $x2385)) @x2345 $x2385)))
 (let (($x2382 (>= ?x2029 6)))
 (let ((@x2165 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2692) $x2382)) @x2345 $x2382)))
 (let (($x2406 (<= ?x971 4)))
 (let ((@x204 (and-elim @x2349 $x644)))
 (let ((@x591 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x644) $x2406)) @x204 $x2406)))
 (let (($x2388 (>= ?x971 4)))
 (let ((@x2410 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x644) $x2388)) @x204 $x2388)))
 (let (($x2400 (<= ?x640 1)))
 (let ((@x201 (and-elim @x2349 $x195)))
 (let ((@x2259 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x195) $x2400)) @x201 $x2400)))
 (let (($x2399 (>= ?x640 1)))
 (let ((@x2191 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x195) $x2399)) @x201 $x2399)))
 (let (($x2427 (not (<= ?x2378 0))))
 (let (($x587 (>= ?x2378 0)))
 (let ((@x1695 ((_ th-lemma arith) (hypothesis (not $x587)) @x2191 @x2259 @x2191 @x2259 @x2186 @x2194 @x2191 @x2259 @x2186 @x2194 @x2191 @x2259 @x2186 @x2194 @x2410 @x591 @x2165 @x2423 @x2191 @x2259 @x2165 @x2423 @x2165 @x2423 @x2191 @x2259 @x2410 @x591 @x2165 @x2423 @x2186 @x2194 false)))
 (let ((@x2398 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x3003 $x2427 (not $x587))) (and-elim @x2349 $x2348) (or $x2427 (not $x587)))))
 ((_ th-lemma arith) (unit-resolution @x2398 (lemma @x1695 $x587) $x2427) @x2191 @x2259 @x2191 @x2259 @x2186 @x2194 @x2191 @x2259 @x2186 @x2194 @x2191 @x2259 @x2186 @x2194 @x2410 @x591 @x2165 @x2423 @x2191 @x2259 @x2165 @x2423 @x2165 @x2423 @x2191 @x2259 @x2410 @x591 @x2165 @x2423 @x2186 @x2194 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        23
 :arith-assert-upper        11
 :arith-branch-var          1
 :arith-conflicts           2
 :arith-eq-adapter          5
 :arith-gcd-tests           11
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             542
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        2
 :arith-pivots              9
 :arith-row-summations      16
 :arith-tableau-max-columns 109
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                4.16
 :memory                    3.46
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                2000012
 :num-checks                1
 :propagations              10
 :rlimit-count              20558
 :time                      0.02
 :total-time                0.03)
