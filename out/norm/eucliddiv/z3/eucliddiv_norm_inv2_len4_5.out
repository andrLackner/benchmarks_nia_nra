unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x82 (* y00 q00)))
 (let ((?x519 (+ r00 ?x82 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x1147 (<= ?x519 0)))
 (let (($x471 (= ?x519 0)))
 (let ((?x1343 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x549 (* y00 y00 y00 y00 r00)))
 (let ((?x516 (* (- 1) (* y00 y00 y00 q00))))
 (let ((?x433 (* (- 1) (* y00 y00 r00))))
 (let ((?x1428 (* 2 (* y00 y00 y00 r00))))
 (let ((?x217 (* r!1 r!1 r!1)))
 (let ((?x1422 (* 2 (* y00 y00 y00 y00 q00))))
 (let ((?x1212 (+ (* 4 (* y00 y00 r!1 r!1)) ?x1422 ?x217 ?x1428 ?x433 (* (- 6) (* y00 y00 y00 q00 q!2 r!1)) (* y00 y00 y00 q!2) (* (- 1) (* y00 q!2 q!2 r!1 r!1 r!1)) (* 2 (* y00 y00 q00 r!1 r!1)) (* 3 (* y00 y00 q00 q!2 r!1 r!1)) (* y00 y00 q00 q!2 q!2 r!1 r!1) ?x516 (* (- 4) (* y00 y00 y00 q00 r!1)) (* 3 (* y00 y00 y00 y00 q00 q!2)) (* (- 2) (* y00 y00 y00 q00 q!2 q!2 r!1)) (* y00 y00 y00 y00 q00 q!2 q!2) (* 3 (* y00 r00 q!2 r!1 r!1)) (* 2 (* y00 y00 q00 r!1)) ?x549 (* (- 3) (* y00 y00 y00 y00 q!2 q!2)) (* (- 1) (* y00 q00 r!1 r!1)) (* y00 y00 y00 r!1 r!1) (* y00 y00 r!1) (* (- 1) (* r00 r!1 r!1)) (* 2 (* y00 r00 r!1)) (* (- 1) (* y00 y00 y00 r00 r!1)) (* (- 2) (* y00 r!1 r!1)) (* y00 q!2 r!1 r!1) (* (- 1) (* y00 y00 y00 y00 r!1)) (* y00 r00 q!2 q!2 r!1 r!1) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) (* (- 4) (* y00 y00 r00 r!1)) (* (- 6) (* y00 y00 r00 q!2 r!1)) (* (- 2) (* y00 y00 r00 q!2 q!2 r!1)) (* 3 (* y00 y00 y00 r00 q!2)) (* 4 (* y00 y00 q!2 r!1 r!1)) (* (- 1) (* y00 y00 q!2 q!2 r!1 r!1)) (* (- 2) (* y00 y00 y00 r!1)) (* y00 y00 y00 q!2 r!1) (* 5 (* y00 y00 y00 q!2 q!2 r!1)) (* (- 2) (* y00 y00 y00 y00 q!2)) (* (- 1) (* y00 y00 q!2 q!2 q!2 r!1 r!1)) (* 2 (* y00 y00 y00 q!2 q!2 q!2 r!1)) (* (- 1) (* y00 y00 y00 y00 q!2 q!2 q!2)) (* (- 1) (* y00 y00 y00 y00 q00 r!1)) (* (- 2) (* y00 r!1 r!1 r!1)) (* (- 3) (* y00 q!2 r!1 r!1 r!1)) (* y00 y00 y00 r00 q!2 q!2) ?x1343 (* 2 (* y00 r00 r!1 r!1)) (* y00 y00 y00 y00 q!2 r!1) (* (- 2) (* y00 y00 q!2 r!1)))))
 (let (($x1259 (= ?x1212 0)))
 (let (($x488 (not $x1259)))
 (let ((?x1134 (+ y00 (* (- 1) y!0))))
 (let (($x1139 (= ?x1134 0)))
 (let (($x1215 (and $x1139 $x471 $x488)))
 (let ((?x1172 (+ (* 2 (* r!1 r!1 y00 y00 q00)) (* 3 (* q!2 r!1 r!1 y00 y00 q00)) (* q!2 q!2 r!1 r!1 y00 y00 q00) (* (- 4) (* r!1 y00 y00 y00 q00)) (* (- 6) (* q!2 r!1 y00 y00 y00 q00)) (* (- 2) (* q!2 q!2 r!1 y00 y00 y00 q00)) ?x1422 (* 3 (* q!2 y00 y00 y00 y00 q00)) (* q!2 q!2 y00 y00 y00 y00 q00) (* 2 (* r!1 r!1 y00 r00)) (* 3 (* q!2 r!1 r!1 y00 r00)) (* q!2 q!2 r!1 r!1 y00 r00) (* (- 4) (* r!1 y00 y00 r00)) (* (- 6) (* q!2 r!1 y00 y00 r00)) (* (- 2) (* q!2 q!2 r!1 y00 y00 r00)) ?x1428 (* 3 (* q!2 y00 y00 y00 r00)) (* q!2 q!2 y00 y00 y00 r00) (* (- 1) (* r!1 r!1 r00)) (* 2 (* r!1 y00 r00)) ?x433 (* (- 1) (* r!1 r!1 y00 q00)) (* 2 (* r!1 y00 y00 q00)) ?x516 (* (- 1) (* r!1 y00 y00 y00 r00)) ?x549 (* r!1 r!1 y00 y00 y00) (* (- 1) (* r!1 y00 y00 y00 y00)) ?x217 (* (- 2) (* r!1 r!1 y00)) (* r!1 y00 y00) (* q!2 r!1 y00 y00 y00 y00) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* q!2 r!1 r!1 y00) (* (- 2) (* q!2 r!1 y00 y00)) (* q!2 y00 y00 y00) (* (- 2) (* r!1 r!1 r!1 y00)) (* (- 3) (* q!2 r!1 r!1 r!1 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 r!1 y00)) (* 4 (* r!1 r!1 y00 y00)) (* 4 (* q!2 r!1 r!1 y00 y00)) (* (- 1) (* q!2 q!2 r!1 r!1 y00 y00)) (* (- 2) (* r!1 y00 y00 y00)) (* q!2 r!1 y00 y00 y00) (* 5 (* q!2 q!2 r!1 y00 y00 y00)) (* (- 2) (* q!2 y00 y00 y00 y00)) (* (- 3) (* q!2 q!2 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 r!1 r!1 y00 y00)) (* 2 (* q!2 q!2 q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00 q00)) ?x1343)))
 (let (($x1028 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x82)) 0) (not (= ?x1172 0)))))
 (let (($x95 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1343 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x549 (* y00 y00 y00 y00 r00)))
 (let ((?x516 (* (- 1) (* y00 y00 y00 q00))))
 (let ((?x433 (* (- 1) (* y00 y00 r00))))
 (let ((?x1428 (* 2 (* y00 y00 y00 r00))))
 (let ((?x1422 (* 2 (* y00 y00 y00 y00 q00))))
 (let ((?x1430 (+ (* 2 (* r r y00 y00 q00)) (* 3 (* q r r y00 y00 q00)) (* q q r r y00 y00 q00) (* (- 4) (* r y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 q00)) (* (- 2) (* q q r y00 y00 y00 q00)) ?x1422 (* 3 (* q y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 q00) (* 2 (* r r y00 r00)) (* 3 (* q r r y00 r00)) (* q q r r y00 r00) (* (- 4) (* r y00 y00 r00)) (* (- 6) (* q r y00 y00 r00)) (* (- 2) (* q q r y00 y00 r00)) ?x1428 (* 3 (* q y00 y00 y00 r00)) (* q q y00 y00 y00 r00) (* (- 1) (* r r r00)) (* 2 (* r y00 r00)) ?x433 (* (- 1) (* r r y00 q00)) (* 2 (* r y00 y00 q00)) ?x516 (* (- 1) (* r y00 y00 y00 r00)) ?x549 (* r r y00 y00 y00) (* (- 1) (* r y00 y00 y00 y00)) (* r r r) (* (- 2) (* r r y00)) (* r y00 y00) (* q r y00 y00 y00 y00) (* (- 1) (* q y00 y00 y00 y00 y00)) (* q r r y00) (* (- 2) (* q r y00 y00)) (* q y00 y00 y00) (* (- 2) (* r r r y00)) (* (- 3) (* q r r r y00)) (* (- 1) (* q q r r r y00)) (* 4 (* r r y00 y00)) (* 4 (* q r r y00 y00)) (* (- 1) (* q q r r y00 y00)) (* (- 2) (* r y00 y00 y00)) (* q r y00 y00 y00) (* 5 (* q q r y00 y00 y00)) (* (- 2) (* q y00 y00 y00 y00)) (* (- 3) (* q q y00 y00 y00 y00)) (* (- 1) (* q q q r r y00 y00)) (* 2 (* q q q r y00 y00 y00)) (* (- 1) (* q q q y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 q00)) ?x1343)))
 (let (($x112 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (and (= (+ y (* (- 1) y00)) 0) $x112 (not (= ?x1430 0))))))))))) :qid k!29))
 ))
 (let (($x841 (exists ((q Int) (r Int) (y Int) )(! (let ((?x80 (* (- 1) y00)))
 (let ((?x734 (+ r ?x80)))
 (let ((?x726 (+ 1 q)))
 (let ((?x918 (+ (* q00 y00 y00 ?x726 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x726 ?x734 ?x734) (* (- 1) (* r00 ?x734 ?x734)) (* (- 1) (* q00 y00 ?x734 ?x734)) (* (- 1) (* r00 y00 y00 y00 ?x734)) (* y00 y00 y00 ?x734 ?x734) (* ?x734 ?x734 ?x734) (* y00 y00 y00 y00 ?x726 ?x734) (* y00 ?x726 ?x734 ?x734) (* (- 1) (* y00 ?x726 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* y00 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* q00 y00 y00 y00 y00 ?x734)) (* q00 y00 y00 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x734 ?x734))))
 (let (($x910 (not (= ?x918 0))))
 (let (($x416 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x416 $x910))))))) :qid k!29))
 ))
 (let ((?x843 (lambda ((q Int) (r Int) (y Int) )(let ((?x1343 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x549 (* y00 y00 y00 y00 r00)))
 (let ((?x516 (* (- 1) (* y00 y00 y00 q00))))
 (let ((?x433 (* (- 1) (* y00 y00 r00))))
 (let ((?x1428 (* 2 (* y00 y00 y00 r00))))
 (let ((?x1422 (* 2 (* y00 y00 y00 y00 q00))))
 (let ((?x1430 (+ (* 2 (* r r y00 y00 q00)) (* 3 (* q r r y00 y00 q00)) (* q q r r y00 y00 q00) (* (- 4) (* r y00 y00 y00 q00)) (* (- 6) (* q r y00 y00 y00 q00)) (* (- 2) (* q q r y00 y00 y00 q00)) ?x1422 (* 3 (* q y00 y00 y00 y00 q00)) (* q q y00 y00 y00 y00 q00) (* 2 (* r r y00 r00)) (* 3 (* q r r y00 r00)) (* q q r r y00 r00) (* (- 4) (* r y00 y00 r00)) (* (- 6) (* q r y00 y00 r00)) (* (- 2) (* q q r y00 y00 r00)) ?x1428 (* 3 (* q y00 y00 y00 r00)) (* q q y00 y00 y00 r00) (* (- 1) (* r r r00)) (* 2 (* r y00 r00)) ?x433 (* (- 1) (* r r y00 q00)) (* 2 (* r y00 y00 q00)) ?x516 (* (- 1) (* r y00 y00 y00 r00)) ?x549 (* r r y00 y00 y00) (* (- 1) (* r y00 y00 y00 y00)) (* r r r) (* (- 2) (* r r y00)) (* r y00 y00) (* q r y00 y00 y00 y00) (* (- 1) (* q y00 y00 y00 y00 y00)) (* q r r y00) (* (- 2) (* q r y00 y00)) (* q y00 y00 y00) (* (- 2) (* r r r y00)) (* (- 3) (* q r r r y00)) (* (- 1) (* q q r r r y00)) (* 4 (* r r y00 y00)) (* 4 (* q r r y00 y00)) (* (- 1) (* q q r r y00 y00)) (* (- 2) (* r y00 y00 y00)) (* q r y00 y00 y00) (* 5 (* q q r y00 y00 y00)) (* (- 2) (* q y00 y00 y00 y00)) (* (- 3) (* q q y00 y00 y00 y00)) (* (- 1) (* q q q r r y00 y00)) (* 2 (* q q q r y00 y00 y00)) (* (- 1) (* q q q y00 y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00 q00)) ?x1343)))
 (let (($x112 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x245 (and (= (+ y (* (- 1) y00)) 0) $x112 (not (= ?x1430 0)))))
 (let ((?x80 (* (- 1) y00)))
 (let ((?x734 (+ r ?x80)))
 (let ((?x726 (+ 1 q)))
 (let ((?x918 (+ (* q00 y00 y00 ?x726 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x726 ?x734 ?x734) (* (- 1) (* r00 ?x734 ?x734)) (* (- 1) (* q00 y00 ?x734 ?x734)) (* (- 1) (* r00 y00 y00 y00 ?x734)) (* y00 y00 y00 ?x734 ?x734) (* ?x734 ?x734 ?x734) (* y00 y00 y00 y00 ?x726 ?x734) (* y00 ?x726 ?x734 ?x734) (* (- 1) (* y00 ?x726 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* y00 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* q00 y00 y00 y00 y00 ?x734)) (* q00 y00 y00 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x734 ?x734))))
 (let (($x910 (not (= ?x918 0))))
 (let (($x416 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x439 (and (= (+ y00 (* (- 1) y)) 0) $x416 $x910)))
 (rewrite (= $x439 $x245)))))))))))))))))))
 ))
 (let (($x916 (exists ((q Int) (r Int) (y Int) )(! (let ((?x80 (* (- 1) y00)))
 (let ((?x734 (+ r ?x80)))
 (let ((?x726 (+ 1 q)))
 (let ((?x918 (+ (* q00 y00 y00 ?x726 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x726 ?x734 ?x734) (* (- 1) (* r00 ?x734 ?x734)) (* (- 1) (* q00 y00 ?x734 ?x734)) (* (- 1) (* r00 y00 y00 y00 ?x734)) (* y00 y00 y00 ?x734 ?x734) (* ?x734 ?x734 ?x734) (* y00 y00 y00 y00 ?x726 ?x734) (* y00 ?x726 ?x734 ?x734) (* (- 1) (* y00 ?x726 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* y00 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* q00 y00 y00 y00 y00 ?x734)) (* q00 y00 y00 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x734 ?x734))))
 (let (($x910 (not (= ?x918 0))))
 (let (($x416 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x80 y) 0) $x416 $x910))))))) :qid k!29))
 ))
 (let ((?x1125 (lambda ((q Int) (r Int) (y Int) )(let ((?x80 (* (- 1) y00)))
 (let ((?x734 (+ r ?x80)))
 (let ((?x726 (+ 1 q)))
 (let ((?x918 (+ (* q00 y00 y00 ?x726 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x726 ?x734 ?x734) (* (- 1) (* r00 ?x734 ?x734)) (* (- 1) (* q00 y00 ?x734 ?x734)) (* (- 1) (* r00 y00 y00 y00 ?x734)) (* y00 y00 y00 ?x734 ?x734) (* ?x734 ?x734 ?x734) (* y00 y00 y00 y00 ?x726 ?x734) (* y00 ?x726 ?x734 ?x734) (* (- 1) (* y00 ?x726 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* y00 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* q00 y00 y00 y00 y00 ?x734)) (* q00 y00 y00 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x734 ?x734))))
 (let (($x910 (not (= ?x918 0))))
 (let (($x416 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x439 (and (= (+ y00 (* (- 1) y)) 0) $x416 $x910)))
 (let (($x632 (and (= (+ ?x80 y) 0) $x416 $x910)))
 (rewrite (= $x632 $x439)))))))))))
 ))
 (let (($x75 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x46 (+ (* ?x42 ?x42 q00 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 r00 y00))))
 (let ((?x52 (- (- (- ?x46 (* ?x43 ?x43 r00)) (* q00 ?x43 ?x43 y00)) (* ?x43 r00 y00 y00 y00))))
 (let ((?x57 (+ ?x52 (* ?x43 ?x43 y00 y00 y00) (* ?x43 ?x43 ?x43) (* ?x42 ?x43 y00 y00 y00 y00) (* ?x42 ?x43 ?x43 y00))))
 (let ((?x64 (- (- ?x57 (* ?x42 ?x42 ?x43 ?x43 ?x43 y00)) (* ?x42 ?x42 ?x43 ?x43 y00 y00))))
 (let ((?x66 (- (- ?x64 (* ?x42 ?x43 ?x43 ?x43 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00))))
 (let ((?x70 (+ (- ?x66 (* q00 ?x43 y00 y00 y00 y00)) (* ?x42 q00 ?x43 ?x43 y00 y00) (* ?x42 ?x43 ?x43 r00 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x70 0)))))))))))) :qid k!29))
 ))
 (let ((?x413 (lambda ((q Int) (r Int) (y Int) )(let ((?x80 (* (- 1) y00)))
 (let ((?x734 (+ r ?x80)))
 (let ((?x726 (+ 1 q)))
 (let ((?x918 (+ (* q00 y00 y00 ?x726 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x726 ?x734 ?x734) (* (- 1) (* r00 ?x734 ?x734)) (* (- 1) (* q00 y00 ?x734 ?x734)) (* (- 1) (* r00 y00 y00 y00 ?x734)) (* y00 y00 y00 ?x734 ?x734) (* ?x734 ?x734 ?x734) (* y00 y00 y00 y00 ?x726 ?x734) (* y00 ?x726 ?x734 ?x734) (* (- 1) (* y00 ?x726 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* y00 ?x726 ?x734 ?x734 ?x734)) (* (- 1) (* y00 y00 ?x726 ?x726 ?x726 ?x734 ?x734)) (* (- 1) (* q00 y00 y00 y00 y00 ?x734)) (* q00 y00 y00 ?x726 ?x734 ?x734) (* r00 y00 ?x726 ?x734 ?x734))))
 (let (($x910 (not (= ?x918 0))))
 (let (($x416 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x632 (and (= (+ ?x80 y) 0) $x416 $x910)))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x46 (+ (* ?x42 ?x42 q00 ?x43 ?x43 y00 y00) (* ?x42 ?x42 ?x43 ?x43 r00 y00))))
 (let ((?x52 (- (- (- ?x46 (* ?x43 ?x43 r00)) (* q00 ?x43 ?x43 y00)) (* ?x43 r00 y00 y00 y00))))
 (let ((?x57 (+ ?x52 (* ?x43 ?x43 y00 y00 y00) (* ?x43 ?x43 ?x43) (* ?x42 ?x43 y00 y00 y00 y00) (* ?x42 ?x43 ?x43 y00))))
 (let ((?x64 (- (- ?x57 (* ?x42 ?x42 ?x43 ?x43 ?x43 y00)) (* ?x42 ?x42 ?x43 ?x43 y00 y00))))
 (let ((?x66 (- (- ?x64 (* ?x42 ?x43 ?x43 ?x43 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43 y00 y00))))
 (let ((?x70 (+ (- ?x66 (* q00 ?x43 y00 y00 y00 y00)) (* ?x42 q00 ?x43 ?x43 y00 y00) (* ?x42 ?x43 ?x43 r00 y00))))
 (let (($x74 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x70 0))))))
 (rewrite (= $x74 $x632)))))))))))))))))))
 ))
 (let ((@x76 (asserted $x75)))
 (let ((@x396 (mp (mp @x76 (quant-intro (proof-bind ?x413) (= $x75 $x916)) $x916) (rewrite (= $x916 $x916)) $x916)))
 (let ((@x1024 (mp (mp @x396 (quant-intro (proof-bind ?x1125) (= $x916 $x841)) $x841) (quant-intro (proof-bind ?x843) (= $x841 $x95)) $x95)))
 (let ((@x485 (mp (mp~ @x1024 (sk (~ $x95 $x1028)) $x1028) (rewrite (= $x1028 $x1215)) $x1215)))
 (let ((@x1148 (and-elim @x485 $x471)))
 (let ((@x660 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x471) $x1147)) @x1148 $x1147)))
 (let (($x518 (>= ?x519 0)))
 (let ((@x1144 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x471) $x518)) @x1148 $x518)))
 (let (($x1364 (<= ?x1134 0)))
 (let ((@x492 (and-elim @x485 $x1139)))
 (let ((@x1214 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1139) $x1364)) @x492 $x1364)))
 (let (($x1146 (>= ?x1134 0)))
 (let ((@x501 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1139) $x1146)) @x492 $x1146)))
 (let (($x1668 (not (<= ?x1212 0))))
 (let (($x1365 (>= ?x1212 0)))
 (let ((@x1363 (lemma ((_ th-lemma arith) (hypothesis (not $x1365)) @x501 @x1214 @x1144 @x660 false) $x1365)))
 (let ((@x622 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1259 $x1668 (not $x1365))) (and-elim @x485 $x488) (or $x1668 (not $x1365)))))
 ((_ th-lemma arith) (unit-resolution @x622 @x1363 $x1668) @x501 @x1214 @x1144 @x660 false))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        10
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             466
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              3
 :arith-tableau-max-columns 73
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.78
 :memory                    3.28
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1249105
 :num-checks                1
 :propagations              6
 :rlimit-count              6879
 :time                      0.01
 :total-time                0.02)
