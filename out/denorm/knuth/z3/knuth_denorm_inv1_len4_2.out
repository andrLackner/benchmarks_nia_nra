unsat
((set-logic NIA)
(declare-fun x!0 () Int)
(declare-fun d!1 () Int)
(declare-fun q!3 () Int)
(declare-fun r!2 () Int)
(proof
(let ((?x41 (* d00 d00 q00)))
 (let ((?x32 (* 8 r00)))
 (let ((?x1367 (+ ?x32 ?x41 (* 4 (* d00 x00)) (* (- 2) (* d00 q00)) (* (- 4) (* r00 d00)) (* (- 8) r!2) (* 2 (* d!1 q!3)) (* 4 (* d!1 r!2)) (* (- 1) (* d!1 d!1 q!3)) (* (- 4) (* d!1 x!0)))))
 (let (($x1245 (>= ?x1367 0)))
 (let (($x288 (= ?x1367 0)))
 (let ((?x1580 (* d!1 d!1 q!3)))
 (let ((?x1770 (* 8 r!2)))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x739 (+ ?x172 ?x220 ?x204 ?x270 ?x308 ?x1770 (* (- 2) (* d!1 q!3)) (* (- 4) (* d!1 r!2)) ?x1580 (* 4 (* d!1 x!0)))))
 (let ((?x773 (* (- 1) x!0)))
 (let ((?x1915 (* 2 r!2)))
 (let ((?x866 (+ ?x1915 q!3 ?x773)))
 (let ((?x468 (+ 2 d!1)))
 (let ((?x1782 (* (- 2) (* d!1 d!1 r!2 r!2 r!2 r!2))))
 (let ((?x1381 (* d!1 d!1 r!2 r!2 r!2 x!0)))
 (let ((?x1372 (* (- 8) (* d!1 r!2 r!2 r!2 r!2))))
 (let ((?x1377 (* 4 (* d!1 r!2 r!2 r!2 x!0))))
 (let ((?x1498 (* 4 (* r!2 r!2 r!2 x!0))))
 (let ((?x274 (* (- 8) (* r!2 r!2 r!2 r!2))))
 (let ((?x870 (+ (* (- 4) (* r!2 r!2 q!3 q!3 q!3 q!3 x!0)) ?x274 (* 8 (* r!2 r!2 r!2 r!2 q!3 q!3 q!3)) (* (- 2) (* d!1 r!2 r!2 q!3 q!3 q!3 q!3 x!0)) ?x1498 (* d!1 r!2 r!2 q!3 q!3 q!3 x!0 x!0) (* 2 (* r!2 r!2 q!3 q!3 q!3 q!3 q!3)) (* 4 (* d!1 r!2 r!2 r!2 r!2 q!3 q!3 q!3)) ?x1377 (* d!1 r!2 r!2 q!3 q!3 q!3 q!3 q!3) (* (- 4) (* d!1 r!2 r!2 r!2 q!3 q!3 q!3 x!0)) ?x1372 ?x1381 (* 8 (* r!2 r!2 r!2 q!3 q!3 q!3 q!3)) ?x1782 (* (- 8) (* r!2 r!2 r!2 q!3 q!3 q!3 x!0)) (* 4 (* d!1 r!2 r!2 r!2 q!3 q!3 q!3 q!3)) (* 2 (* r!2 r!2 q!3 q!3 q!3 x!0 x!0)) (* (- 1) (* ?x468 ?x468 ?x468 ?x866 ?x866 ?x866 r!2 r!2 r!2)))))
 (let ((?x876 (* ?x870 ?x739)))
 (let (($x448 (= ?x876 0)))
 (let (($x1720 (not $x448)))
 (let ((?x849 (+ 2 d!1 ?x1915 q!3 ?x773)))
 (let ((?x1678 (* r!2 r!2 r!2)))
 (let ((?x1768 (* 8 ?x1678)))
 (let ((?x1581 (+ 4 q!3)))
 (let ((?x816 (+ ?x274 (* ?x468 ?x1581 ?x1581 ?x1581 ?x849 ?x849 r!2 r!2) ?x1498 (* (- 1) (* d!1 d!1 d!1 r!2 r!2 r!2)) ?x1377 (* 4 (* d!1 r!2 r!2 r!2)) ?x1372 ?x1381 ?x1782 ?x1768 (* (- 2) (* d!1 d!1 r!2 r!2 r!2)) (* (- 1) (* ?x468 ?x468 ?x468 ?x849 ?x849 ?x849 r!2 r!2 r!2)))))
 (let ((?x1186 (* ?x816 ?x739)))
 (let (($x548 (= ?x1186 0)))
 (let ((?x1536 (* (- 16) ?x1678)))
 (let ((?x1777 (* (- 2) d!1)))
 (let ((?x1280 (+ (- 4) ?x1777 ?x1915 q!3 ?x773)))
 (let ((?x1358 (+ (- 8) q!3)))
 (let ((?x1791 (+ ?x274 ?x1498 (* 2 (* d!1 d!1 d!1 r!2 r!2 r!2)) ?x1377 (* ?x1358 ?x1358 ?x1358 ?x468 ?x1280 ?x1280 r!2 r!2) (* (- 1) (* ?x468 ?x468 ?x468 ?x1280 ?x1280 ?x1280 r!2 r!2 r!2)) (* (- 8) (* d!1 r!2 r!2 r!2)) ?x1372 ?x1381 ?x1782 ?x1536 (* 4 (* d!1 d!1 r!2 r!2 r!2)))))
 (let ((?x1784 (* ?x1791 ?x739)))
 (let (($x1891 (= ?x1784 0)))
 (let ((?x545 (* (- 8) ?x1678)))
 (let ((?x599 (* (- 1) d!1)))
 (let ((?x1430 (+ (- 2) ?x599 ?x1915 q!3 ?x773)))
 (let ((?x1162 (+ (- 4) q!3)))
 (let ((?x731 (* d!1 d!1 d!1 r!2 r!2 r!2)))
 (let ((?x1445 (+ ?x274 ?x1498 ?x731 ?x1377 (* (- 4) (* d!1 r!2 r!2 r!2)) ?x1372 ?x1381 (* (- 1) (* ?x468 ?x468 ?x468 ?x1430 ?x1430 ?x1430 r!2 r!2 r!2)) (* ?x1162 ?x1162 ?x1162 ?x468 ?x1430 ?x1430 r!2 r!2) ?x1782 ?x545 (* 2 (* d!1 d!1 r!2 r!2 r!2)))))
 (let ((?x693 (* ?x1445 ?x739)))
 (let (($x1702 (= ?x693 0)))
 (let (($x264 (not $x1702)))
 (let (($x1778 (or $x264 (not $x1891) (not $x548) $x1720)))
 (let (($x1365 (and $x288 $x1778)))
 (let ((?x1955 (+ ?x1770 ?x172 ?x220 ?x204 ?x270 ?x308 (* 4 (* x!0 d!1)) (* (- 2) (* q!3 d!1)) (* (- 4) (* r!2 d!1)) (* q!3 d!1 d!1))))
 (let ((?x1529 (* (- 2) (* r!2 r!2 r!2 r!2 d!1 d!1))))
 (let ((?x1167 (* (- 8) (* r!2 r!2 r!2 r!2 d!1))))
 (let ((?x412 (* r!2 r!2 r!2 x!0 d!1 d!1)))
 (let ((?x1060 (+ q!3 ?x1915 ?x773)))
 (let ((?x1532 (* 4 (* r!2 r!2 r!2 x!0 d!1))))
 (let ((?x644 (+ (* q!3 q!3 q!3 q!3 q!3 r!2 r!2 d!1) (* 4 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2 d!1)) (* 4 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2 d!1)) (* 8 (* q!3 q!3 q!3 q!3 r!2 r!2 r!2)) (* (- 2) (* q!3 q!3 q!3 q!3 r!2 r!2 x!0 d!1)) (* (- 8) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0)) (* (- 4) (* q!3 q!3 q!3 r!2 r!2 r!2 x!0 d!1)) ?x1532 (* (- 1) (* ?x468 ?x468 ?x468 ?x1060 ?x1060 ?x1060 r!2 r!2 r!2)) (* 2 (* q!3 q!3 q!3 r!2 r!2 x!0 x!0)) ?x412 (* 2 (* q!3 q!3 q!3 q!3 q!3 r!2 r!2)) (* q!3 q!3 q!3 r!2 r!2 x!0 x!0 d!1) (* 8 (* q!3 q!3 q!3 r!2 r!2 r!2 r!2)) ?x274 ?x1167 ?x1529 (* (- 4) (* q!3 q!3 q!3 q!3 r!2 r!2 x!0)) ?x1498)))
 (let ((?x196 (* r!2 r!2 r!2 d!1 d!1 d!1)))
 (let ((?x1644 (+ (- 2) q!3 ?x1915 ?x773 ?x599)))
 (let ((?x392 (+ ?x1532 (* (- 1) (* ?x468 ?x468 ?x468 ?x1644 ?x1644 ?x1644 r!2 r!2 r!2)) ?x412 (* ?x1162 ?x1162 ?x1162 ?x468 ?x1644 ?x1644 r!2 r!2) ?x274 ?x1167 ?x1529 ?x545 (* (- 4) (* r!2 r!2 r!2 d!1)) (* 2 (* r!2 r!2 r!2 d!1 d!1)) ?x1498 ?x196)))
 (let ((?x506 (+ 2 q!3 ?x1915 ?x773 d!1)))
 (let ((?x1125 (+ ?x1532 (* ?x468 ?x1581 ?x1581 ?x1581 ?x506 ?x506 r!2 r!2) ?x412 (* (- 1) (* ?x468 ?x468 ?x468 ?x506 ?x506 ?x506 r!2 r!2 r!2)) ?x274 ?x1167 ?x1529 ?x1768 (* 4 (* r!2 r!2 r!2 d!1)) (* (- 2) (* r!2 r!2 r!2 d!1 d!1)) ?x1498 (* (- 1) ?x196))))
 (let ((?x1039 (+ (- 4) q!3 ?x1915 ?x773 ?x1777)))
 (let ((?x1645 (+ (* ?x1358 ?x1358 ?x1358 ?x468 ?x1039 ?x1039 r!2 r!2) (* (- 1) (* ?x468 ?x468 ?x468 ?x1039 ?x1039 ?x1039 r!2 r!2 r!2)) ?x1532 ?x412 ?x274 ?x1167 ?x1529 ?x1536 (* (- 8) (* r!2 r!2 r!2 d!1)) (* 4 (* r!2 r!2 r!2 d!1 d!1)) ?x1498 (* 2 ?x196))))
 (let (($x1626 (or (not (= (* ?x1645 ?x1955) 0)) (not (= (* ?x1125 ?x1955) 0)) (not (= (* ?x392 ?x1955) 0)) (not (= (* ?x644 ?x1955) 0)))))
 (let (($x379 (and (= ?x1955 0) $x1626)))
 (let (($x353 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1902 (* q d d)))
 (let ((?x1895 (* r d)))
 (let ((?x1896 (* (- 4) ?x1895)))
 (let ((?x1894 (* (- 2) (* q d))))
 (let ((?x1138 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x1530 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x1138 ?x1894 ?x1896 ?x1902)))
 (let ((?x1965 (* 4 (* r r r x))))
 (let ((?x1913 (* (- 2) (* r r r r d d))))
 (let ((?x1910 (* (- 8) (* r r r r d))))
 (let ((?x1909 (* (- 8) (* r r r r))))
 (let ((?x1490 (* q q q r r x x d)))
 (let ((?x1333 (* 2 (* q q q q q r r))))
 (let ((?x1141 (* r r r x d d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x490 (+ q ?x136 ?x169)))
 (let ((?x1854 (+ 2 d)))
 (let ((?x1023 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x490 ?x490 ?x490 r r r))))
 (let ((?x804 (* 4 (* r r r x d))))
 (let ((?x1428 (* (- 4) (* q q q r r r x d))))
 (let ((?x1427 (* (- 2) (* q q q q r r x d))))
 (let ((?x358 (* 4 (* q q q r r r r d))))
 (let ((?x348 (* 4 (* q q q q r r r d))))
 (let ((?x335 (* q q q q q r r d)))
 (let ((?x1776 (+ ?x335 ?x348 ?x358 (* 8 (* q q q q r r r)) ?x1427 (* (- 8) (* q q q r r r x)) ?x1428 ?x804 ?x1023 (* 2 (* q q q r r x x)) ?x1141 ?x1333 ?x1490 (* 8 (* q q q r r r r)) ?x1909 ?x1910 ?x1913 (* (- 4) (* q q q q r r x)) ?x1965)))
 (let ((?x1970 (* r r r d d d)))
 (let ((?x1957 (* r r r d d)))
 (let ((?x1284 (* 2 ?x1957)))
 (let ((?x1946 (* r r r d)))
 (let ((?x1943 (* (- 4) ?x1946)))
 (let ((?x1917 (* r r r)))
 (let ((?x1222 (* (- 8) ?x1917)))
 (let ((?x1192 (* (- 1) d)))
 (let ((?x767 (+ (- 2) q ?x136 ?x169 ?x1192)))
 (let ((?x1223 (+ (- 4) q)))
 (let ((?x1612 (* ?x1223 ?x1223 ?x1223 ?x1854 ?x767 ?x767 r r)))
 (let ((?x1017 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x767 ?x767 ?x767 r r r))))
 (let ((?x481 (* (+ ?x804 ?x1017 ?x1141 ?x1612 ?x1909 ?x1910 ?x1913 ?x1222 ?x1943 ?x1284 ?x1965 ?x1970) ?x1530)))
 (let ((?x1968 (* (- 1) ?x1970)))
 (let ((?x1948 (* (- 2) ?x1957)))
 (let ((?x1221 (* 4 ?x1946)))
 (let ((?x1918 (* 8 ?x1917)))
 (let ((?x1285 (+ 2 q ?x136 ?x169 d)))
 (let ((?x1349 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1285 ?x1285 ?x1285 r r r))))
 (let ((?x1971 (+ 4 q)))
 (let ((?x1127 (* ?x1854 ?x1971 ?x1971 ?x1971 ?x1285 ?x1285 r r)))
 (let ((?x1161 (* (+ ?x804 ?x1127 ?x1141 ?x1349 ?x1909 ?x1910 ?x1913 ?x1918 ?x1221 ?x1948 ?x1965 ?x1968) ?x1530)))
 (let ((?x1463 (* 2 ?x1970)))
 (let ((?x1461 (* 4 ?x1957)))
 (let ((?x1483 (* (- 16) ?x1917)))
 (let ((?x1493 (* (- 2) d)))
 (let ((?x984 (+ (- 4) q ?x136 ?x169 ?x1493)))
 (let ((?x770 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x984 ?x984 ?x984 r r r))))
 (let ((?x1484 (+ (- 8) q)))
 (let ((?x302 (* ?x1484 ?x1484 ?x1484 ?x1854 ?x984 ?x984 r r)))
 (let ((?x380 (+ ?x302 ?x770 ?x804 ?x1141 ?x1909 ?x1910 ?x1913 ?x1483 (* (- 8) ?x1946) ?x1461 ?x1965 ?x1463)))
 (let (($x1534 (or (not (= (* ?x380 ?x1530) 0)) (not (= ?x1161 0)) (not (= ?x481 0)) (not (= (* ?x1776 ?x1530) 0)))))
 (let (($x1550 (= ?x1530 0)))
 (and $x1550 $x1534))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x622 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x1902 (* q d d)))
 (let ((?x1895 (* r d)))
 (let ((?x1896 (* (- 4) ?x1895)))
 (let ((?x1894 (* (- 2) (* q d))))
 (let ((?x1469 (* 16 d)))
 (let ((?x1138 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x1712 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 8) (* d 2)) ?x1138 ?x1469 ?x1894 ?x1896 ?x1902)))
 (let ((?x1970 (* r r r d d d)))
 (let ((?x1463 (* 2 ?x1970)))
 (let ((?x1965 (* 4 (* r r r x))))
 (let ((?x1946 (* r r r d)))
 (let ((?x1464 (* 8 ?x1946)))
 (let ((?x1917 (* r r r)))
 (let ((?x1483 (* (- 16) ?x1917)))
 (let ((?x1913 (* (- 2) (* r r r r d d))))
 (let ((?x1910 (* (- 8) (* r r r r d))))
 (let ((?x1909 (* (- 8) (* r r r r))))
 (let ((?x1141 (* r r r x d d)))
 (let ((?x804 (* 4 (* r r r x d))))
 (let ((?x1493 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x984 (+ (- 4) q ?x136 ?x169 ?x1493)))
 (let ((?x1854 (+ 2 d)))
 (let ((?x770 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x984 ?x984 ?x984 r r r))))
 (let ((?x1484 (+ (- 8) q)))
 (let ((?x302 (* ?x1484 ?x1484 ?x1484 ?x1854 ?x984 ?x984 r r)))
 (let ((?x402 (+ ?x302 ?x770 ?x804 (* (- 8) (* d d r r r)) ?x1141 (* (- 8) (* d 2 r r r)) ?x1909 ?x1910 ?x1913 ?x1483 ?x1464 (* 12 (* r r r d d)) ?x1965 ?x1463)))
 (let ((?x1266 (* 8 d)))
 (let ((?x1866 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 4) (* d 2)) ?x1138 ?x1266 ?x1894 ?x1896 ?x1902)))
 (let ((?x1221 (* 4 ?x1946)))
 (let ((?x1222 (* (- 8) ?x1917)))
 (let ((?x1192 (* (- 1) d)))
 (let ((?x767 (+ (- 2) q ?x136 ?x169 ?x1192)))
 (let ((?x1223 (+ (- 4) q)))
 (let ((?x1612 (* ?x1223 ?x1223 ?x1223 ?x1854 ?x767 ?x767 r r)))
 (let ((?x1017 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x767 ?x767 ?x767 r r r))))
 (let ((?x687 (+ ?x804 ?x1017 (* (- 4) (* d d r r r)) ?x1141 (* (- 4) (* d 2 r r r)) ?x1612 ?x1909 ?x1910 ?x1913 ?x1222 ?x1221 (* 6 (* r r r d d)) ?x1965 ?x1970)))
 (let ((?x1530 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x1138 ?x1894 ?x1896 ?x1902)))
 (let ((?x1490 (* q q q r r x x d)))
 (let ((?x490 (+ q ?x136 ?x169)))
 (let ((?x1023 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x490 ?x490 ?x490 r r r))))
 (let ((?x1428 (* (- 4) (* q q q r r r x d))))
 (let ((?x1427 (* (- 2) (* q q q q r r x d))))
 (let ((?x358 (* 4 (* q q q r r r r d))))
 (let ((?x348 (* 4 (* q q q q r r r d))))
 (let ((?x335 (* q q q q q r r d)))
 (let ((?x971 (+ ?x335 ?x348 ?x358 ?x1427 (* 2 (* ?x169 ?x136 r r q q q)) ?x1428 (* 2 (* ?x136 q r r q q q)) (* 2 (* q q r r q q q)) ?x804 (* 2 (* q ?x136 r r q q q)) (* 2 (* ?x169 q r r q q q)) (* 2 (* ?x136 ?x136 r r q q q)) ?x1023 ?x1141 ?x1490 (* 2 (* ?x169 ?x169 r r q q q)) (* 2 (* ?x136 ?x169 r r q q q)) (* 2 (* q ?x169 r r q q q)) ?x1909 ?x1910 ?x1913 ?x1965)))
 (let ((?x1856 (* 2 (* d 4))))
 (let ((?x1864 (* (- 8) d)))
 (let ((?x1968 (* (- 1) ?x1970)))
 (let ((?x1957 (* r r r d d)))
 (let ((?x1948 (* (- 2) ?x1957)))
 (let ((?x1943 (* (- 4) ?x1946)))
 (let ((?x1919 (* 2 (* d 4 r r r))))
 (let ((?x1918 (* 8 ?x1917)))
 (let ((?x1285 (+ 2 q ?x136 ?x169 d)))
 (let ((?x1349 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1285 ?x1285 ?x1285 r r r))))
 (let ((?x1971 (+ 4 q)))
 (let ((?x1127 (* ?x1854 ?x1971 ?x1971 ?x1971 ?x1285 ?x1285 r r)))
 (let ((?x287 (+ ?x804 ?x1127 ?x1141 ?x1349 ?x1909 ?x1910 ?x1913 ?x1918 ?x1919 ?x1943 ?x1948 ?x1965 ?x1968)))
 (let ((?x881 (* ?x287 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x1138 ?x1864 ?x1894 ?x1856 ?x1896 ?x1902))))
 (let (($x1201 (or (not (= ?x881 0)) (not (= (* ?x971 ?x1530) 0)) (not (= (* ?x687 ?x1866) 0)) (not (= (* ?x402 ?x1712) 0)))))
 (let (($x1550 (= ?x1530 0)))
 (and $x1550 $x1201))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x733 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1902 (* q d d)))
 (let ((?x1895 (* r d)))
 (let ((?x1896 (* (- 4) ?x1895)))
 (let ((?x1894 (* (- 2) (* q d))))
 (let ((?x1138 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x1530 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x1138 ?x1894 ?x1896 ?x1902)))
 (let ((?x1965 (* 4 (* r r r x))))
 (let ((?x1913 (* (- 2) (* r r r r d d))))
 (let ((?x1910 (* (- 8) (* r r r r d))))
 (let ((?x1909 (* (- 8) (* r r r r))))
 (let ((?x1490 (* q q q r r x x d)))
 (let ((?x1333 (* 2 (* q q q q q r r))))
 (let ((?x1141 (* r r r x d d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x490 (+ q ?x136 ?x169)))
 (let ((?x1854 (+ 2 d)))
 (let ((?x1023 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x490 ?x490 ?x490 r r r))))
 (let ((?x804 (* 4 (* r r r x d))))
 (let ((?x1428 (* (- 4) (* q q q r r r x d))))
 (let ((?x1427 (* (- 2) (* q q q q r r x d))))
 (let ((?x358 (* 4 (* q q q r r r r d))))
 (let ((?x348 (* 4 (* q q q q r r r d))))
 (let ((?x335 (* q q q q q r r d)))
 (let ((?x1776 (+ ?x335 ?x348 ?x358 (* 8 (* q q q q r r r)) ?x1427 (* (- 8) (* q q q r r r x)) ?x1428 ?x804 ?x1023 (* 2 (* q q q r r x x)) ?x1141 ?x1333 ?x1490 (* 8 (* q q q r r r r)) ?x1909 ?x1910 ?x1913 (* (- 4) (* q q q q r r x)) ?x1965)))
 (let ((?x1970 (* r r r d d d)))
 (let ((?x1957 (* r r r d d)))
 (let ((?x1284 (* 2 ?x1957)))
 (let ((?x1946 (* r r r d)))
 (let ((?x1943 (* (- 4) ?x1946)))
 (let ((?x1917 (* r r r)))
 (let ((?x1222 (* (- 8) ?x1917)))
 (let ((?x1192 (* (- 1) d)))
 (let ((?x767 (+ (- 2) q ?x136 ?x169 ?x1192)))
 (let ((?x1223 (+ (- 4) q)))
 (let ((?x1612 (* ?x1223 ?x1223 ?x1223 ?x1854 ?x767 ?x767 r r)))
 (let ((?x1017 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x767 ?x767 ?x767 r r r))))
 (let ((?x481 (* (+ ?x804 ?x1017 ?x1141 ?x1612 ?x1909 ?x1910 ?x1913 ?x1222 ?x1943 ?x1284 ?x1965 ?x1970) ?x1530)))
 (let ((?x1968 (* (- 1) ?x1970)))
 (let ((?x1948 (* (- 2) ?x1957)))
 (let ((?x1221 (* 4 ?x1946)))
 (let ((?x1918 (* 8 ?x1917)))
 (let ((?x1285 (+ 2 q ?x136 ?x169 d)))
 (let ((?x1349 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1285 ?x1285 ?x1285 r r r))))
 (let ((?x1971 (+ 4 q)))
 (let ((?x1127 (* ?x1854 ?x1971 ?x1971 ?x1971 ?x1285 ?x1285 r r)))
 (let ((?x1161 (* (+ ?x804 ?x1127 ?x1141 ?x1349 ?x1909 ?x1910 ?x1913 ?x1918 ?x1221 ?x1948 ?x1965 ?x1968) ?x1530)))
 (let ((?x1463 (* 2 ?x1970)))
 (let ((?x1461 (* 4 ?x1957)))
 (let ((?x1483 (* (- 16) ?x1917)))
 (let ((?x1493 (* (- 2) d)))
 (let ((?x984 (+ (- 4) q ?x136 ?x169 ?x1493)))
 (let ((?x770 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x984 ?x984 ?x984 r r r))))
 (let ((?x1484 (+ (- 8) q)))
 (let ((?x302 (* ?x1484 ?x1484 ?x1484 ?x1854 ?x984 ?x984 r r)))
 (let ((?x380 (+ ?x302 ?x770 ?x804 ?x1141 ?x1909 ?x1910 ?x1913 ?x1483 (* (- 8) ?x1946) ?x1461 ?x1965 ?x1463)))
 (let (($x1534 (or (not (= (* ?x380 ?x1530) 0)) (not (= ?x1161 0)) (not (= ?x481 0)) (not (= (* ?x1776 ?x1530) 0)))))
 (let (($x1550 (= ?x1530 0)))
 (let (($x519 (and $x1550 $x1534)))
 (let ((?x1469 (* 16 d)))
 (let ((?x1712 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 8) (* d 2)) ?x1138 ?x1469 ?x1894 ?x1896 ?x1902)))
 (let ((?x1464 (* 8 ?x1946)))
 (let ((?x402 (+ ?x302 ?x770 ?x804 (* (- 8) (* d d r r r)) ?x1141 (* (- 8) (* d 2 r r r)) ?x1909 ?x1910 ?x1913 ?x1483 ?x1464 (* 12 ?x1957) ?x1965 ?x1463)))
 (let ((?x1266 (* 8 d)))
 (let ((?x1866 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 4) (* d 2)) ?x1138 ?x1266 ?x1894 ?x1896 ?x1902)))
 (let ((?x687 (+ ?x804 ?x1017 (* (- 4) (* d d r r r)) ?x1141 (* (- 4) (* d 2 r r r)) ?x1612 ?x1909 ?x1910 ?x1913 ?x1222 ?x1221 (* 6 ?x1957) ?x1965 ?x1970)))
 (let ((?x971 (+ ?x335 ?x348 ?x358 ?x1427 (* 2 (* ?x169 ?x136 r r q q q)) ?x1428 (* 2 (* ?x136 q r r q q q)) (* 2 (* q q r r q q q)) ?x804 (* 2 (* q ?x136 r r q q q)) (* 2 (* ?x169 q r r q q q)) (* 2 (* ?x136 ?x136 r r q q q)) ?x1023 ?x1141 ?x1490 (* 2 (* ?x169 ?x169 r r q q q)) (* 2 (* ?x136 ?x169 r r q q q)) (* 2 (* q ?x169 r r q q q)) ?x1909 ?x1910 ?x1913 ?x1965)))
 (let ((?x1856 (* 2 (* d 4))))
 (let ((?x1864 (* (- 8) d)))
 (let ((?x1919 (* 2 (* d 4 r r r))))
 (let ((?x287 (+ ?x804 ?x1127 ?x1141 ?x1349 ?x1909 ?x1910 ?x1913 ?x1918 ?x1919 ?x1943 ?x1948 ?x1965 ?x1968)))
 (let ((?x881 (* ?x287 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x1138 ?x1864 ?x1894 ?x1856 ?x1896 ?x1902))))
 (let (($x1201 (or (not (= ?x881 0)) (not (= (* ?x971 ?x1530) 0)) (not (= (* ?x687 ?x1866) 0)) (not (= (* ?x402 ?x1712) 0)))))
 (let (($x1391 (and $x1550 $x1201)))
 (rewrite (= $x1391 $x519)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x956 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x423 (* 4 (* d00 r00))))
 (let ((?x1493 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x1242 (+ (- 4) ?x136 ?x169 q ?x1493)))
 (let ((?x1854 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x638 (* 4 (* ?x1854 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x891 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x494 (+ (- 32) ?x417 ?x891 ?x30 (* (- 16) d) ?x172 ?x638 ?x204 ?x220 (* (+ (- 8) q) ?x1854 ?x1854) (* (- 2) (* (+ (- 8) q) ?x1854)) ?x270 (* (- 4) (* ?x1854 ?x1242)) ?x423)))
 (let ((?x1484 (+ (- 8) q)))
 (let ((?x1237 (+ (* ?x1484 ?x1484 ?x1484 ?x1854 ?x1242 ?x1242 r r) (* ?x1484 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1242 ?x1242 ?x1242 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x1242 r r r)))))
 (let (($x1547 (not (= (* ?x1237 ?x494) 0))))
 (let ((?x1249 (+ ?x417 ?x891 ?x30 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 q) (* (- 2) (* ?x1854 q)) ?x270 (* (- 4) (* ?x1854 (+ ?x136 ?x169 q))) ?x423)))
 (let ((?x1158 (+ ?x136 ?x169 q)))
 (let ((?x1256 (+ (* ?x1854 ?x1158 ?x1158 r r q q q) (* ?x1854 ?x1854 r r r q) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1158 ?x1158 ?x1158 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x1158 r r r)))))
 (let (($x1246 (not (= (* ?x1256 ?x1249) 0))))
 (let ((?x1864 (* (- 8) d)))
 (let ((?x652 (+ (- 16) ?x417 ?x891 ?x30 ?x1864 ?x172 ?x638 ?x204 ?x220 (* (+ (- 4) q) ?x1854 ?x1854) (* (- 2) (* (+ (- 4) q) ?x1854)) ?x270 (* (- 4) (* ?x1854 (+ (- 2) ?x136 ?x169 q (* (- 1) d)))) ?x423)))
 (let ((?x1192 (* (- 1) d)))
 (let ((?x801 (+ (- 2) ?x136 ?x169 q ?x1192)))
 (let ((?x1223 (+ (- 4) q)))
 (let ((?x1942 (+ (* ?x1223 ?x1223 ?x1223 ?x1854 ?x801 ?x801 r r) (* ?x1223 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x801 ?x801 ?x801 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x801 r r r)))))
 (let (($x659 (not (= (* ?x1942 ?x652) 0))))
 (let ((?x1266 (* 8 d)))
 (let ((?x247 (+ 16 ?x417 ?x891 ?x30 ?x1266 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 (+ 4 q)) (* (- 2) (* ?x1854 (+ 4 q))) ?x270 (* (- 4) (* ?x1854 (+ 2 ?x136 ?x169 q d))) ?x423)))
 (let ((?x1292 (* (- 1) (* ?x1854 ?x1854 (+ 2 ?x136 ?x169 q d) r r r))))
 (let ((?x657 (+ 2 ?x136 ?x169 q d)))
 (let ((?x1971 (+ 4 q)))
 (let ((?x720 (+ (* ?x1854 ?x1971 ?x1971 ?x1971 ?x657 ?x657 r r) (* ?x1854 ?x1854 ?x1971 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x657 ?x657 ?x657 r r r)) ?x1292)))
 (let (($x395 (not (= (* ?x720 ?x247) 0))))
 (let ((?x1138 (* 4 (* x d))))
 (let ((?x201 (* 8 r)))
 (let ((?x811 (+ ?x201 ?x172 ?x1138 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x423)))
 (let (($x807 (= ?x811 0)))
 (and $x807 (or $x395 $x659 $x1246 $x1547))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x1198 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x1902 (* q d d)))
 (let ((?x1895 (* r d)))
 (let ((?x1896 (* (- 4) ?x1895)))
 (let ((?x1894 (* (- 2) (* q d))))
 (let ((?x1469 (* 16 d)))
 (let ((?x1138 (* 4 (* x d))))
 (let ((?x307 (* r00 d00)))
 (let ((?x308 (* 4 ?x307)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x201 (* 8 r)))
 (let ((?x1712 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 8) (* d 2)) ?x1138 ?x1469 ?x1894 ?x1896 ?x1902)))
 (let ((?x1970 (* r r r d d d)))
 (let ((?x1463 (* 2 ?x1970)))
 (let ((?x1965 (* 4 (* r r r x))))
 (let ((?x1946 (* r r r d)))
 (let ((?x1464 (* 8 ?x1946)))
 (let ((?x1917 (* r r r)))
 (let ((?x1483 (* (- 16) ?x1917)))
 (let ((?x1913 (* (- 2) (* r r r r d d))))
 (let ((?x1910 (* (- 8) (* r r r r d))))
 (let ((?x1909 (* (- 8) (* r r r r))))
 (let ((?x1141 (* r r r x d d)))
 (let ((?x804 (* 4 (* r r r x d))))
 (let ((?x1493 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x984 (+ (- 4) q ?x136 ?x169 ?x1493)))
 (let ((?x1854 (+ 2 d)))
 (let ((?x770 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x984 ?x984 ?x984 r r r))))
 (let ((?x1484 (+ (- 8) q)))
 (let ((?x302 (* ?x1484 ?x1484 ?x1484 ?x1854 ?x984 ?x984 r r)))
 (let ((?x402 (+ ?x302 ?x770 ?x804 (* (- 8) (* d d r r r)) ?x1141 (* (- 8) (* d 2 r r r)) ?x1909 ?x1910 ?x1913 ?x1483 ?x1464 (* 12 (* r r r d d)) ?x1965 ?x1463)))
 (let ((?x1266 (* 8 d)))
 (let ((?x1866 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 (* (- 4) (* d 2)) ?x1138 ?x1266 ?x1894 ?x1896 ?x1902)))
 (let ((?x1221 (* 4 ?x1946)))
 (let ((?x1222 (* (- 8) ?x1917)))
 (let ((?x1192 (* (- 1) d)))
 (let ((?x767 (+ (- 2) q ?x136 ?x169 ?x1192)))
 (let ((?x1223 (+ (- 4) q)))
 (let ((?x1612 (* ?x1223 ?x1223 ?x1223 ?x1854 ?x767 ?x767 r r)))
 (let ((?x1017 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x767 ?x767 ?x767 r r r))))
 (let ((?x687 (+ ?x804 ?x1017 (* (- 4) (* d d r r r)) ?x1141 (* (- 4) (* d 2 r r r)) ?x1612 ?x1909 ?x1910 ?x1913 ?x1222 ?x1221 (* 6 (* r r r d d)) ?x1965 ?x1970)))
 (let ((?x1530 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x1138 ?x1894 ?x1896 ?x1902)))
 (let ((?x1490 (* q q q r r x x d)))
 (let ((?x490 (+ q ?x136 ?x169)))
 (let ((?x1023 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x490 ?x490 ?x490 r r r))))
 (let ((?x1428 (* (- 4) (* q q q r r r x d))))
 (let ((?x1427 (* (- 2) (* q q q q r r x d))))
 (let ((?x358 (* 4 (* q q q r r r r d))))
 (let ((?x348 (* 4 (* q q q q r r r d))))
 (let ((?x335 (* q q q q q r r d)))
 (let ((?x971 (+ ?x335 ?x348 ?x358 ?x1427 (* 2 (* ?x169 ?x136 r r q q q)) ?x1428 (* 2 (* ?x136 q r r q q q)) (* 2 (* q q r r q q q)) ?x804 (* 2 (* q ?x136 r r q q q)) (* 2 (* ?x169 q r r q q q)) (* 2 (* ?x136 ?x136 r r q q q)) ?x1023 ?x1141 ?x1490 (* 2 (* ?x169 ?x169 r r q q q)) (* 2 (* ?x136 ?x169 r r q q q)) (* 2 (* q ?x169 r r q q q)) ?x1909 ?x1910 ?x1913 ?x1965)))
 (let ((?x1856 (* 2 (* d 4))))
 (let ((?x1864 (* (- 8) d)))
 (let ((?x1968 (* (- 1) ?x1970)))
 (let ((?x1957 (* r r r d d)))
 (let ((?x1948 (* (- 2) ?x1957)))
 (let ((?x1943 (* (- 4) ?x1946)))
 (let ((?x1919 (* 2 (* d 4 r r r))))
 (let ((?x1918 (* 8 ?x1917)))
 (let ((?x1285 (+ 2 q ?x136 ?x169 d)))
 (let ((?x1349 (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1285 ?x1285 ?x1285 r r r))))
 (let ((?x1971 (+ 4 q)))
 (let ((?x1127 (* ?x1854 ?x1971 ?x1971 ?x1971 ?x1285 ?x1285 r r)))
 (let ((?x287 (+ ?x804 ?x1127 ?x1141 ?x1349 ?x1909 ?x1910 ?x1913 ?x1918 ?x1919 ?x1943 ?x1948 ?x1965 ?x1968)))
 (let ((?x881 (* ?x287 (+ ?x201 ?x172 ?x220 ?x204 ?x270 ?x308 ?x1138 ?x1864 ?x1894 ?x1856 ?x1896 ?x1902))))
 (let (($x1201 (or (not (= ?x881 0)) (not (= (* ?x971 ?x1530) 0)) (not (= (* ?x687 ?x1866) 0)) (not (= (* ?x402 ?x1712) 0)))))
 (let (($x1550 (= ?x1530 0)))
 (let (($x1391 (and $x1550 $x1201)))
 (let ((?x423 (* 4 (* d00 r00))))
 (let ((?x638 (* 4 (* ?x1854 r))))
 (let ((?x30 (* 8 q)))
 (let ((?x891 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x494 (+ (- 32) ?x417 ?x891 ?x30 (* (- 16) d) ?x172 ?x638 ?x204 ?x220 (* ?x1484 ?x1854 ?x1854) (* (- 2) (* ?x1484 ?x1854)) ?x270 (* (- 4) (* ?x1854 (+ (- 4) ?x136 ?x169 q ?x1493))) ?x423)))
 (let ((?x1236 (* (- 1) (* ?x1854 ?x1854 (+ (- 4) ?x136 ?x169 q ?x1493) r r r))))
 (let ((?x1242 (+ (- 4) ?x136 ?x169 q ?x1493)))
 (let ((?x1237 (+ (* ?x1484 ?x1484 ?x1484 ?x1854 ?x1242 ?x1242 r r) (* ?x1484 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1242 ?x1242 ?x1242 r r r)) ?x1236)))
 (let (($x1547 (not (= (* ?x1237 ?x494) 0))))
 (let ((?x1249 (+ ?x417 ?x891 ?x30 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 q) (* (- 2) (* ?x1854 q)) ?x270 (* (- 4) (* ?x1854 (+ ?x136 ?x169 q))) ?x423)))
 (let ((?x1158 (+ ?x136 ?x169 q)))
 (let ((?x1256 (+ (* ?x1854 ?x1158 ?x1158 r r q q q) (* ?x1854 ?x1854 r r r q) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1158 ?x1158 ?x1158 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x1158 r r r)))))
 (let (($x1246 (not (= (* ?x1256 ?x1249) 0))))
 (let ((?x652 (+ (- 16) ?x417 ?x891 ?x30 ?x1864 ?x172 ?x638 ?x204 ?x220 (* ?x1223 ?x1854 ?x1854) (* (- 2) (* ?x1223 ?x1854)) ?x270 (* (- 4) (* ?x1854 (+ (- 2) ?x136 ?x169 q ?x1192))) ?x423)))
 (let ((?x1945 (* (- 1) (* ?x1854 ?x1854 (+ (- 2) ?x136 ?x169 q ?x1192) r r r))))
 (let ((?x801 (+ (- 2) ?x136 ?x169 q ?x1192)))
 (let ((?x1942 (+ (* ?x1223 ?x1223 ?x1223 ?x1854 ?x801 ?x801 r r) (* ?x1223 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x801 ?x801 ?x801 r r r)) ?x1945)))
 (let (($x659 (not (= (* ?x1942 ?x652) 0))))
 (let ((?x247 (+ 16 ?x417 ?x891 ?x30 ?x1266 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 ?x1971) (* (- 2) (* ?x1854 ?x1971)) ?x270 (* (- 4) (* ?x1854 (+ 2 ?x136 ?x169 q d))) ?x423)))
 (let ((?x1292 (* (- 1) (* ?x1854 ?x1854 (+ 2 ?x136 ?x169 q d) r r r))))
 (let ((?x657 (+ 2 ?x136 ?x169 q d)))
 (let ((?x720 (+ (* ?x1854 ?x1971 ?x1971 ?x1971 ?x657 ?x657 r r) (* ?x1854 ?x1854 ?x1971 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x657 ?x657 ?x657 r r r)) ?x1292)))
 (let (($x395 (not (= (* ?x720 ?x247) 0))))
 (let ((?x811 (+ ?x201 ?x172 ?x1138 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x423)))
 (let (($x807 (= ?x811 0)))
 (let (($x680 (and $x807 (or $x395 $x659 $x1246 $x1547))))
 (rewrite (= $x680 $x1391)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1526 (exists ((q Int) (r Int) (d Int) (x Int) )(! (let ((?x423 (* 4 (* d00 r00))))
 (let ((?x1493 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x1242 (+ (- 4) ?x136 ?x169 q ?x1493)))
 (let ((?x1854 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x638 (* 4 (* ?x1854 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x891 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x494 (+ (- 32) ?x417 ?x891 ?x30 (* (- 16) d) ?x172 ?x638 ?x204 ?x220 (* (+ (- 8) q) ?x1854 ?x1854) (* (- 2) (* (+ (- 8) q) ?x1854)) ?x270 (* (- 4) (* ?x1854 ?x1242)) ?x423)))
 (let ((?x1484 (+ (- 8) q)))
 (let ((?x1237 (+ (* ?x1484 ?x1484 ?x1484 ?x1854 ?x1242 ?x1242 r r) (* ?x1484 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1242 ?x1242 ?x1242 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x1242 r r r)))))
 (let (($x1547 (not (= (* ?x1237 ?x494) 0))))
 (let ((?x1249 (+ ?x417 ?x891 ?x30 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 q) (* (- 2) (* ?x1854 q)) ?x270 (* (- 4) (* ?x1854 (+ ?x136 ?x169 q))) ?x423)))
 (let ((?x1158 (+ ?x136 ?x169 q)))
 (let ((?x1256 (+ (* ?x1854 ?x1158 ?x1158 r r q q q) (* ?x1854 ?x1854 r r r q) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1158 ?x1158 ?x1158 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x1158 r r r)))))
 (let (($x1246 (not (= (* ?x1256 ?x1249) 0))))
 (let ((?x1266 (* 8 d)))
 (let ((?x247 (+ 16 ?x417 ?x891 ?x30 ?x1266 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 (+ 4 q)) (* (- 2) (* ?x1854 (+ 4 q))) ?x270 (* (- 4) (* ?x1854 (+ 2 ?x136 ?x169 q d))) ?x423)))
 (let ((?x1292 (* (- 1) (* ?x1854 ?x1854 (+ 2 ?x136 ?x169 q d) r r r))))
 (let ((?x657 (+ 2 ?x136 ?x169 q d)))
 (let ((?x1971 (+ 4 q)))
 (let ((?x720 (+ (* ?x1854 ?x1971 ?x1971 ?x1971 ?x657 ?x657 r r) (* ?x1854 ?x1854 ?x1971 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x657 ?x657 ?x657 r r r)) ?x1292)))
 (let (($x395 (not (= (* ?x720 ?x247) 0))))
 (let ((?x1864 (* (- 8) d)))
 (let ((?x652 (+ (- 16) ?x417 ?x891 ?x30 ?x1864 ?x172 ?x638 ?x204 ?x220 (* (+ (- 4) q) ?x1854 ?x1854) (* (- 2) (* (+ (- 4) q) ?x1854)) ?x270 (* (- 4) (* ?x1854 (+ (- 2) ?x136 ?x169 q (* (- 1) d)))) ?x423)))
 (let ((?x1192 (* (- 1) d)))
 (let ((?x801 (+ (- 2) ?x136 ?x169 q ?x1192)))
 (let ((?x1223 (+ (- 4) q)))
 (let ((?x1942 (+ (* ?x1223 ?x1223 ?x1223 ?x1854 ?x801 ?x801 r r) (* ?x1223 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x801 ?x801 ?x801 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x801 r r r)))))
 (let (($x659 (not (= (* ?x1942 ?x652) 0))))
 (let ((?x1138 (* 4 (* x d))))
 (let ((?x201 (* 8 r)))
 (let ((?x811 (+ ?x201 ?x172 ?x1138 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x423)))
 (let (($x807 (= ?x811 0)))
 (and $x807 (or $x659 $x395 $x1246 $x1547))))))))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x843 (lambda ((q Int) (r Int) (d Int) (x Int) )(let ((?x423 (* 4 (* d00 r00))))
 (let ((?x1493 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x136 (* 2 r)))
 (let ((?x1242 (+ (- 4) ?x136 ?x169 q ?x1493)))
 (let ((?x1854 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x638 (* 4 (* ?x1854 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x30 (* 8 q)))
 (let ((?x891 (* (- 8) x)))
 (let ((?x417 (* 16 r)))
 (let ((?x494 (+ (- 32) ?x417 ?x891 ?x30 (* (- 16) d) ?x172 ?x638 ?x204 ?x220 (* (+ (- 8) q) ?x1854 ?x1854) (* (- 2) (* (+ (- 8) q) ?x1854)) ?x270 (* (- 4) (* ?x1854 ?x1242)) ?x423)))
 (let ((?x1484 (+ (- 8) q)))
 (let ((?x1237 (+ (* ?x1484 ?x1484 ?x1484 ?x1854 ?x1242 ?x1242 r r) (* ?x1484 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1242 ?x1242 ?x1242 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x1242 r r r)))))
 (let (($x1547 (not (= (* ?x1237 ?x494) 0))))
 (let ((?x1249 (+ ?x417 ?x891 ?x30 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 q) (* (- 2) (* ?x1854 q)) ?x270 (* (- 4) (* ?x1854 (+ ?x136 ?x169 q))) ?x423)))
 (let ((?x1158 (+ ?x136 ?x169 q)))
 (let ((?x1256 (+ (* ?x1854 ?x1158 ?x1158 r r q q q) (* ?x1854 ?x1854 r r r q) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x1158 ?x1158 ?x1158 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x1158 r r r)))))
 (let (($x1246 (not (= (* ?x1256 ?x1249) 0))))
 (let ((?x1864 (* (- 8) d)))
 (let ((?x652 (+ (- 16) ?x417 ?x891 ?x30 ?x1864 ?x172 ?x638 ?x204 ?x220 (* (+ (- 4) q) ?x1854 ?x1854) (* (- 2) (* (+ (- 4) q) ?x1854)) ?x270 (* (- 4) (* ?x1854 (+ (- 2) ?x136 ?x169 q (* (- 1) d)))) ?x423)))
 (let ((?x1192 (* (- 1) d)))
 (let ((?x801 (+ (- 2) ?x136 ?x169 q ?x1192)))
 (let ((?x1223 (+ (- 4) q)))
 (let ((?x1942 (+ (* ?x1223 ?x1223 ?x1223 ?x1854 ?x801 ?x801 r r) (* ?x1223 ?x1854 ?x1854 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x801 ?x801 ?x801 r r r)) (* (- 1) (* ?x1854 ?x1854 ?x801 r r r)))))
 (let (($x659 (not (= (* ?x1942 ?x652) 0))))
 (let ((?x1266 (* 8 d)))
 (let ((?x247 (+ 16 ?x417 ?x891 ?x30 ?x1266 ?x172 ?x638 ?x204 ?x220 (* ?x1854 ?x1854 (+ 4 q)) (* (- 2) (* ?x1854 (+ 4 q))) ?x270 (* (- 4) (* ?x1854 (+ 2 ?x136 ?x169 q d))) ?x423)))
 (let ((?x1292 (* (- 1) (* ?x1854 ?x1854 (+ 2 ?x136 ?x169 q d) r r r))))
 (let ((?x657 (+ 2 ?x136 ?x169 q d)))
 (let ((?x1971 (+ 4 q)))
 (let ((?x720 (+ (* ?x1854 ?x1971 ?x1971 ?x1971 ?x657 ?x657 r r) (* ?x1854 ?x1854 ?x1971 r r r) (* (- 1) (* ?x1854 ?x1854 ?x1854 ?x657 ?x657 ?x657 r r r)) ?x1292)))
 (let (($x395 (not (= (* ?x720 ?x247) 0))))
 (let ((?x1138 (* 4 (* x d))))
 (let ((?x201 (* 8 r)))
 (let ((?x811 (+ ?x201 ?x172 ?x1138 ?x204 ?x220 (* d d q) (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x423)))
 (let (($x807 (= ?x811 0)))
 (let (($x680 (and $x807 (or $x395 $x659 $x1246 $x1547))))
 (let (($x1525 (and $x807 (or $x659 $x395 $x1246 $x1547))))
 (rewrite (= $x1525 $x680))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x165 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x138 (- (- (+ (- (* 2 r) x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x144 (- q 8)))
 (let ((?x155 (+ (* ?x62 ?x144 ?x144 ?x144 ?x138 ?x138 r r) (* ?x62 ?x62 ?x144 r r r))))
 (let ((?x159 (- (- ?x155 (* ?x62 ?x62 ?x62 ?x138 ?x138 ?x138 r r r)) (* ?x62 ?x62 ?x138 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x142 (- (+ (- (* 8 ?x138) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x149 (+ (- (+ (- ?x142 ?x41) (* ?x62 ?x62 ?x144)) (* 2 ?x62 ?x144)) ?x49)))
 (let ((?x111 (- (- (+ (- (* 2 r) x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x128 (+ (* ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 r r) (* ?x62 ?x62 ?x117 r r r))))
 (let ((?x132 (- (- ?x128 (* ?x62 ?x62 ?x62 ?x111 ?x111 ?x111 r r r)) (* ?x62 ?x62 ?x111 r r r))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x57 (* 2 r)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x86 (+ ?x58 q)))
 (let ((?x102 (+ (* ?x62 q q q ?x86 ?x86 r r) (* ?x62 ?x62 q r r r))))
 (let ((?x106 (- (- ?x102 (* ?x62 ?x62 ?x62 ?x86 ?x86 ?x86 r r r)) (* ?x62 ?x62 ?x86 r r r))))
 (let ((?x90 (- (+ (- (* 8 ?x86) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x96 (+ (- (+ (- ?x90 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (+ (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r r) (* ?x62 ?x62 ?x67 r r r))))
 (let ((?x82 (- (- ?x78 (* ?x62 ?x62 ?x62 ?x59 ?x59 ?x59 r r r)) (* ?x62 ?x62 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x163 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x82) 0)) (not (= (* (+ (- ?x96 (* 4 ?x62 ?x86)) ?x53) ?x106) 0)) (not (= (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) ?x132) 0)) (not (= (* (+ (- ?x149 (* 4 ?x62 ?x138)) ?x53) ?x159) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x42 (- (+ (- (* 8 r) (* 8 r00)) (* 4 d x)) ?x39)))
 (let ((?x52 (- (+ (- (+ (- ?x42 ?x41) ?x44) (* 2 d q)) ?x49) (* 4 d r))))
 (and (= (+ ?x52 ?x53) 0) $x163))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let (($x845 (exists ((q Int) (r Int) (d Int) (t Int) (x Int) )(! (let ((?x423 (* 4 (* d00 r00))))
 (let ((?x1518 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1129 (+ (- 4) ?x57 ?x169 q ?x1518)))
 (let ((?x275 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x948 (* 4 (* ?x275 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x695 (* 8 q)))
 (let ((?x891 (* (- 8) x)))
 (let ((?x888 (* 16 r)))
 (let ((?x615 (+ (- 32) ?x888 ?x891 ?x695 (* (- 16) d) ?x172 ?x948 ?x204 ?x220 (* (+ (- 8) q) ?x275 ?x275) (* (- 2) (* (+ (- 8) q) ?x275)) ?x270 (* (- 4) (* ?x275 ?x1129)) ?x423)))
 (let ((?x1228 (+ (- 8) q)))
 (let ((?x872 (+ (* ?x1228 ?x1228 ?x1228 ?x275 ?x1129 ?x1129 r r) (* ?x1228 ?x275 ?x275 r r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x1129 ?x1129 ?x1129 r r r)) (* (- 1) (* ?x275 ?x275 ?x1129 r r r)))))
 (let ((?x1130 (+ ?x888 ?x891 ?x695 ?x172 ?x948 ?x204 ?x220 (* ?x275 ?x275 q) (* (- 2) (* ?x275 q)) ?x270 (* (- 4) (* ?x275 (+ ?x57 ?x169 q))) ?x423)))
 (let ((?x704 (+ ?x57 ?x169 q)))
 (let ((?x1523 (+ (* ?x275 ?x704 ?x704 r r q q q) (* ?x275 ?x275 r r r q) (* (- 1) (* ?x275 ?x275 ?x275 ?x704 ?x704 ?x704 r r r)) (* (- 1) (* ?x275 ?x275 ?x704 r r r)))))
 (let ((?x201 (* 8 d)))
 (let ((?x1549 (+ 16 ?x888 ?x891 ?x695 ?x201 ?x172 ?x948 ?x204 ?x220 (* ?x275 ?x275 (+ 4 q)) (* (- 2) (* ?x275 (+ 4 q))) ?x270 (* (- 4) (* ?x275 (+ 2 ?x57 ?x169 q d))) ?x423)))
 (let ((?x1076 (* (- 1) (* ?x275 ?x275 (+ 2 ?x57 ?x169 q d) r r r))))
 (let ((?x722 (+ 2 ?x57 ?x169 q d)))
 (let ((?x359 (+ 4 q)))
 (let ((?x1078 (+ (* ?x275 ?x359 ?x359 ?x359 ?x722 ?x722 r r) (* ?x275 ?x275 ?x359 r r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x722 ?x722 ?x722 r r r)) ?x1076)))
 (let ((?x462 (* (- 8) d)))
 (let ((?x1336 (+ (- 16) ?x888 ?x891 ?x695 ?x462 ?x172 ?x948 ?x204 ?x220 (* (+ (- 4) q) ?x275 ?x275) (* (- 2) (* (+ (- 4) q) ?x275)) ?x270 (* (- 4) (* ?x275 (+ (- 2) ?x57 ?x169 q (* (- 1) d)))) ?x423)))
 (let ((?x1064 (* (- 1) d)))
 (let ((?x460 (+ (- 2) ?x57 ?x169 q ?x1064)))
 (let ((?x442 (+ (- 4) q)))
 (let ((?x373 (+ (* ?x442 ?x442 ?x442 ?x275 ?x460 ?x460 r r) (* ?x442 ?x275 ?x275 r r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x460 ?x460 ?x460 r r r)) (* (- 1) (* ?x275 ?x275 ?x460 r r r)))))
 (let (($x810 (or (not (= (* ?x373 ?x1336) 0)) (not (= (* ?x1078 ?x1549) 0)) (not (= (* ?x1523 ?x1130) 0)) (not (= (* ?x872 ?x615) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1593 (+ ?x30 ?x172 (* 4 (* x d)) ?x204 ?x220 ?x44 (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x423)))
 (and (= ?x1593 0) $x810)))))))))))))))))))))))))))))))))))))))) :qid k!32))
 ))
 (let ((?x694 (lambda ((q Int) (r Int) (d Int) (t Int) (x Int) )(let ((?x423 (* 4 (* d00 r00))))
 (let ((?x1518 (* (- 2) d)))
 (let ((?x169 (* (- 1) x)))
 (let ((?x57 (* 2 r)))
 (let ((?x1129 (+ (- 4) ?x57 ?x169 q ?x1518)))
 (let ((?x275 (+ 2 d)))
 (let ((?x269 (* d00 q00)))
 (let ((?x270 (* 2 ?x269)))
 (let ((?x41 (* d00 d00 q00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x190 (* d00 x00)))
 (let ((?x204 (* (- 4) ?x190)))
 (let ((?x948 (* 4 (* ?x275 r))))
 (let ((?x172 (* (- 8) r00)))
 (let ((?x695 (* 8 q)))
 (let ((?x891 (* (- 8) x)))
 (let ((?x888 (* 16 r)))
 (let ((?x615 (+ (- 32) ?x888 ?x891 ?x695 (* (- 16) d) ?x172 ?x948 ?x204 ?x220 (* (+ (- 8) q) ?x275 ?x275) (* (- 2) (* (+ (- 8) q) ?x275)) ?x270 (* (- 4) (* ?x275 ?x1129)) ?x423)))
 (let ((?x1228 (+ (- 8) q)))
 (let ((?x872 (+ (* ?x1228 ?x1228 ?x1228 ?x275 ?x1129 ?x1129 r r) (* ?x1228 ?x275 ?x275 r r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x1129 ?x1129 ?x1129 r r r)) (* (- 1) (* ?x275 ?x275 ?x1129 r r r)))))
 (let ((?x1130 (+ ?x888 ?x891 ?x695 ?x172 ?x948 ?x204 ?x220 (* ?x275 ?x275 q) (* (- 2) (* ?x275 q)) ?x270 (* (- 4) (* ?x275 (+ ?x57 ?x169 q))) ?x423)))
 (let ((?x704 (+ ?x57 ?x169 q)))
 (let ((?x1523 (+ (* ?x275 ?x704 ?x704 r r q q q) (* ?x275 ?x275 r r r q) (* (- 1) (* ?x275 ?x275 ?x275 ?x704 ?x704 ?x704 r r r)) (* (- 1) (* ?x275 ?x275 ?x704 r r r)))))
 (let ((?x201 (* 8 d)))
 (let ((?x1549 (+ 16 ?x888 ?x891 ?x695 ?x201 ?x172 ?x948 ?x204 ?x220 (* ?x275 ?x275 (+ 4 q)) (* (- 2) (* ?x275 (+ 4 q))) ?x270 (* (- 4) (* ?x275 (+ 2 ?x57 ?x169 q d))) ?x423)))
 (let ((?x1076 (* (- 1) (* ?x275 ?x275 (+ 2 ?x57 ?x169 q d) r r r))))
 (let ((?x722 (+ 2 ?x57 ?x169 q d)))
 (let ((?x359 (+ 4 q)))
 (let ((?x1078 (+ (* ?x275 ?x359 ?x359 ?x359 ?x722 ?x722 r r) (* ?x275 ?x275 ?x359 r r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x722 ?x722 ?x722 r r r)) ?x1076)))
 (let ((?x462 (* (- 8) d)))
 (let ((?x1336 (+ (- 16) ?x888 ?x891 ?x695 ?x462 ?x172 ?x948 ?x204 ?x220 (* (+ (- 4) q) ?x275 ?x275) (* (- 2) (* (+ (- 4) q) ?x275)) ?x270 (* (- 4) (* ?x275 (+ (- 2) ?x57 ?x169 q (* (- 1) d)))) ?x423)))
 (let ((?x1064 (* (- 1) d)))
 (let ((?x460 (+ (- 2) ?x57 ?x169 q ?x1064)))
 (let ((?x442 (+ (- 4) q)))
 (let ((?x373 (+ (* ?x442 ?x442 ?x442 ?x275 ?x460 ?x460 r r) (* ?x442 ?x275 ?x275 r r r) (* (- 1) (* ?x275 ?x275 ?x275 ?x460 ?x460 ?x460 r r r)) (* (- 1) (* ?x275 ?x275 ?x460 r r r)))))
 (let (($x810 (or (not (= (* ?x373 ?x1336) 0)) (not (= (* ?x1078 ?x1549) 0)) (not (= (* ?x1523 ?x1130) 0)) (not (= (* ?x872 ?x615) 0)))))
 (let ((?x44 (* d d q)))
 (let ((?x30 (* 8 r)))
 (let ((?x1593 (+ ?x30 ?x172 (* 4 (* x d)) ?x204 ?x220 ?x44 (* (- 2) (* d q)) ?x270 (* (- 4) (* d r)) ?x423)))
 (let (($x799 (and (= ?x1593 0) $x810)))
 (let ((?x138 (- (- (+ (- ?x57 x) q) (* 2 d)) 4)))
 (let ((?x62 (+ d 2)))
 (let ((?x144 (- q 8)))
 (let ((?x155 (+ (* ?x62 ?x144 ?x144 ?x144 ?x138 ?x138 r r) (* ?x62 ?x62 ?x144 r r r))))
 (let ((?x159 (- (- ?x155 (* ?x62 ?x62 ?x62 ?x138 ?x138 ?x138 r r r)) (* ?x62 ?x62 ?x138 r r r))))
 (let ((?x53 (* 4 d00 r00)))
 (let ((?x49 (* 2 d00 q00)))
 (let ((?x39 (* 4 d00 x00)))
 (let ((?x142 (- (+ (- (* 8 ?x138) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x149 (+ (- (+ (- ?x142 ?x41) (* ?x62 ?x62 ?x144)) (* 2 ?x62 ?x144)) ?x49)))
 (let ((?x111 (- (- (+ (- ?x57 x) q) d) 2)))
 (let ((?x117 (- q 4)))
 (let ((?x128 (+ (* ?x62 ?x117 ?x117 ?x117 ?x111 ?x111 r r) (* ?x62 ?x62 ?x117 r r r))))
 (let ((?x132 (- (- ?x128 (* ?x62 ?x62 ?x62 ?x111 ?x111 ?x111 r r r)) (* ?x62 ?x62 ?x111 r r r))))
 (let ((?x115 (- (+ (- (* 8 ?x111) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x122 (+ (- (+ (- ?x115 ?x41) (* ?x62 ?x62 ?x117)) (* 2 ?x62 ?x117)) ?x49)))
 (let ((?x58 (- ?x57 x)))
 (let ((?x86 (+ ?x58 q)))
 (let ((?x102 (+ (* ?x62 q q q ?x86 ?x86 r r) (* ?x62 ?x62 q r r r))))
 (let ((?x106 (- (- ?x102 (* ?x62 ?x62 ?x62 ?x86 ?x86 ?x86 r r r)) (* ?x62 ?x62 ?x86 r r r))))
 (let ((?x90 (- (+ (- (* 8 ?x86) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x96 (+ (- (+ (- ?x90 ?x41) (* ?x62 ?x62 q)) (* 2 ?x62 q)) ?x49)))
 (let ((?x59 (+ ?x58 q d 2)))
 (let ((?x67 (+ q 4)))
 (let ((?x78 (+ (* ?x62 ?x67 ?x67 ?x67 ?x59 ?x59 r r) (* ?x62 ?x62 ?x67 r r r))))
 (let ((?x82 (- (- ?x78 (* ?x62 ?x62 ?x62 ?x59 ?x59 ?x59 r r r)) (* ?x62 ?x62 ?x59 r r r))))
 (let ((?x65 (- (+ (- (* 8 ?x59) (* 8 r00)) (* 4 ?x62 r)) ?x39)))
 (let ((?x72 (+ (- (+ (- ?x65 ?x41) (* ?x62 ?x62 ?x67)) (* 2 ?x62 ?x67)) ?x49)))
 (let (($x163 (or (not (= (* (+ (- ?x72 (* 4 ?x62 ?x59)) ?x53) ?x82) 0)) (not (= (* (+ (- ?x96 (* 4 ?x62 ?x86)) ?x53) ?x106) 0)) (not (= (* (+ (- ?x122 (* 4 ?x62 ?x111)) ?x53) ?x132) 0)) (not (= (* (+ (- ?x149 (* 4 ?x62 ?x138)) ?x53) ?x159) 0)))))
 (let ((?x45 (+ (- (- (+ (- ?x30 (* 8 r00)) (* 4 d x)) ?x39) ?x41) ?x44)))
 (let ((?x54 (+ (- (+ (- ?x45 (* 2 d q)) ?x49) (* 4 d r)) ?x53)))
 (let (($x164 (and (= ?x54 0) $x163)))
 (rewrite (= $x164 $x799)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x1567 (trans (quant-intro (proof-bind ?x694) (= $x165 $x845)) (elim-unused (= $x845 $x1526)) (= $x165 $x1526))))
 (let ((@x27 (asserted $x165)))
 (let ((@x1117 (mp (mp @x27 @x1567 $x1526) (quant-intro (proof-bind ?x843) (= $x1526 $x956)) $x956)))
 (let ((@x1404 (mp (mp @x1117 (rewrite (= $x956 $x956)) $x956) (quant-intro (proof-bind ?x1198) (= $x956 $x622)) $x622)))
 (let ((@x513 (mp~ (mp @x1404 (quant-intro (proof-bind ?x733) (= $x622 $x353)) $x353) (sk (~ $x353 $x379)) $x379)))
 (let ((@x443 (mp @x513 (rewrite (= $x379 $x1365)) $x1365)))
 (let ((@x1780 (and-elim @x443 $x288)))
 (let ((@x176 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x288) $x1245)) @x1780 $x1245)))
 (let (($x753 (<= ?x1367 0)))
 (let ((@x1962 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x288) $x753)) @x1780 $x753)))
 (let (($x772 (not (<= ?x876 0))))
 (let (($x1018 (<= ?x693 0)))
 (let (($x630 (>= ?x693 0)))
 (let ((@x1310 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1702 (not $x1018) (not $x630))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x630)) @x1962 @x176 false) $x630) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1018)) @x1962 @x176 false) $x1018) $x1702)))
 (let (($x375 (>= ?x1186 0)))
 (let (($x1952 (<= ?x1186 0)))
 (let ((@x1433 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x548 (not $x1952) (not $x375))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1952)) @x1962 @x176 false) $x1952) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x375)) @x1962 @x176 false) $x375) $x548)))
 (let (($x1929 (>= ?x1784 0)))
 (let (($x504 (<= ?x1784 0)))
 (let ((@x197 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1891 (not $x504) (not $x1929))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x504)) @x1962 @x176 false) $x504) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1929)) @x1962 @x176 false) $x1929) $x1891)))
 (let ((@x626 (unit-resolution (unit-resolution (and-elim @x443 $x1778) @x197 @x1433 (or $x264 $x1720)) @x1310 $x1720)))
 (let (($x1932 (>= ?x876 0)))
 (let ((@x1562 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x448 $x772 (not $x1932))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x1932)) @x1962 @x176 false) $x1932) @x626 $x772)))
 ((_ th-lemma arith farkas 1 1 1) @x1562 @x1962 @x176 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        7
 :arith-assert-lower        54
 :arith-assert-upper        35
 :arith-conflicts           8
 :arith-eq-adapter          5
 :arith-fixed-eqs           12
 :arith-max-min             960
 :arith-nonlinear-bounds    16
 :arith-num-rows            14
 :arith-pivots              1
 :arith-pseudo-nonlinear    32
 :arith-row-summations      1
 :arith-tableau-max-columns 71
 :arith-tableau-max-rows    14
 :conflicts                 8
 :decisions                 24
 :del-clause                11
 :final-checks              8
 :max-memory                3.80
 :memory                    3.29
 :mk-bool-var               21
 :mk-clause                 20
 :num-allocs                1423195
 :num-checks                1
 :propagations              36
 :rlimit-count              10212
 :time                      0.01
 :total-time                0.02)
