unsat
((set-logic NIA)
(declare-fun s!0 () Int)
(declare-fun p!5 () Int)
(declare-fun q!3 () Int)
(declare-fun r!1 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(proof
(let ((?x281 (* r!1 q!3)))
 (let ((?x37 (* p00 s00)))
 (let ((?x186 (+ ?x37 (* (- 1) (* q00 r00)) ?x281 (* (- 1) (* p!5 s!0)))))
 (let (($x481 (>= ?x186 0)))
 (let (($x187 (= ?x186 0)))
 (let ((?x392 (* p!5 s!0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x678 (+ ?x141 ?x41 (* (- 1) ?x281) ?x392)))
 (let ((?x991 (* p!5 a!4 r!1 r!1 r!1)))
 (let ((?x819 (* 3 (* p!5 a!4 r!1 s!0 s!0))))
 (let ((?x772 (* a!4 q!3 s!0 s!0 s!0)))
 (let ((?x770 (* p!5 b!2 s!0 s!0 s!0)))
 (let ((?x766 (* (- 1) (* p!5 a!4 s!0 s!0 s!0))))
 (let ((?x906 (+ p!5 (* (- 1) q!3))))
 (let ((?x911 (+ a!4 (* (- 1) b!2))))
 (let ((?x691 (+ r!1 (* (- 1) s!0))))
 (let ((?x689 (* ?x691 ?x691 ?x691 ?x911 ?x911 ?x906 ?x906 ?x906 s!0 s!0 s!0 b!2 b!2 q!3 q!3 q!3)))
 (let ((?x609 (* p!5 a!4 a!4 a!4 r!1 b!2 q!3 s!0)))
 (let ((?x212 (* (- 3) (* p!5 a!4 r!1 r!1 s!0))))
 (let ((?x824 (+ (* p!5 b!2 b!2 b!2 b!2 q!3 s!0 s!0) (* (- 3) (* a!4 r!1 b!2 b!2 b!2 q!3 q!3 s!0)) (* (- 1) (* p!5 r!1 b!2 b!2 b!2 b!2 q!3 s!0)) (* 3 (* a!4 a!4 r!1 b!2 b!2 q!3 q!3 s!0)) (* (- 1) (* a!4 a!4 a!4 r!1 b!2 q!3 q!3 s!0)) (* 3 (* p!5 a!4 r!1 b!2 b!2 b!2 q!3 s!0)) (* r!1 r!1 r!1 b!2 q!3) (* (- 1) (* a!4 r!1 r!1 r!1 q!3)) (* (- 1) (* p!5 r!1 r!1 r!1 b!2)) (* (- 1) (* b!2 b!2 b!2 b!2 q!3 q!3 s!0 s!0)) ?x212 (* (- 3) (* a!4 a!4 b!2 b!2 q!3 q!3 s!0 s!0)) (* a!4 a!4 a!4 b!2 q!3 q!3 s!0 s!0) (* (- 3) (* p!5 r!1 b!2 s!0 s!0)) (* (- 1) (* p!5 a!4 a!4 a!4 b!2 q!3 s!0 s!0)) (* 3 (* p!5 a!4 a!4 b!2 b!2 q!3 s!0 s!0)) (* (- 3) (* p!5 a!4 b!2 b!2 b!2 q!3 s!0 s!0)) (* (- 3) (* r!1 r!1 b!2 q!3 s!0)) (* (- 3) (* a!4 r!1 q!3 s!0 s!0)) (* 3 (* a!4 b!2 b!2 b!2 q!3 q!3 s!0 s!0)) (* 3 (* a!4 r!1 r!1 q!3 s!0)) (* r!1 b!2 b!2 b!2 b!2 q!3 q!3 s!0) (* (- 3) (* p!5 a!4 a!4 r!1 b!2 b!2 q!3 s!0)) ?x609 ?x689 ?x766 ?x770 ?x772 ?x819 (* 3 (* r!1 b!2 q!3 s!0 s!0)) (* (- 1) (* b!2 q!3 s!0 s!0 s!0)) ?x991 (* 3 (* p!5 r!1 r!1 b!2 s!0)))))
 (let ((?x828 (* ?x824 ?x678)))
 (let (($x185 (= ?x828 0)))
 (let ((?x731 (+ (* (- 1) p!5) q!3)))
 (let ((?x837 (+ (* (- 1) a!4) b!2)))
 (let ((?x840 (+ (* (- 1) r!1) s!0)))
 (let ((?x733 (* ?x840 ?x840 ?x840 ?x837 ?x837 ?x731 ?x731 ?x731 r!1 r!1 r!1 a!4 a!4 p!5 p!5 p!5)))
 (let ((?x507 (* p!5 p!5 a!4 a!4 a!4 a!4 r!1 s!0)))
 (let ((?x320 (* (- 1) (* p!5 p!5 a!4 a!4 a!4 a!4 r!1 r!1))))
 (let ((?x170 (+ (* p!5 a!4 a!4 a!4 a!4 r!1 r!1 q!3) (* p!5 p!5 a!4 a!4 a!4 r!1 r!1 b!2) ?x320 ?x507 ?x609 ?x733 ?x991 (* (- 1) (* p!5 a!4 a!4 a!4 a!4 r!1 q!3 s!0)) (* (- 1) (* p!5 p!5 a!4 a!4 a!4 r!1 b!2 s!0)) (* (- 1) (* p!5 a!4 a!4 a!4 r!1 r!1 b!2 q!3)))))
 (let ((?x135 (* ?x170 ?x678)))
 (let (($x163 (= ?x135 0)))
 (let (($x130 (not $x163)))
 (let (($x174 (or $x130 (not $x185))))
 (let ((?x622 (+ (* p00 b00 s!0) (* (- 1) (* r00 b00 q!3)) (* s00 a00 q!3) (* (- 1) (* p00 s00 b!2)) (* q00 r00 b!2) (* (- 1) (* q00 a00 s!0)))))
 (let ((?x604 (+ (* p00 s00 a!4) (* (- 1) (* q00 r00 a!4)) (* r00 b00 p!5) (* (- 1) (* p00 b00 r!1)) (* (- 1) (* s00 a00 p!5)) (* q00 a00 r!1))))
 (let ((?x880 (* p!5 b!2)))
 (let ((?x136 (* q00 a00)))
 (let (($x213 (= (+ ?x136 (* (- 1) (* p00 b00)) (* (- 1) (* a!4 q!3)) ?x880) 0)))
 (let ((?x132 (* s00 a00)))
 (let ((?x1069 (+ ?x132 (* (- 1) (* r00 b00)) (* r!1 b!2) (* (- 1) (* a!4 s!0)))))
 (let (($x864 (and $x187 (= ?x1069 0) $x213 (= ?x604 0) (= ?x622 0) $x174)))
 (let ((?x1006 (+ ?x392 ?x141 ?x41 (* (- 1) (* q!3 r!1)))))
 (let ((?x807 (* p!5 a!4 a!4 a!4 q!3 b!2 r!1 s!0)))
 (let ((?x903 (+ ?x807 (* (- 3) (* p!5 a!4 a!4 q!3 b!2 b!2 r!1 s!0)) (* 3 (* p!5 a!4 q!3 b!2 b!2 b!2 r!1 s!0)) (* (- 1) (* p!5 q!3 b!2 b!2 b!2 b!2 r!1 s!0)) (* (- 1) (* a!4 a!4 a!4 q!3 q!3 b!2 r!1 s!0)) (* 3 (* a!4 a!4 q!3 q!3 b!2 b!2 r!1 s!0)) (* (- 3) (* a!4 q!3 q!3 b!2 b!2 b!2 r!1 s!0)) (* q!3 q!3 b!2 b!2 b!2 b!2 r!1 s!0) (* (- 1) (* p!5 a!4 a!4 a!4 q!3 b!2 s!0 s!0)) (* 3 (* p!5 a!4 a!4 q!3 b!2 b!2 s!0 s!0)) (* (- 3) (* p!5 a!4 q!3 b!2 b!2 b!2 s!0 s!0)) (* p!5 q!3 b!2 b!2 b!2 b!2 s!0 s!0) (* a!4 a!4 a!4 q!3 q!3 b!2 s!0 s!0) (* (- 3) (* a!4 a!4 q!3 q!3 b!2 b!2 s!0 s!0)) (* 3 (* a!4 q!3 q!3 b!2 b!2 b!2 s!0 s!0)) (* (- 1) (* q!3 q!3 b!2 b!2 b!2 b!2 s!0 s!0)) ?x991 (* (- 1) (* p!5 b!2 r!1 r!1 r!1)) (* (- 1) (* a!4 q!3 r!1 r!1 r!1)) (* q!3 b!2 r!1 r!1 r!1) ?x212 (* 3 (* p!5 b!2 r!1 r!1 s!0)) (* 3 (* a!4 q!3 r!1 r!1 s!0)) (* (- 3) (* q!3 b!2 r!1 r!1 s!0)) ?x819 (* (- 3) (* p!5 b!2 r!1 s!0 s!0)) (* (- 3) (* a!4 q!3 r!1 s!0 s!0)) (* 3 (* q!3 b!2 r!1 s!0 s!0)) ?x766 ?x770 ?x772 (* (- 1) (* q!3 b!2 s!0 s!0 s!0)) ?x689)))
 (let ((?x189 (+ ?x807 ?x991 ?x733 (* (- 1) (* p!5 a!4 a!4 a!4 a!4 q!3 r!1 s!0)) (* (- 1) (* p!5 p!5 a!4 a!4 a!4 b!2 r!1 s!0)) ?x507 (* (- 1) (* p!5 a!4 a!4 a!4 q!3 b!2 r!1 r!1)) (* p!5 a!4 a!4 a!4 a!4 q!3 r!1 r!1) (* p!5 p!5 a!4 a!4 a!4 b!2 r!1 r!1) ?x320)))
 (let ((?x853 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x232 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let (($x1016 (= (+ (* a!4 q!3) (* (- 1) ?x136) (* p00 b00) (* (- 1) ?x880)) 0)))
 (let ((?x150 (* r00 b00)))
 (let ((?x139 (* (- 1) ?x132)))
 (let ((?x1063 (* a!4 s!0)))
 (let (($x899 (and (= ?x1006 0) (= (+ ?x1063 (* (- 1) (* b!2 r!1)) ?x139 ?x150) 0) $x1016 (= ?x232 0) (= ?x853 0) (or (not (= (* ?x189 ?x1006) 0)) (not (= (* ?x903 ?x1006) 0))))))
 (let (($x1111 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x125 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x155 (+ ?x33 ?x141 ?x41 ?x125)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x1026 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x925 (* (- 1) (* q b s s s))))
 (let ((?x915 (* a q s s s)))
 (let ((?x910 (* p b s s s)))
 (let ((?x904 (* (- 1) (* p a s s s))))
 (let ((?x938 (* 3 (* q b r s s))))
 (let ((?x937 (* (- 3) (* a q r s s))))
 (let ((?x936 (* (- 3) (* p b r s s))))
 (let ((?x935 (* 3 (* p a r s s))))
 (let ((?x934 (* (- 3) (* q b r r s))))
 (let ((?x933 (* 3 (* a q r r s))))
 (let ((?x932 (* 3 (* p b r r s))))
 (let ((?x931 (* (- 3) (* p a r r s))))
 (let ((?x711 (* q b r r r)))
 (let ((?x705 (* (- 1) (* a q r r r))))
 (let ((?x701 (* (- 1) (* p b r r r))))
 (let ((?x697 (* p a r r r)))
 (let ((?x635 (* (- 1) (* q q b b b b s s))))
 (let ((?x650 (* 3 (* a q q b b b s s))))
 (let ((?x649 (* (- 3) (* a a q q b b s s))))
 (let ((?x575 (* a a a q q b s s)))
 (let ((?x567 (* p q b b b b s s)))
 (let ((?x648 (* (- 3) (* p a q b b b s s))))
 (let ((?x647 (* 3 (* p a a q b b s s))))
 (let ((?x513 (* (- 1) (* p a a a q b s s))))
 (let ((?x501 (* q q b b b b r s)))
 (let ((?x646 (* (- 3) (* a q q b b b r s))))
 (let ((?x645 (* 3 (* a a q q b b r s))))
 (let ((?x447 (* (- 1) (* a a a q q b r s))))
 (let ((?x437 (* (- 1) (* p q b b b b r s))))
 (let ((?x644 (* 3 (* p a q b b b r s))))
 (let ((?x642 (* (- 3) (* p a a q b b r s))))
 (let ((?x385 (* p a a a q b r s)))
 (let ((?x959 (+ ?x385 ?x642 ?x644 ?x437 ?x447 ?x645 ?x646 ?x501 ?x513 ?x647 ?x648 ?x567 ?x575 ?x649 ?x650 ?x635 ?x697 ?x701 ?x705 ?x711 ?x931 ?x932 ?x933 ?x934 ?x935 ?x936 ?x937 ?x938 ?x904 ?x910 ?x915 ?x925 ?x1026)))
 (let ((?x1046 (* (- 1) (* p p a a a a r r))))
 (let ((?x1040 (* p p a a a b r r)))
 (let ((?x1032 (* p a a a a q r r)))
 (let ((?x1020 (* (- 1) (* p a a a q b r r))))
 (let ((?x1014 (* p p a a a a r s)))
 (let ((?x1002 (* (- 1) (* p p a a a b r s))))
 (let ((?x992 (* (- 1) (* p a a a a q r s))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x384 (+ ?x346 q)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1073 (+ ?x1077 b)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x269 (+ ?x1102 s)))
 (let ((?x792 (* ?x269 ?x269 ?x269 ?x1073 ?x1073 ?x384 ?x384 ?x384 r r r a a p p p)))
 (let (($x426 (= (* (+ ?x385 ?x697 ?x792 ?x992 ?x1002 ?x1014 ?x1020 ?x1032 ?x1040 ?x1046) ?x155) 0)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let ((?x137 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x136)))
 (let (($x183 (= (+ (* a q) ?x180 ?x137 (* (- 1) (* p b))) 0)))
 (let ((?x150 (* r00 b00)))
 (let ((?x132 (* s00 a00)))
 (let ((?x139 (* (- 1) ?x132)))
 (let ((?x49 (* a s)))
 (let (($x165 (= (+ ?x49 (* (- 1) (* b r)) ?x139 ?x150) 0)))
 (let (($x160 (= ?x155 0)))
 (and $x160 $x165 $x183 $x249 $x317 (or (not $x426) (not (= (* ?x959 ?x155) 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x1013 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x143 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x141 ?x41)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x1026 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x780 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x1026)))
 (let ((?x989 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x141 ?x41)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x606 (+ q ?x346)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x200 (+ b ?x1077)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x129 (+ s ?x1102)))
 (let ((?x721 (* ?x129 ?x129 ?x129 ?x200 ?x200 ?x606 ?x606 ?x606 r r r a a p p p)))
 (let ((?x728 (+ (* ?x129 ?x200 ?x606 r a a a p) (* r r r a p) ?x721)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x1008 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x598 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x580 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x540 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (and (= (+ (* (- 1) (* r q)) (* s p) ?x141 ?x41) 0) (= ?x540 0) $x580 (= ?x598 0) (= ?x1008 0) (or (not (= (* ?x728 ?x989) 0)) (not (= (* ?x780 ?x143) 0)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x1116 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x125 (* (- 1) (* q r))))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let ((?x155 (+ ?x33 ?x141 ?x41 ?x125)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x1026 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x925 (* (- 1) (* q b s s s))))
 (let ((?x915 (* a q s s s)))
 (let ((?x910 (* p b s s s)))
 (let ((?x904 (* (- 1) (* p a s s s))))
 (let ((?x938 (* 3 (* q b r s s))))
 (let ((?x937 (* (- 3) (* a q r s s))))
 (let ((?x936 (* (- 3) (* p b r s s))))
 (let ((?x935 (* 3 (* p a r s s))))
 (let ((?x934 (* (- 3) (* q b r r s))))
 (let ((?x933 (* 3 (* a q r r s))))
 (let ((?x932 (* 3 (* p b r r s))))
 (let ((?x931 (* (- 3) (* p a r r s))))
 (let ((?x711 (* q b r r r)))
 (let ((?x705 (* (- 1) (* a q r r r))))
 (let ((?x701 (* (- 1) (* p b r r r))))
 (let ((?x697 (* p a r r r)))
 (let ((?x635 (* (- 1) (* q q b b b b s s))))
 (let ((?x650 (* 3 (* a q q b b b s s))))
 (let ((?x649 (* (- 3) (* a a q q b b s s))))
 (let ((?x575 (* a a a q q b s s)))
 (let ((?x567 (* p q b b b b s s)))
 (let ((?x648 (* (- 3) (* p a q b b b s s))))
 (let ((?x647 (* 3 (* p a a q b b s s))))
 (let ((?x513 (* (- 1) (* p a a a q b s s))))
 (let ((?x501 (* q q b b b b r s)))
 (let ((?x646 (* (- 3) (* a q q b b b r s))))
 (let ((?x645 (* 3 (* a a q q b b r s))))
 (let ((?x447 (* (- 1) (* a a a q q b r s))))
 (let ((?x437 (* (- 1) (* p q b b b b r s))))
 (let ((?x644 (* 3 (* p a q b b b r s))))
 (let ((?x642 (* (- 3) (* p a a q b b r s))))
 (let ((?x385 (* p a a a q b r s)))
 (let ((?x959 (+ ?x385 ?x642 ?x644 ?x437 ?x447 ?x645 ?x646 ?x501 ?x513 ?x647 ?x648 ?x567 ?x575 ?x649 ?x650 ?x635 ?x697 ?x701 ?x705 ?x711 ?x931 ?x932 ?x933 ?x934 ?x935 ?x936 ?x937 ?x938 ?x904 ?x910 ?x915 ?x925 ?x1026)))
 (let ((?x1046 (* (- 1) (* p p a a a a r r))))
 (let ((?x1040 (* p p a a a b r r)))
 (let ((?x1032 (* p a a a a q r r)))
 (let ((?x1020 (* (- 1) (* p a a a q b r r))))
 (let ((?x1014 (* p p a a a a r s)))
 (let ((?x1002 (* (- 1) (* p p a a a b r s))))
 (let ((?x992 (* (- 1) (* p a a a a q r s))))
 (let ((?x346 (* (- 1) p)))
 (let ((?x384 (+ ?x346 q)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x1073 (+ ?x1077 b)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x269 (+ ?x1102 s)))
 (let ((?x792 (* ?x269 ?x269 ?x269 ?x1073 ?x1073 ?x384 ?x384 ?x384 r r r a a p p p)))
 (let (($x426 (= (* (+ ?x385 ?x697 ?x792 ?x992 ?x1002 ?x1014 ?x1020 ?x1032 ?x1040 ?x1046) ?x155) 0)))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let ((?x137 (* p00 b00)))
 (let ((?x136 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x136)))
 (let (($x183 (= (+ (* a q) ?x180 ?x137 (* (- 1) (* p b))) 0)))
 (let ((?x150 (* r00 b00)))
 (let ((?x132 (* s00 a00)))
 (let ((?x139 (* (- 1) ?x132)))
 (let ((?x49 (* a s)))
 (let (($x165 (= (+ ?x49 (* (- 1) (* b r)) ?x139 ?x150) 0)))
 (let (($x160 (= ?x155 0)))
 (let (($x1168 (and $x160 $x165 $x183 $x249 $x317 (or (not $x426) (not (= (* ?x959 ?x155) 0))))))
 (let ((?x780 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x1026)))
 (let (($x758 (= (* ?x780 (+ (* (- 1) (* ?x260 q)) (* ?x277 s) ?x141 ?x41)) 0)))
 (let ((?x989 (+ (* (- 1) (* (+ q ?x346) r)) (* (+ s ?x1102) p) ?x141 ?x41)))
 (let ((?x606 (+ q ?x346)))
 (let ((?x200 (+ b ?x1077)))
 (let ((?x129 (+ s ?x1102)))
 (let ((?x721 (* ?x129 ?x129 ?x129 ?x200 ?x200 ?x606 ?x606 ?x606 r r r a a p p p)))
 (let ((?x728 (+ (* ?x129 ?x200 ?x606 r a a a p) (* r r r a p) ?x721)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x1008 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x598 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x580 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x540 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x749 (and (= (+ (* (- 1) (* r q)) (* s p) ?x141 ?x41) 0) (= ?x540 0) $x580 (= ?x598 0) (= ?x1008 0) (or (not (= (* ?x728 ?x989) 0)) (not $x758)))))
 (rewrite (= $x749 $x1168)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x116 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x101 (- s r)))
 (let ((?x99 (- q p)))
 (let ((?x106 (- b a)))
 (let ((?x109 (* a a ?x106 ?x106 p p p ?x99 ?x99 ?x99 r r r ?x101 ?x101 ?x101)))
 (let ((?x110 (+ (* a a a ?x106 p ?x99 r ?x101) (* a p r r r) ?x109)))
 (let ((?x41 (* q00 r00)))
 (let ((?x105 (+ (- (+ (* (- 1) ?x99 r) (* p ?x101)) (* p00 s00)) ?x41)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x94 (* ?x91 ?x91 b b ?x86 ?x86 ?x86 q q q ?x84 ?x84 ?x84 s s s)))
 (let ((?x95 (+ (* ?x91 ?x91 ?x91 b ?x86 q ?x84 s) (* ?x91 ?x86 ?x84 ?x84 ?x84) ?x94)))
 (let ((?x90 (+ (- (+ (* (- 1) q ?x84) (* ?x86 s)) (* p00 s00)) ?x41)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= (* ?x90 ?x95) 0)) (not (= (* ?x105 ?x110) 0)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x554 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x141 (* (- 1) ?x37)))
 (let ((?x143 (+ (* (- 1) (* (+ r (* (- 1) s)) q)) (* (+ p (* (- 1) q)) s) ?x141 ?x41)))
 (let ((?x277 (+ p (* (- 1) q))))
 (let ((?x342 (+ a (* (- 1) b))))
 (let ((?x258 (* (- 1) s)))
 (let ((?x260 (+ r ?x258)))
 (let ((?x1026 (* ?x260 ?x260 ?x260 ?x342 ?x342 ?x277 ?x277 ?x277 s s s b b q q q)))
 (let ((?x780 (+ (* ?x260 ?x342 ?x342 ?x342 ?x277 s b q) (* ?x260 ?x260 ?x260 ?x342 ?x277) ?x1026)))
 (let ((?x989 (+ (* (- 1) (* (+ q (* (- 1) p)) r)) (* (+ s (* (- 1) r)) p) ?x141 ?x41)))
 (let ((?x346 (* (- 1) p)))
 (let ((?x606 (+ q ?x346)))
 (let ((?x1077 (* (- 1) a)))
 (let ((?x200 (+ b ?x1077)))
 (let ((?x1102 (* (- 1) r)))
 (let ((?x129 (+ s ?x1102)))
 (let ((?x721 (* ?x129 ?x129 ?x129 ?x200 ?x200 ?x606 ?x606 ?x606 r r r a a p p p)))
 (let ((?x728 (+ (* ?x129 ?x200 ?x606 r a a a p) (* r r r a p) ?x721)))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x1008 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x598 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 (* q00 r00 a) (* a00 s00 p) (* (- 1) (* a00 q00 r)))))
 (let ((?x59 (* b p)))
 (let ((?x55 (* a00 q00)))
 (let (($x580 (= (+ (* (- 1) (* q a)) ?x55 (* (- 1) (* b00 p00)) ?x59) 0)))
 (let ((?x51 (* b00 r00)))
 (let ((?x540 (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) (* s a) ?x51)))
 (let (($x749 (and (= (+ (* (- 1) (* r q)) (* s p) ?x141 ?x41) 0) (= ?x540 0) $x580 (= ?x598 0) (= ?x1008 0) (or (not (= (* ?x728 ?x989) 0)) (not (= (* ?x780 ?x143) 0))))))
 (let ((?x101 (- s r)))
 (let ((?x99 (- q p)))
 (let ((?x106 (- b a)))
 (let ((?x109 (* a a ?x106 ?x106 p p p ?x99 ?x99 ?x99 r r r ?x101 ?x101 ?x101)))
 (let ((?x110 (+ (* a a a ?x106 p ?x99 r ?x101) (* a p r r r) ?x109)))
 (let ((?x111 (* (+ (- (+ (* (- 1) ?x99 r) (* p ?x101)) ?x37) ?x41) ?x110)))
 (let ((?x84 (- r s)))
 (let ((?x86 (- p q)))
 (let ((?x91 (- a b)))
 (let ((?x94 (* ?x91 ?x91 b b ?x86 ?x86 ?x86 q q q ?x84 ?x84 ?x84 s s s)))
 (let ((?x95 (+ (* ?x91 ?x91 ?x91 b ?x86 q ?x84 s) (* ?x91 ?x86 ?x84 ?x84 ?x84) ?x94)))
 (let ((?x96 (* (+ (- (+ (* (- 1) q ?x84) (* ?x86 s)) ?x37) ?x41) ?x95)))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) (* b00 p00)) ?x59) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x115 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= ?x96 0)) (not (= ?x111 0))))))
 (rewrite (= $x115 $x749))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x117 (asserted $x116)))
 (let ((@x800 (mp (mp @x117 (quant-intro (proof-bind ?x554) (= $x116 $x1013)) $x1013) (rewrite (= $x1013 $x1013)) $x1013)))
 (let ((@x237 (mp~ (mp @x800 (quant-intro (proof-bind ?x1116) (= $x1013 $x1111)) $x1111) (sk (~ $x1111 $x899)) $x899)))
 (let ((@x565 (mp @x237 (rewrite (= $x899 $x864)) $x864)))
 (let ((@x371 (and-elim @x565 $x187)))
 (let ((@x585 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x187) $x481)) @x371 $x481)))
 (let (($x616 (<= ?x186 0)))
 (let ((@x134 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x187) $x616)) @x371 $x616)))
 (let (($x407 (not (<= ?x135 0))))
 (let (($x832 (>= ?x828 0)))
 (let (($x634 (<= ?x828 0)))
 (let ((@x498 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x185 (not $x634) (not $x832))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x634)) @x134 @x585 false) $x634) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x832)) @x134 @x585 false) $x832) $x185)))
 (let (($x637 (>= ?x135 0)))
 (let ((@x817 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x163 $x407 (not $x637))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x637)) @x134 @x585 false) $x637) (unit-resolution (and-elim @x565 $x174) @x498 $x130) $x407)))
 ((_ th-lemma arith farkas 1 1 1) @x817 @x134 @x585 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        3
 :arith-assert-lower        29
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          7
 :arith-fixed-eqs           6
 :arith-max-min             696
 :arith-nonlinear-bounds    10
 :arith-num-rows            14
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 96
 :arith-tableau-max-rows    14
 :conflicts                 4
 :decisions                 7
 :del-clause                15
 :final-checks              4
 :max-memory                19.63
 :memory                    19.19
 :mk-bool-var               21
 :mk-clause                 24
 :num-allocs                473636
 :num-checks                1
 :propagations              19
 :rlimit-count              6405
 :time                      0.01
 :total-time                0.03)
