% Warning: check-sat is not the last entry. Skipping the rest!
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_2 on simpleloopV2_denorm_inv1_1xlen1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7675
% Time elapsed: 0.500 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity_6 on simpleloopV2_denorm_inv1_1xlen1
% Time limit reached!
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Time limit
% Termination phase: Saturation

% Memory used [KB]: 7803
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% dis+11_10_add=off:afr=on:afp=100000:afq=1.2:amm=off:anc=none:cond=on:gs=on:gsem=on:inw=on:ile=on:irw=on:lma=on:nm=64:newcnf=on:nwc=10:sas=z3:sac=on:sp=reverse_arity:gtg=exists_all_2 on simpleloopV2_denorm_inv1_1xlen1
% Refutation found. Thanks to Tanya!
% SZS status Unsatisfiable for simpleloopV2_denorm_inv1_1xlen1
% SZS output start Proof for simpleloopV2_denorm_inv1_1xlen1
1. ? [X1 : $int,X0 : $int] : (0 = $sum($difference($difference(X0,y00),x00),X1) & (~0 = $product($product($sum($sum($difference($difference($difference(X0,1),y00),x00),X1),1),$sum(X1,1)),$sum(X1,1)) | ~0 = $product($product($sum($difference($difference($sum(X0,1),y00),x00),$difference(X1,1)),$difference(X1,1)),$difference(X1,1)))) [input]
2. ? [X1 : $int,X0 : $int] : (0 = $sum($sum($difference(X0,y00),$uminus(x00)),X1) & (~0 = $product($product($sum($sum($sum($difference($difference(X0,1),y00),$uminus(x00)),X1),1),$sum(X1,1)),$sum(X1,1)) | ~0 = $product($product($sum($sum($difference($sum(X0,1),y00),$uminus(x00)),$sum(X1,$uminus(1))),$sum(X1,$uminus(1))),$sum(X1,$uminus(1))))) [theory normalization 1]
21. ? [X1 : $int,X0 : $int] : (0 = $sum($sum($sum(X0,$uminus(y00)),$uminus(x00)),X1) & (~0 = $product($product($sum($sum($sum($sum($difference(X0,1),$uminus(y00)),$uminus(x00)),X1),1),$sum(X1,1)),$sum(X1,1)) | ~0 = $product($product($sum($sum($sum($sum(X0,1),$uminus(y00)),$uminus(x00)),$sum(X1,$uminus(1))),$sum(X1,$uminus(1))),$sum(X1,$uminus(1))))) [theory normalization 2]
22. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum(X1,$uminus(y00)),$uminus(x00)),X0) & (~0 = $product($product($sum($sum($sum($sum($difference(X1,1),$uminus(y00)),$uminus(x00)),X0),1),$sum(X0,1)),$sum(X0,1)) | ~0 = $product($product($sum($sum($sum($sum(X1,1),$uminus(y00)),$uminus(x00)),$sum(X0,$uminus(1))),$sum(X0,$uminus(1))),$sum(X0,$uminus(1))))) [rectify 21]
23. ? [X0 : $int,X1 : $int] : (0 = $sum($sum($sum(X1,$uminus(y00)),$uminus(x00)),X0) & (0 != $product($product($sum($sum($sum($sum($difference(X1,1),$uminus(y00)),$uminus(x00)),X0),1),$sum(X0,1)),$sum(X0,1)) | 0 != $product($product($sum($sum($sum($sum(X1,1),$uminus(y00)),$uminus(x00)),$sum(X0,$uminus(1))),$sum(X0,$uminus(1))),$sum(X0,$uminus(1))))) [flattening 22]
24. 0 != $product($product($sum($sum($sum($sum(sK1,1),$uminus(y00)),$uminus(x00)),$sum(sK0,$uminus(1))),$sum(sK0,$uminus(1))),$sum(sK0,$uminus(1))) | 0 != $product($product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum(sK0,1)),$sum(sK0,1)) [cnf transformation 23]
25. 0 = $sum($sum($sum(sK1,$uminus(y00)),$uminus(x00)),sK0) [cnf transformation 23]
27. 0 != $product($product($sum(sK1,$sum($uminus(y00),$sum($uminus(x00),sK0))),$sum(sK0,-1)),$sum(sK0,-1)) | 0 != $product($product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum(sK0,1)),$sum(sK0,1)) [evaluation 24]
29. 1 <=> 0 = $sum($sum($sum(sK1,$uminus(y00)),$uminus(x00)),sK0) [avatar definition]
32. 1 [avatar split clause 25,29]
34. 2 <=> 0 = $product($product($sum($sum($sum($sum($difference(sK1,1),$uminus(y00)),$uminus(x00)),sK0),1),$sum(sK0,1)),$sum(sK0,1)) [avatar definition]
38. 3 <=> 0 = $product($product($sum(sK1,$sum($uminus(y00),$sum($uminus(x00),sK0))),$sum(sK0,-1)),$sum(sK0,-1)) [avatar definition]
41. ~2 | ~3 [avatar split clause 27,38,34]
42. $false [avatar sat refutation 32,41]
% SZS output end Proof for simpleloopV2_denorm_inv1_1xlen1
% ------------------------------
% Version: Vampire 4.5.1 (commit 7537e19c0 on 2021-06-08 12:31:04 +0200)
% Linked with Z3 4.8.10.0 517d907567f4283ad8b48ff9c2a3f6dce838569e z3-4.8.4-4541-g517d90756
% Termination reason: Refutation

% Memory used [KB]: 7036
% Time elapsed: 0.046 s
% ------------------------------
% ------------------------------
% Success in time 1.552 s
