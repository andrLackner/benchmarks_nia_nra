unsat
((set-logic NIA)
(declare-fun y!0 () Int)
(declare-fun x!1 () Int)
(proof
(let ((?x1604 (+ y00 x00 (* (- 1) x!1) (* (- 1) y!0))))
 (let (($x2020 (<= ?x1604 0)))
 (let (($x1756 (= ?x1604 0)))
 (let ((?x2301 (* x00 x!1 y!0)))
 (let ((?x2179 (* (- 1) (* y00 x!1 x!1))))
 (let ((?x2211 (* (- 1) (* y00 x!1 x!1 y!0 y!0))))
 (let ((?x2178 (* (- 1) (* x00 x!1 x!1 y!0 y!0))))
 (let ((?x2209 (* (- 1) (* x00 x!1 x!1))))
 (let ((?x2176 (* y00 x!1)))
 (let ((?x2208 (* 3 (* y00 y!0 y!0))))
 (let ((?x1967 (* x!1 x!1 y!0 y!0)))
 (let ((?x2239 (* 3 ?x1967)))
 (let ((?x1504 (* x00 y!0 y!0 y!0)))
 (let ((?x2174 (* 3 (* x00 y!0 y!0))))
 (let ((?x2205 (* (- 1) (* x00 x!1 y!0 y!0 y!0))))
 (let ((?x1487 (* x!1 y!0)))
 (let ((?x2225 (* (- 4) ?x1487)))
 (let ((?x1484 (* y!0 y!0 y!0)))
 (let ((?x2204 (* (- 3) ?x1484)))
 (let ((?x2173 (* (- 2) y!0)))
 (let ((?x1443 (* y00 y!0 y!0 y!0)))
 (let ((?x2202 (* (- 1) (* y00 x!1 y!0 y!0 y!0))))
 (let ((?x1438 (* x!1 x!1 y!0 y!0 y!0)))
 (let ((?x2170 (* 2 ?x1438)))
 (let ((?x1437 (* y!0 y!0)))
 (let ((?x611 (* (- 3) ?x1437)))
 (let ((?x2201 (* (- 2) x!1)))
 (let ((?x1319 (* x00 x!1)))
 (let ((?x1084 (* x!1 x!1)))
 (let ((?x2238 (* (- 1) ?x1084)))
 (let ((?x441 (* y!0 y!0 y!0 y!0)))
 (let ((?x2226 (* (- 1) ?x441)))
 (let ((?x431 (* x!1 x!1 x!1 y!0 y!0)))
 (let ((?x355 (* x!1 x!1 x!1 y!0)))
 (let ((?x182 (* 2 ?x355)))
 (let ((?x301 (* y00 x!1 y!0)))
 (let ((?x260 (* x!1 y!0 y!0 y!0 y!0)))
 (let ((?x163 (* x!1 x!1 x!1)))
 (let ((?x119 (* x!1 y!0 y!0)))
 (let ((?x2200 (* (- 4) ?x119)))
 (let ((?x2169 (* 2 x00)))
 (let ((?x2199 (* 2 y00)))
 (let ((?x2213 (+ ?x2199 ?x2169 ?x2200 ?x163 ?x260 ?x301 ?x182 ?x431 ?x2226 ?x2238 ?x1319 ?x2201 ?x611 ?x2170 ?x2202 ?x1443 (* 3 (* x00 y!0)) ?x2173 ?x2204 ?x2225 ?x2205 ?x2174 ?x1504 (* (- 2) (* y00 x!1 x!1 y!0)) ?x2239 (* (- 2) (* x00 x!1 x!1 y!0)) (* 3 (* y00 y!0)) ?x2208 ?x2176 ?x2209 ?x2178 (* (- 1) (* y00 x!1 y!0 y!0)) ?x2211 ?x2179 ?x2301 (* (- 1) (* x00 x!1 y!0 y!0)))))
 (let (($x2214 (= ?x2213 0)))
 (let (($x2219 (not $x2214)))
 (let ((?x2304 (* x00 x!1 y!0 y!0)))
 (let ((?x2230 (* y00 x!1 y!0 y!0)))
 (let ((?x1489 (* (- 3) ?x1967)))
 (let ((?x758 (* 4 ?x1487)))
 (let ((?x1148 (* 3 ?x1437)))
 (let ((?x433 (* (- 2) ?x355)))
 (let ((?x2044 (+ ?x2199 ?x2169 ?x2200 ?x163 ?x260 ?x301 ?x433 ?x431 ?x441 ?x1084 (* (- 1) ?x1319) ?x2201 ?x1148 ?x2170 ?x2202 (* (- 1) ?x1443) (* (- 3) (* x00 y!0)) ?x2173 ?x2204 ?x758 ?x2205 ?x2174 (* (- 1) ?x1504) (* 2 (* y00 x!1 x!1 y!0)) ?x1489 (* 2 (* x00 x!1 x!1 y!0)) (* (- 3) (* y00 y!0)) ?x2208 (* (- 1) ?x2176) ?x2209 ?x2178 ?x2230 ?x2211 ?x2179 ?x2301 ?x2304)))
 (let (($x2045 (= ?x2044 0)))
 (let (($x2233 (or (not $x2045) $x2219)))
 (let (($x1269 (and $x1756 $x2233)))
 (let ((?x710 (* x!1 x!1 y!0 y!0 x00)))
 (let ((?x789 (* x!1 x!1 x00)))
 (let ((?x691 (* y!0 y!0 y!0 x00)))
 (let ((?x1514 (* (- 3) (* y!0 y!0 x00))))
 (let ((?x261 (* (- 1) ?x260)))
 (let ((?x193 (* (- 1) ?x163)))
 (let ((?x432 (* (- 1) ?x431)))
 (let ((?x416 (* x!1 y!0 y!0 y!0 y00)))
 (let ((?x1781 (* y!0 y!0 y!0 y00)))
 (let ((?x122 (* 4 ?x119)))
 (let ((?x1486 (* (- 2) ?x1438)))
 (let ((?x1485 (* 3 ?x1484)))
 (let ((?x1483 (* x!1 y!0 y!0 y!0 x00)))
 (let ((?x1472 (* (- 1) (* x!1 y!0 x00))))
 (let ((?x814 (* x!1 x00)))
 (let ((?x2038 (* (- 1) (* x!1 y!0 y00))))
 (let ((?x2033 (* x!1 x!1 y00)))
 (let ((?x2017 (* x!1 y00)))
 (let ((?x1479 (* x!1 x!1 y!0 y!0 y00)))
 (let ((?x2078 (* (- 3) (* y!0 y!0 y00))))
 (let ((?x1242 (* (- 2) x00)))
 (let ((?x1228 (* (- 2) y00)))
 (let ((?x349 (* 2 y!0)))
 (let ((?x785 (* 2 x!1)))
 (let ((?x2227 (+ ?x785 ?x349 ?x1228 ?x1242 (* 3 (* y!0 y00)) ?x2078 (* (- 1) (* x!1 y!0 y!0 y00)) ?x1479 ?x2017 ?x2033 ?x2038 (* (- 2) (* x!1 x!1 y!0 y00)) ?x814 ?x1472 (* (- 1) (* x!1 y!0 y!0 x00)) ?x1483 ?x611 ?x1485 ?x1486 ?x2225 ?x122 ?x2238 ?x2239 ?x1781 ?x416 ?x432 ?x193 ?x182 ?x2226 ?x261 (* 3 (* y!0 x00)) ?x1514 ?x691 ?x789 (* (- 2) (* x!1 x!1 y!0 x00)) ?x710)))
 (let ((?x1482 (* x!1 y!0 y!0 x00)))
 (let ((?x997 (* x!1 y!0 y!0 y00)))
 (let ((?x614 (+ ?x785 ?x349 ?x1228 ?x1242 (* (- 3) (* y!0 y00)) ?x2078 ?x997 ?x1479 (* (- 1) ?x2017) ?x2033 ?x2038 (* 2 (* x!1 x!1 y!0 y00)) (* (- 1) ?x814) ?x1472 ?x1482 ?x1483 ?x1148 ?x1485 ?x1486 ?x758 ?x122 ?x1084 ?x1489 (* (- 1) ?x1781) ?x416 ?x432 ?x193 ?x433 ?x441 ?x261 (* (- 3) (* y!0 x00)) ?x1514 (* (- 1) ?x691) ?x789 (* 2 (* x!1 x!1 y!0 x00)) ?x710)))
 (let (($x1752 (and (= (+ x!1 y!0 (* (- 1) y00) (* (- 1) x00)) 0) (or (not (= ?x614 0)) (not (= ?x2227 0))))))
 (let (($x1435 (exists ((x Int) (y Int) )(! (let ((?x1330 (* x x y y x00)))
 (let ((?x1302 (* x x y x00)))
 (let ((?x2139 (* (- 2) ?x1302)))
 (let ((?x1284 (* x x x00)))
 (let ((?x1184 (* y y y x00)))
 (let ((?x1212 (* (- 3) (* y y x00))))
 (let ((?x1159 (* y x00)))
 (let ((?x1211 (* 3 ?x1159)))
 (let ((?x1030 (* (- 1) (* x y y y y))))
 (let ((?x962 (* y y y y)))
 (let ((?x963 (* (- 1) ?x962)))
 (let ((?x715 (* x x x y)))
 (let ((?x747 (* 2 ?x715)))
 (let ((?x782 (* (- 1) (* x x x))))
 (let ((?x781 (* (- 1) (* x x x y y))))
 (let ((?x593 (* x y y y y00)))
 (let ((?x591 (* y y y y00)))
 (let ((?x511 (* x x y y)))
 (let ((?x806 (* 3 ?x511)))
 (let ((?x493 (* x x)))
 (let ((?x693 (* (- 1) ?x493)))
 (let ((?x1083 (* 4 (* x y y))))
 (let ((?x398 (* x y)))
 (let ((?x795 (* (- 4) ?x398)))
 (let ((?x538 (* (- 2) (* x x y y y))))
 (let ((?x1082 (* 3 (* y y y))))
 (let ((?x363 (* y y)))
 (let ((?x920 (* (- 3) ?x363)))
 (let ((?x270 (* x y y y x00)))
 (let ((?x253 (* x y y x00)))
 (let ((?x1325 (* (- 1) ?x253)))
 (let ((?x241 (* x y x00)))
 (let ((?x1294 (* (- 1) ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x175 (* x x y y00)))
 (let ((?x687 (* (- 2) ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x172 (* (- 1) ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x162 (* x y00)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x152 (* x y y y00)))
 (let ((?x153 (* (- 1) ?x152)))
 (let ((?x148 (* y y y00)))
 (let ((?x1579 (* (- 3) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x547 (* 3 ?x141)))
 (let ((?x1242 (* (- 2) x00)))
 (let ((?x1228 (* (- 2) y00)))
 (let ((?x1905 (* 2 y)))
 (let ((?x485 (* 2 x)))
 (let ((?x1434 (+ ?x485 ?x1905 ?x1228 ?x1242 ?x547 ?x1579 ?x153 ?x154 ?x162 ?x166 ?x172 ?x687 ?x235 ?x1294 ?x1325 ?x270 ?x920 ?x1082 ?x538 ?x795 ?x1083 ?x693 ?x806 ?x591 ?x593 ?x781 ?x782 ?x747 ?x963 ?x1030 ?x1211 ?x1212 ?x1184 ?x1284 ?x2139 ?x1330)))
 (let ((?x1337 (* 2 ?x1302)))
 (let ((?x1574 (* (- 1) ?x1184)))
 (let ((?x1583 (* (- 3) ?x1159)))
 (let ((?x825 (* (- 2) ?x715)))
 (let ((?x592 (* (- 1) ?x591)))
 (let ((?x749 (* (- 3) ?x511)))
 (let ((?x744 (* 4 ?x398)))
 (let ((?x909 (* 3 ?x363)))
 (let ((?x1031 (* (- 1) ?x235)))
 (let ((?x194 (* 2 ?x175)))
 (let ((?x498 (* (- 1) ?x162)))
 (let ((?x1171 (* (- 3) ?x141)))
 (let ((?x998 (+ ?x485 ?x1905 ?x1228 ?x1242 ?x1171 ?x1579 ?x152 ?x154 ?x498 ?x166 ?x172 ?x194 ?x1031 ?x1294 ?x253 ?x270 ?x909 ?x1082 ?x538 ?x744 ?x1083 ?x493 ?x749 ?x592 ?x593 ?x781 ?x782 ?x825 ?x962 ?x1030 ?x1583 ?x1212 ?x1574 ?x1284 ?x1337 ?x1330)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x120 (or (not (= ?x998 0)) (not (= ?x1434 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let (($x1402 (exists ((x Int) (y Int) )(! (let ((?x1350 (* (- 1) (* y (- 1)))))
 (let ((?x1330 (* x x y y x00)))
 (let ((?x1302 (* x x y x00)))
 (let ((?x2139 (* (- 2) ?x1302)))
 (let ((?x1284 (* x x x00)))
 (let ((?x1184 (* y y y x00)))
 (let ((?x1212 (* (- 3) (* y y x00))))
 (let ((?x1159 (* y x00)))
 (let ((?x1211 (* 3 ?x1159)))
 (let ((?x1030 (* (- 1) (* x y y y y))))
 (let ((?x962 (* y y y y)))
 (let ((?x963 (* (- 1) ?x962)))
 (let ((?x715 (* x x x y)))
 (let ((?x747 (* 2 ?x715)))
 (let ((?x782 (* (- 1) (* x x x))))
 (let ((?x781 (* (- 1) (* x x x y y))))
 (let ((?x593 (* x y y y y00)))
 (let ((?x591 (* y y y y00)))
 (let ((?x511 (* x x y y)))
 (let ((?x806 (* 3 ?x511)))
 (let ((?x493 (* x x)))
 (let ((?x693 (* (- 1) ?x493)))
 (let ((?x1083 (* 4 (* x y y))))
 (let ((?x398 (* x y)))
 (let ((?x795 (* (- 4) ?x398)))
 (let ((?x538 (* (- 2) (* x x y y y))))
 (let ((?x1082 (* 3 (* y y y))))
 (let ((?x363 (* y y)))
 (let ((?x920 (* (- 3) ?x363)))
 (let ((?x320 (* (- 1) (* y 1))))
 (let ((?x270 (* x y y y x00)))
 (let ((?x253 (* x y y x00)))
 (let ((?x1325 (* (- 1) ?x253)))
 (let ((?x241 (* x y x00)))
 (let ((?x1294 (* (- 1) ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x175 (* x x y y00)))
 (let ((?x687 (* (- 2) ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x172 (* (- 1) ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x162 (* x y00)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x152 (* x y y y00)))
 (let ((?x153 (* (- 1) ?x152)))
 (let ((?x148 (* y y y00)))
 (let ((?x1579 (* (- 3) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x547 (* 3 ?x141)))
 (let ((?x1242 (* (- 2) x00)))
 (let ((?x1228 (* (- 2) y00)))
 (let ((?x1905 (* 2 y)))
 (let ((?x485 (* 2 x)))
 (let ((?x2134 (+ ?x485 ?x1905 ?x1228 ?x1242 ?x547 ?x1579 ?x153 ?x154 ?x162 ?x166 ?x172 ?x687 ?x235 ?x1294 ?x1325 ?x270 ?x320 ?x920 ?x1082 ?x538 ?x795 ?x1083 ?x693 ?x806 ?x591 ?x593 ?x781 ?x782 ?x747 ?x963 ?x1030 ?x1211 ?x1212 ?x1184 ?x1284 ?x2139 ?x1330 ?x1350)))
 (let ((?x1337 (* 2 ?x1302)))
 (let ((?x1574 (* (- 1) ?x1184)))
 (let ((?x1583 (* (- 3) ?x1159)))
 (let ((?x825 (* (- 2) ?x715)))
 (let ((?x592 (* (- 1) ?x591)))
 (let ((?x749 (* (- 3) ?x511)))
 (let ((?x744 (* 4 ?x398)))
 (let ((?x909 (* 3 ?x363)))
 (let ((?x1031 (* (- 1) ?x235)))
 (let ((?x194 (* 2 ?x175)))
 (let ((?x498 (* (- 1) ?x162)))
 (let ((?x1171 (* (- 3) ?x141)))
 (let ((?x908 (* 3 y)))
 (let ((?x2439 (+ ?x485 ?x908 ?x1228 ?x1242 ?x1171 ?x1579 ?x152 ?x154 ?x498 ?x166 ?x172 ?x194 ?x1031 ?x1294 ?x253 ?x270 ?x320 ?x909 ?x1082 ?x538 ?x744 ?x1083 ?x493 ?x749 ?x592 ?x593 ?x781 ?x782 ?x825 ?x962 ?x1030 ?x1583 ?x1212 ?x1574 ?x1284 ?x1337 ?x1330)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (and $x120 (or (not (= ?x2439 0)) (not (= ?x2134 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!27))
 ))
 (let ((?x1471 (lambda ((x Int) (y Int) )(let ((?x1330 (* x x y y x00)))
 (let ((?x1302 (* x x y x00)))
 (let ((?x2139 (* (- 2) ?x1302)))
 (let ((?x1284 (* x x x00)))
 (let ((?x1184 (* y y y x00)))
 (let ((?x1212 (* (- 3) (* y y x00))))
 (let ((?x1159 (* y x00)))
 (let ((?x1211 (* 3 ?x1159)))
 (let ((?x1030 (* (- 1) (* x y y y y))))
 (let ((?x962 (* y y y y)))
 (let ((?x963 (* (- 1) ?x962)))
 (let ((?x715 (* x x x y)))
 (let ((?x747 (* 2 ?x715)))
 (let ((?x782 (* (- 1) (* x x x))))
 (let ((?x781 (* (- 1) (* x x x y y))))
 (let ((?x593 (* x y y y y00)))
 (let ((?x591 (* y y y y00)))
 (let ((?x511 (* x x y y)))
 (let ((?x806 (* 3 ?x511)))
 (let ((?x493 (* x x)))
 (let ((?x693 (* (- 1) ?x493)))
 (let ((?x1083 (* 4 (* x y y))))
 (let ((?x398 (* x y)))
 (let ((?x795 (* (- 4) ?x398)))
 (let ((?x538 (* (- 2) (* x x y y y))))
 (let ((?x1082 (* 3 (* y y y))))
 (let ((?x363 (* y y)))
 (let ((?x920 (* (- 3) ?x363)))
 (let ((?x270 (* x y y y x00)))
 (let ((?x253 (* x y y x00)))
 (let ((?x1325 (* (- 1) ?x253)))
 (let ((?x241 (* x y x00)))
 (let ((?x1294 (* (- 1) ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x175 (* x x y y00)))
 (let ((?x687 (* (- 2) ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x172 (* (- 1) ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x162 (* x y00)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x152 (* x y y y00)))
 (let ((?x153 (* (- 1) ?x152)))
 (let ((?x148 (* y y y00)))
 (let ((?x1579 (* (- 3) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x547 (* 3 ?x141)))
 (let ((?x1242 (* (- 2) x00)))
 (let ((?x1228 (* (- 2) y00)))
 (let ((?x1905 (* 2 y)))
 (let ((?x485 (* 2 x)))
 (let ((?x1434 (+ ?x485 ?x1905 ?x1228 ?x1242 ?x547 ?x1579 ?x153 ?x154 ?x162 ?x166 ?x172 ?x687 ?x235 ?x1294 ?x1325 ?x270 ?x920 ?x1082 ?x538 ?x795 ?x1083 ?x693 ?x806 ?x591 ?x593 ?x781 ?x782 ?x747 ?x963 ?x1030 ?x1211 ?x1212 ?x1184 ?x1284 ?x2139 ?x1330)))
 (let ((?x1337 (* 2 ?x1302)))
 (let ((?x1574 (* (- 1) ?x1184)))
 (let ((?x1583 (* (- 3) ?x1159)))
 (let ((?x825 (* (- 2) ?x715)))
 (let ((?x592 (* (- 1) ?x591)))
 (let ((?x749 (* (- 3) ?x511)))
 (let ((?x744 (* 4 ?x398)))
 (let ((?x909 (* 3 ?x363)))
 (let ((?x1031 (* (- 1) ?x235)))
 (let ((?x194 (* 2 ?x175)))
 (let ((?x498 (* (- 1) ?x162)))
 (let ((?x1171 (* (- 3) ?x141)))
 (let ((?x998 (+ ?x485 ?x1905 ?x1228 ?x1242 ?x1171 ?x1579 ?x152 ?x154 ?x498 ?x166 ?x172 ?x194 ?x1031 ?x1294 ?x253 ?x270 ?x909 ?x1082 ?x538 ?x744 ?x1083 ?x493 ?x749 ?x592 ?x593 ?x781 ?x782 ?x825 ?x962 ?x1030 ?x1583 ?x1212 ?x1574 ?x1284 ?x1337 ?x1330)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x1470 (and $x120 (or (not (= ?x998 0)) (not (= ?x1434 0))))))
 (let ((?x1350 (* (- 1) (* y (- 1)))))
 (let ((?x320 (* (- 1) (* y 1))))
 (let ((?x2134 (+ ?x485 ?x1905 ?x1228 ?x1242 ?x547 ?x1579 ?x153 ?x154 ?x162 ?x166 ?x172 ?x687 ?x235 ?x1294 ?x1325 ?x270 ?x320 ?x920 ?x1082 ?x538 ?x795 ?x1083 ?x693 ?x806 ?x591 ?x593 ?x781 ?x782 ?x747 ?x963 ?x1030 ?x1211 ?x1212 ?x1184 ?x1284 ?x2139 ?x1330 ?x1350)))
 (let ((?x908 (* 3 y)))
 (let ((?x2439 (+ ?x485 ?x908 ?x1228 ?x1242 ?x1171 ?x1579 ?x152 ?x154 ?x498 ?x166 ?x172 ?x194 ?x1031 ?x1294 ?x253 ?x270 ?x320 ?x909 ?x1082 ?x538 ?x744 ?x1083 ?x493 ?x749 ?x592 ?x593 ?x781 ?x782 ?x825 ?x962 ?x1030 ?x1583 ?x1212 ?x1574 ?x1284 ?x1337 ?x1330)))
 (let (($x279 (and $x120 (or (not (= ?x2439 0)) (not (= ?x2134 0))))))
 (rewrite (= $x279 $x1470))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x1403 (exists ((x Int) (y Int) )(! (let ((?x1201 (+ 1 y)))
 (let ((?x1195 (+ (- 1) x)))
 (let ((?x101 (* (- 1) x00)))
 (let ((?x94 (* (- 1) y00)))
 (let ((?x1069 (+ (* y00 ?x1195 ?x1195 ?x1201 ?x1201) (* x00 ?x1195 ?x1201 ?x1201 ?x1201) (* (- 2) (* ?x1195 ?x1195 ?x1201 ?x1201 ?x1201)) (* y00 ?x1195 ?x1201 ?x1201 ?x1201) (* (- 1) (* ?x1195 ?x1195 ?x1195 ?x1201 ?x1201)) (* ?x1195 ?x1201 ?x1201) (* ?x1201 ?x1201 ?x1201) (* (- 1) (* ?x1195 ?x1201 ?x1201 ?x1201 ?x1201)) (* (- 1) (* y00 ?x1201 ?x1201)) (* (- 1) (* x00 ?x1201 ?x1201)) x ?x94 ?x101 y (* x00 ?x1195 ?x1195 ?x1201 ?x1201))))
 (let ((?x1075 (+ 1 x)))
 (let ((?x1240 (+ (- 1) y)))
 (let ((?x1762 (+ (* y00 ?x1240 ?x1240 ?x1075 ?x1075) (* x00 ?x1240 ?x1240 ?x1240 ?x1075) (* (- 2) (* ?x1240 ?x1240 ?x1240 ?x1075 ?x1075)) (* y00 ?x1240 ?x1240 ?x1240 ?x1075) (* (- 1) (* ?x1240 ?x1240 ?x1075 ?x1075 ?x1075)) (* ?x1240 ?x1240 ?x1075) (* ?x1240 ?x1240 ?x1240) (* (- 1) (* ?x1240 ?x1240 ?x1240 ?x1240 ?x1075)) (* (- 1) (* y00 ?x1240 ?x1240)) (* (- 1) (* x00 ?x1240 ?x1240)) x ?x94 ?x101 y (* x00 ?x1240 ?x1240 ?x1075 ?x1075))))
 (and (= (+ x ?x94 ?x101 y) 0) (or (not (= ?x1762 0)) (not (= ?x1069 0)))))))))))) :qid k!27))
 ))
 (let ((?x1356 (lambda ((x Int) (y Int) )(let ((?x1350 (* (- 1) (* y (- 1)))))
 (let ((?x1330 (* x x y y x00)))
 (let ((?x1302 (* x x y x00)))
 (let ((?x2139 (* (- 2) ?x1302)))
 (let ((?x1284 (* x x x00)))
 (let ((?x1184 (* y y y x00)))
 (let ((?x1212 (* (- 3) (* y y x00))))
 (let ((?x1159 (* y x00)))
 (let ((?x1211 (* 3 ?x1159)))
 (let ((?x1030 (* (- 1) (* x y y y y))))
 (let ((?x962 (* y y y y)))
 (let ((?x963 (* (- 1) ?x962)))
 (let ((?x715 (* x x x y)))
 (let ((?x747 (* 2 ?x715)))
 (let ((?x782 (* (- 1) (* x x x))))
 (let ((?x781 (* (- 1) (* x x x y y))))
 (let ((?x593 (* x y y y y00)))
 (let ((?x591 (* y y y y00)))
 (let ((?x511 (* x x y y)))
 (let ((?x806 (* 3 ?x511)))
 (let ((?x493 (* x x)))
 (let ((?x693 (* (- 1) ?x493)))
 (let ((?x1083 (* 4 (* x y y))))
 (let ((?x398 (* x y)))
 (let ((?x795 (* (- 4) ?x398)))
 (let ((?x538 (* (- 2) (* x x y y y))))
 (let ((?x1082 (* 3 (* y y y))))
 (let ((?x363 (* y y)))
 (let ((?x920 (* (- 3) ?x363)))
 (let ((?x320 (* (- 1) (* y 1))))
 (let ((?x270 (* x y y y x00)))
 (let ((?x253 (* x y y x00)))
 (let ((?x1325 (* (- 1) ?x253)))
 (let ((?x241 (* x y x00)))
 (let ((?x1294 (* (- 1) ?x241)))
 (let ((?x235 (* x x00)))
 (let ((?x175 (* x x y y00)))
 (let ((?x687 (* (- 2) ?x175)))
 (let ((?x171 (* x y y00)))
 (let ((?x172 (* (- 1) ?x171)))
 (let ((?x166 (* x x y00)))
 (let ((?x162 (* x y00)))
 (let ((?x154 (* x x y y y00)))
 (let ((?x152 (* x y y y00)))
 (let ((?x153 (* (- 1) ?x152)))
 (let ((?x148 (* y y y00)))
 (let ((?x1579 (* (- 3) ?x148)))
 (let ((?x141 (* y y00)))
 (let ((?x547 (* 3 ?x141)))
 (let ((?x1242 (* (- 2) x00)))
 (let ((?x1228 (* (- 2) y00)))
 (let ((?x1905 (* 2 y)))
 (let ((?x485 (* 2 x)))
 (let ((?x2134 (+ ?x485 ?x1905 ?x1228 ?x1242 ?x547 ?x1579 ?x153 ?x154 ?x162 ?x166 ?x172 ?x687 ?x235 ?x1294 ?x1325 ?x270 ?x320 ?x920 ?x1082 ?x538 ?x795 ?x1083 ?x693 ?x806 ?x591 ?x593 ?x781 ?x782 ?x747 ?x963 ?x1030 ?x1211 ?x1212 ?x1184 ?x1284 ?x2139 ?x1330 ?x1350)))
 (let ((?x1337 (* 2 ?x1302)))
 (let ((?x1574 (* (- 1) ?x1184)))
 (let ((?x1583 (* (- 3) ?x1159)))
 (let ((?x825 (* (- 2) ?x715)))
 (let ((?x592 (* (- 1) ?x591)))
 (let ((?x749 (* (- 3) ?x511)))
 (let ((?x744 (* 4 ?x398)))
 (let ((?x909 (* 3 ?x363)))
 (let ((?x1031 (* (- 1) ?x235)))
 (let ((?x194 (* 2 ?x175)))
 (let ((?x498 (* (- 1) ?x162)))
 (let ((?x1171 (* (- 3) ?x141)))
 (let ((?x908 (* 3 y)))
 (let ((?x2439 (+ ?x485 ?x908 ?x1228 ?x1242 ?x1171 ?x1579 ?x152 ?x154 ?x498 ?x166 ?x172 ?x194 ?x1031 ?x1294 ?x253 ?x270 ?x320 ?x909 ?x1082 ?x538 ?x744 ?x1083 ?x493 ?x749 ?x592 ?x593 ?x781 ?x782 ?x825 ?x962 ?x1030 ?x1583 ?x1212 ?x1574 ?x1284 ?x1337 ?x1330)))
 (let (($x120 (= (+ x y (* (- 1) y00) (* (- 1) x00)) 0)))
 (let (($x279 (and $x120 (or (not (= ?x2439 0)) (not (= ?x2134 0))))))
 (let ((?x1201 (+ 1 y)))
 (let ((?x1195 (+ (- 1) x)))
 (let ((?x101 (* (- 1) x00)))
 (let ((?x94 (* (- 1) y00)))
 (let ((?x1069 (+ (* y00 ?x1195 ?x1195 ?x1201 ?x1201) (* x00 ?x1195 ?x1201 ?x1201 ?x1201) (* (- 2) (* ?x1195 ?x1195 ?x1201 ?x1201 ?x1201)) (* y00 ?x1195 ?x1201 ?x1201 ?x1201) (* (- 1) (* ?x1195 ?x1195 ?x1195 ?x1201 ?x1201)) (* ?x1195 ?x1201 ?x1201) (* ?x1201 ?x1201 ?x1201) (* (- 1) (* ?x1195 ?x1201 ?x1201 ?x1201 ?x1201)) (* (- 1) (* y00 ?x1201 ?x1201)) (* (- 1) (* x00 ?x1201 ?x1201)) x ?x94 ?x101 y (* x00 ?x1195 ?x1195 ?x1201 ?x1201))))
 (let ((?x1075 (+ 1 x)))
 (let ((?x1240 (+ (- 1) y)))
 (let ((?x1762 (+ (* y00 ?x1240 ?x1240 ?x1075 ?x1075) (* x00 ?x1240 ?x1240 ?x1240 ?x1075) (* (- 2) (* ?x1240 ?x1240 ?x1240 ?x1075 ?x1075)) (* y00 ?x1240 ?x1240 ?x1240 ?x1075) (* (- 1) (* ?x1240 ?x1240 ?x1075 ?x1075 ?x1075)) (* ?x1240 ?x1240 ?x1075) (* ?x1240 ?x1240 ?x1240) (* (- 1) (* ?x1240 ?x1240 ?x1240 ?x1240 ?x1075)) (* (- 1) (* y00 ?x1240 ?x1240)) (* (- 1) (* x00 ?x1240 ?x1240)) x ?x94 ?x101 y (* x00 ?x1240 ?x1240 ?x1075 ?x1075))))
 (let (($x1358 (and (= (+ x ?x94 ?x101 y) 0) (or (not (= ?x1762 0)) (not (= ?x1069 0))))))
 (rewrite (= $x1358 $x279))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x91 (exists ((x Int) (y Int) )(! (let ((?x63 (- y 1)))
 (let ((?x62 (+ x 1)))
 (let ((?x68 (- (+ (* ?x62 ?x62 ?x63 ?x63 y00) (* ?x62 x00 ?x63 ?x63 ?x63)) (* 2 ?x62 ?x62 ?x63 ?x63 ?x63))))
 (let ((?x72 (- (+ ?x68 (* ?x62 ?x63 ?x63 ?x63 y00)) (* ?x62 ?x62 ?x62 ?x63 ?x63))))
 (let ((?x79 (- (+ ?x72 (* ?x62 ?x63 ?x63) (* ?x63 ?x63 ?x63)) (* ?x62 ?x63 ?x63 ?x63 ?x63))))
 (let ((?x82 (+ (- (- ?x79 (* ?x63 ?x63 y00)) (* x00 ?x63 ?x63)) x 1)))
 (let (($x87 (= (+ (- (- ?x82 y00) x00) ?x63 (* ?x62 ?x62 x00 ?x63 ?x63)) 0)))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x41 (- (+ (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35 ?x35)) (* 2 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x45 (- (+ ?x41 (* ?x34 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x34 ?x34 ?x35 ?x35))))
 (let ((?x52 (- (+ ?x45 (* ?x34 ?x35 ?x35) (* ?x35 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x56 (- (+ (- (- ?x52 (* ?x35 ?x35 y00)) (* x00 ?x35 ?x35)) ?x34) y00)))
 (let (($x60 (= (+ (- ?x56 x00) y 1 (* ?x34 ?x34 x00 ?x35 ?x35)) 0)))
 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x60) (not $x87))))))))))))))))) :qid k!27))
 ))
 (let ((?x1398 (lambda ((x Int) (y Int) )(let ((?x1201 (+ 1 y)))
 (let ((?x1195 (+ (- 1) x)))
 (let ((?x101 (* (- 1) x00)))
 (let ((?x94 (* (- 1) y00)))
 (let ((?x1069 (+ (* y00 ?x1195 ?x1195 ?x1201 ?x1201) (* x00 ?x1195 ?x1201 ?x1201 ?x1201) (* (- 2) (* ?x1195 ?x1195 ?x1201 ?x1201 ?x1201)) (* y00 ?x1195 ?x1201 ?x1201 ?x1201) (* (- 1) (* ?x1195 ?x1195 ?x1195 ?x1201 ?x1201)) (* ?x1195 ?x1201 ?x1201) (* ?x1201 ?x1201 ?x1201) (* (- 1) (* ?x1195 ?x1201 ?x1201 ?x1201 ?x1201)) (* (- 1) (* y00 ?x1201 ?x1201)) (* (- 1) (* x00 ?x1201 ?x1201)) x ?x94 ?x101 y (* x00 ?x1195 ?x1195 ?x1201 ?x1201))))
 (let ((?x1075 (+ 1 x)))
 (let ((?x1240 (+ (- 1) y)))
 (let ((?x1762 (+ (* y00 ?x1240 ?x1240 ?x1075 ?x1075) (* x00 ?x1240 ?x1240 ?x1240 ?x1075) (* (- 2) (* ?x1240 ?x1240 ?x1240 ?x1075 ?x1075)) (* y00 ?x1240 ?x1240 ?x1240 ?x1075) (* (- 1) (* ?x1240 ?x1240 ?x1075 ?x1075 ?x1075)) (* ?x1240 ?x1240 ?x1075) (* ?x1240 ?x1240 ?x1240) (* (- 1) (* ?x1240 ?x1240 ?x1240 ?x1240 ?x1075)) (* (- 1) (* y00 ?x1240 ?x1240)) (* (- 1) (* x00 ?x1240 ?x1240)) x ?x94 ?x101 y (* x00 ?x1240 ?x1240 ?x1075 ?x1075))))
 (let (($x1358 (and (= (+ x ?x94 ?x101 y) 0) (or (not (= ?x1762 0)) (not (= ?x1069 0))))))
 (let ((?x63 (- y 1)))
 (let ((?x62 (+ x 1)))
 (let ((?x68 (- (+ (* ?x62 ?x62 ?x63 ?x63 y00) (* ?x62 x00 ?x63 ?x63 ?x63)) (* 2 ?x62 ?x62 ?x63 ?x63 ?x63))))
 (let ((?x72 (- (+ ?x68 (* ?x62 ?x63 ?x63 ?x63 y00)) (* ?x62 ?x62 ?x62 ?x63 ?x63))))
 (let ((?x79 (- (+ ?x72 (* ?x62 ?x63 ?x63) (* ?x63 ?x63 ?x63)) (* ?x62 ?x63 ?x63 ?x63 ?x63))))
 (let ((?x82 (+ (- (- ?x79 (* ?x63 ?x63 y00)) (* x00 ?x63 ?x63)) x 1)))
 (let (($x87 (= (+ (- (- ?x82 y00) x00) ?x63 (* ?x62 ?x62 x00 ?x63 ?x63)) 0)))
 (let ((?x35 (+ y 1)))
 (let ((?x34 (- x 1)))
 (let ((?x41 (- (+ (* ?x34 ?x34 ?x35 ?x35 y00) (* ?x34 x00 ?x35 ?x35 ?x35)) (* 2 ?x34 ?x34 ?x35 ?x35 ?x35))))
 (let ((?x45 (- (+ ?x41 (* ?x34 ?x35 ?x35 ?x35 y00)) (* ?x34 ?x34 ?x34 ?x35 ?x35))))
 (let ((?x52 (- (+ ?x45 (* ?x34 ?x35 ?x35) (* ?x35 ?x35 ?x35)) (* ?x34 ?x35 ?x35 ?x35 ?x35))))
 (let ((?x56 (- (+ (- (- ?x52 (* ?x35 ?x35 y00)) (* x00 ?x35 ?x35)) ?x34) y00)))
 (let (($x60 (= (+ (- ?x56 x00) y 1 (* ?x34 ?x34 x00 ?x35 ?x35)) 0)))
 (let (($x90 (and (= (+ (- (- x y00) x00) y) 0) (or (not $x60) (not $x87)))))
 (rewrite (= $x90 $x1358)))))))))))))))))))))))))))
 ))
 (let ((@x92 (asserted $x91)))
 (let ((@x1024 (mp (mp @x92 (quant-intro (proof-bind ?x1398) (= $x91 $x1403)) $x1403) (rewrite (= $x1403 $x1403)) $x1403)))
 (let ((@x2077 (mp (mp @x1024 (quant-intro (proof-bind ?x1356) (= $x1403 $x1402)) $x1402) (quant-intro (proof-bind ?x1471) (= $x1402 $x1435)) $x1435)))
 (let ((@x1182 (mp (mp~ @x2077 (sk (~ $x1435 $x1752)) $x1752) (rewrite (= $x1752 $x1269)) $x1269)))
 (let ((@x1802 (and-elim @x1182 $x1756)))
 (let ((@x2184 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1756) $x2020)) @x1802 $x2020)))
 (let (($x2153 (>= ?x1604 0)))
 (let ((@x2190 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1756) $x2153)) @x1802 $x2153)))
 (let (($x2183 (<= ?x2044 0)))
 (let ((@x2260 (lemma ((_ th-lemma arith) (hypothesis (not $x2183)) @x2190 @x2184 @x2190 @x2184 false) $x2183)))
 (let (($x1093 (>= ?x2044 0)))
 (let ((@x2294 (lemma ((_ th-lemma arith) (hypothesis (not $x1093)) @x2190 @x2184 @x2190 @x2184 false) $x1093)))
 (let (($x2248 (not (<= ?x2213 0))))
 (let (($x2188 (>= ?x2213 0)))
 (let ((@x2216 (lemma ((_ th-lemma arith) (hypothesis (not $x2188)) @x2190 @x2184 @x2190 @x2184 false) $x2188)))
 (let ((@x2245 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2045 (not $x2183) (not $x1093))) @x2260 @x2294 $x2045)))
 (let ((@x2228 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2214 $x2248 (not $x2188))) (unit-resolution (and-elim @x1182 $x2233) @x2245 $x2219) @x2216 $x2248)))
 ((_ th-lemma arith) @x2228 @x2190 @x2184 @x2294 @x2260 @x2190 @x2184 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 2
 :arith-assert-diseq        6
 :arith-assert-lower        23
 :arith-assert-upper        6
 :arith-conflicts           4
 :arith-eq-adapter          3
 :arith-gcd-tests           6
 :arith-grobner             4
 :arith-max-min             560
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    11
 :arith-num-rows            3
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              3
 :arith-row-summations      4
 :arith-tableau-max-columns 47
 :arith-tableau-max-rows    3
 :conflicts                 4
 :decisions                 6
 :del-clause                12
 :final-checks              8
 :max-memory                3.94
 :memory                    3.36
 :mk-bool-var               15
 :mk-clause                 12
 :num-allocs                1401194
 :num-checks                1
 :propagations              14
 :rlimit-count              7911
 :time                      0.01
 :total-time                0.02)
