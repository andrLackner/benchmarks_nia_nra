unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x7557 (* r!2 s!1)))
 (let ((?x7562 (* 2 ?x7557)))
 (let ((?x10498 (* (- 3) s!1)))
 (let ((?x7556 (* 6 x!0)))
 (let ((?x10525 (* 3 r!2)))
 (let ((?x559 (* r00 r00 r00)))
 (let ((?x560 (* 12 ?x559)))
 (let ((?x516 (* s00 r00)))
 (let ((?x594 (* (- 6) ?x516)))
 (let ((?x591 (* (- 6) x00)))
 (let ((?x590 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x13557 (+ ?x44 ?x590 ?x591 ?x594 ?x560 ?x10525 (* (- 12) (* r00 r00 r!2)) ?x7556 ?x10498 ?x7562 (* 4 (* s00 r!2)))))
 (let (($x3494 (<= ?x13557 0)))
 (let (($x1181 (= ?x13557 0)))
 (let ((?x10564 (+ 3 (* 6 r!2) s!1)))
 (let ((?x10553 (* (- 1) s!1)))
 (let ((?x922 (+ x!0 ?x10553)))
 (let ((?x10489 (+ 1 r!2)))
 (let ((?x895 (* s00 x00)))
 (let ((?x11180 (* 18 ?x895)))
 (let ((?x737 (* s00 r00 r00)))
 (let ((?x11349 (* 108 ?x737)))
 (let ((?x681 (* s00 s00)))
 (let ((?x11348 (* (- 57) ?x681)))
 (let ((?x610 (* 54 ?x516)))
 (let ((?x11331 (* (- 216) x00)))
 (let ((?x11329 (* 171 s00)))
 (let ((?x5103 (+ ?x11329 (* (- 108) r00) ?x11331 (* (- 324) (* r00 r00)) (* (- 82) (* s00 r!2 s!1 s!1)) (* 12 (* s00 r!2 r!2 x!0 s!1 s!1)) ?x610 (* (- 270) (* r00 x00)) (* 567 (* r!2 r!2 x!0 s!1)) (* 648 (* r!2 x!0 s!1)) (* 132 (* s00 r!2 r!2 r!2 r!2 x!0)) (* 108 (* r00 r!2 x!0 x!0 s!1)) (* 144 (* s00 r!2 x!0 s!1)) (* 213 (* s00 r!2 r!2 x!0 s!1)) ?x11348 (* 18 (* x!0 s!1 s!1)) (* 156 (* x00 r!2 r!2 s!1 s!1)) (* (- 54) (* x00 r!2 r!2 r!2 x!0 s!1)) ?x11349 (* (- 6) (* s00 s00 r00)) ?x11180 (* 2 (* ?x10489 ?x10489 ?x10489 ?x922 ?x10564 ?x10564 ?x10564)) (* (- 108) (* r00 r00 x00)) (* 26 (* s00 r00 x!0 s!1)) (* (- 216) (* r00 x00 r!2 x!0 s!1)) (* 36 (* r00 x00 r!2 r!2 r!2 s!1 s!1)) (* 648 (* r00 r!2 r!2 x!0 x!0)) (* 288 (* r00 r!2 r!2 r!2 x!0 x!0)) (* (- 270) r!2) (* 342 (* r00 x!0)) (* 420 (* r00 r!2 s!1 s!1)) (* 576 (* r00 r!2 r!2 x!0)) (* 94 (* s00 r!2 r!2 r!2 x!0 s!1)) (* (- 1296) (* r00 r00 r!2 r!2)) (* 194 (* s00 s00 r!2 s!1)) (* (- 6) (* x00 ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* (- 306) (* s00 s00 r!2 r!2 x!0)) (* (- 180) (* r00 x00 x!0)) (* (- 972) (* r00 x00 r!2 x!0)) (* (- 1620) (* r00 x00 r!2 r!2 x!0)) (* 216 (* s00 r!2 r!2 x!0)) (* (- 12) (* s00 r!2 x!0 x!0 s!1)) (* (- 6) (* s00 r!2 r!2 x!0 x!0 s!1)) (* 312 (* s00 r!2 r!2 r!2 x!0)) (* 2 (* s00 ?x10489 ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* (- 24) (* s00 s00 r!2 r!2 r!2 r!2 x!0)) (* (- 702) (* x00 r!2)) (* 129 (* s00 s!1)) (* 90 (* r00 x00 s!1)) (* (- 28) (* s00 s00 r00 r!2 r!2 x!0)) (* 12 (* s00 s00 r00 r!2 r!2 r!2 s!1)) (* 36 (* s00 r00 r00 r!2 r!2 x!0 s!1)) (* 36 (* s00 r00 r00 x!0 s!1)) (* 72 (* s00 r00 r00 r!2 x!0 s!1)) (* 216 (* s00 r00 r00 r!2 r!2 r!2 x!0)) (* 504 (* s00 r00 r00 r!2 r!2 x!0)) (* 360 (* s00 r00 r00 r!2 x!0)) (* (- 30) (* s00 x!0)) (* 72 (* s00 r00 r00 x!0)) (* (- 36) (* s00 r00 r00 r!2 r!2 s!1 s!1)) (* (- 72) (* s00 r00 r00 r!2 s!1 s!1)) (* 54 (* ?x10489 ?x10489 ?x10489 ?x922 ?x922 ?x10564)) (* (- 36) (* s00 r00 r00 s!1 s!1)) (* (- 36) (* s00 r00 r00 s!1)) (* (- 144) (* r00 r!2 r!2 s!1)) (* 4 (* s00 s00 r00 r!2 s!1 s!1)) (* (- 20) (* s00 s00 r00 r!2 x!0)) (* 72 (* s00 r!2 r!2 r!2)) (* 4 (* r00 ?x10489 ?x10489 ?x922 ?x10564 ?x10564 ?x10564)) (* 3 (* ?x10489 ?x10489 ?x922 ?x10564 ?x10564 ?x10564)) (* (- 252) (* r!2 r!2 x!0 x!0)) (* (- 114) (* r!2 r!2 r!2 s!1 s!1)) (* 54 (* r00 x!0 x!0 s!1)) (* (- 315) (* r!2 r!2 s!1 s!1)) (* (- 450) (* r!2 r!2 r!2 s!1)) (* 216 (* s00 r!2 s!1)) (* 144 (* r!2 r!2 r!2 r!2 x!0)) (* (- 144) (* r!2 r!2 r!2 r!2 s!1)) (* 450 (* r!2 r!2 r!2 x!0)) (* (- 648) (* r00 x00 r!2)) (* (- 1044) (* r00 x00 r!2 r!2 r!2 x!0)) (* (- 36) (* r00 x00 r!2 r!2 r!2 x!0 s!1)) (* (- 366) (* s00 r00 r!2 r!2 s!1)) (* (- 288) (* s00 r00 r!2 s!1)) (* 72 (* r00 x!0 x!0)) (* (- 24) (* s00 s00 r!2 r!2)) (* (- 108) (* r00 r!2 r!2 x!0 s!1 s!1)) (* 216 (* r00 r00 x!0)) (* (- 126) (* s00 s00 r!2)) (* (- 108) (* r00 x!0 s!1 s!1)) (* (- 576) (* r00 r!2 r!2 r!2 x!0 s!1)) (* 54 (* r00 r!2 r!2 s!1 s!1 s!1)) (* (- 90) (* r00 x00 x!0 s!1)) (* (- 129) (* s00 r!2 r!2 s!1 s!1)) (* (- 58) (* s00 r!2 r!2 r!2 s!1 s!1)) (* (- 12) (* s00 r!2 x!0)) (* (- 312) (* s00 r!2 r!2 r!2 s!1)) (* 12 (* s00 x!0 s!1 s!1)) (* (- 6) (* s00 r!2 r!2 s!1 s!1 s!1)) (* (- 72) (* s00 r00 r!2 r!2)) (* (- 38) (* s00 s00 x!0)) (* 249 (* x!0 s!1)) (* (- 12) (* s00 s00 r00 r!2)) (* (- 42) (* s00 r00 s!1)) (* (- 1017) (* r!2 r!2 s!1)) (* (- 234) (* r!2 x!0 x!0)) (* (- 30) (* r00 s!1 s!1)) (* (- 90) (* r!2 r!2 r!2 x!0 x!0)) (* (- 6) (* r!2 r!2 s!1 s!1 s!1)) (* 432 (* r00 r!2 x!0 x!0)) (* (- 1296) (* r00 r00 r!2)) (* (- 6) (* s00 x00 r!2 r!2 s!1 s!1)) (* 954 (* r!2 x!0)) (* 60 (* s00 x00 r!2 x!0)) (* 2 (* s00 s00 r00 s!1 s!1)) (* (- 132) (* s00 r!2 r!2 r!2 r!2 s!1)) (* 24 (* s00 r!2 x!0 s!1 s!1)) (* 26 (* s00 r00 r!2 r!2 x!0 s!1)) (* (- 36) (* r00 r00 ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* 72 (* s00 r00 r!2)) (* (- 216) (* r00 r00 x00 r!2)) (* (- 28) (* r00 ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* (- 72) (* r00 r00 x!0 s!1 s!1)) (* (- 144) (* r00 r00 r!2 x!0 s!1 s!1)) (* 936 (* r00 r!2 x!0)) (* (- 165) (* s!1 s!1)) (* (- 42) (* s00 s00 r!2 x!0 s!1)) (* 261 x!0) (* (- 432) (* r!2 r!2)) (* (- 384) (* r!2 s!1 s!1)) (* (- 216) (* s00 r00 r00 r!2 r!2 r!2 s!1)) (* (- 4) (* s00 s00 r00 x!0)) (* (- 270) s!1) (* (- 360) (* s00 r00 r00 r!2 s!1)) (* 27 (* s00 s00 r!2 r!2 s!1 s!1)) (* 216 (* r00 r00 r!2 r!2 r!2 s!1 s!1)) (* 36 (* r00 r00 s!1 s!1 s!1)) (* 72 (* r00 r00 r!2 s!1 s!1 s!1)) (* 28 (* s00 s00 r00 r!2 r!2 s!1)) (* 2 (* s00 s00 r00 s!1)) (* 12 (* s00 ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* 1620 (* r00 x00 r!2 r!2 s!1)) (* 20 (* s00 s00 r00 r!2 s!1)) (* (- 1080) (* r00 r00 r!2 s!1)) (* (- 216) (* r00 r00 r!2 r!2 r!2 s!1)) (* (- 540) (* r00 r00 r!2 r!2 s!1)) (* 12 (* r!2 r!2 x!0 s!1 s!1)) (* (- 2) (* r00 s00 ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* (- 432) (* r00 r00 r!2 r!2 r!2 x!0 s!1)) (* (- 156) (* s00 r00 r!2 r!2 r!2 s!1)) (* (- 48) (* x00 x!0 s!1)) (* (- 156) (* x00 r!2 r!2 x!0 s!1)) (* (- 150) (* x00 r!2 x!0 s!1)) (* (- 4) (* s00 s00 r00 r!2 x!0 s!1)) (* (- 2) (* s00 s00 r00 x!0 s!1)) (* 6 (* ?x10489 ?x10489 ?x922 ?x922 ?x10564 ?x10564)) (* (- 6) (* s00 s!1 s!1 s!1)) (* (- 36) (* s00 r!2 r!2 r!2 x!0 x!0)) (* (- 30) (* r00 x!0 s!1)) (* (- 28) (* s00 r00 s!1 s!1)) (* 7 (* s00 s!1 s!1)) (* (- 52) (* s00 r00 r!2 s!1 s!1)) (* (- 90) (* x00 x!0)) (* 19 (* s00 s00 s!1 s!1)) (* 42 (* s00 s00 r!2 s!1 s!1)) (* 216 (* r00 x00 r!2 s!1 s!1)) (* 288 (* r00 r!2 r!2 r!2 s!1 s!1)) (* (- 9) (* s!1 s!1 s!1)) (* (- 954) ?x7557) (* (- 72) (* x!0 x!0)) (* 468 (* r00 r00 r!2 r!2 s!1 s!1)) (* 288 (* r00 r00 r!2 s!1 s!1)) (* (- 6) (* s00 x00 s!1 s!1)) (* (- 36) (* s00 x00 r!2 r!2 r!2 s!1)) (* 324 (* x00 r!2 r!2 r!2 r!2 s!1)) (* (- 12) (* s00 x00 r!2 s!1 s!1)) (* (- 72) (* r00 r00 x00 x!0)) (* (- 60) (* s00 r!2 x!0 x!0)) (* (- 84) (* s00 x00 r!2 r!2 s!1)) (* 54 (* x00 r!2 r!2 r!2 s!1 s!1)) (* (- 6) (* r!2 r!2 x!0 x!0 s!1)) (* (- 60) (* s00 x00 r!2 s!1)) (* (- 6) (* s00 x00 s!1)) (* 12 (* s00 x00 x!0)) (* 1044 (* x00 r!2 r!2 r!2 s!1)) (* (- 216) (* r00 x00 r!2 r!2)) (* 684 (* s00 r!2)) (* 204 (* r!2 r!2 r!2 x!0 s!1)) (* 216 (* s00 r00 r00 r!2)) (* (- 2) (* s00 s00 r00 r!2 r!2 x!0 s!1)) (* (- 12) (* r!2 x!0 x!0 s!1)) (* 84 (* s00 x00 r!2 r!2 x!0)) (* (- 324) (* x00 r!2 r!2 r!2 r!2 x!0)) (* 36 (* s00 x00 r!2 r!2 r!2 x!0)) (* 6 (* s00 x00 x!0 s!1)) (* 12 (* s00 x00 r!2 x!0 s!1)) (* 6 (* s00 x00 r!2 r!2 x!0 s!1)) (* 72 (* r00 r00 x00 r!2 s!1 s!1)) (* 36 (* r00 r00 x00 r!2 r!2 s!1 s!1)) (* (- 72) (* r00 r00 x00 r!2 x!0 s!1)) (* (- 36) (* r00 r00 x00 x!0 s!1)) (* 2 (* s00 s00 r00 r!2 r!2 s!1 s!1)) (* (- 36) (* r00 r00 x00 r!2 r!2 x!0 s!1)) (* 170 (* s00 s00 r!2 r!2 r!2 s!1)) (* 150 (* x00 r!2 s!1 s!1)) (* (- 170) (* s00 s00 r!2 r!2 r!2 x!0)) (* (- 84) (* s00 r!2 r!2 x!0 x!0)) (* 36 (* r00 r00 x00 s!1)) (* 360 (* r00 r00 x00 r!2 s!1)) (* 504 (* r00 r00 x00 r!2 r!2 s!1)) (* (- 360) (* r00 r00 x00 r!2 x!0)) (* (- 504) (* r00 r00 x00 r!2 r!2 x!0)) (* (- 216) (* r00 r00 x00 r!2 r!2 r!2 x!0)) (* 36 (* r00 r00 x00 s!1 s!1)) (* (- 216) (* r00 x00 r!2 r!2 r!2 r!2 x!0)) (* 450 (* x00 r!2 s!1)) (* 216 (* r00 x00 r!2 r!2 r!2 r!2 s!1)) (* 624 (* r00 r!2 r!2 s!1 s!1)) (* (- 144) (* r00 r!2 r!2 r!2 s!1)) (* 90 (* r00 x00 s!1 s!1)) (* 144 (* r00 r!2 r!2 r!2 x!0)) (* (- 1272) (* r00 r!2 r!2 x!0 s!1)) (* (- 26) (* ?x10489 ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* 162 (* r00 x00 r!2 r!2 s!1 s!1)) (* (- 6) (* x!0 x!0 s!1)) (* (- 1044) (* x00 r!2 r!2 r!2 x!0)) (* (- 504) (* s00 r00 r00 r!2 r!2 s!1)) (* (- 378) (* r00 s!1)) (* 36 (* s00 x00 r!2)) (* (- 36) (* r00 r00 s!1 s!1)) (* 54 (* s00 r00 x!0)) (* 648 (* r00 r00 r!2 x!0)) (* (- 780) (* r00 r!2 x!0 s!1)) (* 24 (* r!2 x!0 s!1 s!1)) (* (- 12) (* s00 r!2 s!1 s!1 s!1)) (* (- 192) (* s00 r!2 r!2 s!1)) (* (- 72) (* r00 r00 r!2 r!2 x!0 s!1 s!1)) (* (- 972) (* r00 r00 r!2 r!2 x!0 s!1)) (* 216 (* r00 r00 r!2 r!2 r!2 x!0)) (* 540 (* r00 r00 r!2 r!2 x!0)) (* (- 6) (* s00 x!0 x!0 s!1)) (* 19 (* s00 s00 s!1)) (* 36 (* r00 r00 r!2 r!2 s!1 s!1 s!1)) (* 108 (* r00 r!2 s!1 s!1 s!1)) (* 52 (* s00 r00 r!2 x!0 s!1)) (* (- 162) (* r00 x00 r!2 r!2 x!0 s!1)) (* 6 (* ?x10489 ?x10489 ?x922 ?x10564 ?x10564)) (* 2 (* ?x10489 ?x10564 ?x10564 ?x10564)) (* 36 (* r00 ?x10489 ?x10489 ?x10489 ?x922 ?x922 ?x10564)) (* (- 648) (* r00 r00 r!2 x!0 s!1)) (* (- 540) (* x00 r!2 r!2)) (* 19 (* s00 x!0 s!1)) (* 1044 (* r00 x00 r!2 r!2 r!2 s!1)) (* (- 72) (* r00 r00 x!0 s!1)) (* (- 792) (* r00 r!2 s!1)) (* 54 (* r00 r!2 r!2 x!0 x!0 s!1)) (* (- 1206) (* x00 r!2 r!2 x!0)) (* (- 576) (* x00 r!2 x!0)) (* 1206 (* x00 r!2 r!2 s!1)) (* (- 26) (* s00 r00 r!2 r!2 s!1 s!1)) (* 264 (* s00 r00 r!2 x!0)) (* 366 (* s00 r00 r!2 r!2 x!0)) (* 720 (* s00 r!2 r!2)) (* (- 12) (* r!2 s!1 s!1 s!1)) (* 156 (* s00 r00 r!2 r!2 r!2 x!0)) (* (- 12) (* s00 x!0 x!0)) (* 42 (* x00 s!1 s!1)) (* 24 (* s00 s00 r!2 r!2 r!2 r!2 s!1)) (* (- 216) (* r00 r!2 x!0 s!1 s!1)) (* (- 216) (* r!2 r!2 r!2)) (* 4 (* s00 s00 r!2 r!2 r!2 s!1 s!1)) (* (- 19) (* s00 s00 x!0 s!1)) (* 72 (* r00 r00 x!0 x!0)) (* (- 12) (* s00 s00 r00 r!2 r!2 r!2 x!0)) (* 360 (* r00 r00 r!2 x!0 x!0)) (* (- 27) (* s00 s00 r!2 r!2 x!0 s!1)) (* 306 (* s00 s00 r!2 r!2 s!1)) (* 504 (* r00 r00 r!2 r!2 x!0 x!0)) (* (- 198) (* s00 s00 r!2 x!0)) (* (- 4) (* s00 s00 r!2 r!2 r!2 x!0 s!1)) (* 216 (* r00 r00 r!2 r!2 r!2 x!0 x!0)) (* 36 (* r00 r00 x!0 x!0 s!1)) (* 72 (* r00 r00 r!2 x!0 x!0 s!1)) (* 36 (* r00 r00 r!2 r!2 x!0 x!0 s!1)) (* 58 (* r00 s!1 s!1 s!1)) (* (- 216) (* r00 r!2)) (* 432 (* r00 r!2 r!2)) (* 864 (* r00 r!2 r!2 r!2)) (* 216 (* r00 r00 x00 r!2 r!2 r!2 s!1)) (* 1053 (* r!2 r!2 x!0)) (* (- 432) (* r00 r00 s!1)) (* 936 (* r00 x00 r!2 s!1)))))
 (let (($x5104 (= ?x5103 54)))
 (let (($x5109 (not $x5104)))
 (let ((?x13427 (* r00 r00 s!1)))
 (let ((?x460 (* 36 ?x13427)))
 (let ((?x845 (* (- 9) s!1)))
 (let ((?x1436 (* x00 x00)))
 (let ((?x6062 (* 108 ?x1436)))
 (let ((?x1274 (* s00 s00 s00)))
 (let ((?x7291 (* 16 ?x1274)))
 (let ((?x972 (* r00 r00 r00 x00)))
 (let ((?x4442 (* (- 432) ?x972)))
 (let ((?x6833 (* (- 108) ?x895)))
 (let ((?x10816 (* (- 36) ?x737)))
 (let ((?x7380 (* 51 ?x681)))
 (let ((?x612 (* r00 x00)))
 (let ((?x4810 (* 108 ?x612)))
 (let ((?x10270 (* (- 54) ?x516)))
 (let ((?x137 (* 9 s00)))
 (let ((?x9890 (+ ?x137 ?x10270 (* 216 (* s00 r00 x00)) ?x4810 ?x7380 ?x10816 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) ?x6833 ?x4442 (* 216 (* s00 r00 r00 r00)) (* (- 108) (* r00 x!0)) ?x7291 ?x6062 (* (- 66) (* s00 s!1)) (* 108 (* s00 x!0)) (* (- 108) (* x!0 s!1)) (* 108 (* s00 r00 s!1)) (* 108 (* x00 s!1)) (* 15 (* s!1 s!1)) ?x845 (* (- 216) (* r00 r00 r00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* x!0 x!0)) (* 54 (* r00 s!1)) (* 36 (* r00 r00 s!1 s!1)) (* (- 216) (* s00 r00 x!0)) (* 432 (* r00 r00 r00 x!0)) ?x460)))
 (let (($x9891 (= ?x9890 0)))
 (let ((?x967 (* r00 r00 x00)))
 (let ((?x6286 (* 36 ?x967)))
 (let ((?x3075 (* (- 6) ?x895)))
 (let ((?x6290 (* 15 ?x681)))
 (let ((?x2292 (* 54 ?x612)))
 (let ((?x465 (+ ?x137 (* (- 24) ?x516) ?x2292 ?x6290 ?x10816 (* 2 (* s00 s00 r00)) ?x3075 ?x6286 (* (- 54) (* r00 x!0)) (* 54 (* x00 r!2)) (* (- 12) (* s00 s!1)) (* 6 (* s00 x!0)) (* (- 2) (* s00 r!2 s!1)) (* 36 (* r00 x00 r!2)) (* (- 36) (* r00 r00 x!0)) (* 4 (* s00 s00 r!2)) (* (- 6) (* x!0 s!1)) (* 2 (* s00 r00 s!1)) (* 6 (* x00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 54) (* r!2 x!0)) (* (- 36) (* r00 r!2 x!0)) (* (- 3) (* s!1 s!1)) (* (- 2) (* r!2 s!1 s!1)) ?x845 (* 24 ?x7557) (* (- 24) (* s00 r!2)) (* 24 (* r00 s!1)) ?x460)))
 (let (($x479 (= ?x465 0)))
 (let ((?x3471 (* 4 ?x681)))
 (let ((?x10331 (* 18 ?x612)))
 (let ((?x1957 (+ ?x44 (* (- 9) ?x516) ?x10331 ?x3471 (* (- 6) ?x737) (* (- 18) (* r00 x!0)) (* 18 (* x00 r!2)) (* (- 2) (* s00 s!1)) (* (- 18) (* r!2 x!0)) (* 6 (* s00 r00 r!2)) (* (- 2) (* s!1 s!1)) ?x10498 (* 9 ?x7557) (* (- 9) (* s00 r!2)) (* 9 (* r00 s!1)) (* (- 6) (* r00 r!2 s!1)) (* 6 ?x13427))))
 (let (($x1969 (= ?x1957 0)))
 (let ((?x391 (* r00 r00)))
 (let ((?x2622 (* (- 3) ?x391)))
 (let ((?x5759 (+ s00 ?x2622 (* 3 (* r!2 r!2)) ?x10553)))
 (let (($x5655 (= ?x5759 0)))
 (let (($x9063 (and $x5655 $x1181 $x1969 $x479 $x9891 $x5109)))
 (let ((?x13196 (* (- 36) (* r00 ?x10489 ?x10489 ?x10489 (+ ?x10553 x!0) (+ ?x10553 x!0) ?x10564))))
 (let ((?x14221 (* 108 ?x967)))
 (let ((?x14213 (* (- 18) ?x895)))
 (let ((?x758 (* s00 s00 r00)))
 (let ((?x14207 (* 6 ?x758)))
 (let ((?x14203 (* (- 108) ?x737)))
 (let ((?x14198 (* 57 ?x681)))
 (let ((?x14188 (* 270 ?x612)))
 (let ((?x14183 (* 324 ?x391)))
 (let ((?x14181 (* 216 x00)))
 (let ((?x11332 (* 108 r00)))
 (let ((?x14180 (* (- 171) s00)))
 (let ((?x7236 (+ (* 270 r!2) (* 270 s!1) (* (- 261) x!0) ?x14180 ?x11332 ?x14181 (* 432 (* r!2 r!2)) ?x14183 (* 954 ?x7557) (* 1296 (* r!2 r00 r00)) (* (- 684) (* r!2 s00)) ?x10270 ?x14188 (* 165 (* s!1 s!1)) (* (- 954) (* r!2 x!0)) (* 792 (* r!2 s!1 r00)) (* (- 936) (* r!2 x!0 r00)) (* 432 (* s!1 r00 r00)) ?x14198 (* 30 (* x!0 s00)) (* (- 342) (* x!0 r00)) (* (- 2) (* ?x10489 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564 ?x10564)) ?x14203 (* 30 (* s!1 s!1 r00)) (* 702 (* r!2 x00)) ?x14207 (* (- 129) (* s!1 s00)) (* (- 12) (* s00 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)) (* 378 (* s!1 r00)) (* (- 72) (* r!2 s00 r00)) (* 42 (* s!1 s00 r00)) (* 9 (* s!1 s!1 s!1)) ?x14213 (* 384 (* r!2 s!1 s!1)) (* (- 249) (* s!1 x!0)) (* (- 6) (* ?x10489 ?x10489 (+ ?x10553 x!0) (+ ?x10553 x!0) ?x10564 ?x10564)) (* 126 (* r!2 s00 s00)) (* 72 (* x!0 x!0)) ?x14221 (* (- 216) (* r!2 s!1 s00)) (* (- 7) (* s!1 s!1 s00)) (* 648 (* r!2 r00 x00)) (* (- 216) (* x!0 r00 r00)) (* (- 54) (* x!0 s00 r00)) (* 36 (* s!1 s!1 r00 r00)) (* 2 (* s!1 x!0 s00 s00 r00)) (* 4 (* r!2 s!1 x!0 s00 s00 r00)) (* 90 (* x!0 x00)) (* 48 (* s!1 x!0 x00)) (* 150 (* r!2 s!1 x!0 x00)) (* 156 (* r!2 r!2 s!1 x!0 x00)) (* (- 3) (* ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564 ?x10564)) (* 30 (* s!1 x!0 r00)) ?x13196 (* (- 19) (* s!1 s00 s00)) (* 38 (* x!0 s00 s00)) (* 72 (* r!2 r!2 s00 r00)) (* (- 720) (* r!2 r!2 s00)) (* 12 (* r!2 x!0 s00)) (* (- 19) (* s!1 x!0 s00)) (* 36 (* r!2 r!2 r!2 x!0 x!0 s00)) (* 6 (* s!1 s!1 s!1 s00)) (* 192 (* r!2 r!2 s!1 s00)) (* 12 (* r!2 s!1 s!1 s!1 s00)) (* 312 (* r!2 r!2 r!2 s!1 s00)) (* 6 (* r!2 r!2 s!1 s!1 s!1 s00)) (* (- 12) (* s!1 s!1 x!0 s00)) (* (- 24) (* r!2 s!1 s!1 x!0 s00)) (* 132 (* r!2 r!2 r!2 r!2 s!1 s00)) (* 82 (* r!2 s!1 s!1 s00)) (* (- 12) (* r!2 r!2 s!1 s!1 x!0 s00)) (* 129 (* r!2 r!2 s!1 s!1 s00)) (* 58 (* r!2 r!2 r!2 s!1 s!1 s00)) (* 6 (* s!1 x!0 x!0 s00)) (* (- 216) (* r!2 r!2 x!0 s00)) (* 12 (* r!2 s!1 x!0 x!0 s00)) (* 6 (* r!2 r!2 s!1 x!0 x!0 s00)) (* (- 312) (* r!2 r!2 r!2 x!0 s00)) (* (- 132) (* r!2 r!2 r!2 r!2 x!0 s00)) (* (- 144) (* r!2 s!1 x!0 s00)) (* (- 213) (* r!2 r!2 s!1 x!0 s00)) (* (- 94) (* r!2 r!2 r!2 s!1 x!0 s00)) (* (- 648) (* r!2 s!1 x!0)) (* (- 567) (* r!2 r!2 s!1 x!0)) (* 12 (* r!2 s00 s00 r00)) (* (- 156) (* r!2 r!2 s!1 s!1 x00)) (* (- 18) (* s!1 s!1 x!0)) (* (- 2) (* ?x10489 ?x10564 ?x10564 ?x10564)) (* 1017 (* r!2 r!2 s!1)) (* (- 1053) (* r!2 r!2 x!0)) (* 72 (* s!1 x!0 r00 r00)) (* 648 (* r!2 s!1 x!0 r00 r00)) (* 972 (* r!2 r!2 s!1 x!0 r00 r00)) (* 540 (* r!2 r!2 x00)) (* (- 216) (* r!2 r!2 r!2 x!0 r00 r00)) (* (- 540) (* r!2 r!2 x!0 r00 r00)) (* (- 648) (* r!2 x!0 r00 r00)) (* (- 468) (* r!2 r!2 s!1 s!1 r00 r00)) (* (- 288) (* r!2 s!1 s!1 r00 r00)) (* 216 (* r!2 r!2 r!2 s!1 r00 r00)) (* 540 (* r!2 r!2 s!1 r00 r00)) (* 1080 (* r!2 s!1 r00 r00)) (* 12 (* r!2 s!1 s!1 s!1)) (* (- 12) (* r!2 r!2 s!1 s!1 x!0)) (* 54 (* r!2 r!2 r!2 s!1 x!0 x00)) (* 1620 (* r!2 r!2 x!0 r00 x00)) (* 972 (* r!2 x!0 r00 x00)) (* 180 (* x!0 r00 x00)) (* (- 1620) (* r!2 r!2 s!1 r00 x00)) (* (- 936) (* r!2 s!1 r00 x00)) (* (- 90) (* s!1 r00 x00)) (* (- 54) (* ?x10489 ?x10489 ?x10489 (+ ?x10553 x!0) (+ ?x10553 x!0) ?x10564)) (* 36 (* s!1 s00 r00 r00)) (* 360 (* r!2 s!1 s00 r00 r00)) (* 504 (* r!2 r!2 s!1 s00 r00 r00)) (* 216 (* r!2 r!2 r!2 s!1 s00 r00 r00)) (* 36 (* s!1 s!1 s00 r00 r00)) (* 72 (* r!2 s!1 s!1 s00 r00 r00)) (* 36 (* r!2 r!2 s!1 s!1 s00 r00 r00)) (* (- 72) (* x!0 s00 r00 r00)) (* (- 360) (* r!2 x!0 s00 r00 r00)) (* (- 504) (* r!2 r!2 x!0 s00 r00 r00)) (* (- 216) (* r!2 r!2 r!2 x!0 s00 r00 r00)) (* (- 36) (* s!1 x!0 s00 r00 r00)) (* (- 72) (* r!2 s!1 x!0 s00 r00 r00)) (* (- 36) (* r!2 r!2 s!1 x!0 s00 r00 r00)) (* (- 12) (* r!2 r!2 r!2 s!1 s00 s00 r00)) (* 28 (* r!2 r!2 x!0 s00 s00 r00)) (* 20 (* r!2 x!0 s00 s00 r00)) (* 4 (* x!0 s00 s00 r00)) (* (- 28) (* r!2 r!2 s!1 s00 s00 r00)) (* (- 2) (* s!1 s00 s00 r00)) (* (- 20) (* r!2 s!1 s00 s00 r00)) (* 144 (* r!2 r!2 s!1 r00)) (* (- 420) (* r!2 s!1 s!1 r00)) (* (- 576) (* r!2 r!2 x!0 r00)) (* 780 (* r!2 s!1 x!0 r00)) (* (- 4) (* r!2 s!1 s!1 s00 s00 r00)) (* (- 2) (* s!1 s!1 s00 s00 r00)) (* (- 194) (* r!2 s!1 s00 s00)) (* 1296 (* r!2 r!2 r00 r00)) (* 216 (* r!2 r!2 r!2)) (* 6 (* x00 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)) (* 306 (* r!2 r!2 x!0 s00 s00)) (* 198 (* r!2 x!0 s00 s00)) (* (- 306) (* r!2 r!2 s!1 s00 s00)) (* (- 42) (* r!2 s!1 s!1 s00 s00)) (* (- 27) (* r!2 r!2 s!1 s!1 s00 s00)) (* 42 (* r!2 s!1 x!0 s00 s00)) (* (- 216) (* r!2 r!2 r!2 s!1 s!1 r00 r00)) (* (- 36) (* s!1 s!1 s!1 r00 r00)) (* (- 72) (* r!2 s!1 s!1 s!1 r00 r00)) (* (- 36) (* r!2 r!2 s!1 s!1 s!1 r00 r00)) (* (- 24) (* r!2 r!2 r!2 r!2 s!1 s00 s00)) (* 432 (* r!2 r!2 r!2 s!1 x!0 r00 r00)) (* 72 (* s!1 s!1 x!0 r00 r00)) (* 144 (* r!2 s!1 s!1 x!0 r00 r00)) (* 24 (* r!2 r!2 r!2 r!2 x!0 s00 s00)) (* 72 (* r!2 r!2 s!1 s!1 x!0 r00 r00)) (* (- 19) (* s!1 s!1 s00 s00)) (* (- 4) (* r!2 r!2 r!2 s!1 s!1 s00 s00)) (* 19 (* s!1 x!0 s00 s00)) (* (- 72) (* x!0 x!0 r00 r00)) (* 12 (* r!2 r!2 r!2 x!0 s00 s00 r00)) (* (- 360) (* r!2 x!0 x!0 r00 r00)) (* 27 (* r!2 r!2 s!1 x!0 s00 s00)) (* (- 504) (* r!2 r!2 x!0 x!0 r00 r00)) (* 4 (* r!2 r!2 r!2 s!1 x!0 s00 s00)) (* (- 216) (* r!2 r!2 r!2 x!0 x!0 r00 r00)) (* (- 36) (* s!1 x!0 x!0 r00 r00)) (* (- 72) (* r!2 s!1 x!0 x!0 r00 r00)) (* (- 36) (* r!2 r!2 s!1 x!0 x!0 r00 r00)) (* (- 58) (* s!1 s!1 s!1 r00)) (* 216 (* r!2 r00)) (* (- 432) (* r!2 r!2 r00)) (* (- 864) (* r!2 r!2 r!2 r00)) (* (- 216) (* r!2 r!2 r!2 s!1 r00 r00 x00)) (* 12 (* x!0 x!0 s00)) (* (- 42) (* s!1 s!1 x00)) (* (- 24) (* r!2 s!1 s!1 x!0)) (* 26 (* ?x10489 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)) (* 6 (* s!1 x!0 x!0)) (* 12 (* r!2 s!1 x!0 x!0)) (* 6 (* r!2 r!2 s!1 x!0 x!0)) (* (- 216) (* r!2 s00 r00 r00)) (* 2 (* r!2 r!2 s!1 x!0 s00 s00 r00)) (* (- 204) (* r!2 r!2 r!2 s!1 x!0)) (* 450 (* r!2 r!2 r!2 s!1)) (* 315 (* r!2 r!2 s!1 s!1)) (* (- 450) (* r!2 r!2 r!2 x!0)) (* 144 (* r!2 r!2 r!2 r!2 s!1)) (* 114 (* r!2 r!2 r!2 s!1 s!1)) (* (- 144) (* r!2 r!2 r!2 r!2 x!0)) (* 216 (* r!2 r!2 r00 x00)) (* 6 (* s!1 s00 x00)) (* (- 12) (* x!0 s00 x00)) (* 60 (* r!2 s!1 s00 x00)) (* 84 (* r!2 r!2 s!1 s00 x00)) (* 36 (* r!2 r!2 r!2 s!1 s00 x00)) (* 6 (* s!1 s!1 s00 x00)) (* 12 (* r!2 s!1 s!1 s00 x00)) (* 6 (* r!2 r!2 s!1 s!1 s00 x00)) (* (- 60) (* r!2 x!0 s00 x00)) (* (- 324) (* r!2 r!2 r!2 r!2 s!1 x00)) (* (- 84) (* r!2 r!2 x!0 s00 x00)) (* 324 (* r!2 r!2 r!2 r!2 x!0 x00)) (* (- 36) (* r!2 r!2 r!2 x!0 s00 x00)) (* (- 6) (* s!1 x!0 s00 x00)) (* (- 12) (* r!2 s!1 x!0 s00 x00)) (* (- 6) (* r!2 r!2 s!1 x!0 s00 x00)) (* (- 54) (* r!2 r!2 r!2 s!1 s!1 x00)) (* (- 72) (* r!2 s!1 s!1 r00 r00 x00)) (* (- 36) (* r!2 r!2 s!1 s!1 r00 r00 x00)) (* 36 (* s!1 x!0 r00 r00 x00)) (* 72 (* r!2 s!1 x!0 r00 r00 x00)) (* 36 (* r!2 r!2 s!1 x!0 r00 r00 x00)) (* (- 2) (* r!2 r!2 s!1 s!1 s00 s00 r00)) (* (- 170) (* r!2 r!2 r!2 s!1 s00 s00)) (* 170 (* r!2 r!2 r!2 x!0 s00 s00)) (* (- 150) (* r!2 s!1 s!1 x00)) (* 60 (* r!2 x!0 x!0 s00)) (* 84 (* r!2 r!2 x!0 x!0 s00)) (* (- 36) (* s!1 r00 r00 x00)) (* (- 360) (* r!2 s!1 r00 r00 x00)) (* (- 504) (* r!2 r!2 s!1 r00 r00 x00)) (* 72 (* x!0 r00 r00 x00)) (* 360 (* r!2 x!0 r00 r00 x00)) (* 504 (* r!2 r!2 x!0 r00 r00 x00)) (* 216 (* r!2 r!2 r!2 x!0 r00 r00 x00)) (* (- 36) (* s!1 s!1 r00 r00 x00)) (* 234 (* r!2 x!0 x!0)) (* 252 (* r!2 r!2 x!0 x!0)) (* 90 (* r!2 r!2 r!2 x!0 x!0)) (* (- 450) (* r!2 s!1 x00)) (* 216 (* r!2 r!2 r!2 r!2 x!0 r00 x00)) (* 6 (* r!2 r!2 s!1 s!1 s!1)) (* (- 216) (* r!2 r!2 r!2 r!2 s!1 r00 x00)) (* 144 (* r!2 r!2 r!2 s!1 r00)) (* (- 624) (* r!2 r!2 s!1 s!1 r00)) (* (- 144) (* r!2 r!2 r!2 x!0 r00)) (* (- 90) (* s!1 s!1 r00 x00)) (* 1272 (* r!2 r!2 s!1 x!0 r00)) (* (- 216) (* r!2 s!1 s!1 r00 x00)) (* (- 162) (* r!2 r!2 s!1 s!1 r00 x00)) (* 1044 (* r!2 r!2 r!2 x!0 x00)) (* 1206 (* r!2 r!2 x!0 x00)) (* 576 (* r!2 x!0 x00)) (* (- 1206) (* r!2 r!2 s!1 x00)) (* (- 1044) (* r!2 r!2 r!2 s!1 x00)) (* (- 72) (* r!2 r!2 r!2 s00)) (* (- 4) (* r00 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564 ?x10564)) (* (- 1044) (* r!2 r!2 r!2 s!1 r00 x00)) (* 1044 (* r!2 r!2 r!2 x!0 r00 x00)) (* 36 (* r!2 r!2 r!2 s!1 x!0 r00 x00)) (* 28 (* r00 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)) (* 216 (* r!2 r00 r00 x00)) (* 288 (* r!2 s!1 s00 r00)) (* 366 (* r!2 r!2 s!1 s00 r00)) (* 156 (* r!2 r!2 r!2 s!1 s00 r00)) (* 28 (* s!1 s!1 s00 r00)) (* 52 (* r!2 s!1 s!1 s00 r00)) (* 26 (* r!2 r!2 s!1 s!1 s00 r00)) (* (- 264) (* r!2 x!0 s00 r00)) (* (- 366) (* r!2 r!2 x!0 s00 r00)) (* 2 (* r00 s00 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)) (* (- 156) (* r!2 r!2 r!2 x!0 s00 r00)) (* (- 26) (* s!1 x!0 s00 r00)) (* (- 52) (* r!2 s!1 x!0 s00 r00)) (* (- 26) (* r!2 r!2 s!1 x!0 s00 r00)) (* (- 288) (* r!2 r!2 r!2 s!1 s!1 r00)) (* 90 (* s!1 x!0 r00 x00)) (* (- 108) (* r!2 s!1 s!1 s!1 r00)) (* (- 54) (* r!2 r!2 s!1 s!1 s!1 r00)) (* 576 (* r!2 r!2 r!2 s!1 x!0 r00)) (* 108 (* s!1 s!1 x!0 r00)) (* 216 (* r!2 s!1 s!1 x!0 r00)) (* 108 (* r!2 r!2 s!1 s!1 x!0 r00)) (* 24 (* r!2 r!2 s00 s00)) (* (- 72) (* x!0 x!0 r00)) (* (- 432) (* r!2 x!0 x!0 r00)) (* (- 648) (* r!2 r!2 x!0 x!0 r00)) (* (- 288) (* r!2 r!2 r!2 x!0 x!0 r00)) (* (- 54) (* s!1 x!0 x!0 r00)) (* (- 108) (* r!2 s!1 x!0 x!0 r00)) (* (- 54) (* r!2 r!2 s!1 x!0 x!0 r00)) (* 216 (* r!2 s!1 x!0 r00 x00)) (* (- 36) (* r!2 r!2 r!2 s!1 s!1 r00 x00)) (* (- 36) (* r!2 s00 x00)) (* 162 (* r!2 r!2 s!1 x!0 r00 x00)) (* (- 6) (* ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)) (* 36 (* r00 r00 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)) (* (- 2) (* s00 ?x10489 ?x10489 ?x10489 (+ ?x10553 x!0) ?x10564 ?x10564)))))
 (let ((?x1466 (* (- 108) ?x1436)))
 (let ((?x1465 (* (- 16) ?x1274)))
 (let ((?x1146 (* s00 r00 r00 r00)))
 (let ((?x1461 (* (- 216) ?x1146)))
 (let ((?x973 (* 432 ?x972)))
 (let ((?x1219 (* 108 ?x895)))
 (let ((?x821 (* s00 s00 r00 r00)))
 (let ((?x822 (* 36 ?x821)))
 (let ((?x1102 (* 108 ?x758)))
 (let ((?x1090 (* 36 ?x737)))
 (let ((?x1455 (* (- 51) ?x681)))
 (let ((?x8254 (* s!1 r00 r00)))
 (let ((?x733 (* (- 36) ?x8254)))
 (let ((?x1452 (* (- 108) ?x612)))
 (let ((?x603 (* s00 r00 x00)))
 (let ((?x1451 (* (- 216) ?x603)))
 (let ((?x1077 (* (- 9) s00)))
 (let ((?x7484 (* 9 s!1)))
 (let ((?x11392 (+ ?x7484 ?x1077 ?x610 ?x1451 ?x1452 (* (- 15) (* s!1 s!1)) ?x733 ?x1455 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1090 ?x1102 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x822 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1219 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x973 (* 12 (* s!1 s!1 s00)) ?x1461 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1465 (* 216 (* x!0 x00)) ?x1466)))
 (let ((?x980 (* (- 36) ?x967)))
 (let ((?x896 (* 6 ?x895)))
 (let ((?x786 (* (- 2) ?x758)))
 (let ((?x1006 (* (- 15) ?x681)))
 (let ((?x641 (* (- 54) ?x612)))
 (let ((?x654 (* 24 ?x516)))
 (let ((?x6918 (+ ?x7484 ?x1077 (* (- 24) ?x7557) (* 24 (* r!2 s00)) ?x654 ?x641 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x733 ?x1006 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1090 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x786 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x896 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x980 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x738 (* 6 ?x737)))
 (let ((?x694 (* (- 4) ?x681)))
 (let ((?x626 (* (- 18) ?x612)))
 (let ((?x631 (* 9 ?x516)))
 (let ((?x468 (* (- 3) s00)))
 (let ((?x5430 (+ (* 3 s!1) ?x468 (* (- 9) ?x7557) (* 9 (* r!2 s00)) ?x631 ?x626 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x8254) ?x694 (* 18 (* x!0 r00)) ?x738 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x5482 (+ ?x10525 ?x10498 ?x7556 ?x44 ?x590 ?x591 ?x7562 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x594 ?x560)))
 (let (($x10509 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x391)) 0)))
 (let (($x4668 (and $x10509 (= ?x5482 0) (= ?x5430 0) (= ?x6918 0) (= ?x11392 0) (not (= ?x7236 (- 54))))))
 (let (($x14495 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1478 (+ 3 ?x214 s)))
 (let ((?x370 (* (- 1) s)))
 (let ((?x1484 (+ ?x370 x)))
 (let ((?x1475 (+ 1 r)))
 (let ((?x11963 (* (- 36) (* s r00 r00 x00))))
 (let ((?x11733 (* (- 2) (* s s00 s00 r00))))
 (let ((?x1270 (* s s r00 r00)))
 (let ((?x1271 (* 36 ?x1270)))
 (let ((?x967 (* r00 r00 x00)))
 (let ((?x14221 (* 108 ?x967)))
 (let ((?x895 (* s00 x00)))
 (let ((?x14213 (* (- 18) ?x895)))
 (let ((?x758 (* s00 s00 r00)))
 (let ((?x14207 (* 6 ?x758)))
 (let ((?x737 (* s00 r00 r00)))
 (let ((?x14203 (* (- 108) ?x737)))
 (let ((?x681 (* s00 s00)))
 (let ((?x14198 (* 57 ?x681)))
 (let ((?x612 (* r00 x00)))
 (let ((?x14188 (* 270 ?x612)))
 (let ((?x516 (* s00 r00)))
 (let ((?x10270 (* (- 54) ?x516)))
 (let ((?x391 (* r00 r00)))
 (let ((?x14183 (* 324 ?x391)))
 (let ((?x14181 (* 216 x00)))
 (let ((?x11332 (* 108 r00)))
 (let ((?x14180 (* (- 171) s00)))
 (let ((?x14489 (+ (* 270 r) (* 270 s) (* (- 261) x) ?x14180 ?x11332 ?x14181 (* 432 (* r r)) ?x14183 (* 954 (* r s)) (* 1296 (* r r00 r00)) (* (- 684) (* r s00)) ?x10270 ?x14188 (* 165 (* s s)) (* (- 954) (* r x)) (* 792 (* r s r00)) (* (- 936) (* r x r00)) (* 432 (* s r00 r00)) ?x14198 (* 30 (* x s00)) (* (- 342) (* x r00)) (* (- 2) (* ?x1475 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478 ?x1478)) ?x14203 (* 30 (* s s r00)) (* 702 (* r x00)) ?x14207 (* (- 129) (* s s00)) (* (- 12) (* s00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 378 (* s r00)) (* (- 72) (* r s00 r00)) (* 42 (* s s00 r00)) (* 9 (* s s s)) ?x14213 (* 384 (* r s s)) (* (- 249) (* s x)) (* (- 6) (* ?x1475 ?x1475 ?x1484 ?x1484 ?x1478 ?x1478)) (* 126 (* r s00 s00)) (* 72 (* x x)) ?x14221 (* (- 216) (* r s s00)) (* (- 7) (* s s s00)) (* 648 (* r r00 x00)) (* (- 216) (* x r00 r00)) (* (- 54) (* x s00 r00)) ?x1271 (* 2 (* s x s00 s00 r00)) (* 4 (* r s x s00 s00 r00)) (* 90 (* x x00)) (* 48 (* s x x00)) (* 150 (* r s x x00)) (* 156 (* r r s x x00)) (* (- 3) (* ?x1475 ?x1475 ?x1484 ?x1478 ?x1478 ?x1478)) (* 30 (* s x r00)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x1484 ?x1484 ?x1478)) (* (- 19) (* s s00 s00)) (* 38 (* x s00 s00)) (* 72 (* r r s00 r00)) (* (- 720) (* r r s00)) (* 12 (* r x s00)) (* (- 19) (* s x s00)) (* 36 (* r r r x x s00)) (* 6 (* s s s s00)) (* 192 (* r r s s00)) (* 12 (* r s s s s00)) (* 312 (* r r r s s00)) (* 6 (* r r s s s s00)) (* (- 12) (* s s x s00)) (* (- 24) (* r s s x s00)) (* 132 (* r r r r s s00)) (* 82 (* r s s s00)) (* (- 12) (* r r s s x s00)) (* 129 (* r r s s s00)) (* 58 (* r r r s s s00)) (* 6 (* s x x s00)) (* (- 216) (* r r x s00)) (* 12 (* r s x x s00)) (* 6 (* r r s x x s00)) (* (- 312) (* r r r x s00)) (* (- 132) (* r r r r x s00)) (* (- 144) (* r s x s00)) (* (- 213) (* r r s x s00)) (* (- 94) (* r r r s x s00)) (* (- 648) (* r s x)) (* (- 567) (* r r s x)) (* 12 (* r s00 s00 r00)) (* (- 156) (* r r s s x00)) (* (- 18) (* s s x)) (* (- 2) (* ?x1475 ?x1478 ?x1478 ?x1478)) (* 1017 (* r r s)) (* (- 1053) (* r r x)) (* 72 (* s x r00 r00)) (* 648 (* r s x r00 r00)) (* 972 (* r r s x r00 r00)) (* 540 (* r r x00)) (* (- 216) (* r r r x r00 r00)) (* (- 540) (* r r x r00 r00)) (* (- 648) (* r x r00 r00)) (* (- 468) (* r r s s r00 r00)) (* (- 288) (* r s s r00 r00)) (* 216 (* r r r s r00 r00)) (* 540 (* r r s r00 r00)) (* 1080 (* r s r00 r00)) (* 12 (* r s s s)) (* (- 12) (* r r s s x)) (* 54 (* r r r s x x00)) (* 1620 (* r r x r00 x00)) (* 972 (* r x r00 x00)) (* 180 (* x r00 x00)) (* (- 1620) (* r r s r00 x00)) (* (- 936) (* r s r00 x00)) (* (- 90) (* s r00 x00)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x1484 ?x1484 ?x1478)) (* 36 (* s s00 r00 r00)) (* 360 (* r s s00 r00 r00)) (* 504 (* r r s s00 r00 r00)) (* 216 (* r r r s s00 r00 r00)) (* 36 (* s s s00 r00 r00)) (* 72 (* r s s s00 r00 r00)) (* 36 (* r r s s s00 r00 r00)) (* (- 72) (* x s00 r00 r00)) (* (- 360) (* r x s00 r00 r00)) (* (- 504) (* r r x s00 r00 r00)) (* (- 216) (* r r r x s00 r00 r00)) (* (- 36) (* s x s00 r00 r00)) (* (- 72) (* r s x s00 r00 r00)) (* (- 36) (* r r s x s00 r00 r00)) (* (- 12) (* r r r s s00 s00 r00)) (* 28 (* r r x s00 s00 r00)) (* 20 (* r x s00 s00 r00)) (* 4 (* x s00 s00 r00)) (* (- 28) (* r r s s00 s00 r00)) ?x11733 (* (- 20) (* r s s00 s00 r00)) (* 144 (* r r s r00)) (* (- 420) (* r s s r00)) (* (- 576) (* r r x r00)) (* 780 (* r s x r00)) (* (- 4) (* r s s s00 s00 r00)) (* (- 2) (* s s s00 s00 r00)) (* (- 194) (* r s s00 s00)) (* 1296 (* r r r00 r00)) (* 216 (* r r r)) (* 6 (* x00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 306 (* r r x s00 s00)) (* 198 (* r x s00 s00)) (* (- 306) (* r r s s00 s00)) (* (- 42) (* r s s s00 s00)) (* (- 27) (* r r s s s00 s00)) (* 42 (* r s x s00 s00)) (* (- 216) (* r r r s s r00 r00)) (* (- 36) (* s s s r00 r00)) (* (- 72) (* r s s s r00 r00)) (* (- 36) (* r r s s s r00 r00)) (* (- 24) (* r r r r s s00 s00)) (* 432 (* r r r s x r00 r00)) (* 72 (* s s x r00 r00)) (* 144 (* r s s x r00 r00)) (* 24 (* r r r r x s00 s00)) (* 72 (* r r s s x r00 r00)) (* (- 19) (* s s s00 s00)) (* (- 4) (* r r r s s s00 s00)) (* 19 (* s x s00 s00)) (* (- 72) (* x x r00 r00)) (* 12 (* r r r x s00 s00 r00)) (* (- 360) (* r x x r00 r00)) (* 27 (* r r s x s00 s00)) (* (- 504) (* r r x x r00 r00)) (* 4 (* r r r s x s00 s00)) (* (- 216) (* r r r x x r00 r00)) (* (- 36) (* s x x r00 r00)) (* (- 72) (* r s x x r00 r00)) (* (- 36) (* r r s x x r00 r00)) (* (- 58) (* s s s r00)) (* 216 (* r r00)) (* (- 432) (* r r r00)) (* (- 864) (* r r r r00)) (* (- 216) (* r r r s r00 r00 x00)) (* 12 (* x x s00)) (* (- 42) (* s s x00)) (* (- 24) (* r s s x)) (* 26 (* ?x1475 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 6 (* s x x)) (* 12 (* r s x x)) (* 6 (* r r s x x)) (* (- 216) (* r s00 r00 r00)) (* 2 (* r r s x s00 s00 r00)) (* (- 204) (* r r r s x)) (* 450 (* r r r s)) (* 315 (* r r s s)) (* (- 450) (* r r r x)) (* 144 (* r r r r s)) (* 114 (* r r r s s)) (* (- 144) (* r r r r x)) (* 216 (* r r r00 x00)) (* 6 (* s s00 x00)) (* (- 12) (* x s00 x00)) (* 60 (* r s s00 x00)) (* 84 (* r r s s00 x00)) (* 36 (* r r r s s00 x00)) (* 6 (* s s s00 x00)) (* 12 (* r s s s00 x00)) (* 6 (* r r s s s00 x00)) (* (- 60) (* r x s00 x00)) (* (- 324) (* r r r r s x00)) (* (- 84) (* r r x s00 x00)) (* 324 (* r r r r x x00)) (* (- 36) (* r r r x s00 x00)) (* (- 6) (* s x s00 x00)) (* (- 12) (* r s x s00 x00)) (* (- 6) (* r r s x s00 x00)) (* (- 54) (* r r r s s x00)) (* (- 72) (* r s s r00 r00 x00)) (* (- 36) (* r r s s r00 r00 x00)) (* 36 (* s x r00 r00 x00)) (* 72 (* r s x r00 r00 x00)) (* 36 (* r r s x r00 r00 x00)) (* (- 2) (* r r s s s00 s00 r00)) (* (- 170) (* r r r s s00 s00)) (* 170 (* r r r x s00 s00)) (* (- 150) (* r s s x00)) (* 60 (* r x x s00)) (* 84 (* r r x x s00)) ?x11963 (* (- 360) (* r s r00 r00 x00)) (* (- 504) (* r r s r00 r00 x00)) (* 72 (* x r00 r00 x00)) (* 360 (* r x r00 r00 x00)) (* 504 (* r r x r00 r00 x00)) (* 216 (* r r r x r00 r00 x00)) (* (- 36) (* s s r00 r00 x00)) (* 234 (* r x x)) (* 252 (* r r x x)) (* 90 (* r r r x x)) (* (- 450) (* r s x00)) (* 216 (* r r r r x r00 x00)) (* 6 (* r r s s s)) (* (- 216) (* r r r r s r00 x00)) (* 144 (* r r r s r00)) (* (- 624) (* r r s s r00)) (* (- 144) (* r r r x r00)) (* (- 90) (* s s r00 x00)) (* 1272 (* r r s x r00)) (* (- 216) (* r s s r00 x00)) (* (- 162) (* r r s s r00 x00)) (* 1044 (* r r r x x00)) (* 1206 (* r r x x00)) (* 576 (* r x x00)) (* (- 1206) (* r r s x00)) (* (- 1044) (* r r r s x00)) (* (- 72) (* r r r s00)) (* (- 4) (* r00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478 ?x1478)) (* (- 1044) (* r r r s r00 x00)) (* 1044 (* r r r x r00 x00)) (* 36 (* r r r s x r00 x00)) (* 28 (* r00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 216 (* r r00 r00 x00)) (* 288 (* r s s00 r00)) (* 366 (* r r s s00 r00)) (* 156 (* r r r s s00 r00)) (* 28 (* s s s00 r00)) (* 52 (* r s s s00 r00)) (* 26 (* r r s s s00 r00)) (* (- 264) (* r x s00 r00)) (* (- 366) (* r r x s00 r00)) (* 2 (* r00 s00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* (- 156) (* r r r x s00 r00)) (* (- 26) (* s x s00 r00)) (* (- 52) (* r s x s00 r00)) (* (- 26) (* r r s x s00 r00)) (* (- 288) (* r r r s s r00)) (* 90 (* s x r00 x00)) (* (- 108) (* r s s s r00)) (* (- 54) (* r r s s s r00)) (* 576 (* r r r s x r00)) (* 108 (* s s x r00)) (* 216 (* r s s x r00)) (* 108 (* r r s s x r00)) (* 24 (* r r s00 s00)) (* (- 72) (* x x r00)) (* (- 432) (* r x x r00)) (* (- 648) (* r r x x r00)) (* (- 288) (* r r r x x r00)) (* (- 54) (* s x x r00)) (* (- 108) (* r s x x r00)) (* (- 54) (* r r s x x r00)) (* 216 (* r s x r00 x00)) (* (- 36) (* r r r s s r00 x00)) (* (- 36) (* r s00 x00)) (* 162 (* r r s x r00 x00)) (* (- 6) (* ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* (- 2) (* s00 ?x1475 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)))))
 (let ((?x1436 (* x00 x00)))
 (let ((?x1466 (* (- 108) ?x1436)))
 (let ((?x1274 (* s00 s00 s00)))
 (let ((?x1465 (* (- 16) ?x1274)))
 (let ((?x1146 (* s00 r00 r00 r00)))
 (let ((?x1461 (* (- 216) ?x1146)))
 (let ((?x972 (* r00 r00 r00 x00)))
 (let ((?x973 (* 432 ?x972)))
 (let ((?x1219 (* 108 ?x895)))
 (let ((?x821 (* s00 s00 r00 r00)))
 (let ((?x822 (* 36 ?x821)))
 (let ((?x1102 (* 108 ?x758)))
 (let ((?x1090 (* 36 ?x737)))
 (let ((?x1455 (* (- 51) ?x681)))
 (let ((?x655 (* s r00 r00)))
 (let ((?x954 (* (- 36) ?x655)))
 (let ((?x1452 (* (- 108) ?x612)))
 (let ((?x603 (* s00 r00 x00)))
 (let ((?x1451 (* (- 216) ?x603)))
 (let ((?x610 (* 54 ?x516)))
 (let ((?x1077 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1467 (+ ?x143 ?x1077 ?x610 ?x1451 ?x1452 (* (- 15) (* s s)) ?x954 ?x1455 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1090 ?x1102 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x822 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1219 (* 108 (* s x)) (* (- 108) (* x x)) ?x973 (* 12 (* s s s00)) ?x1461 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) ?x1270) ?x1465 (* 216 (* x x00)) ?x1466)))
 (let (($x1468 (= ?x1467 0)))
 (let ((?x980 (* (- 36) ?x967)))
 (let ((?x896 (* 6 ?x895)))
 (let ((?x786 (* (- 2) ?x758)))
 (let ((?x690 (* x s00)))
 (let ((?x717 (* (- 6) ?x690)))
 (let ((?x1006 (* (- 15) ?x681)))
 (let ((?x635 (* s s)))
 (let ((?x659 (* 3 ?x635)))
 (let ((?x641 (* (- 54) ?x612)))
 (let ((?x654 (* 24 ?x516)))
 (let ((?x1169 (+ ?x143 ?x1077 (* (- 24) (* r s)) (* 24 (* r s00)) ?x654 ?x641 ?x659 (* 54 (* r x)) (* 36 (* r x r00)) ?x954 ?x1006 ?x717 (* 54 (* x r00)) ?x1090 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x786 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x896 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x980 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1174 (= ?x1169 0)))
 (let ((?x738 (* 6 ?x737)))
 (let ((?x694 (* (- 4) ?x681)))
 (let ((?x636 (* 2 ?x635)))
 (let ((?x626 (* (- 18) ?x612)))
 (let ((?x631 (* 9 ?x516)))
 (let ((?x468 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x835 (+ ?x47 ?x468 (* (- 9) (* r s)) (* 9 (* r s00)) ?x631 ?x626 ?x636 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x655) ?x694 (* 18 (* x r00)) ?x738 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x842 (= ?x835 0)))
 (let ((?x559 (* r00 r00 r00)))
 (let ((?x560 (* 12 ?x559)))
 (let ((?x594 (* (- 6) ?x516)))
 (let ((?x591 (* (- 6) x00)))
 (let ((?x590 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x589 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x595 (+ ?x43 ?x589 ?x56 ?x44 ?x590 ?x591 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x594 ?x560)))
 (let (($x596 (= ?x595 0)))
 (let (($x424 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x391)) 0)))
 (and $x424 $x596 $x842 $x1174 $x1468 (not (= ?x14489 (- 54)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x8495 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x8630 (+ 3 s ?x214)))
 (let ((?x370 (* (- 1) s)))
 (let ((?x4984 (+ x ?x370)))
 (let ((?x1475 (+ 1 r)))
 (let ((?x10057 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)))
 (let ((?x8314 (+ (* 6 (* x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 2) (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 54 (* r00 ?x4984 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 15) (* s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 12 (* s00 ?x8630 ?x8630)) (* (- 36) (* r00 r00 x00 ?x8630)) (* (- 6) (* s00 ?x4984 ?x8630)) (* 22 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 9) (* ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* r00 s00 ?x8630)) (* (- 6) (* x00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x8630 ?x8630)) (* (- 36) (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* ?x1475 ?x8630 ?x8630)) (* (- 2) (* r00 s00 ?x8630 ?x8630)) (* 2 (* ?x1475 ?x8630 ?x8630 ?x8630)) (* 6 (* ?x4984 ?x8630 ?x8630)) (* (- 28) (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* s00 ?x1475 ?x8630)) (* (- 54) (* x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 54 (* r00 x00 ?x1475 ?x1475 ?x4984)) (* (- 2) (* r00 s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 2 (* r00 s00 s00 ?x1475 ?x1475 ?x4984)) (* 12 (* s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 s00 ?x1475 ?x1475 ?x4984)) (* 4 (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 2 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 9 (* ?x8630 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x8630)) (* 9 (* s00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 s00 ?x1475 ?x1475 ?x4984)) (* 3 (* ?x8630 ?x8630 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630 ?x8630)) (* 15 (* s00 s00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 3 (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 4 (* r00 ?x8630 ?x8630 ?x8630)) (* (- 6) (* s00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 6) (* x00 ?x8630 ?x8630)) (* (- 54) (* r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 9) (* s00 ?x8630)) (* 36 (* r00 r00 ?x4984 ?x8630)) (* 54 (* ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 15) (* s00 s00 ?x8630)) (* 36 (* r00 r00 s00 ?x8630)) (* (- 24) (* s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 24 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 x00 ?x8630)) (* (- 2) (* r00 s00 s00 ?x8630)) (* 6 (* s00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 6 (* s00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 26) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 x00 ?x1475 ?x1475 ?x4984)) (* (- 36) (* r00 x00 ?x1475 ?x8630)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 54) (* x00 ?x1475 ?x8630)) (* (- 6) (* s00 x00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 54 (* x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 2 (* s00 ?x1475 ?x8630 ?x8630)) (* 36 (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 21) (* s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 26 (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 6 (* s00 x00 ?x8630)) (* 2 ?x10057))))
 (let ((?x1436 (* x00 x00)))
 (let ((?x6062 (* 108 ?x1436)))
 (let ((?x6026 (* (- 9) s)))
 (let ((?x2125 (* r00 r00 s00)))
 (let ((?x8269 (* (- 36) ?x2125)))
 (let ((?x137 (* 9 s00)))
 (let ((?x681 (* s00 s00)))
 (let ((?x7380 (* 51 ?x681)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x3965 (* 36 ?x1568)))
 (let ((?x1274 (* s00 s00 s00)))
 (let ((?x7291 (* 16 ?x1274)))
 (let ((?x895 (* s00 x00)))
 (let ((?x6833 (* (- 108) ?x895)))
 (let ((?x972 (* r00 r00 r00 x00)))
 (let ((?x4442 (* (- 432) ?x972)))
 (let ((?x612 (* r00 x00)))
 (let ((?x4810 (* 108 ?x612)))
 (let ((?x6065 (+ (* 216 (* r00 s00 x00)) ?x4810 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4442 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7291 (* (- 108) (* x s)) ?x3965 ?x7380 (* (- 108) (* r00 x)) ?x137 ?x8269 ?x6026 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6062)))
 (let (($x6069 (= ?x6065 0)))
 (let ((?x6290 (* 15 ?x681)))
 (let ((?x967 (* r00 r00 x00)))
 (let ((?x6286 (* 36 ?x967)))
 (let ((?x3075 (* (- 6) ?x895)))
 (let ((?x2292 (* 54 ?x612)))
 (let ((?x5929 (+ (* 24 (* s r)) ?x2292 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3075 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3965 ?x6286 ?x6290 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x8269 (* 54 (* x00 r)) ?x6026 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x589 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3471 (* 4 ?x681)))
 (let ((?x10331 (* 18 ?x612)))
 (let ((?x1880 (+ (* 9 (* s r)) ?x10331 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1568) ?x3471 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2125) (* 18 (* x00 r)) ?x589 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x559 (* r00 r00 r00)))
 (let ((?x560 (* 12 ?x559)))
 (let ((?x591 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x590 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3273 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x589 ?x590 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x591 ?x560)))
 (let (($x9274 (= (+ s00 ?x370 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x9274 (= ?x3273 0) (= ?x1880 0) (= ?x5929 0) $x6069 (not (= ?x8314 0))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x14497 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1478 (+ 3 ?x214 s)))
 (let ((?x370 (* (- 1) s)))
 (let ((?x1484 (+ ?x370 x)))
 (let ((?x1475 (+ 1 r)))
 (let ((?x11963 (* (- 36) (* s r00 r00 x00))))
 (let ((?x11733 (* (- 2) (* s s00 s00 r00))))
 (let ((?x1270 (* s s r00 r00)))
 (let ((?x1271 (* 36 ?x1270)))
 (let ((?x967 (* r00 r00 x00)))
 (let ((?x14221 (* 108 ?x967)))
 (let ((?x895 (* s00 x00)))
 (let ((?x14213 (* (- 18) ?x895)))
 (let ((?x758 (* s00 s00 r00)))
 (let ((?x14207 (* 6 ?x758)))
 (let ((?x737 (* s00 r00 r00)))
 (let ((?x14203 (* (- 108) ?x737)))
 (let ((?x681 (* s00 s00)))
 (let ((?x14198 (* 57 ?x681)))
 (let ((?x612 (* r00 x00)))
 (let ((?x14188 (* 270 ?x612)))
 (let ((?x516 (* s00 r00)))
 (let ((?x10270 (* (- 54) ?x516)))
 (let ((?x391 (* r00 r00)))
 (let ((?x14183 (* 324 ?x391)))
 (let ((?x14181 (* 216 x00)))
 (let ((?x11332 (* 108 r00)))
 (let ((?x14180 (* (- 171) s00)))
 (let ((?x14489 (+ (* 270 r) (* 270 s) (* (- 261) x) ?x14180 ?x11332 ?x14181 (* 432 (* r r)) ?x14183 (* 954 (* r s)) (* 1296 (* r r00 r00)) (* (- 684) (* r s00)) ?x10270 ?x14188 (* 165 (* s s)) (* (- 954) (* r x)) (* 792 (* r s r00)) (* (- 936) (* r x r00)) (* 432 (* s r00 r00)) ?x14198 (* 30 (* x s00)) (* (- 342) (* x r00)) (* (- 2) (* ?x1475 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478 ?x1478)) ?x14203 (* 30 (* s s r00)) (* 702 (* r x00)) ?x14207 (* (- 129) (* s s00)) (* (- 12) (* s00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 378 (* s r00)) (* (- 72) (* r s00 r00)) (* 42 (* s s00 r00)) (* 9 (* s s s)) ?x14213 (* 384 (* r s s)) (* (- 249) (* s x)) (* (- 6) (* ?x1475 ?x1475 ?x1484 ?x1484 ?x1478 ?x1478)) (* 126 (* r s00 s00)) (* 72 (* x x)) ?x14221 (* (- 216) (* r s s00)) (* (- 7) (* s s s00)) (* 648 (* r r00 x00)) (* (- 216) (* x r00 r00)) (* (- 54) (* x s00 r00)) ?x1271 (* 2 (* s x s00 s00 r00)) (* 4 (* r s x s00 s00 r00)) (* 90 (* x x00)) (* 48 (* s x x00)) (* 150 (* r s x x00)) (* 156 (* r r s x x00)) (* (- 3) (* ?x1475 ?x1475 ?x1484 ?x1478 ?x1478 ?x1478)) (* 30 (* s x r00)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x1484 ?x1484 ?x1478)) (* (- 19) (* s s00 s00)) (* 38 (* x s00 s00)) (* 72 (* r r s00 r00)) (* (- 720) (* r r s00)) (* 12 (* r x s00)) (* (- 19) (* s x s00)) (* 36 (* r r r x x s00)) (* 6 (* s s s s00)) (* 192 (* r r s s00)) (* 12 (* r s s s s00)) (* 312 (* r r r s s00)) (* 6 (* r r s s s s00)) (* (- 12) (* s s x s00)) (* (- 24) (* r s s x s00)) (* 132 (* r r r r s s00)) (* 82 (* r s s s00)) (* (- 12) (* r r s s x s00)) (* 129 (* r r s s s00)) (* 58 (* r r r s s s00)) (* 6 (* s x x s00)) (* (- 216) (* r r x s00)) (* 12 (* r s x x s00)) (* 6 (* r r s x x s00)) (* (- 312) (* r r r x s00)) (* (- 132) (* r r r r x s00)) (* (- 144) (* r s x s00)) (* (- 213) (* r r s x s00)) (* (- 94) (* r r r s x s00)) (* (- 648) (* r s x)) (* (- 567) (* r r s x)) (* 12 (* r s00 s00 r00)) (* (- 156) (* r r s s x00)) (* (- 18) (* s s x)) (* (- 2) (* ?x1475 ?x1478 ?x1478 ?x1478)) (* 1017 (* r r s)) (* (- 1053) (* r r x)) (* 72 (* s x r00 r00)) (* 648 (* r s x r00 r00)) (* 972 (* r r s x r00 r00)) (* 540 (* r r x00)) (* (- 216) (* r r r x r00 r00)) (* (- 540) (* r r x r00 r00)) (* (- 648) (* r x r00 r00)) (* (- 468) (* r r s s r00 r00)) (* (- 288) (* r s s r00 r00)) (* 216 (* r r r s r00 r00)) (* 540 (* r r s r00 r00)) (* 1080 (* r s r00 r00)) (* 12 (* r s s s)) (* (- 12) (* r r s s x)) (* 54 (* r r r s x x00)) (* 1620 (* r r x r00 x00)) (* 972 (* r x r00 x00)) (* 180 (* x r00 x00)) (* (- 1620) (* r r s r00 x00)) (* (- 936) (* r s r00 x00)) (* (- 90) (* s r00 x00)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x1484 ?x1484 ?x1478)) (* 36 (* s s00 r00 r00)) (* 360 (* r s s00 r00 r00)) (* 504 (* r r s s00 r00 r00)) (* 216 (* r r r s s00 r00 r00)) (* 36 (* s s s00 r00 r00)) (* 72 (* r s s s00 r00 r00)) (* 36 (* r r s s s00 r00 r00)) (* (- 72) (* x s00 r00 r00)) (* (- 360) (* r x s00 r00 r00)) (* (- 504) (* r r x s00 r00 r00)) (* (- 216) (* r r r x s00 r00 r00)) (* (- 36) (* s x s00 r00 r00)) (* (- 72) (* r s x s00 r00 r00)) (* (- 36) (* r r s x s00 r00 r00)) (* (- 12) (* r r r s s00 s00 r00)) (* 28 (* r r x s00 s00 r00)) (* 20 (* r x s00 s00 r00)) (* 4 (* x s00 s00 r00)) (* (- 28) (* r r s s00 s00 r00)) ?x11733 (* (- 20) (* r s s00 s00 r00)) (* 144 (* r r s r00)) (* (- 420) (* r s s r00)) (* (- 576) (* r r x r00)) (* 780 (* r s x r00)) (* (- 4) (* r s s s00 s00 r00)) (* (- 2) (* s s s00 s00 r00)) (* (- 194) (* r s s00 s00)) (* 1296 (* r r r00 r00)) (* 216 (* r r r)) (* 6 (* x00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 306 (* r r x s00 s00)) (* 198 (* r x s00 s00)) (* (- 306) (* r r s s00 s00)) (* (- 42) (* r s s s00 s00)) (* (- 27) (* r r s s s00 s00)) (* 42 (* r s x s00 s00)) (* (- 216) (* r r r s s r00 r00)) (* (- 36) (* s s s r00 r00)) (* (- 72) (* r s s s r00 r00)) (* (- 36) (* r r s s s r00 r00)) (* (- 24) (* r r r r s s00 s00)) (* 432 (* r r r s x r00 r00)) (* 72 (* s s x r00 r00)) (* 144 (* r s s x r00 r00)) (* 24 (* r r r r x s00 s00)) (* 72 (* r r s s x r00 r00)) (* (- 19) (* s s s00 s00)) (* (- 4) (* r r r s s s00 s00)) (* 19 (* s x s00 s00)) (* (- 72) (* x x r00 r00)) (* 12 (* r r r x s00 s00 r00)) (* (- 360) (* r x x r00 r00)) (* 27 (* r r s x s00 s00)) (* (- 504) (* r r x x r00 r00)) (* 4 (* r r r s x s00 s00)) (* (- 216) (* r r r x x r00 r00)) (* (- 36) (* s x x r00 r00)) (* (- 72) (* r s x x r00 r00)) (* (- 36) (* r r s x x r00 r00)) (* (- 58) (* s s s r00)) (* 216 (* r r00)) (* (- 432) (* r r r00)) (* (- 864) (* r r r r00)) (* (- 216) (* r r r s r00 r00 x00)) (* 12 (* x x s00)) (* (- 42) (* s s x00)) (* (- 24) (* r s s x)) (* 26 (* ?x1475 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 6 (* s x x)) (* 12 (* r s x x)) (* 6 (* r r s x x)) (* (- 216) (* r s00 r00 r00)) (* 2 (* r r s x s00 s00 r00)) (* (- 204) (* r r r s x)) (* 450 (* r r r s)) (* 315 (* r r s s)) (* (- 450) (* r r r x)) (* 144 (* r r r r s)) (* 114 (* r r r s s)) (* (- 144) (* r r r r x)) (* 216 (* r r r00 x00)) (* 6 (* s s00 x00)) (* (- 12) (* x s00 x00)) (* 60 (* r s s00 x00)) (* 84 (* r r s s00 x00)) (* 36 (* r r r s s00 x00)) (* 6 (* s s s00 x00)) (* 12 (* r s s s00 x00)) (* 6 (* r r s s s00 x00)) (* (- 60) (* r x s00 x00)) (* (- 324) (* r r r r s x00)) (* (- 84) (* r r x s00 x00)) (* 324 (* r r r r x x00)) (* (- 36) (* r r r x s00 x00)) (* (- 6) (* s x s00 x00)) (* (- 12) (* r s x s00 x00)) (* (- 6) (* r r s x s00 x00)) (* (- 54) (* r r r s s x00)) (* (- 72) (* r s s r00 r00 x00)) (* (- 36) (* r r s s r00 r00 x00)) (* 36 (* s x r00 r00 x00)) (* 72 (* r s x r00 r00 x00)) (* 36 (* r r s x r00 r00 x00)) (* (- 2) (* r r s s s00 s00 r00)) (* (- 170) (* r r r s s00 s00)) (* 170 (* r r r x s00 s00)) (* (- 150) (* r s s x00)) (* 60 (* r x x s00)) (* 84 (* r r x x s00)) ?x11963 (* (- 360) (* r s r00 r00 x00)) (* (- 504) (* r r s r00 r00 x00)) (* 72 (* x r00 r00 x00)) (* 360 (* r x r00 r00 x00)) (* 504 (* r r x r00 r00 x00)) (* 216 (* r r r x r00 r00 x00)) (* (- 36) (* s s r00 r00 x00)) (* 234 (* r x x)) (* 252 (* r r x x)) (* 90 (* r r r x x)) (* (- 450) (* r s x00)) (* 216 (* r r r r x r00 x00)) (* 6 (* r r s s s)) (* (- 216) (* r r r r s r00 x00)) (* 144 (* r r r s r00)) (* (- 624) (* r r s s r00)) (* (- 144) (* r r r x r00)) (* (- 90) (* s s r00 x00)) (* 1272 (* r r s x r00)) (* (- 216) (* r s s r00 x00)) (* (- 162) (* r r s s r00 x00)) (* 1044 (* r r r x x00)) (* 1206 (* r r x x00)) (* 576 (* r x x00)) (* (- 1206) (* r r s x00)) (* (- 1044) (* r r r s x00)) (* (- 72) (* r r r s00)) (* (- 4) (* r00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478 ?x1478)) (* (- 1044) (* r r r s r00 x00)) (* 1044 (* r r r x r00 x00)) (* 36 (* r r r s x r00 x00)) (* 28 (* r00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 216 (* r r00 r00 x00)) (* 288 (* r s s00 r00)) (* 366 (* r r s s00 r00)) (* 156 (* r r r s s00 r00)) (* 28 (* s s s00 r00)) (* 52 (* r s s s00 r00)) (* 26 (* r r s s s00 r00)) (* (- 264) (* r x s00 r00)) (* (- 366) (* r r x s00 r00)) (* 2 (* r00 s00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* (- 156) (* r r r x s00 r00)) (* (- 26) (* s x s00 r00)) (* (- 52) (* r s x s00 r00)) (* (- 26) (* r r s x s00 r00)) (* (- 288) (* r r r s s r00)) (* 90 (* s x r00 x00)) (* (- 108) (* r s s s r00)) (* (- 54) (* r r s s s r00)) (* 576 (* r r r s x r00)) (* 108 (* s s x r00)) (* 216 (* r s s x r00)) (* 108 (* r r s s x r00)) (* 24 (* r r s00 s00)) (* (- 72) (* x x r00)) (* (- 432) (* r x x r00)) (* (- 648) (* r r x x r00)) (* (- 288) (* r r r x x r00)) (* (- 54) (* s x x r00)) (* (- 108) (* r s x x r00)) (* (- 54) (* r r s x x r00)) (* 216 (* r s x r00 x00)) (* (- 36) (* r r r s s r00 x00)) (* (- 36) (* r s00 x00)) (* 162 (* r r s x r00 x00)) (* (- 6) (* ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)) (* (- 2) (* s00 ?x1475 ?x1475 ?x1475 ?x1484 ?x1478 ?x1478)))))
 (let ((?x1436 (* x00 x00)))
 (let ((?x1466 (* (- 108) ?x1436)))
 (let ((?x1274 (* s00 s00 s00)))
 (let ((?x1465 (* (- 16) ?x1274)))
 (let ((?x1146 (* s00 r00 r00 r00)))
 (let ((?x1461 (* (- 216) ?x1146)))
 (let ((?x972 (* r00 r00 r00 x00)))
 (let ((?x973 (* 432 ?x972)))
 (let ((?x1219 (* 108 ?x895)))
 (let ((?x821 (* s00 s00 r00 r00)))
 (let ((?x822 (* 36 ?x821)))
 (let ((?x1102 (* 108 ?x758)))
 (let ((?x1090 (* 36 ?x737)))
 (let ((?x1455 (* (- 51) ?x681)))
 (let ((?x655 (* s r00 r00)))
 (let ((?x954 (* (- 36) ?x655)))
 (let ((?x1452 (* (- 108) ?x612)))
 (let ((?x603 (* s00 r00 x00)))
 (let ((?x1451 (* (- 216) ?x603)))
 (let ((?x610 (* 54 ?x516)))
 (let ((?x1077 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1467 (+ ?x143 ?x1077 ?x610 ?x1451 ?x1452 (* (- 15) (* s s)) ?x954 ?x1455 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1090 ?x1102 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x822 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1219 (* 108 (* s x)) (* (- 108) (* x x)) ?x973 (* 12 (* s s s00)) ?x1461 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) ?x1270) ?x1465 (* 216 (* x x00)) ?x1466)))
 (let (($x1468 (= ?x1467 0)))
 (let ((?x980 (* (- 36) ?x967)))
 (let ((?x896 (* 6 ?x895)))
 (let ((?x786 (* (- 2) ?x758)))
 (let ((?x690 (* x s00)))
 (let ((?x717 (* (- 6) ?x690)))
 (let ((?x1006 (* (- 15) ?x681)))
 (let ((?x635 (* s s)))
 (let ((?x659 (* 3 ?x635)))
 (let ((?x641 (* (- 54) ?x612)))
 (let ((?x654 (* 24 ?x516)))
 (let ((?x1169 (+ ?x143 ?x1077 (* (- 24) (* r s)) (* 24 (* r s00)) ?x654 ?x641 ?x659 (* 54 (* r x)) (* 36 (* r x r00)) ?x954 ?x1006 ?x717 (* 54 (* x r00)) ?x1090 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x786 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x896 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x980 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1174 (= ?x1169 0)))
 (let ((?x738 (* 6 ?x737)))
 (let ((?x694 (* (- 4) ?x681)))
 (let ((?x636 (* 2 ?x635)))
 (let ((?x626 (* (- 18) ?x612)))
 (let ((?x631 (* 9 ?x516)))
 (let ((?x468 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x835 (+ ?x47 ?x468 (* (- 9) (* r s)) (* 9 (* r s00)) ?x631 ?x626 ?x636 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x655) ?x694 (* 18 (* x r00)) ?x738 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x842 (= ?x835 0)))
 (let ((?x559 (* r00 r00 r00)))
 (let ((?x560 (* 12 ?x559)))
 (let ((?x594 (* (- 6) ?x516)))
 (let ((?x591 (* (- 6) x00)))
 (let ((?x590 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x589 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x595 (+ ?x43 ?x589 ?x56 ?x44 ?x590 ?x591 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x594 ?x560)))
 (let (($x596 (= ?x595 0)))
 (let (($x424 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x391)) 0)))
 (let (($x4632 (and $x424 $x596 $x842 $x1174 $x1468 (not (= ?x14489 (- 54))))))
 (let ((?x8630 (+ 3 s ?x214)))
 (let ((?x4984 (+ x ?x370)))
 (let ((?x10057 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)))
 (let ((?x8314 (+ (* 6 (* x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 2) (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 54 (* r00 ?x4984 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 15) (* s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 12 (* s00 ?x8630 ?x8630)) (* (- 36) (* r00 r00 x00 ?x8630)) (* (- 6) (* s00 ?x4984 ?x8630)) (* 22 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 9) (* ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* r00 s00 ?x8630)) (* (- 6) (* x00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x8630 ?x8630)) (* (- 36) (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* ?x1475 ?x8630 ?x8630)) (* (- 2) (* r00 s00 ?x8630 ?x8630)) (* 2 (* ?x1475 ?x8630 ?x8630 ?x8630)) (* 6 (* ?x4984 ?x8630 ?x8630)) (* (- 28) (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* s00 ?x1475 ?x8630)) (* (- 54) (* x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 54 (* r00 x00 ?x1475 ?x1475 ?x4984)) (* (- 2) (* r00 s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 2 (* r00 s00 s00 ?x1475 ?x1475 ?x4984)) (* 12 (* s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 s00 ?x1475 ?x1475 ?x4984)) (* 4 (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 2 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 9 (* ?x8630 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x8630)) (* 9 (* s00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 s00 ?x1475 ?x1475 ?x4984)) (* 3 (* ?x8630 ?x8630 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630 ?x8630)) (* 15 (* s00 s00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 3 (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 4 (* r00 ?x8630 ?x8630 ?x8630)) (* (- 6) (* s00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 6) (* x00 ?x8630 ?x8630)) (* (- 54) (* r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 9) (* s00 ?x8630)) (* 36 (* r00 r00 ?x4984 ?x8630)) (* 54 (* ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 15) (* s00 s00 ?x8630)) (* 36 (* r00 r00 s00 ?x8630)) (* (- 24) (* s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 24 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 x00 ?x8630)) (* (- 2) (* r00 s00 s00 ?x8630)) (* 6 (* s00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 6 (* s00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 26) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 x00 ?x1475 ?x1475 ?x4984)) (* (- 36) (* r00 x00 ?x1475 ?x8630)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 54) (* x00 ?x1475 ?x8630)) (* (- 6) (* s00 x00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 54 (* x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 2 (* s00 ?x1475 ?x8630 ?x8630)) (* 36 (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 21) (* s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 26 (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 6 (* s00 x00 ?x8630)) (* 2 ?x10057))))
 (let ((?x6062 (* 108 ?x1436)))
 (let ((?x6026 (* (- 9) s)))
 (let ((?x2125 (* r00 r00 s00)))
 (let ((?x8269 (* (- 36) ?x2125)))
 (let ((?x137 (* 9 s00)))
 (let ((?x7380 (* 51 ?x681)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x3965 (* 36 ?x1568)))
 (let ((?x7291 (* 16 ?x1274)))
 (let ((?x6833 (* (- 108) ?x895)))
 (let ((?x4442 (* (- 432) ?x972)))
 (let ((?x4810 (* 108 ?x612)))
 (let ((?x6065 (+ (* 216 (* r00 s00 x00)) ?x4810 (* (- 54) (* r00 s00)) (* 15 ?x635) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4442 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7291 (* (- 108) (* x s)) ?x3965 ?x7380 (* (- 108) (* r00 x)) ?x137 ?x8269 ?x6026 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6062)))
 (let (($x6069 (= ?x6065 0)))
 (let ((?x6290 (* 15 ?x681)))
 (let ((?x6286 (* 36 ?x967)))
 (let ((?x3075 (* (- 6) ?x895)))
 (let ((?x2292 (* 54 ?x612)))
 (let ((?x5929 (+ (* 24 (* s r)) ?x2292 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x635) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3075 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3965 ?x6286 ?x6290 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x8269 (* 54 (* x00 r)) ?x6026 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x3471 (* 4 ?x681)))
 (let ((?x10331 (* 18 ?x612)))
 (let ((?x1880 (+ (* 9 (* s r)) ?x10331 (* (- 9) (* r00 s00)) (* (- 2) ?x635) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1568) ?x3471 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2125) (* 18 (* x00 r)) ?x589 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x3273 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x589 ?x590 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x591 ?x560)))
 (let (($x9274 (= (+ s00 ?x370 (* 3 (* r r)) (* (- 3) ?x391)) 0)))
 (let (($x7969 (and $x9274 (= ?x3273 0) (= ?x1880 0) (= ?x5929 0) $x6069 (not (= ?x8314 0)))))
 (rewrite (= $x7969 $x4632)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3217 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x8630 (+ 3 s ?x214)))
 (let ((?x370 (* (- 1) s)))
 (let ((?x4984 (+ x ?x370)))
 (let ((?x1475 (+ 1 r)))
 (let ((?x10057 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)))
 (let ((?x8692 (+ (* (- 6) (* x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 2 (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 54) (* r00 ?x4984 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 15 (* s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 12) (* s00 ?x8630 ?x8630)) (* 36 (* r00 r00 x00 ?x8630)) (* 6 (* s00 ?x4984 ?x8630)) (* (- 22) (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 9 (* ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* r00 s00 ?x8630)) (* 6 (* x00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x8630 ?x8630)) (* 36 (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* ?x1475 ?x8630 ?x8630)) (* 2 (* r00 s00 ?x8630 ?x8630)) (* (- 2) (* ?x1475 ?x8630 ?x8630 ?x8630)) (* (- 6) (* ?x4984 ?x8630 ?x8630)) (* 28 (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* s00 ?x1475 ?x8630)) (* 54 (* x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 54) (* r00 x00 ?x1475 ?x1475 ?x4984)) (* 2 (* r00 s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 2) (* r00 s00 s00 ?x1475 ?x1475 ?x4984)) (* (- 12) (* s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 s00 ?x1475 ?x1475 ?x4984)) (* (- 4) (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 2) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 9) (* ?x8630 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x8630)) (* (- 9) (* s00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 s00 ?x1475 ?x1475 ?x4984)) (* (- 3) (* ?x8630 ?x8630 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630 ?x8630)) (* (- 15) (* s00 s00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 3) (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 4) (* r00 ?x8630 ?x8630 ?x8630)) (* 6 (* s00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 6 (* x00 ?x8630 ?x8630)) (* 54 (* r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 9 (* s00 ?x8630)) (* (- 36) (* r00 r00 ?x4984 ?x8630)) (* (- 54) (* ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 15 (* s00 s00 ?x8630)) (* (- 36) (* r00 r00 s00 ?x8630)) (* 24 (* s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 24) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 x00 ?x8630)) (* 2 (* r00 s00 s00 ?x8630)) (* (- 6) (* s00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 6) (* s00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 26 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 x00 ?x1475 ?x1475 ?x4984)) (* 36 (* r00 x00 ?x1475 ?x8630)) (* 36 (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* 54 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* 54 (* x00 ?x1475 ?x8630)) (* 6 (* s00 x00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 54) (* x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 2) (* s00 ?x1475 ?x8630 ?x8630)) (* (- 36) (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 21 (* s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 26) (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 6) (* s00 x00 ?x8630)) (* (- 2) ?x10057))))
 (let ((?x1436 (* x00 x00)))
 (let ((?x6062 (* 108 ?x1436)))
 (let ((?x6026 (* (- 9) s)))
 (let ((?x2125 (* r00 r00 s00)))
 (let ((?x8269 (* (- 36) ?x2125)))
 (let ((?x137 (* 9 s00)))
 (let ((?x681 (* s00 s00)))
 (let ((?x7380 (* 51 ?x681)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x3965 (* 36 ?x1568)))
 (let ((?x1274 (* s00 s00 s00)))
 (let ((?x7291 (* 16 ?x1274)))
 (let ((?x895 (* s00 x00)))
 (let ((?x6833 (* (- 108) ?x895)))
 (let ((?x972 (* r00 r00 r00 x00)))
 (let ((?x4442 (* (- 432) ?x972)))
 (let ((?x612 (* r00 x00)))
 (let ((?x4810 (* 108 ?x612)))
 (let ((?x6065 (+ (* 216 (* r00 s00 x00)) ?x4810 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4442 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7291 (* (- 108) (* x s)) ?x3965 ?x7380 (* (- 108) (* r00 x)) ?x137 ?x8269 ?x6026 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6062)))
 (let (($x6069 (= ?x6065 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1077 (* (- 9) s00)))
 (let ((?x1006 (* (- 15) ?x681)))
 (let ((?x967 (* r00 r00 x00)))
 (let ((?x980 (* (- 36) ?x967)))
 (let ((?x896 (* 6 ?x895)))
 (let ((?x635 (* s s)))
 (let ((?x659 (* 3 ?x635)))
 (let ((?x641 (* (- 54) ?x612)))
 (let ((?x7070 (+ (* (- 24) (* s r)) ?x641 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x659 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x896 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1568) ?x980 ?x1006 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1077 (* 36 ?x2125) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x468 (* (- 3) s00)))
 (let ((?x694 (* (- 4) ?x681)))
 (let ((?x636 (* 2 ?x635)))
 (let ((?x626 (* (- 18) ?x612)))
 (let ((?x3071 (+ (* (- 9) (* s r)) ?x626 (* 9 (* r00 s00)) ?x636 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1568) ?x694 (* 18 (* r00 x)) ?x468 (* 6 ?x2125) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1676 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x468 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x9274 (= (+ s00 ?x370 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x9274 (= ?x1676 0) (= ?x3071 0) (= ?x7070 0) $x6069 (not (= ?x8692 0)))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x8895 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x8630 (+ 3 s ?x214)))
 (let ((?x370 (* (- 1) s)))
 (let ((?x4984 (+ x ?x370)))
 (let ((?x1475 (+ 1 r)))
 (let ((?x10057 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)))
 (let ((?x8314 (+ (* 6 (* x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 2) (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 54 (* r00 ?x4984 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 15) (* s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 12 (* s00 ?x8630 ?x8630)) (* (- 36) (* r00 r00 x00 ?x8630)) (* (- 6) (* s00 ?x4984 ?x8630)) (* 22 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 9) (* ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* r00 s00 ?x8630)) (* (- 6) (* x00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x8630 ?x8630)) (* (- 36) (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* ?x1475 ?x8630 ?x8630)) (* (- 2) (* r00 s00 ?x8630 ?x8630)) (* 2 (* ?x1475 ?x8630 ?x8630 ?x8630)) (* 6 (* ?x4984 ?x8630 ?x8630)) (* (- 28) (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* s00 ?x1475 ?x8630)) (* (- 54) (* x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 54 (* r00 x00 ?x1475 ?x1475 ?x4984)) (* (- 2) (* r00 s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 2 (* r00 s00 s00 ?x1475 ?x1475 ?x4984)) (* 12 (* s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 s00 ?x1475 ?x1475 ?x4984)) (* 4 (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 2 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 9 (* ?x8630 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x8630)) (* 9 (* s00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 s00 ?x1475 ?x1475 ?x4984)) (* 3 (* ?x8630 ?x8630 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630 ?x8630)) (* 15 (* s00 s00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 3 (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* 4 (* r00 ?x8630 ?x8630 ?x8630)) (* (- 6) (* s00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 6) (* x00 ?x8630 ?x8630)) (* (- 54) (* r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 9) (* s00 ?x8630)) (* 36 (* r00 r00 ?x4984 ?x8630)) (* 54 (* ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 15) (* s00 s00 ?x8630)) (* 36 (* r00 r00 s00 ?x8630)) (* (- 24) (* s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 24 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 x00 ?x8630)) (* (- 2) (* r00 s00 s00 ?x8630)) (* 6 (* s00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 6 (* s00 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 26) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 x00 ?x1475 ?x1475 ?x4984)) (* (- 36) (* r00 x00 ?x1475 ?x8630)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* (- 54) (* x00 ?x1475 ?x8630)) (* (- 6) (* s00 x00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 54 (* x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 2 (* s00 ?x1475 ?x8630 ?x8630)) (* 36 (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 21) (* s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 26 (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 6 (* s00 x00 ?x8630)) (* 2 ?x10057))))
 (let ((?x1436 (* x00 x00)))
 (let ((?x6062 (* 108 ?x1436)))
 (let ((?x6026 (* (- 9) s)))
 (let ((?x2125 (* r00 r00 s00)))
 (let ((?x8269 (* (- 36) ?x2125)))
 (let ((?x137 (* 9 s00)))
 (let ((?x681 (* s00 s00)))
 (let ((?x7380 (* 51 ?x681)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x3965 (* 36 ?x1568)))
 (let ((?x1274 (* s00 s00 s00)))
 (let ((?x7291 (* 16 ?x1274)))
 (let ((?x895 (* s00 x00)))
 (let ((?x6833 (* (- 108) ?x895)))
 (let ((?x972 (* r00 r00 r00 x00)))
 (let ((?x4442 (* (- 432) ?x972)))
 (let ((?x612 (* r00 x00)))
 (let ((?x4810 (* 108 ?x612)))
 (let ((?x6065 (+ (* 216 (* r00 s00 x00)) ?x4810 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4442 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7291 (* (- 108) (* x s)) ?x3965 ?x7380 (* (- 108) (* r00 x)) ?x137 ?x8269 ?x6026 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6062)))
 (let (($x6069 (= ?x6065 0)))
 (let ((?x6290 (* 15 ?x681)))
 (let ((?x967 (* r00 r00 x00)))
 (let ((?x6286 (* 36 ?x967)))
 (let ((?x3075 (* (- 6) ?x895)))
 (let ((?x2292 (* 54 ?x612)))
 (let ((?x5929 (+ (* 24 (* s r)) ?x2292 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3075 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x3965 ?x6286 ?x6290 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x8269 (* 54 (* x00 r)) ?x6026 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x589 (* (- 3) s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3471 (* 4 ?x681)))
 (let ((?x10331 (* 18 ?x612)))
 (let ((?x1880 (+ (* 9 (* s r)) ?x10331 (* (- 9) (* r00 s00)) (* (- 2) (* s s)) (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x1568) ?x3471 (* (- 18) (* r00 x)) ?x44 (* (- 6) ?x2125) (* 18 (* x00 r)) ?x589 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x559 (* r00 r00 r00)))
 (let ((?x560 (* 12 ?x559)))
 (let ((?x591 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x590 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x3273 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x589 ?x590 (* 4 (* s00 r)) (* (- 6) (* r00 s00)) ?x56 ?x591 ?x560)))
 (let (($x9274 (= (+ s00 ?x370 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x7969 (and $x9274 (= ?x3273 0) (= ?x1880 0) (= ?x5929 0) $x6069 (not (= ?x8314 0)))))
 (let ((?x8692 (+ (* (- 6) (* x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 2 (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 54) (* r00 ?x4984 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 15 (* s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 12) (* s00 ?x8630 ?x8630)) (* 36 (* r00 r00 x00 ?x8630)) (* 6 (* s00 ?x4984 ?x8630)) (* (- 22) (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 9 (* ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* r00 s00 ?x8630)) (* 6 (* x00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x8630 ?x8630)) (* 36 (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* ?x1475 ?x8630 ?x8630)) (* 2 (* r00 s00 ?x8630 ?x8630)) (* (- 2) (* ?x1475 ?x8630 ?x8630 ?x8630)) (* (- 6) (* ?x4984 ?x8630 ?x8630)) (* 28 (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* s00 ?x1475 ?x8630)) (* 54 (* x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 54) (* r00 x00 ?x1475 ?x1475 ?x4984)) (* 2 (* r00 s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 2) (* r00 s00 s00 ?x1475 ?x1475 ?x4984)) (* (- 12) (* s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 s00 ?x1475 ?x1475 ?x4984)) (* (- 4) (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 2) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 9) (* ?x8630 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x8630)) (* (- 9) (* s00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 s00 ?x1475 ?x1475 ?x4984)) (* (- 3) (* ?x8630 ?x8630 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630 ?x8630)) (* (- 15) (* s00 s00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 3) (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 4) (* r00 ?x8630 ?x8630 ?x8630)) (* 6 (* s00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 6 (* x00 ?x8630 ?x8630)) (* 54 (* r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 9 (* s00 ?x8630)) (* (- 36) (* r00 r00 ?x4984 ?x8630)) (* (- 54) (* ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 15 (* s00 s00 ?x8630)) (* (- 36) (* r00 r00 s00 ?x8630)) (* 24 (* s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 24) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 x00 ?x8630)) (* 2 (* r00 s00 s00 ?x8630)) (* (- 6) (* s00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 6) (* s00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 26 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 x00 ?x1475 ?x1475 ?x4984)) (* 36 (* r00 x00 ?x1475 ?x8630)) (* 36 (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* 54 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* 54 (* x00 ?x1475 ?x8630)) (* 6 (* s00 x00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 54) (* x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 2) (* s00 ?x1475 ?x8630 ?x8630)) (* (- 36) (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 21 (* s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 26) (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 6) (* s00 x00 ?x8630)) (* (- 2) ?x10057))))
 (let ((?x143 (* 9 s)))
 (let ((?x1077 (* (- 9) s00)))
 (let ((?x1006 (* (- 15) ?x681)))
 (let ((?x980 (* (- 36) ?x967)))
 (let ((?x896 (* 6 ?x895)))
 (let ((?x635 (* s s)))
 (let ((?x659 (* 3 ?x635)))
 (let ((?x641 (* (- 54) ?x612)))
 (let ((?x7070 (+ (* (- 24) (* s r)) ?x641 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x659 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x896 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1568) ?x980 ?x1006 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1077 (* 36 ?x2125) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x468 (* (- 3) s00)))
 (let ((?x694 (* (- 4) ?x681)))
 (let ((?x636 (* 2 ?x635)))
 (let ((?x626 (* (- 18) ?x612)))
 (let ((?x3071 (+ (* (- 9) (* s r)) ?x626 (* 9 (* r00 s00)) ?x636 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1568) ?x694 (* 18 (* r00 x)) ?x468 (* 6 ?x2125) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1676 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x468 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x559))))
 (let (($x1955 (and $x9274 (= ?x1676 0) (= ?x3071 0) (= ?x7070 0) $x6069 (not (= ?x8692 0)))))
 (rewrite (= $x1955 $x7969))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x367 (exists ((r Int) (s Int) (x Int) )(! (let ((?x216 (- x s)))
 (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x221 (+ (* (- 6) ?x213 ?x213 ?x215 ?x216 x00) (* 54 ?x213 ?x213 r00 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216) (* 2 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216))))
 (let ((?x226 (+ (- ?x221 (* 54 r00 ?x215 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216) (* 15 ?x213 ?x213 ?x215 s00 s00 ?x216))))
 (let ((?x231 (+ (- ?x226 (* 12 ?x215 ?x215 s00)) (* 36 r00 r00 ?x215 x00) (* 6 ?x215 s00 ?x216))))
 (let ((?x236 (+ (- ?x231 (* 22 ?x213 ?x213 ?x213 ?x215 s00 ?x216)) (* 9 ?x213 ?x213 ?x215 ?x216))))
 (let ((?x244 (+ (- ?x236 (* 24 r00 ?x215 s00)) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 x00) (* 36 r00 r00 ?x215 ?x215) (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 x00) (* 24 ?x213 ?x215 ?x215) (* 2 r00 ?x215 ?x215 s00))))
 (let ((?x248 (- (- ?x244 (* 2 ?x213 ?x215 ?x215 ?x215)) (* 6 ?x215 ?x215 ?x216))))
 (let ((?x254 (- (+ ?x248 (* 28 ?x213 ?x213 r00 ?x215 ?x215 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216))))
 (let ((?x257 (+ (- ?x254 (* 24 ?x213 ?x215 s00)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 x00))))
 (let ((?x261 (- (- ?x257 (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216)) (* 54 ?x213 ?x213 r00 ?x216 x00))))
 (let ((?x269 (- (+ ?x261 (* 2 ?x213 ?x213 r00 ?x215 s00 s00 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 s00 ?x216))))
 (let ((?x271 (- (- ?x269 (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216)) (* 2 ?x213 ?x213 r00 s00 s00 ?x216))))
 (let ((?x273 (- (- ?x271 (* 12 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) (* 36 ?x213 r00 ?x215 ?x216))))
 (let ((?x279 (- (+ ?x273 (* 36 ?x213 ?x213 r00 r00 s00 ?x216)) (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x281 (- (- ?x279 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 9 ?x215 ?x215))))
 (let ((?x285 (- (+ ?x281 (* 4 ?x213 ?x215 s00 s00)) (* 9 ?x213 ?x213 s00 ?x216))))
 (let ((?x291 (- (+ ?x285 (* 24 ?x213 ?x213 r00 s00 ?x216)) (* 3 ?x215 ?x215 ?x215))))
 (let ((?x293 (- (- ?x291 (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216)) (* 15 ?x213 ?x213 s00 s00 ?x216))))
 (let ((?x299 (- (+ ?x293 (* 24 r00 ?x215 ?x215)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216))))
 (let ((?x301 (- (- ?x299 (* 3 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 4 r00 ?x215 ?x215 ?x215))))
 (let ((?x306 (+ ?x301 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216) (* 6 ?x215 ?x215 x00) (* 54 ?x213 ?x213 r00 ?x215 ?x216 x00) (* 9 ?x215 s00))))
 (let ((?x310 (- (- ?x306 (* 36 r00 r00 ?x215 ?x216)) (* 54 ?x213 ?x215 ?x216))))
 (let ((?x314 (+ ?x310 (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 x00) (* 6 ?x213 ?x213 ?x215 ?x216 ?x216) (* 15 ?x215 s00 s00))))
 (let ((?x318 (+ (- ?x314 (* 36 r00 r00 ?x215 s00)) (* 24 ?x213 ?x213 ?x213 s00 ?x216))))
 (let ((?x323 (+ (- ?x318 (* 24 ?x213 ?x213 ?x213 ?x215 ?x216)) (* 54 r00 ?x215 x00) (* 2 r00 ?x215 s00 s00))))
 (let ((?x328 (- (- ?x323 (* 6 ?x213 ?x213 ?x215 s00 ?x216 x00)) (* 4 ?x213 ?x213 ?x213 s00 s00 ?x216))))
 (let ((?x332 (+ (- ?x328 (* 6 ?x213 ?x213 s00 ?x216 ?x216)) (* 26 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x340 (+ (- ?x332 (* 36 ?x213 ?x213 r00 r00 ?x216 x00)) (* 36 ?x213 r00 ?x215 x00) (* 36 ?x213 ?x213 ?x213 r00 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x216 ?x216) (* 54 ?x213 ?x215 x00) (* 6 ?x213 ?x213 s00 ?x216 x00))))
 (let ((?x347 (- (- ?x340 (* 24 ?x213 ?x213 r00 ?x215 ?x216)) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x349 (- (- ?x347 (* 54 ?x213 ?x213 ?x213 ?x216 x00)) (* 2 ?x213 ?x215 ?x215 s00))))
 (let ((?x354 (+ (- ?x349 (* 36 ?x213 ?x213 ?x213 r00 ?x216 x00)) (* 21 ?x213 ?x213 ?x215 s00 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216))))
 (let ((?x360 (- (- ?x354 (* 26 ?x213 ?x213 r00 ?x215 s00 ?x216)) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216))))
 (let ((?x362 (- (- ?x360 (* 6 ?x215 s00 x00)) (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x362 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3107 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x8630 (+ 3 s ?x214)))
 (let ((?x370 (* (- 1) s)))
 (let ((?x4984 (+ x ?x370)))
 (let ((?x1475 (+ 1 r)))
 (let ((?x10057 (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)))
 (let ((?x8692 (+ (* (- 6) (* x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 2 (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 54) (* r00 ?x4984 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 15 (* s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 12) (* s00 ?x8630 ?x8630)) (* 36 (* r00 r00 x00 ?x8630)) (* 6 (* s00 ?x4984 ?x8630)) (* (- 22) (* s00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 9 (* ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* r00 s00 ?x8630)) (* 6 (* x00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* 36 (* r00 r00 ?x8630 ?x8630)) (* 36 (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 24 (* ?x1475 ?x8630 ?x8630)) (* 2 (* r00 s00 ?x8630 ?x8630)) (* (- 2) (* ?x1475 ?x8630 ?x8630 ?x8630)) (* (- 6) (* ?x4984 ?x8630 ?x8630)) (* 28 (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 24) (* s00 ?x1475 ?x8630)) (* 54 (* x00 ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 54) (* r00 x00 ?x1475 ?x1475 ?x4984)) (* 2 (* r00 s00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 36) (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 2) (* r00 s00 s00 ?x1475 ?x1475 ?x4984)) (* (- 12) (* s00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 s00 ?x1475 ?x1475 ?x4984)) (* (- 4) (* r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 2) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 9) (* ?x8630 ?x8630)) (* 4 (* s00 s00 ?x1475 ?x8630)) (* (- 9) (* s00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 s00 ?x1475 ?x1475 ?x4984)) (* (- 3) (* ?x8630 ?x8630 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630 ?x8630)) (* (- 15) (* s00 s00 ?x1475 ?x1475 ?x4984)) (* 24 (* r00 ?x8630 ?x8630)) (* (- 36) (* r00 r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 3) (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630 ?x8630)) (* (- 4) (* r00 ?x8630 ?x8630 ?x8630)) (* 6 (* s00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 6 (* x00 ?x8630 ?x8630)) (* 54 (* r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 9 (* s00 ?x8630)) (* (- 36) (* r00 r00 ?x4984 ?x8630)) (* (- 54) (* ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 6 (* ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* 15 (* s00 s00 ?x8630)) (* (- 36) (* r00 r00 s00 ?x8630)) (* 24 (* s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 24) (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630)) (* 54 (* r00 x00 ?x8630)) (* 2 (* r00 s00 s00 ?x8630)) (* (- 6) (* s00 x00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 4) (* s00 s00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 6) (* s00 ?x1475 ?x1475 ?x4984 ?x4984)) (* 26 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 36) (* r00 r00 x00 ?x1475 ?x1475 ?x4984)) (* 36 (* r00 x00 ?x1475 ?x8630)) (* 36 (* r00 ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* 54 (* ?x1475 ?x1475 ?x1475 ?x4984 ?x4984)) (* 54 (* x00 ?x1475 ?x8630)) (* 6 (* s00 x00 ?x1475 ?x1475 ?x4984)) (* (- 24) (* r00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 6) (* ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 54) (* x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* (- 2) (* s00 ?x1475 ?x8630 ?x8630)) (* (- 36) (* r00 x00 ?x1475 ?x1475 ?x1475 ?x4984)) (* 21 (* s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* 36 (* r00 r00 ?x1475 ?x1475 ?x4984 ?x8630 ?x8630)) (* (- 26) (* r00 s00 ?x1475 ?x1475 ?x4984 ?x8630)) (* (- 54) (* r00 ?x1475 ?x1475 ?x4984 ?x4984 ?x8630)) (* (- 6) (* s00 x00 ?x8630)) (* (- 2) ?x10057))))
 (let ((?x1436 (* x00 x00)))
 (let ((?x6062 (* 108 ?x1436)))
 (let ((?x6026 (* (- 9) s)))
 (let ((?x2125 (* r00 r00 s00)))
 (let ((?x8269 (* (- 36) ?x2125)))
 (let ((?x137 (* 9 s00)))
 (let ((?x681 (* s00 s00)))
 (let ((?x7380 (* 51 ?x681)))
 (let ((?x1568 (* r00 r00 s)))
 (let ((?x3965 (* 36 ?x1568)))
 (let ((?x1274 (* s00 s00 s00)))
 (let ((?x7291 (* 16 ?x1274)))
 (let ((?x895 (* s00 x00)))
 (let ((?x6833 (* (- 108) ?x895)))
 (let ((?x972 (* r00 r00 r00 x00)))
 (let ((?x4442 (* (- 432) ?x972)))
 (let ((?x612 (* r00 x00)))
 (let ((?x4810 (* 108 ?x612)))
 (let ((?x6065 (+ (* 216 (* r00 s00 x00)) ?x4810 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x4442 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x6833 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x7291 (* (- 108) (* x s)) ?x3965 ?x7380 (* (- 108) (* r00 x)) ?x137 ?x8269 ?x6026 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x6062)))
 (let (($x6069 (= ?x6065 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1077 (* (- 9) s00)))
 (let ((?x1006 (* (- 15) ?x681)))
 (let ((?x967 (* r00 r00 x00)))
 (let ((?x980 (* (- 36) ?x967)))
 (let ((?x896 (* 6 ?x895)))
 (let ((?x635 (* s s)))
 (let ((?x659 (* 3 ?x635)))
 (let ((?x641 (* (- 54) ?x612)))
 (let ((?x7070 (+ (* (- 24) (* s r)) ?x641 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x659 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x896 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x1568) ?x980 ?x1006 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1077 (* 36 ?x2125) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x468 (* (- 3) s00)))
 (let ((?x694 (* (- 4) ?x681)))
 (let ((?x636 (* 2 ?x635)))
 (let ((?x626 (* (- 18) ?x612)))
 (let ((?x3071 (+ (* (- 9) (* s r)) ?x626 (* 9 (* r00 s00)) ?x636 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x1568) ?x694 (* 18 (* r00 x)) ?x468 (* 6 ?x2125) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x1676 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x468 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x9274 (= (+ s00 ?x370 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1955 (and $x9274 (= ?x1676 0) (= ?x3071 0) (= ?x7070 0) $x6069 (not (= ?x8692 0)))))
 (let ((?x216 (- x s)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x213 (+ r 1)))
 (let ((?x221 (+ (* (- 6) ?x213 ?x213 ?x215 ?x216 x00) (* 54 ?x213 ?x213 r00 ?x216 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x216 ?x216) (* 2 ?x213 ?x213 r00 ?x215 ?x215 s00 ?x216))))
 (let ((?x226 (+ (- ?x221 (* 54 r00 ?x215 ?x216)) (* 4 ?x213 ?x213 ?x213 ?x215 s00 s00 ?x216) (* 15 ?x213 ?x213 ?x215 s00 s00 ?x216))))
 (let ((?x231 (+ (- ?x226 (* 12 ?x215 ?x215 s00)) (* 36 r00 r00 ?x215 x00) (* 6 ?x215 s00 ?x216))))
 (let ((?x236 (+ (- ?x231 (* 22 ?x213 ?x213 ?x213 ?x215 s00 ?x216)) (* 9 ?x213 ?x213 ?x215 ?x216))))
 (let ((?x244 (+ (- ?x236 (* 24 r00 ?x215 s00)) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 x00) (* 36 r00 r00 ?x215 ?x215) (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 x00) (* 24 ?x213 ?x215 ?x215) (* 2 r00 ?x215 ?x215 s00))))
 (let ((?x248 (- (- ?x244 (* 2 ?x213 ?x215 ?x215 ?x215)) (* 6 ?x215 ?x215 ?x216))))
 (let ((?x254 (- (+ ?x248 (* 28 ?x213 ?x213 r00 ?x215 ?x215 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216))))
 (let ((?x257 (+ (- ?x254 (* 24 ?x213 ?x215 s00)) (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 x00))))
 (let ((?x261 (- (- ?x257 (* 54 ?x213 ?x213 ?x213 ?x215 ?x216 ?x216)) (* 54 ?x213 ?x213 r00 ?x216 x00))))
 (let ((?x269 (- (+ ?x261 (* 2 ?x213 ?x213 r00 ?x215 s00 s00 ?x216)) (* 36 ?x213 ?x213 r00 r00 ?x215 s00 ?x216))))
 (let ((?x271 (- (- ?x269 (* 36 ?x213 ?x213 ?x213 r00 ?x215 ?x216 ?x216)) (* 2 ?x213 ?x213 r00 s00 s00 ?x216))))
 (let ((?x273 (- (- ?x271 (* 12 ?x213 ?x213 ?x215 ?x215 s00 ?x216)) (* 36 ?x213 r00 ?x215 ?x216))))
 (let ((?x279 (- (+ ?x273 (* 36 ?x213 ?x213 r00 r00 s00 ?x216)) (* 4 ?x213 ?x213 r00 ?x215 ?x215 ?x215 ?x216))))
 (let ((?x281 (- (- ?x279 (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 9 ?x215 ?x215))))
 (let ((?x285 (- (+ ?x281 (* 4 ?x213 ?x215 s00 s00)) (* 9 ?x213 ?x213 s00 ?x216))))
 (let ((?x291 (- (+ ?x285 (* 24 ?x213 ?x213 r00 s00 ?x216)) (* 3 ?x215 ?x215 ?x215))))
 (let ((?x293 (- (- ?x291 (* 6 ?x213 ?x213 ?x215 ?x215 ?x216 ?x216)) (* 15 ?x213 ?x213 s00 s00 ?x216))))
 (let ((?x299 (- (+ ?x293 (* 24 r00 ?x215 ?x215)) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 ?x216))))
 (let ((?x301 (- (- ?x299 (* 3 ?x213 ?x213 ?x215 ?x215 ?x215 ?x216)) (* 4 r00 ?x215 ?x215 ?x215))))
 (let ((?x306 (+ ?x301 (* 6 ?x213 ?x213 ?x215 s00 ?x216 ?x216) (* 6 ?x215 ?x215 x00) (* 54 ?x213 ?x213 r00 ?x215 ?x216 x00) (* 9 ?x215 s00))))
 (let ((?x310 (- (- ?x306 (* 36 r00 r00 ?x215 ?x216)) (* 54 ?x213 ?x215 ?x216))))
 (let ((?x314 (+ ?x310 (* 36 ?x213 ?x213 r00 r00 ?x215 ?x216 x00) (* 6 ?x213 ?x213 ?x215 ?x216 ?x216) (* 15 ?x215 s00 s00))))
 (let ((?x318 (+ (- ?x314 (* 36 r00 r00 ?x215 s00)) (* 24 ?x213 ?x213 ?x213 s00 ?x216))))
 (let ((?x323 (+ (- ?x318 (* 24 ?x213 ?x213 ?x213 ?x215 ?x216)) (* 54 r00 ?x215 x00) (* 2 r00 ?x215 s00 s00))))
 (let ((?x328 (- (- ?x323 (* 6 ?x213 ?x213 ?x215 s00 ?x216 x00)) (* 4 ?x213 ?x213 ?x213 s00 s00 ?x216))))
 (let ((?x332 (+ (- ?x328 (* 6 ?x213 ?x213 s00 ?x216 ?x216)) (* 26 ?x213 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x340 (+ (- ?x332 (* 36 ?x213 ?x213 r00 r00 ?x216 x00)) (* 36 ?x213 r00 ?x215 x00) (* 36 ?x213 ?x213 ?x213 r00 ?x216 ?x216) (* 54 ?x213 ?x213 ?x213 ?x216 ?x216) (* 54 ?x213 ?x215 x00) (* 6 ?x213 ?x213 s00 ?x216 x00))))
 (let ((?x347 (- (- ?x340 (* 24 ?x213 ?x213 r00 ?x215 ?x216)) (* 6 ?x213 ?x213 ?x215 ?x215 ?x216))))
 (let ((?x349 (- (- ?x347 (* 54 ?x213 ?x213 ?x213 ?x216 x00)) (* 2 ?x213 ?x215 ?x215 s00))))
 (let ((?x354 (+ (- ?x349 (* 36 ?x213 ?x213 ?x213 r00 ?x216 x00)) (* 21 ?x213 ?x213 ?x215 s00 ?x216) (* 36 ?x213 ?x213 r00 r00 ?x215 ?x215 ?x216))))
 (let ((?x360 (- (- ?x354 (* 26 ?x213 ?x213 r00 ?x215 s00 ?x216)) (* 54 ?x213 ?x213 r00 ?x215 ?x216 ?x216))))
 (let ((?x362 (- (- ?x360 (* 6 ?x215 s00 x00)) (* 2 ?x213 ?x213 ?x213 ?x215 ?x215 s00 ?x216))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x366 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x362 0))))))
 (rewrite (= $x366 $x1955))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x368 (asserted $x367)))
 (let ((@x10326 (mp (mp @x368 (quant-intro (proof-bind ?x3107) (= $x367 $x3217)) $x3217) (rewrite (= $x3217 $x3217)) $x3217)))
 (let ((@x10492 (mp (mp @x10326 (quant-intro (proof-bind ?x8895) (= $x3217 $x8495)) $x8495) (quant-intro (proof-bind ?x14497) (= $x8495 $x14495)) $x14495)))
 (let ((@x378 (mp (mp~ @x10492 (sk (~ $x14495 $x4668)) $x4668) (rewrite (= $x4668 $x9063)) $x9063)))
 (let ((@x7336 (and-elim @x378 $x1181)))
 (let ((@x9004 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1181) $x3494)) @x7336 $x3494)))
 (let (($x8529 (>= ?x13557 0)))
 (let ((@x1825 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1181) $x8529)) @x7336 $x8529)))
 (let (($x4474 (<= ?x5759 0)))
 (let ((@x5111 (and-elim @x378 $x5655)))
 (let ((@x4615 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5655) $x4474)) @x5111 $x4474)))
 (let (($x830 (>= ?x5759 0)))
 (let ((@x8545 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5655) $x830)) @x5111 $x830)))
 (let (($x7156 (<= ?x1957 0)))
 (let ((@x7357 (and-elim @x378 $x1969)))
 (let ((@x5577 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1969) $x7156)) @x7357 $x7156)))
 (let (($x7159 (>= ?x1957 0)))
 (let ((@x3806 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1969) $x7159)) @x7357 $x7159)))
 (let (($x4130 (<= ?x465 0)))
 (let ((@x7363 (and-elim @x378 $x479)))
 (let ((@x482 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x479) $x4130)) @x7363 $x4130)))
 (let (($x7144 (>= ?x465 0)))
 (let ((@x4725 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x479) $x7144)) @x7363 $x7144)))
 (let (($x4190 (<= ?x9890 0)))
 (let ((@x7359 (and-elim @x378 $x9891)))
 (let ((@x2041 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9891) $x4190)) @x7359 $x4190)))
 (let (($x7744 (>= ?x9890 0)))
 (let ((@x7486 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x9891) $x7744)) @x7359 $x7744)))
 (let (($x6238 (not (<= ?x5103 54))))
 (let (($x2424 (>= ?x5103 54)))
 (let ((@x5813 ((_ th-lemma arith) (hypothesis (not $x2424)) @x8545 @x4615 @x3806 @x5577 @x3806 @x5577 @x4725 @x482 @x4725 @x482 @x8545 @x4615 @x3806 @x5577 @x7486 @x2041 @x8545 @x4615 @x4725 @x482 @x4725 @x482 @x4725 @x482 @x3806 @x5577 @x3806 @x5577 @x3806 @x5577 @x8545 @x4615 @x1825 @x9004 @x1825 @x9004 @x8545 @x4615 @x8545 @x4615 @x1825 @x9004 false)))
 (let ((@x6235 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x5104 $x6238 (not $x2424))) (and-elim @x378 $x5109) (or $x6238 (not $x2424)))))
 ((_ th-lemma arith) (unit-resolution @x6235 (lemma @x5813 $x2424) $x6238) @x8545 @x4615 @x3806 @x5577 @x3806 @x5577 @x4725 @x482 @x4725 @x482 @x8545 @x4615 @x3806 @x5577 @x7486 @x2041 @x8545 @x4615 @x4725 @x482 @x4725 @x482 @x4725 @x482 @x3806 @x5577 @x3806 @x5577 @x3806 @x5577 @x8545 @x4615 @x1825 @x9004 @x1825 @x9004 @x8545 @x4615 @x8545 @x4615 @x1825 @x9004 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        43
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           6
 :arith-grobner             2
 :arith-max-min             2404
 :arith-nonlinear-bounds    36
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             2
 :arith-patches_succ        2
 :arith-pivots              6
 :arith-row-summations      15
 :arith-tableau-max-columns 456
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                6.91
 :memory                    4.74
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                66980453
 :num-checks                1
 :propagations              12
 :rlimit-count              352072
 :time                      0.26
 :total-time                0.29)
