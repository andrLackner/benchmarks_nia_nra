unsat
((set-logic NIA)
(declare-fun s!1 () Int)
(declare-fun r!2 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x1258 (* (- 1) s!1)))
 (let ((?x324 (* r00 r00)))
 (let ((?x1623 (* (- 3) ?x324)))
 (let ((?x1067 (+ s00 ?x1623 (* 3 (* r!2 r!2)) ?x1258)))
 (let (($x439 (<= ?x1067 0)))
 (let (($x743 (= ?x1067 0)))
 (let ((?x960 (+ 3 (* 6 r!2) s!1)))
 (let ((?x2095 (+ x!0 ?x1258)))
 (let ((?x1257 (+ 1 r!2)))
 (let ((?x2143 (* (- 3) (* s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x2171 (* r00 r00 r00 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)))
 (let ((?x867 (* 6 (* x00 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960))))
 (let ((?x2015 (* (- 3) (* ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960))))
 (let ((?x1868 (* r00 r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960)))
 (let ((?x781 (* (- 6) (* ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960))))
 (let ((?x319 (* 3 (* r00 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960))))
 (let ((?x1375 (* r00 r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)))
 (let ((?x341 (* 6 (* r00 s00 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960))))
 (let ((?x1150 (* r00 r00 r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960)))
 (let ((?x661 (* (- 4) (* s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x1199 (* (- 6) (* ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x1034 (* 6 (* r00 s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x1029 (* (- 3) (* s00 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960))))
 (let ((?x548 (* 3 (* ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x853 (* (- 2) (* ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960 ?x960))))
 (let ((?x986 (* (- 4) (* s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960))))
 (let ((?x1371 (* 3 (* ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960 ?x960))))
 (let ((?x1372 (* (- 2) (* ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x1373 (* (- 3) (* ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x1704 (* 3 (* r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x1703 (* 6 (* x00 ?x1257 ?x1257 ?x1257 ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960))))
 (let ((?x1143 (+ ?x1703 (* 4 (* s00 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) ?x1704 (* (- 12) (* r00 r00 ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) (* 6 (* ?x1257 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960)) ?x1373 ?x1372 ?x1371 ?x986 (* 6 (* ?x2095 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) ?x853 (* 2 (* ?x1257 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960 ?x960)) ?x548 (* (- 3) (* ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960 ?x960)) (* 3 (* s00 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) (* (- 6) (* x00 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)) ?x1029 ?x1034 ?x1199 (* 3 (* ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) (* (- 6) (* r00 s00 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)) ?x661 (* (- 3) (* ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960)) (* (- 12) ?x1150) (* 12 (* r00 r00 r00 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)) ?x341 (* 12 ?x1375) ?x319 (* 12 (* r00 r00 r00 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) (* 4 (* s00 ?x1257 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)) (* (- 6) (* r00 s00 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) (* 3 (* s00 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)) ?x781 (* (- 12) (* r00 r00 ?x1257 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)) (* 12 ?x1868) ?x2015 ?x867 (* (- 6) (* x00 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) (* 2 (* ?x1257 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960 ?x960)) (* (- 3) (* r00 ?x2095 ?x2095 ?x2095 ?x2095 ?x960 ?x960)) (* (- 12) ?x2171) ?x2143 (* (- 3) (* r00 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)) (* 3 (* ?x1257 ?x1257 ?x2095 ?x2095 ?x960 ?x960 ?x960)))))
 (let (($x1144 (= ?x1143 0)))
 (let (($x2061 (not $x1144)))
 (let ((?x2310 (* r00 r00 s!1)))
 (let ((?x1863 (* 36 ?x2310)))
 (let ((?x1936 (* (- 9) s!1)))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x386 (* 16 ?x1207)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x1654 (* (- 432) ?x905)))
 (let ((?x828 (* s00 x00)))
 (let ((?x2103 (* (- 108) ?x828)))
 (let ((?x670 (* s00 r00 r00)))
 (let ((?x898 (* (- 36) ?x670)))
 (let ((?x614 (* s00 s00)))
 (let ((?x653 (* 51 ?x614)))
 (let ((?x545 (* r00 x00)))
 (let ((?x1578 (* 108 ?x545)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1925 (+ ?x137 (* (- 216) (* x00 x!0)) (* (- 54) (* s00 r00)) (* 216 (* s00 r00 x00)) ?x1578 (* (- 108) (* r00 x!0)) ?x653 (* 54 (* r00 s!1)) ?x898 (* (- 108) (* s00 s00 r00)) (* (- 36) (* s00 s00 r00 r00)) (* (- 66) (* s00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) ?x2103 (* 108 (* s00 x!0)) ?x1654 (* (- 4) (* s!1 s!1 s!1)) (* 216 (* s00 r00 r00 r00)) ?x386 (* 108 (* x!0 x!0)) (* 15 (* s!1 s!1)) (* (- 12) (* s00 s!1 s!1)) ?x678 (* 108 (* x00 s!1)) (* (- 108) (* x!0 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 108 (* s00 r00 s!1)) ?x1936 ?x1863)))
 (let (($x1774 (= ?x1925 0)))
 (let ((?x1867 (+ ?x137 (* (- 24) (* s00 r!2)) (* (- 2) (* s00 r!2 s!1)) (* (- 24) (* s00 r00)) (* 54 ?x545) (* (- 54) (* r00 x!0)) (* 15 ?x614) (* 24 (* r00 s!1)) ?x898 (* 2 (* s00 s00 r00)) (* (- 12) (* s00 s!1)) (* (- 6) ?x828) (* 6 (* s00 x!0)) (* 36 (* r00 r00 x00)) (* (- 2) (* r!2 s!1 s!1)) (* (- 36) (* r00 r!2 x!0)) (* (- 36) (* r00 r00 x!0)) (* (- 4) (* r00 s!1 s!1)) (* (- 3) (* s!1 s!1)) (* 24 (* r!2 s!1)) (* 6 (* x00 s!1)) (* (- 6) (* x!0 s!1)) (* 4 (* s00 s00 r!2)) (* 36 (* r00 x00 r!2)) (* (- 54) (* r!2 x!0)) (* 54 (* x00 r!2)) (* 2 (* s00 r00 s!1)) ?x1936 ?x1863)))
 (let ((?x1272 (* (- 3) s!1)))
 (let ((?x44 (* 3 s00)))
 (let ((?x2196 (+ ?x44 (* (- 9) (* s00 r!2)) (* (- 9) (* s00 r00)) (* 18 ?x545) (* (- 18) (* r00 x!0)) (* 4 ?x614) (* 6 (* s00 r00 r!2)) (* 9 (* r00 s!1)) (* (- 6) ?x670) (* (- 2) (* s00 s!1)) (* (- 2) (* s!1 s!1)) (* 9 (* r!2 s!1)) (* (- 18) (* r!2 x!0)) (* 18 (* x00 r!2)) ?x1272 (* 6 ?x2310) (* (- 6) (* r00 r!2 s!1)))))
 (let (($x1069 (= ?x2196 0)))
 (let ((?x2210 (* 6 x!0)))
 (let ((?x2093 (* 3 r!2)))
 (let ((?x1546 (* r!2 s!1)))
 (let ((?x1320 (* 2 ?x1546)))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x449 (* s00 r00)))
 (let ((?x527 (* (- 6) ?x449)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x2099 (+ ?x44 ?x523 ?x524 (* (- 12) (* r00 r00 r!2)) (* 4 (* s00 r!2)) ?x527 ?x493 ?x1320 ?x2093 ?x2210 ?x1272)))
 (let (($x1214 (= ?x2099 0)))
 (let (($x797 (and $x743 $x1214 $x1069 (= ?x1867 0) $x1774 $x2061)))
 (let ((?x632 (+ ?x1258 x!0)))
 (let ((?x724 (* 6 (* ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x1192 (* 2 (* ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x1545 (* (- 3) (* ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960 ?x960))))
 (let ((?x940 (* 2 (* ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960 ?x960))))
 (let ((?x1127 (* 3 (* ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x1131 (* 3 (* s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x1969 (* 3 (* s00 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960))))
 (let ((?x798 (* 4 (* s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960))))
 (let ((?x919 (* (- 3) (* r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x1995 (* r00 r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)))
 (let ((?x1167 (* (- 6) (* r00 s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x2035 (* r00 r00 r00 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)))
 (let ((?x1561 (* 4 (* s00 ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x1913 (* 6 (* ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960))))
 (let ((?x1837 (* (- 3) (* ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x1572 (* (- 6) (* x00 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960))))
 (let ((?x360 (* 3 (* ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960))))
 (let ((?x353 (* r00 r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960)))
 (let ((?x533 (* (- 6) (* r00 s00 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960))))
 (let ((?x350 (* (- 6) (* x00 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960))))
 (let ((?x331 (* (- 3) (* r00 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960))))
 (let ((?x769 (* r00 r00 r00 ?x1257 ?x1257 ?x1257 ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960)))
 (let ((?x1787 (+ (* 3 (* ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960 ?x960)) (* (- 3) (* s00 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) (* (- 2) (* ?x1257 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960)) (* 6 (* x00 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) (* 12 ?x769) ?x331 (* (- 3) (* ?x1257 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) (* 6 (* r00 s00 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) ?x350 ?x533 (* 3 (* ?x632 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960)) (* (- 12) ?x353) ?x360 ?x1572 ?x1837 ?x1913 (* 6 (* r00 s00 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) ?x1561 (* 12 (* r00 r00 ?x1257 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) (* 12 ?x2035) ?x1167 (* (- 4) (* s00 ?x1257 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) (* (- 12) ?x1995) ?x919 ?x798 (* 12 (* r00 r00 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) (* (- 12) (* r00 r00 r00 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) (* (- 6) (* ?x1257 ?x632 ?x632 ?x632 ?x960 ?x960 ?x960)) (* (- 6) (* ?x632 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) ?x1969 (* (- 3) (* s00 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) (* 6 (* x00 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) ?x1131 (* (- 3) (* ?x1257 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) ?x1127 (* (- 2) (* ?x1257 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960 ?x960)) (* 3 (* r00 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) (* (- 12) (* r00 r00 r00 ?x1257 ?x632 ?x632 ?x960 ?x960 ?x960)) ?x940 (* (- 4) (* s00 ?x1257 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) ?x1545 ?x1192 (* 3 (* r00 ?x632 ?x632 ?x632 ?x632 ?x960 ?x960)) ?x724)))
 (let ((?x1399 (* (- 108) ?x1369)))
 (let ((?x1398 (* (- 16) ?x1207)))
 (let ((?x1079 (* s00 r00 r00 r00)))
 (let ((?x1394 (* (- 216) ?x1079)))
 (let ((?x906 (* 432 ?x905)))
 (let ((?x1152 (* 108 ?x828)))
 (let ((?x754 (* s00 s00 r00 r00)))
 (let ((?x755 (* 36 ?x754)))
 (let ((?x691 (* s00 s00 r00)))
 (let ((?x1035 (* 108 ?x691)))
 (let ((?x1023 (* 36 ?x670)))
 (let ((?x1388 (* (- 51) ?x614)))
 (let ((?x866 (* s!1 r00 r00)))
 (let ((?x1987 (* (- 36) ?x866)))
 (let ((?x1385 (* (- 108) ?x545)))
 (let ((?x536 (* s00 r00 x00)))
 (let ((?x1384 (* (- 216) ?x536)))
 (let ((?x543 (* 54 ?x449)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x1292 (* 9 s!1)))
 (let ((?x1254 (+ ?x1292 ?x1010 ?x543 ?x1384 ?x1385 (* (- 15) (* s!1 s!1)) ?x1987 ?x1388 (* (- 108) (* x!0 s00)) (* 108 (* x!0 r00)) (* 216 (* s!1 r00 r00 r00)) ?x1023 ?x1035 (* 66 (* s!1 s00)) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x755 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1152 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x906 (* 12 (* s!1 s!1 s00)) ?x1394 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1398 (* 216 (* x!0 x00)) ?x1399)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x719 (* (- 2) ?x691)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x587 (* 24 ?x449)))
 (let ((?x608 (+ ?x1292 ?x1010 (* (- 24) ?x1546) (* 24 (* r!2 s00)) ?x587 ?x574 (* 3 (* s!1 s!1)) (* 54 (* r!2 x!0)) (* 36 (* r!2 x!0 r00)) ?x1987 ?x939 (* (- 6) (* x!0 s00)) (* 54 (* x!0 r00)) ?x1023 (* 4 (* s!1 s!1 r00)) (* (- 54) (* r!2 x00)) ?x719 (* 12 (* s!1 s00)) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x829 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x913 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x671 (* 6 ?x670)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x564 (* 9 ?x449)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x2246 (+ (* 3 s!1) ?x401 (* (- 9) ?x1546) (* 9 (* r!2 s00)) ?x564 ?x559 (* 2 (* s!1 s!1)) (* 18 (* r!2 x!0)) (* 6 (* r!2 s!1 r00)) (* (- 6) ?x866) ?x627 (* 18 (* x!0 r00)) ?x671 (* (- 18) (* r!2 x00)) (* 2 (* s!1 s00)) (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x495 (+ ?x2093 ?x1272 ?x2210 ?x44 ?x523 ?x524 ?x1320 (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x527 ?x493)))
 (let (($x1076 (= (+ s!1 (* (- 1) s00) (* (- 3) (* r!2 r!2)) (* 3 ?x324)) 0)))
 (let (($x1011 (and $x1076 (= ?x495 0) (= ?x2246 0) (= ?x608 0) (= ?x1254 0) (not (= ?x1787 0)))))
 (let (($x1549 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1409 (+ 3 ?x213 s)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1415 (+ ?x303 x)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x1232 (* 6 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x725 (* 2 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x403 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x665 (* 2 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x2317 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1593 (* 3 (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1498 (* 3 (* s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x982 (* 4 (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x983 (* (- 3) (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1262 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x987 (* (- 6) (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1133 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x1639 (* 4 (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1814 (* 6 (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1780 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x699 (* (- 6) (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x700 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x733 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x933 (* (- 6) (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1804 (* (- 6) (* x00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x948 (* (- 3) (* r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x557 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x1233 (+ (* 3 (* ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* (- 3) (* s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* (- 2) (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 6 (* x00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* 12 ?x557) ?x948 (* (- 3) (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 6 (* r00 s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1804 ?x933 (* 3 (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 12) ?x733) ?x700 ?x699 ?x1780 ?x1814 (* 6 (* r00 s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1639 (* 12 (* r00 r00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 12 ?x1133) ?x987 (* (- 4) (* s00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 12) ?x1262) ?x983 ?x982 (* 12 (* r00 r00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* (- 12) (* r00 r00 r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* (- 6) (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 6) (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1498 (* (- 3) (* s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 6 (* x00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1593 (* (- 3) (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x2317 (* (- 2) (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* 3 (* r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 12) (* r00 r00 r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x665 (* (- 4) (* s00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x403 ?x725 (* 3 (* r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1232)))
 (let ((?x1369 (* x00 x00)))
 (let ((?x1399 (* (- 108) ?x1369)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1398 (* (- 16) ?x1207)))
 (let ((?x1079 (* s00 r00 r00 r00)))
 (let ((?x1394 (* (- 216) ?x1079)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x906 (* 432 ?x905)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1152 (* 108 ?x828)))
 (let ((?x754 (* s00 s00 r00 r00)))
 (let ((?x755 (* 36 ?x754)))
 (let ((?x691 (* s00 s00 r00)))
 (let ((?x1035 (* 108 ?x691)))
 (let ((?x670 (* s00 r00 r00)))
 (let ((?x1023 (* 36 ?x670)))
 (let ((?x614 (* s00 s00)))
 (let ((?x1388 (* (- 51) ?x614)))
 (let ((?x588 (* s r00 r00)))
 (let ((?x887 (* (- 36) ?x588)))
 (let ((?x545 (* r00 x00)))
 (let ((?x1385 (* (- 108) ?x545)))
 (let ((?x536 (* s00 r00 x00)))
 (let ((?x1384 (* (- 216) ?x536)))
 (let ((?x449 (* s00 r00)))
 (let ((?x543 (* 54 ?x449)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1400 (+ ?x143 ?x1010 ?x543 ?x1384 ?x1385 (* (- 15) (* s s)) ?x887 ?x1388 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1023 ?x1035 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x755 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1152 (* 108 (* s x)) (* (- 108) (* x x)) ?x906 (* 12 (* s s s00)) ?x1394 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1398 (* 216 (* x x00)) ?x1399)))
 (let (($x1401 (= ?x1400 0)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x719 (* (- 2) ?x691)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x587 (* 24 ?x449)))
 (let ((?x1102 (+ ?x143 ?x1010 (* (- 24) (* r s)) (* 24 (* r s00)) ?x587 ?x574 ?x592 (* 54 (* r x)) (* 36 (* r x r00)) ?x887 ?x939 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1023 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x719 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x829 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x913 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1107 (= ?x1102 0)))
 (let ((?x671 (* 6 ?x670)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x564 (* 9 ?x449)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x768 (+ ?x47 ?x401 (* (- 9) (* r s)) (* 9 (* r s00)) ?x564 ?x559 ?x569 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x588) ?x627 (* 18 (* x r00)) ?x671 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x775 (= ?x768 0)))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x527 (* (- 6) ?x449)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x528 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x523 ?x524 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x527 ?x493)))
 (let (($x529 (= ?x528 0)))
 (let ((?x324 (* r00 r00)))
 (let ((?x325 (* 3 ?x324)))
 (let ((?x354 (* (- 1) s00)))
 (let (($x357 (= (+ s ?x354 (* (- 3) (* r r)) ?x325) 0)))
 (and $x357 $x529 $x775 $x1107 $x1401 (not (= ?x1233 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x511 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x1467 (+ 3 s ?x213)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1062 (+ x ?x303)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x2111 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)))
 (let ((?x1591 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x995 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1762 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1241 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1241 (* (- 3) (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 (* r00 r00 r00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 3) (* r00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1762 ?x995 ?x1591 (* (- 6) (* x00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 2 (* ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467)) (* 4 (* s00 ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 12) ?x2111) (* (- 12) (* r00 r00 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* (- 3) (* r00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) ?x1160 (* 3 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467)) (* (- 6) (* x00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x419 ?x483 (* 3 (* s00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* (- 6) (* r00 s00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 6 (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* 12 (* r00 r00 r00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* 2 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) ?x2367 (* 6 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x137 (* 9 s00)))
 (let ((?x614 (* s00 s00)))
 (let ((?x653 (* 51 ?x614)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x386 (* 16 ?x1207)))
 (let ((?x828 (* s00 x00)))
 (let ((?x2103 (* (- 108) ?x828)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x1654 (* (- 432) ?x905)))
 (let ((?x545 (* r00 x00)))
 (let ((?x1578 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x1578 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1654 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2103 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x386 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x653 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let ((?x143 (* 9 s)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x891 (+ (* (- 24) (* s r)) ?x574 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x592 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x829 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x913 ?x939 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1010 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x1514 (+ (* (- 9) (* s r)) ?x559 (* 9 (* r00 s00)) ?x569 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x627 (* 18 (* r00 x)) ?x401 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2343 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x401 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1017 (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1017 (= ?x2343 0) (= ?x1514 0) (= ?x891 0) (= ?x752 0) (not (= ?x2344 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1781 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1409 (+ 3 ?x213 s)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1415 (+ ?x303 x)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x1232 (* 6 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x725 (* 2 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x403 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x665 (* 2 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409))))
 (let ((?x2317 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1593 (* 3 (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1498 (* 3 (* s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x982 (* 4 (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x983 (* (- 3) (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1262 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x987 (* (- 6) (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1133 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)))
 (let ((?x1639 (* 4 (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x1814 (* 6 (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1780 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x699 (* (- 6) (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409))))
 (let ((?x700 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x733 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x933 (* (- 6) (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x1804 (* (- 6) (* x00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x948 (* (- 3) (* r00 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409))))
 (let ((?x557 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)))
 (let ((?x1233 (+ (* 3 (* ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* (- 3) (* s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* (- 2) (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 6 (* x00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* 12 ?x557) ?x948 (* (- 3) (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 6 (* r00 s00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1804 ?x933 (* 3 (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 12) ?x733) ?x700 ?x699 ?x1780 ?x1814 (* 6 (* r00 s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1639 (* 12 (* r00 r00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 12 ?x1133) ?x987 (* (- 4) (* s00 ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 12) ?x1262) ?x983 ?x982 (* 12 (* r00 r00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* (- 12) (* r00 r00 r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) (* (- 6) (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 6) (* ?x1415 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1498 (* (- 3) (* s00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* 6 (* x00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x1593 (* (- 3) (* ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x2317 (* (- 2) (* ?x1406 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409 ?x1409)) (* 3 (* r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) (* (- 12) (* r00 r00 r00 ?x1406 ?x1415 ?x1415 ?x1409 ?x1409 ?x1409)) ?x665 (* (- 4) (* s00 ?x1406 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x403 ?x725 (* 3 (* r00 ?x1415 ?x1415 ?x1415 ?x1415 ?x1409 ?x1409)) ?x1232)))
 (let ((?x1369 (* x00 x00)))
 (let ((?x1399 (* (- 108) ?x1369)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x1398 (* (- 16) ?x1207)))
 (let ((?x1079 (* s00 r00 r00 r00)))
 (let ((?x1394 (* (- 216) ?x1079)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x906 (* 432 ?x905)))
 (let ((?x828 (* s00 x00)))
 (let ((?x1152 (* 108 ?x828)))
 (let ((?x754 (* s00 s00 r00 r00)))
 (let ((?x755 (* 36 ?x754)))
 (let ((?x691 (* s00 s00 r00)))
 (let ((?x1035 (* 108 ?x691)))
 (let ((?x670 (* s00 r00 r00)))
 (let ((?x1023 (* 36 ?x670)))
 (let ((?x614 (* s00 s00)))
 (let ((?x1388 (* (- 51) ?x614)))
 (let ((?x588 (* s r00 r00)))
 (let ((?x887 (* (- 36) ?x588)))
 (let ((?x545 (* r00 x00)))
 (let ((?x1385 (* (- 108) ?x545)))
 (let ((?x536 (* s00 r00 x00)))
 (let ((?x1384 (* (- 216) ?x536)))
 (let ((?x449 (* s00 r00)))
 (let ((?x543 (* 54 ?x449)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1400 (+ ?x143 ?x1010 ?x543 ?x1384 ?x1385 (* (- 15) (* s s)) ?x887 ?x1388 (* (- 108) (* x s00)) (* 108 (* x r00)) (* 216 (* s r00 r00 r00)) ?x1023 ?x1035 (* 66 (* s s00)) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x755 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1152 (* 108 (* s x)) (* (- 108) (* x x)) ?x906 (* 12 (* s s s00)) ?x1394 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1398 (* 216 (* x x00)) ?x1399)))
 (let (($x1401 (= ?x1400 0)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x719 (* (- 2) ?x691)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x587 (* 24 ?x449)))
 (let ((?x1102 (+ ?x143 ?x1010 (* (- 24) (* r s)) (* 24 (* r s00)) ?x587 ?x574 ?x592 (* 54 (* r x)) (* 36 (* r x r00)) ?x887 ?x939 (* (- 6) (* x s00)) (* 54 (* x r00)) ?x1023 (* 4 (* s s r00)) (* (- 54) (* r x00)) ?x719 (* 12 (* s s00)) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x829 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x913 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1107 (= ?x1102 0)))
 (let ((?x671 (* 6 ?x670)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x564 (* 9 ?x449)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x768 (+ ?x47 ?x401 (* (- 9) (* r s)) (* 9 (* r s00)) ?x564 ?x559 ?x569 (* 18 (* r x)) (* 6 (* r s r00)) (* (- 6) ?x588) ?x627 (* 18 (* x r00)) ?x671 (* (- 18) (* r x00)) (* 2 (* s s00)) (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x775 (= ?x768 0)))
 (let ((?x492 (* r00 r00 r00)))
 (let ((?x493 (* 12 ?x492)))
 (let ((?x527 (* (- 6) ?x449)))
 (let ((?x524 (* (- 6) x00)))
 (let ((?x523 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x528 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x523 ?x524 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x527 ?x493)))
 (let (($x529 (= ?x528 0)))
 (let ((?x324 (* r00 r00)))
 (let ((?x325 (* 3 ?x324)))
 (let ((?x354 (* (- 1) s00)))
 (let (($x357 (= (+ s ?x354 (* (- 3) (* r r)) ?x325) 0)))
 (let (($x2066 (and $x357 $x529 $x775 $x1107 $x1401 (not (= ?x1233 0)))))
 (let ((?x1467 (+ 3 s ?x213)))
 (let ((?x1062 (+ x ?x303)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x2111 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)))
 (let ((?x1591 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x995 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1762 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1241 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1241 (* (- 3) (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 (* r00 r00 r00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 3) (* r00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1762 ?x995 ?x1591 (* (- 6) (* x00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 2 (* ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467)) (* 4 (* s00 ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 12) ?x2111) (* (- 12) (* r00 r00 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* (- 3) (* r00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) ?x1160 (* 3 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467)) (* (- 6) (* x00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x419 ?x483 (* 3 (* s00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* (- 6) (* r00 s00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 6 (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* 12 (* r00 r00 r00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* 2 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) ?x2367 (* 6 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x137 (* 9 s00)))
 (let ((?x653 (* 51 ?x614)))
 (let ((?x386 (* 16 ?x1207)))
 (let ((?x2103 (* (- 108) ?x828)))
 (let ((?x1654 (* (- 432) ?x905)))
 (let ((?x1578 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x1578 (* (- 54) (* r00 s00)) (* 15 ?x568) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1654 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2103 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x386 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x653 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let ((?x891 (+ (* (- 24) (* s r)) ?x574 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x592 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x829 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x913 ?x939 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1010 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1514 (+ (* (- 9) (* s r)) ?x559 (* 9 (* r00 s00)) ?x569 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x627 (* 18 (* r00 x)) ?x401 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2343 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x401 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) ?x492))))
 (let (($x949 (and (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) ?x324)) 0) (= ?x2343 0) (= ?x1514 0) (= ?x891 0) (= ?x752 0) (not (= ?x2344 0)))))
 (rewrite (= $x949 $x2066)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x300 (exists ((r Int) (s Int) (x Int) )(! (let ((?x215 (- x s)))
 (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x286 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x284 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x276 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x273 (* 4 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x265 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x249 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x246 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 12 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (+ (* 4 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x222 (+ (- ?x218 (* 3 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x227 (+ (- ?x222 (* 3 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) ?x226)))
 (let ((?x230 (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x234 (+ (- ?x230 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x238 (- (- ?x234 ?x235) (* 12 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x241 (+ ?x238 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00) (* 3 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x245 (- (- ?x241 (* 6 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x253 (- (+ ?x245 ?x246 (* 3 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) ?x249)))
 (let ((?x254 (- ?x253 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x256 (- (- ?x254 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00))))
 (let ((?x258 (+ ?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x260 (- ?x258 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x264 (- (+ ?x260 (* 3 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x269 (- (+ ?x264 ?x265) (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x272 (+ (- ?x269 ?x268) (* 3 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x277 (+ (- ?x272 ?x273) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) ?x276)))
 (let ((?x283 (+ (- ?x277 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* 12 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x288 (- (- ?x283 ?x284) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x293 (- (+ (- ?x288 ?x286) (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let (($x297 (not (= (+ ?x293 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) 0))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x297))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x727 (lambda ((r Int) (s Int) (x Int) )(let ((?x213 (* 6 r)))
 (let ((?x1467 (+ 3 s ?x213)))
 (let ((?x303 (* (- 1) s)))
 (let ((?x1062 (+ x ?x303)))
 (let ((?x1406 (+ 1 r)))
 (let ((?x2367 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x2318 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467))))
 (let ((?x2265 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1864 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))
 (let ((?x1919 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)))
 (let ((?x1490 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1827 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1849 (* (- 2) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1732 (* (- 6) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1600 (* r00 r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))
 (let ((?x483 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x419 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1295 (* (- 3) (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1246 (* (- 4) (* s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1160 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x910 (* 3 (* r00 ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x882 (* 6 (* x00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x2111 (* r00 r00 r00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)))
 (let ((?x1591 (* (- 3) (* s00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x995 (* 6 (* r00 s00 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467))))
 (let ((?x1762 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467))))
 (let ((?x1241 (* 3 (* ?x1406 ?x1406 ?x1406 ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467))))
 (let ((?x2344 (+ (* 4 (* s00 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1241 (* (- 3) (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 (* r00 r00 r00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 3) (* r00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1762 ?x995 ?x1591 (* (- 6) (* x00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 2 (* ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467)) (* 4 (* s00 ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 12) ?x2111) (* (- 12) (* r00 r00 ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x882 ?x910 (* (- 6) (* r00 s00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* (- 3) (* r00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) ?x1160 (* 3 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x1246 ?x1295 (* (- 3) (* ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467 ?x1467)) (* (- 6) (* x00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) ?x419 ?x483 (* 3 (* s00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* (- 6) (* r00 s00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 ?x1600) ?x1732 ?x1849 ?x1827 ?x1490 (* 3 (* ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 12 ?x1919) (* (- 12) (* r00 r00 ?x1406 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* 6 (* ?x1062 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* 12 (* r00 r00 r00 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467)) (* 2 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) (* (- 12) ?x1864) ?x2265 ?x2318 (* 3 (* s00 ?x1406 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)) ?x2367 (* 6 (* ?x1406 ?x1062 ?x1062 ?x1062 ?x1467 ?x1467 ?x1467)))))
 (let ((?x1369 (* x00 x00)))
 (let ((?x678 (* 108 ?x1369)))
 (let ((?x137 (* 9 s00)))
 (let ((?x614 (* s00 s00)))
 (let ((?x653 (* 51 ?x614)))
 (let ((?x1207 (* s00 s00 s00)))
 (let ((?x386 (* 16 ?x1207)))
 (let ((?x828 (* s00 x00)))
 (let ((?x2103 (* (- 108) ?x828)))
 (let ((?x905 (* r00 r00 r00 x00)))
 (let ((?x1654 (* (- 432) ?x905)))
 (let ((?x545 (* r00 x00)))
 (let ((?x1578 (* 108 ?x545)))
 (let ((?x752 (+ (* 216 (* r00 s00 x00)) ?x1578 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1654 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x2103 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x386 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x653 (* (- 108) (* r00 x)) ?x137 (* (- 36) (* r00 r00 s00)) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x678)))
 (let ((?x143 (* 9 s)))
 (let ((?x1010 (* (- 9) s00)))
 (let ((?x939 (* (- 15) ?x614)))
 (let ((?x900 (* r00 r00 x00)))
 (let ((?x913 (* (- 36) ?x900)))
 (let ((?x829 (* 6 ?x828)))
 (let ((?x568 (* s s)))
 (let ((?x592 (* 3 ?x568)))
 (let ((?x574 (* (- 54) ?x545)))
 (let ((?x891 (+ (* (- 24) (* s r)) ?x574 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x592 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x829 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x913 ?x939 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1010 (* 36 (* r00 r00 s00)) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x401 (* (- 3) s00)))
 (let ((?x627 (* (- 4) ?x614)))
 (let ((?x569 (* 2 ?x568)))
 (let ((?x559 (* (- 18) ?x545)))
 (let ((?x1514 (+ (* (- 9) (* s r)) ?x559 (* 9 (* r00 s00)) ?x569 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x627 (* 18 (* r00 x)) ?x401 (* 6 (* r00 r00 s00)) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2343 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x401 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1017 (= (+ s00 ?x303 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x949 (and $x1017 (= ?x2343 0) (= ?x1514 0) (= ?x891 0) (= ?x752 0) (not (= ?x2344 0)))))
 (let ((?x215 (- x s)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x286 (* 2 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x284 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x276 (* 12 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x273 (* 4 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x268 (* 2 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x265 (* 12 ?x212 ?x212 ?x212 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)))
 (let ((?x249 (* 4 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x246 (* 6 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215)))
 (let ((?x235 (* 12 ?x212 ?x212 ?x212 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x226 (* 6 ?x212 ?x212 ?x212 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215)))
 (let ((?x218 (+ (* 4 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x222 (+ (- ?x218 (* 3 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 12 ?x212 r00 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x227 (+ (- ?x222 (* 3 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) ?x226)))
 (let ((?x230 (- ?x227 (* 3 ?x212 ?x212 ?x212 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x234 (+ (- ?x230 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 x00)) (* 2 ?x212 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215) (* 4 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x238 (- (- ?x234 ?x235) (* 12 ?x212 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x241 (+ ?x238 (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 x00) (* 3 ?x212 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x245 (- (- ?x241 (* 6 r00 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 3 ?x212 r00 ?x214 ?x214 ?x214 ?x215 ?x215))))
 (let ((?x253 (- (+ ?x245 ?x246 (* 3 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215)) ?x249)))
 (let ((?x254 (- ?x253 (* 3 ?x212 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215))))
 (let ((?x256 (- (- ?x254 (* 3 ?x212 ?x214 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 x00))))
 (let ((?x258 (+ ?x256 (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 x00))))
 (let ((?x260 (- ?x258 (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x264 (- (+ ?x260 (* 3 ?x214 ?x214 s00 ?x215 ?x215 ?x215 ?x215)) (* 6 ?x212 r00 ?x214 ?x214 ?x214 s00 ?x215 ?x215))))
 (let ((?x269 (- (+ ?x264 ?x265) (* 6 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x272 (+ (- ?x269 ?x268) (* 3 ?x212 ?x212 ?x212 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x277 (+ (- ?x272 ?x273) (* 3 ?x212 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215) ?x276)))
 (let ((?x283 (+ (- ?x277 (* 12 ?x212 ?x212 r00 r00 ?x214 ?x214 ?x214 ?x215 ?x215)) (* 6 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215) (* 12 r00 r00 r00 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215) (* 2 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x288 (- (- ?x283 ?x284) (* 6 ?x212 ?x212 ?x212 ?x214 ?x214 ?x215 ?x215 ?x215 ?x215 ?x215 ?x215))))
 (let ((?x293 (- (+ (- ?x288 ?x286) (* 3 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215)) (* 3 ?x212 ?x212 ?x212 ?x212 ?x214 ?x214 ?x214 s00 ?x215 ?x215 ?x215))))
 (let (($x297 (not (= (+ ?x293 (* 6 ?x212 ?x214 ?x214 ?x214 ?x215 ?x215 ?x215)) 0))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x299 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or $x297))))
 (rewrite (= $x299 $x949))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x301 (asserted $x300)))
 (let ((@x2144 (mp (mp @x301 (quant-intro (proof-bind ?x727) (= $x300 $x511)) $x511) (rewrite (= $x511 $x511)) $x511)))
 (let ((@x1892 (mp~ (mp @x2144 (quant-intro (proof-bind ?x1781) (= $x511 $x1549)) $x1549) (sk (~ $x1549 $x1011)) $x1011)))
 (let ((@x932 (mp @x1892 (rewrite (= $x1011 $x797)) $x797)))
 (let ((@x369 (and-elim @x932 $x743)))
 (let ((@x1729 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x439)) @x369 $x439)))
 (let (($x1735 (>= ?x1067 0)))
 (let ((@x1038 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x743) $x1735)) @x369 $x1735)))
 (let (($x1083 (<= ?x1925 0)))
 (let ((@x1806 (and-elim @x932 $x1774)))
 (let ((@x553 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1774) $x1083)) @x1806 $x1083)))
 (let (($x1810 (>= ?x1925 0)))
 (let ((@x1790 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1774) $x1810)) @x1806 $x1810)))
 (let (($x1666 (<= ?x2099 0)))
 (let ((@x582 (and-elim @x932 $x1214)))
 (let ((@x1072 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1214) $x1666)) @x582 $x1666)))
 (let (($x803 (>= ?x2099 0)))
 (let ((@x1663 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1214) $x803)) @x582 $x803)))
 (let (($x809 (<= ?x2196 0)))
 (let ((@x1637 (and-elim @x932 $x1069)))
 (let ((@x1297 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1069) $x809)) @x1637 $x809)))
 (let (($x1805 (>= ?x2196 0)))
 (let ((@x1486 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1069) $x1805)) @x1637 $x1805)))
 (let (($x1291 (not (<= ?x1143 0))))
 (let (($x1759 (>= ?x1143 0)))
 (let ((@x1786 ((_ th-lemma arith) (hypothesis (not $x1759)) @x1038 @x1729 @x1486 @x1297 @x1038 @x1729 @x1486 @x1297 @x1663 @x1072 @x1038 @x1729 @x1790 @x553 @x1038 @x1729 false)))
 (let ((@x1366 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1144 $x1291 (not $x1759))) (and-elim @x932 $x2061) (or $x1291 (not $x1759)))))
 ((_ th-lemma arith) (unit-resolution @x1366 (lemma @x1786 $x1759) $x1291) @x1038 @x1729 @x1486 @x1297 @x1038 @x1729 @x1486 @x1297 @x1663 @x1072 @x1038 @x1729 @x1790 @x553 @x1038 @x1729 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        25
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             782
 :arith-nonlinear-bounds    18
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 139
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                20.30
 :memory                    19.39
 :mk-bool-var               18
 :mk-clause                 19
 :num-allocs                4100845
 :num-checks                1
 :propagations              12
 :rlimit-count              81681
 :time                      0.06
 :total-time                0.08)
