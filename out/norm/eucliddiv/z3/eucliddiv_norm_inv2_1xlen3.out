unsat
((set-logic NIA)
(declare-fun q!2 () Int)
(declare-fun r!1 () Int)
(declare-fun y!0 () Int)
(proof
(let ((?x76 (* y00 q00)))
 (let ((?x2050 (+ r00 ?x76 (* (- 1) r!1) (* (- 1) (* y00 q!2)))))
 (let (($x2039 (<= ?x2050 0)))
 (let (($x2045 (= ?x2050 0)))
 (let ((?x1673 (* y00 y00 y00 y00 r00)))
 (let ((?x1581 (* (- 1) (* y00 r00))))
 (let ((?x1382 (* (- 3) (* q!2 r!1 r!1))))
 (let ((?x1381 (* (- 3) (* q!2 q!2 r!1 r!1))))
 (let ((?x1458 (* (- 1) (* q!2 q!2 q!2 r!1 r!1))))
 (let ((?x1455 (* (- 1) (* r!1 r!1))))
 (let ((?x1144 (* (- 1) (* y00 y00 q00))))
 (let ((?x921 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x860 (* r!1 r!1 r!1 r!1)))
 (let ((?x821 (* q!2 r!1 r!1 r!1 r!1)))
 (let ((?x626 (* y00 y00 y00 y00 q00)))
 (let ((?x433 (* y00 y00 y00 r00)))
 (let ((?x1921 (+ (* y00 y00 y00 y00 r00 q!2) (* (- 3) (* y00 y00 q!2 q!2 r!1 r!1)) (* y00 y00 r00 q!2 r!1 r!1) (* (- 2) (* y00 y00 y00 r00 q!2 r!1)) (* (- 2) (* y00 y00 y00 r00 r!1)) (* y00 q!2 q!2 r!1 r!1 r!1) (* (- 1) (* y00 r00 q!2 q!2 q!2)) ?x433 ?x626 ?x821 ?x860 ?x921 (* (- 1) (* y00 y00 y00 y00 q!2)) (* y00 y00 r00 r!1 r!1) ?x1144 ?x1455 ?x1458 ?x1381 ?x1382 ?x1581 (* (- 1) (* y00 y00 y00 y00 r!1)) ?x1673 (* 3 (* y00 y00 y00 q!2 q!2 r!1)) (* (- 1) (* y00 y00 y00 y00 q!2 q!2)) (* 3 (* y00 y00 r!1 r!1)) (* (- 1) (* r00 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 q00 q!2 r!1 r!1 r!1)) (* (- 3) (* y00 y00 y00 q00 r!1)) (* (- 2) (* y00 q!2 q!2 q!2 r!1)) (* 3 (* y00 y00 q!2 q!2)) (* (- 2) (* y00 y00 y00 y00 q00 r!1)) (* (- 1) (* y00 y00 y00 q!2 q!2 r!1 r!1)) (* y00 q00 r!1) (* (- 3) (* y00 r!1 r!1 r!1)) (* (- 2) (* y00 q!2 r!1 r!1 r!1)) (* (- 1) (* y00 y00 y00 r!1)) (* 2 (* y00 y00 y00 q!2 r!1)) (* (- 1) (* r00 r!1 r!1 r!1)) (* 3 (* y00 r00 r!1 r!1)) (* 3 (* y00 r00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 r00 r!1)) (* (- 3) (* y00 y00 r00 q!2 r!1)) (* y00 y00 y00 r00 q!2) (* (- 1) (* y00 q00 r!1 r!1 r!1)) (* 3 (* y00 y00 q00 r!1 r!1)) (* 3 (* y00 y00 q00 q!2 r!1 r!1)) (* (- 3) (* y00 y00 y00 q00 q!2 r!1)) (* y00 y00 y00 y00 q00 q!2) (* y00 r!1) (* 2 (* y00 q!2 r!1)) (* (- 1) (* y00 q!2 q!2 q!2 q!2 r!1)) (* y00 y00 q!2) (* 3 (* y00 y00 q!2 q!2 q!2)) (* y00 y00 q!2 q!2 q!2 q!2) (* y00 y00 y00 q00 r!1 r!1) (* y00 y00 y00 q00 q!2 r!1 r!1) (* (- 2) (* y00 y00 y00 y00 q00 q!2 r!1)) (* y00 y00 y00 y00 y00 q00 q!2) (* 2 (* y00 y00 y00 r!1 r!1)) (* y00 y00 y00 q!2 r!1 r!1) (* y00 y00 y00 y00 q!2 r!1) (* 2 (* y00 y00 y00 y00 q!2 q!2 r!1)) (* (- 1) (* y00 y00 y00 y00 y00 q!2)) (* (- 1) (* y00 y00 y00 y00 y00 q!2 q!2)) (* 3 (* y00 q00 q!2 r!1)) (* 3 (* y00 q00 q!2 q!2 r!1)) (* y00 q00 q!2 q!2 q!2 r!1) (* (- 3) (* y00 y00 q00 q!2)) (* (- 3) (* y00 y00 q00 q!2 q!2)) (* (- 1) (* y00 y00 r!1 r!1 r!1)) (* (- 1) (* y00 y00 q00 q!2 q!2 q!2)) (* (- 1) (* y00 y00 q!2 r!1 r!1 r!1)) (* r00 r!1) (* 3 (* r00 q!2 r!1)) (* 3 (* r00 q!2 q!2 r!1)) (* r00 q!2 q!2 q!2 r!1) (* (- 3) (* y00 r00 q!2)) (* (- 3) (* y00 r00 q!2 q!2)))))
 (let (($x1035 (= ?x1921 0)))
 (let (($x2055 (not $x1035)))
 (let ((?x2030 (+ y00 (* (- 1) y!0))))
 (let (($x1981 (= ?x2030 0)))
 (let (($x769 (and $x1981 $x2045 $x2055)))
 (let ((?x2018 (+ ?x860 ?x821 (* (- 3) (* r!1 r!1 r!1 y00)) (* (- 2) (* q!2 r!1 r!1 r!1 y00)) (* 3 (* r!1 r!1 y00 y00)) (* (- 1) (* r!1 y00 y00 y00)) (* 2 (* q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00)) (* (- 1) (* r!1 r!1 r!1 r00)) (* (- 1) (* q!2 r!1 r!1 r!1 r00)) (* 3 (* r!1 r!1 y00 r00)) (* 3 (* q!2 r!1 r!1 y00 r00)) (* (- 3) (* r!1 y00 y00 r00)) (* (- 3) (* q!2 r!1 y00 y00 r00)) ?x433 (* q!2 y00 y00 y00 r00) (* (- 1) (* r!1 r!1 r!1 y00 q00)) (* (- 1) (* q!2 r!1 r!1 r!1 y00 q00)) (* 3 (* r!1 r!1 y00 y00 q00)) (* 3 (* q!2 r!1 r!1 y00 y00 q00)) (* (- 3) (* r!1 y00 y00 y00 q00)) (* (- 3) (* q!2 r!1 y00 y00 y00 q00)) ?x626 (* q!2 y00 y00 y00 y00 q00) (* r!1 y00) (* 2 (* q!2 r!1 y00)) (* (- 2) (* q!2 q!2 q!2 r!1 y00)) (* (- 1) (* q!2 q!2 q!2 q!2 r!1 y00)) (* q!2 y00 y00) (* 3 (* q!2 q!2 y00 y00)) (* 3 (* q!2 q!2 q!2 y00 y00)) (* q!2 q!2 q!2 q!2 y00 y00) (* r!1 r!1 y00 y00 y00 q00) (* q!2 r!1 r!1 y00 y00 y00 q00) (* (- 2) (* r!1 y00 y00 y00 y00 q00)) (* (- 2) (* q!2 r!1 y00 y00 y00 y00 q00)) ?x921 (* q!2 y00 y00 y00 y00 y00 q00) (* 2 (* r!1 r!1 y00 y00 y00)) (* q!2 r!1 r!1 y00 y00 y00) (* (- 1) (* q!2 q!2 r!1 r!1 y00 y00 y00)) (* (- 1) (* r!1 y00 y00 y00 y00)) (* q!2 r!1 y00 y00 y00 y00) (* 2 (* q!2 q!2 r!1 y00 y00 y00 y00)) (* (- 1) (* q!2 y00 y00 y00 y00 y00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00 y00)) (* r!1 y00 q00) (* 3 (* q!2 r!1 y00 q00)) (* 3 (* q!2 q!2 r!1 y00 q00)) (* q!2 q!2 q!2 r!1 y00 q00) ?x1144 (* (- 3) (* q!2 y00 y00 q00)) (* (- 3) (* q!2 q!2 y00 y00 q00)) (* (- 1) (* q!2 q!2 q!2 y00 y00 q00)) (* (- 1) (* r!1 r!1 r!1 y00 y00)) (* (- 1) (* q!2 r!1 r!1 r!1 y00 y00)) ?x1455 ?x1382 ?x1381 ?x1458 (* r!1 r00) (* 3 (* q!2 r!1 r00)) (* 3 (* q!2 q!2 r!1 r00)) (* q!2 q!2 q!2 r!1 r00) ?x1581 (* (- 3) (* q!2 y00 r00)) (* (- 3) (* q!2 q!2 y00 r00)) (* (- 1) (* q!2 q!2 q!2 y00 r00)) (* r!1 r!1 y00 y00 r00) (* q!2 r!1 r!1 y00 y00 r00) (* (- 2) (* r!1 y00 y00 y00 r00)) (* (- 2) (* q!2 r!1 y00 y00 y00 r00)) ?x1673 (* q!2 y00 y00 y00 y00 r00) (* q!2 q!2 r!1 r!1 r!1 y00) (* (- 3) (* q!2 q!2 r!1 r!1 y00 y00)) (* 3 (* q!2 q!2 r!1 y00 y00 y00)) (* (- 1) (* q!2 q!2 y00 y00 y00 y00)))))
 (let (($x2020 (and (= (+ y!0 (* (- 1) y00)) 0) (= (+ r!1 (* (- 1) r00) (* q!2 y00) (* (- 1) ?x76)) 0) (not (= ?x2018 0)))))
 (let (($x89 (exists ((q Int) (r Int) (y Int) )(! (let ((?x1673 (* y00 y00 y00 y00 r00)))
 (let ((?x1581 (* (- 1) (* y00 r00))))
 (let ((?x1144 (* (- 1) (* y00 y00 q00))))
 (let ((?x921 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x626 (* y00 y00 y00 y00 q00)))
 (let ((?x433 (* y00 y00 y00 r00)))
 (let ((?x1889 (+ (* r r r r) (* q r r r r) (* (- 3) (* r r r y00)) (* (- 2) (* q r r r y00)) (* 3 (* r r y00 y00)) (* (- 1) (* r y00 y00 y00)) (* 2 (* q r y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00)) (* (- 1) (* r r r r00)) (* (- 1) (* q r r r r00)) (* 3 (* r r y00 r00)) (* 3 (* q r r y00 r00)) (* (- 3) (* r y00 y00 r00)) (* (- 3) (* q r y00 y00 r00)) ?x433 (* q y00 y00 y00 r00) (* (- 1) (* r r r y00 q00)) (* (- 1) (* q r r r y00 q00)) (* 3 (* r r y00 y00 q00)) (* 3 (* q r r y00 y00 q00)) (* (- 3) (* r y00 y00 y00 q00)) (* (- 3) (* q r y00 y00 y00 q00)) ?x626 (* q y00 y00 y00 y00 q00) (* r y00) (* 2 (* q r y00)) (* (- 2) (* q q q r y00)) (* (- 1) (* q q q q r y00)) (* q y00 y00) (* 3 (* q q y00 y00)) (* 3 (* q q q y00 y00)) (* q q q q y00 y00) (* r r y00 y00 y00 q00) (* q r r y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 q00)) (* (- 2) (* q r y00 y00 y00 y00 q00)) ?x921 (* q y00 y00 y00 y00 y00 q00) (* 2 (* r r y00 y00 y00)) (* q r r y00 y00 y00) (* (- 1) (* q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* q r y00 y00 y00 y00) (* 2 (* q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00 y00)) (* r y00 q00) (* 3 (* q r y00 q00)) (* 3 (* q q r y00 q00)) (* q q q r y00 q00) ?x1144 (* (- 3) (* q y00 y00 q00)) (* (- 3) (* q q y00 y00 q00)) (* (- 1) (* q q q y00 y00 q00)) (* (- 1) (* r r r y00 y00)) (* (- 1) (* q r r r y00 y00)) (* (- 1) (* r r)) (* (- 3) (* q r r)) (* (- 3) (* q q r r)) (* (- 1) (* q q q r r)) (* r r00) (* 3 (* q r r00)) (* 3 (* q q r r00)) (* q q q r r00) ?x1581 (* (- 3) (* q y00 r00)) (* (- 3) (* q q y00 r00)) (* (- 1) (* q q q y00 r00)) (* r r y00 y00 r00) (* q r r y00 y00 r00) (* (- 2) (* r y00 y00 y00 r00)) (* (- 2) (* q r y00 y00 y00 r00)) ?x1673 (* q y00 y00 y00 y00 r00) (* q q r r r y00) (* (- 3) (* q q r r y00 y00)) (* 3 (* q q r y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00)))))
 (let (($x106 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (and (= (+ y (* (- 1) y00)) 0) $x106 (not (= ?x1889 0))))))))))) :qid k!29))
 ))
 (let (($x783 (exists ((q Int) (r Int) (y Int) )(! (let ((?x74 (* (- 1) y00)))
 (let ((?x826 (+ r ?x74)))
 (let ((?x332 (+ 1 q)))
 (let ((?x334 (+ (* ?x332 ?x826 ?x826 ?x826 ?x826) (* (- 1) (* r00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* q00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* y00 ?x332 ?x332 ?x332 ?x332 ?x826)) (* q00 y00 y00 y00 ?x332 ?x826 ?x826) (* (- 1) (* y00 y00 y00 ?x332 ?x332 ?x826 ?x826)) (* q00 y00 ?x332 ?x332 ?x332 ?x826) (* (- 1) (* y00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* ?x332 ?x332 ?x332 ?x826 ?x826)) (* r00 ?x332 ?x332 ?x332 ?x826) (* r00 y00 y00 ?x332 ?x826 ?x826) (* y00 ?x332 ?x332 ?x826 ?x826 ?x826))))
 (let (($x757 (not (= ?x334 0))))
 (let (($x743 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ y00 (* (- 1) y)) 0) $x743 $x757))))))) :qid k!29))
 ))
 (let ((?x1032 (lambda ((q Int) (r Int) (y Int) )(let ((?x1673 (* y00 y00 y00 y00 r00)))
 (let ((?x1581 (* (- 1) (* y00 r00))))
 (let ((?x1144 (* (- 1) (* y00 y00 q00))))
 (let ((?x921 (* y00 y00 y00 y00 y00 q00)))
 (let ((?x626 (* y00 y00 y00 y00 q00)))
 (let ((?x433 (* y00 y00 y00 r00)))
 (let ((?x1889 (+ (* r r r r) (* q r r r r) (* (- 3) (* r r r y00)) (* (- 2) (* q r r r y00)) (* 3 (* r r y00 y00)) (* (- 1) (* r y00 y00 y00)) (* 2 (* q r y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00)) (* (- 1) (* r r r r00)) (* (- 1) (* q r r r r00)) (* 3 (* r r y00 r00)) (* 3 (* q r r y00 r00)) (* (- 3) (* r y00 y00 r00)) (* (- 3) (* q r y00 y00 r00)) ?x433 (* q y00 y00 y00 r00) (* (- 1) (* r r r y00 q00)) (* (- 1) (* q r r r y00 q00)) (* 3 (* r r y00 y00 q00)) (* 3 (* q r r y00 y00 q00)) (* (- 3) (* r y00 y00 y00 q00)) (* (- 3) (* q r y00 y00 y00 q00)) ?x626 (* q y00 y00 y00 y00 q00) (* r y00) (* 2 (* q r y00)) (* (- 2) (* q q q r y00)) (* (- 1) (* q q q q r y00)) (* q y00 y00) (* 3 (* q q y00 y00)) (* 3 (* q q q y00 y00)) (* q q q q y00 y00) (* r r y00 y00 y00 q00) (* q r r y00 y00 y00 q00) (* (- 2) (* r y00 y00 y00 y00 q00)) (* (- 2) (* q r y00 y00 y00 y00 q00)) ?x921 (* q y00 y00 y00 y00 y00 q00) (* 2 (* r r y00 y00 y00)) (* q r r y00 y00 y00) (* (- 1) (* q q r r y00 y00 y00)) (* (- 1) (* r y00 y00 y00 y00)) (* q r y00 y00 y00 y00) (* 2 (* q q r y00 y00 y00 y00)) (* (- 1) (* q y00 y00 y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00 y00)) (* r y00 q00) (* 3 (* q r y00 q00)) (* 3 (* q q r y00 q00)) (* q q q r y00 q00) ?x1144 (* (- 3) (* q y00 y00 q00)) (* (- 3) (* q q y00 y00 q00)) (* (- 1) (* q q q y00 y00 q00)) (* (- 1) (* r r r y00 y00)) (* (- 1) (* q r r r y00 y00)) (* (- 1) (* r r)) (* (- 3) (* q r r)) (* (- 3) (* q q r r)) (* (- 1) (* q q q r r)) (* r r00) (* 3 (* q r r00)) (* 3 (* q q r r00)) (* q q q r r00) ?x1581 (* (- 3) (* q y00 r00)) (* (- 3) (* q q y00 r00)) (* (- 1) (* q q q y00 r00)) (* r r y00 y00 r00) (* q r r y00 y00 r00) (* (- 2) (* r y00 y00 y00 r00)) (* (- 2) (* q r y00 y00 y00 r00)) ?x1673 (* q y00 y00 y00 y00 r00) (* q q r r r y00) (* (- 3) (* q q r r y00 y00)) (* 3 (* q q r y00 y00 y00)) (* (- 1) (* q q y00 y00 y00 y00)))))
 (let (($x106 (= (+ r (* (- 1) r00) (* q y00) (* (- 1) (* y00 q00))) 0)))
 (let (($x340 (and (= (+ y (* (- 1) y00)) 0) $x106 (not (= ?x1889 0)))))
 (let ((?x74 (* (- 1) y00)))
 (let ((?x826 (+ r ?x74)))
 (let ((?x332 (+ 1 q)))
 (let ((?x334 (+ (* ?x332 ?x826 ?x826 ?x826 ?x826) (* (- 1) (* r00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* q00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* y00 ?x332 ?x332 ?x332 ?x332 ?x826)) (* q00 y00 y00 y00 ?x332 ?x826 ?x826) (* (- 1) (* y00 y00 y00 ?x332 ?x332 ?x826 ?x826)) (* q00 y00 ?x332 ?x332 ?x332 ?x826) (* (- 1) (* y00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* ?x332 ?x332 ?x332 ?x826 ?x826)) (* r00 ?x332 ?x332 ?x332 ?x826) (* r00 y00 y00 ?x332 ?x826 ?x826) (* y00 ?x332 ?x332 ?x826 ?x826 ?x826))))
 (let (($x757 (not (= ?x334 0))))
 (let (($x743 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x778 (and (= (+ y00 (* (- 1) y)) 0) $x743 $x757)))
 (rewrite (= $x778 $x340)))))))))))))))))))
 ))
 (let (($x699 (exists ((q Int) (r Int) (y Int) )(! (let ((?x74 (* (- 1) y00)))
 (let ((?x826 (+ r ?x74)))
 (let ((?x332 (+ 1 q)))
 (let ((?x334 (+ (* ?x332 ?x826 ?x826 ?x826 ?x826) (* (- 1) (* r00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* q00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* y00 ?x332 ?x332 ?x332 ?x332 ?x826)) (* q00 y00 y00 y00 ?x332 ?x826 ?x826) (* (- 1) (* y00 y00 y00 ?x332 ?x332 ?x826 ?x826)) (* q00 y00 ?x332 ?x332 ?x332 ?x826) (* (- 1) (* y00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* ?x332 ?x332 ?x332 ?x826 ?x826)) (* r00 ?x332 ?x332 ?x332 ?x826) (* r00 y00 y00 ?x332 ?x826 ?x826) (* y00 ?x332 ?x332 ?x826 ?x826 ?x826))))
 (let (($x757 (not (= ?x334 0))))
 (let (($x743 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (and (= (+ ?x74 y) 0) $x743 $x757))))))) :qid k!29))
 ))
 (let ((?x765 (lambda ((q Int) (r Int) (y Int) )(let ((?x74 (* (- 1) y00)))
 (let ((?x826 (+ r ?x74)))
 (let ((?x332 (+ 1 q)))
 (let ((?x334 (+ (* ?x332 ?x826 ?x826 ?x826 ?x826) (* (- 1) (* r00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* q00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* y00 ?x332 ?x332 ?x332 ?x332 ?x826)) (* q00 y00 y00 y00 ?x332 ?x826 ?x826) (* (- 1) (* y00 y00 y00 ?x332 ?x332 ?x826 ?x826)) (* q00 y00 ?x332 ?x332 ?x332 ?x826) (* (- 1) (* y00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* ?x332 ?x332 ?x332 ?x826 ?x826)) (* r00 ?x332 ?x332 ?x332 ?x826) (* r00 y00 y00 ?x332 ?x826 ?x826) (* y00 ?x332 ?x332 ?x826 ?x826 ?x826))))
 (let (($x757 (not (= ?x334 0))))
 (let (($x743 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x778 (and (= (+ y00 (* (- 1) y)) 0) $x743 $x757)))
 (let (($x742 (and (= (+ ?x74 y) 0) $x743 $x757)))
 (rewrite (= $x742 $x778)))))))))))
 ))
 (let (($x69 (exists ((q Int) (r Int) (y Int) )(! (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (- (- (* ?x42 ?x43 ?x43 ?x43 ?x43) (* ?x42 ?x43 ?x43 ?x43 r00)) (* ?x42 q00 ?x43 ?x43 ?x43 y00))))
 (let ((?x52 (+ (- ?x49 (* ?x42 ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 q00 ?x43 ?x43 y00 y00 y00))))
 (let ((?x56 (+ (- ?x52 (* ?x42 ?x42 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x60 (- (- ?x56 (* ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43))))
 (let ((?x64 (+ ?x60 (* ?x42 ?x42 ?x42 ?x43 r00) (* ?x42 ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00))))
 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0))))))))))) :qid k!29))
 ))
 (let ((?x735 (lambda ((q Int) (r Int) (y Int) )(let ((?x74 (* (- 1) y00)))
 (let ((?x826 (+ r ?x74)))
 (let ((?x332 (+ 1 q)))
 (let ((?x334 (+ (* ?x332 ?x826 ?x826 ?x826 ?x826) (* (- 1) (* r00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* q00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* y00 ?x332 ?x332 ?x332 ?x332 ?x826)) (* q00 y00 y00 y00 ?x332 ?x826 ?x826) (* (- 1) (* y00 y00 y00 ?x332 ?x332 ?x826 ?x826)) (* q00 y00 ?x332 ?x332 ?x332 ?x826) (* (- 1) (* y00 y00 ?x332 ?x826 ?x826 ?x826)) (* (- 1) (* ?x332 ?x332 ?x332 ?x826 ?x826)) (* r00 ?x332 ?x332 ?x332 ?x826) (* r00 y00 y00 ?x332 ?x826 ?x826) (* y00 ?x332 ?x332 ?x826 ?x826 ?x826))))
 (let (($x757 (not (= ?x334 0))))
 (let (($x743 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x742 (and (= (+ ?x74 y) 0) $x743 $x757)))
 (let ((?x43 (- r y00)))
 (let ((?x42 (+ q 1)))
 (let ((?x49 (- (- (* ?x42 ?x43 ?x43 ?x43 ?x43) (* ?x42 ?x43 ?x43 ?x43 r00)) (* ?x42 q00 ?x43 ?x43 ?x43 y00))))
 (let ((?x52 (+ (- ?x49 (* ?x42 ?x42 ?x42 ?x42 ?x43 y00)) (* ?x42 q00 ?x43 ?x43 y00 y00 y00))))
 (let ((?x56 (+ (- ?x52 (* ?x42 ?x42 ?x43 ?x43 y00 y00 y00)) (* ?x42 ?x42 ?x42 q00 ?x43 y00))))
 (let ((?x60 (- (- ?x56 (* ?x42 ?x43 ?x43 ?x43 y00 y00)) (* ?x42 ?x42 ?x42 ?x43 ?x43))))
 (let ((?x64 (+ ?x60 (* ?x42 ?x42 ?x42 ?x43 r00) (* ?x42 ?x43 ?x43 r00 y00 y00) (* ?x42 ?x42 ?x43 ?x43 ?x43 y00))))
 (let (($x68 (and (= (+ (* (- 1) y00) y) 0) (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0) (or (not (= ?x64 0))))))
 (rewrite (= $x68 $x742))))))))))))))))))
 ))
 (let ((@x70 (asserted $x69)))
 (let ((@x747 (mp (mp @x70 (quant-intro (proof-bind ?x735) (= $x69 $x699)) $x699) (rewrite (= $x699 $x699)) $x699)))
 (let ((@x933 (mp (mp @x747 (quant-intro (proof-bind ?x765) (= $x699 $x783)) $x783) (quant-intro (proof-bind ?x1032) (= $x783 $x89)) $x89)))
 (let ((@x2057 (mp (mp~ @x933 (sk (~ $x89 $x2020)) $x2020) (rewrite (= $x2020 $x769)) $x769)))
 (let ((@x2034 (and-elim @x2057 $x2045)))
 (let ((@x2154 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2045) $x2039)) @x2034 $x2039)))
 (let (($x2038 (>= ?x2050 0)))
 (let ((@x2211 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2045) $x2038)) @x2034 $x2038)))
 (let (($x2036 (<= ?x2030 0)))
 (let ((@x2058 (and-elim @x2057 $x1981)))
 (let ((@x2007 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1981) $x2036)) @x2058 $x2036)))
 (let (($x2037 (>= ?x2030 0)))
 (let ((@x301 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1981) $x2037)) @x2058 $x2037)))
 (let (($x2196 (not (<= ?x1921 0))))
 (let (($x1983 (>= ?x1921 0)))
 (let ((@x1570 (lemma ((_ th-lemma arith) (hypothesis (not $x1983)) @x301 @x2007 @x2211 @x2154 false) $x1983)))
 (let ((@x2221 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1035 $x2196 (not $x1983))) (and-elim @x2057 $x2055) (or $x2196 (not $x1983)))))
 ((_ th-lemma arith) (unit-resolution @x2221 @x1570 $x2196) @x301 @x2007 @x2211 @x2154 false)))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 3
 :arith-assert-diseq        1
 :arith-assert-lower        20
 :arith-assert-upper        4
 :arith-conflicts           2
 :arith-eq-adapter          3
 :arith-grobner             2
 :arith-max-min             664
 :arith-nonlinear-bounds    16
 :arith-nonlinear-horner    6
 :arith-num-rows            3
 :arith-offset-eqs          1
 :arith-pivots              3
 :arith-tableau-max-columns 95
 :arith-tableau-max-rows    3
 :conflicts                 2
 :decisions                 1
 :del-clause                10
 :final-checks              4
 :max-memory                3.89
 :memory                    3.31
 :mk-bool-var               15
 :mk-clause                 10
 :num-allocs                1343271
 :num-checks                1
 :propagations              6
 :rlimit-count              9365
 :time                      0.01
 :total-time                0.02)
