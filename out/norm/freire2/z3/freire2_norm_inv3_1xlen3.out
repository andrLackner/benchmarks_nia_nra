unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x4260 (* 3 r!2)))
 (let ((?x4268 (* (- 3) s!1)))
 (let ((?x4269 (* 6 x!0)))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x456 (* s00 r00)))
 (let ((?x534 (* (- 6) ?x456)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x5024 (+ ?x44 ?x530 ?x531 ?x534 ?x500 (* (- 12) (* r00 r00 r!2)) ?x4269 ?x4268 ?x4260 (* 2 (* s!1 r!2)) (* 4 (* s00 r!2)))))
 (let (($x673 (<= ?x5024 0)))
 (let (($x5125 (= ?x5024 0)))
 (let ((?x5726 (* 6 r!2)))
 (let ((?x6519 (+ 3 s!1 ?x5726)))
 (let ((?x5722 (* (- 1) s!1)))
 (let ((?x6516 (+ x!0 ?x5722)))
 (let ((?x5719 (+ 1 r!2)))
 (let ((?x6282 (* 18 (* r!2 r!2 r!2 r!2))))
 (let ((?x6251 (* 45 (* r!2 r!2 r!2))))
 (let ((?x5551 (* s!1 s!1)))
 (let ((?x5680 (* 2 ?x5551)))
 (let ((?x5655 (* 9 r!2)))
 (let ((?x5700 (* (- 12) s!1)))
 (let ((?x5701 (* 18 x!0)))
 (let ((?x677 (* s00 r00 r00)))
 (let ((?x678 (* 6 ?x677)))
 (let ((?x621 (* s00 s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x592 (* r!2 r!2)))
 (let ((?x5709 (* 36 ?x592)))
 (let ((?x552 (* r00 x00)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x3719 (* 3 ?x456)))
 (let ((?x331 (* r00 r00)))
 (let ((?x5526 (* (- 18) ?x331)))
 (let ((?x6047 (* (- 18) x00)))
 (let ((?x3795 (* (- 9) r00)))
 (let ((?x3914 (* 12 s00)))
 (let ((?x4116 (+ ?x3914 ?x3795 ?x6047 ?x5526 (* 54 (* s00 r00 r00 x!0 s!1 s!1)) ?x3719 (* 18 (* x00 s!1 s!1 s!1 s!1 r!2)) ?x566 ?x5709 ?x634 (* (- 4) (* s00 s00 x!0 x!0 x!0 s!1)) ?x678 (* 54 (* x00 s!1 s!1 s!1)) (* (- 54) (* x00 r!2 r!2)) (* 2 (* s!1 s!1 r!2 r!2)) (* 486 (* x00 x!0 x!0 s!1 r!2)) (* (- 36) (* r00 r00 r!2 r!2 r!2)) (* (- 72) (* r00 r00 r!2)) (* 108 (* r00 s!1 s!1 s!1 s!1 r!2)) (* 36 (* s00 s00 x!0 x!0 s!1)) (* 18 (* r00 x00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 27) (* s00 r00 x!0 x!0 s!1)) (* (- 2) (* s00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519)) (* (- 162) (* s00 x!0 x!0 s!1 r!2 r!2)) (* (- 486) (* x00 x!0 s!1 s!1 r!2)) (* (- 4) (* s00 s00 r!2 r!2)) (* (- 216) (* r00 x!0 x!0 x!0 s!1)) (* 108 (* r00 x!0 x!0 x!0 x!0 r!2)) (* (- 12) (* r00 r00 s!1 r!2)) (* 9 (* s00 r00 x!0 s!1 s!1 s!1)) (* (- 18) (* s00 r00 x!0 s!1 s!1 s!1 r!2)) (* 63 (* s00 x!0 x!0 x!0 r!2)) (* (- 6) (* r00 r00 s!1 r!2 r!2)) (* 6 (* r00 s00 ?x5719 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) (* 189 (* s00 x!0 s!1 s!1 r!2)) ?x5701 (* (- 63) (* s00 s!1 s!1 s!1 r!2)) (* 4 (* s!1 s!1 r!2)) (* 36 (* r00 x!0 r!2)) ?x5700 ?x5655 (* (- 27) (* s!1 r!2)) (* (- 18) (* x00 x!0 x!0 x!0 s!1)) (* 18 (* r00 x!0 x!0 x!0 x!0 s!1)) (* (- 24) (* s00 s00 x!0 x!0 x!0 r!2)) (* 108 (* r00 x!0 x!0 s!1 s!1 s!1)) (* (- 18) (* s00 s!1 s!1 s!1)) (* 18 (* x!0 r!2 r!2 r!2)) (* (- 18) (* s00 x!0 x!0 s!1 s!1)) (* (- 189) (* s00 x!0 x!0 s!1 r!2)) (* 18 (* s00 x!0 x!0 x!0)) (* 6 (* s00 r00 r00 r!2 r!2)) (* 4 (* s00 s00 s!1 s!1 s!1 s!1)) (* (- 36) (* r00 x00 r!2)) (* (- 8) (* s00 s00 r!2)) (* (- 9) (* r00 s!1 r!2 r!2)) (* (- 18) (* r00 x00 r!2 r!2)) (* 324 (* r00 x!0 x!0 s!1 s!1)) (* (- 54) (* x00 r!2)) (* 6 (* s00 x!0 x!0 x!0 s!1)) (* (- 6) (* r00 r00 s!1)) (* 18 (* r00 x!0)) (* 9 (* ?x5719 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519)) (* 72 (* r00 r!2 r!2 r!2)) (* 27 (* r00 r!2 r!2)) (* (- 6) (* r00 r00 ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 72) (* r00 x!0 s!1 s!1 s!1 s!1)) (* (- 54) (* s00 x!0 x!0 s!1)) (* 54 (* x!0 r!2 r!2)) (* (- 2) (* ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519 ?x6519)) (* (- 36) (* s00 r00 x!0 x!0 x!0 r!2 r!2)) (* 6 (* r00 s!1 r!2 r!2 r!2)) (* (- 6) (* r00 r00 s00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 72) (* s00 s00 x!0 s!1 s!1 r!2)) (* (- 432) (* r00 x!0 s!1 s!1 s!1 r!2)) (* (- 3) (* s00 r00 s!1 s!1 s!1 s!1)) (* 9 (* s00 r00 x!0 x!0 x!0)) (* 18 (* r00 s!1 s!1 s!1 s!1 s!1)) (* (- 18) (* r00 r!2)) (* (- 6) (* r00 ?x5719 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519)) (* (- 18) (* x00 x!0 x!0 x!0 s!1 r!2)) (* 6 (* r00 ?x5719 ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) (* 12 (* s00 r00 r00 r!2)) (* (- 54) (* x00 x!0 s!1 s!1 s!1)) (* 108 (* x00 s!1 s!1 s!1 r!2 r!2)) (* (- 90) (* r00 r00 r!2 r!2)) (* 54 (* x!0 r!2)) (* (- 18) (* r00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) (* 9 (* r00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519)) (* 162 (* s00 x!0 s!1 s!1 r!2 r!2)) (* (- 162) (* x00 x!0 s!1 s!1)) (* 162 (* x00 x!0 x!0 s!1)) (* (- 18) (* s00 r00 r00 s!1 s!1 s!1)) (* 9 (* s00 x!0 x!0 x!0 s!1 r!2)) (* 18 (* s00 x!0 s!1 s!1 s!1)) (* 18 (* s00 r00 r00 x!0 s!1 s!1 s!1)) (* 108 (* s00 r00 r00 x!0 s!1 s!1 r!2)) (* 4 (* s00 s00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) (* 54 (* x00 x!0 x!0 s!1 s!1 r!2)) (* 162 (* r00 x00 x!0 x!0 s!1)) (* (- 108) (* r00 x00 x!0 x!0 x!0 r!2)) (* (- 54) (* s00 r00 r00 x!0 x!0 s!1)) (* 162 (* x00 s!1 s!1 s!1 r!2)) (* 18 (* x00 s!1 s!1 s!1 s!1)) (* (- 54) (* x00 x!0 x!0 x!0)) (* 18 (* s00 r00 r00 x!0 x!0 x!0)) (* (- 18) (* x00 r!2 r!2 r!2)) (* (- 3) (* ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519)) (* 324 (* x00 x!0 x!0 s!1 r!2 r!2)) (* 3 (* ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 36) (* s00 r00 r00 s!1 s!1 s!1 r!2)) (* 54 (* x00 x!0 x!0 s!1 s!1)) (* (- 54) (* x00 x!0 s!1 s!1 s!1 r!2)) (* (- 108) (* s00 r00 r00 x!0 x!0 s!1 r!2)) (* (- 162) (* x00 x!0 x!0 x!0 r!2)) (* (- 108) (* x00 x!0 x!0 x!0 r!2 r!2)) (* 36 (* s00 r00 r00 x!0 x!0 x!0 r!2)) (* (- 6) (* s00 r00 r00 s!1 s!1 s!1 s!1)) (* (- 36) (* r00 s!1 r!2)) (* (- 18) (* s00 r00 r00 x!0 x!0 s!1 s!1)) (* 6 (* s00 r00 r00 x!0 x!0 x!0 s!1)) (* 54 (* r00 x00 s!1 s!1 s!1)) (* 18 (* r00 x00 s!1 s!1 s!1 s!1)) (* 108 (* r00 x00 s!1 s!1 s!1 r!2)) (* (- 324) (* r00 x00 x!0 s!1 s!1 r!2)) (* (- 162) (* r00 x00 x!0 s!1 s!1)) (* (- 54) (* r00 x00 x!0 s!1 s!1 s!1)) (* (- 9) (* ?x5719 ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 9) (* s00 ?x5719 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) (* 27 (* s00 x!0 s!1 s!1 s!1 r!2)) (* (- 27) (* s00 x!0 x!0 s!1 s!1 r!2)) (* 18 (* ?x5719 ?x6516 ?x6516 ?x6516 ?x6516 ?x6519)) (* 2 (* s00 ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 9) (* s00 s!1 s!1 s!1 s!1 r!2)) (* 54 (* s00 x!0 x!0 x!0 r!2 r!2)) (* (- 18) (* r00 x00 x!0 x!0 x!0 s!1)) (* (- 54) (* r00 x00 x!0 x!0 x!0)) (* 54 (* r00 x00 x!0 x!0 s!1 s!1)) (* 324 (* r00 x00 x!0 x!0 s!1 r!2)) (* 2 (* ?x6516 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519)) (* (- 3) (* s!1 r!2 r!2 r!2)) (* 18 (* r00 x!0 r!2 r!2)) (* 54 (* s00 x!0 s!1 s!1)) (* 45 (* s00 r!2)) (* (- 6) (* s00 s!1 s!1 s!1 s!1)) (* (- 324) (* x00 x!0 s!1 s!1 r!2 r!2)) (* 3 (* s00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) ?x5680 (* 36 (* r00 r!2 r!2 r!2 r!2)) (* (- 9) (* s00 r00 r!2 r!2)) (* 54 (* s00 r!2 r!2)) (* 21 (* s00 r!2 r!2 r!2)) (* 3 (* s00 r00 x!0 x!0 x!0 s!1)) (* (- 18) (* ?x5719 ?x5719 ?x5719 ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 6) (* s00 r00 x!0 x!0 x!0 s!1 r!2)) (* 54 (* r00 s!1 s!1 s!1 s!1)) (* 18 (* x00 ?x5719 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) (* 24 (* s00 s00 s!1 s!1 s!1 r!2)) (* (- 72) (* r00 x!0 x!0 x!0 s!1 s!1)) (* (- 36) (* s00 s00 x!0 s!1 s!1)) (* 12 (* s00 s00 s!1 s!1 s!1)) (* 54 (* r00 x!0 x!0 x!0 x!0)) (* 648 (* r00 x!0 x!0 s!1 s!1 r!2)) (* (- 432) (* r00 x!0 x!0 x!0 s!1 r!2)) (* (- 9) (* s00 r00 x!0 x!0 s!1 s!1)) (* (- 216) (* r00 x!0 s!1 s!1 s!1)) (* (- 18) (* s!1 r!2 r!2)) (* 6 (* s00 r00 s!1 s!1 s!1 s!1 r!2)) (* 36 (* s00 r00 s!1 s!1 s!1 r!2 r!2)) (* (- 9) (* s00 r00 s!1 s!1 s!1)) (* (- 12) (* s00 s00 x!0 s!1 s!1 s!1)) (* 72 (* s00 s00 x!0 x!0 s!1 r!2)) (* 12 (* s00 s00 x!0 x!0 s!1 s!1)) (* (- 21) (* r00 s!1)) (* 2 (* s00 s!1)) (* (- 9) (* r00 ?x6516 ?x6516 ?x6516 ?x6519 ?x6519)) ?x6251 (* (- 54) (* s00 s!1 s!1 s!1 r!2 r!2)) (* 27 (* s00 r00 x!0 s!1 s!1)) (* (- 108) (* s00 r00 x!0 s!1 s!1 r!2 r!2)) ?x6282 (* 4 (* s00 s!1 r!2)) (* (- 9) (* r00 s00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519)) (* (- 6) (* s00 r00 r!2 r!2 r!2)) (* 2 (* s00 s!1 r!2 r!2)) (* 6 (* r00 r00 ?x5719 ?x5719 ?x6516 ?x6516 ?x6519 ?x6519 ?x6519)) (* (- 12) (* s00 s00 x!0 x!0 x!0)) (* 18 (* s00 r00 x!0 x!0 s!1 s!1 r!2)) (* 108 (* s00 r00 x!0 x!0 s!1 r!2 r!2)))))
 (let (($x2863 (= ?x4116 0)))
 (let (($x3519 (not $x2863)))
 (let ((?x3370 (* r00 r00 s!1)))
 (let ((?x5822 (* 36 ?x3370)))
 (let ((?x1792 (* (- 9) s!1)))
 (let ((?x1376 (* x00 x00)))
 (let ((?x5939 (* 108 ?x1376)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x4946 (* 16 ?x1214)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x1513 (* (- 432) ?x912)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3934 (* (- 108) ?x835)))
 (let ((?x4398 (* (- 36) ?x677)))
 (let ((?x1747 (* 51 ?x621)))
 (let ((?x4253 (* 108 ?x552)))
 (let ((?x137 (* 9 s00)))
 (let ((?x6507 (+ ?x137 (* (- 54) ?x456) (* 216 (* s00 r00 x00)) ?x4253 ?x1747 ?x4398 (* (- 108) (* s00 s00 r00)) (* 108 (* s00 x!0)) (* (- 36) (* s00 s00 r00 r00)) ?x3934 ?x1513 (* 216 (* s00 r00 r00 r00)) (* 108 (* x00 s!1)) ?x4946 ?x5939 (* (- 4) (* s!1 s!1 s!1)) (* 108 (* s00 r00 s!1)) ?x1792 ?x5822 (* (- 108) (* r00 x!0)) (* (- 108) (* x!0 s!1)) (* 108 (* x!0 x!0)) (* 15 ?x5551) (* 54 (* r00 s!1)) (* (- 66) (* s00 s!1)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* x00 x!0)) (* (- 216) (* r00 r00 r00 s!1)) (* 432 (* r00 r00 r00 x!0)) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)))))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x3157 (* 36 ?x907)))
 (let ((?x3477 (* (- 6) ?x835)))
 (let ((?x3482 (* 15 ?x621)))
 (let ((?x4320 (* 54 ?x552)))
 (let ((?x4770 (+ ?x137 (* (- 36) (* r00 r00 x!0)) (* (- 24) ?x456) ?x4320 ?x3482 ?x4398 (* 2 (* s00 s00 r00)) (* 6 (* s00 x!0)) ?x3477 ?x3157 (* 6 (* x00 s!1)) (* 2 (* s00 r00 s!1)) (* (- 2) (* s!1 s!1 r!2)) (* (- 36) (* r00 x!0 r!2)) ?x1792 (* 24 (* s!1 r!2)) (* 36 (* r00 x00 r!2)) (* 4 (* s00 s00 r!2)) (* 54 (* x00 r!2)) ?x5822 (* (- 54) (* r00 x!0)) (* (- 54) (* x!0 r!2)) (* (- 6) (* x!0 s!1)) (* (- 24) (* s00 r!2)) (* (- 3) ?x5551) (* 24 (* r00 s!1)) (* (- 12) (* s00 s!1)) (* (- 4) (* r00 s!1 s!1)) (* (- 2) (* s00 s!1 r!2)))))
 (let ((?x622 (* 4 ?x621)))
 (let ((?x553 (* 18 ?x552)))
 (let ((?x3292 (+ ?x44 (* (- 9) ?x456) ?x553 ?x622 (* (- 6) ?x677) ?x4268 (* 9 (* s!1 r!2)) (* 18 (* x00 r!2)) (* 6 ?x3370) (* (- 18) (* r00 x!0)) (* 6 (* s00 r00 r!2)) (* (- 18) (* x!0 r!2)) (* (- 6) (* r00 s!1 r!2)) (* (- 9) (* s00 r!2)) (* (- 2) ?x5551) (* 9 (* r00 s!1)) (* (- 2) (* s00 s!1)))))
 (let (($x3295 (= ?x3292 0)))
 (let ((?x1643 (* (- 3) ?x331)))
 (let ((?x4155 (+ s00 ?x1643 (* 3 ?x592) ?x5722)))
 (let (($x3890 (= ?x4155 0)))
 (let (($x2861 (and $x3890 $x5125 $x3295 (= ?x4770 0) (= ?x6507 0) $x3519)))
 (let ((?x5729 (+ 3 ?x5726 s!1)))
 (let ((?x5723 (+ ?x5722 x!0)))
 (let ((?x3686 (* (- 36) (* r!2 r00 x00))))
 (let ((?x3551 (* s!1 s00)))
 (let ((?x3552 (* 2 ?x3551)))
 (let ((?x3543 (* r!2 x00)))
 (let ((?x3693 (* (- 54) ?x3543)))
 (let ((?x5651 (* x!0 r00)))
 (let ((?x5706 (* 18 ?x5651)))
 (let ((?x3692 (* s!1 r00 r00)))
 (let ((?x5676 (* (- 6) ?x3692)))
 (let ((?x2744 (* 36 (* r!2 x!0 r00))))
 (let ((?x5650 (* r!2 x!0)))
 (let ((?x2733 (* 54 ?x5650)))
 (let ((?x6290 (+ ?x5655 ?x5700 ?x5701 ?x3914 ?x3795 ?x6047 ?x5709 ?x5526 (* (- 27) (* r!2 s!1)) (* (- 72) (* r!2 r00 r00)) (* 45 (* r!2 s00)) ?x3719 ?x566 (* (- 9) (* r00 s00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) ?x5680 ?x2733 (* (- 36) (* r!2 s!1 r00)) ?x2744 ?x5676 (* 36 (* r!2 r!2 r!2 r!2 r00)) ?x634 ?x5706 ?x678 ?x3693 ?x3552 (* (- 21) (* s!1 r00)) (* 6 (* r!2 r!2 r!2 s!1 r00)) (* 4 (* r!2 s!1 s!1)) (* (- 8) (* r!2 s00 s00)) (* 3 (* s00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 6) (* r00 r00 s00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) (* 4 (* r!2 s!1 s00)) ?x3686 (* 18 (* x00 ?x5719 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) (* 54 (* s!1 s!1 s!1 s!1 r00)) (* 54 (* r!2 r!2 s00)) (* 21 (* r!2 r!2 r!2 s00)) (* (- 9) (* r!2 r!2 s00 r00)) (* (- 6) (* r!2 r!2 r!2 s00 r00)) (* 2 (* r!2 r!2 s!1 s00)) (* 6 (* r00 r00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729)) (* (- 2) (* s00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729)) (* (- 9) (* s!1 s!1 x!0 x!0 s00 r00)) (* 18 (* r!2 s!1 s!1 x!0 x!0 s00 r00)) (* 108 (* r!2 r!2 s!1 x!0 x!0 s00 r00)) (* (- 27) (* s!1 x!0 x!0 s00 r00)) (* 27 (* s!1 s!1 x!0 s00 r00)) (* (- 108) (* r!2 r!2 s!1 s!1 x!0 s00 r00)) (* 9 (* s!1 s!1 s!1 x!0 s00 r00)) (* (- 18) (* r!2 s!1 s!1 s!1 x!0 s00 r00)) (* (- 36) (* r!2 r!2 x!0 x!0 x!0 s00 r00)) (* 3 (* s!1 x!0 x!0 x!0 s00 r00)) (* (- 18) (* ?x5719 ?x5719 ?x5719 ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 6) (* r!2 s!1 x!0 x!0 x!0 s00 r00)) (* 9 (* x!0 x!0 x!0 s00 r00)) (* (- 9) (* s!1 s!1 s!1 s00 r00)) (* 36 (* r!2 r!2 s!1 s!1 s!1 s00 r00)) (* 6 (* r!2 s!1 s!1 s!1 s!1 s00 r00)) (* 18 (* r00 x00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 3) (* s!1 s!1 s!1 s!1 s00 r00)) (* 18 (* r!2 r!2 x!0 r00)) (* 6 (* r00 ?x5719 ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* 6 (* r!2 r!2 s00 r00 r00)) (* 12 (* r!2 s00 r00 r00)) (* (- 18) (* r!2 r!2 s!1)) (* (- 216) (* s!1 s!1 s!1 x!0 r00)) (* 36 (* s!1 x!0 x!0 s00 s00)) (* (- 432) (* r!2 s!1 s!1 s!1 x!0 r00)) (* (- 12) (* x!0 x!0 x!0 s00 s00)) (* (- 432) (* r!2 s!1 x!0 x!0 x!0 r00)) (* 648 (* r!2 s!1 s!1 x!0 x!0 r00)) (* 54 (* x!0 x!0 x!0 x!0 r00)) (* 108 (* r!2 s!1 s!1 s!1 s!1 r00)) (* 12 (* s!1 s!1 s!1 s00 s00)) (* (- 36) (* s!1 s!1 x!0 s00 s00)) (* (- 72) (* s!1 s!1 x!0 x!0 x!0 r00)) (* 24 (* r!2 s!1 s!1 s!1 s00 s00)) (* 4 (* s!1 s!1 s!1 s!1 s00 s00)) (* (- 72) (* r!2 s!1 s!1 x!0 s00 s00)) (* (- 12) (* s!1 s!1 s!1 x!0 s00 s00)) (* 72 (* r!2 s!1 x!0 x!0 s00 s00)) (* 12 (* s!1 s!1 x!0 x!0 s00 s00)) (* 18 (* s!1 x!0 x!0 x!0 x!0 r00)) (* (- 24) (* r!2 x!0 x!0 x!0 s00 s00)) (* (- 4) (* s!1 x!0 x!0 x!0 s00 s00)) (* (- 6) (* r00 ?x5719 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729)) (* (- 18) (* r!2 r00)) (* 27 (* r!2 r!2 r00)) (* 72 (* r!2 r!2 r!2 r00)) (* (- 9) (* r!2 r!2 s!1 r00)) (* 9 (* ?x5719 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729)) (* 54 (* s!1 s!1 x!0 s00)) (* (- 18) (* s!1 s!1 s!1 s00)) (* (- 6) (* r00 r00 ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 18) (* r!2 r!2 r00 x00)) (* (- 54) (* s!1 x!0 x!0 s00)) (* 18 (* x!0 x!0 x!0 s00)) (* (- 18) (* s!1 s!1 x!0 x!0 s00)) (* (- 189) (* r!2 s!1 x!0 x!0 s00)) (* 63 (* r!2 x!0 x!0 x!0 s00)) (* 6 (* s!1 x!0 x!0 x!0 s00)) (* 6 (* r00 s00 ?x5719 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) (* 189 (* r!2 s!1 s!1 x!0 s00)) (* 18 (* s!1 s!1 s!1 x!0 s00)) (* (- 6) (* s!1 s!1 s!1 s!1 s00)) (* (- 63) (* r!2 s!1 s!1 s!1 s00)) (* (- 9) (* r00 ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 4) (* r!2 r!2 s00 s00)) (* 2 (* r!2 r!2 s!1 s!1)) (* (- 6) (* r!2 r!2 s!1 r00 r00)) (* (- 36) (* r!2 r!2 r!2 r00 r00)) (* (- 90) (* r!2 r!2 r00 r00)) (* (- 12) (* r!2 s!1 r00 r00)) (* (- 216) (* s!1 x!0 x!0 x!0 r00)) (* 108 (* r!2 x!0 x!0 x!0 x!0 r00)) (* 18 (* s!1 s!1 s!1 s!1 s!1 r00)) (* (- 72) (* s!1 s!1 s!1 s!1 x!0 r00)) (* 324 (* s!1 s!1 x!0 x!0 r00)) (* 108 (* s!1 s!1 s!1 x!0 x!0 r00)) (* 18 (* r!2 r!2 r!2 x!0)) (* 54 (* r!2 r!2 x!0)) (* (- 2) (* ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729 ?x5729)) (* (- 54) (* r!2 r!2 x00)) (* (- 18) (* r!2 r!2 r!2 x00)) (* 4 (* s00 s00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 3) (* ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729)) (* 3 (* ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 54) (* x!0 x!0 x!0 x00)) (* (- 18) (* s!1 x!0 x!0 x!0 x00)) (* (- 18) (* r!2 s!1 x!0 x!0 x!0 x00)) (* 54 (* s!1 s!1 s!1 x00)) (* (- 162) (* s!1 s!1 x!0 x00)) (* 162 (* s!1 x!0 x!0 x00)) (* (- 18) (* s!1 s!1 s!1 s00 r00 r00)) (* (- 324) (* r!2 r!2 s!1 s!1 x!0 x00)) (* 54 (* s!1 s!1 x!0 s00 r00 r00)) (* (- 54) (* s!1 s!1 s!1 x!0 x00)) (* (- 486) (* r!2 s!1 s!1 x!0 x00)) (* 18 (* r!2 s!1 s!1 s!1 s!1 x00)) (* (- 54) (* s!1 x!0 x!0 s00 r00 r00)) (* 18 (* s!1 s!1 s!1 s!1 x00)) (* 162 (* r!2 s!1 s!1 s!1 x00)) (* 108 (* r!2 r!2 s!1 s!1 s!1 x00)) (* 486 (* r!2 s!1 x!0 x!0 x00)) (* 324 (* r!2 r!2 s!1 x!0 x!0 x00)) (* 54 (* r!2 s!1 s!1 x!0 x!0 x00)) (* 18 (* x!0 x!0 x!0 s00 r00 r00)) (* 54 (* s!1 s!1 x!0 x!0 x00)) (* (- 36) (* r!2 s!1 s!1 s!1 s00 r00 r00)) (* (- 54) (* r!2 s!1 s!1 s!1 x!0 x00)) (* 108 (* r!2 s!1 s!1 x!0 s00 r00 r00)) (* (- 108) (* r!2 s!1 x!0 x!0 s00 r00 r00)) (* (- 162) (* r!2 x!0 x!0 x!0 x00)) (* (- 108) (* r!2 r!2 x!0 x!0 x!0 x00)) (* 36 (* r!2 x!0 x!0 x!0 s00 r00 r00)) (* (- 6) (* s!1 s!1 s!1 s!1 s00 r00 r00)) (* 18 (* s!1 s!1 s!1 x!0 s00 r00 r00)) (* (- 18) (* s!1 s!1 x!0 x!0 s00 r00 r00)) (* 6 (* s!1 x!0 x!0 x!0 s00 r00 r00)) (* 54 (* s!1 s!1 s!1 r00 x00)) (* 108 (* r!2 s!1 s!1 s!1 r00 x00)) (* 18 (* s!1 s!1 s!1 s!1 r00 x00)) (* (- 162) (* s!1 s!1 x!0 r00 x00)) (* (- 324) (* r!2 s!1 s!1 x!0 r00 x00)) (* (- 54) (* s!1 s!1 s!1 x!0 r00 x00)) (* (- 9) (* ?x5719 ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 9) (* s00 ?x5719 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729)) (* 162 (* s!1 x!0 x!0 r00 x00)) (* 324 (* r!2 s!1 x!0 x!0 r00 x00)) (* 54 (* s!1 s!1 x!0 x!0 r00 x00)) (* (- 54) (* x!0 x!0 x!0 r00 x00)) (* (- 108) (* r!2 x!0 x!0 x!0 r00 x00)) (* (- 18) (* s!1 x!0 x!0 x!0 r00 x00)) (* 54 (* r!2 r!2 x!0 x!0 x!0 s00)) (* (- 9) (* r!2 s!1 s!1 s!1 s!1 s00)) (* 27 (* r!2 s!1 s!1 s!1 x!0 s00)) (* (- 27) (* r!2 s!1 s!1 x!0 x!0 s00)) (* 9 (* r!2 s!1 x!0 x!0 x!0 s00)) (* 18 (* ?x5719 ?x5723 ?x5723 ?x5723 ?x5723 ?x5729)) (* 2 (* s00 ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* (- 18) (* r00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5723 ?x5729 ?x5729)) (* 9 (* r00 ?x5719 ?x5719 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729)) (* 2 (* ?x5723 ?x5723 ?x5723 ?x5729 ?x5729 ?x5729)) (* (- 3) (* r!2 r!2 r!2 s!1)) (* (- 54) (* r!2 r!2 s!1 s!1 s!1 s00)) ?x6251 (* 162 (* r!2 r!2 s!1 s!1 x!0 s00)) ?x6282 (* (- 162) (* r!2 r!2 s!1 x!0 x!0 s00)))))
 (let ((?x1406 (* (- 108) ?x1376)))
 (let ((?x1405 (* (- 16) ?x1214)))
 (let ((?x1086 (* s00 r00 r00 r00)))
 (let ((?x1401 (* (- 216) ?x1086)))
 (let ((?x913 (* 432 ?x912)))
 (let ((?x1159 (* 108 ?x835)))
 (let ((?x761 (* s00 s00 r00 r00)))
 (let ((?x762 (* 36 ?x761)))
 (let ((?x698 (* s00 s00 r00)))
 (let ((?x1042 (* 108 ?x698)))
 (let ((?x1030 (* 36 ?x677)))
 (let ((?x1395 (* (- 51) ?x621)))
 (let ((?x2750 (* (- 36) ?x3692)))
 (let ((?x1392 (* (- 108) ?x552)))
 (let ((?x543 (* s00 r00 x00)))
 (let ((?x1391 (* (- 216) ?x543)))
 (let ((?x550 (* 54 ?x456)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x4073 (* 9 s!1)))
 (let ((?x5654 (+ ?x4073 ?x1017 ?x550 ?x1391 ?x1392 (* (- 15) ?x5551) ?x2750 ?x1395 (* (- 108) (* x!0 s00)) (* 108 ?x5651) (* 216 (* s!1 r00 r00 r00)) ?x1030 ?x1042 (* 66 ?x3551) (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x762 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1159 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x913 (* 12 (* s!1 s!1 s00)) ?x1401 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1405 (* 216 (* x!0 x00)) ?x1406)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x726 (* (- 2) ?x698)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x594 (* 24 ?x456)))
 (let ((?x1606 (+ ?x4073 ?x1017 (* (- 24) (* r!2 s!1)) (* 24 (* r!2 s00)) ?x594 ?x581 (* 3 ?x5551) ?x2733 ?x2744 ?x2750 ?x946 (* (- 6) (* x!0 s00)) (* 54 ?x5651) ?x1030 (* 4 (* s!1 s!1 r00)) ?x3693 ?x726 (* 12 ?x3551) (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x836 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x920 (* 2 (* r!2 s!1 s00)) ?x3686 (* 36 (* x!0 r00 r00)))))
 (let ((?x571 (* 9 ?x456)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x5669 (+ (* 3 s!1) ?x408 (* (- 9) (* r!2 s!1)) (* 9 (* r!2 s00)) ?x571 ?x566 ?x5680 (* 18 ?x5650) (* 6 (* r!2 s!1 r00)) ?x5676 ?x634 ?x5706 ?x678 (* (- 18) ?x3543) ?x3552 (* (- 9) (* s!1 r00)) (* (- 6) (* r!2 s00 r00)))))
 (let ((?x4386 (+ ?x4260 ?x4268 ?x4269 ?x44 ?x530 ?x531 (* 2 (* r!2 s!1)) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x534 ?x500)))
 (let (($x5472 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x592) (* 3 ?x331)) 0) (= ?x4386 0) (= ?x5669 0) (= ?x1606 0) (= ?x5654 0) (not (= ?x6290 0)))))
 (let (($x4383 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x1450 (+ 3 ?x214 s)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x1456 (+ ?x310 x)))
 (let ((?x4068 (* 9 (* r00 (+ 1 r) (+ 1 r) ?x1456 ?x1456 ?x1450 ?x1450 ?x1450))))
 (let ((?x6086 (* (- 18) (* r00 (+ 1 r) (+ 1 r) ?x1456 ?x1456 ?x1456 ?x1450 ?x1450))))
 (let ((?x1413 (+ 1 r)))
 (let ((?x971 (* r r00 x00)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x718 (* s s00)))
 (let ((?x719 (* 2 ?x718)))
 (let ((?x689 (* r x00)))
 (let ((?x1053 (* (- 54) ?x689)))
 (let ((?x677 (* s00 r00 r00)))
 (let ((?x678 (* 6 ?x677)))
 (let ((?x647 (* x r00)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x621 (* s00 s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x595 (* s r00 r00)))
 (let ((?x608 (* (- 6) ?x595)))
 (let ((?x591 (* 36 (* r x r00))))
 (let ((?x579 (* r x)))
 (let ((?x604 (* 54 ?x579)))
 (let ((?x575 (* s s)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x552 (* r00 x00)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x456 (* s00 r00)))
 (let ((?x3719 (* 3 ?x456)))
 (let ((?x331 (* r00 r00)))
 (let ((?x5526 (* (- 18) ?x331)))
 (let ((?x6047 (* (- 18) x00)))
 (let ((?x3795 (* (- 9) r00)))
 (let ((?x3914 (* 12 s00)))
 (let ((?x3736 (+ (* 9 r) (* (- 12) s) (* 18 x) ?x3914 ?x3795 ?x6047 (* 36 (* r r)) ?x5526 (* (- 27) (* r s)) (* (- 72) (* r r00 r00)) (* 45 (* r s00)) ?x3719 ?x566 (* (- 9) (* r00 s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) ?x576 ?x604 (* (- 36) (* r s r00)) ?x591 ?x608 (* 36 (* r r r r r00)) ?x634 ?x648 ?x678 ?x1053 ?x719 (* (- 21) (* s r00)) (* 6 (* r r r s r00)) (* 4 (* r s s)) (* (- 8) (* r s00 s00)) (* 3 (* s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 6) (* r00 r00 s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 4 (* r s s00)) ?x984 (* 18 (* x00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 54 (* s s s s r00)) (* 54 (* r r s00)) (* 21 (* r r r s00)) (* (- 9) (* r r s00 r00)) (* (- 6) (* r r r s00 r00)) (* 2 (* r r s s00)) (* 6 (* r00 r00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 2) (* s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 9) (* s s x x s00 r00)) (* 18 (* r s s x x s00 r00)) (* 108 (* r r s x x s00 r00)) (* (- 27) (* s x x s00 r00)) (* 27 (* s s x s00 r00)) (* (- 108) (* r r s s x s00 r00)) (* 9 (* s s s x s00 r00)) (* (- 18) (* r s s s x s00 r00)) (* (- 36) (* r r x x x s00 r00)) (* 3 (* s x x x s00 r00)) (* (- 18) (* ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 6) (* r s x x x s00 r00)) (* 9 (* x x x s00 r00)) (* (- 9) (* s s s s00 r00)) (* 36 (* r r s s s s00 r00)) (* 6 (* r s s s s s00 r00)) (* 18 (* r00 x00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 3) (* s s s s s00 r00)) (* 18 (* r r x r00)) (* 6 (* r00 ?x1413 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* 6 (* r r s00 r00 r00)) (* 12 (* r s00 r00 r00)) (* (- 18) (* r r s)) (* (- 216) (* s s s x r00)) (* 36 (* s x x s00 s00)) (* (- 432) (* r s s s x r00)) (* (- 12) (* x x x s00 s00)) (* (- 432) (* r s x x x r00)) (* 648 (* r s s x x r00)) (* 54 (* x x x x r00)) (* 108 (* r s s s s r00)) (* 12 (* s s s s00 s00)) (* (- 36) (* s s x s00 s00)) (* (- 72) (* s s x x x r00)) (* 24 (* r s s s s00 s00)) (* 4 (* s s s s s00 s00)) (* (- 72) (* r s s x s00 s00)) (* (- 12) (* s s s x s00 s00)) (* 72 (* r s x x s00 s00)) (* 12 (* s s x x s00 s00)) (* 18 (* s x x x x r00)) (* (- 24) (* r x x x s00 s00)) (* (- 4) (* s x x x s00 s00)) (* (- 6) (* r00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 18) (* r r00)) (* 27 (* r r r00)) (* 72 (* r r r r00)) (* (- 9) (* r r s r00)) (* 9 (* ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* 54 (* s s x s00)) (* (- 18) (* s s s s00)) (* (- 6) (* r00 r00 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 18) (* r r r00 x00)) (* (- 54) (* s x x s00)) (* 18 (* x x x s00)) (* (- 18) (* s s x x s00)) (* (- 189) (* r s x x s00)) (* 63 (* r x x x s00)) (* 6 (* s x x x s00)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 189 (* r s s x s00)) (* 18 (* s s s x s00)) (* (- 6) (* s s s s s00)) (* (- 63) (* r s s s s00)) (* (- 9) (* r00 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 4) (* r r s00 s00)) (* 2 (* r r s s)) (* (- 6) (* r r s r00 r00)) (* (- 36) (* r r r r00 r00)) (* (- 90) (* r r r00 r00)) (* (- 12) (* r s r00 r00)) (* (- 216) (* s x x x r00)) (* 108 (* r x x x x r00)) (* 18 (* s s s s s r00)) (* (- 72) (* s s s s x r00)) (* 324 (* s s x x r00)) (* 108 (* s s s x x r00)) (* 18 (* r r r x)) (* 54 (* r r x)) (* (- 2) (* ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450 ?x1450)) (* (- 54) (* r r x00)) (* (- 18) (* r r r x00)) (* 4 (* s00 s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 3) (* ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* 3 (* ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 54) (* x x x x00)) (* (- 18) (* s x x x x00)) (* (- 18) (* r s x x x x00)) (* 54 (* s s s x00)) (* (- 162) (* s s x x00)) (* 162 (* s x x x00)) (* (- 18) (* s s s s00 r00 r00)) (* (- 324) (* r r s s x x00)) (* 54 (* s s x s00 r00 r00)) (* (- 54) (* s s s x x00)) (* (- 486) (* r s s x x00)) (* 18 (* r s s s s x00)) (* (- 54) (* s x x s00 r00 r00)) (* 18 (* s s s s x00)) (* 162 (* r s s s x00)) (* 108 (* r r s s s x00)) (* 486 (* r s x x x00)) (* 324 (* r r s x x x00)) (* 54 (* r s s x x x00)) (* 18 (* x x x s00 r00 r00)) (* 54 (* s s x x x00)) (* (- 36) (* r s s s s00 r00 r00)) (* (- 54) (* r s s s x x00)) (* 108 (* r s s x s00 r00 r00)) (* (- 108) (* r s x x s00 r00 r00)) (* (- 162) (* r x x x x00)) (* (- 108) (* r r x x x x00)) (* 36 (* r x x x s00 r00 r00)) (* (- 6) (* s s s s s00 r00 r00)) (* 18 (* s s s x s00 r00 r00)) (* (- 18) (* s s x x s00 r00 r00)) (* 6 (* s x x x s00 r00 r00)) (* 54 (* s s s r00 x00)) (* 108 (* r s s s r00 x00)) (* 18 (* s s s s r00 x00)) (* (- 162) (* s s x r00 x00)) (* (- 324) (* r s s x r00 x00)) (* (- 54) (* s s s x r00 x00)) (* (- 9) (* ?x1413 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 9) (* s00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 162 (* s x x r00 x00)) (* 324 (* r s x x r00 x00)) (* 54 (* s s x x r00 x00)) (* (- 54) (* x x x r00 x00)) (* (- 108) (* r x x x r00 x00)) (* (- 18) (* s x x x r00 x00)) (* 54 (* r r x x x s00)) (* (- 9) (* r s s s s s00)) (* 27 (* r s s s x s00)) (* (- 27) (* r s s x x s00)) (* 9 (* r s x x x s00)) (* 18 (* ?x1413 ?x1456 ?x1456 ?x1456 ?x1456 ?x1450)) (* 2 (* s00 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) ?x6086 ?x4068 (* 2 (* ?x1456 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 3) (* r r r s)) (* (- 54) (* r r s s s s00)) (* 45 (* r r r)) (* 162 (* r r s s x s00)) (* 18 (* r r r r)) (* (- 162) (* r r s x x s00)))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x1406 (* (- 108) ?x1376)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x1405 (* (- 16) ?x1214)))
 (let ((?x1086 (* s00 r00 r00 r00)))
 (let ((?x1401 (* (- 216) ?x1086)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x913 (* 432 ?x912)))
 (let ((?x835 (* s00 x00)))
 (let ((?x1159 (* 108 ?x835)))
 (let ((?x761 (* s00 s00 r00 r00)))
 (let ((?x762 (* 36 ?x761)))
 (let ((?x698 (* s00 s00 r00)))
 (let ((?x1042 (* 108 ?x698)))
 (let ((?x1030 (* 36 ?x677)))
 (let ((?x1395 (* (- 51) ?x621)))
 (let ((?x894 (* (- 36) ?x595)))
 (let ((?x1392 (* (- 108) ?x552)))
 (let ((?x543 (* s00 r00 x00)))
 (let ((?x1391 (* (- 216) ?x543)))
 (let ((?x550 (* 54 ?x456)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1407 (+ ?x143 ?x1017 ?x550 ?x1391 ?x1392 (* (- 15) ?x575) ?x894 ?x1395 (* (- 108) (* x s00)) (* 108 ?x647) (* 216 (* s r00 r00 r00)) ?x1030 ?x1042 (* 66 ?x718) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x762 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1159 (* 108 (* s x)) (* (- 108) (* x x)) ?x913 (* 12 (* s s s00)) ?x1401 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1405 (* 216 (* x x00)) ?x1406)))
 (let (($x1408 (= ?x1407 0)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x726 (* (- 2) ?x698)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x594 (* 24 ?x456)))
 (let ((?x1109 (+ ?x143 ?x1017 (* (- 24) (* r s)) (* 24 (* r s00)) ?x594 ?x581 ?x599 ?x604 ?x591 ?x894 ?x946 (* (- 6) (* x s00)) (* 54 ?x647) ?x1030 (* 4 (* s s r00)) ?x1053 ?x726 (* 12 ?x718) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x836 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x920 (* 2 (* r s s00)) ?x984 (* 36 (* x r00 r00)))))
 (let (($x1114 (= ?x1109 0)))
 (let ((?x571 (* 9 ?x456)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x775 (+ ?x47 ?x408 (* (- 9) (* r s)) (* 9 (* r s00)) ?x571 ?x566 ?x576 (* 18 ?x579) (* 6 (* r s r00)) ?x608 ?x634 ?x648 ?x678 (* (- 18) ?x689) ?x719 (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x782 (= ?x775 0)))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x534 (* (- 6) ?x456)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x529 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x535 (+ ?x43 ?x529 ?x56 ?x44 ?x530 ?x531 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x534 ?x500)))
 (let (($x536 (= ?x535 0)))
 (let (($x364 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x331)) 0)))
 (and $x364 $x536 $x782 $x1114 $x1408 (not (= ?x3736 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x1835 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x2208 (+ 3 s ?x214)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x2935 (+ x ?x310)))
 (let ((?x4757 (+ (* 9 (* s00 ?x1413 ?x1413 ?x1413)) (* 4 (* s00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 2 (* s00 ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413)) (* 9 (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 9) (* r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 2) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x1413 ?x1413)) (* (- 6) (* r00 r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 6 (* r00 r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 9) (* r00 ?x1413 ?x1413 ?x2208)) (* (- 18) (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* r00 x00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 x00 ?x1413 ?x1413)) (* 18 (* r00 ?x1413 ?x1413 ?x2935)) (* 6 (* r00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 s00 ?x1413 ?x1413)) (* 6 (* r00 ?x1413 ?x1413 ?x1413 ?x2208)) (* 9 (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 2) (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x1413 ?x1413 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x1413 ?x1413)) (* (- 9) (* s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 6) (* r00 r00 ?x1413 ?x1413 ?x2208)) (* 9 (* s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 18 (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 9 (* r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 2 (* s00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x1413 ?x1413)) (* 9 (* r00 s00 ?x1413 ?x1413)) (* 18 (* ?x1413 ?x1413 ?x1413 ?x2935)) (* 18 (* r00 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 3) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* x00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 3 (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 18) (* r00 x00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 6) (* r00 r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x1413 ?x1413 ?x2208)))))
 (let (($x4173 (not (= ?x4757 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x5939 (* 108 ?x1376)))
 (let ((?x1658 (* (- 9) s)))
 (let ((?x3433 (* r00 r00 s00)))
 (let ((?x1838 (* (- 36) ?x3433)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x1747 (* 51 ?x621)))
 (let ((?x4437 (* r00 r00 s)))
 (let ((?x1584 (* 36 ?x4437)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x4946 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3934 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x1513 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x4253 (* 108 ?x552)))
 (let ((?x6163 (+ (* 216 (* r00 s00 x00)) ?x4253 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1513 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3934 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4946 (* (- 108) (* x s)) ?x1584 ?x1747 (* (- 108) (* r00 x)) ?x137 ?x1838 ?x1658 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5939)))
 (let (($x3897 (= ?x6163 0)))
 (let ((?x3482 (* 15 ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x3157 (* 36 ?x907)))
 (let ((?x3477 (* (- 6) ?x835)))
 (let ((?x4320 (* 54 ?x552)))
 (let ((?x1368 (+ (* 24 (* s r)) ?x4320 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3477 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1584 ?x3157 ?x3482 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1838 (* 54 (* x00 r)) ?x1658 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x529 (* (- 3) s)))
 (let ((?x6756 (* (- 6) ?x3433)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3201 (* r00 x)))
 (let ((?x6724 (* (- 18) ?x3201)))
 (let ((?x622 (* 4 ?x621)))
 (let ((?x575 (* s s)))
 (let ((?x6565 (* (- 2) ?x575)))
 (let ((?x1605 (* r00 s00)))
 (let ((?x6601 (* (- 9) ?x1605)))
 (let ((?x553 (* 18 ?x552)))
 (let ((?x4294 (+ (* 9 (* s r)) ?x553 ?x6601 ?x6565 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4437) ?x622 ?x6724 ?x44 ?x6756 (* 18 (* x00 r)) ?x529 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4194 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x529 ?x530 (* 4 (* s00 r)) (* (- 6) ?x1605) ?x56 ?x531 ?x500)))
 (let (($x1616 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1616 (= ?x4194 0) (= ?x4294 0) (= ?x1368 0) $x3897 $x4173)))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x4384 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x1450 (+ 3 ?x214 s)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x1456 (+ ?x310 x)))
 (let ((?x4068 (* 9 (* r00 (+ 1 r) (+ 1 r) ?x1456 ?x1456 ?x1450 ?x1450 ?x1450))))
 (let ((?x6086 (* (- 18) (* r00 (+ 1 r) (+ 1 r) ?x1456 ?x1456 ?x1456 ?x1450 ?x1450))))
 (let ((?x1413 (+ 1 r)))
 (let ((?x971 (* r r00 x00)))
 (let ((?x984 (* (- 36) ?x971)))
 (let ((?x718 (* s s00)))
 (let ((?x719 (* 2 ?x718)))
 (let ((?x689 (* r x00)))
 (let ((?x1053 (* (- 54) ?x689)))
 (let ((?x677 (* s00 r00 r00)))
 (let ((?x678 (* 6 ?x677)))
 (let ((?x647 (* x r00)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x621 (* s00 s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x595 (* s r00 r00)))
 (let ((?x608 (* (- 6) ?x595)))
 (let ((?x591 (* 36 (* r x r00))))
 (let ((?x579 (* r x)))
 (let ((?x604 (* 54 ?x579)))
 (let ((?x575 (* s s)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x552 (* r00 x00)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x456 (* s00 r00)))
 (let ((?x3719 (* 3 ?x456)))
 (let ((?x331 (* r00 r00)))
 (let ((?x5526 (* (- 18) ?x331)))
 (let ((?x6047 (* (- 18) x00)))
 (let ((?x3795 (* (- 9) r00)))
 (let ((?x3914 (* 12 s00)))
 (let ((?x3736 (+ (* 9 r) (* (- 12) s) (* 18 x) ?x3914 ?x3795 ?x6047 (* 36 (* r r)) ?x5526 (* (- 27) (* r s)) (* (- 72) (* r r00 r00)) (* 45 (* r s00)) ?x3719 ?x566 (* (- 9) (* r00 s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) ?x576 ?x604 (* (- 36) (* r s r00)) ?x591 ?x608 (* 36 (* r r r r r00)) ?x634 ?x648 ?x678 ?x1053 ?x719 (* (- 21) (* s r00)) (* 6 (* r r r s r00)) (* 4 (* r s s)) (* (- 8) (* r s00 s00)) (* 3 (* s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 6) (* r00 r00 s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 4 (* r s s00)) ?x984 (* 18 (* x00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 54 (* s s s s r00)) (* 54 (* r r s00)) (* 21 (* r r r s00)) (* (- 9) (* r r s00 r00)) (* (- 6) (* r r r s00 r00)) (* 2 (* r r s s00)) (* 6 (* r00 r00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 2) (* s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 9) (* s s x x s00 r00)) (* 18 (* r s s x x s00 r00)) (* 108 (* r r s x x s00 r00)) (* (- 27) (* s x x s00 r00)) (* 27 (* s s x s00 r00)) (* (- 108) (* r r s s x s00 r00)) (* 9 (* s s s x s00 r00)) (* (- 18) (* r s s s x s00 r00)) (* (- 36) (* r r x x x s00 r00)) (* 3 (* s x x x s00 r00)) (* (- 18) (* ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 6) (* r s x x x s00 r00)) (* 9 (* x x x s00 r00)) (* (- 9) (* s s s s00 r00)) (* 36 (* r r s s s s00 r00)) (* 6 (* r s s s s s00 r00)) (* 18 (* r00 x00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 3) (* s s s s s00 r00)) (* 18 (* r r x r00)) (* 6 (* r00 ?x1413 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* 6 (* r r s00 r00 r00)) (* 12 (* r s00 r00 r00)) (* (- 18) (* r r s)) (* (- 216) (* s s s x r00)) (* 36 (* s x x s00 s00)) (* (- 432) (* r s s s x r00)) (* (- 12) (* x x x s00 s00)) (* (- 432) (* r s x x x r00)) (* 648 (* r s s x x r00)) (* 54 (* x x x x r00)) (* 108 (* r s s s s r00)) (* 12 (* s s s s00 s00)) (* (- 36) (* s s x s00 s00)) (* (- 72) (* s s x x x r00)) (* 24 (* r s s s s00 s00)) (* 4 (* s s s s s00 s00)) (* (- 72) (* r s s x s00 s00)) (* (- 12) (* s s s x s00 s00)) (* 72 (* r s x x s00 s00)) (* 12 (* s s x x s00 s00)) (* 18 (* s x x x x r00)) (* (- 24) (* r x x x s00 s00)) (* (- 4) (* s x x x s00 s00)) (* (- 6) (* r00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 18) (* r r00)) (* 27 (* r r r00)) (* 72 (* r r r r00)) (* (- 9) (* r r s r00)) (* 9 (* ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* 54 (* s s x s00)) (* (- 18) (* s s s s00)) (* (- 6) (* r00 r00 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 18) (* r r r00 x00)) (* (- 54) (* s x x s00)) (* 18 (* x x x s00)) (* (- 18) (* s s x x s00)) (* (- 189) (* r s x x s00)) (* 63 (* r x x x s00)) (* 6 (* s x x x s00)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 189 (* r s s x s00)) (* 18 (* s s s x s00)) (* (- 6) (* s s s s s00)) (* (- 63) (* r s s s s00)) (* (- 9) (* r00 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 4) (* r r s00 s00)) (* 2 (* r r s s)) (* (- 6) (* r r s r00 r00)) (* (- 36) (* r r r r00 r00)) (* (- 90) (* r r r00 r00)) (* (- 12) (* r s r00 r00)) (* (- 216) (* s x x x r00)) (* 108 (* r x x x x r00)) (* 18 (* s s s s s r00)) (* (- 72) (* s s s s x r00)) (* 324 (* s s x x r00)) (* 108 (* s s s x x r00)) (* 18 (* r r r x)) (* 54 (* r r x)) (* (- 2) (* ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450 ?x1450)) (* (- 54) (* r r x00)) (* (- 18) (* r r r x00)) (* 4 (* s00 s00 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 3) (* ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* 3 (* ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 54) (* x x x x00)) (* (- 18) (* s x x x x00)) (* (- 18) (* r s x x x x00)) (* 54 (* s s s x00)) (* (- 162) (* s s x x00)) (* 162 (* s x x x00)) (* (- 18) (* s s s s00 r00 r00)) (* (- 324) (* r r s s x x00)) (* 54 (* s s x s00 r00 r00)) (* (- 54) (* s s s x x00)) (* (- 486) (* r s s x x00)) (* 18 (* r s s s s x00)) (* (- 54) (* s x x s00 r00 r00)) (* 18 (* s s s s x00)) (* 162 (* r s s s x00)) (* 108 (* r r s s s x00)) (* 486 (* r s x x x00)) (* 324 (* r r s x x x00)) (* 54 (* r s s x x x00)) (* 18 (* x x x s00 r00 r00)) (* 54 (* s s x x x00)) (* (- 36) (* r s s s s00 r00 r00)) (* (- 54) (* r s s s x x00)) (* 108 (* r s s x s00 r00 r00)) (* (- 108) (* r s x x s00 r00 r00)) (* (- 162) (* r x x x x00)) (* (- 108) (* r r x x x x00)) (* 36 (* r x x x s00 r00 r00)) (* (- 6) (* s s s s s00 r00 r00)) (* 18 (* s s s x s00 r00 r00)) (* (- 18) (* s s x x s00 r00 r00)) (* 6 (* s x x x s00 r00 r00)) (* 54 (* s s s r00 x00)) (* 108 (* r s s s r00 x00)) (* 18 (* s s s s r00 x00)) (* (- 162) (* s s x r00 x00)) (* (- 324) (* r s s x r00 x00)) (* (- 54) (* s s s x r00 x00)) (* (- 9) (* ?x1413 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) (* (- 9) (* s00 ?x1413 ?x1413 ?x1413 ?x1456 ?x1456 ?x1450 ?x1450)) (* 162 (* s x x r00 x00)) (* 324 (* r s x x r00 x00)) (* 54 (* s s x x r00 x00)) (* (- 54) (* x x x r00 x00)) (* (- 108) (* r x x x r00 x00)) (* (- 18) (* s x x x r00 x00)) (* 54 (* r r x x x s00)) (* (- 9) (* r s s s s s00)) (* 27 (* r s s s x s00)) (* (- 27) (* r s s x x s00)) (* 9 (* r s x x x s00)) (* 18 (* ?x1413 ?x1456 ?x1456 ?x1456 ?x1456 ?x1450)) (* 2 (* s00 ?x1456 ?x1456 ?x1456 ?x1450 ?x1450)) ?x6086 ?x4068 (* 2 (* ?x1456 ?x1456 ?x1456 ?x1450 ?x1450 ?x1450)) (* (- 3) (* r r r s)) (* (- 54) (* r r s s s s00)) (* 45 (* r r r)) (* 162 (* r r s s x s00)) (* 18 (* r r r r)) (* (- 162) (* r r s x x s00)))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x1406 (* (- 108) ?x1376)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x1405 (* (- 16) ?x1214)))
 (let ((?x1086 (* s00 r00 r00 r00)))
 (let ((?x1401 (* (- 216) ?x1086)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x913 (* 432 ?x912)))
 (let ((?x835 (* s00 x00)))
 (let ((?x1159 (* 108 ?x835)))
 (let ((?x761 (* s00 s00 r00 r00)))
 (let ((?x762 (* 36 ?x761)))
 (let ((?x698 (* s00 s00 r00)))
 (let ((?x1042 (* 108 ?x698)))
 (let ((?x1030 (* 36 ?x677)))
 (let ((?x1395 (* (- 51) ?x621)))
 (let ((?x894 (* (- 36) ?x595)))
 (let ((?x1392 (* (- 108) ?x552)))
 (let ((?x543 (* s00 r00 x00)))
 (let ((?x1391 (* (- 216) ?x543)))
 (let ((?x550 (* 54 ?x456)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1407 (+ ?x143 ?x1017 ?x550 ?x1391 ?x1392 (* (- 15) ?x575) ?x894 ?x1395 (* (- 108) (* x s00)) (* 108 ?x647) (* 216 (* s r00 r00 r00)) ?x1030 ?x1042 (* 66 ?x718) (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x762 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1159 (* 108 (* s x)) (* (- 108) (* x x)) ?x913 (* 12 (* s s s00)) ?x1401 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1405 (* 216 (* x x00)) ?x1406)))
 (let (($x1408 (= ?x1407 0)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x726 (* (- 2) ?x698)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x594 (* 24 ?x456)))
 (let ((?x1109 (+ ?x143 ?x1017 (* (- 24) (* r s)) (* 24 (* r s00)) ?x594 ?x581 ?x599 ?x604 ?x591 ?x894 ?x946 (* (- 6) (* x s00)) (* 54 ?x647) ?x1030 (* 4 (* s s r00)) ?x1053 ?x726 (* 12 ?x718) (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x836 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x920 (* 2 (* r s s00)) ?x984 (* 36 (* x r00 r00)))))
 (let (($x1114 (= ?x1109 0)))
 (let ((?x571 (* 9 ?x456)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x775 (+ ?x47 ?x408 (* (- 9) (* r s)) (* 9 (* r s00)) ?x571 ?x566 ?x576 (* 18 ?x579) (* 6 (* r s r00)) ?x608 ?x634 ?x648 ?x678 (* (- 18) ?x689) ?x719 (* (- 9) (* s r00)) (* (- 6) (* r s00 r00)))))
 (let (($x782 (= ?x775 0)))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x534 (* (- 6) ?x456)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x529 (* (- 3) s)))
 (let ((?x43 (* 3 r)))
 (let ((?x535 (+ ?x43 ?x529 ?x56 ?x44 ?x530 ?x531 (* 2 (* r s)) (* (- 12) (* r r00 r00)) (* 4 (* r s00)) ?x534 ?x500)))
 (let (($x536 (= ?x535 0)))
 (let (($x364 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x331)) 0)))
 (let (($x4093 (and $x364 $x536 $x782 $x1114 $x1408 (not (= ?x3736 0)))))
 (let ((?x2208 (+ 3 s ?x214)))
 (let ((?x2935 (+ x ?x310)))
 (let ((?x4757 (+ (* 9 (* s00 ?x1413 ?x1413 ?x1413)) (* 4 (* s00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 2 (* s00 ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413)) (* 9 (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 9) (* r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 2) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x1413 ?x1413)) (* (- 6) (* r00 r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 6 (* r00 r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 9) (* r00 ?x1413 ?x1413 ?x2208)) (* (- 18) (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* r00 x00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 x00 ?x1413 ?x1413)) (* 18 (* r00 ?x1413 ?x1413 ?x2935)) (* 6 (* r00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 s00 ?x1413 ?x1413)) (* 6 (* r00 ?x1413 ?x1413 ?x1413 ?x2208)) (* 9 (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 2) (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x1413 ?x1413 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x1413 ?x1413)) (* (- 9) (* s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 6) (* r00 r00 ?x1413 ?x1413 ?x2208)) (* 9 (* s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 18 (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 9 (* r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 2 (* s00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x1413 ?x1413)) (* 9 (* r00 s00 ?x1413 ?x1413)) (* 18 (* ?x1413 ?x1413 ?x1413 ?x2935)) (* 18 (* r00 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 3) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* x00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 3 (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 18) (* r00 x00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 6) (* r00 r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x1413 ?x1413 ?x2208)))))
 (let (($x4173 (not (= ?x4757 0))))
 (let ((?x5939 (* 108 ?x1376)))
 (let ((?x1658 (* (- 9) s)))
 (let ((?x3433 (* r00 r00 s00)))
 (let ((?x1838 (* (- 36) ?x3433)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1747 (* 51 ?x621)))
 (let ((?x4437 (* r00 r00 s)))
 (let ((?x1584 (* 36 ?x4437)))
 (let ((?x4946 (* 16 ?x1214)))
 (let ((?x3934 (* (- 108) ?x835)))
 (let ((?x1513 (* (- 432) ?x912)))
 (let ((?x4253 (* 108 ?x552)))
 (let ((?x6163 (+ (* 216 (* r00 s00 x00)) ?x4253 (* (- 54) (* r00 s00)) (* 15 ?x575) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1513 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3934 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4946 (* (- 108) (* x s)) ?x1584 ?x1747 (* (- 108) (* r00 x)) ?x137 ?x1838 ?x1658 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5939)))
 (let (($x3897 (= ?x6163 0)))
 (let ((?x3482 (* 15 ?x621)))
 (let ((?x3157 (* 36 ?x907)))
 (let ((?x3477 (* (- 6) ?x835)))
 (let ((?x4320 (* 54 ?x552)))
 (let ((?x1368 (+ (* 24 (* s r)) ?x4320 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) ?x575) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3477 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1584 ?x3157 ?x3482 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1838 (* 54 (* x00 r)) ?x1658 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x6756 (* (- 6) ?x3433)))
 (let ((?x3201 (* r00 x)))
 (let ((?x6724 (* (- 18) ?x3201)))
 (let ((?x622 (* 4 ?x621)))
 (let ((?x6565 (* (- 2) ?x575)))
 (let ((?x1605 (* r00 s00)))
 (let ((?x6601 (* (- 9) ?x1605)))
 (let ((?x553 (* 18 ?x552)))
 (let ((?x4294 (+ (* 9 (* s r)) ?x553 ?x6601 ?x6565 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4437) ?x622 ?x6724 ?x44 ?x6756 (* 18 (* x00 r)) ?x529 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x4194 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x529 ?x530 (* 4 (* s00 r)) (* (- 6) ?x1605) ?x56 ?x531 ?x500)))
 (let (($x1616 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) ?x331)) 0)))
 (let (($x1755 (and $x1616 (= ?x4194 0) (= ?x4294 0) (= ?x1368 0) $x3897 $x4173)))
 (rewrite (= $x1755 $x4093)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x4547 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x2208 (+ 3 s ?x214)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x2935 (+ x ?x310)))
 (let ((?x4757 (+ (* 9 (* s00 ?x1413 ?x1413 ?x1413)) (* 4 (* s00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 2 (* s00 ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413)) (* 9 (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 9) (* r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 2) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x1413 ?x1413)) (* (- 6) (* r00 r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 6 (* r00 r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 9) (* r00 ?x1413 ?x1413 ?x2208)) (* (- 18) (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* r00 x00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 x00 ?x1413 ?x1413)) (* 18 (* r00 ?x1413 ?x1413 ?x2935)) (* 6 (* r00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 s00 ?x1413 ?x1413)) (* 6 (* r00 ?x1413 ?x1413 ?x1413 ?x2208)) (* 9 (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 2) (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x1413 ?x1413 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x1413 ?x1413)) (* (- 9) (* s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 6) (* r00 r00 ?x1413 ?x1413 ?x2208)) (* 9 (* s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 18 (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 9 (* r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 2 (* s00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x1413 ?x1413)) (* 9 (* r00 s00 ?x1413 ?x1413)) (* 18 (* ?x1413 ?x1413 ?x1413 ?x2935)) (* 18 (* r00 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 3) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* x00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 3 (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 18) (* r00 x00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 6) (* r00 r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x1413 ?x1413 ?x2208)))))
 (let (($x4173 (not (= ?x4757 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x5939 (* 108 ?x1376)))
 (let ((?x1658 (* (- 9) s)))
 (let ((?x3433 (* r00 r00 s00)))
 (let ((?x1838 (* (- 36) ?x3433)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x1747 (* 51 ?x621)))
 (let ((?x4437 (* r00 r00 s)))
 (let ((?x1584 (* 36 ?x4437)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x4946 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3934 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x1513 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x4253 (* 108 ?x552)))
 (let ((?x6163 (+ (* 216 (* r00 s00 x00)) ?x4253 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1513 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3934 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4946 (* (- 108) (* x s)) ?x1584 ?x1747 (* (- 108) (* r00 x)) ?x137 ?x1838 ?x1658 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5939)))
 (let (($x3897 (= ?x6163 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x575 (* s s)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x4052 (+ (* (- 24) (* s r)) ?x581 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x599 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x836 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4437) ?x920 ?x946 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1017 (* 36 ?x3433) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x4321 (+ (* (- 9) (* s r)) ?x566 (* 9 (* r00 s00)) ?x576 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4437) ?x634 (* 18 (* r00 x)) ?x408 (* 6 ?x3433) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2925 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x408 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1616 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (and $x1616 (= ?x2925 0) (= ?x4321 0) (= ?x4052 0) $x3897 $x4173)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1674 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x2208 (+ 3 s ?x214)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x2935 (+ x ?x310)))
 (let ((?x4757 (+ (* 9 (* s00 ?x1413 ?x1413 ?x1413)) (* 4 (* s00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 2 (* s00 ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413)) (* 9 (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 9) (* r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 2) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x1413 ?x1413)) (* (- 6) (* r00 r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 6 (* r00 r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 9) (* r00 ?x1413 ?x1413 ?x2208)) (* (- 18) (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* r00 x00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 x00 ?x1413 ?x1413)) (* 18 (* r00 ?x1413 ?x1413 ?x2935)) (* 6 (* r00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 s00 ?x1413 ?x1413)) (* 6 (* r00 ?x1413 ?x1413 ?x1413 ?x2208)) (* 9 (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 2) (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x1413 ?x1413 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x1413 ?x1413)) (* (- 9) (* s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 6) (* r00 r00 ?x1413 ?x1413 ?x2208)) (* 9 (* s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 18 (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 9 (* r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 2 (* s00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x1413 ?x1413)) (* 9 (* r00 s00 ?x1413 ?x1413)) (* 18 (* ?x1413 ?x1413 ?x1413 ?x2935)) (* 18 (* r00 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 3) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* x00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 3 (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 18) (* r00 x00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 6) (* r00 r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x1413 ?x1413 ?x2208)))))
 (let (($x4173 (not (= ?x4757 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x5939 (* 108 ?x1376)))
 (let ((?x1658 (* (- 9) s)))
 (let ((?x3433 (* r00 r00 s00)))
 (let ((?x1838 (* (- 36) ?x3433)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x1747 (* 51 ?x621)))
 (let ((?x4437 (* r00 r00 s)))
 (let ((?x1584 (* 36 ?x4437)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x4946 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3934 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x1513 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x4253 (* 108 ?x552)))
 (let ((?x6163 (+ (* 216 (* r00 s00 x00)) ?x4253 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1513 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3934 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4946 (* (- 108) (* x s)) ?x1584 ?x1747 (* (- 108) (* r00 x)) ?x137 ?x1838 ?x1658 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5939)))
 (let (($x3897 (= ?x6163 0)))
 (let ((?x3482 (* 15 ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x3157 (* 36 ?x907)))
 (let ((?x3477 (* (- 6) ?x835)))
 (let ((?x4320 (* 54 ?x552)))
 (let ((?x1368 (+ (* 24 (* s r)) ?x4320 (* (- 36) (* r00 x r)) (* (- 24) (* r00 s00)) (* (- 3) (* s s)) (* (- 54) (* x r)) (* 6 (* s00 x)) (* (- 4) (* r00 s s)) (* 2 (* r00 s00 s00)) (* 6 (* x00 s)) (* (- 12) (* s00 s)) (* 2 (* r00 s00 s)) ?x3477 (* (- 2) (* s s r)) (* (- 6) (* x s)) (* 4 (* s00 s00 r)) ?x1584 ?x3157 ?x3482 (* (- 2) (* s00 s r)) (* 36 (* r00 x00 r)) (* (- 54) (* r00 x)) ?x137 ?x1838 (* 54 (* x00 r)) ?x1658 (* (- 24) (* s00 r)) (* 24 (* r00 s)) (* (- 36) (* r00 r00 x)))))
 (let ((?x529 (* (- 3) s)))
 (let ((?x6756 (* (- 6) ?x3433)))
 (let ((?x44 (* 3 s00)))
 (let ((?x3201 (* r00 x)))
 (let ((?x6724 (* (- 18) ?x3201)))
 (let ((?x622 (* 4 ?x621)))
 (let ((?x575 (* s s)))
 (let ((?x6565 (* (- 2) ?x575)))
 (let ((?x1605 (* r00 s00)))
 (let ((?x6601 (* (- 9) ?x1605)))
 (let ((?x553 (* 18 ?x552)))
 (let ((?x4294 (+ (* 9 (* s r)) ?x553 ?x6601 ?x6565 (* (- 18) (* x r)) (* (- 6) (* r00 s r)) (* 6 ?x4437) ?x622 ?x6724 ?x44 ?x6756 (* 18 (* x00 r)) ?x529 (* (- 9) (* s00 r)) (* (- 2) (* s00 s)) (* 9 (* r00 s)) (* 6 (* r00 s00 r)))))
 (let ((?x499 (* r00 r00 r00)))
 (let ((?x500 (* 12 ?x499)))
 (let ((?x531 (* (- 6) x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x530 (* (- 3) r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x4194 (+ (* 2 (* s r)) (* (- 12) (* r00 r00 r)) ?x43 ?x44 ?x529 ?x530 (* 4 (* s00 r)) (* (- 6) ?x1605) ?x56 ?x531 ?x500)))
 (let (($x1616 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x1755 (and $x1616 (= ?x4194 0) (= ?x4294 0) (= ?x1368 0) $x3897 $x4173)))
 (let ((?x143 (* 9 s)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x4052 (+ (* (- 24) (* s r)) ?x581 (* 36 (* r00 x r)) (* 24 ?x1605) ?x599 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x836 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4437) ?x920 ?x946 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 ?x3201) ?x1017 (* 36 ?x3433) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x4321 (+ (* (- 9) (* s r)) ?x566 (* 9 ?x1605) ?x576 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4437) ?x634 (* 18 ?x3201) ?x408 (* 6 ?x3433) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2925 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x408 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1605) (* (- 6) x) ?x59 (* (- 12) ?x499))))
 (let (($x2959 (and $x1616 (= ?x2925 0) (= ?x4321 0) (= ?x4052 0) $x3897 $x4173)))
 (rewrite (= $x2959 $x1755)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x307 (exists ((r Int) (s Int) (x Int) )(! (let ((?x214 (* 6 r)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x216 (- x s)))
 (let ((?x219 (+ (* 9 ?x212 ?x212 ?x212 s00) (* 4 ?x212 ?x212 ?x215 ?x215 s00 s00 ?x216 ?x216) (* 2 ?x212 ?x212 ?x215 s00))))
 (let ((?x223 (+ (- ?x219 (* 6 ?x212 ?x212 ?x212 r00 s00)) (* 9 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x227 (- (- ?x223 (* 9 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 9 ?x212 ?x212 r00 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x232 (- (+ ?x227 (* 6 ?x212 ?x212 ?x212 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x235 (+ (- ?x232 (* 6 ?x212 r00 ?x215 s00 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 ?x215))))
 (let ((?x241 (- (- ?x235 (* 6 ?x212 ?x212 ?x212 r00 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 3 ?x212 ?x212 s00))))
 (let ((?x243 (- (- ?x241 (* 6 ?x212 ?x212 r00 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 4 ?x215 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x248 (- (+ ?x243 (* 6 r00 r00 ?x215 s00 ?x216 ?x216 ?x216)) (* 9 ?x212 ?x212 r00 ?x215))))
 (let ((?x252 (+ (- ?x248 (* 18 ?x212 ?x212 ?x212 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 18 ?x212 ?x212 r00 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x261 (+ (- ?x252 (* 18 ?x212 ?x212 r00 x00)) (* 18 ?x212 ?x212 r00 ?x216) (* 6 ?x212 r00 ?x215 ?x215 ?x216 ?x216 ?x216) (* 6 ?x212 ?x212 r00 r00 s00) (* 6 ?x212 ?x212 ?x212 r00 ?x215) (* 9 ?x212 ?x212 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x265 (- (- ?x261 (* 3 ?x215 s00 ?x216 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x272 (- (+ ?x265 (* 2 ?x212 ?x212 ?x215 ?x215)) (* 4 ?x212 ?x212 s00 s00))))
 (let ((?x274 (- (- ?x272 (* 9 ?x212 ?x212 ?x212 ?x215 ?x215 s00 ?x216 ?x216)) (* 9 ?x212 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x280 (+ (- ?x274 (* 6 ?x212 ?x212 r00 r00 ?x215)) (* 9 ?x212 ?x215 s00 ?x216 ?x216 ?x216) (* 18 ?x212 ?x215 ?x216 ?x216 ?x216 ?x216) (* 9 r00 ?x215 s00 ?x216 ?x216 ?x216) (* 2 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x284 (- (- ?x280 (* 18 ?x212 ?x212 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 18 ?x212 ?x212 ?x212 x00))))
 (let ((?x289 (+ ?x284 (* 9 ?x212 ?x212 r00 s00) (* 18 ?x212 ?x212 ?x212 ?x216) (* 18 r00 ?x215 ?x216 ?x216 ?x216 ?x216) (* 3 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x294 (+ (- ?x289 (* 3 ?x212 ?x212 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 18 ?x212 ?x212 ?x212 ?x215 ?x215 ?x216 ?x216 x00) (* 3 ?x212 ?x212 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x300 (- (- ?x294 (* 18 ?x212 ?x215 ?x216 ?x216 ?x216 x00)) (* 18 r00 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x302 (- (- ?x300 (* 6 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 9 ?x212 ?x212 ?x212 ?x215))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x302 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x3384 (lambda ((r Int) (s Int) (x Int) )(let ((?x214 (* 6 r)))
 (let ((?x2208 (+ 3 s ?x214)))
 (let ((?x1413 (+ 1 r)))
 (let ((?x310 (* (- 1) s)))
 (let ((?x2935 (+ x ?x310)))
 (let ((?x4757 (+ (* 9 (* s00 ?x1413 ?x1413 ?x1413)) (* 4 (* s00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 2 (* s00 ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x1413 ?x1413)) (* 9 (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 9) (* r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 2) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208 ?x2208)) (* (- 6) (* r00 s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x1413 ?x1413 ?x2208)) (* (- 6) (* r00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x1413 ?x1413)) (* (- 6) (* r00 r00 s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 6 (* r00 r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 9) (* r00 ?x1413 ?x1413 ?x2208)) (* (- 18) (* ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* r00 x00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 x00 ?x1413 ?x1413)) (* 18 (* r00 ?x1413 ?x1413 ?x2935)) (* 6 (* r00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* 6 (* r00 r00 s00 ?x1413 ?x1413)) (* 6 (* r00 ?x1413 ?x1413 ?x1413 ?x2208)) (* 9 (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* (- 3) (* s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 2) (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 2 (* ?x1413 ?x1413 ?x2208 ?x2208)) (* (- 4) (* s00 s00 ?x1413 ?x1413)) (* (- 9) (* s00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 6) (* r00 r00 ?x1413 ?x1413 ?x2208)) (* 9 (* s00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* 18 (* ?x1413 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 9 (* r00 s00 ?x2935 ?x2935 ?x2935 ?x2208)) (* 2 (* s00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* r00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x1413 ?x1413)) (* 9 (* r00 s00 ?x1413 ?x1413)) (* 18 (* ?x1413 ?x1413 ?x1413 ?x2935)) (* 18 (* r00 ?x2935 ?x2935 ?x2935 ?x2935 ?x2208)) (* 3 (* ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 3) (* ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208 ?x2208)) (* 18 (* x00 ?x1413 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* 3 (* s00 ?x1413 ?x1413 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 18) (* x00 ?x1413 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 18) (* r00 x00 ?x2935 ?x2935 ?x2935 ?x2208)) (* (- 6) (* r00 r00 ?x2935 ?x2935 ?x2935 ?x2208 ?x2208)) (* (- 9) (* ?x1413 ?x1413 ?x1413 ?x2208)))))
 (let (($x4173 (not (= ?x4757 0))))
 (let ((?x1376 (* x00 x00)))
 (let ((?x5939 (* 108 ?x1376)))
 (let ((?x1658 (* (- 9) s)))
 (let ((?x3433 (* r00 r00 s00)))
 (let ((?x1838 (* (- 36) ?x3433)))
 (let ((?x137 (* 9 s00)))
 (let ((?x621 (* s00 s00)))
 (let ((?x1747 (* 51 ?x621)))
 (let ((?x4437 (* r00 r00 s)))
 (let ((?x1584 (* 36 ?x4437)))
 (let ((?x1214 (* s00 s00 s00)))
 (let ((?x4946 (* 16 ?x1214)))
 (let ((?x835 (* s00 x00)))
 (let ((?x3934 (* (- 108) ?x835)))
 (let ((?x912 (* r00 r00 r00 x00)))
 (let ((?x1513 (* (- 432) ?x912)))
 (let ((?x552 (* r00 x00)))
 (let ((?x4253 (* 108 ?x552)))
 (let ((?x6163 (+ (* 216 (* r00 s00 x00)) ?x4253 (* (- 54) (* r00 s00)) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1513 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x3934 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x4946 (* (- 108) (* x s)) ?x1584 ?x1747 (* (- 108) (* r00 x)) ?x137 ?x1838 ?x1658 (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x5939)))
 (let (($x3897 (= ?x6163 0)))
 (let ((?x143 (* 9 s)))
 (let ((?x1017 (* (- 9) s00)))
 (let ((?x946 (* (- 15) ?x621)))
 (let ((?x907 (* r00 r00 x00)))
 (let ((?x920 (* (- 36) ?x907)))
 (let ((?x836 (* 6 ?x835)))
 (let ((?x575 (* s s)))
 (let ((?x599 (* 3 ?x575)))
 (let ((?x581 (* (- 54) ?x552)))
 (let ((?x4052 (+ (* (- 24) (* s r)) ?x581 (* 36 (* r00 x r)) (* 24 (* r00 s00)) ?x599 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x836 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) ?x4437) ?x920 ?x946 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x1017 (* 36 ?x3433) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x47 (* 3 s)))
 (let ((?x408 (* (- 3) s00)))
 (let ((?x634 (* (- 4) ?x621)))
 (let ((?x576 (* 2 ?x575)))
 (let ((?x566 (* (- 18) ?x552)))
 (let ((?x4321 (+ (* (- 9) (* s r)) ?x566 (* 9 (* r00 s00)) ?x576 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) ?x4437) ?x634 (* 18 (* r00 x)) ?x408 (* 6 ?x3433) (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x2925 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x408 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 (* r00 s00)) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let (($x1616 (= (+ s00 ?x310 (* 3 (* r r)) (* (- 3) (* r00 r00))) 0)))
 (let (($x2959 (and $x1616 (= ?x2925 0) (= ?x4321 0) (= ?x4052 0) $x3897 $x4173)))
 (let ((?x215 (+ s ?x214 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x216 (- x s)))
 (let ((?x219 (+ (* 9 ?x212 ?x212 ?x212 s00) (* 4 ?x212 ?x212 ?x215 ?x215 s00 s00 ?x216 ?x216) (* 2 ?x212 ?x212 ?x215 s00))))
 (let ((?x223 (+ (- ?x219 (* 6 ?x212 ?x212 ?x212 r00 s00)) (* 9 ?x212 ?x212 ?x212 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x227 (- (- ?x223 (* 9 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 9 ?x212 ?x212 r00 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x232 (- (+ ?x227 (* 6 ?x212 ?x212 ?x212 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x215 ?x215 ?x215 ?x215 ?x216 ?x216))))
 (let ((?x235 (+ (- ?x232 (* 6 ?x212 r00 ?x215 s00 ?x216 ?x216 ?x216)) (* 3 ?x212 ?x212 ?x215))))
 (let ((?x241 (- (- ?x235 (* 6 ?x212 ?x212 ?x212 r00 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 3 ?x212 ?x212 s00))))
 (let ((?x243 (- (- ?x241 (* 6 ?x212 ?x212 r00 r00 ?x215 ?x215 s00 ?x216 ?x216)) (* 4 ?x215 s00 s00 ?x216 ?x216 ?x216))))
 (let ((?x248 (- (+ ?x243 (* 6 r00 r00 ?x215 s00 ?x216 ?x216 ?x216)) (* 9 ?x212 ?x212 r00 ?x215))))
 (let ((?x252 (+ (- ?x248 (* 18 ?x212 ?x212 ?x212 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 6 ?x212 ?x212 r00 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 18 ?x212 ?x212 r00 ?x215 ?x215 ?x216 ?x216 x00))))
 (let ((?x261 (+ (- ?x252 (* 18 ?x212 ?x212 r00 x00)) (* 18 ?x212 ?x212 r00 ?x216) (* 6 ?x212 r00 ?x215 ?x215 ?x216 ?x216 ?x216) (* 6 ?x212 ?x212 r00 r00 s00) (* 6 ?x212 ?x212 ?x212 r00 ?x215) (* 9 ?x212 ?x212 r00 ?x215 ?x215 ?x215 ?x216 ?x216) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x265 (- (- ?x261 (* 3 ?x215 s00 ?x216 ?x216 ?x216)) (* 2 ?x212 ?x212 ?x215 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x272 (- (+ ?x265 (* 2 ?x212 ?x212 ?x215 ?x215)) (* 4 ?x212 ?x212 s00 s00))))
 (let ((?x274 (- (- ?x272 (* 9 ?x212 ?x212 ?x212 ?x215 ?x215 s00 ?x216 ?x216)) (* 9 ?x212 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x280 (+ (- ?x274 (* 6 ?x212 ?x212 r00 r00 ?x215)) (* 9 ?x212 ?x215 s00 ?x216 ?x216 ?x216) (* 18 ?x212 ?x215 ?x216 ?x216 ?x216 ?x216) (* 9 r00 ?x215 s00 ?x216 ?x216 ?x216) (* 2 ?x215 ?x215 s00 ?x216 ?x216 ?x216))))
 (let ((?x284 (- (- ?x280 (* 18 ?x212 ?x212 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 18 ?x212 ?x212 ?x212 x00))))
 (let ((?x289 (+ ?x284 (* 9 ?x212 ?x212 r00 s00) (* 18 ?x212 ?x212 ?x212 ?x216) (* 18 r00 ?x215 ?x216 ?x216 ?x216 ?x216) (* 3 ?x215 ?x215 ?x216 ?x216 ?x216))))
 (let ((?x294 (+ (- ?x289 (* 3 ?x212 ?x212 ?x215 ?x215 ?x215 ?x216 ?x216)) (* 18 ?x212 ?x212 ?x212 ?x215 ?x215 ?x216 ?x216 x00) (* 3 ?x212 ?x212 ?x215 ?x215 s00 ?x216 ?x216))))
 (let ((?x300 (- (- ?x294 (* 18 ?x212 ?x215 ?x216 ?x216 ?x216 x00)) (* 18 r00 ?x215 ?x216 ?x216 ?x216 x00))))
 (let ((?x302 (- (- ?x300 (* 6 r00 r00 ?x215 ?x215 ?x216 ?x216 ?x216)) (* 9 ?x212 ?x212 ?x212 ?x215))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x44 (* 3 s00)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) (* 9 r00 s00) (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) (* 4 s00 s00)) (* 18 r00 x))))
 (let ((?x85 (- (+ (- ?x80 ?x44) (* 6 r00 r00 s00)) (* 18 r x00))))
 (let ((?x91 (- (+ ?x85 ?x47 (* 9 r s00) (* 2 s s00)) (* 9 r00 s))))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x306 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) (= (- ?x91 (* 6 r r00 s00)) 0) (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x302 0))))))
 (rewrite (= $x306 $x2959)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x308 (asserted $x307)))
 (let ((@x409 (mp (mp @x308 (quant-intro (proof-bind ?x3384) (= $x307 $x4547)) $x4547) (rewrite (= $x4547 $x4547)) $x4547)))
 (let ((@x358 (mp (mp @x409 (quant-intro (proof-bind ?x1674) (= $x4547 $x1835)) $x1835) (quant-intro (proof-bind ?x4384) (= $x1835 $x4383)) $x4383)))
 (let ((@x6514 (mp (mp~ @x358 (sk (~ $x4383 $x5472)) $x5472) (rewrite (= $x5472 $x2861)) $x2861)))
 (let ((@x6440 (and-elim @x6514 $x5125)))
 (let ((@x6078 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5125) $x673)) @x6440 $x673)))
 (let (($x4518 (>= ?x5024 0)))
 (let ((@x6524 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5125) $x4518)) @x6440 $x4518)))
 (let (($x2106 (<= ?x4155 0)))
 (let ((@x3574 (and-elim @x6514 $x3890)))
 (let ((@x5018 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3890) $x2106)) @x3574 $x2106)))
 (let (($x3026 (>= ?x4155 0)))
 (let ((@x6212 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3890) $x3026)) @x3574 $x3026)))
 (let (($x5791 (<= ?x3292 0)))
 (let ((@x5855 (and-elim @x6514 $x3295)))
 (let ((@x5064 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3295) $x5791)) @x5855 $x5791)))
 (let (($x3364 (>= ?x3292 0)))
 (let ((@x674 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x3295) $x3364)) @x5855 $x3364)))
 (let (($x4989 (not (<= ?x4116 0))))
 (let (($x5679 (>= ?x4116 0)))
 (let ((@x2110 ((_ th-lemma arith) (hypothesis (not $x5679)) @x6212 @x5018 @x674 @x5064 @x6212 @x5018 @x674 @x5064 @x674 @x5064 @x6524 @x6078 @x6212 @x5018 @x6212 @x5018 @x6524 @x6078 false)))
 (let ((@x3415 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2863 $x4989 (not $x5679))) (and-elim @x6514 $x3519) (or $x4989 (not $x5679)))))
 ((_ th-lemma arith) (unit-resolution @x3415 (lemma @x2110 $x5679) $x4989) @x6212 @x5018 @x674 @x5064 @x6212 @x5018 @x674 @x5064 @x674 @x5064 @x6524 @x6078 @x6212 @x5018 @x6212 @x5018 @x6524 @x6078 false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 5
 :arith-assert-diseq        1
 :arith-assert-lower        39
 :arith-assert-upper        7
 :arith-conflicts           2
 :arith-eq-adapter          6
 :arith-gcd-tests           4
 :arith-grobner             2
 :arith-max-min             1704
 :arith-nonlinear-bounds    32
 :arith-nonlinear-horner    18
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        4
 :arith-pivots              7
 :arith-row-summations      10
 :arith-tableau-max-columns 276
 :arith-tableau-max-rows    9
 :conflicts                 2
 :decisions                 1
 :del-clause                19
 :final-checks              4
 :max-memory                4.97
 :memory                    3.96
 :mk-bool-var               24
 :mk-clause                 19
 :num-allocs                3466602
 :num-checks                1
 :propagations              12
 :rlimit-count              52391
 :time                      0.05
 :total-time                0.07)
