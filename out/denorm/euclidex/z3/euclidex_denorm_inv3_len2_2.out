unsat
((set-logic NIA)
(declare-fun p!5 () Int)
(declare-fun b!2 () Int)
(declare-fun a!4 () Int)
(declare-fun q!3 () Int)
(declare-fun r!1 () Int)
(declare-fun s!0 () Int)
(proof
(let ((?x502 (* q!3 a!4)))
 (let ((?x134 (* q00 a00)))
 (let ((?x180 (* (- 1) ?x134)))
 (let ((?x119 (* p00 b00)))
 (let ((?x436 (+ ?x119 ?x180 ?x502 (* (- 1) (* b!2 p!5)))))
 (let (($x606 (>= ?x436 0)))
 (let (($x513 (= ?x436 0)))
 (let ((?x718 (* b!2 p!5)))
 (let ((?x133 (* (- 1) ?x119)))
 (let ((?x705 (+ ?x133 ?x134 (* (- 1) ?x502) ?x718)))
 (let ((?x543 (* (- 1) (* r!1 r!1 r!1 r!1 r!1))))
 (let ((?x603 (* s!0 r!1 r!1 q!3 q!3 q!3 b!2 a!4)))
 (let ((?x520 (* s!0 s!0 s!0 r!1 r!1)))
 (let ((?x690 (+ (* (- 3) (* r!1 r!1 r!1 q!3 b!2 p!5 p!5 a!4)) (* (- 1) (* r!1 r!1 r!1 p!5 p!5 p!5 a!4 a!4)) ?x520 (* 3 (* s!0 r!1 r!1 r!1 r!1)) ?x603 (* r!1 r!1 r!1 b!2 p!5 p!5 p!5 a!4) (* 3 (* r!1 r!1 r!1 q!3 p!5 p!5 a!4 a!4)) (* (- 3) (* r!1 r!1 r!1 q!3 q!3 p!5 a!4 a!4)) (* 3 (* r!1 r!1 r!1 q!3 q!3 b!2 p!5 a!4)) (* r!1 r!1 r!1 q!3 q!3 q!3 a!4 a!4) (* (- 1) (* r!1 r!1 r!1 q!3 q!3 q!3 b!2 a!4)) (* s!0 r!1 r!1 p!5 p!5 p!5 a!4 a!4) (* (- 1) (* s!0 r!1 r!1 b!2 p!5 p!5 p!5 a!4)) (* (- 3) (* s!0 r!1 r!1 q!3 p!5 p!5 a!4 a!4)) (* 3 (* s!0 r!1 r!1 q!3 q!3 p!5 a!4 a!4)) (* 3 (* s!0 r!1 r!1 q!3 b!2 p!5 p!5 a!4)) (* (- 3) (* s!0 r!1 r!1 q!3 q!3 b!2 p!5 a!4)) (* (- 1) (* s!0 r!1 r!1 q!3 q!3 q!3 a!4 a!4)) (* (- 3) (* s!0 s!0 r!1 r!1 r!1)) ?x543)))
 (let ((?x533 (* ?x690 ?x705)))
 (let (($x627 (= ?x533 0)))
 (let ((?x291 (* s!0 s!0 s!0 s!0 s!0)))
 (let ((?x681 (+ ?x291 ?x520 (* s!0 s!0 s!0 q!3 q!3 q!3 b!2 a!4) ?x603 (* 2 (* s!0 s!0 r!1 q!3 q!3 q!3 b!2 b!2)) (* (- 1) (* s!0 r!1 r!1 q!3 q!3 q!3 b!2 b!2)) (* (- 2) (* s!0 s!0 r!1 q!3 q!3 q!3 b!2 a!4)) (* (- 1) (* s!0 s!0 s!0 q!3 q!3 q!3 b!2 b!2)) (* (- 2) (* s!0 s!0 s!0 s!0 r!1)))))
 (let ((?x689 (* ?x681 ?x705)))
 (let (($x637 (= ?x689 0)))
 (let (($x683 (not $x637)))
 (let (($x525 (or $x683 (not $x627))))
 (let ((?x629 (+ (* q00 r00 b!2) (* p00 b00 s!0) (* (- 1) (* p00 s00 b!2)) (* (- 1) (* r00 b00 q!3)) (* s00 a00 q!3) (* (- 1) (* q00 a00 s!0)))))
 (let ((?x594 (+ (* q00 r00 a!4) (* (- 1) (* r00 b00 p!5)) (* (- 1) (* q00 a00 r!1)) (* p00 b00 r!1) (* (- 1) (* p00 s00 a!4)) (* s00 a00 p!5))))
 (let ((?x130 (* s00 a00)))
 (let ((?x431 (+ ?x130 (* (- 1) (* r00 b00)) (* r!1 b!2) (* (- 1) (* s!0 a!4)))))
 (let ((?x41 (* q00 r00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let (($x675 (and (= (+ ?x37 ?x220 (* r!1 q!3) (* (- 1) (* s!0 p!5))) 0) (= ?x431 0) $x513 (= ?x594 0) (= ?x629 0) $x525)))
 (let ((?x398 (* p!5 b!2)))
 (let ((?x219 (+ ?x133 (* (- 1) (* a!4 q!3)) ?x134 ?x398)))
 (let ((?x187 (* r!1 r!1 s!0 s!0 s!0)))
 (let ((?x184 (* a!4 q!3 q!3 q!3 b!2 r!1 r!1 s!0)))
 (let ((?x290 (+ ?x184 (* (- 1) (* q!3 q!3 q!3 b!2 b!2 r!1 r!1 s!0)) (* (- 2) (* a!4 q!3 q!3 q!3 b!2 r!1 s!0 s!0)) (* 2 (* q!3 q!3 q!3 b!2 b!2 r!1 s!0 s!0)) (* a!4 q!3 q!3 q!3 b!2 s!0 s!0 s!0) (* (- 1) (* q!3 q!3 q!3 b!2 b!2 s!0 s!0 s!0)) ?x187 (* (- 2) (* r!1 s!0 s!0 s!0 s!0)) ?x291)))
 (let ((?x217 (+ ?x184 ?x187 (* (- 1) (* p!5 p!5 p!5 a!4 a!4 r!1 r!1 r!1)) (* p!5 p!5 p!5 a!4 b!2 r!1 r!1 r!1) (* 3 (* p!5 p!5 a!4 a!4 q!3 r!1 r!1 r!1)) (* (- 3) (* p!5 p!5 a!4 q!3 b!2 r!1 r!1 r!1)) (* (- 3) (* p!5 a!4 a!4 q!3 q!3 r!1 r!1 r!1)) (* 3 (* p!5 a!4 q!3 q!3 b!2 r!1 r!1 r!1)) (* a!4 a!4 q!3 q!3 q!3 r!1 r!1 r!1) (* (- 1) (* a!4 q!3 q!3 q!3 b!2 r!1 r!1 r!1)) (* p!5 p!5 p!5 a!4 a!4 r!1 r!1 s!0) (* (- 1) (* p!5 p!5 p!5 a!4 b!2 r!1 r!1 s!0)) (* (- 3) (* p!5 p!5 a!4 a!4 q!3 r!1 r!1 s!0)) (* 3 (* p!5 p!5 a!4 q!3 b!2 r!1 r!1 s!0)) (* 3 (* p!5 a!4 a!4 q!3 q!3 r!1 r!1 s!0)) (* (- 3) (* p!5 a!4 q!3 q!3 b!2 r!1 r!1 s!0)) (* (- 1) (* a!4 a!4 q!3 q!3 q!3 r!1 r!1 s!0)) ?x543 (* 3 (* r!1 r!1 r!1 r!1 s!0)) (* (- 3) (* r!1 r!1 r!1 s!0 s!0)))))
 (let ((?x177 (+ (* b!2 q00 r00) (* (- 1) (* b!2 p00 s00)) (* s!0 p00 b00) (* (- 1) (* q!3 r00 b00)) (* q!3 s00 a00) (* (- 1) (* s!0 q00 a00)))))
 (let ((?x809 (+ (* a!4 p00 s00) (* (- 1) (* a!4 q00 r00)) (* p!5 r00 b00) (* (- 1) (* r!1 p00 b00)) (* (- 1) (* p!5 s00 a00)) (* r!1 q00 a00))))
 (let ((?x148 (* r00 b00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let (($x260 (= (+ (* p!5 s!0) (* (- 1) ?x37) ?x41 (* (- 1) (* q!3 r!1))) 0)))
 (let (($x353 (and $x260 (= (+ (* a!4 s!0) (* (- 1) (* b!2 r!1)) ?x137 ?x148) 0) (= (+ ?x119 (* a!4 q!3) ?x180 (* (- 1) ?x398)) 0) (= ?x809 0) (= ?x177 0) (or (not (= (* ?x217 ?x219) 0)) (not (= (* ?x290 ?x219) 0))))))
 (let (($x466 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x165 (* p b)))
 (let ((?x134 (* q00 a00)))
 (let ((?x126 (* a q)))
 (let ((?x127 (* (- 1) ?x126)))
 (let ((?x119 (* p00 b00)))
 (let ((?x133 (* (- 1) ?x119)))
 (let ((?x439 (+ ?x133 ?x127 ?x134 ?x165)))
 (let ((?x440 (* r r s s s)))
 (let ((?x365 (* a q q q b r r s)))
 (let ((?x472 (+ ?x365 (* (- 1) (* q q q b b r r s)) (* (- 2) (* a q q q b r s s)) (* 2 (* q q q b b r s s)) (* a q q q b s s s) (* (- 1) (* q q q b b s s s)) ?x440 (* (- 2) (* r s s s s)) (* s s s s s))))
 (let ((?x885 (+ ?x365 ?x440 (* (- 1) (* p p p a a r r r)) (* p p p a b r r r) (* 3 (* p p a a q r r r)) (* (- 3) (* p p a q b r r r)) (* (- 3) (* p a a q q r r r)) (* 3 (* p a q q b r r r)) (* a a q q q r r r) (* (- 1) (* a q q q b r r r)) (* p p p a a r r s) (* (- 1) (* p p p a b r r s)) (* (- 3) (* p p a a q r r s)) (* 3 (* p p a q b r r s)) (* 3 (* p a a q q r r s)) (* (- 3) (* p a q q b r r s)) (* (- 1) (* a a q q q r r s)) (* (- 1) (* r r r r r)) (* 3 (* r r r r s)) (* (- 3) (* r r r s s)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let (($x183 (= (+ ?x119 ?x126 (* (- 1) ?x134) (* (- 1) ?x165)) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (and $x158 $x163 $x183 $x249 $x317 (or (not (= (* ?x885 ?x439) 0)) (not (= (* ?x472 ?x439) 0)))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let (($x822 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x314 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x492 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x314 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x192 (+ a ?x258)))
 (let ((?x774 (+ r (* (- 1) s))))
 (let ((?x396 (+ (* ?x774 ?x774 ?x192 s b q q q) (* ?x774 ?x774 s s s))))
 (let ((?x588 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x314 (* (+ b (* (- 1) a)) p))))
 (let ((?x701 (+ s (* (- 1) r))))
 (let ((?x350 (* (- 1) p)))
 (let ((?x614 (+ q ?x350)))
 (let ((?x491 (+ b (* (- 1) a))))
 (let ((?x256 (+ (* ?x701 ?x491 ?x614 ?x614 ?x614 r r a) (* ?x701 ?x701 ?x701 r r))))
 (let (($x854 (or (not (= (* ?x256 ?x588) 0)) (not (= (* ?x396 ?x492) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x490 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x656 (= ?x490 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x831 (* p00 s00 a)))
 (let ((?x633 (* b00 r00 p)))
 (let ((?x345 (+ ?x633 ?x831 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x621 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x379 (* r b)))
 (let (($x872 (= (+ ?x379 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x382 (* r q)))
 (and (= (+ ?x382 (* (- 1) (* s p)) ?x37 ?x220) 0) $x872 $x621 (= ?x345 0) $x656 $x854))))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x206 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x165 (* p b)))
 (let ((?x134 (* q00 a00)))
 (let ((?x126 (* a q)))
 (let ((?x127 (* (- 1) ?x126)))
 (let ((?x119 (* p00 b00)))
 (let ((?x133 (* (- 1) ?x119)))
 (let ((?x439 (+ ?x133 ?x127 ?x134 ?x165)))
 (let ((?x440 (* r r s s s)))
 (let ((?x365 (* a q q q b r r s)))
 (let ((?x472 (+ ?x365 (* (- 1) (* q q q b b r r s)) (* (- 2) (* a q q q b r s s)) (* 2 (* q q q b b r s s)) (* a q q q b s s s) (* (- 1) (* q q q b b s s s)) ?x440 (* (- 2) (* r s s s s)) (* s s s s s))))
 (let ((?x885 (+ ?x365 ?x440 (* (- 1) (* p p p a a r r r)) (* p p p a b r r r) (* 3 (* p p a a q r r r)) (* (- 3) (* p p a q b r r r)) (* (- 3) (* p a a q q r r r)) (* 3 (* p a q q b r r r)) (* a a q q q r r r) (* (- 1) (* a q q q b r r r)) (* p p p a a r r s) (* (- 1) (* p p p a b r r s)) (* (- 3) (* p p a a q r r s)) (* 3 (* p p a q b r r s)) (* 3 (* p a a q q r r s)) (* (- 3) (* p a q q b r r s)) (* (- 1) (* a a q q q r r s)) (* (- 1) (* r r r r r)) (* 3 (* r r r r s)) (* (- 3) (* r r r s s)))))
 (let ((?x72 (* b q00 r00)))
 (let ((?x312 (+ ?x72 (* (- 1) (* b p00 s00)) (* s p00 b00) (* (- 1) (* q r00 b00)) (* q s00 a00) (* (- 1) (* s q00 a00)))))
 (let (($x317 (= ?x312 0)))
 (let ((?x63 (* a p00 s00)))
 (let ((?x248 (+ ?x63 (* (- 1) (* a q00 r00)) (* p r00 b00) (* (- 1) (* r p00 b00)) (* (- 1) (* p s00 a00)) (* r q00 a00))))
 (let (($x249 (= ?x248 0)))
 (let (($x183 (= (+ ?x119 ?x126 (* (- 1) ?x134) (* (- 1) ?x165)) 0)))
 (let ((?x148 (* r00 b00)))
 (let ((?x130 (* s00 a00)))
 (let ((?x137 (* (- 1) ?x130)))
 (let ((?x49 (* a s)))
 (let (($x163 (= (+ ?x49 (* (- 1) (* b r)) ?x137 ?x148) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x33 (* p s)))
 (let (($x158 (= (+ ?x33 ?x139 ?x41 (* (- 1) (* q r))) 0)))
 (let (($x920 (and $x158 $x163 $x183 $x249 $x317 (or (not (= (* ?x885 ?x439) 0)) (not (= (* ?x472 ?x439) 0))))))
 (let ((?x57 (* b00 p00)))
 (let ((?x314 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x492 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x314 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x192 (+ a ?x258)))
 (let ((?x774 (+ r (* (- 1) s))))
 (let ((?x396 (+ (* ?x774 ?x774 ?x192 s b q q q) (* ?x774 ?x774 s s s))))
 (let ((?x588 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x314 (* (+ b (* (- 1) a)) p))))
 (let ((?x701 (+ s (* (- 1) r))))
 (let ((?x350 (* (- 1) p)))
 (let ((?x614 (+ q ?x350)))
 (let ((?x491 (+ b (* (- 1) a))))
 (let ((?x256 (+ (* ?x701 ?x491 ?x614 ?x614 ?x614 r r a) (* ?x701 ?x701 ?x701 r r))))
 (let (($x854 (or (not (= (* ?x256 ?x588) 0)) (not (= (* ?x396 ?x492) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x490 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x656 (= ?x490 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x831 (* p00 s00 a)))
 (let ((?x633 (* b00 r00 p)))
 (let ((?x345 (+ ?x633 ?x831 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x621 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x379 (* r b)))
 (let (($x872 (= (+ ?x379 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let (($x833 (= (+ (* r q) (* (- 1) (* s p)) ?x37 (* (- 1) ?x41)) 0)))
 (let (($x818 (and $x833 $x872 $x621 (= ?x345 0) $x656 $x854)))
 (rewrite (= $x818 $x920))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x867 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x57 (* b00 p00)))
 (let ((?x314 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x492 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x314 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x192 (+ a ?x258)))
 (let ((?x774 (+ r (* (- 1) s))))
 (let ((?x396 (+ (* ?x774 ?x774 ?x192 s b q q q) (* ?x774 ?x774 s s s))))
 (let ((?x588 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x314 (* (+ b (* (- 1) a)) p))))
 (let ((?x701 (+ s (* (- 1) r))))
 (let ((?x350 (* (- 1) p)))
 (let ((?x614 (+ q ?x350)))
 (let ((?x491 (+ b (* (- 1) a))))
 (let ((?x256 (+ (* ?x701 ?x491 ?x614 ?x614 ?x614 r r a) (* ?x701 ?x701 ?x701 r r))))
 (let (($x854 (or (not (= (* ?x256 ?x588) 0)) (not (= (* ?x396 ?x492) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x490 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x656 (= ?x490 0)))
 (let ((?x851 (* a00 s00 p)))
 (let ((?x848 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x824 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x848 ?x851 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x397 (* s a)))
 (let (($x834 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x397 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x120 (* s p)))
 (and (= (+ (* (- 1) (* r q)) ?x120 ?x139 ?x41) 0) $x834 (= (+ (* (- 1) (* q a)) ?x55 ?x314 (* b p)) 0) (= ?x824 0) $x656 $x854)))))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x832 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x314 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x492 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x314 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x192 (+ a ?x258)))
 (let ((?x774 (+ r (* (- 1) s))))
 (let ((?x396 (+ (* ?x774 ?x774 ?x192 s b q q q) (* ?x774 ?x774 s s s))))
 (let ((?x588 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x314 (* (+ b (* (- 1) a)) p))))
 (let ((?x701 (+ s (* (- 1) r))))
 (let ((?x350 (* (- 1) p)))
 (let ((?x614 (+ q ?x350)))
 (let ((?x491 (+ b (* (- 1) a))))
 (let ((?x256 (+ (* ?x701 ?x491 ?x614 ?x614 ?x614 r r a) (* ?x701 ?x701 ?x701 r r))))
 (let (($x854 (or (not (= (* ?x256 ?x588) 0)) (not (= (* ?x396 ?x492) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x490 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x656 (= ?x490 0)))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x831 (* p00 s00 a)))
 (let ((?x633 (* b00 r00 p)))
 (let ((?x345 (+ ?x633 ?x831 (* (- 1) (* b00 p00 r)) (* (- 1) (* q00 r00 a)) (* (- 1) (* a00 s00 p)) ?x69)))
 (let (($x621 (= (+ (* q a) (* (- 1) ?x55) ?x57 (* (- 1) (* b p))) 0)))
 (let ((?x47 (* a00 s00)))
 (let ((?x379 (* r b)))
 (let (($x872 (= (+ ?x379 ?x47 (* (- 1) (* s a)) (* (- 1) (* b00 r00))) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x220 (* (- 1) ?x41)))
 (let ((?x37 (* p00 s00)))
 (let ((?x382 (* r q)))
 (let (($x818 (and (= (+ ?x382 (* (- 1) (* s p)) ?x37 ?x220) 0) $x872 $x621 (= ?x345 0) $x656 $x854)))
 (let ((?x851 (* a00 s00 p)))
 (let ((?x848 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let (($x876 (= (+ (* (- 1) ?x633) (* (- 1) ?x831) ?x65 ?x848 ?x851 (* (- 1) ?x69)) 0)))
 (let (($x834 (= (+ (* (- 1) ?x379) (* (- 1) ?x47) (* s a) (* b00 r00)) 0)))
 (let (($x497 (and (= (+ (* (- 1) ?x382) (* s p) (* (- 1) ?x37) ?x41) 0) $x834 (= (+ (* (- 1) (* q a)) ?x55 ?x314 (* b p)) 0) $x876 $x656 $x854)))
 (rewrite (= $x497 $x818))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x114 (exists ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(! (let ((?x105 (- s r)))
 (let ((?x98 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x108 (+ (* a ?x102 ?x98 ?x98 ?x98 r r ?x105) (* r r ?x105 ?x105 ?x105))))
 (let ((?x104 (+ (- (+ (* (- 1) a ?x98) (* a00 q00)) (* b00 p00)) (* ?x102 p))))
 (let ((?x91 (- r s)))
 (let ((?x84 (- a b)))
 (let ((?x94 (+ (* ?x84 b q q q ?x91 ?x91 s) (* ?x91 ?x91 s s s))))
 (let ((?x90 (+ (- (+ (* (- 1) ?x84 q) (* a00 q00)) (* b00 p00)) (* b (- p q)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x77 (- (+ (* b q00 r00) (* b00 p00 s)) (* b00 q r00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let ((?x59 (* b p)))
 (let ((?x60 (+ (- (+ (* (- 1) a q) (* a00 q00)) (* b00 p00)) ?x59)))
 (let ((?x51 (* b00 r00)))
 (let ((?x49 (* a s)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) ?x49 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x42 (+ (- (+ (* (- 1) q r) (* p s)) (* p00 s00)) ?x41)))
 (and (= ?x42 0) $x53 (= ?x60 0) (= (- ?x68 ?x69) 0) (= (- (+ (- ?x77 ?x76) (* a00 q s00)) ?x81) 0) (or (not (= (* ?x90 ?x94) 0)) (not (= (* ?x104 ?x108) 0))))))))))))))))))))))))))) :qid k!39))
 ))
 (let ((?x840 (lambda ((p Int) (a Int) (q Int) (b Int) (r Int) (s Int) )(let ((?x57 (* b00 p00)))
 (let ((?x314 (* (- 1) ?x57)))
 (let ((?x55 (* a00 q00)))
 (let ((?x492 (+ (* (- 1) (* (+ a (* (- 1) b)) q)) ?x55 ?x314 (* (+ p (* (- 1) q)) b))))
 (let ((?x258 (* (- 1) b)))
 (let ((?x192 (+ a ?x258)))
 (let ((?x774 (+ r (* (- 1) s))))
 (let ((?x396 (+ (* ?x774 ?x774 ?x192 s b q q q) (* ?x774 ?x774 s s s))))
 (let ((?x588 (+ (* (- 1) (* (+ q (* (- 1) p)) a)) ?x55 ?x314 (* (+ b (* (- 1) a)) p))))
 (let ((?x701 (+ s (* (- 1) r))))
 (let ((?x350 (* (- 1) p)))
 (let ((?x614 (+ q ?x350)))
 (let ((?x491 (+ b (* (- 1) a))))
 (let ((?x256 (+ (* ?x701 ?x491 ?x614 ?x614 ?x614 r r a) (* ?x701 ?x701 ?x701 r r))))
 (let (($x854 (or (not (= (* ?x256 ?x588) 0)) (not (= (* ?x396 ?x492) 0)))))
 (let ((?x73 (* b00 p00 s)))
 (let ((?x490 (+ (* q00 r00 b) ?x73 (* (- 1) (* b00 r00 q)) (* (- 1) (* p00 s00 b)) (* a00 s00 q) (* (- 1) (* a00 q00 s)))))
 (let (($x656 (= ?x490 0)))
 (let ((?x851 (* a00 s00 p)))
 (let ((?x848 (* q00 r00 a)))
 (let ((?x65 (* b00 p00 r)))
 (let ((?x824 (+ (* (- 1) (* b00 r00 p)) (* (- 1) (* p00 s00 a)) ?x65 ?x848 ?x851 (* (- 1) (* a00 q00 r)))))
 (let ((?x51 (* b00 r00)))
 (let ((?x397 (* s a)))
 (let (($x834 (= (+ (* (- 1) (* r b)) (* (- 1) (* a00 s00)) ?x397 ?x51) 0)))
 (let ((?x41 (* q00 r00)))
 (let ((?x37 (* p00 s00)))
 (let ((?x139 (* (- 1) ?x37)))
 (let ((?x120 (* s p)))
 (let (($x497 (and (= (+ (* (- 1) (* r q)) ?x120 ?x139 ?x41) 0) $x834 (= (+ (* (- 1) (* q a)) ?x55 ?x314 (* b p)) 0) (= ?x824 0) $x656 $x854)))
 (let ((?x105 (- s r)))
 (let ((?x98 (- q p)))
 (let ((?x102 (- b a)))
 (let ((?x108 (+ (* a ?x102 ?x98 ?x98 ?x98 r r ?x105) (* r r ?x105 ?x105 ?x105))))
 (let ((?x109 (* (+ (- (+ (* (- 1) a ?x98) ?x55) ?x57) (* ?x102 p)) ?x108)))
 (let ((?x91 (- r s)))
 (let ((?x84 (- a b)))
 (let ((?x94 (+ (* ?x84 b q q q ?x91 ?x91 s) (* ?x91 ?x91 s s s))))
 (let ((?x90 (+ (- (+ (* (- 1) ?x84 q) ?x55) ?x57) (* b (- p q)))))
 (let ((?x81 (* a00 q00 s)))
 (let ((?x76 (* b p00 s00)))
 (let ((?x80 (+ (- (- (+ (* b q00 r00) ?x73) (* b00 q r00)) ?x76) (* a00 q s00))))
 (let ((?x69 (* a00 q00 r)))
 (let ((?x66 (* a q00 r00)))
 (let ((?x68 (+ (- (* (- 1) b00 p r00) (* a p00 s00)) ?x65 ?x66 (* a00 p s00))))
 (let (($x61 (= (+ (- (+ (* (- 1) a q) ?x55) ?x57) (* b p)) 0)))
 (let (($x53 (= (+ (- (* (- 1) b r) (* a00 s00)) (* a s) ?x51) 0)))
 (let (($x44 (= (+ (- (+ (* (- 1) q r) (* p s)) ?x37) ?x41) 0)))
 (let (($x113 (and $x44 $x53 $x61 (= (- ?x68 ?x69) 0) (= (- ?x80 ?x81) 0) (or (not (= (* ?x90 ?x94) 0)) (not (= ?x109 0))))))
 (rewrite (= $x113 $x497))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x115 (asserted $x114)))
 (let ((@x871 (mp (mp @x115 (quant-intro (proof-bind ?x840) (= $x114 $x867)) $x867) (rewrite (= $x867 $x867)) $x867)))
 (let ((@x338 (mp (mp @x871 (quant-intro (proof-bind ?x832) (= $x867 $x822)) $x822) (quant-intro (proof-bind ?x206) (= $x822 $x466)) $x466)))
 (let ((@x742 (mp (mp~ @x338 (sk (~ $x466 $x353)) $x353) (rewrite (= $x353 $x675)) $x675)))
 (let ((@x297 (and-elim @x742 $x513)))
 (let ((@x571 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x513) $x606)) @x297 $x606)))
 (let (($x602 (<= ?x436 0)))
 (let ((@x526 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x513) $x602)) @x297 $x602)))
 (let (($x404 (not (<= ?x689 0))))
 (let (($x709 (>= ?x533 0)))
 (let (($x557 (<= ?x533 0)))
 (let ((@x411 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x627 (not $x557) (not $x709))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x557)) @x526 @x571 false) $x557) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x709)) @x526 @x571 false) $x709) $x627)))
 (let (($x706 (>= ?x689 0)))
 (let ((@x384 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x637 $x404 (not $x706))) (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis (not $x706)) @x526 @x571 false) $x706) (unit-resolution (and-elim @x742 $x525) @x411 $x683) $x404)))
 ((_ th-lemma arith farkas 1 1 1) @x384 @x526 @x571 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 10
 :arith-assert-diseq        3
 :arith-assert-lower        19
 :arith-assert-upper        18
 :arith-conflicts           4
 :arith-eq-adapter          11
 :arith-fixed-eqs           6
 :arith-grobner             4
 :arith-max-min             536
 :arith-nonlinear-horner    30
 :arith-num-rows            8
 :arith-pivots              5
 :arith-pseudo-nonlinear    8
 :arith-row-summations      1
 :arith-tableau-max-columns 78
 :arith-tableau-max-rows    8
 :conflicts                 4
 :decisions                 7
 :del-clause                27
 :final-checks              4
 :max-memory                44.41
 :memory                    3.15
 :mk-bool-var               39
 :mk-clause                 40
 :num-allocs                34635167267.00
 :num-checks                1
 :propagations              19
 :rlimit-count              10879851
 :time                      4.26
 :total-time                4.26)
