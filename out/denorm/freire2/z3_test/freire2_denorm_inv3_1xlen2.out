unsat
((set-logic NIA)
(declare-fun r!2 () Int)
(declare-fun s!1 () Int)
(declare-fun x!0 () Int)
(proof
(let ((?x865 (* (- 2) (* s!1 s!1 r!2))))
 (let ((?x2031 (* s!1 s!1)))
 (let ((?x1416 (* (- 1) ?x2031)))
 (let ((?x630 (* (- 54) r!2)))
 (let ((?x810 (* 6 r!2)))
 (let ((?x1789 (+ 3 s!1 ?x810)))
 (let ((?x1231 (+ 1 r!2)))
 (let ((?x1954 (* (- 6) s!1)))
 (let ((?x1932 (* (- 108) (* r!2 r!2 r!2))))
 (let ((?x1965 (* (- 36) (* r!2 r!2 r!2 r!2))))
 (let ((?x922 (* r!2 r!2)))
 (let ((?x2003 (* (- 117) ?x922)))
 (let ((?x1263 (+ (- 9) (* (- 24) (* s!1 r!2)) ?x2003 ?x1965 ?x1932 (* (- 1) (* s!1 s!1 r!2 r!2)) ?x1954 (* ?x1231 ?x1789 ?x1789 ?x1789) (* (- 12) (* s!1 r!2 r!2 r!2)) (* (- 30) (* s!1 r!2 r!2)) ?x630 ?x1416 ?x865)))
 (let (($x897 (<= ?x1263 0)))
 (let ((?x1027 (* 3 r!2)))
 (let ((?x1033 (* (- 3) s!1)))
 (let ((?x482 (* 6 x!0)))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x396 (* s00 r00)))
 (let ((?x474 (* (- 6) ?x396)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x928 (+ ?x44 ?x470 ?x471 ?x474 ?x440 (* 2 (* s!1 r!2)) (* (- 12) (* r00 r00 r!2)) ?x482 ?x1033 (* 4 (* s00 r!2)) ?x1027)))
 (let (($x624 (<= ?x928 0)))
 (let (($x332 (= ?x928 0)))
 (let ((?x2084 (* 2 ?x2031)))
 (let ((?x1869 (* 9 r!2)))
 (let ((?x556 (* (- 12) s!1)))
 (let ((?x2026 (* 18 x!0)))
 (let ((?x2027 (* 18 ?x922)))
 (let ((?x617 (* s00 r00 r00)))
 (let ((?x618 (* 6 ?x617)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x1861 (* 3 ?x396)))
 (let ((?x271 (* r00 r00)))
 (let ((?x1564 (* (- 18) ?x271)))
 (let ((?x1683 (* (- 18) x00)))
 (let ((?x1563 (* (- 9) r00)))
 (let ((?x1759 (* 12 s00)))
 (let ((?x991 (+ ?x1759 ?x1563 ?x1683 ?x1564 (* (- 21) (* r00 s!1)) ?x1861 (* (- 3) (* s!1 r!2)) (* 18 (* x!0 r!2)) ?x506 ?x574 ?x618 (* (- 6) (* r00 r00 s!1)) ?x2027 (* (- 36) (* r00 r00 r!2)) ?x2026 (* 6 (* r00 s!1 r!2)) (* 2 (* s00 s!1)) (* 18 (* r00 x!0)) ?x556 (* (- 18) (* x00 r!2)) (* 21 (* s00 r!2)) (* 36 (* r00 r!2 r!2)) (* (- 6) (* s00 r00 r!2)) ?x1869 ?x2084)))
 (let ((?x1490 (* ?x1263 ?x991)))
 (let (($x1483 (= ?x1490 0)))
 (let (($x325 (not $x1483)))
 (let ((?x1249 (* (- 9) s!1)))
 (let ((?x1326 (* x00 x00)))
 (let ((?x900 (* 108 ?x1326)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x955 (* 16 ?x1164)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1911 (* (- 432) ?x862)))
 (let ((?x785 (* s00 x00)))
 (let ((?x353 (* (- 108) ?x785)))
 (let ((?x693 (* r00 r00 s!1)))
 (let ((?x1952 (* 36 ?x693)))
 (let ((?x1259 (* (- 36) ?x617)))
 (let ((?x1585 (* 51 ?x561)))
 (let ((?x1838 (* 108 ?x492)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1402 (+ ?x137 (* 54 (* r00 s!1)) (* (- 54) ?x396) (* 216 (* s00 r00 x00)) ?x1838 ?x1585 ?x1259 (* (- 108) (* s00 s00 r00)) ?x1952 (* (- 36) (* s00 s00 r00 r00)) ?x353 (* 108 (* x00 s!1)) ?x1911 (* 216 (* s00 r00 r00 r00)) (* 108 (* x!0 x!0)) ?x955 (* 108 (* s00 r00 s!1)) ?x900 (* (- 216) (* x00 x!0)) (* (- 66) (* s00 s!1)) (* (- 108) (* r00 x!0)) ?x1249 (* (- 108) (* x!0 s!1)) (* (- 4) (* s!1 s!1 s!1)) (* 108 (* s00 x!0)) (* (- 12) (* s00 s!1 s!1)) (* (- 216) (* r00 r00 r00 s!1)) (* 15 ?x2031) (* (- 216) (* s00 r00 x!0)) (* 36 (* r00 r00 s!1 s!1)) (* 432 (* r00 r00 r00 x!0)))))
 (let ((?x873 (+ ?x137 (* 24 (* r00 s!1)) (* (- 24) ?x396) (* (- 2) (* s00 s!1 r!2)) (* 24 (* s!1 r!2)) (* (- 54) (* x!0 r!2)) (* 54 ?x492) (* 15 ?x561) (* (- 36) (* r00 r00 x!0)) (* 36 (* r00 x00 r!2)) (* 4 (* s00 s00 r!2)) ?x1259 (* 2 (* s00 s00 r00)) ?x1952 (* (- 6) ?x785) (* 6 (* x00 s!1)) (* 36 (* r00 r00 x00)) (* 2 (* s00 r00 s!1)) (* (- 12) (* s00 s!1)) (* (- 54) (* r00 x!0)) ?x1249 (* 54 (* x00 r!2)) (* (- 24) (* s00 r!2)) (* (- 36) (* r00 x!0 r!2)) (* (- 6) (* x!0 s!1)) (* (- 4) (* r00 s!1 s!1)) (* 6 (* s00 x!0)) (* (- 3) ?x2031) ?x865)))
 (let ((?x389 (+ ?x44 (* 9 (* r00 s!1)) (* (- 9) ?x396) (* 9 (* s!1 r!2)) (* (- 18) (* x!0 r!2)) (* 18 ?x492) (* 4 ?x561) (* (- 6) ?x617) (* 6 ?x693) (* (- 6) (* r00 s!1 r!2)) (* (- 2) (* s00 s!1)) (* (- 18) (* r00 x!0)) ?x1033 (* 18 (* x00 r!2)) (* (- 9) (* s00 r!2)) (* 6 (* s00 r00 r!2)) (* (- 2) ?x2031))))
 (let (($x392 (= ?x389 0)))
 (let ((?x850 (* (- 3) ?x271)))
 (let ((?x1593 (+ s00 ?x850 (* 3 ?x922) (* (- 1) s!1))))
 (let (($x290 (= ?x1593 0)))
 (let (($x1492 (and $x290 $x332 $x392 (= ?x873 0) (= ?x1402 0) $x325)))
 (let ((?x498 (* (- 6) (* r!2 s00 r00))))
 (let ((?x1684 (* s!1 s00)))
 (let ((?x1828 (* 2 ?x1684)))
 (let ((?x251 (* r!2 x00)))
 (let ((?x255 (* (- 18) ?x251)))
 (let ((?x2092 (* x!0 r00)))
 (let ((?x538 (* 18 ?x2092)))
 (let ((?x743 (* s!1 r00 r00)))
 (let ((?x2090 (* (- 6) ?x743)))
 (let ((?x736 (* 6 (* r!2 s!1 r00))))
 (let ((?x2073 (* r!2 x!0)))
 (let ((?x1702 (* 18 ?x2073)))
 (let ((?x1195 (+ ?x1869 ?x556 ?x2026 ?x1759 ?x1563 ?x1683 ?x2027 ?x1564 (* (- 3) (* r!2 s!1)) (* (- 36) (* r!2 r00 r00)) (* 21 (* r!2 s00)) ?x1861 ?x506 ?x2084 ?x1702 ?x736 ?x2090 ?x574 ?x538 ?x618 ?x255 ?x1828 (* (- 21) (* s!1 r00)) ?x498 (* 36 (* r!2 r!2 r00)))))
 (let ((?x950 (+ 3 ?x810 s!1)))
 (let ((?x679 (* r!2 s!1)))
 (let ((?x1649 (* (- 24) ?x679)))
 (let ((?x356 (+ (- 9) ?x630 ?x1954 ?x2003 ?x1649 ?x1416 (* (- 2) (* r!2 s!1 s!1)) (* ?x1231 ?x950 ?x950 ?x950) (* (- 1) (* r!2 r!2 s!1 s!1)) ?x1932 (* (- 30) (* r!2 r!2 s!1)) ?x1965 (* (- 12) (* r!2 r!2 r!2 s!1)))))
 (let ((?x1356 (* (- 108) ?x1326)))
 (let ((?x1355 (* (- 16) ?x1164)))
 (let ((?x1036 (* s00 r00 r00 r00)))
 (let ((?x1351 (* (- 216) ?x1036)))
 (let ((?x863 (* 432 ?x862)))
 (let ((?x1109 (* 108 ?x785)))
 (let ((?x727 (* s00 s00 r00 r00)))
 (let ((?x728 (* 36 ?x727)))
 (let ((?x662 (* s00 s00 r00)))
 (let ((?x992 (* 108 ?x662)))
 (let ((?x980 (* 36 ?x617)))
 (let ((?x1345 (* (- 51) ?x561)))
 (let ((?x1420 (* (- 36) ?x743)))
 (let ((?x1342 (* (- 108) ?x492)))
 (let ((?x485 (* s00 r00 x00)))
 (let ((?x1341 (* (- 216) ?x485)))
 (let ((?x496 (* 54 ?x396)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x1529 (* 9 s!1)))
 (let ((?x1708 (+ ?x1529 ?x967 ?x496 ?x1341 ?x1342 (* (- 15) ?x2031) ?x1420 ?x1345 (* 108 ?x2092) (* (- 108) (* x!0 s00)) (* 216 (* s!1 r00 r00 r00)) ?x980 (* 66 ?x1684) ?x992 (* (- 54) (* s!1 r00)) (* (- 108) (* s!1 x00)) ?x728 (* (- 108) (* s!1 s00 r00)) (* 4 (* s!1 s!1 s!1)) ?x1109 (* 108 (* s!1 x!0)) (* (- 108) (* x!0 x!0)) ?x863 (* 12 (* s!1 s!1 s00)) ?x1351 (* (- 432) (* x!0 r00 r00 r00)) (* 216 (* x!0 s00 r00)) (* (- 36) (* s!1 s!1 r00 r00)) ?x1355 (* 216 (* x!0 x00)) ?x1356)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x680 (* (- 2) ?x662)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x544 (* 24 ?x396)))
 (let ((?x853 (+ ?x1529 ?x967 ?x1649 (* 24 (* r!2 s00)) ?x544 ?x529 (* 3 ?x2031) (* 54 ?x2073) ?x1420 (* 36 (* r!2 x!0 r00)) ?x896 (* 54 ?x2092) (* (- 6) (* x!0 s00)) ?x980 (* (- 54) ?x251) (* 4 (* s!1 s!1 r00)) (* 12 ?x1684) ?x680 (* (- 24) (* s!1 r00)) (* (- 6) (* s!1 x00)) (* (- 2) (* s!1 s00 r00)) ?x786 (* 2 (* r!2 s!1 s!1)) (* 6 (* s!1 x!0)) (* (- 4) (* r!2 s00 s00)) ?x870 (* 2 (* r!2 s!1 s00)) (* (- 36) (* r!2 r00 x00)) (* 36 (* x!0 r00 r00)))))
 (let ((?x511 (* 9 ?x396)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x1528 (+ (* 3 s!1) ?x348 (* (- 9) ?x679) (* 9 (* r!2 s00)) ?x511 ?x506 ?x2084 ?x1702 ?x736 ?x2090 ?x574 ?x538 ?x618 ?x255 ?x1828 (* (- 9) (* s!1 r00)) ?x498)))
 (let ((?x1398 (+ ?x1027 ?x1033 ?x482 ?x44 ?x470 ?x471 (* 2 ?x679) (* (- 12) (* r!2 r00 r00)) (* 4 (* r!2 s00)) ?x474 ?x440)))
 (let (($x355 (and (= (+ s!1 (* (- 1) s00) (* (- 3) ?x922) (* 3 ?x271)) 0) (= ?x1398 0) (= ?x1528 0) (= ?x853 0) (= ?x1708 0) (not (= (* ?x356 ?x1195) 0)))))
 (let (($x550 (exists ((r Int) (s Int) (x Int) )(! (let ((?x709 (* (- 6) (* r s00 r00))))
 (let ((?x658 (* s s00)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x629 (* r x00)))
 (let ((?x642 (* (- 18) ?x629)))
 (let ((?x617 (* s00 r00 r00)))
 (let ((?x618 (* 6 ?x617)))
 (let ((?x587 (* x r00)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x535 (* s r00 r00)))
 (let ((?x548 (* (- 6) ?x535)))
 (let ((?x524 (* 6 (* r s r00))))
 (let ((?x519 (* r x)))
 (let ((?x520 (* 18 ?x519)))
 (let ((?x515 (* s s)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x396 (* s00 r00)))
 (let ((?x1861 (* 3 ?x396)))
 (let ((?x321 (* r r00 r00)))
 (let ((?x1573 (* (- 36) ?x321)))
 (let ((?x271 (* r00 r00)))
 (let ((?x1564 (* (- 18) ?x271)))
 (let ((?x1683 (* (- 18) x00)))
 (let ((?x1563 (* (- 9) r00)))
 (let ((?x1759 (* 12 s00)))
 (let ((?x1491 (* 18 x)))
 (let ((?x1571 (+ (* 9 r) (* (- 12) s) ?x1491 ?x1759 ?x1563 ?x1683 (* 18 (* r r)) ?x1564 (* (- 3) (* r s)) ?x1573 (* 21 (* r s00)) ?x1861 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 (* (- 21) (* s r00)) ?x709 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1366 (+ 3 ?x213 s)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x315 (* r s)))
 (let ((?x491 (* (- 24) ?x315)))
 (let ((?x2048 (+ (- 9) (* (- 54) r) (* (- 6) s) (* (- 117) (* r r)) ?x491 (* (- 1) ?x515) (* (- 2) (* r s s)) (* ?x1363 ?x1366 ?x1366 ?x1366) (* (- 1) (* r r s s)) (* (- 108) (* r r r)) (* (- 30) (* r r s)) (* (- 36) (* r r r r)) (* (- 12) (* r r r s)))))
 (let ((?x1326 (* x00 x00)))
 (let ((?x1356 (* (- 108) ?x1326)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x1355 (* (- 16) ?x1164)))
 (let ((?x1036 (* s00 r00 r00 r00)))
 (let ((?x1351 (* (- 216) ?x1036)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x863 (* 432 ?x862)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1109 (* 108 ?x785)))
 (let ((?x727 (* s00 s00 r00 r00)))
 (let ((?x728 (* 36 ?x727)))
 (let ((?x662 (* s00 s00 r00)))
 (let ((?x992 (* 108 ?x662)))
 (let ((?x980 (* 36 ?x617)))
 (let ((?x1345 (* (- 51) ?x561)))
 (let ((?x844 (* (- 36) ?x535)))
 (let ((?x1342 (* (- 108) ?x492)))
 (let ((?x485 (* s00 r00 x00)))
 (let ((?x1341 (* (- 216) ?x485)))
 (let ((?x496 (* 54 ?x396)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1357 (+ ?x143 ?x967 ?x496 ?x1341 ?x1342 (* (- 15) ?x515) ?x844 ?x1345 (* 108 ?x587) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x980 (* 66 ?x658) ?x992 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x728 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1109 (* 108 (* s x)) (* (- 108) (* x x)) ?x863 (* 12 (* s s s00)) ?x1351 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1355 (* 216 (* x x00)) ?x1356)))
 (let (($x1358 (= ?x1357 0)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x680 (* (- 2) ?x662)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x544 (* 24 ?x396)))
 (let ((?x1059 (+ ?x143 ?x967 ?x491 (* 24 (* r s00)) ?x544 ?x529 ?x547 (* 54 ?x519) ?x844 (* 36 (* r x r00)) ?x896 (* 54 ?x587) (* (- 6) (* x s00)) ?x980 (* (- 54) ?x629) (* 4 (* s s r00)) (* 12 ?x658) ?x680 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x786 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x870 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1064 (= ?x1059 0)))
 (let ((?x670 (* s r00)))
 (let ((?x683 (* (- 9) ?x670)))
 (let ((?x511 (* 9 ?x396)))
 (let ((?x369 (* r s00)))
 (let ((?x655 (* 9 ?x369)))
 (let ((?x487 (* (- 9) ?x315)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x715 (+ ?x47 ?x348 ?x487 ?x655 ?x511 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 ?x683 ?x709)))
 (let (($x722 (= ?x715 0)))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x474 (* (- 6) ?x396)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x475 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x470 ?x471 (* 2 ?x315) (* (- 12) ?x321) (* 4 ?x369) ?x474 ?x440)))
 (let (($x476 (= ?x475 0)))
 (let (($x304 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x271)) 0)))
 (and $x304 $x476 $x722 $x1064 $x1358 (not (= (* ?x2048 ?x1571) 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let (($x858 (exists ((r Int) (s Int) (x Int) )(! (let ((?x47 (* 3 s)))
 (let ((?x1007 (* r00 r00 s00)))
 (let ((?x1008 (* 6 ?x1007)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x1459 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1690 (* r00 s00)))
 (let ((?x874 (* 9 ?x1690)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x1860 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x506 ?x874 ?x1459 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x574 (* 18 (* r00 (+ x (* (- 1) s)))) ?x348 ?x1008 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x803 (+ 3 s ?x213)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x911 (* (+ (* ?x1363 ?x803 ?x803 ?x803) (* (- 1) (* ?x1363 ?x1363 ?x803 ?x803))) ?x1860)))
 (let ((?x1326 (* x00 x00)))
 (let ((?x900 (* 108 ?x1326)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1585 (* 51 ?x561)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x955 (* 16 ?x1164)))
 (let ((?x785 (* s00 x00)))
 (let ((?x353 (* (- 108) ?x785)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1911 (* (- 432) ?x862)))
 (let ((?x1838 (* 108 ?x492)))
 (let ((?x906 (+ (* 216 (* r00 s00 x00)) ?x1838 (* (- 54) ?x1690) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1911 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x353 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x955 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1585 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1007) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x900)))
 (let ((?x143 (* 9 s)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x515 (* s s)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x729 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 ?x1690) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x786 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x870 ?x896 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x967 (* 36 ?x1007) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1613 (* r00 x)))
 (let ((?x1614 (* 18 ?x1613)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x1454 (+ (* (- 9) (* s r)) ?x506 ?x874 ?x516 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x574 ?x1614 ?x348 ?x1008 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x687 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x348 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1690) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let ((?x271 (* r00 r00)))
 (let ((?x850 (* (- 3) ?x271)))
 (let ((?x250 (* (- 1) s)))
 (and (= (+ s00 ?x250 (* 3 (* r r)) ?x850) 0) (= ?x687 0) (= ?x1454 0) (= ?x729 0) (= ?x906 0) (not (= ?x911 0))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x690 (lambda ((r Int) (s Int) (x Int) )(let ((?x709 (* (- 6) (* r s00 r00))))
 (let ((?x658 (* s s00)))
 (let ((?x659 (* 2 ?x658)))
 (let ((?x629 (* r x00)))
 (let ((?x642 (* (- 18) ?x629)))
 (let ((?x617 (* s00 r00 r00)))
 (let ((?x618 (* 6 ?x617)))
 (let ((?x587 (* x r00)))
 (let ((?x588 (* 18 ?x587)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x535 (* s r00 r00)))
 (let ((?x548 (* (- 6) ?x535)))
 (let ((?x524 (* 6 (* r s r00))))
 (let ((?x519 (* r x)))
 (let ((?x520 (* 18 ?x519)))
 (let ((?x515 (* s s)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x396 (* s00 r00)))
 (let ((?x1861 (* 3 ?x396)))
 (let ((?x321 (* r r00 r00)))
 (let ((?x1573 (* (- 36) ?x321)))
 (let ((?x271 (* r00 r00)))
 (let ((?x1564 (* (- 18) ?x271)))
 (let ((?x1683 (* (- 18) x00)))
 (let ((?x1563 (* (- 9) r00)))
 (let ((?x1759 (* 12 s00)))
 (let ((?x1491 (* 18 x)))
 (let ((?x1571 (+ (* 9 r) (* (- 12) s) ?x1491 ?x1759 ?x1563 ?x1683 (* 18 (* r r)) ?x1564 (* (- 3) (* r s)) ?x1573 (* 21 (* r s00)) ?x1861 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 (* (- 21) (* s r00)) ?x709 (* 36 (* r r r00)))))
 (let ((?x213 (* 6 r)))
 (let ((?x1366 (+ 3 ?x213 s)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x315 (* r s)))
 (let ((?x491 (* (- 24) ?x315)))
 (let ((?x2048 (+ (- 9) (* (- 54) r) (* (- 6) s) (* (- 117) (* r r)) ?x491 (* (- 1) ?x515) (* (- 2) (* r s s)) (* ?x1363 ?x1366 ?x1366 ?x1366) (* (- 1) (* r r s s)) (* (- 108) (* r r r)) (* (- 30) (* r r s)) (* (- 36) (* r r r r)) (* (- 12) (* r r r s)))))
 (let ((?x1326 (* x00 x00)))
 (let ((?x1356 (* (- 108) ?x1326)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x1355 (* (- 16) ?x1164)))
 (let ((?x1036 (* s00 r00 r00 r00)))
 (let ((?x1351 (* (- 216) ?x1036)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x863 (* 432 ?x862)))
 (let ((?x785 (* s00 x00)))
 (let ((?x1109 (* 108 ?x785)))
 (let ((?x727 (* s00 s00 r00 r00)))
 (let ((?x728 (* 36 ?x727)))
 (let ((?x662 (* s00 s00 r00)))
 (let ((?x992 (* 108 ?x662)))
 (let ((?x980 (* 36 ?x617)))
 (let ((?x1345 (* (- 51) ?x561)))
 (let ((?x844 (* (- 36) ?x535)))
 (let ((?x1342 (* (- 108) ?x492)))
 (let ((?x485 (* s00 r00 x00)))
 (let ((?x1341 (* (- 216) ?x485)))
 (let ((?x496 (* 54 ?x396)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x143 (* 9 s)))
 (let ((?x1357 (+ ?x143 ?x967 ?x496 ?x1341 ?x1342 (* (- 15) ?x515) ?x844 ?x1345 (* 108 ?x587) (* (- 108) (* x s00)) (* 216 (* s r00 r00 r00)) ?x980 (* 66 ?x658) ?x992 (* (- 54) (* s r00)) (* (- 108) (* s x00)) ?x728 (* (- 108) (* s s00 r00)) (* 4 (* s s s)) ?x1109 (* 108 (* s x)) (* (- 108) (* x x)) ?x863 (* 12 (* s s s00)) ?x1351 (* (- 432) (* x r00 r00 r00)) (* 216 (* x s00 r00)) (* (- 36) (* s s r00 r00)) ?x1355 (* 216 (* x x00)) ?x1356)))
 (let (($x1358 (= ?x1357 0)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x680 (* (- 2) ?x662)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x544 (* 24 ?x396)))
 (let ((?x1059 (+ ?x143 ?x967 ?x491 (* 24 (* r s00)) ?x544 ?x529 ?x547 (* 54 ?x519) ?x844 (* 36 (* r x r00)) ?x896 (* 54 ?x587) (* (- 6) (* x s00)) ?x980 (* (- 54) ?x629) (* 4 (* s s r00)) (* 12 ?x658) ?x680 (* (- 24) (* s r00)) (* (- 6) (* s x00)) (* (- 2) (* s s00 r00)) ?x786 (* 2 (* r s s)) (* 6 (* s x)) (* (- 4) (* r s00 s00)) ?x870 (* 2 (* r s s00)) (* (- 36) (* r r00 x00)) (* 36 (* x r00 r00)))))
 (let (($x1064 (= ?x1059 0)))
 (let ((?x670 (* s r00)))
 (let ((?x683 (* (- 9) ?x670)))
 (let ((?x511 (* 9 ?x396)))
 (let ((?x369 (* r s00)))
 (let ((?x655 (* 9 ?x369)))
 (let ((?x487 (* (- 9) ?x315)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x47 (* 3 s)))
 (let ((?x715 (+ ?x47 ?x348 ?x487 ?x655 ?x511 ?x506 ?x516 ?x520 ?x524 ?x548 ?x574 ?x588 ?x618 ?x642 ?x659 ?x683 ?x709)))
 (let (($x722 (= ?x715 0)))
 (let ((?x439 (* r00 r00 r00)))
 (let ((?x440 (* 12 ?x439)))
 (let ((?x474 (* (- 6) ?x396)))
 (let ((?x471 (* (- 6) x00)))
 (let ((?x470 (* (- 3) r00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x475 (+ ?x43 (* (- 3) s) ?x56 ?x44 ?x470 ?x471 (* 2 ?x315) (* (- 12) ?x321) (* 4 ?x369) ?x474 ?x440)))
 (let (($x476 (= ?x475 0)))
 (let (($x304 (= (+ s (* (- 1) s00) (* (- 3) (* r r)) (* 3 ?x271)) 0)))
 (let (($x942 (and $x304 $x476 $x722 $x1064 $x1358 (not (= (* ?x2048 ?x1571) 0)))))
 (let ((?x1007 (* r00 r00 s00)))
 (let ((?x1008 (* 6 ?x1007)))
 (let ((?x1690 (* r00 s00)))
 (let ((?x874 (* 9 ?x1690)))
 (let ((?x1860 (+ 9 (* (- 9) (* ?x1363 (+ 3 s ?x213))) ?x506 ?x874 (* 2 (* (+ 3 s ?x213) (+ 3 s ?x213))) (* 18 (* ?x1363 (+ x (* (- 1) s)))) (* 6 (* r00 ?x1363 (+ 3 s ?x213))) (* (- 6) (* r00 r00 (+ 3 s ?x213))) ?x574 (* 18 (* r00 (+ x (* (- 1) s)))) ?x348 ?x1008 (* (- 18) (* x00 ?x1363)) ?x47 (* 18 r) (* 9 (* s00 ?x1363)) (* 2 (* s00 (+ 3 s ?x213))) (* (- 9) (* r00 (+ 3 s ?x213))) (* (- 6) (* r00 s00 ?x1363)))))
 (let ((?x803 (+ 3 s ?x213)))
 (let ((?x911 (* (+ (* ?x1363 ?x803 ?x803 ?x803) (* (- 1) (* ?x1363 ?x1363 ?x803 ?x803))) ?x1860)))
 (let ((?x900 (* 108 ?x1326)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1585 (* 51 ?x561)))
 (let ((?x955 (* 16 ?x1164)))
 (let ((?x353 (* (- 108) ?x785)))
 (let ((?x1911 (* (- 432) ?x862)))
 (let ((?x1838 (* 108 ?x492)))
 (let ((?x906 (+ (* 216 (* r00 s00 x00)) ?x1838 (* (- 54) ?x1690) (* 15 ?x515) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1911 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x353 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x955 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1585 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1007) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x900)))
 (let ((?x729 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 ?x1690) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x786 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x870 ?x896 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x967 (* 36 ?x1007) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1613 (* r00 x)))
 (let ((?x1614 (* 18 ?x1613)))
 (let ((?x1454 (+ (* (- 9) (* s r)) ?x506 ?x874 ?x516 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x574 ?x1614 ?x348 ?x1008 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x687 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x348 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1690) (* (- 6) x) ?x59 (* (- 12) ?x439))))
 (let (($x585 (= (+ s00 (* (- 1) s) (* 3 (* r r)) (* (- 3) ?x271)) 0)))
 (let (($x461 (and $x585 (= ?x687 0) (= ?x1454 0) (= ?x729 0) (= ?x906 0) (not (= ?x911 0)))))
 (rewrite (= $x461 $x942)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x247 (exists ((r Int) (s Int) (x Int) )(! (let ((?x213 (* 6 r)))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 (- x s)) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 (- x s)))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x242 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- (* ?x212 ?x214 ?x214 ?x214) (* ?x212 ?x212 ?x214 ?x214)))))
 (let ((?x143 (* 9 s)))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x137 (* 9 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x47 (* 3 s)))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x59 (* 6 x00)))
 (let ((?x56 (* 6 x)))
 (let ((?x48 (* 3 r00)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x242 0)))))))))))))))))))))))))))))))))))))))))))))))) :qid k!35))
 ))
 (let ((?x1693 (lambda ((r Int) (s Int) (x Int) )(let ((?x47 (* 3 s)))
 (let ((?x1007 (* r00 r00 s00)))
 (let ((?x1008 (* 6 ?x1007)))
 (let ((?x348 (* (- 3) s00)))
 (let ((?x561 (* s00 s00)))
 (let ((?x574 (* (- 4) ?x561)))
 (let ((?x1459 (* 2 (* (+ 3 s (* 6 r)) (+ 3 s (* 6 r))))))
 (let ((?x1690 (* r00 s00)))
 (let ((?x874 (* 9 ?x1690)))
 (let ((?x492 (* r00 x00)))
 (let ((?x506 (* (- 18) ?x492)))
 (let ((?x1860 (+ 9 (* (- 9) (* (+ 1 r) (+ 3 s (* 6 r)))) ?x506 ?x874 ?x1459 (* 18 (* (+ 1 r) (+ x (* (- 1) s)))) (* 6 (* r00 (+ 1 r) (+ 3 s (* 6 r)))) (* (- 6) (* r00 r00 (+ 3 s (* 6 r)))) ?x574 (* 18 (* r00 (+ x (* (- 1) s)))) ?x348 ?x1008 (* (- 18) (* x00 (+ 1 r))) ?x47 (* 18 r) (* 9 (* s00 (+ 1 r))) (* 2 (* s00 (+ 3 s (* 6 r)))) (* (- 9) (* r00 (+ 3 s (* 6 r)))) (* (- 6) (* r00 s00 (+ 1 r))))))
 (let ((?x213 (* 6 r)))
 (let ((?x803 (+ 3 s ?x213)))
 (let ((?x1363 (+ 1 r)))
 (let ((?x911 (* (+ (* ?x1363 ?x803 ?x803 ?x803) (* (- 1) (* ?x1363 ?x1363 ?x803 ?x803))) ?x1860)))
 (let ((?x1326 (* x00 x00)))
 (let ((?x900 (* 108 ?x1326)))
 (let ((?x137 (* 9 s00)))
 (let ((?x1585 (* 51 ?x561)))
 (let ((?x1164 (* s00 s00 s00)))
 (let ((?x955 (* 16 ?x1164)))
 (let ((?x785 (* s00 x00)))
 (let ((?x353 (* (- 108) ?x785)))
 (let ((?x862 (* r00 r00 r00 x00)))
 (let ((?x1911 (* (- 432) ?x862)))
 (let ((?x1838 (* 108 ?x492)))
 (let ((?x906 (+ (* 216 (* r00 s00 x00)) ?x1838 (* (- 54) ?x1690) (* 15 (* s s)) (* (- 216) (* r00 r00 r00 s)) (* (- 36) (* r00 r00 s00 s00)) (* (- 4) (* s s s)) (* 108 (* x x)) ?x1911 (* (- 12) (* s00 s s)) (* 108 (* s00 x)) (* (- 108) (* r00 s00 s00)) (* 216 (* r00 r00 r00 s00)) (* 108 (* x00 s)) (* 432 (* r00 r00 r00 x)) (* (- 66) (* s00 s)) (* 108 (* r00 s00 s)) ?x353 (* (- 216) (* r00 s00 x)) (* 36 (* r00 r00 s s)) ?x955 (* (- 108) (* x s)) (* 36 (* r00 r00 s)) ?x1585 (* (- 108) (* r00 x)) ?x137 (* (- 36) ?x1007) (* (- 9) s) (* 54 (* r00 s)) (* (- 216) (* x00 x)) ?x900)))
 (let ((?x143 (* 9 s)))
 (let ((?x967 (* (- 9) s00)))
 (let ((?x896 (* (- 15) ?x561)))
 (let ((?x857 (* r00 r00 x00)))
 (let ((?x870 (* (- 36) ?x857)))
 (let ((?x786 (* 6 ?x785)))
 (let ((?x515 (* s s)))
 (let ((?x547 (* 3 ?x515)))
 (let ((?x529 (* (- 54) ?x492)))
 (let ((?x729 (+ (* (- 24) (* s r)) ?x529 (* 36 (* r00 x r)) (* 24 ?x1690) ?x547 (* 54 (* x r)) (* (- 6) (* s00 x)) (* 4 (* r00 s s)) (* (- 2) (* r00 s00 s00)) (* (- 6) (* x00 s)) (* 12 (* s00 s)) (* (- 2) (* r00 s00 s)) ?x786 (* 2 (* s s r)) (* 6 (* x s)) (* (- 4) (* s00 s00 r)) (* (- 36) (* r00 r00 s)) ?x870 ?x896 (* 2 (* s00 s r)) (* (- 36) (* r00 x00 r)) (* 54 (* r00 x)) ?x967 (* 36 ?x1007) (* (- 54) (* x00 r)) ?x143 (* 24 (* s00 r)) (* (- 24) (* r00 s)) (* 36 (* r00 r00 x)))))
 (let ((?x1613 (* r00 x)))
 (let ((?x1614 (* 18 ?x1613)))
 (let ((?x516 (* 2 ?x515)))
 (let ((?x1454 (+ (* (- 9) (* s r)) ?x506 ?x874 ?x516 (* 18 (* x r)) (* 6 (* r00 s r)) (* (- 6) (* r00 r00 s)) ?x574 ?x1614 ?x348 ?x1008 (* (- 18) (* x00 r)) ?x47 (* 9 (* s00 r)) (* 2 (* s00 s)) (* (- 9) (* r00 s)) (* (- 6) (* r00 s00 r)))))
 (let ((?x59 (* 6 x00)))
 (let ((?x48 (* 3 r00)))
 (let ((?x687 (+ (* (- 2) (* s r)) (* 12 (* r00 r00 r)) (* (- 3) r) ?x348 ?x47 ?x48 (* (- 4) (* s00 r)) (* 6 ?x1690) (* (- 6) x) ?x59 (* (- 12) (* r00 r00 r00)))))
 (let ((?x271 (* r00 r00)))
 (let ((?x850 (* (- 3) ?x271)))
 (let ((?x250 (* (- 1) s)))
 (let (($x461 (and (= (+ s00 ?x250 (* 3 (* r r)) ?x850) 0) (= ?x687 0) (= ?x1454 0) (= ?x729 0) (= ?x906 0) (not (= ?x911 0)))))
 (let ((?x214 (+ s ?x213 3)))
 (let ((?x212 (+ r 1)))
 (let ((?x82 (* 6 r00 r00 s00)))
 (let ((?x44 (* 3 s00)))
 (let ((?x76 (* 4 s00 s00)))
 (let ((?x70 (* 9 r00 s00)))
 (let ((?x221 (+ (- (* (- 9) ?x212 ?x214) (* 18 r00 x00)) ?x70 (* 2 ?x214 ?x214) (* 18 ?x212 (- x s)) (* 6 ?x212 r00 ?x214))))
 (let ((?x226 (+ (- (- ?x221 (* 6 r00 r00 ?x214)) ?x76) (* 18 r00 (- x s)))))
 (let ((?x234 (+ (- (+ (- ?x226 ?x44) ?x82) (* 18 ?x212 x00)) (* 3 ?x214) (* 9 ?x212 s00) (* 2 ?x214 s00))))
 (let ((?x242 (* (- (- ?x234 (* 9 r00 ?x214)) (* 6 ?x212 r00 s00)) (- (* ?x212 ?x214 ?x214 ?x214) (* ?x212 ?x212 ?x214 ?x214)))))
 (let ((?x139 (* 36 r00 r00 s00)))
 (let ((?x123 (* 36 r00 r00 s)))
 (let ((?x157 (- (+ (* 216 r00 s00 x00) (* 108 r00 x00)) (* 54 r00 s00))))
 (let ((?x164 (- (- (+ ?x157 (* 15 s s)) (* 216 r00 r00 r00 s)) (* 36 r00 r00 s00 s00))))
 (let ((?x171 (- (+ (- ?x164 (* 4 s s s)) (* 108 x x)) (* 432 r00 r00 r00 x00))))
 (let ((?x176 (- (+ (- ?x171 (* 12 s s s00)) (* 108 s00 x)) (* 108 r00 s00 s00))))
 (let ((?x180 (+ ?x176 (* 216 r00 r00 r00 s00) (* 108 s x00) (* 432 r00 r00 r00 x))))
 (let ((?x188 (- (+ (- ?x180 (* 66 s s00)) (* 108 r00 s s00)) (* 108 s00 x00))))
 (let ((?x193 (+ (- ?x188 (* 216 r00 s00 x)) (* 36 r00 r00 s s) (* 16 s00 s00 s00))))
 (let ((?x200 (- (+ (- ?x193 (* 108 s x)) ?x123 (* 51 s00 s00)) (* 108 r00 x))))
 (let ((?x207 (- (+ (- (- (+ ?x200 ?x137) ?x139) ?x143) (* 54 r00 s)) (* 216 x x00))))
 (let ((?x105 (+ (- (* (- 24) r s) (* 54 r00 x00)) (* 36 r r00 x) (* 24 r00 s00) (* 3 s s) (* 54 r x))))
 (let ((?x112 (- (+ (- ?x105 (* 6 s00 x)) (* 4 r00 s s)) (* 2 r00 s00 s00))))
 (let ((?x117 (- (+ (- ?x112 (* 6 s x00)) (* 12 s s00)) (* 2 r00 s s00))))
 (let ((?x121 (+ ?x117 (* 6 s00 x00) (* 2 r s s) (* 6 s x))))
 (let ((?x129 (- (- (- ?x121 (* 4 r s00 s00)) ?x123) (* 36 r00 r00 x00))))
 (let ((?x134 (- (+ (- ?x129 (* 15 s00 s00)) (* 2 r s s00)) (* 36 r r00 x00))))
 (let ((?x142 (- (+ (- (+ ?x134 (* 54 r00 x)) ?x137) ?x139) (* 54 r x00))))
 (let ((?x149 (+ (- (+ ?x142 ?x143 (* 24 r s00)) (* 24 r00 s)) (* 36 r00 r00 x))))
 (let ((?x74 (+ (- (* (- 9) r s) (* 18 r00 x00)) ?x70 (* 2 s s) (* 18 r x) (* 6 r r00 s))))
 (let ((?x80 (+ (- (- ?x74 (* 6 r00 r00 s)) ?x76) (* 18 r00 x))))
 (let ((?x88 (+ (- (+ (- ?x80 ?x44) ?x82) (* 18 r x00)) ?x47 (* 9 r s00) (* 2 s s00))))
 (let (($x93 (= (- (- ?x88 (* 9 r00 s)) (* 6 r r00 s00)) 0)))
 (let ((?x56 (* 6 x)))
 (let ((?x43 (* 3 r)))
 (let ((?x46 (- (- (+ (* (- 2) r s) (* 12 r r00 r00)) ?x43) ?x44)))
 (let ((?x55 (+ (- (+ ?x46 ?x47 ?x48) (* 4 r s00)) (* 6 r00 s00))))
 (let (($x36 (= (- (+ (- s00 s) (* 3 r r)) (* 3 r00 r00)) 0)))
 (let (($x246 (and $x36 (= (- (+ (- ?x55 ?x56) ?x59) (* 12 r00 r00 r00)) 0) $x93 (= ?x149 0) (= (+ ?x207 (* 108 x00 x00)) 0) (or (not (= ?x242 0))))))
 (rewrite (= $x246 $x461)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x248 (asserted $x247)))
 (let ((@x718 (mp (mp @x248 (quant-intro (proof-bind ?x1693) (= $x247 $x858)) $x858) (rewrite (= $x858 $x858)) $x858)))
 (let ((@x555 (mp~ (mp @x718 (quant-intro (proof-bind ?x690) (= $x858 $x550)) $x550) (sk (~ $x550 $x355)) $x355)))
 (let ((@x619 (mp @x555 (rewrite (= $x355 $x1492)) $x1492)))
 (let ((@x1881 (and-elim @x619 $x332)))
 (let ((@x330 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x332) $x624)) @x1881 $x624)))
 (let (($x602 (>= ?x928 0)))
 (let ((@x1448 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x332) $x602)) @x1881 $x602)))
 (let (($x847 (<= ?x1593 0)))
 (let ((@x905 (and-elim @x619 $x290)))
 (let ((@x1131 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x290) $x847)) @x905 $x847)))
 (let (($x1856 (>= ?x1593 0)))
 (let ((@x295 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x290) $x1856)) @x905 $x1856)))
 (let (($x1457 (<= ?x389 0)))
 (let ((@x2028 (and-elim @x619 $x392)))
 (let ((@x1799 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x392) $x1457)) @x2028 $x1457)))
 (let (($x1579 (>= ?x389 0)))
 (let ((@x510 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x392) $x1579)) @x2028 $x1579)))
 (let (($x1790 (not $x897)))
 (let ((@x1469 (hypothesis $x1790)))
 (let (($x1234 (not (<= ?x1490 0))))
 (let (($x1401 (>= ?x1490 0)))
 (let (($x2085 (>= ?x1263 0)))
 (let (($x1191 (not $x2085)))
 (let (($x883 (= ?x1263 0)))
 (let (($x336 (not $x883)))
 (let (($x334 (not $x1401)))
 (let ((@x521 (hypothesis $x334)))
 (let ((@x1452 ((_ th-lemma arith farkas 1 1 1) @x521 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x336 $x2085)) (hypothesis $x883) $x2085) (unit-resolution ((_ th-lemma arith triangle-eq) (or $x336 $x897)) (hypothesis $x883) $x897) false)))
 (let ((@x1066 ((_ th-lemma arith) @x521 @x1469 @x295 @x1131 @x510 @x1799 @x1448 @x330 @x295 @x1131 @x510 @x1799 @x295 @x1131 @x295 @x1131 @x1448 @x330 false)))
 (let ((@x1788 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x883 $x1790 $x1191)) (unit-resolution (lemma @x1066 (or $x897 $x1401)) @x521 $x897) (unit-resolution (lemma @x1452 (or $x336 $x1401)) @x521 $x336) $x1191)))
 (let ((@x774 ((_ th-lemma arith) @x521 @x1788 @x295 @x1131 @x510 @x1799 @x1448 @x330 @x295 @x1131 @x510 @x1799 @x295 @x1131 @x295 @x1131 @x1448 @x330 false)))
 (let ((@x579 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x1483 $x1234 $x334)) (and-elim @x619 $x325) (or $x1234 $x334))))
 (let ((@x509 (unit-resolution @x579 (lemma @x774 $x1401) $x1234)))
 (let ((@x499 ((_ th-lemma arith) @x509 @x1469 @x295 @x1131 @x510 @x1799 @x1448 @x330 @x295 @x1131 @x510 @x1799 @x295 @x1131 @x295 @x1131 @x1448 @x330 false)))
 (let ((@x1872 ((_ th-lemma arith) @x509 (hypothesis $x1191) @x295 @x1131 @x510 @x1799 @x1448 @x330 @x295 @x1131 @x510 @x1799 @x295 @x1131 @x295 @x1131 @x1448 @x330 false)))
 ((_ th-lemma arith farkas 1 1 1) @x509 (lemma @x1872 $x2085) (lemma @x499 $x897) false)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 7
 :arith-assert-diseq        4
 :arith-assert-lower        46
 :arith-assert-upper        56
 :arith-branch-var          4
 :arith-conflicts           6
 :arith-eq-adapter          8
 :arith-gcd-tests           21
 :arith-grobner             5
 :arith-ineq-splits         4
 :arith-max-min             1170
 :arith-nonlinear-bounds    34
 :arith-nonlinear-horner    45
 :arith-num-rows            9
 :arith-patches             8
 :arith-pivots              11
 :arith-pseudo-nonlinear    2
 :arith-row-summations      9
 :arith-tableau-max-columns 106
 :arith-tableau-max-rows    9
 :conflicts                 6
 :decisions                 39
 :del-clause                29
 :final-checks              20
 :max-memory                20.06
 :memory                    19.33
 :mk-bool-var               58
 :mk-clause                 29
 :num-allocs                5617001
 :num-checks                1
 :propagations              20
 :rlimit-count              287606
 :time                      0.10
 :total-time                0.12)
