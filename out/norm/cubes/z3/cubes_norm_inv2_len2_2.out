unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun m!1 () Int)
(declare-fun k!2 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x401 (+ m!1 (* (- 6) n!0))))
 (let (($x198 (<= ?x401 6)))
 (let (($x466 (= ?x401 6)))
 (let ((?x513 (+ m!1 k!2)))
 (let ((?x381 (+ 6 m!1)))
 (let ((?x170 (+ 1 n!0)))
 (let ((?x642 (+ c!3 k!2)))
 (let ((?x312 (* (- 18) (* ?x170 ?x381 ?x381 ?x381 ?x513 ?x513 ?x513 ?x642 ?x642 ?x642 ?x642))))
 (let ((?x640 (* (- 9) (* ?x170 ?x170 ?x381 ?x381 ?x381 ?x513 ?x513 ?x513 ?x642 ?x642 ?x642 ?x642))))
 (let ((?x326 (* (- 5) (* ?x170 ?x381 ?x381 ?x381 ?x513 ?x513 ?x513 ?x513 ?x642 ?x642 ?x642))))
 (let ((?x193 (* 9 (* ?x170 ?x170 ?x381 ?x381 ?x381 ?x513 ?x513 ?x513 ?x642 ?x642 ?x642))))
 (let ((?x409 (+ (* 4 (* ?x170 ?x381 ?x381 ?x381 ?x513 ?x513 ?x513 ?x642 ?x642 ?x642)) (* ?x170 ?x381 ?x381 ?x381 ?x513 ?x513 ?x513 ?x513 ?x513 ?x642 ?x642 ?x642) ?x193 (* 9 (* ?x170 ?x170 ?x170 ?x381 ?x381 ?x513 ?x513 ?x513 ?x642)) (* (- 4) (* ?x170 ?x170 ?x381 ?x381 ?x513 ?x513 ?x513)) ?x326 ?x640 ?x312 (* 18 (* ?x170 ?x170 ?x381 ?x381 ?x513 ?x513 ?x513 ?x642)) (* 5 (* ?x170 ?x170 ?x381 ?x381 ?x513 ?x513 ?x513 ?x513)) (* (- 9) (* ?x170 ?x170 ?x170 ?x381 ?x381 ?x513 ?x513 ?x513)) (* (- 1) (* ?x170 ?x170 ?x381 ?x381 ?x513 ?x513 ?x513 ?x513 ?x513)))))
 (let (($x610 (= ?x409 0)))
 (let (($x372 (not $x610)))
 (let ((?x277 (+ (* 3 (* n!0 n!0)) (* 3 n!0) (* (- 1) k!2))))
 (let (($x284 (= ?x277 (- 1))))
 (let ((?x233 (* (- 2) n!0)))
 (let ((?x223 (* 3 c!3)))
 (let ((?x292 (+ ?x223 (* (- 1) (* n!0 k!2)) ?x233 k!2)))
 (let (($x294 (= ?x292 1)))
 (let ((?x461 (* 5 k!2)))
 (let ((?x474 (* (- 9) n!0)))
 (let ((?x121 (* 18 c!3)))
 (let ((?x114 (* (- 1) (* k!2 k!2))))
 (let ((?x472 (* 9 (* c!3 n!0))))
 (let ((?x297 (+ ?x472 ?x114 ?x121 ?x474 ?x461)))
 (let (($x295 (= ?x297 4)))
 (let (($x616 (and $x466 $x295 $x294 $x284 $x372)))
 (let ((?x153 (+ k!2 m!1)))
 (let ((?x302 (* (- 18) (* ?x170 ?x381 ?x381 ?x381 ?x153 ?x153 ?x153 ?x642 ?x642 ?x642 ?x642))))
 (let ((?x135 (* (- 9) (* ?x170 ?x170 ?x381 ?x381 ?x381 ?x153 ?x153 ?x153 ?x642 ?x642 ?x642 ?x642))))
 (let ((?x641 (* 9 (* ?x170 ?x170 ?x381 ?x381 ?x381 ?x153 ?x153 ?x153 ?x642 ?x642 ?x642))))
 (let ((?x141 (* (- 5) (* ?x170 ?x381 ?x381 ?x381 ?x153 ?x153 ?x153 ?x153 ?x642 ?x642 ?x642))))
 (let ((?x142 (+ (* ?x170 ?x381 ?x381 ?x381 ?x153 ?x153 ?x153 ?x153 ?x153 ?x642 ?x642 ?x642) ?x141 (* 5 (* ?x170 ?x170 ?x381 ?x381 ?x153 ?x153 ?x153 ?x153)) ?x641 (* 4 (* ?x170 ?x381 ?x381 ?x381 ?x153 ?x153 ?x153 ?x642 ?x642 ?x642)) ?x135 (* (- 9) (* ?x170 ?x170 ?x170 ?x381 ?x381 ?x153 ?x153 ?x153)) (* 18 (* ?x170 ?x170 ?x381 ?x381 ?x153 ?x153 ?x153 ?x642)) (* 9 (* ?x170 ?x170 ?x170 ?x381 ?x381 ?x153 ?x153 ?x153 ?x642)) (* (- 4) (* ?x170 ?x170 ?x381 ?x381 ?x153 ?x153 ?x153)) (* (- 1) (* ?x170 ?x170 ?x381 ?x381 ?x153 ?x153 ?x153 ?x153 ?x153)) ?x302)))
 (let (($x543 (and $x466 (= (+ ?x121 ?x461 ?x474 ?x114 ?x472) 4) (= (+ ?x223 k!2 ?x233 (* (- 1) (* k!2 n!0))) 1) (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not (= ?x142 0)))))
 (let (($x263 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x648 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x676 (* (- 18) ?x648)))
 (let ((?x621 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x613 (* (- 1) ?x621)))
 (let ((?x457 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x351 (* (- 4) ?x457)))
 (let ((?x424 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x421 (* 9 ?x424)))
 (let ((?x411 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x604 (* 18 ?x411)))
 (let ((?x410 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x547 (* (- 9) ?x410)))
 (let ((?x211 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 9) ?x211)))
 (let ((?x209 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x210 (* 4 ?x209)))
 (let ((?x188 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x201 (* 9 ?x188)))
 (let ((?x165 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x178 (* 5 ?x165)))
 (let ((?x149 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x155 (* (- 5) ?x149)))
 (let ((?x101 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let (($x253 (= (+ ?x101 ?x155 ?x178 ?x201 ?x210 ?x180 ?x547 ?x604 ?x421 ?x351 ?x613 ?x676) 0)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 $x214 $x266 $x304 (not $x253))))))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let (($x120 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x424 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x621 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x648 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x101 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x211 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x188 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x149 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x222 (+ (* 5 ?x149) (* (- 5) (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70)) (* (- 9) ?x188) (* (- 4) (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 ?x211) (* (- 1) ?x101) (* 9 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)) (* 4 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)) (* 18 ?x648) ?x621 (* (- 18) (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)) (* (- 9) ?x424))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x140 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x140 $x271 (not (= ?x222 0))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x262 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x648 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x676 (* (- 18) ?x648)))
 (let ((?x621 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x613 (* (- 1) ?x621)))
 (let ((?x457 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x351 (* (- 4) ?x457)))
 (let ((?x424 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x421 (* 9 ?x424)))
 (let ((?x411 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x604 (* 18 ?x411)))
 (let ((?x410 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x547 (* (- 9) ?x410)))
 (let ((?x211 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 9) ?x211)))
 (let ((?x209 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x210 (* 4 ?x209)))
 (let ((?x188 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x201 (* 9 ?x188)))
 (let ((?x165 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x178 (* 5 ?x165)))
 (let ((?x149 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x155 (* (- 5) ?x149)))
 (let ((?x101 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let (($x253 (= (+ ?x101 ?x155 ?x178 ?x201 ?x210 ?x180 ?x547 ?x604 ?x421 ?x351 ?x613 ?x676) 0)))
 (let (($x304 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x266 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x214 (= (+ ?x40 ?x44 ?x216 ?x217 (* 9 (* c n))) 4)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x631 (and $x130 $x214 $x266 $x304 (not $x253))))
 (let ((?x222 (+ (* 5 ?x149) (* (- 5) ?x165) (* (- 9) ?x188) (* (- 4) ?x209) (* 9 ?x211) (* (- 1) ?x101) (* 9 ?x410) (* 4 ?x457) (* 18 ?x648) ?x621 (* (- 18) ?x411) (* (- 9) ?x424))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x140 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let (($x118 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x140 $x271 (not (= ?x222 0)))))
 (rewrite (= $x118 $x631)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x110 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x424 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x421 (* 9 ?x424)))
 (let ((?x411 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x604 (* 18 ?x411)))
 (let ((?x621 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x613 (* (- 1) ?x621)))
 (let ((?x648 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x676 (* (- 18) ?x648)))
 (let ((?x457 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x351 (* (- 4) ?x457)))
 (let ((?x410 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x547 (* (- 9) ?x410)))
 (let ((?x101 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x211 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 9) ?x211)))
 (let ((?x209 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x210 (* 4 ?x209)))
 (let ((?x188 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x201 (* 9 ?x188)))
 (let ((?x165 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x178 (* 5 ?x165)))
 (let ((?x149 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x155 (* (- 5) ?x149)))
 (let (($x438 (= (+ ?x155 ?x178 ?x201 ?x210 ?x180 ?x101 ?x547 ?x351 ?x676 ?x613 ?x604 ?x421) 0)))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x309 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x175 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (and $x130 (= ?x175 (- 4)) $x309 $x271 (not $x438)))))))))))))))))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x122 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x424 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x621 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x648 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x101 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x211 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x188 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x149 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x222 (+ (* 5 ?x149) (* (- 5) (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70)) (* (- 9) ?x188) (* (- 4) (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)) (* 9 ?x211) (* (- 1) ?x101) (* 9 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)) (* 4 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)) (* 18 ?x648) ?x621 (* (- 18) (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)) (* (- 9) ?x424))))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x140 (= (+ (* 3 c) (* (- 1) (* n k)) k (* (- 2) n)) 1)))
 (let ((?x49 (* k k)))
 (let ((?x217 (* (- 1) ?x49)))
 (let ((?x216 (* (- 9) n)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x118 (and $x130 (= (+ ?x40 (* 9 (* n c)) ?x44 ?x216 ?x217) 4) $x140 $x271 (not (= ?x222 0)))))
 (let ((?x421 (* 9 ?x424)))
 (let ((?x411 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x604 (* 18 ?x411)))
 (let ((?x613 (* (- 1) ?x621)))
 (let ((?x676 (* (- 18) ?x648)))
 (let ((?x457 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x351 (* (- 4) ?x457)))
 (let ((?x410 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x547 (* (- 9) ?x410)))
 (let ((?x180 (* (- 9) ?x211)))
 (let ((?x209 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x210 (* 4 ?x209)))
 (let ((?x201 (* 9 ?x188)))
 (let ((?x165 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x178 (* 5 ?x165)))
 (let ((?x155 (* (- 5) ?x149)))
 (let (($x438 (= (+ ?x155 ?x178 ?x201 ?x210 ?x180 ?x101 ?x547 ?x351 ?x676 ?x613 ?x604 ?x421) 0)))
 (let (($x309 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x48 (* 9 n)))
 (let ((?x175 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x186 (and $x130 (= ?x175 (- 4)) $x309 $x271 (not $x438))))
 (rewrite (= $x186 $x118)))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x97 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x70 (+ k m)))
 (let ((?x69 (+ c k)))
 (let ((?x78 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)))
 (let ((?x77 (+ ?x73 (* 5 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x81 (+ (- ?x77 ?x78) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x87 (- (- ?x81 (* 9 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 4 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x88 (- ?x87 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x92 (+ (- ?x88 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72)) (* 18 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x92 0)))))))))))))))))))))) :qid k!34))
 ))
 (let ((?x207 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x69 (+ c k)))
 (let ((?x70 (+ k m)))
 (let ((?x314 (+ 6 m)))
 (let ((?x317 (+ 1 n)))
 (let ((?x424 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x421 (* 9 ?x424)))
 (let ((?x411 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69)))
 (let ((?x604 (* 18 ?x411)))
 (let ((?x621 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x613 (* (- 1) ?x621)))
 (let ((?x648 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x676 (* (- 18) ?x648)))
 (let ((?x457 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x351 (* (- 4) ?x457)))
 (let ((?x410 (* ?x317 ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70)))
 (let ((?x547 (* (- 9) ?x410)))
 (let ((?x101 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x211 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69 ?x69)))
 (let ((?x180 (* (- 9) ?x211)))
 (let ((?x209 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x210 (* 4 ?x209)))
 (let ((?x188 (* ?x317 ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x201 (* 9 ?x188)))
 (let ((?x165 (* ?x317 ?x317 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70)))
 (let ((?x178 (* 5 ?x165)))
 (let ((?x149 (* ?x317 ?x314 ?x314 ?x314 ?x70 ?x70 ?x70 ?x70 ?x69 ?x69 ?x69)))
 (let ((?x155 (* (- 5) ?x149)))
 (let (($x438 (= (+ ?x155 ?x178 ?x201 ?x210 ?x180 ?x101 ?x547 ?x351 ?x676 ?x613 ?x604 ?x421) 0)))
 (let (($x271 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x309 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x175 (+ (* (- 18) c) (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49)))
 (let (($x130 (= (+ m (* (- 6) n)) 6)))
 (let (($x186 (and $x130 (= ?x175 (- 4)) $x309 $x271 (not $x438))))
 (let ((?x72 (+ n 1)))
 (let ((?x71 (+ m 6)))
 (let ((?x78 (* 9 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72)))
 (let ((?x73 (* (- 5) ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72)))
 (let ((?x77 (+ ?x73 (* 5 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72) (* 9 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72 ?x72) (* 4 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x81 (+ (- ?x77 ?x78) (* ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x87 (- (- ?x81 (* 9 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72)) (* 4 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72))))
 (let ((?x88 (- ?x87 (* 18 ?x69 ?x69 ?x69 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x71 ?x72))))
 (let ((?x92 (+ (- ?x88 (* ?x70 ?x70 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72)) (* 18 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72) (* 9 ?x69 ?x70 ?x70 ?x70 ?x71 ?x71 ?x72 ?x72 ?x72))))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x96 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x92 0))))))
 (rewrite (= $x96 $x186)))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x98 (asserted $x97)))
 (let ((@x182 (mp (mp @x98 (quant-intro (proof-bind ?x207) (= $x97 $x110)) $x110) (rewrite (= $x110 $x110)) $x110)))
 (let ((@x288 (mp (mp @x182 (quant-intro (proof-bind ?x122) (= $x110 $x120)) $x120) (quant-intro (proof-bind ?x262) (= $x120 $x263)) $x263)))
 (let ((@x637 (mp (mp~ @x288 (sk (~ $x263 $x543)) $x543) (rewrite (= $x543 $x616)) $x616)))
 (let ((@x348 (and-elim @x637 $x466)))
 (let ((@x458 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x466) $x198)) @x348 $x198)))
 (let (($x232 (>= ?x401 6)))
 (let ((@x545 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x466) $x232)) @x348 $x232)))
 (let (($x527 (<= ?x277 (- 1))))
 (let ((@x303 (and-elim @x637 $x284)))
 (let ((@x602 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x284) $x527)) @x303 $x527)))
 (let (($x416 (>= ?x277 (- 1))))
 (let ((@x322 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x284) $x416)) @x303 $x416)))
 (let (($x245 (<= ?x297 4)))
 (let ((@x291 (and-elim @x637 $x295)))
 (let ((@x311 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x295) $x245)) @x291 $x245)))
 (let (($x246 (>= ?x297 4)))
 (let ((@x374 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x295) $x246)) @x291 $x246)))
 (let (($x192 (<= ?x292 1)))
 (let ((@x310 (and-elim @x637 $x294)))
 (let ((@x248 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x294) $x192)) @x310 $x192)))
 (let (($x116 (>= ?x292 1)))
 (let ((@x603 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x294) $x116)) @x310 $x116)))
 (let (($x131 (not (<= ?x409 0))))
 (let (($x349 (>= ?x409 0)))
 (let ((@x318 ((_ th-lemma arith) (hypothesis (not $x349)) @x322 @x602 @x603 @x248 @x322 @x602 @x322 @x602 @x545 @x458 @x322 @x602 @x374 @x311 @x322 @x602 @x545 @x458 false)))
 (let ((@x229 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x610 $x131 (not $x349))) (and-elim @x637 $x372) (or $x131 (not $x349)))))
 ((_ th-lemma arith) (unit-resolution @x229 (lemma @x318 $x349) $x131) @x322 @x602 @x603 @x248 @x322 @x602 @x322 @x602 @x545 @x458 @x322 @x602 @x374 @x311 @x322 @x602 @x545 @x458 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 4
 :arith-assert-diseq        1
 :arith-assert-lower        13
 :arith-assert-upper        9
 :arith-branch-var          1
 :arith-conflicts           3
 :arith-eq-adapter          5
 :arith-gcd-tests           5
 :arith-grobner             2
 :arith-ineq-splits         1
 :arith-max-min             223
 :arith-nonlinear-bounds    6
 :arith-nonlinear-horner    16
 :arith-num-rows            9
 :arith-patches             4
 :arith-patches_succ        3
 :arith-pivots              6
 :arith-row-summations      6
 :arith-tableau-max-columns 43
 :arith-tableau-max-rows    9
 :conflicts                 3
 :decisions                 3
 :del-clause                16
 :final-checks              6
 :max-memory                3.77
 :memory                    3.18
 :mk-bool-var               23
 :mk-clause                 16
 :num-allocs                2335993
 :num-checks                1
 :propagations              11
 :rlimit-count              20733
 :time                      0.02
 :total-time                0.03)
