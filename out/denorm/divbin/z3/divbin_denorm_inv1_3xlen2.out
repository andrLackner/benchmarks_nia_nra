unsat
((set-logic NRA)
(declare-fun x!4 () Real)
(declare-fun b!6 () Real)
(declare-fun r!5 () Real)
(proof
(let ((?x1238 (* r!5 r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x1168 (* r!5 r!5 r!5 r!5 b!6 b!6 b!6 x!4 x!4 x!4 x!4)))
 (let ((?x1081 (* b00 x00 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x1001 (* r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x1000 (* r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x998 (* b00 x00 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x980 (* r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x963 (* b00 x00 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x856 (* b00 x00 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x838 (* r00 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x824 (* r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x603 (* r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x596 (* r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x590 (* b00 x00 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x587 (* r00 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x571 (* r00 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x570 (* r!5 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x563 (* r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x484 (* r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x469 (* r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x442 (* b00 x00 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x372 (* r00 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x294 (* r00 r!5 r!5 r!5 b!6 b!6 b!6 x!4 x!4 x!4 x!4)))
 (let ((?x287 (* r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4)))
 (let ((?x278 (* b00 x00 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4)))
 (let ((?x275 (* r00 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4)))
 (let ((?x260 (* r00 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x186 (* r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x170 (* r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x111 (* r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x98 (* b00 x00 r!5 r!5 r!5 b!6 b!6 b!6 x!4 x!4 x!4 x!4)))
 (let ((?x76 (* r00 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4 x!4 x!4 x!4 x!4 x!4)))
 (let ((?x1101 (+ (* 8.0 ?x76) (* (- 2.0) ?x98) (* (- 8.0) ?x111) ?x170 (* (/ 1.0 2.0) ?x186) (* (- 1.0) ?x260) (* (- 1.0) ?x275) (* (- 1.0) ?x278) ?x287 (* (- 2.0) ?x294) (* (- (/ 1.0 2.0)) ?x372) (* (- 1.0) ?x442) (* (/ 1.0 2.0) ?x469) ?x484 ?x563 (* (- 4.0) ?x570) (* 4.0 ?x571) (* 2.0 ?x587) (* 2.0 ?x590) (* (- 2.0) ?x596) (* (- 8.0) ?x603) (* (- 4.0) ?x824) (* 4.0 ?x838) (* 8.0 ?x856) (* 4.0 ?x963) (* (- 4.0) ?x980) (* 4.0 ?x998) (* (- 4.0) ?x1000) (* (- 2.0) ?x1001) (* (- (/ 1.0 2.0)) ?x1081) (* 2.0 ?x1168) (* 2.0 ?x1238))))
 (let (($x551 (>= ?x1101 0.0)))
 (let (($x282 (not $x551)))
 (let (($x569 (= 0.0 ?x1101)))
 (let (($x736 (not $x569)))
 (let ((@x1165 (symm (commutativity (= $x569 (= ?x1101 0.0))) (= (= ?x1101 0.0) $x569))))
 (let (($x511 (= ?x1101 0.0)))
 (let (($x289 (not $x511)))
 (let ((?x309 (* b!6 x!4)))
 (let ((?x80 (* b00 x00)))
 (let ((?x81 (* (- 1.0) ?x80)))
 (let ((?x97 (* (- 1.0) r00)))
 (let ((?x1055 (* b!6 b!6 b!6)))
 (let ((?x367 (* (/ 1.0 8.0) ?x1055)))
 (let ((?x388 (* (/ 1.0 2.0) b!6)))
 (let ((?x384 (* (- 1.0) r!5)))
 (let ((?x599 (* b!6 b!6 b!6 x!4 x!4 x!4)))
 (let ((?x393 (* r!5 b!6 b!6)))
 (let ((?x347 (* (- (/ 1.0 2.0)) ?x393)))
 (let ((?x485 (* (/ 1.0 2.0) (* r!5 r!5 b!6))))
 (let ((?x279 (+ (* (/ 3.0 4.0) (* b!6 b!6 b!6 x!4)) ?x485 ?x347 (* (/ 3.0 2.0) (* b!6 b!6 b!6 x!4 x!4)) (* (- 4.0) (* r!5 b!6 b!6 x!4 x!4 x!4)) (* 6.0 (* r!5 r!5 b!6 x!4 x!4)) ?x599 (* (- 6.0) (* r!5 b!6 b!6 x!4 x!4)) (* 4.0 (* r!5 r!5 b!6 x!4 x!4 x!4)) (* 3.0 (* r!5 r!5 b!6 x!4)) ?x384 ?x388 ?x367 (* (- 3.0) (* r!5 b!6 b!6 x!4)))))
 (let ((?x1070 (* r!5 b!6 b!6 x!4)))
 (let ((?x1107 (* (- (/ 1.0 8.0)) ?x1055)))
 (let ((?x457 (* (/ 1.0 8.0) (* r!5 r!5 r!5 b!6 b!6 b!6))))
 (let ((?x602 (* r!5 b!6 b!6 x!4 x!4)))
 (let ((?x444 (* (- (/ 3.0 16.0)) (* r!5 r!5 b!6 b!6 b!6 b!6))))
 (let ((?x433 (* (- (/ 1.0 64.0)) (* b!6 b!6 b!6 b!6 b!6 b!6))))
 (let ((?x992 (* (/ 3.0 32.0) (* r!5 b!6 b!6 b!6 b!6 b!6))))
 (let ((?x396 (* (/ 1.0 4.0) ?x393)))
 (let ((?x611 (+ (* (- (/ 1.0 16.0)) (* b!6 b!6 b!6 b!6 b!6 b!6 x!4)) (* (- (/ 1.0 2.0)) (* b!6 b!6 b!6 x!4)) ?x396 ?x992 ?x433 (* (- (/ 1.0 2.0)) (* b!6 b!6 b!6 x!4 x!4)) ?x444 (* (/ 1.0 2.0) (* r!5 r!5 r!5 b!6 b!6 b!6 x!4 x!4)) ?x602 (* (- (/ 1.0 16.0)) (* b!6 b!6 b!6 b!6 b!6 b!6 x!4 x!4)) (* (/ 1.0 2.0) (* r!5 r!5 r!5 b!6 b!6 b!6 x!4)) (* (- (/ 3.0 4.0)) (* r!5 r!5 b!6 b!6 b!6 b!6 x!4)) (* (/ 3.0 8.0) (* r!5 b!6 b!6 b!6 b!6 b!6 x!4)) ?x457 ?x1107 ?x1070 (* (- (/ 3.0 4.0)) (* r!5 r!5 b!6 b!6 b!6 b!6 x!4 x!4)) (* (/ 3.0 8.0) (* r!5 b!6 b!6 b!6 b!6 b!6 x!4 x!4)))))
 (let ((?x1052 (* (/ 1.0 4.0) (* b!6 b!6))))
 (let ((?x1053 (* (- (/ 1.0 2.0)) (* r!5 b!6))))
 (let ((?x584 (+ (* b!6 b!6 x!4 x!4) (* (- 2.0) (* r!5 b!6 x!4)) (* (- (/ 3.0 4.0)) (* b!6 b!6 b!6 x!4)) (* b!6 b!6 x!4) (* (- (/ 3.0 2.0)) (* b!6 b!6 b!6 x!4 x!4)) (* (- 2.0) (* r!5 b!6 x!4 x!4)) (* (- 1.0) ?x599) ?x1053 ?x1052 ?x1107)))
 (let (($x625 (= (* ?x584 ?x611 ?x279 (+ ?x97 ?x81 ?x309 r!5)) 0.0)))
 (let ((?x650 (+ ?x309 r!5 ?x97 ?x81)))
 (let (($x670 (= ?x650 0.0)))
 (let ((?x371 (+ r00 ?x80 (* (- 1.0) ?x309) ?x384)))
 (let (($x373 (= ?x371 0.0)))
 (let (($x244 (not $x625)))
 (let (($x480 (or $x289 $x244)))
 (let (($x1166 (and $x373 $x480)))
 (let ((?x943 (+ r!5 ?x97 ?x81 (* x!4 b!6))))
 (let ((?x1006 (* x!4 x!4 x!4 b!6 b!6 b!6)))
 (let ((?x326 (+ ?x384 ?x388 ?x1006 (* 4.0 (* x!4 x!4 x!4 r!5 r!5 b!6)) (* (- 6.0) (* x!4 x!4 r!5 b!6 b!6)) ?x485 (* (- 4.0) (* x!4 x!4 x!4 r!5 b!6 b!6)) ?x367 (* (/ 3.0 4.0) (* x!4 b!6 b!6 b!6)) (* (/ 3.0 2.0) (* x!4 x!4 b!6 b!6 b!6)) (* 3.0 (* x!4 r!5 r!5 b!6)) (* 6.0 (* x!4 x!4 r!5 r!5 b!6)) ?x347 (* (- 3.0) (* x!4 r!5 b!6 b!6)))))
 (let ((?x392 (* x!4 r!5 b!6 b!6)))
 (let ((?x443 (* x!4 x!4 r!5 b!6 b!6)))
 (let ((?x383 (+ (* (/ 1.0 2.0) (* x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6)) ?x443 ?x1107 (* (- (/ 1.0 2.0)) (* x!4 b!6 b!6 b!6)) (* (- (/ 1.0 2.0)) (* x!4 x!4 b!6 b!6 b!6)) ?x457 ?x444 ?x992 ?x433 (* (/ 1.0 2.0) (* x!4 r!5 r!5 r!5 b!6 b!6 b!6)) (* (- (/ 3.0 4.0)) (* x!4 r!5 r!5 b!6 b!6 b!6 b!6)) (* (/ 3.0 8.0) (* x!4 r!5 b!6 b!6 b!6 b!6 b!6)) (* (- (/ 1.0 16.0)) (* x!4 b!6 b!6 b!6 b!6 b!6 b!6)) (* (- (/ 3.0 4.0)) (* x!4 x!4 r!5 r!5 b!6 b!6 b!6 b!6)) (* (/ 3.0 8.0) (* x!4 x!4 r!5 b!6 b!6 b!6 b!6 b!6)) (* (- (/ 1.0 16.0)) (* x!4 x!4 b!6 b!6 b!6 b!6 b!6 b!6)) ?x396 ?x392)))
 (let ((?x478 (+ (* (- 2.0) (* x!4 x!4 r!5 b!6)) (* (- 1.0) ?x1006) (* x!4 x!4 b!6 b!6) (* x!4 b!6 b!6) (* (- 2.0) (* x!4 r!5 b!6)) ?x1052 ?x1053 ?x1107 (* (- (/ 3.0 4.0)) (* x!4 b!6 b!6 b!6)) (* (- (/ 3.0 2.0)) (* x!4 x!4 b!6 b!6 b!6)))))
 (let ((?x254 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x1169 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b00 x00)))
 (let ((?x320 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 r00)))
 (let ((?x1082 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x1119 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x198 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b00 x00)))
 (let ((?x598 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 r00)))
 (let ((?x118 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6)))
 (let ((?x956 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x952 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 b00 x00)))
 (let ((?x948 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6 r00)))
 (let ((?x951 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x1100 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x830 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b00 x00)))
 (let ((?x833 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 r00)))
 (let ((?x102 (* x!4 x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x106 (* x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x314 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b00 x00)))
 (let ((?x911 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 b!6 b!6 b!6 b!6 b!6 r00)))
 (let ((?x160 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x87 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6 b!6)))
 (let ((?x930 (* x!4 x!4 x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6 b00 x00)))
 (let ((?x935 (* x!4 x!4 x!4 x!4 r!5 r!5 r!5 b!6 b!6 b!6 r00)))
 (let ((?x931 (* x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6)))
 (let ((?x914 (* x!4 x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x934 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 b00 x00)))
 (let ((?x916 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6 r00)))
 (let ((?x939 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x913 (* x!4 x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b!6)))
 (let ((?x941 (* x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 b00 x00)))
 (let ((?x942 (* x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6 r00)))
 (let ((?x731 (* x!4 x!4 x!4 x!4 r!5 r!5 r!5 r!5 r!5 r!5 b!6 b!6 b!6 b!6)))
 (let ((?x481 (+ ?x731 (* (- 1.0) ?x942) (* (- 1.0) ?x941) ?x913 (* (/ 1.0 2.0) ?x939) (* (- (/ 1.0 2.0)) ?x916) (* (- (/ 1.0 2.0)) ?x934) (* (/ 1.0 2.0) ?x914) (* 2.0 ?x931) (* (- 2.0) ?x935) (* (- 2.0) ?x930) (* 2.0 ?x87) ?x160 (* (- 1.0) ?x911) (* (- 1.0) ?x314) ?x106 (* (- 4.0) ?x102) (* 4.0 ?x833) (* 4.0 ?x830) (* (- 4.0) ?x1100) (* (- 2.0) ?x951) (* 2.0 ?x948) (* 2.0 ?x952) (* (- 2.0) ?x956) (* (- 8.0) ?x118) (* 8.0 ?x598) (* 8.0 ?x198) (* (- 8.0) ?x1119) (* (- 4.0) ?x1082) (* 4.0 ?x320) (* 4.0 ?x1169) (* (- 4.0) ?x254))))
 (let (($x329 (and (= ?x943 0.0) (or (not (= ?x481 0.0)) (not (= (* ?x478 ?x383 ?x326 ?x943) 0.0))))))
 (let (($x147 (exists ((b Real) (r Real) (x Real) )(! (let ((?x108 (* x b)))
 (let ((?x80 (* b00 x00)))
 (let ((?x81 (* (- 1.0) ?x80)))
 (let ((?x97 (* (- 1.0) r00)))
 (let ((?x114 (+ r ?x97 ?x81 ?x108)))
 (let ((?x205 (* 4.0 (* x x x r r b))))
 (let ((?x159 (* x x x b b b)))
 (let ((?x110 (* (/ 1.0 2.0) b)))
 (let ((?x187 (* (- 1.0) r)))
 (let ((?x538 (+ ?x187 ?x110 ?x159 ?x205 (* (- 6.0) (* x x r b b)) (* (/ 1.0 2.0) (* r r b)) (* (- 4.0) (* x x x r b b)) (* (/ 1.0 8.0) (* b b b)) (* (/ 3.0 4.0) (* x b b b)) (* (/ 3.0 2.0) (* x x b b b)) (* 3.0 (* x r r b)) (* 6.0 (* x x r r b)) (* (- (/ 1.0 2.0)) (* r b b)) (* (- 3.0) (* x r b b)))))
 (let ((?x1072 (* x r b b)))
 (let ((?x574 (* b b b)))
 (let ((?x674 (* (- (/ 1.0 8.0)) ?x574)))
 (let ((?x196 (* x x r b b)))
 (let ((?x185 (* (/ 1.0 2.0) (* x x r r r b b b))))
 (let ((?x1143 (+ ?x185 ?x196 ?x674 (* (- (/ 1.0 2.0)) (* x b b b)) (* (- (/ 1.0 2.0)) (* x x b b b)) (* (/ 1.0 8.0) (* r r r b b b)) (* (- (/ 3.0 16.0)) (* r r b b b b)) (* (/ 3.0 32.0) (* r b b b b b)) (* (- (/ 1.0 64.0)) (* b b b b b b)) (* (/ 1.0 2.0) (* x r r r b b b)) (* (- (/ 3.0 4.0)) (* x r r b b b b)) (* (/ 3.0 8.0) (* x r b b b b b)) (* (- (/ 1.0 16.0)) (* x b b b b b b)) (* (- (/ 3.0 4.0)) (* x x r r b b b b)) (* (/ 3.0 8.0) (* x x r b b b b b)) (* (- (/ 1.0 16.0)) (* x x b b b b b b)) (* (/ 1.0 4.0) (* r b b)) ?x1072)))
 (let ((?x167 (* (- 1.0) ?x159)))
 (let ((?x148 (* (- 2.0) (* x x r b))))
 (let ((?x676 (+ ?x148 ?x167 (* x x b b) (* x b b) (* (- 2.0) (* x r b)) (* (/ 1.0 4.0) (* b b)) (* (- (/ 1.0 2.0)) (* r b)) ?x674 (* (- (/ 3.0 4.0)) (* x b b b)) (* (- (/ 3.0 2.0)) (* x x b b b)))))
 (let ((?x547 (* x x x x x x x x x r r r b b b b b b b)))
 (let ((?x537 (* x x x x x x x x r r r b b b b b b b00 x00)))
 (let ((?x527 (* x x x x x x x x r r r b b b b b b r00)))
 (let ((?x517 (* x x x x x x x x r r r r b b b b b b)))
 (let ((?x507 (* x x x x x x x x r r r r b b b b b)))
 (let ((?x497 (* x x x x x x x r r r r b b b b b00 x00)))
 (let ((?x487 (* x x x x x x x r r r r b b b b r00)))
 (let ((?x476 (* x x x x x x x r r r r r b b b b)))
 (let ((?x465 (* x x x x x x x x x r r r r r b b b b b b b b)))
 (let ((?x455 (* x x x x x x x x r r r r r b b b b b b b b00 x00)))
 (let ((?x445 (* x x x x x x x x r r r r r b b b b b b b r00)))
 (let ((?x435 (* x x x x x x x x r r r r r r b b b b b b b)))
 (let ((?x425 (* x x x x x x x x r r r r r r b b b b b b)))
 (let ((?x415 (* x x x x x x x r r r r r r b b b b b b00 x00)))
 (let ((?x405 (* x x x x x x x r r r r r r b b b b b r00)))
 (let ((?x395 (* x x x x x x x r r r r r r r b b b b b)))
 (let ((?x385 (* x x x x x x r r b b b b b b)))
 (let ((?x376 (* x x x x x r r b b b b b b00 x00)))
 (let ((?x366 (* x x x x x r r b b b b b r00)))
 (let ((?x357 (* x x x x x r r r b b b b b)))
 (let ((?x351 (* 2.0 (* x x x x x r r r b b b b))))
 (let ((?x341 (* (- 2.0) (* x x x x r r r b b b b00 x00))))
 (let ((?x331 (* (- 2.0) (* x x x x r r r b b b r00))))
 (let ((?x321 (* 2.0 (* x x x x r r r r b b b))))
 (let ((?x308 (* x x x x x x r r r r b b b b b b b)))
 (let ((?x298 (* x x x x x r r r r b b b b b b b00 x00)))
 (let ((?x288 (* x x x x x r r r r b b b b b b r00)))
 (let ((?x277 (* x x x x x r r r r r b b b b b b)))
 (let ((?x268 (* x x x x x r r r r r b b b b b)))
 (let ((?x259 (* x x x x r r r r r b b b b b00 x00)))
 (let ((?x249 (* x x x x r r r r r b b b b r00)))
 (let ((?x240 (* x x x x r r r r r r b b b b)))
 (let ((?x552 (+ ?x240 (* (- 1.0) ?x249) (* (- 1.0) ?x259) ?x268 (* (/ 1.0 2.0) ?x277) (* (- (/ 1.0 2.0)) ?x288) (* (- (/ 1.0 2.0)) ?x298) (* (/ 1.0 2.0) ?x308) ?x321 ?x331 ?x341 ?x351 ?x357 (* (- 1.0) ?x366) (* (- 1.0) ?x376) ?x385 (* (- 4.0) ?x395) (* 4.0 ?x405) (* 4.0 ?x415) (* (- 4.0) ?x425) (* (- 2.0) ?x435) (* 2.0 ?x445) (* 2.0 ?x455) (* (- 2.0) ?x465) (* (- 8.0) ?x476) (* 8.0 ?x487) (* 8.0 ?x497) (* (- 8.0) ?x507) (* (- 4.0) ?x517) (* 4.0 ?x527) (* 4.0 ?x537) (* (- 4.0) ?x547))))
 (let (($x113 (not (= ?x552 0.0))))
 (let (($x119 (= ?x114 0.0)))
 (and $x119 (or $x113 (not (= (* ?x676 ?x1143 ?x538 ?x114) 0.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!28))
 ))
 (let (($x502 (exists ((b Real) (r Real) (x Real) )(! (let ((?x97 (* (- 1.0) r00)))
 (let ((?x129 (* (- (/ 1.0 2.0)) b)))
 (let ((?x80 (* b00 x00)))
 (let ((?x81 (* (- 1.0) ?x80)))
 (let ((?x183 (+ ?x81 r ?x129 ?x97 (* (/ 1.0 2.0) (* (+ 1.0 (* 2.0 x)) b)))))
 (let ((?x358 (+ r ?x129)))
 (let ((?x54 (* 2.0 x)))
 (let ((?x315 (+ 1.0 ?x54)))
 (let ((?x110 (* (/ 1.0 2.0) b)))
 (let ((?x187 (* (- 1.0) r)))
 (let ((?x1126 (+ (* (/ 1.0 8.0) (* ?x315 ?x315 ?x358 ?x358 ?x358 b b b)) (* (/ 1.0 4.0) (* ?x315 ?x315 ?x358 b b)))))
 (let ((?x1089 (+ (* (- (/ 1.0 2.0)) (* ?x315 ?x315 ?x358 b)) (* (- (/ 1.0 8.0)) (* ?x315 ?x315 ?x315 b b b)))))
 (let ((?x365 (* ?x1089 ?x1126 (+ ?x187 ?x110 (* (/ 1.0 2.0) (* ?x315 ?x315 ?x315 ?x358 ?x358 b))) ?x183)))
 (let ((?x108 (* x b)))
 (let ((?x1109 (+ ?x81 r ?x97 ?x108)))
 (let ((?x196 (* x x r b b)))
 (let ((?x185 (* (/ 1.0 2.0) (* x x r r r b b b))))
 (let ((?x159 (* x x x b b b)))
 (let ((?x167 (* (- 1.0) ?x159)))
 (let ((?x148 (* (- 2.0) (* x x r b))))
 (let ((?x619 (* (+ ?x187 (* 4.0 (* x x x r r b))) (+ ?x148 ?x167) (+ ?x185 ?x196) ?x1109)))
 (and (= ?x1109 0.0) (or (not (= ?x619 0.0)) (not (= ?x365 0.0))))))))))))))))))))))))) :qid k!28))
 ))
 (let ((?x152 (lambda ((b Real) (r Real) (x Real) )(let ((?x108 (* x b)))
 (let ((?x80 (* b00 x00)))
 (let ((?x81 (* (- 1.0) ?x80)))
 (let ((?x97 (* (- 1.0) r00)))
 (let ((?x114 (+ r ?x97 ?x81 ?x108)))
 (let ((?x205 (* 4.0 (* x x x r r b))))
 (let ((?x159 (* x x x b b b)))
 (let ((?x110 (* (/ 1.0 2.0) b)))
 (let ((?x187 (* (- 1.0) r)))
 (let ((?x538 (+ ?x187 ?x110 ?x159 ?x205 (* (- 6.0) (* x x r b b)) (* (/ 1.0 2.0) (* r r b)) (* (- 4.0) (* x x x r b b)) (* (/ 1.0 8.0) (* b b b)) (* (/ 3.0 4.0) (* x b b b)) (* (/ 3.0 2.0) (* x x b b b)) (* 3.0 (* x r r b)) (* 6.0 (* x x r r b)) (* (- (/ 1.0 2.0)) (* r b b)) (* (- 3.0) (* x r b b)))))
 (let ((?x1072 (* x r b b)))
 (let ((?x574 (* b b b)))
 (let ((?x674 (* (- (/ 1.0 8.0)) ?x574)))
 (let ((?x196 (* x x r b b)))
 (let ((?x185 (* (/ 1.0 2.0) (* x x r r r b b b))))
 (let ((?x1143 (+ ?x185 ?x196 ?x674 (* (- (/ 1.0 2.0)) (* x b b b)) (* (- (/ 1.0 2.0)) (* x x b b b)) (* (/ 1.0 8.0) (* r r r b b b)) (* (- (/ 3.0 16.0)) (* r r b b b b)) (* (/ 3.0 32.0) (* r b b b b b)) (* (- (/ 1.0 64.0)) (* b b b b b b)) (* (/ 1.0 2.0) (* x r r r b b b)) (* (- (/ 3.0 4.0)) (* x r r b b b b)) (* (/ 3.0 8.0) (* x r b b b b b)) (* (- (/ 1.0 16.0)) (* x b b b b b b)) (* (- (/ 3.0 4.0)) (* x x r r b b b b)) (* (/ 3.0 8.0) (* x x r b b b b b)) (* (- (/ 1.0 16.0)) (* x x b b b b b b)) (* (/ 1.0 4.0) (* r b b)) ?x1072)))
 (let ((?x167 (* (- 1.0) ?x159)))
 (let ((?x148 (* (- 2.0) (* x x r b))))
 (let ((?x676 (+ ?x148 ?x167 (* x x b b) (* x b b) (* (- 2.0) (* x r b)) (* (/ 1.0 4.0) (* b b)) (* (- (/ 1.0 2.0)) (* r b)) ?x674 (* (- (/ 3.0 4.0)) (* x b b b)) (* (- (/ 3.0 2.0)) (* x x b b b)))))
 (let ((?x547 (* x x x x x x x x x r r r b b b b b b b)))
 (let ((?x537 (* x x x x x x x x r r r b b b b b b b00 x00)))
 (let ((?x527 (* x x x x x x x x r r r b b b b b b r00)))
 (let ((?x517 (* x x x x x x x x r r r r b b b b b b)))
 (let ((?x507 (* x x x x x x x x r r r r b b b b b)))
 (let ((?x497 (* x x x x x x x r r r r b b b b b00 x00)))
 (let ((?x487 (* x x x x x x x r r r r b b b b r00)))
 (let ((?x476 (* x x x x x x x r r r r r b b b b)))
 (let ((?x465 (* x x x x x x x x x r r r r r b b b b b b b b)))
 (let ((?x455 (* x x x x x x x x r r r r r b b b b b b b b00 x00)))
 (let ((?x445 (* x x x x x x x x r r r r r b b b b b b b r00)))
 (let ((?x435 (* x x x x x x x x r r r r r r b b b b b b b)))
 (let ((?x425 (* x x x x x x x x r r r r r r b b b b b b)))
 (let ((?x415 (* x x x x x x x r r r r r r b b b b b b00 x00)))
 (let ((?x405 (* x x x x x x x r r r r r r b b b b b r00)))
 (let ((?x395 (* x x x x x x x r r r r r r r b b b b b)))
 (let ((?x385 (* x x x x x x r r b b b b b b)))
 (let ((?x376 (* x x x x x r r b b b b b b00 x00)))
 (let ((?x366 (* x x x x x r r b b b b b r00)))
 (let ((?x357 (* x x x x x r r r b b b b b)))
 (let ((?x351 (* 2.0 (* x x x x x r r r b b b b))))
 (let ((?x341 (* (- 2.0) (* x x x x r r r b b b b00 x00))))
 (let ((?x331 (* (- 2.0) (* x x x x r r r b b b r00))))
 (let ((?x321 (* 2.0 (* x x x x r r r r b b b))))
 (let ((?x308 (* x x x x x x r r r r b b b b b b b)))
 (let ((?x298 (* x x x x x r r r r b b b b b b b00 x00)))
 (let ((?x288 (* x x x x x r r r r b b b b b b r00)))
 (let ((?x277 (* x x x x x r r r r r b b b b b b)))
 (let ((?x268 (* x x x x x r r r r r b b b b b)))
 (let ((?x259 (* x x x x r r r r r b b b b b00 x00)))
 (let ((?x249 (* x x x x r r r r r b b b b r00)))
 (let ((?x240 (* x x x x r r r r r r b b b b)))
 (let ((?x552 (+ ?x240 (* (- 1.0) ?x249) (* (- 1.0) ?x259) ?x268 (* (/ 1.0 2.0) ?x277) (* (- (/ 1.0 2.0)) ?x288) (* (- (/ 1.0 2.0)) ?x298) (* (/ 1.0 2.0) ?x308) ?x321 ?x331 ?x341 ?x351 ?x357 (* (- 1.0) ?x366) (* (- 1.0) ?x376) ?x385 (* (- 4.0) ?x395) (* 4.0 ?x405) (* 4.0 ?x415) (* (- 4.0) ?x425) (* (- 2.0) ?x435) (* 2.0 ?x445) (* 2.0 ?x455) (* (- 2.0) ?x465) (* (- 8.0) ?x476) (* 8.0 ?x487) (* 8.0 ?x497) (* (- 8.0) ?x507) (* (- 4.0) ?x517) (* 4.0 ?x527) (* 4.0 ?x537) (* (- 4.0) ?x547))))
 (let (($x113 (not (= ?x552 0.0))))
 (let (($x119 (= ?x114 0.0)))
 (let (($x1324 (and $x119 (or $x113 (not (= (* ?x676 ?x1143 ?x538 ?x114) 0.0))))))
 (let ((?x129 (* (- (/ 1.0 2.0)) b)))
 (let ((?x183 (+ ?x81 r ?x129 ?x97 (* (/ 1.0 2.0) (* (+ 1.0 (* 2.0 x)) b)))))
 (let ((?x358 (+ r ?x129)))
 (let ((?x54 (* 2.0 x)))
 (let ((?x315 (+ 1.0 ?x54)))
 (let ((?x1126 (+ (* (/ 1.0 8.0) (* ?x315 ?x315 ?x358 ?x358 ?x358 b b b)) (* (/ 1.0 4.0) (* ?x315 ?x315 ?x358 b b)))))
 (let ((?x1089 (+ (* (- (/ 1.0 2.0)) (* ?x315 ?x315 ?x358 b)) (* (- (/ 1.0 8.0)) (* ?x315 ?x315 ?x315 b b b)))))
 (let ((?x365 (* ?x1089 ?x1126 (+ ?x187 ?x110 (* (/ 1.0 2.0) (* ?x315 ?x315 ?x315 ?x358 ?x358 b))) ?x183)))
 (let ((?x1109 (+ ?x81 r ?x97 ?x108)))
 (let (($x125 (not (= (* (+ ?x187 ?x205) (+ ?x148 ?x167) (+ ?x185 ?x196) ?x1109) 0.0))))
 (let (($x409 (and (= ?x1109 0.0) (or $x125 (not (= ?x365 0.0))))))
 (rewrite (= $x409 $x1324)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x72 (exists ((b Real) (r Real) (x Real) )(! (let ((?x54 (* 2.0 x)))
 (let ((?x55 (+ ?x54 1.0)))
 (let ((?x36 (/ b 2.0)))
 (let ((?x51 (- r ?x36)))
 (let ((?x63 (+ (* ?x36 ?x36 ?x36 ?x51 ?x51 ?x51 ?x55 ?x55) (* ?x36 ?x36 ?x51 ?x55 ?x55))))
 (let ((?x60 (- (* (- 1.0) ?x36 ?x51 ?x55 ?x55) (* ?x36 ?x36 ?x36 ?x55 ?x55 ?x55))))
 (let ((?x67 (* (+ (- (+ (* (- 1.0) b00 x00) ?x51) r00) (* ?x36 ?x55)) ?x60 ?x63 (+ (* (- 1.0) ?x51) (* ?x36 ?x51 ?x51 ?x55 ?x55 ?x55)))))
 (let ((?x47 (+ (* (- 1.0) r) (* ?x36 r r 2.0 x 2.0 x 2.0 x))))
 (let ((?x44 (+ (* ?x36 ?x36 ?x36 r r r 2.0 x 2.0 x) (* ?x36 ?x36 r 2.0 x 2.0 x))))
 (let ((?x41 (- (* (- 1.0) ?x36 r 2.0 x 2.0 x) (* ?x36 ?x36 ?x36 2.0 x 2.0 x 2.0 x))))
 (let ((?x30 (- (+ (* (- 1.0) b00 x00) r) r00)))
 (let (($x70 (or (not (= (* (+ ?x30 (* ?x36 2.0 x)) ?x41 ?x44 ?x47) 0.0)) (not (= ?x67 0.0)))))
 (and (= (+ ?x30 (* b x)) 0.0) $x70))))))))))))) :qid k!28))
 ))
 (let ((?x164 (lambda ((b Real) (r Real) (x Real) )(let ((?x97 (* (- 1.0) r00)))
 (let ((?x129 (* (- (/ 1.0 2.0)) b)))
 (let ((?x80 (* b00 x00)))
 (let ((?x81 (* (- 1.0) ?x80)))
 (let ((?x183 (+ ?x81 r ?x129 ?x97 (* (/ 1.0 2.0) (* (+ 1.0 (* 2.0 x)) b)))))
 (let ((?x358 (+ r ?x129)))
 (let ((?x54 (* 2.0 x)))
 (let ((?x315 (+ 1.0 ?x54)))
 (let ((?x110 (* (/ 1.0 2.0) b)))
 (let ((?x187 (* (- 1.0) r)))
 (let ((?x1126 (+ (* (/ 1.0 8.0) (* ?x315 ?x315 ?x358 ?x358 ?x358 b b b)) (* (/ 1.0 4.0) (* ?x315 ?x315 ?x358 b b)))))
 (let ((?x1089 (+ (* (- (/ 1.0 2.0)) (* ?x315 ?x315 ?x358 b)) (* (- (/ 1.0 8.0)) (* ?x315 ?x315 ?x315 b b b)))))
 (let ((?x365 (* ?x1089 ?x1126 (+ ?x187 ?x110 (* (/ 1.0 2.0) (* ?x315 ?x315 ?x315 ?x358 ?x358 b))) ?x183)))
 (let ((?x108 (* x b)))
 (let ((?x1109 (+ ?x81 r ?x97 ?x108)))
 (let ((?x196 (* x x r b b)))
 (let ((?x185 (* (/ 1.0 2.0) (* x x r r r b b b))))
 (let ((?x159 (* x x x b b b)))
 (let ((?x167 (* (- 1.0) ?x159)))
 (let ((?x148 (* (- 2.0) (* x x r b))))
 (let ((?x619 (* (+ ?x187 (* 4.0 (* x x x r r b))) (+ ?x148 ?x167) (+ ?x185 ?x196) ?x1109)))
 (let (($x409 (and (= ?x1109 0.0) (or (not (= ?x619 0.0)) (not (= ?x365 0.0))))))
 (let ((?x55 (+ ?x54 1.0)))
 (let ((?x36 (/ b 2.0)))
 (let ((?x51 (- r ?x36)))
 (let ((?x63 (+ (* ?x36 ?x36 ?x36 ?x51 ?x51 ?x51 ?x55 ?x55) (* ?x36 ?x36 ?x51 ?x55 ?x55))))
 (let ((?x60 (- (* (- 1.0) ?x36 ?x51 ?x55 ?x55) (* ?x36 ?x36 ?x36 ?x55 ?x55 ?x55))))
 (let ((?x67 (* (+ (- (+ (* (- 1.0) b00 x00) ?x51) r00) (* ?x36 ?x55)) ?x60 ?x63 (+ (* (- 1.0) ?x51) (* ?x36 ?x51 ?x51 ?x55 ?x55 ?x55)))))
 (let ((?x47 (+ (* (- 1.0) r) (* ?x36 r r 2.0 x 2.0 x 2.0 x))))
 (let ((?x44 (+ (* ?x36 ?x36 ?x36 r r r 2.0 x 2.0 x) (* ?x36 ?x36 r 2.0 x 2.0 x))))
 (let ((?x41 (- (* (- 1.0) ?x36 r 2.0 x 2.0 x) (* ?x36 ?x36 ?x36 2.0 x 2.0 x 2.0 x))))
 (let ((?x30 (- (+ (* (- 1.0) b00 x00) r) r00)))
 (let (($x70 (or (not (= (* (+ ?x30 (* ?x36 2.0 x)) ?x41 ?x44 ?x47) 0.0)) (not (= ?x67 0.0)))))
 (let (($x71 (and (= (+ ?x30 (* b x)) 0.0) $x70)))
 (rewrite (= $x71 $x409)))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x73 (asserted $x72)))
 (let ((@x1114 (mp (mp @x73 (quant-intro (proof-bind ?x164) (= $x72 $x502)) $x502) (quant-intro (proof-bind ?x152) (= $x502 $x147)) $x147)))
 (let ((@x492 (mp (mp~ @x1114 (sk (~ $x147 $x329)) $x329) (rewrite (= $x329 $x1166)) $x1166)))
 (let ((@x675 (and-elim @x492 $x373)))
 (let (($x837 (<= ?x371 0.0)))
 (let (($x1033 (= 0.0 ?x371)))
 (let ((@x382 (mp @x675 (symm (commutativity (= $x1033 $x373)) (= $x373 $x1033)) $x1033)))
 (let ((@x232 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1033) $x837)) @x382 $x837)))
 (let (($x451 (>= ?x371 0.0)))
 (let ((@x286 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1033) $x451)) @x382 $x451)))
 (let (($x688 (<= ?x650 0.0)))
 (let (($x557 (>= ?x650 0.0)))
 (let ((@x154 ((_ th-lemma arith) (lemma ((_ th-lemma arith) @x232 (hypothesis (not $x557)) false) $x557) (lemma ((_ th-lemma arith) (hypothesis (not $x688)) @x286 false) $x688) @x286 @x232 (= ?x371 ?x650))))
 (let (($x516 (or (not $x670) $x625)))
 (let ((@x267 (unit-resolution ((_ th-lemma arith) $x516) (hypothesis $x244) (hypothesis $x670) false)))
 (let ((@x553 (unit-resolution (lemma @x267 $x516) (trans* (symm @x154 (= ?x650 ?x371)) @x675 $x670) $x625)))
 (let ((@x697 (mp (unit-resolution (and-elim @x492 $x480) @x553 $x289) (monotonicity @x1165 (= $x289 $x736)) $x736)))
 (let (($x491 (<= ?x1101 0.0)))
 (let ((@x589 (unit-resolution ((_ th-lemma arith) (or (not $x837) (not $x451) $x491)) @x232 @x286 (hypothesis (not $x491)) false)))
 (let ((@x304 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x569 (not $x491) $x282)) (lemma @x589 $x491) @x697 $x282)))
 (unit-resolution ((_ th-lemma arith) (or (not $x837) (not $x451) $x551)) @x232 @x286 @x304 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                      18
 :arith-eq-adapter               16
 :arith-bound-propagations-cheap 17
 :arith-conflicts                53
 :arith-diseq                    27
 :arith-fixed-eqs                1
 :arith-grobner-calls            3
 :arith-grobner-conflicts        2
 :arith-horner-calls             3
 :arith-lower                    43
 :arith-make-feasible            47
 :arith-max-columns              82
 :arith-max-rows                 7
 :arith-nla-explanations         14
 :arith-nla-lemmas               51
 :arith-propagations             17
 :arith-upper                    39
 :conflicts                      7
 :decisions                      54
 :del-clause                     52
 :final-checks                   21
 :max-memory                     4.96
 :memory                         1.14
 :mk-bool-var                    108
 :mk-clause                      71
 :num-allocs                     62674229552.00
 :num-checks                     1
 :propagations                   35
 :rlimit-count                   7668
 :time                           19.46
 :total-time                     19.47)
