unsat
((set-logic NIA)
(declare-fun y!2 () Int)
(declare-fun z!1 () Int)
(declare-fun x!3 () Int)
(declare-fun n!0 () Int)
(proof
(let ((?x4506 (* z!1 y!2)))
 (let ((?x837 (* 12 ?x4506)))
 (let ((?x4401 (* (- 72) y!2)))
 (let ((?x3707 (* z00 y00 y!2)))
 (let ((?x3516 (* y00 z!1)))
 (let ((?x624 (* (- 12) ?x3516)))
 (let ((?x1242 (* (- 18) (* x00 z!1))))
 (let ((?x1429 (* x!3 z!1)))
 (let ((?x1446 (* 18 ?x1429)))
 (let ((?x786 (* z00 y00 y00)))
 (let ((?x677 (* y00 y00)))
 (let ((?x739 (* 36 ?x677)))
 (let ((?x610 (* z00 y00)))
 (let ((?x726 (* 6 ?x610)))
 (let ((?x4009 (* (- 108) x!3)))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x1961 (+ ?x67 ?x74 (* (- 2) (* z00 y!2 y!2)) (* 18 (* y00 x00)) ?x4009 ?x726 ?x739 ?x786 (* (- 3) (* z00 z00 y00)) (* (- 1) (* z!1 y!2 y!2)) (* 3 (* z00 z00 x!3)) (* (- 3) (* z00 z00 x00)) ?x1446 ?x1242 (* (- 36) (* y00 y!2)) (* (- 3) (* z00 x00 z!1)) (* (- 6) (* z00 y!2)) (* (- 1) (* y00 z!1 y!2)) (* 18 (* x!3 y!2)) (* 3 (* z00 z00 y!2)) ?x624 (* 2 (* y00 y00 z!1)) (* (- 18) (* y00 x!3)) ?x3707 ?x4401 (* 3 (* z00 x!3 z!1)) ?x837 (* (- 18) (* x00 y!2)))))
 (let (($x4214 (<= ?x1961 0)))
 (let (($x1929 (= ?x1961 0)))
 (let ((?x1029 (+ x!3 y!2)))
 (let ((?x527 (+ z!1 y!2)))
 (let ((?x4390 (+ 6 z!1)))
 (let ((?x1307 (+ 1 n!0)))
 (let ((?x4264 (* (- 18) (* x00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x3947 (* 3 (* z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x3955 (* (- 2) (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x860 (* (- 19) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2150 (* (- 6) (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2153 (* (- 3) (* y00 z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x1657 (* 18 (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x1595 (* 6 (* y00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2747 (* 18 (* ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x754 (* 18 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x751 (* (- 1) (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x1983 (* 36 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x3969 (* 18 (* x00 y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x3929 (* (- 18) (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x3449 (* (- 12) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x3034 (* (- 1) (* y00 y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2251 (* (- 3) (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x3926 (* (- 3) (* x00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2249 (* (- 36) (* y00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2252 (* 18 (* ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x2433 (* (- 2) (* y00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2432 (* (- 1) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2743 (* x00 z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)))
 (let ((?x4863 (* (- 3) (* z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x1090 (* 36 (* y00 y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x982 (* 3 (* z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x774 (* 12 (* ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2029 (* x00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)))
 (let ((?x1707 (* 2 (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x1706 (* (- 3) (* x00 z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x1711 (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)))
 (let ((?x1411 (* 3 (* z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x1454 (* 18 (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x1456 (* (- 1) (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x1486 (* z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)))
 (let ((?x4105 (* 3 (* x00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x1314 (* y00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)))
 (let ((?x1290 (* y00 y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)))
 (let ((?x893 (* (- 1) (* ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x4789 (* (- 6) (* z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x4774 (* (- 12) (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x4471 (* 6 (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x1339 (* 36 (* z00 y00 x!3))))
 (let ((?x856 (* y00 z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)))
 (let ((?x3014 (* 3 (* x00 z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2178 (* 12 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2179 (* (- 18) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2311 (* (- 18) (* x00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x1504 (* (- 36) (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2134 (* (- 3) (* z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2137 (* 3 (* y00 z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029))))
 (let ((?x2135 (* (- 18) (* x00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x1257 (* 3 (* z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x1258 (* 2 (* y00 y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2012 (* (- 2) (* z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029))))
 (let ((?x2912 (+ (* 36 (* z00 z00 y!2 y!2)) (* 72 (* z00 y!2 y!2)) ?x2012 ?x1258 (* z00 y00 z!1 z!1 y!2) (* z00 y00 z!1 y!2 y!2) ?x1257 (* (- 18) (* z00 z00 y00 x!3)) (* 9 (* z00 z00 x!3 z!1 y!2)) (* 18 (* x00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* 108 (* x!3 x!3 y!2)) (* 72 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029)) (* 18 (* y00 x00 x!3 z!1)) ?x2135 ?x2137 (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029) (* (- 1) (* y00 z!1 z!1 z!1 y!2)) ?x2134 (* 18 (* x!3 x!3 z!1 y!2)) ?x1504 ?x2311 ?x2179 (* 18 (* z00 z00 x!3 z!1)) ?x2178 (* 54 (* z00 z00 x!3 y!2)) (* 72 (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029)) (* (- 18) (* z00 z!1 z!1 y!2)) (* 216 (* z!1 y!2 y!2)) ?x3014 (* (- 3) ?x856) ?x1339 (* (- 360) (* y00 y!2 y!2)) ?x4471 (* (- 108) (* x00 y!2 y!2)) (* 12 (* z00 y00 z!1 y!2)) (* (- 66) (* y00 z!1 y!2 y!2)) (* (- 84) (* y00 x!3 z!1 y!2)) (* (- 1) (* y00 z!1 z!1 y!2 y!2)) (* (- 108) (* z00 x00 y!2)) ?x4774 (* (- 468) (* y00 x!3 y!2)) (* (- 1) (* x!3 z!1 z!1 z!1 z!1)) (* (- 36) (* x00 x!3 z!1 z!1)) (* y00 y00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029) (* 6 (* z00 z00 z!1 y!2 y!2)) ?x4789 (* 3 (* z00 z00 x!3 z!1 z!1)) ?x893 (* 3 (* z00 z00 z!1 z!1 y!2)) (* (- 3) (* z00 z00 y00 x!3 z!1)) (* z00 y00 y00 z!1 y!2) ?x1290 (* 72 (* y!2 y!2 y!2)) (* 2 ?x1314) (* (- 72) (* ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029)) (* 60 (* x!3 z!1 z!1 y!2)) ?x4105 (* 108 (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* 3 ?x1486) (* 42 (* z00 x!3 z!1 y!2)) (* 18 (* y00 x00 z!1 y!2)) (* 180 (* z00 x!3 y!2)) (* 2 (* y00 y00 x!3 z!1 z!1)) (* (- 3) (* z00 x00 z!1 z!1 y!2)) (* (- 18) (* z00 x!3 z!1 z!1)) (* (- 60) (* y00 z!1 z!1 y!2)) (* 72 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* (- 18) (* x00 z!1 y!2 y!2)) (* 180 (* x!3 y!2 y!2)) (* 36 (* x!3 x!3 z!1 z!1)) (* (- 36) (* z00 x00 z!1 y!2)) ?x1456 (* (- 108) (* ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029 ?x1029)) (* 432 (* x!3 z!1 y!2)) (* 18 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029 ?x1029)) ?x1454 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x527 ?x1029 ?x1029) (* 18 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)) (* (- 1) (* z00 z!1 z!1 y!2 y!2)) ?x1411 (* 3 ?x1711) (* (- 1) (* y00 x!3 z!1 z!1 y!2)) (* (- 60) (* y00 x!3 z!1 z!1)) (* 108 (* y00 x00 y!2)) (* (- 108) (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029)) (* (- 36) (* z00 z!1 y!2)) (* 2 (* y00 y00 z!1 z!1 y!2)) (* 3 (* z00 x!3 x!3 z!1 z!1)) (* 2 (* z00 x!3 z!1 z!1 y!2)) (* (- 18) (* z00 z00 x00 x!3)) ?x1706 ?x1707 (* (- 108) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)) (* (- 1) (* z!1 z!1 z!1 z!1 y!2)) (* (- 12) (* z00 y!2 y!2 y!2)) (* (- 3) ?x2029) (* 36 (* x!3 z!1 z!1)) (* 36 (* z00 x!3 x!3 z!1)) (* (- 12) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* (- 1) (* z!1 z!1 y!2 y!2 y!2)) ?x774 ?x982 (* (- 2) (* x!3 z!1 z!1 z!1 y!2)) (* (- 12) (* z00 x!3 y!2 y!2)) (* 12 (* z00 y00 x!3 z!1)) ?x1090 (* 108 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029)) (* 108 (* z00 x!3 x!3)) (* (- 2) (* z00 z!1 z!1 z!1 y!2)) (* 108 (* x00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029 ?x1029)) (* (- 36) (* x00 z!1 z!1 y!2)) (* (- 18) (* z00 z00 y00 y!2)) ?x4863 (* (- 3) (* z00 z00 x00 z!1 y!2)) (* (- 36) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029)) (* (- 18) (* x00 x!3 z!1 y!2)) (* (- 2) (* z!1 z!1 z!1 y!2 y!2)) (* 288 (* y00 y00 y!2)) (* 6 (* z00 z!1 y!2 y!2)) (* (- 18) (* z00 z00 x00 y!2)) (* (- 108) (* x00 x!3 y!2)) (* 6 (* z00 y00 y00 x!3)) (* (- 324) (* y00 z!1 y!2)) (* (- 3) ?x2743) (* 60 (* y00 y00 z!1 y!2)) (* (- 18) (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* (- 18) (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029)) (* (- 18) (* y00 x!3 x!3 z!1)) (* 288 (* y00 y00 x!3)) ?x2432 (* (- 3) (* z00 z00 x00 x!3 z!1)) ?x2433 ?x2252 ?x2249 ?x3926 ?x2251 ?x3034 ?x3449 (* z00 y00 y00 x!3 z!1) (* (- 36) (* z00 x00 x!3 z!1)) ?x3929 ?x3969 (* 60 (* y00 y00 x!3 z!1)) (* 18 (* z00 z00 x!3 x!3)) (* 36 (* y00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) ?x1983 (* (- 2) (* z00 x!3 z!1 z!1 z!1)) (* (- 108) (* z00 x00 x!3)) (* (- 18) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)) (* 36 ?x3707) (* (- 72) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x527 ?x1029 ?x1029)) ?x751 ?x754 (* y00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029 ?x1029) (* 36 (* z!1 z!1 y!2)) (* 18 (* z00 z00 z!1 y!2)) ?x2747 (* z00 y00 x!3 z!1 y!2) (* 216 (* x!3 x!3 z!1)) (* 6 (* z!1 y!2 y!2 y!2)) (* (- 1) (* x!3 z!1 z!1 y!2 y!2)) (* (- 1) (* y00 x!3 z!1 z!1 z!1)) (* 6 (* z00 y00 x!3 y!2)) ?x1595 (* (- 108) (* y00 x!3 x!3)) ?x1657 (* 3 (* z00 z00 x!3 x!3 z!1)) (* (- 3) (* z00 z00 y00 z!1 y!2)) ?x2153 (* 12 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029)) (* (- 324) (* y00 x!3 z!1)) ?x2150 (* 6 (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* (- 6) (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029)) (* 24 (* z!1 z!1 y!2 y!2)) (* (- 216) (* x00 z!1 y!2)) (* (- 36) (* z00 x!3 z!1)) (* (- 2) (* z00 z!1 y!2 y!2 y!2)) (* 108 (* y00 x00 x!3)) (* 6 (* z00 y00 y00 y!2)) (* (- 2) (* z00 x!3 z!1 y!2 y!2)) (* (- 216) (* x00 x!3 z!1)) (* 6 (* z00 y00 y!2 y!2)) ?x860 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x527 ?x527 ?x527 ?x1029 ?x1029) (* z00 y00 x!3 z!1 z!1) (* 24 (* x!3 z!1 y!2 y!2)) ?x3955 (* (- 3) (* z00 x00 x!3 z!1 z!1)) ?x3947 (* (- 72) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x527 ?x1029 ?x1029 ?x1029)) ?x4264)))
 (let (($x2937 (= ?x2912 0)))
 (let (($x1974 (not $x2937)))
 (let ((?x2738 (* x!3 y!2)))
 (let ((?x3453 (* 108 ?x2738)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x4395 (* 108 (* x!3 x!3))))
 (let ((?x1311 (* y!2 y!2 y!2)))
 (let ((?x2536 (* (- 4) ?x1311)))
 (let ((?x1292 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1288 (* z00 z00 z00 y00)))
 (let ((?x1198 (* (- 36) (* z00 y00 x00))))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x997 (* z00 z00 x00)))
 (let ((?x1248 (* (- 18) ?x997)))
 (let ((?x869 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x824 (* y!2 y!2)))
 (let ((?x2736 (* 24 ?x824)))
 (let ((?x811 (* z00 z00 y00)))
 (let ((?x1349 (* (- 10) ?x811)))
 (let ((?x821 (* (- 12) ?x786)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x647 (* z00 x00)))
 (let ((?x565 (* 36 ?x647)))
 (let ((?x975 (* 24 ?x610)))
 (let ((?x557 (* y00 x00)))
 (let ((?x548 (* 216 ?x557)))
 (let ((?x428 (* z00 z00 y!2 y!2)))
 (let ((?x3679 (+ ?x428 (* (- 6) (* z00 y!2 y!2)) (* (- 2) (* z00 z00 z00 x!3)) (* (- 1) (* z00 z00 z00 y!2)) ?x548 ?x975 ?x565 ?x1148 ?x821 ?x1349 ?x2736 ?x869 ?x1339 (* (- 12) (* y00 y!2 y!2)) (* 18 (* z00 z00 x!3)) ?x1248 ?x1083 ?x1198 ?x1288 ?x1292 ?x2536 ?x4395 ?x1395 (* (- 120) (* y00 y!2)) (* (- 216) (* x00 x!3)) (* (- 24) (* z00 y!2)) (* (- 36) (* z00 x!3)) ?x3453 (* 10 (* z00 z00 y!2)) (* (- 216) (* y00 x!3)) (* 18 ?x3707) (* (- 108) (* x00 y!2)))))
 (let (($x715 (= ?x3679 0)))
 (let ((?x3256 (* z00 z00 y!2)))
 (let ((?x804 (* 24 ?x677)))
 (let ((?x885 (* (- 6) ?x610)))
 (let ((?x2007 (+ ?x67 ?x74 ?x4009 ?x885 (* (- 18) ?x647) ?x804 (* (- 1) ?x811) (* (- 12) ?x824) ?x1446 ?x1242 (* (- 12) (* y00 y!2)) (* (- 1) (* z00 z!1 y!2)) (* 6 (* z00 y!2)) (* 18 (* z00 x!3)) (* z00 y00 z!1) ?x3256 ?x624 ?x4401 ?x837)))
 (let (($x845 (= ?x2007 0)))
 (let ((?x469 (* z00 z00)))
 (let ((?x2317 (* (- 6) ?x469)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x3911 (+ ?x67 ?x55 ?x74 ?x2317 ?x4009 (* (- 18) ?x610) (* 6 (* z00 z!1)) (* (- 1) (* z00 z00 z!1)) (* 12 ?x3516) ?x4401 (* 6 ?x4506))))
 (let (($x4263 (= ?x3911 0)))
 (let ((?x4201 (* z!1 z!1)))
 (let ((?x2785 (* (- 1) ?x469)))
 (let ((?x43 (* 12 y00)))
 (let ((?x49 (* 6 z00)))
 (let ((?x3181 (+ ?x49 ?x43 ?x2785 (* (- 6) z!1) (* (- 12) y!2) ?x4201)))
 (let (($x2853 (= ?x3181 0)))
 (let ((?x1158 (* (- 6) n00)))
 (let ((?x807 (+ z00 ?x1158 (* (- 1) z!1) (* 6 n!0))))
 (let (($x2088 (= ?x807 0)))
 (let (($x429 (and $x2088 $x2853 $x4263 $x845 $x1929 $x715 $x1974)))
 (let ((?x1030 (+ y!2 z!1)))
 (let ((?x4344 (* (- 1) (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x775 (* (- 12) (* ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1272 (* (- 3) (* z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x2011 (* 3 (* x00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x3925 (* (- 18) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x3137 (* (- 18) (* ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x3140 (* 2 (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x3148 (* (- 6) (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x1208 (* 18 (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x2708 (* (- 18) (* x00 y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1122 (* x!3 z!1 z!1 z!1 z!1)))
 (let ((?x2819 (* (- 3) (* x00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x2934 (* (- 3) (* x00 z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x2971 (* 19 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x4534 (* (- 1) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x1774 (* 2 (* y00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x4261 (* 36 (* y00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x1980 (* 6 (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x3631 (* 12 (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x2057 (* 3 (* z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x2054 (* 18 (* x00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x2053 (* (- 12) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x2041 (* (- 1) (* y00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x2026 (* 3 (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1827 (* (- 1) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x1906 (* (- 36) (* y00 y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x4269 (* 12 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x3624 (* (- 1) (* y00 y00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1658 (* (- 36) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x420 (* (- 18) (* ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x1598 (* 18 (* x00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x4593 (* (- 3) (* z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029 ?x1029))))
 (let ((?x4587 (* (- 3) (* z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x4696 (* (- 3) (* z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1790 (* (- 18) (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x2018 (* 3 (* x00 z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x2106 (* (- 6) (* y00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1363 (* 36 (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x3527 (* 18 (* x00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x1175 (* (- 3) (* y00 z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x1702 (* 3 (* y00 z00 z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x728 (* (- 2) (* y00 y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1428 (* 18 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1364 (* 3 (* z00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x2283 (* (- 2) (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x1037 (* (- 18) (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029))))
 (let ((?x445 (* 6 (* z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x606 (* 2 (* z00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029))))
 (let ((?x1940 (+ (* 36 (* y!2 z!1 z00)) (* (- 216) (* y!2 y!2 z!1)) (* (- 36) (* y!2 y!2 z00 z00)) ?x606 (* (- 2) ?x1314) (* 18 (* x!3 z00 z00 x00)) ?x445 (* ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029) (* (- 72) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) ?x1037 ?x2283 (* 72 (* ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029)) (* (- 18) (* x00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) ?x1364 (* 72 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029)) (* (- 108) (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) ?x1428 (* (- 36) (* y!2 z00 y00)) ?x728 (* (- 36) (* x!3 x!3 z!1 z!1)) ?x1702 (* (- 60) (* x!3 y!2 z!1 z!1)) (* 36 (* x!3 z!1 z!1 x00)) (* (- 24) (* y!2 y!2 z!1 z!1)) ?x1175 (* (- 72) ?x1311) (* 36 (* x!3 z!1 z00)) (* 36 (* y!2 z!1 z!1 x00)) (* (- 72) (* y!2 y!2 z00)) ?x3527 ?x1363 (* 18 (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* 3 ?x2743) (* (- 216) (* x!3 x!3 z!1)) (* 324 (* y!2 z!1 y00)) (* (- 36) (* y00 y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* (- 432) (* x!3 y!2 z!1)) (* 108 (* ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029 ?x1029)) (* (- 18) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029 ?x1029)) ?x2106 (* 360 (* y!2 y!2 y00)) ?x2018 ?x1790 (* 18 (* y!2 y!2 z!1 x00)) (* 3 ?x856) (* (- 12) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029)) (* 324 (* x!3 z!1 y00)) ?x4696 ?x4587 (* (- 36) (* x!3 z00 y00)) (* 72 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029)) ?x4593 (* (- 288) (* y!2 y00 y00)) (* 108 (* x!3 z00 x00)) (* 3 (* y!2 z!1 z00 z00 y00)) ?x1598 (* 3 (* x!3 z!1 z!1 z00 x00)) (* (- 18) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)) (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029) (* (- 288) (* x!3 y00 y00)) ?x420 ?x1658 ?x3624 ?x4269 (* 108 (* y!2 z00 x00)) ?x1906 (* (- 60) (* y!2 z!1 y00 y00)) (* (- 60) (* x!3 z!1 y00 y00)) (* (- 9) (* x!3 y!2 z!1 z00 z00)) (* (- 6) (* y!2 y!2 z!1 z00 z00)) (* (- 3) (* x!3 z!1 z!1 z00 z00)) (* (- 3) (* y!2 z!1 z!1 z00 z00)) (* 108 (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)) (* 36 (* x!3 z!1 z00 x00)) (* 12 (* y!2 y!2 y!2 z00)) (* 3 (* y!2 z!1 z!1 z00 x00)) (* 36 (* y!2 z!1 z00 x00)) ?x1827 (* 3 (* x!3 z!1 z00 z00 x00)) (* (- 72) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029)) (* 108 (* y!2 y!2 x00)) (* 3 ?x2029) ?x2026 (* 18 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029 ?x1029)) (* (- 36) (* x!3 z!1 z!1)) (* (- 36) (* y!2 z!1 z!1)) ?x2041 (* (- 18) (* y!2 z!1 z00 z00)) (* (- 18) (* x!3 z!1 z00 z00)) (* (- 54) (* x!3 y!2 z00 z00)) (* (- 3) ?x1711) ?x2053 ?x2054 ?x2057 (* 3 (* x!3 z!1 z00 z00 y00)) (* 18 (* x!3 z00 z00 y00)) ?x3631 (* (- 6) (* x!3 z00 y00 y00)) (* (- 108) (* x!3 y00 x00)) (* 18 (* y!2 z00 z00 y00)) (* (- 1) (* x!3 z!1 z00 y00 y00)) (* (- 1) (* y!2 z!1 z00 y00 y00)) (* (- 3) (* x!3 x!3 z!1 z00 z00)) ?x1980 (* (- 6) (* y!2 z00 y00 y00)) ?x4261 (* 60 (* y!2 z!1 z!1 y00)) (* (- 18) (* x!3 x!3 z00 z00)) ?x1774 (* 3 (* y!2 z!1 z00 z00 x00)) (* 18 (* y!2 z00 z00 x00)) (* (- 108) (* y!2 y00 x00)) ?x4534 (* 18 (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029)) (* 60 (* x!3 z!1 z!1 y00)) (* 66 (* y!2 y!2 z!1 y00)) (* 84 (* x!3 y!2 z!1 y00)) (* 468 (* x!3 y!2 y00)) (* 18 (* x!3 y!2 z!1 x00)) ?x2971 (* (- 18) (* x!3 z!1 y00 x00)) (* (- 18) (* y!2 z!1 y00 x00)) (* x!3 y!2 z!1 z!1 y00) (* y!2 y!2 z!1 z!1 y00) (* x!3 z!1 z!1 z!1 y00) (* y!2 z!1 z!1 z!1 y00) (* (- 42) (* x!3 y!2 z!1 z00)) (* (- 6) (* y!2 y!2 z!1 z00)) (* 18 (* x!3 z!1 z!1 z00)) (* 18 (* y!2 z!1 z!1 z00)) ?x2934 ?x2819 (* y00 y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029) (* (- 36) (* x!3 x!3 z!1 z00)) (* y!2 y!2 z!1 z!1 z00) (* (- 2) (* x!3 y!2 z!1 z!1 z00)) (* (- 3) (* x!3 x!3 z!1 z!1 z00)) (* (- 2) (* x!3 z!1 z!1 y00 y00)) (* (- 2) (* y!2 z!1 z!1 y00 y00)) (* (- 180) (* x!3 y!2 z00)) (* (- 108) (* x!3 x!3 z00)) (* (- 1) ?x1290) (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029) (* x!3 y!2 y!2 z!1 z!1) (* (- 108) (* ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029)) (* 2 (* x!3 y!2 z!1 z!1 z!1)) (* y!2 y!2 y!2 z!1 z!1) ?x1122 ?x2708 ?x1208 (* 108 (* x!3 y!2 x00)) (* 12 (* x!3 y!2 y!2 z00)) ?x3148 (* (- 6) (* y!2 y!2 y!2 z!1)) (* (- 24) (* x!3 y!2 y!2 z!1)) ?x3140 ?x3137 (* (- 12) (* y!2 z!1 z00 y00)) (* 36 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029)) (* (- 12) (* x!3 z!1 z00 y00)) (* 2 (* y!2 y!2 z!1 z!1 z!1)) (* y!2 z!1 z!1 z!1 z!1) (* (- 180) (* x!3 y!2 y!2)) (* (- 3) ?x1486) (* (- 6) (* y00 z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) (* 18 (* x!3 x!3 z!1 y00)) (* 216 (* x!3 z!1 x00)) (* 216 (* y!2 z!1 x00)) (* 6 (* z00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1029 ?x1029 ?x1029)) ?x3925 (* 2 (* y!2 y!2 y!2 z!1 z00)) (* 2 (* x!3 y!2 y!2 z!1 z00)) (* 12 (* y00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x4390 ?x1029 ?x1029 ?x1029)) ?x2011 (* 108 (* x!3 x!3 y00)) ?x1272 (* (- 1) (* x!3 z!1 z!1 z00 y00)) (* (- 1) (* y!2 z!1 z!1 z00 y00)) (* (- 1) (* y!2 y!2 z!1 z00 y00)) (* (- 1) (* x!3 y!2 z!1 z00 y00)) (* (- 6) (* y!2 y!2 z00 y00)) (* (- 6) (* x!3 y!2 z00 y00)) ?x775 (* 2 (* x!3 z!1 z!1 z!1 z00)) (* 2 (* y!2 z!1 z!1 z!1 z00)) (* (- 108) (* x!3 x!3 y!2)) (* (- 108) (* x00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029)) ?x4344 (* (- 18) (* x!3 x!3 y!2 z!1)) (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029) (* 108 (* x00 ?x1307 ?x1307 ?x1307 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029)) (* (- 72) (* y00 ?x1307 ?x4390 ?x4390 ?x4390 ?x1030 ?x1030 ?x1029 ?x1029 ?x1029)))))
 (let ((?x1383 (* y!2 y!2 z00 z00)))
 (let ((?x1577 (+ (* 10 (* y!2 z00 z00)) ?x1383 (* (- 1) (* y!2 z00 z00 z00)) ?x548 (* (- 2) (* x!3 z00 z00 z00)) ?x3453 ?x975 ?x565 ?x2736 ?x1148 (* (- 120) (* y!2 y00)) (* 18 (* x!3 z00 z00)) (* (- 24) (* y!2 z00)) ?x821 ?x1349 (* (- 36) (* x!3 z00)) (* 18 (* y!2 z00 y00)) ?x869 ?x4395 ?x2536 (* (- 6) (* y!2 y!2 z00)) (* (- 108) (* y!2 x00)) ?x1248 (* (- 216) (* x!3 y00)) ?x1083 (* (- 12) (* y!2 y!2 y00)) ?x1198 (* (- 216) (* x!3 x00)) ?x1288 ?x1292 (* 36 (* x!3 z00 y00)) ?x1395)))
 (let ((?x1971 (* y!2 z!1 y00)))
 (let ((?x998 (* 3 ?x997)))
 (let ((?x1060 (* 3 ?x811)))
 (let ((?x793 (* (- 1) ?x786)))
 (let ((?x509 (* 18 (* z!1 x00))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x1574 (* z!1 y00)))
 (let ((?x3529 (* 12 ?x1574)))
 (let ((?x2062 (* (- 18) ?x1429)))
 (let ((?x558 (* (- 18) ?x557)))
 (let ((?x436 (* y!2 z!1)))
 (let ((?x2377 (* (- 12) ?x436)))
 (let ((?x2741 (* y!2 y!2 z!1)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x4141 (* 72 y!2)))
 (let ((?x444 (* 108 x!3)))
 (let ((?x4115 (+ ?x444 ?x4141 ?x632 ?x689 (* (- 3) (* y!2 z00 z00)) ?x2741 ?x2377 ?x558 (* (- 18) ?x2738) ?x2062 ?x3529 ?x885 ?x980 ?x509 (* 36 (* y!2 y00)) (* (- 3) (* x!3 z00 z00)) (* 6 (* y!2 z00)) ?x793 ?x1060 (* 3 (* z!1 z00 x00)) (* (- 1) (* y!2 z00 y00)) (* (- 3) (* x!3 z!1 z00)) (* 2 (* y!2 y!2 z00)) (* 18 (* y!2 x00)) ?x998 (* 18 (* x!3 y00)) ?x1971 (* (- 2) (* z!1 y00 y00)))))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x3370 (* y!2 z!1 z00)))
 (let ((?x2751 (+ ?x444 ?x4141 ?x632 ?x689 ?x3370 (* (- 1) (* y!2 z00 z00)) (* (- 1) (* z!1 z00 y00)) ?x2377 ?x2062 ?x3529 ?x726 ?x648 (* 12 ?x824) ?x706 ?x509 (* 12 (* y!2 y00)) (* (- 6) (* y!2 z00)) ?x811 (* (- 18) (* x!3 z00)))))
 (let ((?x611 (* 18 ?x610)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x2502 (+ ?x444 ?x4141 ?x632 ?x562 ?x689 (* z!1 z00 z00) ?x573 (* (- 6) ?x436) (* (- 12) ?x1574) ?x611 (* (- 6) (* z!1 z00)))))
 (let ((?x540 (* (- 12) y00)))
 (let ((?x539 (* (- 6) z00)))
 (let (($x2279 (= (+ (* 12 y!2) (* 6 z!1) ?x539 ?x540 (* (- 1) ?x4201) ?x469) 0)))
 (let (($x1936 (and (= (+ z!1 (* (- 6) n!0) (* (- 1) z00) (* 6 n00)) 0) $x2279 (= ?x2502 0) (= ?x2751 0) (= ?x4115 0) (= ?x1577 0) (not (= ?x1940 0)))))
 (let (($x2388 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x4782 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3007 (* (- 72) ?x4782)))
 (let ((?x4694 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4698 (* 108 ?x4694)))
 (let ((?x4669 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4461 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4448 (* (- 1) ?x4461)))
 (let ((?x4434 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4421 (* (- 108) ?x4434)))
 (let ((?x4280 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x680 (* (- 12) ?x4280)))
 (let ((?x4145 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2499 (* (- 3) ?x4145)))
 (let ((?x4038 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4040 (* 3 ?x4038)))
 (let ((?x4025 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4027 (* 12 ?x4025)))
 (let ((?x3979 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3847 (* (- 18) ?x3979)))
 (let ((?x3962 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3967 (* 6 ?x3962)))
 (let ((?x3813 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2521 (* (- 6) ?x3813)))
 (let ((?x3739 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x636 (* (- 3) ?x3739)))
 (let ((?x3729 (* y z z z z)))
 (let ((?x3709 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4267 (* 36 ?x3709)))
 (let ((?x3647 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3694 (* (- 18) ?x3647)))
 (let ((?x3628 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3625 (* 2 ?x3628)))
 (let ((?x3601 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3443 (* (- 6) ?x3601)))
 (let ((?x3533 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3532 (* 18 ?x3533)))
 (let ((?x3504 (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4126 (* (- 18) ?x3504)))
 (let ((?x3484 (* x z z z z)))
 (let ((?x3483 (* y y y z z)))
 (let ((?x3467 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1828 (* (- 108) ?x3467)))
 (let ((?x3454 (* x y y z z)))
 (let ((?x3348 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3342 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2354 (* (- 1) ?x3342)))
 (let ((?x3097 (* y y z z z00)))
 (let ((?x2987 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2963 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3663 (* (- 3) ?x2963)))
 (let ((?x2910 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3199 (* (- 3) ?x2910)))
 (let ((?x2832 (* y z z z y00)))
 (let ((?x2829 (* x z z z y00)))
 (let ((?x2826 (* y y z z y00)))
 (let ((?x2823 (* x y z z y00)))
 (let ((?x2702 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2709 (* 19 ?x2702)))
 (let ((?x2622 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2619 (* 18 ?x2622)))
 (let ((?x2616 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1107 (* (- 1) ?x2616)))
 (let ((?x2569 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2577 (* 2 ?x2569)))
 (let ((?x2441 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2446 (* 36 ?x2441)))
 (let ((?x2401 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2408 (* 6 ?x2401)))
 (let ((?x2205 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2198 (* 12 ?x2205)))
 (let ((?x2172 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2174 (* 3 ?x2172)))
 (let ((?x2156 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2163 (* 18 ?x2156)))
 (let ((?x2155 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x767 (* (- 12) ?x2155)))
 (let ((?x2143 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2262 (* (- 3) ?x2143)))
 (let ((?x2066 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2104 (* (- 1) ?x2066)))
 (let ((?x2046 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* 18 ?x2046)))
 (let ((?x2037 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2036 (* 3 ?x2037)))
 (let ((?x2025 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2024 (* 3 ?x2025)))
 (let ((?x1933 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1943 (* (- 72) ?x1933)))
 (let ((?x1893 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1862 (* (- 1) ?x1893)))
 (let ((?x1797 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1794 (* 108 ?x1797)))
 (let ((?x1671 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4266 (* (- 36) ?x1671)))
 (let ((?x1642 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1907 (* 12 ?x1642)))
 (let ((?x1630 (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* (- 1) ?x1630)))
 (let ((?x1625 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1566 (* (- 36) ?x1625)))
 (let ((?x1608 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3382 (* (- 18) ?x1608)))
 (let ((?x1575 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1570 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1489 (* (- 18) ?x1570)))
 (let ((?x1539 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1534 (* 18 ?x1539)))
 (let ((?x1402 (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3298 (* (- 3) ?x1402)))
 (let ((?x1399 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1403 (* 72 ?x1399)))
 (let ((?x1382 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4117 (* (- 3) ?x1382)))
 (let ((?x1370 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1333 (* (- 3) ?x1370)))
 (let ((?x1350 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2763 (* (- 12) ?x1350)))
 (let ((?x1255 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1256 (* 3 ?x1255)))
 (let ((?x1233 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2034 (* (- 18) ?x1233)))
 (let ((?x1219 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1235 (* 3 ?x1219)))
 (let ((?x1138 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3870 (* (- 6) ?x1138)))
 (let ((?x1132 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1165 (* (- 18) ?x1132)))
 (let ((?x1105 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1113 (* 108 ?x1105)))
 (let ((?x1088 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x841 (* (- 36) ?x1088)))
 (let ((?x1035 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1036 (* 3 ?x1035)))
 (let ((?x1005 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1000 (* 18 ?x1005)))
 (let ((?x1002 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1009 (* 36 ?x1002)))
 (let ((?x976 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x969 (* 18 ?x976)))
 (let ((?x913 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1448 (* (- 3) ?x913)))
 (let ((?x868 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3206 (* 3 ?x868)))
 (let ((?x857 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* (- 2) ?x857)))
 (let ((?x826 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x784 (* 18 ?x826)))
 (let ((?x816 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4531 (* (- 108) ?x816)))
 (let ((?x744 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x749 (* 72 ?x744)))
 (let ((?x718 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x719 (* 3 ?x718)))
 (let ((?x681 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x3591 (* (- 18) ?x681)))
 (let ((?x669 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x493 (* 72 ?x669)))
 (let ((?x668 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1624 (* (- 2) ?x668)))
 (let ((?x634 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4866 (* (- 18) ?x634)))
 (let ((?x576 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x794 (* (- 72) ?x576)))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x501 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x502 (* 6 ?x501)))
 (let ((?x468 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) ?x468)))
 (let ((?x434 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x437 (* 2 ?x434)))
 (let ((?x2629 (+ (* 36 (* y z z00)) (* (- 216) (* y y z)) (* (- 36) (* y y z00 z00)) ?x437 ?x488 (* 18 (* x z00 z00 x00)) ?x502 ?x528 ?x794 ?x4866 ?x1624 ?x493 ?x3591 ?x719 ?x749 ?x4531 ?x784 (* (- 36) (* y z00 y00)) ?x1267 (* (- 36) (* x x z z)) ?x3206 (* (- 60) (* x y z z)) (* 36 (* x z z x00)) (* (- 24) (* y y z z)) ?x1448 (* (- 72) (* y y y)) (* 36 (* x z z00)) (* 36 (* y z z x00)) (* (- 72) (* y y z00)) ?x969 ?x1009 ?x1000 ?x1036 (* (- 216) (* x x z)) (* 324 (* y z y00)) ?x841 (* (- 432) (* x y z)) ?x1113 ?x1165 ?x3870 (* 360 (* y y y00)) ?x1235 ?x2034 (* 18 (* y y z x00)) ?x1256 ?x2763 (* 324 (* x z y00)) ?x1333 ?x4117 (* (- 36) (* x z00 y00)) ?x1403 ?x3298 (* (- 288) (* y y00 y00)) (* 108 (* x z00 x00)) (* 3 (* y z z00 z00 y00)) ?x1534 (* 3 (* x z z z00 x00)) ?x1489 ?x1575 (* (- 288) (* x y00 y00)) ?x3382 ?x1566 ?x1976 ?x1907 (* 108 (* y z00 x00)) ?x4266 (* (- 60) (* y z y00 y00)) (* (- 60) (* x z y00 y00)) (* (- 9) (* x y z z00 z00)) (* (- 6) (* y y z z00 z00)) (* (- 3) (* x z z z00 z00)) (* (- 3) (* y z z z00 z00)) ?x1794 (* 36 (* x z z00 x00)) (* 12 (* y y y z00)) (* 3 (* y z z z00 x00)) (* 36 (* y z z00 x00)) ?x1862 (* 3 (* x z z00 z00 x00)) ?x1943 (* 108 (* y y x00)) ?x2024 ?x2036 ?x2048 (* (- 36) (* x z z)) (* (- 36) (* y z z)) ?x2104 (* (- 18) (* y z z00 z00)) (* (- 18) (* x z z00 z00)) (* (- 54) (* x y z00 z00)) ?x2262 ?x767 ?x2163 ?x2174 (* 3 (* x z z00 z00 y00)) (* 18 (* x z00 z00 y00)) ?x2198 (* (- 6) (* x z00 y00 y00)) (* (- 108) (* x y00 x00)) (* 18 (* y z00 z00 y00)) (* (- 1) (* x z z00 y00 y00)) (* (- 1) (* y z z00 y00 y00)) (* (- 3) (* x x z z00 z00)) ?x2408 (* (- 6) (* y z00 y00 y00)) ?x2446 (* 60 (* y z z y00)) (* (- 18) (* x x z00 z00)) ?x2577 (* 3 (* y z z00 z00 x00)) (* 18 (* y z00 z00 x00)) (* (- 108) (* y y00 x00)) ?x1107 ?x2619 (* 60 (* x z z y00)) (* 66 (* y y z y00)) (* 84 (* x y z y00)) (* 468 (* x y y00)) (* 18 (* x y z x00)) ?x2709 (* (- 18) (* x z y00 x00)) (* (- 18) (* y z y00 x00)) ?x2823 ?x2826 ?x2829 ?x2832 (* (- 42) (* x y z z00)) (* (- 6) (* y y z z00)) (* 18 (* x z z z00)) (* 18 (* y z z z00)) ?x3199 ?x3663 ?x2987 (* (- 36) (* x x z z00)) ?x3097 (* (- 2) (* x y z z z00)) (* (- 3) (* x x z z z00)) (* (- 2) (* x z z y00 y00)) (* (- 2) (* y z z y00 y00)) (* (- 180) (* x y z00)) (* (- 108) (* x x z00)) ?x2354 ?x3348 ?x3454 ?x1828 (* 2 (* x y z z z)) ?x3483 ?x3484 ?x4126 ?x3532 (* 108 (* x y x00)) (* 12 (* x y y z00)) ?x3443 (* (- 6) (* y y y z)) (* (- 24) (* x y y z)) ?x3625 ?x3694 (* (- 12) (* y z z00 y00)) ?x4267 (* (- 12) (* x z z00 y00)) (* 2 (* y y z z z)) ?x3729 (* (- 180) (* x y y)) ?x636 ?x2521 (* 18 (* x x z y00)) (* 216 (* x z x00)) (* 216 (* y z x00)) ?x3967 ?x3847 (* 2 (* y y y z z00)) (* 2 (* x y y z z00)) ?x4027 ?x4040 (* 108 (* x x y00)) ?x2499 (* (- 1) (* x z z z00 y00)) (* (- 1) (* y z z z00 y00)) (* (- 1) (* y y z z00 y00)) (* (- 1) (* x y z z00 y00)) (* (- 6) (* y y z00 y00)) (* (- 6) (* x y z00 y00)) ?x680 (* 2 (* x z z z z00)) (* 2 (* y z z z z00)) (* (- 108) (* x x y)) ?x4421 ?x4448 (* (- 18) (* x x y z)) ?x4669 ?x4698 ?x3007)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x1387 (* x z00 y00)))
 (let ((?x1388 (* 36 ?x1387)))
 (let ((?x1292 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1288 (* z00 z00 z00 y00)))
 (let ((?x1198 (* (- 36) (* z00 y00 x00))))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x997 (* z00 z00 x00)))
 (let ((?x1248 (* (- 18) ?x997)))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x869 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x811 (* z00 z00 y00)))
 (let ((?x1349 (* (- 10) ?x811)))
 (let ((?x786 (* z00 y00 y00)))
 (let ((?x821 (* (- 12) ?x786)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x647 (* z00 x00)))
 (let ((?x565 (* 36 ?x647)))
 (let ((?x610 (* z00 y00)))
 (let ((?x975 (* 24 ?x610)))
 (let ((?x557 (* y00 x00)))
 (let ((?x548 (* 216 ?x557)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1415 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x548 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x975 ?x565 ?x896 ?x1148 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x821 ?x1349 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x869 ?x901 ?x953 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1248 (* (- 216) (* x y00)) ?x1083 (* (- 12) (* y y y00)) ?x1198 (* (- 216) (* x x00)) ?x1288 ?x1292 ?x1388 ?x1395)))
 (let (($x1420 (= ?x1415 0)))
 (let ((?x1057 (* y z y00)))
 (let ((?x998 (* 3 ?x997)))
 (let ((?x1060 (* 3 ?x811)))
 (let ((?x793 (* (- 1) ?x786)))
 (let ((?x723 (* 18 (* z x00))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x885 (* (- 6) ?x610)))
 (let ((?x584 (* z y00)))
 (let ((?x585 (* 12 ?x584)))
 (let ((?x583 (* x z)))
 (let ((?x618 (* (- 18) ?x583)))
 (let ((?x558 (* (- 18) ?x557)))
 (let ((?x553 (* y z)))
 (let ((?x577 (* (- 12) ?x553)))
 (let ((?x135 (* y y z)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1116 (+ ?x64 ?x71 ?x632 ?x689 (* (- 3) (* y z00 z00)) ?x135 ?x577 ?x558 (* (- 18) (* x y)) ?x618 ?x585 ?x885 ?x980 ?x723 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x793 ?x1060 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x998 (* 18 (* x y00)) ?x1057 (* (- 2) (* z y00 y00)))))
 (let (($x1123 (= ?x1116 0)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x726 (* 6 ?x610)))
 (let ((?x103 (* y z z00)))
 (let ((?x865 (+ ?x64 ?x71 ?x632 ?x689 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x577 ?x618 ?x585 ?x726 ?x648 ?x654 ?x706 ?x723 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x811 (* (- 18) (* x z00)))))
 (let (($x870 (= ?x865 0)))
 (let ((?x611 (* 18 ?x610)))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x705 (+ ?x64 ?x71 ?x632 ?x562 ?x689 ?x76 ?x573 (* (- 6) ?x553) (* (- 12) ?x584) ?x611 (* (- 6) (* z z00)))))
 (let (($x710 (= ?x705 0)))
 (let ((?x50 (* z z)))
 (let ((?x541 (* (- 1) ?x50)))
 (let ((?x540 (* (- 12) y00)))
 (let ((?x539 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x543 (= (+ ?x45 ?x46 ?x539 ?x540 ?x541 ?x469) 0)))
 (let (($x461 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (and $x461 $x543 $x710 $x870 $x1123 $x1420 (not (= ?x2629 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let (($x646 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x1893 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1625 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x913 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x434 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x468 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1255 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x501 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2987 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4294 (* y00 z00 ?x564 ?x217 ?x216)))
 (let ((?x3979 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3601 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2205 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2155 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2143 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2702 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3504 (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2963 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1630 (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2037 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2025 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1671 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x857 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1642 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4461 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1402 (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x826 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1539 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x718 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1382 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3628 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3907 (* y00 y00 z00 ?x564 ?x216)))
 (let ((?x2569 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2401 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2441 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3647 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1219 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x976 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x868 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1233 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4280 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4669 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1035 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1002 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1370 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3533 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x4145 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1138 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3739 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x634 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4038 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2616 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2156 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x668 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3348 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2910 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3342 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2172 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2066 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x809 (+ ?x2066 (* (- 3) ?x2172) (* 18 (* ?x564 ?x564 ?x216 ?x216)) ?x3342 (* 72 (* y00 ?x564 ?x216)) (* 3 ?x2910) (* (- 1) ?x3348) (* (- 36) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x564 ?x564 ?x216)) (* 72 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* 2 ?x668) (* (- 18) ?x2156) ?x2616 (* 36 (* y00 y00 ?x564 ?x216)) (* (- 12) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 18) (* y00 ?x564 ?x216 ?x216)) (* (- 3) ?x4038) (* (- 108) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)) (* 18 ?x634) (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* 3 ?x3739) (* 18 ?x1608) (* (- 3) (* x00 z00 z00 ?x564 ?x216)) (* 6 ?x1138) (* 12 (* ?x564 ?x564 ?x217 ?x216)) (* (- 36) (* y00 ?x564 ?x217 ?x216)) (* 3 ?x4145) (* (- 18) ?x3533) (* 3 (* z00 z00 ?x564 ?x217 ?x216)) (* 3 ?x1370) (* (- 36) ?x1002) (* (- 3) ?x1035) (* (- 72) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x4669) (* 12 ?x4280) (* 18 ?x1233) (* 108 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 3) ?x868) (* (- 18) ?x976) (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)) (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 3) ?x1219) (* (- 18) (* x00 ?x564 ?x217 ?x216)) (* (- 108) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x3647) (* 3 (* z00 z00 ?x564 ?x216 ?x216)) (* 6 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 36) ?x2441) (* (- 6) ?x2401) (* (- 2) ?x2569) (* 18 (* x00 y00 ?x564 ?x216)) ?x3907 (* (- 1) (* y00 ?x564 ?x564 ?x217 ?x216)) (* (- 6) (* z00 ?x564 ?x217 ?x216)) (* (- 2) ?x3628) (* 3 ?x1382) (* (- 3) ?x718) (* (- 18) ?x1539) (* (- 18) ?x826) (* 3 ?x1402) ?x4461 (* 108 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x1642) (* (- 1) ?x1575) (* 2 (* y00 y00 ?x564 ?x564 ?x216)) (* 2 ?x857) (* 36 ?x1671) (* 72 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 3) ?x2025) (* (- 3) ?x2037) (* (- 18) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)) ?x1630 (* 3 (* z00 ?x564 ?x564 ?x216 ?x216)) (* 3 ?x2963) (* 18 ?x3504) (* (- 72) (* ?x564 ?x217 ?x216)) (* 108 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 19) ?x2702) (* 3 ?x2143) (* 18 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* 12 ?x2155) (* 6 (* y00 z00 ?x564 ?x216)) (* 72 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2205) (* (- 72) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x564 ?x216)) (* (- 1) (* ?x564 ?x564 ?x217 ?x217 ?x216)) (* 6 ?x3601) (* (- 6) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x3979) ?x4294 (* 12 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2987) (* (- 2) (* z00 ?x564 ?x217 ?x217 ?x216)) (* (- 108) (* ?x564 ?x216 ?x216)) (* (- 6) ?x501) (* (- 18) (* x00 ?x564 ?x564 ?x216)) (* 36 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 3) ?x1255) (* 18 (* ?x564 ?x217 ?x216 ?x216)) (* 2 ?x468) (* (- 1) ?x528) (* (- 3) (* y00 z00 z00 ?x564 ?x216)) (* (- 3) (* x00 z00 ?x564 ?x564 ?x216)) (* (- 2) ?x434) (* 3 ?x913) (* (- 72) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)) (* 36 ?x1625) ?x1893)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x1103 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3812 (= ?x1103 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2336 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2260 (* (- 108) x)))
 (let ((?x3494 (* x00 z)))
 (let ((?x803 (* (- 18) ?x3494)))
 (let ((?x739 (* 36 ?x677)))
 (let ((?x2764 (* z y)))
 (let ((?x3295 (* 12 ?x2764)))
 (let ((?x2090 (* z00 y)))
 (let ((?x2115 (* (- 6) ?x2090)))
 (let ((?x2003 (* y00 z00)))
 (let ((?x3357 (* 6 ?x2003)))
 (let ((?x2571 (* y00 z)))
 (let ((?x1878 (* (- 12) ?x2571)))
 (let ((?x3042 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1746 (* z x)))
 (let ((?x4219 (* 18 ?x1746)))
 (let ((?x3309 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x4219 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x3042 ?x1878 ?x3357 (* (- 36) (* y00 y)) ?x2115 ?x3295 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x739 ?x803 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2260 ?x67 (* (- 18) (* y00 x)) ?x2336 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3313 (* z00 z00 y)))
 (let ((?x2107 (* 6 ?x2090)))
 (let ((?x3331 (* (- 6) ?x2003)))
 (let ((?x804 (* 24 ?x677)))
 (let ((?x2780 (* y00 z00 z)))
 (let ((?x590 (+ ?x2780 ?x3295 ?x4219 (* (- 18) (* x00 z00)) (* (- 12) ?x651) ?x804 ?x803 ?x1878 ?x3331 (* (- 12) (* y00 y)) ?x2260 ?x67 ?x2107 ?x2336 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3313)))
 (let ((?x2574 (* 12 ?x2571)))
 (let ((?x469 (* z00 z00)))
 (let ((?x2317 (* (- 6) ?x469)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2323 (+ (* 6 ?x2764) ?x55 ?x2317 ?x2574 (* (- 18) ?x2003) ?x2260 ?x67 (* 6 (* z00 z)) ?x2336 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x541 (* (- 1) ?x50)))
 (let ((?x539 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x540 (* (- 12) y00)))
 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x469 ?x540 ?x45 ?x46 ?x539 ?x541) 0) (= ?x2323 0) (= ?x590 0) (= ?x3309 0) $x3812 (not (= ?x809 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x2390 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x4782 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3007 (* (- 72) ?x4782)))
 (let ((?x4694 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4698 (* 108 ?x4694)))
 (let ((?x4669 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4461 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4448 (* (- 1) ?x4461)))
 (let ((?x4434 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4421 (* (- 108) ?x4434)))
 (let ((?x4280 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x680 (* (- 12) ?x4280)))
 (let ((?x4145 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2499 (* (- 3) ?x4145)))
 (let ((?x4038 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4040 (* 3 ?x4038)))
 (let ((?x4025 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4027 (* 12 ?x4025)))
 (let ((?x3979 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3847 (* (- 18) ?x3979)))
 (let ((?x3962 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3967 (* 6 ?x3962)))
 (let ((?x3813 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2521 (* (- 6) ?x3813)))
 (let ((?x3739 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x636 (* (- 3) ?x3739)))
 (let ((?x3729 (* y z z z z)))
 (let ((?x3709 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4267 (* 36 ?x3709)))
 (let ((?x3647 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3694 (* (- 18) ?x3647)))
 (let ((?x3628 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3625 (* 2 ?x3628)))
 (let ((?x3601 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3443 (* (- 6) ?x3601)))
 (let ((?x3533 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3532 (* 18 ?x3533)))
 (let ((?x3504 (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4126 (* (- 18) ?x3504)))
 (let ((?x3484 (* x z z z z)))
 (let ((?x3483 (* y y y z z)))
 (let ((?x3467 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1828 (* (- 108) ?x3467)))
 (let ((?x3454 (* x y y z z)))
 (let ((?x3348 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3342 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2354 (* (- 1) ?x3342)))
 (let ((?x3097 (* y y z z z00)))
 (let ((?x2987 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2963 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3663 (* (- 3) ?x2963)))
 (let ((?x2910 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3199 (* (- 3) ?x2910)))
 (let ((?x2832 (* y z z z y00)))
 (let ((?x2829 (* x z z z y00)))
 (let ((?x2826 (* y y z z y00)))
 (let ((?x2823 (* x y z z y00)))
 (let ((?x2702 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2709 (* 19 ?x2702)))
 (let ((?x2622 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2619 (* 18 ?x2622)))
 (let ((?x2616 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1107 (* (- 1) ?x2616)))
 (let ((?x2569 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2577 (* 2 ?x2569)))
 (let ((?x2441 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2446 (* 36 ?x2441)))
 (let ((?x2401 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2408 (* 6 ?x2401)))
 (let ((?x2205 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2198 (* 12 ?x2205)))
 (let ((?x2172 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2174 (* 3 ?x2172)))
 (let ((?x2156 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2163 (* 18 ?x2156)))
 (let ((?x2155 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x767 (* (- 12) ?x2155)))
 (let ((?x2143 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2262 (* (- 3) ?x2143)))
 (let ((?x2066 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2104 (* (- 1) ?x2066)))
 (let ((?x2046 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* 18 ?x2046)))
 (let ((?x2037 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2036 (* 3 ?x2037)))
 (let ((?x2025 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2024 (* 3 ?x2025)))
 (let ((?x1933 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1943 (* (- 72) ?x1933)))
 (let ((?x1893 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1862 (* (- 1) ?x1893)))
 (let ((?x1797 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1794 (* 108 ?x1797)))
 (let ((?x1671 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4266 (* (- 36) ?x1671)))
 (let ((?x1642 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1907 (* 12 ?x1642)))
 (let ((?x1630 (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* (- 1) ?x1630)))
 (let ((?x1625 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1566 (* (- 36) ?x1625)))
 (let ((?x1608 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3382 (* (- 18) ?x1608)))
 (let ((?x1575 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1570 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1489 (* (- 18) ?x1570)))
 (let ((?x1539 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1534 (* 18 ?x1539)))
 (let ((?x1402 (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3298 (* (- 3) ?x1402)))
 (let ((?x1399 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1403 (* 72 ?x1399)))
 (let ((?x1382 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4117 (* (- 3) ?x1382)))
 (let ((?x1370 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1333 (* (- 3) ?x1370)))
 (let ((?x1350 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2763 (* (- 12) ?x1350)))
 (let ((?x1255 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1256 (* 3 ?x1255)))
 (let ((?x1233 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2034 (* (- 18) ?x1233)))
 (let ((?x1219 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1235 (* 3 ?x1219)))
 (let ((?x1138 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3870 (* (- 6) ?x1138)))
 (let ((?x1132 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1165 (* (- 18) ?x1132)))
 (let ((?x1105 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1113 (* 108 ?x1105)))
 (let ((?x1088 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x841 (* (- 36) ?x1088)))
 (let ((?x1035 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1036 (* 3 ?x1035)))
 (let ((?x1005 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1000 (* 18 ?x1005)))
 (let ((?x1002 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1009 (* 36 ?x1002)))
 (let ((?x976 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x969 (* 18 ?x976)))
 (let ((?x913 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1448 (* (- 3) ?x913)))
 (let ((?x868 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3206 (* 3 ?x868)))
 (let ((?x857 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* (- 2) ?x857)))
 (let ((?x826 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x784 (* 18 ?x826)))
 (let ((?x816 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4531 (* (- 108) ?x816)))
 (let ((?x744 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x749 (* 72 ?x744)))
 (let ((?x718 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x719 (* 3 ?x718)))
 (let ((?x681 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x3591 (* (- 18) ?x681)))
 (let ((?x669 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x493 (* 72 ?x669)))
 (let ((?x668 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1624 (* (- 2) ?x668)))
 (let ((?x634 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4866 (* (- 18) ?x634)))
 (let ((?x576 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x794 (* (- 72) ?x576)))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x501 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x502 (* 6 ?x501)))
 (let ((?x468 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) ?x468)))
 (let ((?x434 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x437 (* 2 ?x434)))
 (let ((?x2629 (+ (* 36 (* y z z00)) (* (- 216) (* y y z)) (* (- 36) (* y y z00 z00)) ?x437 ?x488 (* 18 (* x z00 z00 x00)) ?x502 ?x528 ?x794 ?x4866 ?x1624 ?x493 ?x3591 ?x719 ?x749 ?x4531 ?x784 (* (- 36) (* y z00 y00)) ?x1267 (* (- 36) (* x x z z)) ?x3206 (* (- 60) (* x y z z)) (* 36 (* x z z x00)) (* (- 24) (* y y z z)) ?x1448 (* (- 72) (* y y y)) (* 36 (* x z z00)) (* 36 (* y z z x00)) (* (- 72) (* y y z00)) ?x969 ?x1009 ?x1000 ?x1036 (* (- 216) (* x x z)) (* 324 (* y z y00)) ?x841 (* (- 432) (* x y z)) ?x1113 ?x1165 ?x3870 (* 360 (* y y y00)) ?x1235 ?x2034 (* 18 (* y y z x00)) ?x1256 ?x2763 (* 324 (* x z y00)) ?x1333 ?x4117 (* (- 36) (* x z00 y00)) ?x1403 ?x3298 (* (- 288) (* y y00 y00)) (* 108 (* x z00 x00)) (* 3 (* y z z00 z00 y00)) ?x1534 (* 3 (* x z z z00 x00)) ?x1489 ?x1575 (* (- 288) (* x y00 y00)) ?x3382 ?x1566 ?x1976 ?x1907 (* 108 (* y z00 x00)) ?x4266 (* (- 60) (* y z y00 y00)) (* (- 60) (* x z y00 y00)) (* (- 9) (* x y z z00 z00)) (* (- 6) (* y y z z00 z00)) (* (- 3) (* x z z z00 z00)) (* (- 3) (* y z z z00 z00)) ?x1794 (* 36 (* x z z00 x00)) (* 12 (* y y y z00)) (* 3 (* y z z z00 x00)) (* 36 (* y z z00 x00)) ?x1862 (* 3 (* x z z00 z00 x00)) ?x1943 (* 108 (* y y x00)) ?x2024 ?x2036 ?x2048 (* (- 36) (* x z z)) (* (- 36) (* y z z)) ?x2104 (* (- 18) (* y z z00 z00)) (* (- 18) (* x z z00 z00)) (* (- 54) (* x y z00 z00)) ?x2262 ?x767 ?x2163 ?x2174 (* 3 (* x z z00 z00 y00)) (* 18 (* x z00 z00 y00)) ?x2198 (* (- 6) (* x z00 y00 y00)) (* (- 108) (* x y00 x00)) (* 18 (* y z00 z00 y00)) (* (- 1) (* x z z00 y00 y00)) (* (- 1) (* y z z00 y00 y00)) (* (- 3) (* x x z z00 z00)) ?x2408 (* (- 6) (* y z00 y00 y00)) ?x2446 (* 60 (* y z z y00)) (* (- 18) (* x x z00 z00)) ?x2577 (* 3 (* y z z00 z00 x00)) (* 18 (* y z00 z00 x00)) (* (- 108) (* y y00 x00)) ?x1107 ?x2619 (* 60 (* x z z y00)) (* 66 (* y y z y00)) (* 84 (* x y z y00)) (* 468 (* x y y00)) (* 18 (* x y z x00)) ?x2709 (* (- 18) (* x z y00 x00)) (* (- 18) (* y z y00 x00)) ?x2823 ?x2826 ?x2829 ?x2832 (* (- 42) (* x y z z00)) (* (- 6) (* y y z z00)) (* 18 (* x z z z00)) (* 18 (* y z z z00)) ?x3199 ?x3663 ?x2987 (* (- 36) (* x x z z00)) ?x3097 (* (- 2) (* x y z z z00)) (* (- 3) (* x x z z z00)) (* (- 2) (* x z z y00 y00)) (* (- 2) (* y z z y00 y00)) (* (- 180) (* x y z00)) (* (- 108) (* x x z00)) ?x2354 ?x3348 ?x3454 ?x1828 (* 2 (* x y z z z)) ?x3483 ?x3484 ?x4126 ?x3532 (* 108 (* x y x00)) (* 12 (* x y y z00)) ?x3443 (* (- 6) (* y y y z)) (* (- 24) (* x y y z)) ?x3625 ?x3694 (* (- 12) (* y z z00 y00)) ?x4267 (* (- 12) (* x z z00 y00)) (* 2 (* y y z z z)) ?x3729 (* (- 180) (* x y y)) ?x636 ?x2521 (* 18 (* x x z y00)) (* 216 (* x z x00)) (* 216 (* y z x00)) ?x3967 ?x3847 (* 2 (* y y y z z00)) (* 2 (* x y y z z00)) ?x4027 ?x4040 (* 108 (* x x y00)) ?x2499 (* (- 1) (* x z z z00 y00)) (* (- 1) (* y z z z00 y00)) (* (- 1) (* y y z z00 y00)) (* (- 1) (* x y z z00 y00)) (* (- 6) (* y y z00 y00)) (* (- 6) (* x y z00 y00)) ?x680 (* 2 (* x z z z z00)) (* 2 (* y z z z z00)) (* (- 108) (* x x y)) ?x4421 ?x4448 (* (- 18) (* x x y z)) ?x4669 ?x4698 ?x3007)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x1387 (* x z00 y00)))
 (let ((?x1388 (* 36 ?x1387)))
 (let ((?x1292 (* 2 (* z00 z00 z00 x00))))
 (let ((?x1288 (* z00 z00 z00 y00)))
 (let ((?x1198 (* (- 36) (* z00 y00 x00))))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x997 (* z00 z00 x00)))
 (let ((?x1248 (* (- 18) ?x997)))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x869 (* (- 1) (* z00 z00 y00 y00))))
 (let ((?x811 (* z00 z00 y00)))
 (let ((?x1349 (* (- 10) ?x811)))
 (let ((?x786 (* z00 y00 y00)))
 (let ((?x821 (* (- 12) ?x786)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x647 (* z00 x00)))
 (let ((?x565 (* 36 ?x647)))
 (let ((?x610 (* z00 y00)))
 (let ((?x975 (* 24 ?x610)))
 (let ((?x557 (* y00 x00)))
 (let ((?x548 (* 216 ?x557)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x1415 (+ (* 10 (* y z00 z00)) ?x201 (* (- 1) (* y z00 z00 z00)) ?x548 (* (- 2) (* x z00 z00 z00)) (* 108 (* x y)) ?x975 ?x565 ?x896 ?x1148 (* (- 120) (* y y00)) (* 18 (* x z00 z00)) (* (- 24) (* y z00)) ?x821 ?x1349 (* (- 36) (* x z00)) (* 18 (* y z00 y00)) ?x869 ?x901 ?x953 (* (- 6) (* y y z00)) (* (- 108) (* y x00)) ?x1248 (* (- 216) (* x y00)) ?x1083 (* (- 12) (* y y y00)) ?x1198 (* (- 216) (* x x00)) ?x1288 ?x1292 ?x1388 ?x1395)))
 (let (($x1420 (= ?x1415 0)))
 (let ((?x1057 (* y z y00)))
 (let ((?x998 (* 3 ?x997)))
 (let ((?x1060 (* 3 ?x811)))
 (let ((?x793 (* (- 1) ?x786)))
 (let ((?x723 (* 18 (* z x00))))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x885 (* (- 6) ?x610)))
 (let ((?x584 (* z y00)))
 (let ((?x585 (* 12 ?x584)))
 (let ((?x583 (* x z)))
 (let ((?x618 (* (- 18) ?x583)))
 (let ((?x558 (* (- 18) ?x557)))
 (let ((?x553 (* y z)))
 (let ((?x577 (* (- 12) ?x553)))
 (let ((?x135 (* y y z)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x71 (* 72 y)))
 (let ((?x64 (* 108 x)))
 (let ((?x1116 (+ ?x64 ?x71 ?x632 ?x689 (* (- 3) (* y z00 z00)) ?x135 ?x577 ?x558 (* (- 18) (* x y)) ?x618 ?x585 ?x885 ?x980 ?x723 (* 36 (* y y00)) (* (- 3) (* x z00 z00)) (* 6 (* y z00)) ?x793 ?x1060 (* 3 (* z z00 x00)) (* (- 1) (* y z00 y00)) (* (- 3) (* x z z00)) (* 2 (* y y z00)) (* 18 (* y x00)) ?x998 (* 18 (* x y00)) ?x1057 (* (- 2) (* z y00 y00)))))
 (let (($x1123 (= ?x1116 0)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x648 (* 18 ?x647)))
 (let ((?x726 (* 6 ?x610)))
 (let ((?x103 (* y z z00)))
 (let ((?x865 (+ ?x64 ?x71 ?x632 ?x689 ?x103 (* (- 1) (* y z00 z00)) (* (- 1) (* z z00 y00)) ?x577 ?x618 ?x585 ?x726 ?x648 ?x654 ?x706 ?x723 (* 12 (* y y00)) (* (- 6) (* y z00)) ?x811 (* (- 18) (* x z00)))))
 (let (($x870 (= ?x865 0)))
 (let ((?x611 (* 18 ?x610)))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x76 (* z z00 z00)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x705 (+ ?x64 ?x71 ?x632 ?x562 ?x689 ?x76 ?x573 (* (- 6) ?x553) (* (- 12) ?x584) ?x611 (* (- 6) (* z z00)))))
 (let (($x710 (= ?x705 0)))
 (let ((?x50 (* z z)))
 (let ((?x541 (* (- 1) ?x50)))
 (let ((?x540 (* (- 12) y00)))
 (let ((?x539 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let (($x543 (= (+ ?x45 ?x46 ?x539 ?x540 ?x541 ?x469) 0)))
 (let (($x461 (= (+ z (* (- 6) n) (* (- 1) z00) (* 6 n00)) 0)))
 (let (($x4217 (and $x461 $x543 $x710 $x870 $x1123 $x1420 (not (= ?x2629 0)))))
 (let ((?x4294 (* y00 z00 ?x564 ?x217 ?x216)))
 (let ((?x3907 (* y00 y00 z00 ?x564 ?x216)))
 (let ((?x809 (+ ?x2066 (* (- 3) ?x2172) (* 18 (* ?x564 ?x564 ?x216 ?x216)) ?x3342 (* 72 (* y00 ?x564 ?x216)) (* 3 ?x2910) (* (- 1) ?x3348) (* (- 36) ?x3709) (* (- 12) (* y00 ?x564 ?x564 ?x216)) (* 72 ?x576) (* 2 ?x668) (* (- 18) ?x2156) ?x2616 (* 36 (* y00 y00 ?x564 ?x216)) (* (- 12) ?x4025) (* (- 18) (* y00 ?x564 ?x216 ?x216)) (* (- 3) ?x4038) (* (- 108) ?x4694) (* 18 ?x634) (* (- 18) ?x2622) (* 3 ?x3739) (* 18 ?x1608) (* (- 3) (* x00 z00 z00 ?x564 ?x216)) (* 6 ?x1138) (* 12 (* ?x564 ?x564 ?x217 ?x216)) (* (- 36) (* y00 ?x564 ?x217 ?x216)) (* 3 ?x4145) (* (- 18) ?x3533) (* 3 (* z00 z00 ?x564 ?x217 ?x216)) (* 3 ?x1370) (* (- 36) ?x1002) (* (- 3) ?x1035) (* (- 72) ?x669) (* (- 1) ?x4669) (* 12 ?x4280) (* 18 ?x1233) (* 108 ?x816) (* (- 3) ?x868) (* (- 18) ?x976) (* (- 18) ?x1005) (* 18 ?x1132) (* (- 3) ?x1219) (* (- 18) (* x00 ?x564 ?x217 ?x216)) (* (- 108) ?x1105) (* 18 ?x3647) (* 3 (* z00 z00 ?x564 ?x216 ?x216)) (* 6 ?x3813) (* (- 36) ?x2441) (* (- 6) ?x2401) (* (- 2) ?x2569) (* 18 (* x00 y00 ?x564 ?x216)) ?x3907 (* (- 1) (* y00 ?x564 ?x564 ?x217 ?x216)) (* (- 6) (* z00 ?x564 ?x217 ?x216)) (* (- 2) ?x3628) (* 3 ?x1382) (* (- 3) ?x718) (* (- 18) ?x1539) (* (- 18) ?x826) (* 3 ?x1402) ?x4461 (* 108 ?x4434) (* (- 12) ?x1642) (* (- 1) ?x1575) (* 2 (* y00 y00 ?x564 ?x564 ?x216)) (* 2 ?x857) (* 36 ?x1671) (* 72 ?x1933) (* (- 3) ?x2025) (* (- 3) ?x2037) (* (- 18) ?x2046) ?x1630 (* 3 (* z00 ?x564 ?x564 ?x216 ?x216)) (* 3 ?x2963) (* 18 ?x3504) (* (- 72) (* ?x564 ?x217 ?x216)) (* 108 ?x3467) (* (- 19) ?x2702) (* 3 ?x2143) (* 18 ?x681) (* 12 ?x2155) (* 6 (* y00 z00 ?x564 ?x216)) (* 72 ?x4782) (* (- 12) ?x2205) (* (- 72) ?x744) (* 108 (* x00 ?x564 ?x216)) (* (- 1) (* ?x564 ?x564 ?x217 ?x217 ?x216)) (* 6 ?x3601) (* (- 6) ?x3962) (* 18 ?x3979) ?x4294 (* 12 ?x1350) (* (- 1) ?x2987) (* (- 2) (* z00 ?x564 ?x217 ?x217 ?x216)) (* (- 108) (* ?x564 ?x216 ?x216)) (* (- 6) ?x501) (* (- 18) (* x00 ?x564 ?x564 ?x216)) (* 36 ?x1088) (* (- 3) ?x1255) (* 18 (* ?x564 ?x217 ?x216 ?x216)) (* 2 ?x468) (* (- 1) ?x528) (* (- 3) (* y00 z00 z00 ?x564 ?x216)) (* (- 3) (* x00 z00 ?x564 ?x564 ?x216)) (* (- 2) ?x434) (* 3 ?x913) (* (- 72) ?x1399) (* 18 ?x1570) (* (- 108) ?x1797) (* 36 ?x1625) ?x1893)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x1103 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3812 (= ?x1103 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2336 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2260 (* (- 108) x)))
 (let ((?x3494 (* x00 z)))
 (let ((?x803 (* (- 18) ?x3494)))
 (let ((?x739 (* 36 ?x677)))
 (let ((?x2764 (* z y)))
 (let ((?x3295 (* 12 ?x2764)))
 (let ((?x2090 (* z00 y)))
 (let ((?x2115 (* (- 6) ?x2090)))
 (let ((?x2003 (* y00 z00)))
 (let ((?x3357 (* 6 ?x2003)))
 (let ((?x2571 (* y00 z)))
 (let ((?x1878 (* (- 12) ?x2571)))
 (let ((?x3042 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1746 (* z x)))
 (let ((?x4219 (* 18 ?x1746)))
 (let ((?x3309 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x4219 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x3042 ?x1878 ?x3357 (* (- 36) (* y00 y)) ?x2115 ?x3295 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x739 ?x803 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2260 ?x67 (* (- 18) (* y00 x)) ?x2336 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3313 (* z00 z00 y)))
 (let ((?x2107 (* 6 ?x2090)))
 (let ((?x3331 (* (- 6) ?x2003)))
 (let ((?x804 (* 24 ?x677)))
 (let ((?x2780 (* y00 z00 z)))
 (let ((?x590 (+ ?x2780 ?x3295 ?x4219 (* (- 18) (* x00 z00)) (* (- 12) ?x651) ?x804 ?x803 ?x1878 ?x3331 (* (- 12) (* y00 y)) ?x2260 ?x67 ?x2107 ?x2336 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3313)))
 (let ((?x2574 (* 12 ?x2571)))
 (let ((?x2317 (* (- 6) ?x469)))
 (let ((?x2323 (+ (* 6 ?x2764) ?x55 ?x2317 ?x2574 (* (- 18) ?x2003) ?x2260 ?x67 (* 6 (* z00 z)) ?x2336 ?x74 (* (- 1) (* z00 z00 z)))))
 (let (($x693 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x469 ?x540 ?x45 ?x46 ?x539 ?x541) 0) (= ?x2323 0) (= ?x590 0) (= ?x3309 0) $x3812 (not (= ?x809 0)))))
 (rewrite (= $x693 $x4217))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x3001 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x1893 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1862 (* (- 1) ?x1893)))
 (let ((?x1625 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1566 (* (- 36) ?x1625)))
 (let ((?x1797 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1794 (* 108 ?x1797)))
 (let ((?x1570 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1489 (* (- 18) ?x1570)))
 (let ((?x1399 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1403 (* 72 ?x1399)))
 (let ((?x913 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1448 (* (- 3) ?x913)))
 (let ((?x434 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x437 (* 2 ?x434)))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x468 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) ?x468)))
 (let ((?x1255 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1256 (* 3 ?x1255)))
 (let ((?x1088 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x841 (* (- 36) ?x1088)))
 (let ((?x501 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x502 (* 6 ?x501)))
 (let ((?x2987 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1350 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2763 (* (- 12) ?x1350)))
 (let ((?x3979 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3847 (* (- 18) ?x3979)))
 (let ((?x3962 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3967 (* 6 ?x3962)))
 (let ((?x3601 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3443 (* (- 6) ?x3601)))
 (let ((?x3662 (* ?x564 ?x564 ?x217 ?x217 ?x216)))
 (let ((?x744 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x749 (* 72 ?x744)))
 (let ((?x2205 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2198 (* 12 ?x2205)))
 (let ((?x4782 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3007 (* (- 72) ?x4782)))
 (let ((?x2155 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x767 (* (- 12) ?x2155)))
 (let ((?x681 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x3591 (* (- 18) ?x681)))
 (let ((?x2143 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2262 (* (- 3) ?x2143)))
 (let ((?x2702 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2709 (* 19 ?x2702)))
 (let ((?x3467 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1828 (* (- 108) ?x3467)))
 (let ((?x3504 (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4126 (* (- 18) ?x3504)))
 (let ((?x2963 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3663 (* (- 3) ?x2963)))
 (let ((?x1630 (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* (- 1) ?x1630)))
 (let ((?x2046 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* 18 ?x2046)))
 (let ((?x2037 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2036 (* 3 ?x2037)))
 (let ((?x2025 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2024 (* 3 ?x2025)))
 (let ((?x1933 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1943 (* (- 72) ?x1933)))
 (let ((?x1671 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4266 (* (- 36) ?x1671)))
 (let ((?x857 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* (- 2) ?x857)))
 (let ((?x1575 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1642 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1907 (* 12 ?x1642)))
 (let ((?x4434 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4421 (* (- 108) ?x4434)))
 (let ((?x4461 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4448 (* (- 1) ?x4461)))
 (let ((?x1402 (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3298 (* (- 3) ?x1402)))
 (let ((?x826 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x784 (* 18 ?x826)))
 (let ((?x1539 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1534 (* 18 ?x1539)))
 (let ((?x718 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x719 (* 3 ?x718)))
 (let ((?x1382 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4117 (* (- 3) ?x1382)))
 (let ((?x3628 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3625 (* 2 ?x3628)))
 (let ((?x3887 (* y00 ?x564 ?x564 ?x217 ?x216)))
 (let ((?x2569 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2577 (* 2 ?x2569)))
 (let ((?x2401 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2408 (* 6 ?x2401)))
 (let ((?x2441 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2446 (* 36 ?x2441)))
 (let ((?x3813 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2521 (* (- 6) ?x3813)))
 (let ((?x3647 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3694 (* (- 18) ?x3647)))
 (let ((?x1105 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1113 (* 108 ?x1105)))
 (let ((?x1219 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1235 (* 3 ?x1219)))
 (let ((?x1132 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1165 (* (- 18) ?x1132)))
 (let ((?x1005 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1000 (* 18 ?x1005)))
 (let ((?x976 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x969 (* 18 ?x976)))
 (let ((?x868 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3206 (* 3 ?x868)))
 (let ((?x816 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4531 (* (- 108) ?x816)))
 (let ((?x1233 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2034 (* (- 18) ?x1233)))
 (let ((?x4280 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x680 (* (- 12) ?x4280)))
 (let ((?x4669 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x493 (* 72 ?x669)))
 (let ((?x1035 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1036 (* 3 ?x1035)))
 (let ((?x1002 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1009 (* 36 ?x1002)))
 (let ((?x1370 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1333 (* (- 3) ?x1370)))
 (let ((?x3533 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3532 (* 18 ?x3533)))
 (let ((?x4145 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2499 (* (- 3) ?x4145)))
 (let ((?x1138 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3870 (* (- 6) ?x1138)))
 (let ((?x1608 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3382 (* (- 18) ?x1608)))
 (let ((?x3739 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x636 (* (- 3) ?x3739)))
 (let ((?x2622 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2619 (* 18 ?x2622)))
 (let ((?x634 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4866 (* (- 18) ?x634)))
 (let ((?x4694 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4698 (* 108 ?x4694)))
 (let ((?x4038 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4040 (* 3 ?x4038)))
 (let ((?x4025 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4027 (* 12 ?x4025)))
 (let ((?x2616 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1107 (* (- 1) ?x2616)))
 (let ((?x2156 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2163 (* 18 ?x2156)))
 (let ((?x668 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1624 (* (- 2) ?x668)))
 (let ((?x576 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x794 (* (- 72) ?x576)))
 (let ((?x3709 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4267 (* 36 ?x3709)))
 (let ((?x3348 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2910 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3199 (* (- 3) ?x2910)))
 (let ((?x3342 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2354 (* (- 1) ?x3342)))
 (let ((?x2172 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2174 (* 3 ?x2172)))
 (let ((?x2066 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2104 (* (- 1) ?x2066)))
 (let ((?x1821 (+ ?x2104 ?x2174 (* (- 18) (* ?x564 ?x564 ?x216 ?x216)) ?x2354 (* (- 72) (* y00 ?x564 ?x216)) ?x3199 ?x3348 ?x4267 (* 12 (* y00 ?x564 ?x564 ?x216)) ?x794 ?x1624 ?x2163 ?x1107 (* (- 36) (* y00 y00 ?x564 ?x216)) ?x4027 (* 18 (* y00 ?x564 ?x216 ?x216)) ?x4040 ?x4698 ?x4866 ?x2619 ?x636 ?x3382 (* 3 (* x00 z00 z00 ?x564 ?x216)) ?x3870 (* (- 12) (* ?x564 ?x564 ?x217 ?x216)) (* 36 (* y00 ?x564 ?x217 ?x216)) ?x2499 ?x3532 (* (- 3) (* z00 z00 ?x564 ?x217 ?x216)) ?x1333 ?x1009 ?x1036 ?x493 ?x4669 ?x680 ?x2034 ?x4531 ?x3206 ?x969 ?x1000 ?x1165 ?x1235 (* 18 (* x00 ?x564 ?x217 ?x216)) ?x1113 ?x3694 (* (- 3) (* z00 z00 ?x564 ?x216 ?x216)) ?x2521 ?x2446 ?x2408 ?x2577 (* (- 18) (* x00 y00 ?x564 ?x216)) (* (- 1) (* y00 y00 z00 ?x564 ?x216)) ?x3887 (* 6 (* z00 ?x564 ?x217 ?x216)) ?x3625 ?x4117 ?x719 ?x1534 ?x784 ?x3298 ?x4448 ?x4421 ?x1907 ?x1575 (* (- 2) (* y00 y00 ?x564 ?x564 ?x216)) ?x1267 ?x4266 ?x1943 ?x2024 ?x2036 ?x2048 ?x1976 (* (- 3) (* z00 ?x564 ?x564 ?x216 ?x216)) ?x3663 ?x4126 (* 72 (* ?x564 ?x217 ?x216)) ?x1828 ?x2709 ?x2262 ?x3591 ?x767 (* (- 6) (* y00 z00 ?x564 ?x216)) ?x3007 ?x2198 ?x749 (* (- 108) (* x00 ?x564 ?x216)) ?x3662 ?x3443 ?x3967 ?x3847 (* (- 1) (* y00 z00 ?x564 ?x217 ?x216)) ?x2763 ?x2987 (* 2 (* z00 ?x564 ?x217 ?x217 ?x216)) (* 108 (* ?x564 ?x216 ?x216)) ?x502 (* 18 (* x00 ?x564 ?x564 ?x216)) ?x841 ?x1256 (* (- 18) (* ?x564 ?x217 ?x216 ?x216)) ?x488 ?x528 (* 3 (* y00 z00 z00 ?x564 ?x216)) (* 3 (* x00 z00 ?x564 ?x564 ?x216)) ?x437 ?x1448 ?x1403 ?x1489 ?x1794 ?x1566 ?x1862)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x1103 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3812 (= ?x1103 0)))
 (let ((?x2897 (* y00 z y)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2831 (* z y y)))
 (let ((?x3494 (* x00 z)))
 (let ((?x2059 (* 18 ?x3494)))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x2764 (* z y)))
 (let ((?x1475 (* (- 12) ?x2764)))
 (let ((?x2090 (* z00 y)))
 (let ((?x2107 (* 6 ?x2090)))
 (let ((?x2003 (* y00 z00)))
 (let ((?x3331 (* (- 6) ?x2003)))
 (let ((?x2571 (* y00 z)))
 (let ((?x2574 (* 12 ?x2571)))
 (let ((?x1746 (* z x)))
 (let ((?x2575 (* (- 18) ?x1746)))
 (let ((?x3211 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2575 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2574 ?x3331 (* 36 (* y00 y)) ?x2107 ?x1475 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x980 ?x2059 ?x2831 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x632 (* 18 (* y00 x)) ?x71 ?x689 ?x2897 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x3156 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2115 (* (- 6) ?x2090)))
 (let ((?x3357 (* 6 ?x2003)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x3316 (+ (* (- 1) (* y00 z00 z)) ?x1475 ?x2575 (* 18 (* x00 z00)) ?x654 ?x706 ?x2059 ?x2574 ?x3357 (* 12 (* y00 y)) ?x64 ?x632 ?x2115 ?x71 ?x689 ?x99 (* (- 18) (* z00 x)) ?x3156 (* (- 1) (* z00 z00 y)))))
 (let ((?x3378 (* z00 z00 z)))
 (let ((?x1878 (* (- 12) ?x2571)))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x3132 (+ (* (- 6) ?x2764) ?x562 ?x573 ?x1878 (* 18 ?x2003) ?x64 ?x632 (* (- 6) (* z00 z)) ?x71 ?x689 ?x3378)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2785 (* (- 1) ?x469)))
 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2785 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x3132 0) (= ?x3316 0) (= ?x3211 0) $x3812 (not (= ?x1821 0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x660 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x1893 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1625 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x913 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x434 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x468 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1255 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x501 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2987 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4294 (* y00 z00 ?x564 ?x217 ?x216)))
 (let ((?x3979 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3601 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2205 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2155 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2143 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2702 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3504 (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2963 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1630 (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2037 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2025 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1671 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x857 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1575 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1642 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4461 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1402 (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x826 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1539 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x718 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1382 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3628 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3907 (* y00 y00 z00 ?x564 ?x216)))
 (let ((?x2569 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2401 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2441 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3647 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1219 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x976 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x868 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1233 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4280 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4669 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1035 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1002 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1370 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3533 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x4145 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1138 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1608 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3739 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x634 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4038 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2616 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2156 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x668 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3348 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2910 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3342 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2172 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2066 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x809 (+ ?x2066 (* (- 3) ?x2172) (* 18 (* ?x564 ?x564 ?x216 ?x216)) ?x3342 (* 72 (* y00 ?x564 ?x216)) (* 3 ?x2910) (* (- 1) ?x3348) (* (- 36) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* (- 12) (* y00 ?x564 ?x564 ?x216)) (* 72 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* 2 ?x668) (* (- 18) ?x2156) ?x2616 (* 36 (* y00 y00 ?x564 ?x216)) (* (- 12) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 18) (* y00 ?x564 ?x216 ?x216)) (* (- 3) ?x4038) (* (- 108) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)) (* 18 ?x634) (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* 3 ?x3739) (* 18 ?x1608) (* (- 3) (* x00 z00 z00 ?x564 ?x216)) (* 6 ?x1138) (* 12 (* ?x564 ?x564 ?x217 ?x216)) (* (- 36) (* y00 ?x564 ?x217 ?x216)) (* 3 ?x4145) (* (- 18) ?x3533) (* 3 (* z00 z00 ?x564 ?x217 ?x216)) (* 3 ?x1370) (* (- 36) ?x1002) (* (- 3) ?x1035) (* (- 72) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x4669) (* 12 ?x4280) (* 18 ?x1233) (* 108 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 3) ?x868) (* (- 18) ?x976) (* (- 18) (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)) (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216)) (* (- 3) ?x1219) (* (- 18) (* x00 ?x564 ?x217 ?x216)) (* (- 108) (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)) (* 18 ?x3647) (* 3 (* z00 z00 ?x564 ?x216 ?x216)) (* 6 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 36) ?x2441) (* (- 6) ?x2401) (* (- 2) ?x2569) (* 18 (* x00 y00 ?x564 ?x216)) ?x3907 (* (- 1) (* y00 ?x564 ?x564 ?x217 ?x216)) (* (- 6) (* z00 ?x564 ?x217 ?x216)) (* (- 2) ?x3628) (* 3 ?x1382) (* (- 3) ?x718) (* (- 18) ?x1539) (* (- 18) ?x826) (* 3 ?x1402) ?x4461 (* 108 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x1642) (* (- 1) ?x1575) (* 2 (* y00 y00 ?x564 ?x564 ?x216)) (* 2 ?x857) (* 36 ?x1671) (* 72 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)) (* (- 3) ?x2025) (* (- 3) ?x2037) (* (- 18) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)) ?x1630 (* 3 (* z00 ?x564 ?x564 ?x216 ?x216)) (* 3 ?x2963) (* 18 ?x3504) (* (- 72) (* ?x564 ?x217 ?x216)) (* 108 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 19) ?x2702) (* 3 ?x2143) (* 18 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* 12 ?x2155) (* 6 (* y00 z00 ?x564 ?x216)) (* 72 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)) (* (- 12) ?x2205) (* (- 72) (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)) (* 108 (* x00 ?x564 ?x216)) (* (- 1) (* ?x564 ?x564 ?x217 ?x217 ?x216)) (* 6 ?x3601) (* (- 6) (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* 18 ?x3979) ?x4294 (* 12 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* (- 1) ?x2987) (* (- 2) (* z00 ?x564 ?x217 ?x217 ?x216)) (* (- 108) (* ?x564 ?x216 ?x216)) (* (- 6) ?x501) (* (- 18) (* x00 ?x564 ?x564 ?x216)) (* 36 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)) (* (- 3) ?x1255) (* 18 (* ?x564 ?x217 ?x216 ?x216)) (* 2 ?x468) (* (- 1) ?x528) (* (- 3) (* y00 z00 z00 ?x564 ?x216)) (* (- 3) (* x00 z00 ?x564 ?x564 ?x216)) (* (- 2) ?x434) (* 3 ?x913) (* (- 72) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)) (* 18 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)) (* (- 108) (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)) (* 36 ?x1625) ?x1893)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x1103 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3812 (= ?x1103 0)))
 (let ((?x74 (* 108 x00)))
 (let ((?x2336 (* (- 72) y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x2260 (* (- 108) x)))
 (let ((?x3494 (* x00 z)))
 (let ((?x803 (* (- 18) ?x3494)))
 (let ((?x739 (* 36 ?x677)))
 (let ((?x2764 (* z y)))
 (let ((?x3295 (* 12 ?x2764)))
 (let ((?x2090 (* z00 y)))
 (let ((?x2115 (* (- 6) ?x2090)))
 (let ((?x2003 (* y00 z00)))
 (let ((?x3357 (* 6 ?x2003)))
 (let ((?x2571 (* y00 z)))
 (let ((?x1878 (* (- 12) ?x2571)))
 (let ((?x3042 (* y00 z00 y)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x1746 (* z x)))
 (let ((?x4219 (* 18 ?x1746)))
 (let ((?x3309 (+ (* 18 (* x00 y00)) (* 18 (* y x)) ?x4219 (* 3 (* z00 z00 x)) ?x113 (* (- 3) (* x00 z00 z)) ?x3042 ?x1878 ?x3357 (* (- 36) (* y00 y)) ?x2115 ?x3295 (* 3 (* z00 z x)) (* (- 2) (* z00 y y)) ?x739 ?x803 (* (- 1) (* z y y)) (* (- 18) (* x00 y)) (* (- 3) (* x00 z00 z00)) ?x2260 ?x67 (* (- 18) (* y00 x)) ?x2336 ?x74 (* (- 1) (* y00 z y)) (* (- 3) (* y00 z00 z00)) (* 2 (* y00 y00 z)) (* 3 (* z00 z00 y)))))
 (let ((?x3313 (* z00 z00 y)))
 (let ((?x2107 (* 6 ?x2090)))
 (let ((?x3331 (* (- 6) ?x2003)))
 (let ((?x804 (* 24 ?x677)))
 (let ((?x2780 (* y00 z00 z)))
 (let ((?x590 (+ ?x2780 ?x3295 ?x4219 (* (- 18) (* x00 z00)) (* (- 12) ?x651) ?x804 ?x803 ?x1878 ?x3331 (* (- 12) (* y00 y)) ?x2260 ?x67 ?x2107 ?x2336 ?x74 (* (- 1) (* y00 z00 z00)) (* 18 (* z00 x)) (* (- 1) (* z00 z y)) ?x3313)))
 (let ((?x2574 (* 12 ?x2571)))
 (let ((?x469 (* z00 z00)))
 (let ((?x2317 (* (- 6) ?x469)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x2323 (+ (* 6 ?x2764) ?x55 ?x2317 ?x2574 (* (- 18) ?x2003) ?x2260 ?x67 (* 6 (* z00 z)) ?x2336 ?x74 (* (- 1) (* z00 z00 z)))))
 (let ((?x50 (* z z)))
 (let ((?x541 (* (- 1) ?x50)))
 (let ((?x539 (* (- 6) z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x45 (* 12 y)))
 (let ((?x540 (* (- 12) y00)))
 (let (($x693 (and (= (+ z (* (- 1) z00) (* (- 6) n) (* 6 n00)) 0) (= (+ ?x469 ?x540 ?x45 ?x46 ?x539 ?x541) 0) (= ?x2323 0) (= ?x590 0) (= ?x3309 0) $x3812 (not (= ?x809 0)))))
 (let ((?x1862 (* (- 1) ?x1893)))
 (let ((?x1566 (* (- 36) ?x1625)))
 (let ((?x1797 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1794 (* 108 ?x1797)))
 (let ((?x1570 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1489 (* (- 18) ?x1570)))
 (let ((?x1399 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1403 (* 72 ?x1399)))
 (let ((?x1448 (* (- 3) ?x913)))
 (let ((?x437 (* 2 ?x434)))
 (let ((?x488 (* (- 2) ?x468)))
 (let ((?x1256 (* 3 ?x1255)))
 (let ((?x1088 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x841 (* (- 36) ?x1088)))
 (let ((?x502 (* 6 ?x501)))
 (let ((?x1350 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2763 (* (- 12) ?x1350)))
 (let ((?x3847 (* (- 18) ?x3979)))
 (let ((?x3962 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3967 (* 6 ?x3962)))
 (let ((?x3443 (* (- 6) ?x3601)))
 (let ((?x3662 (* ?x564 ?x564 ?x217 ?x217 ?x216)))
 (let ((?x744 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x749 (* 72 ?x744)))
 (let ((?x2198 (* 12 ?x2205)))
 (let ((?x4782 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3007 (* (- 72) ?x4782)))
 (let ((?x767 (* (- 12) ?x2155)))
 (let ((?x681 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x3591 (* (- 18) ?x681)))
 (let ((?x2262 (* (- 3) ?x2143)))
 (let ((?x2709 (* 19 ?x2702)))
 (let ((?x3467 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1828 (* (- 108) ?x3467)))
 (let ((?x4126 (* (- 18) ?x3504)))
 (let ((?x3663 (* (- 3) ?x2963)))
 (let ((?x1976 (* (- 1) ?x1630)))
 (let ((?x2046 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* 18 ?x2046)))
 (let ((?x2036 (* 3 ?x2037)))
 (let ((?x2024 (* 3 ?x2025)))
 (let ((?x1933 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1943 (* (- 72) ?x1933)))
 (let ((?x4266 (* (- 36) ?x1671)))
 (let ((?x1267 (* (- 2) ?x857)))
 (let ((?x1907 (* 12 ?x1642)))
 (let ((?x4434 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4421 (* (- 108) ?x4434)))
 (let ((?x4448 (* (- 1) ?x4461)))
 (let ((?x3298 (* (- 3) ?x1402)))
 (let ((?x784 (* 18 ?x826)))
 (let ((?x1534 (* 18 ?x1539)))
 (let ((?x719 (* 3 ?x718)))
 (let ((?x4117 (* (- 3) ?x1382)))
 (let ((?x3625 (* 2 ?x3628)))
 (let ((?x3887 (* y00 ?x564 ?x564 ?x217 ?x216)))
 (let ((?x2577 (* 2 ?x2569)))
 (let ((?x2408 (* 6 ?x2401)))
 (let ((?x2446 (* 36 ?x2441)))
 (let ((?x3813 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2521 (* (- 6) ?x3813)))
 (let ((?x3694 (* (- 18) ?x3647)))
 (let ((?x1105 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1113 (* 108 ?x1105)))
 (let ((?x1235 (* 3 ?x1219)))
 (let ((?x1132 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1165 (* (- 18) ?x1132)))
 (let ((?x1005 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1000 (* 18 ?x1005)))
 (let ((?x969 (* 18 ?x976)))
 (let ((?x3206 (* 3 ?x868)))
 (let ((?x816 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4531 (* (- 108) ?x816)))
 (let ((?x2034 (* (- 18) ?x1233)))
 (let ((?x680 (* (- 12) ?x4280)))
 (let ((?x669 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x493 (* 72 ?x669)))
 (let ((?x1036 (* 3 ?x1035)))
 (let ((?x1009 (* 36 ?x1002)))
 (let ((?x1333 (* (- 3) ?x1370)))
 (let ((?x3532 (* 18 ?x3533)))
 (let ((?x2499 (* (- 3) ?x4145)))
 (let ((?x3870 (* (- 6) ?x1138)))
 (let ((?x3382 (* (- 18) ?x1608)))
 (let ((?x636 (* (- 3) ?x3739)))
 (let ((?x2622 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2619 (* 18 ?x2622)))
 (let ((?x4866 (* (- 18) ?x634)))
 (let ((?x4694 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4698 (* 108 ?x4694)))
 (let ((?x4040 (* 3 ?x4038)))
 (let ((?x4025 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4027 (* 12 ?x4025)))
 (let ((?x1107 (* (- 1) ?x2616)))
 (let ((?x2163 (* 18 ?x2156)))
 (let ((?x1624 (* (- 2) ?x668)))
 (let ((?x576 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x794 (* (- 72) ?x576)))
 (let ((?x3709 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4267 (* 36 ?x3709)))
 (let ((?x3199 (* (- 3) ?x2910)))
 (let ((?x2354 (* (- 1) ?x3342)))
 (let ((?x2174 (* 3 ?x2172)))
 (let ((?x2104 (* (- 1) ?x2066)))
 (let ((?x1821 (+ ?x2104 ?x2174 (* (- 18) (* ?x564 ?x564 ?x216 ?x216)) ?x2354 (* (- 72) (* y00 ?x564 ?x216)) ?x3199 ?x3348 ?x4267 (* 12 (* y00 ?x564 ?x564 ?x216)) ?x794 ?x1624 ?x2163 ?x1107 (* (- 36) (* y00 y00 ?x564 ?x216)) ?x4027 (* 18 (* y00 ?x564 ?x216 ?x216)) ?x4040 ?x4698 ?x4866 ?x2619 ?x636 ?x3382 (* 3 (* x00 z00 z00 ?x564 ?x216)) ?x3870 (* (- 12) (* ?x564 ?x564 ?x217 ?x216)) (* 36 (* y00 ?x564 ?x217 ?x216)) ?x2499 ?x3532 (* (- 3) (* z00 z00 ?x564 ?x217 ?x216)) ?x1333 ?x1009 ?x1036 ?x493 ?x4669 ?x680 ?x2034 ?x4531 ?x3206 ?x969 ?x1000 ?x1165 ?x1235 (* 18 (* x00 ?x564 ?x217 ?x216)) ?x1113 ?x3694 (* (- 3) (* z00 z00 ?x564 ?x216 ?x216)) ?x2521 ?x2446 ?x2408 ?x2577 (* (- 18) (* x00 y00 ?x564 ?x216)) (* (- 1) ?x3907) ?x3887 (* 6 (* z00 ?x564 ?x217 ?x216)) ?x3625 ?x4117 ?x719 ?x1534 ?x784 ?x3298 ?x4448 ?x4421 ?x1907 ?x1575 (* (- 2) (* y00 y00 ?x564 ?x564 ?x216)) ?x1267 ?x4266 ?x1943 ?x2024 ?x2036 ?x2048 ?x1976 (* (- 3) (* z00 ?x564 ?x564 ?x216 ?x216)) ?x3663 ?x4126 (* 72 (* ?x564 ?x217 ?x216)) ?x1828 ?x2709 ?x2262 ?x3591 ?x767 (* (- 6) (* y00 z00 ?x564 ?x216)) ?x3007 ?x2198 ?x749 (* (- 108) (* x00 ?x564 ?x216)) ?x3662 ?x3443 ?x3967 ?x3847 (* (- 1) ?x4294) ?x2763 ?x2987 (* 2 (* z00 ?x564 ?x217 ?x217 ?x216)) (* 108 (* ?x564 ?x216 ?x216)) ?x502 (* 18 (* x00 ?x564 ?x564 ?x216)) ?x841 ?x1256 (* (- 18) (* ?x564 ?x217 ?x216 ?x216)) ?x488 ?x528 (* 3 (* y00 z00 z00 ?x564 ?x216)) (* 3 (* x00 z00 ?x564 ?x564 ?x216)) ?x437 ?x1448 ?x1403 ?x1489 ?x1794 ?x1566 ?x1862)))
 (let ((?x2897 (* y00 z y)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2831 (* z y y)))
 (let ((?x2059 (* 18 ?x3494)))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x1475 (* (- 12) ?x2764)))
 (let ((?x2575 (* (- 18) ?x1746)))
 (let ((?x3211 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2575 (* (- 3) (* z00 z00 x)) (* (- 1) ?x113) (* 3 (* x00 z00 z)) (* (- 1) ?x3042) ?x2574 ?x3331 (* 36 (* y00 y)) ?x2107 ?x1475 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x980 ?x2059 ?x2831 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x632 (* 18 (* y00 x)) ?x71 ?x689 ?x2897 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) ?x3313))))
 (let ((?x3156 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x3316 (+ (* (- 1) ?x2780) ?x1475 ?x2575 (* 18 (* x00 z00)) ?x654 ?x706 ?x2059 ?x2574 ?x3357 (* 12 (* y00 y)) ?x64 ?x632 ?x2115 ?x71 ?x689 ?x99 (* (- 18) (* z00 x)) ?x3156 (* (- 1) ?x3313))))
 (let ((?x3378 (* z00 z00 z)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x3132 (+ (* (- 6) ?x2764) ?x562 ?x573 ?x1878 (* 18 ?x2003) ?x64 ?x632 (* (- 6) (* z00 z)) ?x71 ?x689 ?x3378)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2785 (* (- 1) ?x469)))
 (let (($x2782 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2785 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x3132 0) (= ?x3316 0) (= ?x3211 0) $x3812 (not (= ?x1821 0)))))
 (rewrite (= $x2782 $x693)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let (($x416 (exists ((x Int) (y Int) (z Int) (n Int) )(! (let ((?x218 (+ z 6)))
 (let ((?x217 (+ y z)))
 (let ((?x216 (+ x y)))
 (let ((?x215 (+ n 1)))
 (let ((?x400 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00 z00)))
 (let ((?x398 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x341 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x336 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x328 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x318 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x314 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x312 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x302 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218)))
 (let ((?x290 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x284 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x265 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x246 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x235 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x225 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x220 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x227 (- (- (+ ?x219 ?x220) (* 18 ?x216 ?x216 ?x218 ?x218)) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 z00))))
 (let ((?x233 (+ (- (- ?x227 (* 72 ?x216 y00 ?x218)) ?x225) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218) (* 12 ?x216 y00 ?x218 ?x218))))
 (let ((?x237 (- (- ?x233 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218)) ?x235)))
 (let ((?x239 (+ ?x237 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x242 (- ?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x242 (* 36 ?x216 y00 y00 ?x218)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218) (* 18 ?x216 ?x216 y00 ?x218) ?x246 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x250 (- ?x248 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x252 (+ ?x250 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218))))
 (let ((?x255 (- ?x252 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00))))
 (let ((?x256 (- ?x255 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x261 (- (+ ?x256 (* 3 ?x216 x00 ?x218 z00 z00)) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x264 (+ (- ?x261 (* 12 ?x216 ?x217 ?x218 ?x218)) (* 36 ?x216 ?x217 y00 ?x218))))
 (let ((?x268 (+ (- ?x264 ?x265) (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x272 (- (- ?x268 (* 3 ?x216 ?x217 ?x218 z00 z00)) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x277 (+ ?x272 (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x281 (- ?x277 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x282 (- ?x281 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x287 (+ (- ?x282 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218)) ?x284 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x289 (- ?x287 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x293 (+ ?x289 ?x290 (* 18 ?x216 x00 ?x217 ?x218) (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x297 (- ?x293 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x299 (- (- ?x297 (* 3 ?x216 ?x216 ?x218 z00 z00)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00))))
 (let ((?x303 (+ ?x299 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x302)))
 (let ((?x307 (- (- ?x303 (* 18 ?x216 x00 y00 ?x218)) (* ?x216 y00 y00 ?x218 z00))))
 (let ((?x311 (+ ?x307 (* ?x216 ?x217 y00 ?x218 ?x218) (* 6 ?x216 ?x217 ?x218 z00) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x317 (+ (- ?x311 ?x312) ?x314 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x322 (- (- ?x317 ?x318) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x323 (- ?x322 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x326 (+ ?x323 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x333 (- (- (- ?x326 (* 2 ?x216 y00 y00 ?x218 ?x218)) ?x328) (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x334 (- ?x333 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x338 (+ ?x334 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 z00) ?x336 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x343 (- ?x338 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x346 (- (- (- ?x343 (* 3 ?x216 ?x216 ?x218 ?x218 z00)) ?x341) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x350 (- (+ ?x346 (* 72 ?x216 ?x217 ?x218)) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x353 (+ ?x350 (* 19 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x359 (- ?x353 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x360 (- ?x359 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 y00 ?x218 ?x218))))
 (let ((?x361 (- ?x360 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x363 (- (- ?x361 (* 6 ?x216 y00 ?x218 z00)) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x366 (+ ?x363 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x370 (+ (- ?x366 (* 108 ?x216 x00 ?x218)) (* ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x372 (- ?x370 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x374 (+ ?x372 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00))))
 (let ((?x378 (- ?x374 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x380 (- (- ?x378 (* ?x216 ?x217 y00 ?x218 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x386 (+ ?x380 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 z00) (* 2 ?x216 ?x217 ?x217 ?x218 z00) (* 108 ?x216 ?x216 ?x218) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x216 x00 ?x218 ?x218))))
 (let ((?x388 (- ?x386 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218))))
 (let ((?x390 (+ ?x388 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00 z00))))
 (let ((?x394 (- (- ?x390 (* 18 ?x216 ?x216 ?x217 ?x218)) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x399 (+ ?x394 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 3 ?x216 y00 ?x218 z00 z00) (* 3 ?x216 x00 ?x218 ?x218 z00) ?x398)))
 (let ((?x403 (+ (- ?x399 ?x400) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x405 (- ?x403 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x410 (- (+ ?x405 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218)) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x411 (- ?x410 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x67 (* 72 y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x58 (+ (- (* (- 6) y z) (* z00 z00 z00)) (* 6 z00 z00))))
 (let ((?x70 (- (- (+ (- ?x58 ?x59) (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x46 (* 6 z)))
 (let ((?x48 (- (- (+ (* ?x29 z00 z00) (* 12 y00)) (* 12 y)) ?x46)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (and $x39 (= (+ ?x48 ?x49 ?x50) 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x411 0))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!38))
 ))
 (let ((?x3616 (lambda ((x Int) (y Int) (z Int) (n Int) )(let ((?x216 (+ x y)))
 (let ((?x217 (+ y z)))
 (let ((?x564 (+ 6 z)))
 (let ((?x578 (+ 1 n)))
 (let ((?x1893 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1862 (* (- 1) ?x1893)))
 (let ((?x1625 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1566 (* (- 36) ?x1625)))
 (let ((?x1797 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1794 (* 108 ?x1797)))
 (let ((?x1570 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1489 (* (- 18) ?x1570)))
 (let ((?x1399 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1403 (* 72 ?x1399)))
 (let ((?x913 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1448 (* (- 3) ?x913)))
 (let ((?x434 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x437 (* 2 ?x434)))
 (let ((?x528 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x468 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x488 (* (- 2) ?x468)))
 (let ((?x1255 (* y00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1256 (* 3 ?x1255)))
 (let ((?x1088 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x841 (* (- 36) ?x1088)))
 (let ((?x501 (* z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x502 (* 6 ?x501)))
 (let ((?x2987 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1350 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2763 (* (- 12) ?x1350)))
 (let ((?x3979 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3847 (* (- 18) ?x3979)))
 (let ((?x3962 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3967 (* 6 ?x3962)))
 (let ((?x3601 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3443 (* (- 6) ?x3601)))
 (let ((?x3662 (* ?x564 ?x564 ?x217 ?x217 ?x216)))
 (let ((?x744 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x749 (* 72 ?x744)))
 (let ((?x2205 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2198 (* 12 ?x2205)))
 (let ((?x4782 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3007 (* (- 72) ?x4782)))
 (let ((?x2155 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x767 (* (- 12) ?x2155)))
 (let ((?x681 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x3591 (* (- 18) ?x681)))
 (let ((?x2143 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2262 (* (- 3) ?x2143)))
 (let ((?x2702 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2709 (* 19 ?x2702)))
 (let ((?x3467 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1828 (* (- 108) ?x3467)))
 (let ((?x3504 (* x00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4126 (* (- 18) ?x3504)))
 (let ((?x2963 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3663 (* (- 3) ?x2963)))
 (let ((?x1630 (* y00 y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1976 (* (- 1) ?x1630)))
 (let ((?x2046 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2048 (* 18 ?x2046)))
 (let ((?x2037 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2036 (* 3 ?x2037)))
 (let ((?x2025 (* x00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2024 (* 3 ?x2025)))
 (let ((?x1933 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1943 (* (- 72) ?x1933)))
 (let ((?x1671 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4266 (* (- 36) ?x1671)))
 (let ((?x857 (* y00 y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1267 (* (- 2) ?x857)))
 (let ((?x1575 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1642 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1907 (* 12 ?x1642)))
 (let ((?x4434 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4421 (* (- 108) ?x4434)))
 (let ((?x4461 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4448 (* (- 1) ?x4461)))
 (let ((?x1402 (* z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3298 (* (- 3) ?x1402)))
 (let ((?x826 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x784 (* 18 ?x826)))
 (let ((?x1539 (* x00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1534 (* 18 ?x1539)))
 (let ((?x718 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x719 (* 3 ?x718)))
 (let ((?x1382 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4117 (* (- 3) ?x1382)))
 (let ((?x3628 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3625 (* 2 ?x3628)))
 (let ((?x3887 (* y00 ?x564 ?x564 ?x217 ?x216)))
 (let ((?x2569 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2577 (* 2 ?x2569)))
 (let ((?x2401 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2408 (* 6 ?x2401)))
 (let ((?x2441 (* y00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2446 (* 36 ?x2441)))
 (let ((?x3813 (* y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2521 (* (- 6) ?x3813)))
 (let ((?x3647 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3694 (* (- 18) ?x3647)))
 (let ((?x1105 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1113 (* 108 ?x1105)))
 (let ((?x1219 (* x00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1235 (* 3 ?x1219)))
 (let ((?x1132 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x1165 (* (- 18) ?x1132)))
 (let ((?x1005 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1000 (* 18 ?x1005)))
 (let ((?x976 (* x00 y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x969 (* 18 ?x976)))
 (let ((?x868 (* y00 z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3206 (* 3 ?x868)))
 (let ((?x816 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4531 (* (- 108) ?x816)))
 (let ((?x1233 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x2034 (* (- 18) ?x1233)))
 (let ((?x4280 (* ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x680 (* (- 12) ?x4280)))
 (let ((?x4669 (* y00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x669 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x493 (* 72 ?x669)))
 (let ((?x1035 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x1036 (* 3 ?x1035)))
 (let ((?x1002 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1009 (* 36 ?x1002)))
 (let ((?x1370 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x1333 (* (- 3) ?x1370)))
 (let ((?x3533 (* y00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3532 (* 18 ?x3533)))
 (let ((?x4145 (* z00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x2499 (* (- 3) ?x4145)))
 (let ((?x1138 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x3870 (* (- 6) ?x1138)))
 (let ((?x1608 (* ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x3382 (* (- 18) ?x1608)))
 (let ((?x3739 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216 ?x216)))
 (let ((?x636 (* (- 3) ?x3739)))
 (let ((?x2622 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2619 (* 18 ?x2622)))
 (let ((?x634 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4866 (* (- 18) ?x634)))
 (let ((?x4694 (* x00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x4698 (* 108 ?x4694)))
 (let ((?x4038 (* x00 z00 ?x578 ?x564 ?x564 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4040 (* 3 ?x4038)))
 (let ((?x4025 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x4027 (* 12 ?x4025)))
 (let ((?x2616 (* ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1107 (* (- 1) ?x2616)))
 (let ((?x2156 (* x00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2163 (* 18 ?x2156)))
 (let ((?x668 (* z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x1624 (* (- 2) ?x668)))
 (let ((?x576 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x794 (* (- 72) ?x576)))
 (let ((?x3709 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x4267 (* 36 ?x3709)))
 (let ((?x3348 (* y00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x564 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2910 (* x00 z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216)))
 (let ((?x3199 (* (- 3) ?x2910)))
 (let ((?x3342 (* y00 y00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x216 ?x216 ?x216)))
 (let ((?x2354 (* (- 1) ?x3342)))
 (let ((?x2172 (* z00 z00 ?x578 ?x578 ?x578 ?x564 ?x564 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2174 (* 3 ?x2172)))
 (let ((?x2066 (* y00 z00 ?x578 ?x564 ?x564 ?x564 ?x217 ?x217 ?x217 ?x216 ?x216 ?x216)))
 (let ((?x2104 (* (- 1) ?x2066)))
 (let ((?x1821 (+ ?x2104 ?x2174 (* (- 18) (* ?x564 ?x564 ?x216 ?x216)) ?x2354 (* (- 72) (* y00 ?x564 ?x216)) ?x3199 ?x3348 ?x4267 (* 12 (* y00 ?x564 ?x564 ?x216)) ?x794 ?x1624 ?x2163 ?x1107 (* (- 36) (* y00 y00 ?x564 ?x216)) ?x4027 (* 18 (* y00 ?x564 ?x216 ?x216)) ?x4040 ?x4698 ?x4866 ?x2619 ?x636 ?x3382 (* 3 (* x00 z00 z00 ?x564 ?x216)) ?x3870 (* (- 12) (* ?x564 ?x564 ?x217 ?x216)) (* 36 (* y00 ?x564 ?x217 ?x216)) ?x2499 ?x3532 (* (- 3) (* z00 z00 ?x564 ?x217 ?x216)) ?x1333 ?x1009 ?x1036 ?x493 ?x4669 ?x680 ?x2034 ?x4531 ?x3206 ?x969 ?x1000 ?x1165 ?x1235 (* 18 (* x00 ?x564 ?x217 ?x216)) ?x1113 ?x3694 (* (- 3) (* z00 z00 ?x564 ?x216 ?x216)) ?x2521 ?x2446 ?x2408 ?x2577 (* (- 18) (* x00 y00 ?x564 ?x216)) (* (- 1) (* y00 y00 z00 ?x564 ?x216)) ?x3887 (* 6 (* z00 ?x564 ?x217 ?x216)) ?x3625 ?x4117 ?x719 ?x1534 ?x784 ?x3298 ?x4448 ?x4421 ?x1907 ?x1575 (* (- 2) (* y00 y00 ?x564 ?x564 ?x216)) ?x1267 ?x4266 ?x1943 ?x2024 ?x2036 ?x2048 ?x1976 (* (- 3) (* z00 ?x564 ?x564 ?x216 ?x216)) ?x3663 ?x4126 (* 72 (* ?x564 ?x217 ?x216)) ?x1828 ?x2709 ?x2262 ?x3591 ?x767 (* (- 6) (* y00 z00 ?x564 ?x216)) ?x3007 ?x2198 ?x749 (* (- 108) (* x00 ?x564 ?x216)) ?x3662 ?x3443 ?x3967 ?x3847 (* (- 1) (* y00 z00 ?x564 ?x217 ?x216)) ?x2763 ?x2987 (* 2 (* z00 ?x564 ?x217 ?x217 ?x216)) (* 108 (* ?x564 ?x216 ?x216)) ?x502 (* 18 (* x00 ?x564 ?x564 ?x216)) ?x841 ?x1256 (* (- 18) (* ?x564 ?x217 ?x216 ?x216)) ?x488 ?x528 (* 3 (* y00 z00 z00 ?x564 ?x216)) (* 3 (* x00 z00 ?x564 ?x564 ?x216)) ?x437 ?x1448 ?x1403 ?x1489 ?x1794 ?x1566 ?x1862)))
 (let ((?x1395 (* 108 (* x00 x00))))
 (let ((?x196 (* y00 z00 z00 z00)))
 (let ((?x677 (* y00 y00)))
 (let ((?x1148 (* 96 ?x677)))
 (let ((?x1083 (* 16 (* y00 y00 y00))))
 (let ((?x914 (* y y y)))
 (let ((?x953 (* (- 4) ?x914)))
 (let ((?x900 (* x x)))
 (let ((?x901 (* 108 ?x900)))
 (let ((?x651 (* y y)))
 (let ((?x896 (* 24 ?x651)))
 (let ((?x1103 (+ (* 216 (* x00 y00)) (* 108 (* y x)) (* 36 (* x00 z00)) (* (- 2) (* z00 z00 z00 x)) (* 18 (* z00 z00 x)) (* (- 12) (* y00 y00 z00)) (* (- 1) (* y00 y00 z00 z00)) ?x896 ?x901 ?x953 (* 18 (* y00 z00 y)) (* 24 (* y00 z00)) (* (- 120) (* y00 y)) (* (- 24) (* z00 y)) ?x1083 (* (- 6) (* z00 y y)) ?x1148 (* (- 12) (* y00 y y)) (* (- 36) (* x00 y00 z00)) (* (- 108) (* x00 y)) (* (- 18) (* x00 z00 z00)) (* (- 216) (* x00 x)) ?x196 (* 2 (* x00 z00 z00 z00)) (* (- 216) (* y00 x)) (* z00 z00 y y) (* (- 10) (* y00 z00 z00)) (* (- 36) (* z00 x)) (* 36 (* y00 z00 x)) (* 10 (* z00 z00 y)) ?x1395 (* (- 1) (* z00 z00 z00 y)))))
 (let (($x3812 (= ?x1103 0)))
 (let ((?x2897 (* y00 z y)))
 (let ((?x689 (* (- 108) x00)))
 (let ((?x71 (* 72 y)))
 (let ((?x632 (* (- 72) y00)))
 (let ((?x64 (* 108 x)))
 (let ((?x2831 (* z y y)))
 (let ((?x3494 (* x00 z)))
 (let ((?x2059 (* 18 ?x3494)))
 (let ((?x980 (* (- 36) ?x677)))
 (let ((?x2764 (* z y)))
 (let ((?x1475 (* (- 12) ?x2764)))
 (let ((?x2090 (* z00 y)))
 (let ((?x2107 (* 6 ?x2090)))
 (let ((?x2003 (* y00 z00)))
 (let ((?x3331 (* (- 6) ?x2003)))
 (let ((?x2571 (* y00 z)))
 (let ((?x2574 (* 12 ?x2571)))
 (let ((?x1746 (* z x)))
 (let ((?x2575 (* (- 18) ?x1746)))
 (let ((?x3211 (+ (* (- 18) (* x00 y00)) (* (- 18) (* y x)) ?x2575 (* (- 3) (* z00 z00 x)) (* (- 1) (* y00 y00 z00)) (* 3 (* x00 z00 z)) (* (- 1) (* y00 z00 y)) ?x2574 ?x3331 (* 36 (* y00 y)) ?x2107 ?x1475 (* (- 3) (* z00 z x)) (* 2 (* z00 y y)) ?x980 ?x2059 ?x2831 (* 18 (* x00 y)) (* 3 (* x00 z00 z00)) ?x64 ?x632 (* 18 (* y00 x)) ?x71 ?x689 ?x2897 (* 3 (* y00 z00 z00)) (* (- 2) (* y00 y00 z)) (* (- 3) (* z00 z00 y)))))
 (let ((?x3156 (* z00 z y)))
 (let ((?x99 (* y00 z00 z00)))
 (let ((?x2115 (* (- 6) ?x2090)))
 (let ((?x3357 (* 6 ?x2003)))
 (let ((?x706 (* (- 24) ?x677)))
 (let ((?x654 (* 12 ?x651)))
 (let ((?x3316 (+ (* (- 1) (* y00 z00 z)) ?x1475 ?x2575 (* 18 (* x00 z00)) ?x654 ?x706 ?x2059 ?x2574 ?x3357 (* 12 (* y00 y)) ?x64 ?x632 ?x2115 ?x71 ?x689 ?x99 (* (- 18) (* z00 x)) ?x3156 (* (- 1) (* z00 z00 y)))))
 (let ((?x3378 (* z00 z00 z)))
 (let ((?x1878 (* (- 12) ?x2571)))
 (let ((?x469 (* z00 z00)))
 (let ((?x573 (* 6 ?x469)))
 (let ((?x55 (* z00 z00 z00)))
 (let ((?x562 (* (- 1) ?x55)))
 (let ((?x3132 (+ (* (- 6) ?x2764) ?x562 ?x573 ?x1878 (* 18 ?x2003) ?x64 ?x632 (* (- 6) (* z00 z)) ?x71 ?x689 ?x3378)))
 (let ((?x50 (* z z)))
 (let ((?x49 (* 6 z00)))
 (let ((?x43 (* 12 y00)))
 (let ((?x2785 (* (- 1) ?x469)))
 (let (($x2782 (and (= (+ (* (- 1) z) z00 (* 6 n) (* (- 6) n00)) 0) (= (+ ?x2785 ?x43 (* (- 12) y) (* (- 6) z) ?x49 ?x50) 0) (= ?x3132 0) (= ?x3316 0) (= ?x3211 0) $x3812 (not (= ?x1821 0)))))
 (let ((?x218 (+ z 6)))
 (let ((?x215 (+ n 1)))
 (let ((?x400 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00 z00)))
 (let ((?x398 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x341 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x336 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00)))
 (let ((?x328 (* 2 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 ?x218)))
 (let ((?x318 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x314 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x312 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x302 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218)))
 (let ((?x290 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x284 (* 3 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x265 (* 3 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 z00 z00)))
 (let ((?x246 (* 3 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218 z00)))
 (let ((?x235 (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 z00)))
 (let ((?x225 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x220 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00 z00)))
 (let ((?x29 (- 1)))
 (let ((?x219 (* ?x29 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00)))
 (let ((?x227 (- (- (+ ?x219 ?x220) (* 18 ?x216 ?x216 ?x218 ?x218)) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 z00))))
 (let ((?x233 (+ (- (- ?x227 (* 72 ?x216 y00 ?x218)) ?x225) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 ?x218) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218) (* 12 ?x216 y00 ?x218 ?x218))))
 (let ((?x237 (- (- ?x233 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218)) ?x235)))
 (let ((?x239 (+ ?x237 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x242 (- ?x239 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x248 (+ (- ?x242 (* 36 ?x216 y00 y00 ?x218)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 ?x218) (* 18 ?x216 ?x216 y00 ?x218) ?x246 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x250 (- ?x248 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x252 (+ ?x250 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x218 ?x218))))
 (let ((?x255 (- ?x252 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 z00 z00))))
 (let ((?x256 (- ?x255 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x261 (- (+ ?x256 (* 3 ?x216 x00 ?x218 z00 z00)) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x264 (+ (- ?x261 (* 12 ?x216 ?x217 ?x218 ?x218)) (* 36 ?x216 ?x217 y00 ?x218))))
 (let ((?x268 (+ (- ?x264 ?x265) (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x272 (- (- ?x268 (* 3 ?x216 ?x217 ?x218 z00 z00)) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00 z00))))
 (let ((?x277 (+ ?x272 (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218) (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 z00 z00) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x281 (- ?x277 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x282 (- ?x281 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x287 (+ (- ?x282 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218)) ?x284 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218))))
 (let ((?x289 (- ?x287 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x293 (+ ?x289 ?x290 (* 18 ?x216 x00 ?x217 ?x218) (* 108 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x297 (- ?x293 (* 18 ?x215 ?x216 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218))))
 (let ((?x299 (- (- ?x297 (* 3 ?x216 ?x216 ?x218 z00 z00)) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00))))
 (let ((?x303 (+ ?x299 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218) (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 z00) ?x302)))
 (let ((?x307 (- (- ?x303 (* 18 ?x216 x00 y00 ?x218)) (* ?x216 y00 y00 ?x218 z00))))
 (let ((?x311 (+ ?x307 (* ?x216 ?x217 y00 ?x218 ?x218) (* 6 ?x216 ?x217 ?x218 z00) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x317 (+ (- ?x311 ?x312) ?x314 (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x322 (- (- ?x317 ?x318) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x323 (- ?x322 (* 108 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x326 (+ ?x323 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218) (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 z00))))
 (let ((?x333 (- (- (- ?x326 (* 2 ?x216 y00 y00 ?x218 ?x218)) ?x328) (* 36 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x334 (- ?x333 (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x338 (+ ?x334 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 ?x218 ?x218 ?x218 z00) ?x336 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 y00 ?x218 ?x218))))
 (let ((?x343 (- ?x338 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 ?x218 z00))))
 (let ((?x346 (- (- (- ?x343 (* 3 ?x216 ?x216 ?x218 ?x218 z00)) ?x341) (* 18 ?x215 ?x216 ?x216 ?x216 x00 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x350 (- (+ ?x346 (* 72 ?x216 ?x217 ?x218)) (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x353 (+ ?x350 (* 19 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x359 (- ?x353 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218 z00))))
 (let ((?x360 (- ?x359 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 x00 y00 ?x218 ?x218))))
 (let ((?x361 (- ?x360 (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x363 (- (- ?x361 (* 6 ?x216 y00 ?x218 z00)) (* 72 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x366 (+ ?x363 (* 12 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218 ?x218 ?x218) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x370 (+ (- ?x366 (* 108 ?x216 x00 ?x218)) (* ?x216 ?x217 ?x217 ?x218 ?x218))))
 (let ((?x372 (- ?x370 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 z00))))
 (let ((?x374 (+ ?x372 (* 6 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 z00))))
 (let ((?x378 (- ?x374 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x380 (- (- ?x378 (* ?x216 ?x217 y00 ?x218 z00)) (* 12 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218 ?x218))))
 (let ((?x386 (+ ?x380 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 y00 y00 ?x218 ?x218 z00) (* 2 ?x216 ?x217 ?x217 ?x218 z00) (* 108 ?x216 ?x216 ?x218) (* 6 ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 z00) (* 18 ?x216 x00 ?x218 ?x218))))
 (let ((?x388 (- ?x386 (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218))))
 (let ((?x390 (+ ?x388 (* 3 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 ?x218 ?x218 z00 z00))))
 (let ((?x394 (- (- ?x390 (* 18 ?x216 ?x216 ?x217 ?x218)) (* 2 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 y00 y00 ?x218 ?x218 ?x218))))
 (let ((?x399 (+ ?x394 (* ?x215 ?x216 ?x216 ?x216 ?x217 ?x217 ?x217 ?x217 ?x218 ?x218 ?x218 ?x218) (* 3 ?x216 y00 ?x218 z00 z00) (* 3 ?x216 x00 ?x218 ?x218 z00) ?x398)))
 (let ((?x403 (+ (- ?x399 ?x400) (* 72 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x217 ?x218 ?x218))))
 (let ((?x405 (- ?x403 (* 18 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218 ?x218))))
 (let ((?x410 (- (+ ?x405 (* 108 ?x215 ?x215 ?x215 ?x216 ?x216 ?x216 ?x216 ?x218 ?x218)) (* 36 ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218))))
 (let ((?x411 (- ?x410 (* ?x215 ?x215 ?x215 ?x216 ?x216 ?x217 ?x217 ?x217 y00 ?x218 ?x218 ?x218))))
 (let ((?x212 (* y z00 z00 z00)))
 (let ((?x201 (* y y z00 z00)))
 (let ((?x161 (* y00 y00 z00 z00)))
 (let ((?x157 (- (+ (* 216 x00 y00) (* 108 x y) (* 36 x00 z00)) (* 2 x z00 z00 z00))))
 (let ((?x163 (- (- (+ ?x157 (* 18 x z00 z00)) (* 12 y00 y00 z00)) ?x161)))
 (let ((?x169 (- (+ ?x163 (* 24 y y) (* 108 x x)) (* 4 y y y))))
 (let ((?x176 (- (+ ?x169 (* 18 y y00 z00) (* 24 y00 z00)) (* 120 y y00))))
 (let ((?x182 (- (+ (- ?x176 (* 24 y z00)) (* 16 y00 y00 y00)) (* 6 y y z00))))
 (let ((?x192 (- (- (+ ?x182 (* 96 y00 y00)) (* 12 y y y00)) (* 36 x00 y00 z00))))
 (let ((?x195 (- (- (- ?x192 (* 108 x00 y)) (* 18 x00 z00 z00)) (* 216 x x00))))
 (let ((?x200 (- (+ ?x195 ?x196 (* 2 x00 z00 z00 z00)) (* 216 x y00))))
 (let ((?x207 (- (- (+ ?x200 ?x201) (* 10 y00 z00 z00)) (* 36 x z00))))
 (let ((?x211 (+ ?x207 (* 36 x y00 z00) (* 10 y z00 z00) (* 108 x00 x00))))
 (let ((?x74 (* 108 x00)))
 (let ((?x67 (* 72 y00)))
 (let ((?x135 (* y y z)))
 (let ((?x90 (* 18 x00 z)))
 (let ((?x80 (* 12 y z)))
 (let ((?x94 (* 6 y z00)))
 (let ((?x91 (* 6 y00 z00)))
 (let ((?x59 (* 12 y00 z)))
 (let ((?x113 (* y00 y00 z00)))
 (let ((?x81 (* 18 x z)))
 (let ((?x116 (- (- (- (* (- 18) x00 y00) (* 18 x y)) ?x81) (* 3 x z00 z00))))
 (let ((?x121 (- (+ (- ?x116 ?x113) (* 3 x00 z z00)) (* y y00 z00))))
 (let ((?x129 (- (- (+ (- (+ ?x121 ?x59) ?x91) (* 36 y y00) ?x94) ?x80) (* 3 x z z00))))
 (let ((?x138 (+ (- (+ ?x129 (* 2 y y z00)) (* 36 y00 y00)) ?x90 ?x135 (* 18 x00 y) (* 3 x00 z00 z00) ?x64)))
 (let ((?x145 (+ (- (+ (- ?x138 ?x67) (* 18 x y00) ?x71) ?x74) (* y y00 z) (* 3 y00 z00 z00))))
 (let (($x150 (= (- (- ?x145 (* 2 y00 y00 z)) (* 3 y z00 z00)) 0)))
 (let ((?x105 (* y z00 z00)))
 (let ((?x103 (* y z z00)))
 (let ((?x86 (+ (- (- (* ?x29 y00 z z00) ?x80) ?x81) (* 18 x00 z00) (* 12 y y))))
 (let ((?x93 (+ (- ?x86 (* 24 y00 y00)) ?x90 ?x59 ?x91 (* 12 y y00) ?x64)))
 (let ((?x102 (- (+ (- (+ (- (- ?x93 ?x67) ?x94) ?x71) ?x74) ?x99) (* 18 x z00))))
 (let ((?x76 (* z z00 z00)))
 (let ((?x60 (- (+ (- (* (- 6) y z) ?x55) (* 6 z00 z00)) ?x59)))
 (let ((?x70 (- (- (+ ?x60 (* 18 y00 z00) ?x64) ?x67) (* 6 z z00))))
 (let ((?x46 (* 6 z)))
 (let ((?x51 (+ (- (- (+ (* ?x29 z00 z00) ?x43) (* 12 y)) ?x46) ?x49 ?x50)))
 (let (($x39 (= (- (+ (* ?x29 z) z00 (* 6 n)) (* 6 n00)) 0)))
 (let (($x415 (and $x39 (= ?x51 0) (= (+ (- (+ ?x70 ?x71) ?x74) ?x76) 0) (= (- (+ ?x102 ?x103) ?x105) 0) $x150 (= (- ?x211 ?x212) 0) (or (not (= ?x411 0))))))
 (rewrite (= $x415 $x2782)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x417 (asserted $x416)))
 (let ((@x2330 (mp (mp @x417 (quant-intro (proof-bind ?x3616) (= $x416 $x3001)) $x3001) (rewrite (= $x3001 $x3001)) $x3001)))
 (let ((@x3598 (mp (mp @x2330 (quant-intro (proof-bind ?x660) (= $x3001 $x646)) $x646) (quant-intro (proof-bind ?x2390) (= $x646 $x2388)) $x2388)))
 (let ((@x2861 (mp (mp~ @x3598 (sk (~ $x2388 $x1936)) $x1936) (rewrite (= $x1936 $x429)) $x429)))
 (let ((@x908 (and-elim @x2861 $x1929)))
 (let ((@x736 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1929) $x4214)) @x908 $x4214)))
 (let (($x431 (>= ?x1961 0)))
 (let ((@x812 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x1929) $x431)) @x908 $x431)))
 (let (($x1325 (<= ?x3679 0)))
 (let ((@x1063 (and-elim @x2861 $x715)))
 (let ((@x1312 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x715) $x1325)) @x1063 $x1325)))
 (let (($x3701 (>= ?x3679 0)))
 (let ((@x535 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x715) $x3701)) @x1063 $x3701)))
 (let (($x1492 (<= ?x2007 0)))
 (let ((@x966 (and-elim @x2861 $x845)))
 (let ((@x1146 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x845) $x1492)) @x966 $x1492)))
 (let (($x2867 (>= ?x2007 0)))
 (let ((@x1522 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x845) $x2867)) @x966 $x2867)))
 (let (($x858 (<= ?x3911 0)))
 (let ((@x712 (and-elim @x2861 $x4263)))
 (let ((@x4562 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4263) $x858)) @x712 $x858)))
 (let (($x1533 (>= ?x3911 0)))
 (let ((@x832 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x4263) $x1533)) @x712 $x1533)))
 (let (($x853 (<= ?x3181 0)))
 (let ((@x1447 (and-elim @x2861 $x2853)))
 (let ((@x2439 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2853) $x853)) @x1447 $x853)))
 (let (($x3451 (>= ?x3181 0)))
 (let ((@x2453 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2853) $x3451)) @x1447 $x3451)))
 (let (($x3379 (<= ?x807 0)))
 (let ((@x3753 (and-elim @x2861 $x2088)))
 (let ((@x2891 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2088) $x3379)) @x3753 $x3379)))
 (let (($x4444 (>= ?x807 0)))
 (let ((@x1783 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x2088) $x4444)) @x3753 $x4444)))
 (let (($x3051 (not (<= ?x2912 0))))
 (let (($x1390 (>= ?x2912 0)))
 (let ((@x1013 ((_ th-lemma arith) (hypothesis (not $x1390)) @x1783 @x2891 @x1783 @x2891 @x2453 @x2439 @x1783 @x2891 @x1522 @x1146 @x2453 @x2439 @x812 @x736 @x1522 @x1146 @x832 @x4562 @x1522 @x1146 @x535 @x1312 @x1522 @x1146 @x812 @x736 @x1522 @x1146 @x535 @x1312 @x812 @x736 false)))
 (let ((@x3479 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x2937 $x3051 (not $x1390))) (and-elim @x2861 $x1974) (or $x3051 (not $x1390)))))
 ((_ th-lemma arith) (unit-resolution @x3479 (lemma @x1013 $x1390) $x3051) @x1783 @x2891 @x1783 @x2891 @x2453 @x2439 @x1783 @x2891 @x1522 @x1146 @x2453 @x2439 @x812 @x736 @x1522 @x1146 @x832 @x4562 @x1522 @x1146 @x535 @x1312 @x1522 @x1146 @x812 @x736 @x1522 @x1146 @x535 @x1312 @x812 @x736 false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 6
 :arith-assert-diseq        1
 :arith-assert-lower        30
 :arith-assert-upper        8
 :arith-conflicts           2
 :arith-eq-adapter          7
 :arith-grobner             2
 :arith-max-min             1898
 :arith-nonlinear-bounds    22
 :arith-nonlinear-horner    22
 :arith-num-rows            11
 :arith-pivots              7
 :arith-row-summations      9
 :arith-tableau-max-columns 292
 :arith-tableau-max-rows    11
 :conflicts                 2
 :decisions                 1
 :del-clause                22
 :final-checks              4
 :max-memory                5.52
 :memory                    3.70
 :mk-bool-var               27
 :mk-clause                 22
 :num-allocs                72825620
 :num-checks                1
 :propagations              14
 :rlimit-count              239419
 :time                      0.20
 :total-time                0.22)
