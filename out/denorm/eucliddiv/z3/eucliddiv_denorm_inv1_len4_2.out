unsat
((set-logic NIA)
(proof
(let (($x57 (exists ((q Int) (r Int) (y Int) )(! (let ((?x44 (- r y00)))
 (let ((?x43 (+ q 1)))
 (let ((?x50 (* ?x43 ?x43 ?x44 ?x44 y00 y00 y00)))
 (let ((?x48 (* ?x44 ?x44 y00 y00 y00)))
 (let ((?x46 (* ?x43 ?x44 y00 y00 y00)))
 (let ((?x28 (- 1)))
 (let ((?x45 (* ?x28 ?x43 ?x44)))
 (let ((?x47 (+ ?x45 ?x46)))
 (let ((?x49 (- ?x47 ?x48)))
 (let ((?x51 (+ ?x49 ?x50)))
 (let ((?x30 (* ?x28 y00)))
 (let ((?x42 (+ ?x30 y00)))
 (let ((?x52 (* ?x42 ?x51)))
 (let (($x53 (= ?x52 0)))
 (let (($x54 (not $x53)))
 (let (($x55 (or $x54)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ ?x30 y) 0)))
 (and $x33 $x41 $x55))))))))))))))))))) :qid k!29))
 ))
 (let (($x343 (= $x57 false)))
 (let (($x336 (exists ((q Int) (r Int) (y Int) )(! false :qid k!29))
 ))
 (let ((@x342 (elim-unused (= $x336 false))))
 (let (($x339 (= $x57 $x336)))
 (let ((?x422 (lambda ((q Int) (r Int) (y Int) )(let ((?x44 (- r y00)))
 (let ((?x43 (+ q 1)))
 (let ((?x50 (* ?x43 ?x43 ?x44 ?x44 y00 y00 y00)))
 (let ((?x48 (* ?x44 ?x44 y00 y00 y00)))
 (let ((?x46 (* ?x43 ?x44 y00 y00 y00)))
 (let ((?x28 (- 1)))
 (let ((?x45 (* ?x28 ?x43 ?x44)))
 (let ((?x47 (+ ?x45 ?x46)))
 (let ((?x49 (- ?x47 ?x48)))
 (let ((?x51 (+ ?x49 ?x50)))
 (let ((?x30 (* ?x28 y00)))
 (let ((?x42 (+ ?x30 y00)))
 (let ((?x52 (* ?x42 ?x51)))
 (let (($x53 (= ?x52 0)))
 (let (($x54 (not $x53)))
 (let (($x55 (or $x54)))
 (let (($x41 (= (+ (- (- r r00) (* q00 y00)) (* q y00)) 0)))
 (let (($x33 (= (+ ?x30 y) 0)))
 (let (($x56 (and $x33 $x41 $x55)))
 (let (($x334 (= $x56 false)))
 (let (($x373 (= (+ r (* (- 1) r00) (* (- 1) (* q00 y00)) (* y00 q)) 0)))
 (let (($x86 (= (+ (* (- 1) y00) y) 0)))
 (let (($x416 (and $x86 $x373 false)))
 (let (($x327 (= $x55 false)))
 (let ((@x326 (rewrite (= (or false) false))))
 (let (($x322 (or false)))
 (let (($x323 (= $x55 $x322)))
 (let (($x320 (= $x54 false)))
 (let ((@x319 (rewrite (= (not true) false))))
 (let (($x315 (not true)))
 (let (($x316 (= $x54 $x315)))
 (let (($x313 (= $x53 true)))
 (let ((@x312 (rewrite (= (= 0 0) true))))
 (let (($x308 (= 0 0)))
 (let (($x309 (= $x53 $x308)))
 (let ((?x62 (* (- 1) y00)))
 (let ((?x84 (+ r ?x62)))
 (let ((?x81 (+ 1 q)))
 (let ((?x391 (* y00 y00 y00 ?x81 ?x81 ?x84 ?x84)))
 (let ((?x367 (* y00 y00 y00 ?x84 ?x84)))
 (let ((?x380 (* (- 1) ?x367)))
 (let ((?x354 (* y00 y00 y00 ?x81 ?x84)))
 (let ((?x346 (* (- 1) (* ?x81 ?x84))))
 (let ((?x399 (+ ?x346 ?x354 ?x380 ?x391)))
 (let ((?x404 (* 0 ?x399)))
 (let ((@x89 (rewrite (= ?x44 ?x84))))
 (let ((@x83 (rewrite (= ?x43 ?x81))))
 (let ((@x221 (monotonicity @x83 @x83 @x89 @x89 (= ?x50 (* ?x81 ?x81 ?x84 ?x84 y00 y00 y00)))))
 (let ((@x395 (trans @x221 (rewrite (= (* ?x81 ?x81 ?x84 ?x84 y00 y00 y00) ?x391)) (= ?x50 ?x391))))
 (let ((@x156 (monotonicity @x89 @x89 (= ?x48 (* ?x84 ?x84 y00 y00 y00)))))
 (let ((@x375 (trans @x156 (rewrite (= (* ?x84 ?x84 y00 y00 y00) ?x367)) (= ?x48 ?x367))))
 (let ((@x379 (monotonicity (rewrite (= ?x47 (+ ?x346 ?x354))) @x375 (= ?x49 (- (+ ?x346 ?x354) ?x367)))))
 (let ((@x385 (trans @x379 (rewrite (= (- (+ ?x346 ?x354) ?x367) (+ (+ ?x346 ?x354) ?x380))) (= ?x49 (+ (+ ?x346 ?x354) ?x380)))))
 (let ((@x390 (trans @x385 (rewrite (= (+ (+ ?x346 ?x354) ?x380) (+ ?x346 ?x354 ?x380))) (= ?x49 (+ ?x346 ?x354 ?x380)))))
 (let ((@x403 (trans (monotonicity @x390 @x395 (= ?x51 (+ (+ ?x346 ?x354 ?x380) ?x391))) (rewrite (= (+ (+ ?x346 ?x354 ?x380) ?x391) ?x399)) (= ?x51 ?x399))))
 (let ((@x78 (trans (monotonicity (rewrite (= ?x30 ?x62)) (= ?x42 (+ ?x62 y00))) (rewrite (= (+ ?x62 y00) 0)) (= ?x42 0))))
 (let ((@x409 (trans (monotonicity @x78 @x403 (= ?x52 ?x404)) (rewrite (= ?x404 0)) $x53)))
 (let ((@x413 (trans (monotonicity (trans (monotonicity @x409 $x309) @x312 $x313) $x316) @x319 $x320)))
 (let ((@x418 (monotonicity (rewrite (= $x33 $x86)) (rewrite (= $x41 $x373)) (trans (monotonicity @x413 $x323) @x326 $x327) (= $x56 $x416))))
 (trans @x418 (rewrite (= $x416 false)) $x334)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 ))
 (let ((@x58 (asserted $x57)))
 (mp @x58 (trans (quant-intro (proof-bind ?x422) $x339) @x342 $x343) false))))))))))

(:max-memory   3.38
 :memory       3.08
 :mk-bool-var  5
 :num-allocs   917212
 :rlimit-count 247
 :time         0.01
 :total-time   0.01)
