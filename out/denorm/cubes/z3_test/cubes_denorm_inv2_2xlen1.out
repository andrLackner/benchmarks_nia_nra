unsat
((set-logic NIA)
(declare-fun n!0 () Int)
(declare-fun k!2 () Int)
(declare-fun m!1 () Int)
(declare-fun c!3 () Int)
(proof
(let ((?x354 (+ 1 n!0)))
 (let (($x341 (<= ?x354 0)))
 (let ((?x386 (* k!2 k!2)))
 (let ((?x298 (* m!1 m!1)))
 (let ((?x169 (* (- 9) (* n!0 c!3))))
 (let ((?x299 (* (- 27) c!3)))
 (let ((?x366 (* (- 32) k!2)))
 (let ((?x310 (* (- 5) m!1)))
 (let ((?x131 (* 9 n!0)))
 (let ((?x135 (+ 13 ?x131 (* (- 9) (* n!0 k!2)) ?x310 ?x366 ?x299 ?x169 ?x298 (* 2 (* m!1 k!2)) ?x386)))
 (let ((?x382 (+ k!2 c!3)))
 (let ((?x392 (+ m!1 k!2)))
 (let ((?x308 (+ 6 m!1)))
 (let ((?x183 (* ?x354 ?x354 ?x308 ?x308 ?x308 ?x392 ?x392 ?x392 ?x382 ?x382 ?x382 ?x135)))
 (let (($x318 (>= ?x183 0)))
 (let (($x436 (not $x318)))
 (let (($x367 (<= ?x183 0)))
 (let ((?x483 (* (- 1) k!2)))
 (let ((?x172 (* n!0 k!2)))
 (let ((?x328 (+ (* 2 n!0) ?x172 ?x483 (* (- 3) c!3))))
 (let (($x238 (<= ?x328 (- 1))))
 (let (($x333 (= ?x328 (- 1))))
 (let (($x376 (= ?x183 0)))
 (let (($x182 (not $x376)))
 (let ((?x301 (+ (* 3 n!0) ?x483 (* 3 (* n!0 n!0)))))
 (let (($x233 (= ?x301 (- 1))))
 (let ((?x329 (+ ?x131 (* (- 5) k!2) (* (- 18) c!3) ?x169 ?x386)))
 (let (($x361 (= ?x329 (- 4))))
 (let ((?x97 (+ (* 6 n!0) (* (- 1) m!1))))
 (let (($x113 (= ?x97 (- 6))))
 (let (($x371 (and $x113 $x361 $x333 $x233 $x182)))
 (let ((?x229 (+ 13 ?x299 ?x366 ?x310 ?x131 ?x386 (* (- 9) (* k!2 n!0)) (* (- 9) (* c!3 n!0)) (* 2 (* k!2 m!1)) ?x298)))
 (let ((?x435 (+ c!3 k!2)))
 (let ((?x434 (+ k!2 m!1)))
 (let (($x243 (= (* ?x354 ?x354 ?x308 ?x308 ?x308 ?x434 ?x434 ?x434 ?x435 ?x435 ?x435 ?x229) 0)))
 (let (($x337 (= (+ (* 3 c!3) k!2 (* (- 2) n!0) (* (- 1) (* k!2 n!0))) 1)))
 (let ((?x320 (+ (* 18 c!3) (* 5 k!2) (* (- 9) n!0) (* (- 1) ?x386) (* 9 (* c!3 n!0)))))
 (let (($x90 (and (= (+ m!1 (* (- 6) n!0)) 6) (= ?x320 4) $x337 (= (+ k!2 (* (- 3) n!0) (* (- 3) (* n!0 n!0))) 1) (not $x243))))
 (let (($x428 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x421 (* (- 5) m)))
 (let ((?x476 (+ 13 (* (- 27) c) (* (- 32) k) ?x421 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x481 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let (($x125 (= (* ?x336 ?x336 ?x481 ?x481 ?x481 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x476) 0)))
 (let (($x293 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x255 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x207 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) ?x49) (* 9 (* c n)))))
 (let (($x203 (= ?x207 4)))
 (let (($x119 (= (+ m (* (- 6) n)) 6)))
 (and $x119 $x203 $x255 $x293 (not $x125)))))))))))))))))) :qid k!34))
 ))
 (let (($x213 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x421 (* (- 5) m)))
 (let ((?x345 (* (- 18) c)))
 (let ((?x408 (+ 13 ?x345 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x421 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x481 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let (($x447 (= (* ?x336 ?x336 ?x481 ?x481 ?x481 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x408) 0)))
 (let (($x289 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x173 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x332 (= (+ ?x345 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x119 (= (+ m (* (- 6) n)) 6)))
 (and $x119 $x332 $x173 $x289 (not $x447)))))))))))))))) :qid k!34))
 ))
 (let ((?x267 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x421 (* (- 5) m)))
 (let ((?x476 (+ 13 (* (- 27) c) (* (- 32) k) ?x421 ?x48 ?x49 (* (- 9) (* k n)) (* (- 9) (* c n)) (* 2 (* k m)) (* m m))))
 (let ((?x68 (+ c k)))
 (let ((?x72 (+ k m)))
 (let ((?x481 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let (($x125 (= (* ?x336 ?x336 ?x481 ?x481 ?x481 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x476) 0)))
 (let (($x293 (= (+ k (* (- 3) n) (* (- 3) (* n n))) 1)))
 (let (($x255 (= (+ (* 3 c) k (* (- 2) n) (* (- 1) (* k n))) 1)))
 (let ((?x44 (* 5 k)))
 (let ((?x40 (* 18 c)))
 (let ((?x207 (+ ?x40 ?x44 (* (- 9) n) (* (- 1) ?x49) (* 9 (* c n)))))
 (let (($x203 (= ?x207 4)))
 (let (($x119 (= (+ m (* (- 6) n)) 6)))
 (let (($x389 (and $x119 $x203 $x255 $x293 (not $x125))))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x345 (* (- 18) c)))
 (let ((?x408 (+ 13 ?x345 (* (- 23) k) (* (- 9) (* ?x336 ?x68)) ?x421 ?x48 ?x78)))
 (let (($x447 (= (* ?x336 ?x336 ?x481 ?x481 ?x481 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x408) 0)))
 (let (($x289 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x173 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x332 (= (+ ?x345 (* (- 9) (* n c)) (* (- 5) k) ?x48 ?x49) (- 4))))
 (let (($x228 (and $x119 $x332 $x173 $x289 (not $x447))))
 (rewrite (= $x228 $x389))))))))))))))))))))))))))))
 ))
 (let (($x86 (exists ((c Int) (k Int) (m Int) (n Int) )(! (let ((?x70 (+ n 1)))
 (let ((?x80 (+ m 6)))
 (let ((?x72 (+ k m)))
 (let ((?x68 (+ c k)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let ((?x81 (* (+ ?x76 (* 9 ?x70) ?x78) ?x68 ?x72 ?x72 ?x80 ?x68 ?x68 ?x72 ?x80 ?x80 ?x70 ?x70)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x48 (* 9 n)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x81 0)))))))))))))))))) :qid k!34))
 ))
 (let ((?x217 (lambda ((c Int) (k Int) (m Int) (n Int) )(let ((?x72 (+ k m)))
 (let ((?x78 (* ?x72 ?x72)))
 (let ((?x48 (* 9 n)))
 (let ((?x421 (* (- 5) m)))
 (let ((?x345 (* (- 18) c)))
 (let ((?x408 (+ 13 ?x345 (* (- 23) k) (* (- 9) (* (+ 1 n) (+ c k))) ?x421 ?x48 ?x78)))
 (let ((?x68 (+ c k)))
 (let ((?x481 (+ 6 m)))
 (let ((?x336 (+ 1 n)))
 (let (($x447 (= (* ?x336 ?x336 ?x481 ?x481 ?x481 ?x72 ?x72 ?x72 ?x68 ?x68 ?x68 ?x408) 0)))
 (let (($x289 (= (+ (* 3 (* n n)) (* (- 1) k) (* 3 n)) (- 1))))
 (let (($x173 (= (+ (* (- 3) c) (* n k) (* (- 1) k) (* 2 n)) (- 1))))
 (let (($x332 (= (+ ?x345 (* (- 9) (* n c)) (* (- 5) k) ?x48 (* k k)) (- 4))))
 (let (($x119 (= (+ m (* (- 6) n)) 6)))
 (let (($x228 (and $x119 $x332 $x173 $x289 (not $x447))))
 (let ((?x70 (+ n 1)))
 (let ((?x80 (+ m 6)))
 (let ((?x76 (- (- (- (* 4 1) (* 18 ?x68)) (* 9 ?x68 ?x70)) (* 5 ?x72))))
 (let ((?x81 (* (+ ?x76 (* 9 ?x70) ?x78) ?x68 ?x72 ?x72 ?x80 ?x68 ?x68 ?x72 ?x80 ?x80 ?x70 ?x70)))
 (let (($x67 (= (+ (- (+ 1 (* 3 n n)) k) (* 3 n)) 0)))
 (let ((?x59 (* 2 n)))
 (let (($x61 (= (+ (- (+ (- 1 (* 3 c)) (* k n)) k) ?x59) 0)))
 (let ((?x49 (* k k)))
 (let ((?x44 (* 5 k)))
 (let ((?x47 (- (- (- (* 4 1) (* 18 c)) (* 9 c n)) ?x44)))
 (let (($x85 (and (= (- (+ (* (- 6) 1) m) (* 6 n)) 0) (= (+ ?x47 ?x48 ?x49) 0) $x61 $x67 (or (not (= ?x81 0))))))
 (rewrite (= $x85 $x228)))))))))))))))))))))))))))))
 ))
 (let ((@x87 (asserted $x86)))
 (let ((@x459 (mp (mp @x87 (quant-intro (proof-bind ?x217) (= $x86 $x213)) $x213) (rewrite (= $x213 $x213)) $x213)))
 (let ((@x194 (mp~ (mp @x459 (quant-intro (proof-bind ?x267) (= $x213 $x428)) $x428) (sk (~ $x428 $x90)) $x90)))
 (let ((@x486 (mp @x194 (rewrite (= $x90 $x371)) $x371)))
 (let ((@x326 (and-elim @x486 $x333)))
 (let ((@x444 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x333) $x238)) @x326 $x238)))
 (let (($x231 (>= ?x328 (- 1))))
 (let ((@x184 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x333) $x231)) @x326 $x231)))
 (let (($x232 (<= ?x329 (- 4))))
 (let ((@x321 (and-elim @x486 $x361)))
 (let ((@x446 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x361) $x232)) @x321 $x232)))
 (let (($x223 (>= ?x329 (- 4))))
 (let ((@x129 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x361) $x223)) @x321 $x223)))
 (let (($x245 (<= ?x97 (- 6))))
 (let ((@x342 (and-elim @x486 $x113)))
 (let ((@x474 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x113) $x245)) @x342 $x245)))
 (let (($x242 (>= ?x97 (- 6))))
 (let ((@x357 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x113) $x242)) @x342 $x242)))
 (let (($x221 (<= ?x301 (- 1))))
 (let ((@x324 (and-elim @x486 $x233)))
 (let ((@x413 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x233) $x221)) @x324 $x221)))
 (let (($x369 (>= ?x301 (- 1))))
 (let ((@x479 (unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x233) $x369)) @x324 $x369)))
 (let (($x209 (<= ?x308 0)))
 (let (($x2422 (not $x209)))
 (let (($x607 (<= n!0 (- 2))))
 (let (($x1787 (not $x607)))
 (let (($x204 (>= ?x308 0)))
 (let (($x1514 (not $x204)))
 (let ((@x1611 (hypothesis $x1514)))
 (let (($x1638 (<= ?x392 0)))
 (let (($x1669 (not $x1638)))
 (let (($x168 (>= ?x392 0)))
 (let (($x153 (not $x168)))
 (let ((@x145 (hypothesis $x153)))
 (let ((@x612 ((_ th-lemma arith) @x145 @x474 @x1611 @x413 @x413 @x145 @x474 @x1611 @x413 @x145 @x474 false)))
 (let ((@x265 (unit-resolution (lemma @x612 (or $x168 $x204)) @x1611 $x168)))
 (let (($x208 (>= ?x382 0)))
 (let (($x1692 (not $x367)))
 (let ((@x1693 (hypothesis $x1692)))
 (let (($x134 (not $x208)))
 (let ((@x412 (hypothesis $x134)))
 (let ((@x1670 (hypothesis $x1669)))
 (let ((@x2044 ((_ th-lemma arith) @x1693 @x412 @x1670 @x1611 @x474 @x1611 @x357 @x474 @x479 @x413 @x357 @x474 @x479 @x413 @x357 @x474 @x129 @x446 @x184 @x444 @x184 @x444 @x479 @x413 false)))
 (let ((@x1746 (unit-resolution (lemma @x2044 (or $x1638 $x367 $x208 $x204)) @x412 @x1693 @x1611 $x1638)))
 (let ((@x127 ((_ th-lemma arith) @x145 @x145 @x145 @x412 @x412 @x145 @x357 @x474 @x479 @x413 @x479 @x413 @x184 @x444 @x479 @x413 @x357 @x474 @x479 @x413 @x129 @x446 @x479 @x413 false)))
 (let ((@x2412 ((_ th-lemma arith farkas 1 1 1) @x1693 (unit-resolution (lemma @x127 (or $x168 $x208)) @x412 $x168) @x1746 false)))
 (let (($x398 (<= ?x382 0)))
 (let (($x616 (not $x398)))
 (let ((@x2394 (hypothesis $x616)))
 (let ((@x2057 ((_ th-lemma arith) @x1670 @x2394 @x1611 @x474 @x1611 @x474 @x1670 @x357 @x474 @x479 @x413 @x479 @x413 @x184 @x444 @x357 @x474 @x479 @x413 false)))
 (let ((@x2398 (hypothesis $x208)))
 (let (($x2378 (>= ?x354 0)))
 (let (($x2392 (not $x2378)))
 (let ((@x2406 (unit-resolution (lemma ((_ th-lemma arith farkas 1 6 1) @x474 (hypothesis $x2378) @x1611 false) (or $x2392 $x204)) @x1611 $x2392)))
 (let ((@x2401 (lemma ((_ th-lemma arith farkas 1 1 1) @x1693 @x2398 (hypothesis $x398) false) (or $x616 $x367 $x134))))
 (let (($x222 (>= ?x135 0)))
 (let ((@x381 ((_ th-lemma arith) (hypothesis (not $x222)) @x357 @x474 @x357 @x474 @x357 @x474 @x479 @x413 @x184 @x444 @x184 @x444 @x357 @x474 @x357 @x474 @x129 @x446 false)))
 (let ((@x391 (lemma @x381 $x222)))
 (let ((@x2397 (lemma ((_ th-lemma arith farkas 1 1 1 1 1 1) @x1693 @x391 @x2394 @x1670 (hypothesis $x2392) @x1611 false) (or $x398 $x367 $x1638 $x2378 $x204))))
 (let ((@x2408 (unit-resolution @x2397 (unit-resolution @x2401 @x1693 @x2398 $x616) @x1693 @x1670 @x2406 @x1611 false)))
 (let ((@x2415 (unit-resolution (lemma @x2408 (or $x367 $x1638 $x204 $x134)) @x1611 @x1670 @x2398 $x367)))
 (let ((@x2369 (unit-resolution ((_ th-lemma arith triangle-eq) (or $x376 $x1692 $x436)) (and-elim @x486 $x182) (or $x1692 $x436))))
 (let ((@x2417 ((_ th-lemma arith farkas 1 1 1) (unit-resolution @x2369 @x2415 $x436) @x2398 (unit-resolution (lemma @x2057 (or $x398 $x1638 $x204)) @x1611 @x1670 $x398) false)))
 (let ((@x2419 (lemma @x2417 (or $x204 $x134 $x1638))))
 (let ((@x1626 (unit-resolution @x2419 (unit-resolution (lemma @x2412 (or $x208 $x367 $x204)) @x1693 @x1611 $x208) @x1611 $x1638)))
 (let ((@x191 (unit-resolution (lemma ((_ th-lemma arith farkas 1 1 1) @x1693 @x265 @x1626 false) (or $x367 $x204)) @x1611 $x367)))
 (let ((@x433 (unit-resolution @x2369 @x191 $x436)))
 (let ((@x1681 (lemma ((_ th-lemma arith farkas 1 1 1) (hypothesis $x436) (hypothesis $x168) (hypothesis $x1638) false) (or $x1669 $x318 $x153))))
 (let ((@x158 (unit-resolution @x1681 @x433 @x265 $x1669)))
 (let ((@x1156 ((_ th-lemma arith farkas 1 1 1 1 1 1 1) @x433 @x391 (unit-resolution @x2419 @x158 @x1611 $x134) @x158 @x1611 @x474 @x1611 false)))
 (let ((@x1625 (lemma @x1156 $x204)))
 (let ((@x1789 (lemma ((_ th-lemma arith farkas 1 1 1 1) @x1693 (hypothesis $x204) @x357 (hypothesis $x607) false) (or $x1787 $x367 $x1514))))
 (let ((@x1620 (unit-resolution ((_ th-lemma arith assign-bounds 1/6 -1/6) (or $x607 $x2422 (not $x245))) (unit-resolution @x1789 @x1693 @x1625 $x1787) @x474 $x2422)))
 (let (($x402 (not $x341)))
 (let ((@x1622 (unit-resolution ((_ th-lemma arith assign-bounds 1 -1/6) (or $x209 $x2378 (not $x242))) @x357 (or $x209 $x2378))))
 (let ((@x1521 (unit-resolution @x1622 @x1620 $x2378)))
 (let ((@x1635 (unit-resolution (lemma ((_ th-lemma arith farkas 1 1 1) @x1693 @x1521 (hypothesis $x341) false) (or $x402 $x367)) @x1693 $x402)))
 (let (($x1423 (<= k!2 0)))
 (let (($x1418 (not $x1423)))
 (let ((?x338 (* n!0 n!0)))
 (let (($x420 (>= ?x338 0)))
 (let ((@x432 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x420)) false) $x420)))
 (let ((@x1612 ((_ th-lemma arith assign-bounds -3 -3 1) (or $x1418 $x341 (not $x420) (not $x221)))))
 (let ((@x1516 (unit-resolution ((_ th-lemma arith assign-bounds 1 6 -1) (or $x1669 (not $x245) $x2392 $x1423)) (unit-resolution @x1612 @x1635 @x432 @x413 $x1418) @x474 @x1521 $x1669)))
 (let ((@x458 (hypothesis $x402)))
 (let ((@x1613 (unit-resolution @x1612 @x458 @x432 @x413 $x1418)))
 (let (($x1634 (>= ?x386 0)))
 (let ((@x1344 ((_ th-lemma arith farkas -1/9 -2 1 1/9 13/9 1 1 1) @x446 @x412 @x458 (lemma ((_ th-lemma arith farkas 1) (hypothesis (not $x1634)) false) $x1634) @x1613 @x458 @x1613 @x412 false)))
 (let ((@x1322 (unit-resolution @x2401 (unit-resolution (lemma @x1344 (or $x341 $x208)) @x1635 $x208) @x1693 $x616)))
 (let ((@x1321 ((_ th-lemma arith) @x1693 @x1322 @x1516 @x1635 @x1620 @x479 @x413 @x479 @x413 @x184 @x444 @x479 @x413 @x357 @x474 @x479 @x413 @x479 @x413 @x357 @x474 @x129 @x446 @x184 @x444 false)))
 (let ((@x1469 (unit-resolution @x2369 (lemma @x1321 $x367) $x436)))
 (let (($x339 (<= ?x308 12)))
 (let (($x360 (not $x339)))
 (let ((@x346 (hypothesis $x436)))
 (let ((@x449 (hypothesis $x339)))
 (let ((@x352 ((_ th-lemma arith farkas 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1) @x346 @x474 @x458 @x129 @x184 @x449 @x479 @x474 @x458 @x449 @x357 @x446 @x444 @x432 @x413 false)))
 (let ((@x192 ((_ th-lemma arith gomory-cut 1/5 1/5) (unit-resolution (lemma @x352 (or $x360 $x318 $x341)) @x458 @x346 $x360) @x357 (>= n!0 1))))
 (let ((@x195 ((_ th-lemma arith) @x346 @x432 @x413 @x458 @x444 @x192 @x474 @x432 @x413 @x192 @x192 @x192 @x474 @x357 @x474 @x479 @x413 @x357 @x474 @x479 @x413 @x184 @x444 @x357 @x474 @x129 @x446 @x479 @x413 @x184 @x444 false)))
 (let ((@x2424 (lemma ((_ th-lemma arith farkas 1 1 1) @x346 (hypothesis $x204) (hypothesis $x209) false) (or $x2422 $x318 $x1514))))
 ((_ th-lemma arith farkas 1 1 1) @x1469 (unit-resolution @x1622 (unit-resolution @x2424 @x1469 @x1625 $x2422) $x2378) (unit-resolution (lemma @x195 (or $x341 $x318)) @x1469 $x341) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(:added-eqs                 146
 :arith-assert-diseq        57
 :arith-assert-lower        790
 :arith-assert-upper        756
 :arith-bound-prop          51
 :arith-branch-var          57
 :arith-conflicts           106
 :arith-eq-adapter          21
 :arith-fixed-eqs           187
 :arith-gcd-tests           779
 :arith-gomory-cuts         43
 :arith-grobner             129
 :arith-ineq-splits         57
 :arith-max-min             6042
 :arith-nonlinear-bounds    154
 :arith-nonlinear-horner    1463
 :arith-num-rows            23
 :arith-offset-eqs          15
 :arith-patches             124
 :arith-patches_succ        10
 :arith-pivots              2284
 :arith-pseudo-nonlinear    108
 :arith-row-summations      20557
 :arith-tableau-max-columns 66
 :arith-tableau-max-rows    23
 :conflicts                 120
 :decisions                 734
 :del-clause                304
 :final-checks              362
 :max-memory                20.06
 :memory                    19.31
 :minimized-lits            24
 :mk-bool-var               624
 :mk-clause                 660
 :num-allocs                4315285
 :num-checks                1
 :propagations              1170
 :restarts                  1
 :rlimit-count              1018159
 :time                      0.19
 :total-time                0.20)
